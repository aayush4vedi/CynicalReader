ID,Source,Tag_Code,Tag_Name,Title,Url,ProcessdedTitle,WeightedContent,Content
1,Lobsters,mobile,Mobile Development,Don't design for mobile,https://mattanddesign.com/dont-design-for-mobile/,nt design mobile,device capability viewport safe area correct way cs breakpoints pointer pointer medium query pointer api keyboard keyboard alternative device sensor hardware browser api haptic feedback ambient light sensor network speed navigatoronline currently online fetch medium known size network information api speed difference wifi mobile,mobilefirst solution constraint device early day mobile computing revolution back made lot sense even day work well lot situation though invariably create two category tend carry lot assumption mobile touch desktop cursormobiles slow internet desktop fast internetmobile device slow desktop device assumption start create issue today device landscapethe latest mobile device far powerful average laptop desktop hybrid device work touch mouse tablet mobile desktop new category altogether device capabilitiesthe device capability approach type progressive enhancement initially target le capable device enhance become capable many way mobilefirst attempting lesser effect let explaincanva product work daytoday pretty complex beast long ago working selection handle appear element selectedpreviously version desktop version made thing touch worked pretty nicely part though around time also developing something turned canva design lab measure desktop large screen connected wifi sits one yet screen touch enabled categorisation meant large touchscreen using desktop version selection frame version optimised use mousewe targeting mobile desktop instead targeting particular capability device particular case would pointer essentially map touch mousethat pretty extreme example plenty situation encounter similar issue interactive example practical solution dealing issuesviewportsize viewport frequently considered designing mobilefirst commonly targeted attribute viewport width attribute including height aspect ratio device orientation ie portrait landscapethe first thing note viewport nt necessarily equal screen size occasionally case ui taking space window nt using entire screen reason like safe area take current situation width viewport px wide screen pxheight viewport px high screen pxaspect ratio viewport aspect ratio screen coverage viewport cover screentry resizing browser see impact valuesa common way design different size device use breakpoints mistake make breakpoints though placing point exactly match common device size etc becomes bit maintenance nightmare september roll around apple decides release new currently different sized ipads saleif take step back look across device market today pretty apparent cluster around common device tablet laptop desktop gap cluster place upiphone upiphone l iphone plus l pixel l note l ipad pro upipad l ipad pro l ipad pro air go upmacbook pro pro fantastic article david gilbertson correct way cs breakpoints cover topic depthpointersnext pointer typical interpretation touch v even reflected pointer medium query reality spectrum wacommousetrackpadsmartphoneplane screenswhen come pointer accuracy platform suggestion minimum target size good place start though factor worth taking accounta good example car mode apps like spotify map even though device context quite different combination focus road device used away typical general bump jump get driving mean much harder accurately tap element screen account car mode increase size commonly used action even type screen issue capacitive touchscreen used modern smart phone far greater accuracy type touchscreen sure struggled screen plane atm beforeas little experiment try dragging around different circle may notice take effort even impossible move around material hig pointer support simple tap click event though support advanced right click double tap swipeoften device specifically size device used detect support event say mobile device touch right lot laptopslots device support touch nt considered mobile device many support several different pointer latest ipad update includes first class support mouse trackpadsa far accurate method use one various pointer api reveal lot information current pointer type click tap button see say pointer detect pointerthe ideal solution design suit need least capable pointer necessary progressively enhancing accuracy capability improveit worth also noting whilst advanced event available across every device often event interaction serve suitable alternative keep mind use casemousetouchtertiary actionsright clicklong pressselectiondouble clicktwo finger tapzoomdedicated uipinchkeyboardthe keyboard really two option available virtual keyboard physical keyboard device support one though growing number device support never time ipad instance wo nt show virtual keyboard bluetooth smart keyboard connected physical keyboard nt pose much issue though virtual keyboard take valuable screen real estate appear unfortunately time nice way detect existence virtual keyboard accurately measure size resultant keyboard hacky detecting change size keep mind solution unreliable tested across different device platformsi originally mention two keyboard option though strictly true want go weird wonderful rabbit hole good guide keyboard alternativesdevices sensor hardwaredevices sensor hardware thing start get interesting include thing like gyroscope gps haptic engine camera fingerprint sensor ambient light sensorsthe usage sensor hardware range subtle enhancement user small buzz feedback haptic engine right opening entire product category case gpsthere lot different api access sensor hardware within browser one likely come across geolocation api used locate current position api support much position though click tap button find fetch locationunfortunately support many api nt great across various platform browser proceed caution active development worth keeping date available browser api interesting upcoming option haptic feedback ambient light sensorsnetwork speedsnetwork speed√¢ nt necessarily device constraint greatly impact used different way detecting network speed varying level accuracythe simplest check see online navigatoronline api return boolean checking whether connected network notyou currently online try turning connection possible detect speed getting browser fetch medium known size measuring elapsed time also experimental network information api provides even detail thing connection typesadly neither approach particularly accurate widely supported best approach take stance network speed slow unreliable send much necessary always compress file assetsit also worth clarifying mobile connection nt assure slow speed wired wifi connection nt assure fast speed relative speed difference wifi mobile connection varies drastically around world wifi fasterchinarussiasingaporesouth koreaukusasimilar speedsbelgiumbrazilfinlandhungarynorwaynew zealandmobile fasteraustraliaegyptgreecesouth africaturkeyqatarthere also situational factor impact sure used flaky wifi connection airport cafe beforeand intent mobilefirst right one average site app outcome mobilefirst approach v device capability approach fairly much samethough device landscape continues converge categorisation continue blur introduce interactivity complex feature site singular approach start break downit slight mindset shift two approach significant one design touchscreen work mouse optimise performance slow connection work faster connection design small screen least work larger screensince started approach canva meant le code le design le far greater outcome something think get behind
2,Lobsters,mobile,Mobile Development,In search of the perfect pocket device,https://isene.org/2020/08/Nerding.html,search perfect pocket device,hp calculator collector vim lot nice program ericsson psion series zero terminal samsung ultra small foldable bluetooth keyboard hyperlist ruby amar tool package latex ssh weechat termux xsdl userland urxvt zsh gimp libreoffice http,lockdown geekery searching perfect pocket computer setup hp calculator collector since couple decade passion pocket computing power really long battery life amazing calculator month battery life still calculator also want real computing power ability run vim editing text decent keyboard much goody cram started quest perfect pocket computer reviving old early pocket computer running do vim running do device run lot nice program yes slow cool search better keyboard got ericsson psion series pocket computer running hoping make boot linux possible turn cf card reader device flaky kept searching forum later stumbled upon interesting project zero terminal talking raspberry pi zero packed sort port expansion capability waiting patient wait minute always carry samsung ultra anyway serve need true battery life suck cell phone always charged problem small foldable bluetooth keyboard massive computing power time added benefit easily use monitor tv screen via builtin smart view real kicker run vim galore even hyperlist plugin run ruby whole amar tool package latex ssh weechat name lot terminalconsole program readily available via termux x server app xsdl userland app fact install full linux distro fire android phone full glory terminal graphical software run session urxvt terminal running zsh gimp libreoffice whatnot nerdvana via looking zero terminal found answer right pocket quite detour ending bliss link post http
3,Lobsters,mobile,Mobile Development,A Best in Class iOS App,https://swiftjectivec.com/A-Best-in-Class-App/,best class io app,jordan morgan thing quantify help make app great accessibility platform technology user experience design app store presence accessibility first class rotor voice gesture escape magic tap threefinger scroll increment decrement voice control appropriate element add necessary subtitle audio track uiaccessibilitylocationdescriptors vision hearing physical motor literacy learning io technology tightly integrated lplinkview universal link touch face id user experience top mind native two finger drag edit gesture support field token viewdidappear determinate indeterminate view hiddenpreviewsbodyplaceholder background task compact environment design drip polish app store page logistical asset thoughtfully crafted wrapping,indie dev diary present written jordan morgan feb updated jul get public github issue version list updated reflect io long part industry watched incredible welldeserving apps take home apple design award endgame year ago set create list succinctly answer one question thing quantify help make app great believe created list help answer question might look different one mine attempt take emotion mostly opinion want capture apple say great people may define though opinion assuredly value give ada apple quick brief methodology behind created first importantly read io human interface guideline annually top bottom gm release upcoming version io list applies primarily latest version io ipados smoke fire apple said record great app include whatever thing interaction thing clandestine trade secret rather thing apple apple design evangelist publicly gave seal approval lastly remember largely yesno list part equation make truly great app innovation technology user experience come together enriching people day day interaction apps knowing us extremely well always got item two belongs list mean create pull request get added visiting link bottom post five section cover accessibility designing everyone right thing best apps exceptionally well platform technology apple love apps utilize new apis great effect shoehorning feature looking product seeing utilize io around user experience make people think app core function act thesis paper ux body support design explaining design hard know good one see section list thing apps thoughtfully created app store presence far nascent category tracking list short includes best practice app store accessibility first class voice fully supported rotor control implemented including relevant heading using screen curtain yield experience usable par regular app using voice voice gesture overridden necessary escape twofinger zshaped gesture dismisses modal dialog go back one level navigation hierarchy func accessibilityperformescape bool magic tap twofinger doubletap performs mostintended action func accessibilityperformmagictap bool threefinger scroll threefinger swipe scroll content vertically horizontally func accessibilityscroll direction uiaccessibilityscrolldirection bool increment onefinger swipe increment value element func accessibilityincrement decrement onefinger swipe decrement value element func accessibilitydecrement voice control also supported appropriate accessibilityuserinputlabels set needed app respect following setting including bold text high contrast cursor reduce transparency dark mode reducing motion presenting new controller set voice cursor appropriate element topmost left element make sense uiaccessibilitypostnotification screenchangednotification myheading context considering use accessibilityignoresinvertcolors image video punctuation spoken accessibility text use attributed string set accessibilityspeechpunctuation true group content logically using accessibility container efficient navigation adaptive support device multitasking scenario elegantly fully support dynamic type readable text us readablecontentguide color blind support color contrast ratio smart invert color support app responds well color inversion bar button landscapeimagephone largecontentsizeimage property set control grouped way make navigation trivial shouldgroupaccessibilitychildren already use system vended item common bar button quick action tab navigation bar item ie save done etc glyph accessibility image set ie adjustsimagesizeforaccessibilitycontentsizecategory includes closed caption audio description image icon alternative text set full rotor control support provided via uiaccessibilitycustomaction leading trailing margin used constraint support left right language got ui inherit uiview uicontrol leverage uiaccessibilityelement make accessible needed include video add necessary subtitle audio track user interface appears flawlessly tested using double length pseudolanguages using nsshownonlocalizedstrings yield result support drag drop uiaccessibilitylocationdescriptors set also leverage accessibilitydragsourcedescriptors accessibilitydroppointdescriptors modally presented view clear button available dismiss instead relying solely swipe gesture imessage sticker extension accessibility label provided magic tap supported app common functionality us cfbundlespokenname app name could potentially mispronounced system e would coolapp twenty three request permission io truly need hig request clearly related current context help people understand app intention end day considering building accessibility technology deal mac catalyst alternate pointer action slow key larger text header pointer speak screen guided access typing feedback full keyboard access assistive touch reduce motion voice control reachability live listen rtttty accessibility keyboard zoom magnifier voiceover sticky key switch control speak selection display accommodation audio description mouse key hover text large text braille dwell main thing address broadly vision hearing physical motor literacy learning lastly running entire app accessibility inspector produced warning turning screen curtain navigate app work flawlessly io technology tightly integrated contextual menu integrated long press showing preview appropriate find good balance include many option overwhelming use glyph reinforce action meaning edit menu used right place conflict context menu opt pull style menu action sheet use reduce modality throughout app keep focus squarely content action sheet still used confirm destructive action provides enough friction ensure user really want perform deletion also include cancel menu item canceling implicit action system provides tapping outside menu bound use menu disambiguation navigation selection showing option offer menu present power user functionality long pressing bar button necessary addition providing standard action tapping fully support dark mode multiple space scene support ipados leverage idea primary window versus auxiliary window one provides access full feature set help user complete focused singular task usually closed afterwards full multitasking support home screen quick action support offer sign sign apple included spotlight search indexing support custom uipointerinteraction support app need interface support cursor support correctly force interaction paradigm another ie touch viable pointer keyboard viceversa use correct content effect consistently highlight lift hover effective energy management ie support low power mode reacts keyboard shortcut added app could used almost completely solely use keyboard modifier key along mouse pointer click supported support handoff mac applicable meaningful extension included app whether via share extension action extension file provider sticker pack custom keyboard etc extension carefully thought example widget mini app strives provide glanceable actionable information table collection view cell make sense focus selectionfollowsfocus set callback url supplied documented apps may integrate xcallbackurl uimenucontroller support necessary via overriding uiresponderstandardeditactions supply custom icon enhance user personal connection app want display link consider using lplinkview deep siri intent support donate shortcut action user already taken suggest shortcut user shortcut apps section shortcut app suggesting invoiceshortcutcenter integrate wind make sense support shortcut include ui view also include intent phrase help coach user alternate app name included appropriate watchface support make sense document sharing supported via file provider drag drop first class support fully fleshed nsitemprovider exists custom object editable control data entry also accept content via drop used reordering app support drag make new window data could copied moved inserted duplicated also via drag drop make sense data shared via airdrop natural language processing support necessary tab bar image vector pdf image corresponding size included ensure adapt correctly vended accessibility modal properly displayed live photo animate force touched utilize phlivephotoimageview playback system specific feature live photo arkit experience use system badge indicate available ie live photo arkit badge make sense support printing via uiprintinteractioncontroller call uigraphicsbeginimagecontextwithoptions uigraphicsimagerenderer used instead universal link supported especially app content available online need secure data opt user touch face id vend useful interaction current context via uiactivity uiactivityviewcontroller relevant app supply app clip use system capability arkit lean platform defined convention help user get started example get arkit experience started typically use arcoachingoverlayview instead rolling solution finally running analyze function xcode yield error warning suggestion user experience top mind support native undo redo action typically shaking system defined gesture content type text view text field included correct keyboard type used current context keyboard language identifier integrated correctly support two finger drag edit gesture table collection view using custom input view place keyboard provide audible tap noise using uideviceplayinputclick got customized text input support uiscribbleinteraction customized back button image navigation controller also set backindicatortransitionmaskimage searching capability support field token handle keyboard undocked ipad view constrained via inputaccessoryview data quantifiable data transfer occurring progress indicator used activity indicator localized territory released text tends truncate never clip rather always readable tappable interface element least point entire app binary megabyte source based multitude data point delete action always followed confirmation prompt app store rich information file like keynote presentation us quick look api preview robust nsuseractivity support state restoration handoff drag drop creating new window core spotlight donating siri inintent us correct audio setting responds audio interruption gracefully audio played within custom edit option supported text image selected appropriate user provided ample time form opinion app request rating opt builtin skstorereviewcontroller ask launch screen branding free closely resembles first screen app displaying video using avplayerviewcontroller player display content original aspect ratio include extra padding around frame would cause video appear smaller fullscreen fittoscreen mode opening link could lead another app web view sfsafariviewcontroller try calling uiapplication openurl uiapplicationopenurloptionuniversallinksonly option first table view deselect selected row viewdidappear popping back loading data let user know progress operation either using determinate indeterminate view notification supply value hiddenpreviewsbodyplaceholder detail view also consider using short memorable sound make sense notification using unnotificationsound supply detail view expand context notification user accomplish task within notification without open app good thing also let user edit notification preference within app uitextinputassistantitem item used support common task ipad home within shortcut bar performing crud operation table collection view opt animate change using diffable datasource instead reloaddata testing leak freed memory part workflow consuming unnecessary amount memory power hamper everyone long running task keep ui free date using background task using system material accompany content contained within matching vibrancy effect ie mix match different semantic effect tend use system semantic color instead hard coding custom color adapt light dark mode increased contrast transparency reduction scenario also use semantic color consistent way redefine meaning ie use link label color defer providing custom gesture towards edge screen appropriate viewing medium override preferredscreenedgesdeferringsystemgestures needed user interface element constrained keyboard frame handle situation may undocked floating split support pencilkit include undo redo button compact environment additionally ensure systemwide double tap gesture modify content customized app navigation clear foolproof use either flat hierarchical contentux driven navigation use sidebar flatten information hierarchy make sense example app several folder playlist similar collection use tab bar aim item need tab likely going wrong direction modality used sparingly clearly brings back dismissed design also considers text app voice messaging part design experience stay consistent mix playful error message juxtaposed serious one io technology technical term made anyone understand ie use scan tag instead activate nfc reading session similar design drip polish correct system margin used throughout app hard coded one used ie layoutmarginsguide safearealayoutguide etc haptic feedback used throughout system complement user interaction overdone right haptics used right time example use selection selection change instead something like rigid example often accompany visual auditory feedback utilize sf symbol common io glyph apps running io later show dedicated one system apis ie glyph exclusively icloud usage use custom one custom glyph adapt well environment controller transition feel natural fluid great example calendar photo opt vector asset combat differing resolution avoid blurry asset content always focus constantly challenge true throughout development cycle particular specific user experience guideline followed segment control used toolbars five le option toolbars tab bar screen destructive action top choice action sheet alert used ideally two choice title punctuation avoid using yes choice need two choice opt action sheet picker height equal list value progress indicator bar unfolded portion track clear otherwise colored denote amount work left network activity indicator shown network request last second popover iphones avoided discard work user actively tap cancel button example someone tap outside popover work saved switch exclusively used within table list style collection view row page control always centered bottom screen aspire ship apple platform io iphone ipad watchos tvos macos animation tasteful reinforce introduce action confusing likely mimic real physical law general reduce modality possible keep focus content supply highresolution asset image use right asset format given scenario png icon bitmapraster artwork jpeg photo pdf glyph vector artwork controller specific configuration thoughtfully implemented status bar hidden exchange equal value pointer locking occurs boost experience home indicator hidden rich medium experience full width button respect uikit margin extend edge edge screen color used denote value purpose provide mixed signal example enabled disabled control colored red triangle conveys problem red used everywhere else app create rich medium apps apps primarily used reading watching provide sensible value uiwhitepointadaptivitystyle adjust along true tone handle color management well ensure color display fine srgb device app voice use consistently example app strike formal tone display error message text overtly place humorous opt lean system font better support size improve legibility consistency custom font provides value direct purpose used system font also work weight dynamic type size lastly app jank free know mean app store page logistical asset thoughtfully crafted app store preview video used keywords category carefully researched link privacy policy provided supported territory localized app icon follows golden grid likely include brand primary color well embrace simplicity conveys app main idea supply size needed spotlight setting etc otherwise io shrink app store icon ideal wrapping love checklist quality checklist constantly evolving one main reason created spend stack see could get state meet exceeds almost every single bullet point certainly quality take time nailed everything list working towards year close meeting item listed stress also mean probably shipped take piece piece work way wise honeyloving bear said get going walking away app might lack polish better ever spend time giving next time
4,Lobsters,mobile,Mobile Development,The Promise vs Reality of SwiftUI Multiplatform,https://write.as/angelo/the-promise-vs-reality-of-swiftui-multiplatform,promise v reality swiftui multiplatform,last week post tweeted letdown swiftui illustrated broken button reality multiplatform via r,happy august friend update last week post swiftui app writefreely work progressed pretty well shared code last week point got preliminary ui display list post filter collection tapping post load editor make change title content iphone ipad also new post button create new draft iphone ipad well pull chair let chat little bit gap promise reality multiplatform swiftui apps working post tweeted managed flesh key ui feature app across iphone ipad mac day thanks swiftui live preview xcode show view look like next code update realtime code stated building native app speed iteration ever encountered building web looking html cs looking react latest iteration look like far iphone ipad installed macos aka big sur beta able build mac app compare way final ui plenty work still done including replacing unusual picker view selecting collection proper sidebar adapting spacing little better mac app ca nt preview anything mac target even xcode upgrade machine macos beta one thing helpful moving quickly swiftui declarative nature let specify semantics element placement view letting framework figure mean iphone v ipad v mac great example focus developer experience dx toolbaritemplacement api let semantically state particular item add toolbar primaryaction status element used texteditor view place post status badge status area publish button primaryaction area see screenshots shared element placed differently depending whether shown iphone ipad mac nt write single line code customize difference letdown swiftui illustrated broken button life swiftui rose newdraft feature nt quite working fully yet building iphone ipad version app tapping newdraft button list post work beautifully slide new draft list open text editor next great essay thrilled working end workday friday finished installing big sur beta mac morning excited see everything looked worked mac app expected little ui refinement list post example need healthy dose padding otherwise figured similar experience least ipad app mostly picker replaced popup menu choose collection narrow list post tap post list load text editor ready change post status change instantly update badge toolbar post list tried create new draft mac clicking newdraft button appears interestingly enough next poststatus badge screenshot nothing thing error thrown view drawn nothing reality multiplatform suppose nt use word letdown multiplatform panacea reality app expects different thing iphone ipad mac issue facing newdraft button nt failing swiftui paradigm mac app treat navigation v button v instantiating new window different iphone nt structured thing way framework expects fine need spend little time adapting mac client would liked got say despite couple little issue need fix really impressed much worked right box extra work part nativeapp development may yet happen pace web development closer ever enter email subscribe update also subscribe via r follow angelo writeas mastodon
5,Lobsters,mobile,Mobile Development,5G Just Got Weird,https://spectrum.ieee.org/tech-talk/telecom/standards/5g-release-16,got weird,,
6,Lobsters,mobile,Mobile Development,Apple Security Research Device Program,https://developer.apple.com/programs/security-research-device/,apple security research device program,applying program initial application period end august applicant receive response end august apply,applying program start application sign apple id associated apple developer program membership enrolling organization need authority accept legal agreement behalf organization need list name everyone access security research device approved apple individual acknowledge responsibility initial application period end august receive response end august apply
7,Lobsters,mobile,Mobile Development,A few thoughts about Signal‚Äôs Secure Value Recovery,https://blog.cryptographyengineering.com/2020/07/10/a-few-thoughts-about-signals-secure-value-recovery/,thought signal secure value recovery,secure value recovery see article signal matter signal technology foundation signal protocol facebook messenger whatsapp surprisingly nonobvious right scanning qr code thirtydigit encryption key begun attract larger user base secure value recovery secure value recovery strong dictionary attack software guard extension update update apple google hardware security module happens sgx secure random manual highentropy phrase edit sgx done far plundervolt inject malicious code scariest attack speculative execution big deal protect account hijacking blocking access entire app addendum signal say,past several month signal rolling raft new feature make app usable one feature recently raising bit controversy user contact list backup feature based new system called secure value recovery svr svr feature allows signal upload contact signal server without ostensibly even signal able access new signal approach created trauma security people due fact recently enabled without particularly clear explanation shorter summary issue see article post want delve little bit deeper decision made concerned signal try mitigate concern signal matter familiar signal opensource app developed moxie marlinkspike signal technology foundation signal received lot love security community basically two reason first signal app served sort technology demo signal protocol fundamental underlying cryptography power popular apps like facebook messenger whatsapp billion user second signal app popular securityminded people mostly app relatively smaller technical user base tended towards nocompromises approach security experience wherever usability concern come conflict security signal historically chosen cautious safer approach compared commercial alternative like whatsapp strategy obtaining largescale adoption lousy one goal build really secure messaging product impressive let give example encrypted messenger like whatsapp apple imessage routinely back text message content contact list remote cloud server backup undo much strong security offered endtoend encryption since make much easier hacker government obtain plaintext content disable backup surprisingly nonobvious right least larger service justify backup default pointing lesstechnical user tend worried lost message history theoretical cloud hack signal contrast taken much cautious approach backup june year finally added way manually transfer message history one iphone another transfer involves scanning qr code android cloud backup possible user willing write thirtydigit encryption key probably really annoying many user absolutely fantastic security similarly since signal relies entirely phone number contact database point admittedly many user hate never back contact list server changed recently signal begun attract larger user base user traditional expectation enter picture unhappy signal limitation response signal developer begun explore way offer feature without compromising security plain challenging feel developer one area tried square circle new solution contact backup system called secure value recovery secure value recovery signal secure value recovery svr cloudbased system allows user store encrypted data signal server even signal access without usability headache come traditional encryption key management moment svr used store user contact list message content although data may menu backup future challenge storing encrypted backup data strong encryption requires strong high entropy cryptographic key password since u terrible selecting let alone remembering strong password pose challenging problem moreover key stored device since whole point backup deal lost device goal svr allow user protect data much weaker password human actually memorize pin traditional passwordbased encryption password would completely insecure motivated attacker obtained encrypted data signal server could simply run dictionary attack trying password second minute thus obtaining data signal svr solves problem ageold way introduces computer even signal hack specifically signal make use new extension intel processor called software guard extension sgx sgx allows user write program called enclave run special virtualized processor mode mode enclave invisible untouchable software computer including operating system storage needed enclave persistently store seal data attempt tamper program render data inaccessible update note signal svr seal data persistently included draft thinking misremembered technology preview signal svr deploys enclave program signal server program performs simple function user generates store random cryptographic secret seed along hash user pin user contact server present hash pin enclave ask cryptographic seed hash match enclave stored server delivers secret seed client mix together pin result cryptographically strong encryption key used encrypt decrypt backup data update thanks dino dai zovi correcting detail key approach encryption key depends user password strong cryptographic secret stored sgx enclave server sgx job even user hack signal server include signal developer perhaps operating duress unable retrieve user secret value way access backup encryption key actually run enclave program enter user hashed pin prevent bruteforce guessing enclave keep track number incorrect pinentry attempt allow limited number lock user account entirely elegant approach conceptually quite similar system already deployed apple google use dedicated hardware security module implement trusted component rather sgx key weakness svr approach depends strongly security integrity sgx execution discus moment sgx exactly spotless record happens sgx secure anytime encounter system relies fundamentally trustworthiness component particularly component exists commodity hardware first question happens component actually trustworthy svr question take great deal relevance let step back recall goal svr ensure three thing backup encryption key based least part user chosen password strong password mean strong encryption keyseven weak password encryption key still cryptographic strength come integration random seed get chosen stored sgxno attacker able bruteforce way password space enforced sgx via guessing limit example highentropy passphrase random manual please use signal password note first goal really enforced cryptography goal achieved user selects strong highentropy password example look like see picture right remaining goal rely entirely integrity sgx let play devil advocate think happens svr sgx secure attacker able dump memory space running signal sgx enclave able expose secret seed value well user password hash value hand attacker run basic offline dictionary attack recover user backup key passphrase difficulty completing attack depends entirely strength user password phrase fine pin strongly encouraged ui signal app sensitivity data becomes even worse pin happens phone passcode make sure similarly attacker able compromise integrity sgx execution example cause enclave run using stale state rather new data might able defeat limit number incorrect password retry attempt would allow attacker run active guessing attack enclave recover pin edit noted relevant svr data stored ram never sealed written disk final subtle concern come fact signal svr also allows replication backup database address real concern signal part backup server could fail resulting loss user backup data would ux nightmare understandably signal want user exposed deal signal operator spin new instance signal server cloud provider new instance second copy sgx enclave software software request copy full seed database original enclave even sophisticated consensus protocol make sure two copy stay agreement state retry counter copy made important thing keep mind security replication process depends entirely idea original enclave hand data another instance enclave software running secure sgxenabled processor possible trick original enclave status new enclave example convince hand database system merely emulating sgx enclave normal execution mode compromised signal operator would able use mechanism exfiltrate plaintext copy database would break system entirely prevention attack accomplished via another feature intel sgx called remote attestation essentially intel processor contains unique digital signing key allows attest fact legitimate intel processor running specific piece enclave software signature verified assistance intel allows enclave verify talking directly another legitimate enclave power system also contains fragility single sgx attestation key extracted single sgxenabled processor would provide backdoor entity able compromise signal developer concern mind worth asking realistic sgx meet high security bar need make system work sgx done far well honest list sgx compromise given wikipedia really tell whole story various attack sgx many varied largely common cause sgx designed provide virtualized execution program complex generalpurpose processor said processor lot weird unexplored behavior attacker get processor misbehave turn undermine security sgx lead attack plundervolt malicious software able tamper voltage level processor realtime causing fault leak critical data includes attack leverage glitch way enclave loaded allow attacker inject malicious code place proper enclave scariest attack sgx rely speculative execution side channel allow attacker extract secret sgx including basically working memory used enclave could allow extraction value like seed key used signal svr sealing key used encrypt data disk worse attack twice successful extracting cryptographic signing key used perform cryptographic attestation recent one patched week ago much live attack bet forthcoming last part bad svr attacker extract even single copy one processor attestation signing key compromise signal admin secret potentially force signal replicate database onto simulated sgx enclave actually running inside sgx svr replicated database system everyone secret seed data would available plaintext really scare attack listed simply result academic exploration system given point past two year able beer someone like daniel genkin u mich daniel grus tu graz know either professor team sitting least one catastrophic unpatched vulnerability sgx smart people smart people world smart people resource would much like access backedup signal data worth pointing attack softwareonly attack assume attacker able get logical access server attack restricted sgx really designed defend sophisticated physical attacker might attempt tap system bus make direct attempt unpackage attach probe processor attack costly challenging certainly agency would difficulty executing finally also mention security svr approach assumes intel honest frankly probably assumption already making let punt big deal major issue svr something basically want trust happy signal offering option user long user allowed choose use unfortunately week signal giving user choice concretely week ago signal began nagging user create pin code app really explain well setting pin would start svr backup many people spoke said believed pin protecting local storage protect account hijacking signal ask pin followed common dark pattern born silicon valley basically forcing user add pin first nagging repeatedly ultimately blocking access entire app giant modal dialog bad behavior merit critically probably result good pin choice make go away chose simplest pin app would allow assume many user simply entered phone passcodes nasty security risk say big deal since svr currently protects user contact list already stored cleartext competing messaging system fact one argument moxie made buy nobody going engineer something complex signal svr store contact list hammer like svr going want use knock nail find critical data user tired losing apply svr back data since message content backup one bigger pain point signal user experience sooner later want apply svr solving problem past view would fine since signal would surely give user ability opt message backup recent decision signal shaken confidence addendum signal say originally post section summarized discussion moxie around issue respect moxie removed request think fair let moxie address issue directly without filtered rewritten section simply want make point following discussion twitter workaround issue either choose set highentropy passcode phrase forget screw account unless turn registration lock feature use new disable pin advanced feature signal latest beta essentially thing automated way seems like good addition still think discussion around consent optin start
8,Lobsters,mobile,Mobile Development,Dealing with phone numbers in contact book,https://ashishb.net/tech/dealing-with-phone-numbers-in-contact-book/,dealing phone number contact book,telephone country code prefixfree telephone number multiple representation std call multiple country share telephone code continuous area code country code always adjacent confirming phone number ownership like post navigation,building app us user contact book certain gotchas avoid telephone country code prefixfree country country code country get country code like scheme ensures number inherently unambiguous telephone number multiple representation since people dial internationally telecom system implicitly assume domestic call someone dialing u dialing person india dialing since international dialing would infrequent telecom require unique prefix number like distinguish whether someone country austria state even domestic area code explicitly required user might stored phone number telecom implicitly prefix user area code user want dial beyond area telecom operator would require additional prefix mark std call localization massive implication regarding processing cleaning normalizing phone number retrieved user contact book country code area code contain usually superfluous telecom might ok calling sending sm treat number like incorrect multiple country share telephone code usa canada many country caribbean share telephony code carrier would treat call sm international though italy vatican city share continuous area code country code always adjacent population grows certain area others code reserved region get allotted example san francisco bay area first allocated top existing area code deal growing population confirming phone number ownership never trust incoming call incoming sm phone number therefore way verify user owns phone number sending text message making phone call like like loading post navigation
9,Lobsters,mobile,Mobile Development,System hardening in Android 11,https://security.googleblog.com/2020/06/system-hardening-in-android-11.html,system hardening android,initializing memory aslr stack heap spray undefined behavior initializing userspace initializing kernel stack heap scudo android default native allocator finding heap memory safety bug wild gwpasan available developer application software tagbased kasan adopting arm memory tagging extension hwasan software tagbased kasan hwasan kerneladdresssanitizer software tagbased mode generic kasan kernel commit expanding existing compiler mitigation prior release cfi networking daemon dns resolver effectiveness software codec sandbox announced new constrained sandbox software codecs,posted platform hardening team android continue increase security android platform moved safer default setting migrated hardened memory allocator expanded use compiler mitigation defend class vulnerability frustrate exploitation technique initializing memory enabled form automatic memory initialization android userspace linux kernel uninitialized memory bug occur cc memory used without first initialized known safe value type bug confusing even term uninitialized misleading uninitialized may seem imply variable random value reality random whatever value previously placed value may predictable even attacker controlled unfortunately behavior result serious vulnerability information disclosure bug like aslr bypass control flow hijacking via stack heap spray another possible side effect using uninitialized value advanced compiler optimization may transform code unpredictably considered undefined behavior relevant c standard practice us uninitialized memory difficult detect error may sit codebase unnoticed year memory happens initialized safe value time uninitialized memory result bug often challenging identify source error particularly rarely triggeredeliminating entire class bug lot effective hunting individually automatic stack variable initialization relies feature clang compiler allows choosing initializing local variable either zero patterninitializing zero provides safer default string pointer index size downside zero init lesssafe default return value exposing fewer bug underlying code relies zero initialization pattern initialization tends expose bug generally safer return value le safe string pointer index size initializing userspace automatic stack variable initialization enabled throughout entire android userspace development android initially selected pattern order uncover bug relying zero init moved zeroinit month increased safety platform o developer build autopatterninitializetrue want help uncovering bug relying zero init initializing kernel automatic stack heap initialization recently merged upstream linux kernel made feature available earlier version android kernel including feature enforce initialization local variable heap allocation known value controlled attacker useless leaked feature result performance overhead also prevent undefined behavior improving stability security kernel stack initialization adopted configinitstackall upstream linux currently relies clang pattern initialization stack variable although subject change future heap initialization controlled two boottime flag initonalloc initonfree former wiping freshly allocated heap object zero think skmallockzalloc whole kernel latter object freed help reduce lifetime securitysensitive data initonalloc lot cachefriendly smaller performance impact within therefore chosen protect android kernel scudo android default native allocator android scudo replaces jemalloc default native allocator android scudo hardened memory allocator designed help detect mitigate memory corruption bug heap scudo fully prevent exploitation add number sanity check effective strengthening heap memory corruption bug also proactively organizes heap way make exploitation memory corruption difficult reducing predictability allocation pattern separating allocation size internal testing scudo already proven worth surfacing security stability bug previously undetected finding heap memory safety bug wild gwpasan android introduces gwpasan inproduction heap memory safety bug detection tool integrated directly native allocator scudo gwpasan probabilistically detects provides actionable report heap memory safety bug occur work process enabled default system process system apps gwpasan also available developer application via one line optin app androidmanifestxml complicated build support recompilation prebuilt library necessary software tagbased kasan continuing work adopting arm memory tagging extension mte android android includes support kernel hwasan also known software tagbased kasan userspace hwasan supported since android kerneladdresssanitizer kasan dynamic memory error detector designed find outofbound useafterfree bug linux kernel software tagbased mode software implementation memory tagging concept kernel software tagbased kasan available android kernel enabled configkasanswtags kernel configuration option currently tagbased kasan support tagging slab memory support type memory stack globals added future compared generic kasan tagbased kasan significantly lower memory requirement see kernel commit detail make usable dog food testing device another use case software tagbased kasan checking existing kernel code compatibility memory tagging tagbased kasan based similar concept future inkernel mte support making sure kernel code work tagbased kasan ease inkernel mte integration future expanding existing compiler mitigation continued expand compiler mitigation rolled prior release well includes adding integer bound sanitizers core library lacking example libminikin font library libui rendering library bound sanitized hardened nfc stack implementing integer overflow sanitizer bound sanitizer component addition hard mitigation like sanitizers also continue expand use cfi exploit mitigation cfi enabled android networking daemon dns resolver core javascript library like pacprocessor effectiveness software codec sandbox prior release android announced new constrained sandbox software codecs really pleased result thus far android first android release since infamous stagefright vulnerability android zero criticalseverity vulnerability medium framework thank jeff vander stoep alexander potapenko stephen hines andrey konovalov mitch phillips ivan lozano kostya kortchinsky christopher ferris cindy zhou evgenii stepanov kevin deus peter collingbourne elliott hughes kees cook ken chen contribution post
10,Lobsters,mobile,Mobile Development,Using Extension Methods in Flutter for the Provider Lookup,https://zaiste.net/posts/extension-methods-flutter-provider/,using extension method flutter provider lookup,youtube channel dart flutter newsletter,dart add extension method feature allows add new member method existing type extension method invoked like regular method even though static function note define extension method instance method also operator setter getters field adapted name would extension member dart team however decided name feature similarly programming language sound familiar extension method solve issue wrapping object order augment wrapped object additional feature word feature allows simplify use helper method extension method nt make regular wrapper however writing inside extension method declaration refers object wrapped wrapping object important extension method syntax somehow similar class mixin syntax definition could suggest extension method declaration refers true without extension method need wrap string using helper class method class util static string capitalize string input return inputisempty input input touppercase inputsubstring void main print utilcapitalize quick brown fox jump lazy dog extension method call new method directly string value moreover method made available getter convenience extension capitalizeextension string string get capitalize return thisisempty touppercase thissubstring void main print quick brown fox jump lazy dogcapitalize compiler automatically wrap expressionmethod extension expression method long extension accessible applicable nt already member name context flutter use extension method simplify way looking provider data widget tree traditionally wrap flutter context using providerof since dart define following extension method extension myextension buildcontext provide providerof write contextprovide string instead providerof string context invoke provider method directly flutter buildcontext nt access flutter class using extension method extend method available context variable following youtube video refactoring flutter application use extension method provider class simplify data lookup video liked article video consider subscribing youtube channel dart flutter newsletter
11,Lobsters,mobile,Mobile Development,Are you using SVG favicons yet? A guide for modern browsers,https://medium.com/swlh/are-you-using-svg-favicons-yet-a-guide-for-modern-browsers-836a6aace3df,using svg favicons yet guide modern browser,using svg favicons yet guide modern browser icon mask icon touch icon manifest lighthouse done everything else dark mode http medium result,using svg favicons yet guide modern browsersyou using svg favicons supported modern browser right nowalso probably need icon link size copying project project let find absolute minimum required word wordiconthe main favicon svg size type type imagesvgxml unnecessary link rel icon href faviconsvg mask iconfor safari bit different need add maskicon also svg made single colour placed transparent background browser add colour attribute link rel maskicon href maskiconsvg color touch iconthe icon io device well favourite browser new tab page need x size size attribute superfluous link rel appletouchicon href appletouchiconpng manifestthe manifestjson provides information web app website line mandatory pas lighthouse test icon linked used android chrome largest size x one needed name starter shortname starter icon src googletouchiconpng size backgroundcolor ffffff themecolor ffffff display fullscreen themecolor meta still required android chrome browser colour meta name themecolor content ffffff donethat icon need current modern browser everything else unnecessary msapplicationtileimage added want different icon window tile otherwise appletouchicon used tilecolor used anymoreeverything elsesadly everyone modern browser yet easily resolved dropping x faviconico root website work everywhere else even grandma sdark modeto finish tip dark mode one benefit svg favicon change colour cs using preferscolorscheme medium query colour favicon change user dark light mode method work maskicon since colour attribute safari add white background enough contrast svg xmlns http width height style path fill medium preferscolorscheme dark path fill fff style path fillrule evenodd svg resulthere final result copy head website forget place faviconico root meta name themecolor content ffffff link rel icon href faviconsvg link rel maskicon href maskiconsvg color link rel appletouchicon href appletouchiconpng link rel manifest href manifestjson
12,Lobsters,mobile,Mobile Development,Design and Anatomy of a Push Notification 2020,https://onesignal.com/blog/push-notification-design-anatomy/,design anatomy push notification,apple io google android huawei android amazon echo macos window chrome safari firefox edge platform little bit different line text image character restriction operating system figma push notification ui kit web push chrome macos browser icon title domain content icon web push firefox macos browser icon title domain content icon web push safari macos icon title content web push chrome window banner image icon browser action button title content domain web push firefox window title icon domain content setting web push chrome android badge title body large picture browser domain time stamp icon mobile push android native small icon title body large picture action button app name time stamp icon mobile push io native app icon rich medium title message app name option action button free push notification ui kit figma push notification ui kit figma useful push resource p hiring designer developer,push notification around year first introduced io quickly rolled across major mobile operating system web push came along today push notification supported across apple io google android huawei android amazon echo macos window chrome safari firefox edge list go onunfortunately platform little bit different daunting complicated get head around exactly go push notification many line text need many image character restriction look like operating system access share insight help navigate design notification dissecting anatomy designer find figma push notification ui kit usefulweb push chrome macoschrome push notification macosbrowser iconchrome icon changedtitlerestricted charactersdomainwebsite user subscribed changedcontentrestricted larger png jpg gif animated note character restriction vary depending icon present character used chrome macos also support action buttonsweb push firefox macosfirefox push notification macosbrowser iconfirefox icon changedtitlerestricted charactersdomainwebsite user subscribed changedcontentrestricted larger png jpg gif animated note character restriction vary depending icon present character usedweb push safari macossafari push notification macosiconthis set changed per individual message must png jpg gif animated titlerestricted characterscontentrestricted charactersnotice safari browser icon display domainweb push chrome windowschrome push notification windowsbanner aspect ratio png jpg gif animated larger png jpg gif animated browsercan changedaction buttonssupports buttonstitlerestricted characterscontentrestricted charactersdomainwebsite user subscribed changedwindows offer screen real estate imagery banner image icon displayweb push firefox windowsfirefox push notification windowstitlerestricted larger png jpg gif animated domainwebsite user subscribed changedcontentrestricted characterssettingscan changedweb push chrome androidchrome push notification larger must white transparent background pngtitlerestricted charactersbodyrestricted characterslarge aspect ratio png jpg gif animated browsercan changeddomainwebsite user subscribed changedtime stampwhen message larger png jpg gif animated mobile push android nativenative push notification androidsmall fit device size must white transparent background pngtitlerestricted charactersbodyrestricted characterslarge aspect ratio png jpg gif animated action buttonssupports buttonsapp namecan changedtime stamptime message larger png jpg gif animated mobile push io nativenative push notification iosapp iconuses app default icon changedrich aspect ratio png jpg gif wavtitlerestricted charactersmessagerestricted charactersapp namecan changedoptionscan changedaction buttonssupports buttonsios also support subtitle note unlike android io currently support web pushfree push notification ui kit figmaif designer working project utilizes push check free figma design file push notification ui kit figmaother useful push resourcesps hiring designer developer
13,Lobsters,mobile,Mobile Development,Making a right keyboard accessory view in React Native,https://dev.to/demchenkoalex/making-a-right-keyboard-accessory-view-in-react-native-4n3p,making right keyboard accessory view react native,solution panresponder bonus http githubcomflyerhqreactnativekeyboardaccessoryview,hello name alex mobile software engineer professional experience io react native development like share story creating first opensource library react native one project needed custom view stick keyboard top open usually easy thing listen keyboard openclose event adjust view position accordingly however use scroll view keyboarddismissmode set interactive try dismiss keyboard interactively drag gesture view stay position open keyboard fully closed wanted move synchrony touch used experiencing native io apps later found inputaccessoryview component react native adding bingo view following keyboard flawlessly thought case closed moved noticed two weird bug firstly content accessory view nt resized phone orientation change posted issue secondly input accessory simply disappears every time present modal view stale issue regarding never resolved moment decided write solution solution mentioned nt want interactive dismiss support io enough listen keyboard openclose event case keyboardwillchangeframe event available android io thing left track finger position screen value higher keyboard top line change bottom value accessory view fortunately something called panresponder react native wrote simple hook export const usepanresponder const positiony setpositiony reactusestate const panresponder reactuseref panrespondercreate onpanrespondermove gesturestate setpositiony gesturestatemovey onpanresponderend setpositiony current return panhandler platformos android panresponderpanhandlers positiony see android panhandler empty object interactive dismiss need destructure panhandler scrollable component pas provided positiony keyboardaccessoryview another important part offset scrollable content accordingly aside keyboard dimension also need height accessory view height dynamic eg multiline text input another simple hook created provides dynamic size value export const usecomponentsize const size setsize reactusestate height width const onlayout reactusecallback event layoutchangeevent const height width eventnativeeventlayout setsize height width return onlayout size based accessory view size keyboard dimension keyboardaccessoryview component provides oncontentbottominsetupdate callback used adjust content offset bonus using reactnativetestinglibrary testing purpose one question trigger keyboardwillchangeframe event test code turn simple making mock nativeeventemitter jest setup file later test file emit different event jest setup jestmock reactnativelibrarieseventemitternativeeventemitter test file import nativeeventemitter reactnative import act reactnativetestinglibrary const emitter new nativeeventemitter act emitteremit keyboardwillchangeframe keyboardopenevent emitteremit didupdatedimensions screen scaledsize window scaledsize hope learned something new article thanks reading final result found http githubcomflyerhqreactnativekeyboardaccessoryview
14,Lobsters,mobile,Mobile Development,Flutter State Restoration,https://docs.google.com/document/d/1KIiq5CdqnSXxQXbZIDy2Ukc-JHFyLak1JR8e2cm3eO4/edit,flutter state restoration,,javascript nt enabled browser file ca nt opened enable reload
15,Lobsters,mobile,Mobile Development,"Looking back at how Signal works, as the world moves forward",https://signal.org/blog/looking-back-as-the-world-moves-forward/,looking back signal work world move forward,worked aclu see full subpoena response approach publish account data sync different software open source c nonprofit moving forward facebook want get involved signal hiring,midst worldwide protest racism police brutality lot people becoming immediately aware concerned security data online communication gotten lot question signal past week wanted briefly recap designed signal think concept like privacy security trustwhat worst happen unauthorized party compromise signal speak hypothetically u government already tried examine looked like u government obtained access signal user data grand jury subpoena eastern district virginia however still really anything obtain time worked aclu fight gag order intended prevent u publishing information see full subpoena response herethe signal user data data u government obtained result date account creation date last use user message group contact profile information anything elsethis designed signal keep data hand rather signal us endtoend encryption never access content message send visible intended recipient however signal also applies design philosophy rest data wellour approachunlike popular messaging apps signal also access contact social graph group data group membership profile name profile avatar location data gif search etc include tracker ad analytics software allbecause built signal completely avoid storing sensitive information stand stage front thousand people publish account data publicly without revealing anything long signal installed since last replaced phone last date signal installed today btw ask ceo major communication platform publicly publish account data platform ti blame lot data would probably uncomfortable sharing raise question whether comfortable sharing data themsync differentthis represents fundamental difference think concept like privacy security trust believe security privacy responsibly managing data control rather keeping data anyone else hand including ownwe believe even year trying anything else proven losing strategy data breach data breach incentive emerged monetary value data led dramatic loss privacy online especially intimate conversation havewe believe trust trusting u data rather trusting engineering ability knowhow design software keep data hand rather anyone else order help build trust made software open source anyone look design build thing secret never access secret begin withwe also make technology publicly available free signal c nonprofit mission increase privacy online publish technology share knowledge encourage company adopt product servicesmoving forward youevery feature add signal new opportunity make sure information accessible organization handle user data always felt like right approach u contact conversation photo information powerful voice organizing advocating changekeep sending message keep making sure get delivered securely facebookwant get involved signal hiring
16,Lobsters,mobile,Mobile Development,Stack Overflow Developer Survey 2020,https://insights.stackoverflow.com/survey/2020,stack overflow developer survey,,report based survey software developer country around world number response consider qualified analytical purpose based time spent full completed survey another approximately response submitted included analysis respondent spent le three minute survey country listed survey fielded february february median time spent survey qualified response minute minute last year respondent recruited primarily channel owned stack overflow top source respondent onsite messaging blog post email list banner ad social medium post since respondent recruited way highly engaged user stack overflow likely notice prompt take survey duration collection promotion incentive respondent finished survey could opt census badge completed survey due united state transportexport sanction survey unfortunately unaccessible prospective respondent crimea cuba iran north korea syria due traffic blocked third party survey software respondent used vpns get around block limitation kept mind interpreting survey result year past analysis professional developer based site activity stack overflow year utilized answer regarding employment deduce whether respondent qualifies professional developer built analysis based qualification asked respondent salary first asked currency respondent typically used asked respondent salary currency whether salary weekly monthly yearly converted salary user currency usd using exchange rate also converted annual salary assuming working month working week question like survey optional respondent gave u salary data top approximately salary inside outside u trimmed replaced threshold value threshold value inside outside u different many question shown respondent based previous answer example question job work shown said working job question organized several block question randomized order also answer question randomized order identify technology include survey year looked popular fastest growing tag stack overflow term question posted compared technology included last year looked many people chose option synthesized together curate collection technology include
17,Lobsters,mobile,Mobile Development,LambdaNative: Build mobile and embedded apps in Scheme,http://www.lambdanative.org/,lambdanative build mobile embedded apps scheme,petersen cl g√∂rges dustin ansermino jm dumont ga experience report functional programming mhealth application international conference functional programming icfp,publicationspublications involving lambdanativebased technology g√∂rges petersen cl ansermino jm trusted timestamps new old tool ensure integrity authenticity research clinical data society technology anesthesia sta palm beach flpetersen cl katz z g√∂rges west n dumont ga ansermino jm systematic comparison depth hypnosis index intravenous volatile anesthesia electroencephalogram replay society technology anesthesia sta palm beach flpetersen cl katz z g√∂rges west n dumont ga ansermino jm epoch clinically relevant disagreement depth hypnosis monitor observed replay electroencephalogram society technology anesthesia sta palm beach flpetersen cl mallinson venn r dumont ga ansermino jm towards ultrahigh resolution signal converter electroencephalogram monitoring society technology anesthesia sta palm beach flpetersen cl katz z g√∂rges dumont ga ansermino jm dropletbased simulation photoplethysmogram waveform oxygen saturation society technology anesthesia sta palm beach flpetersen cl ansermino jm dumont ga smartphonebased eeg anesthesia simulator nwac world anesthesia convention vancouver bc april may cl g√∂rges ansermino jm dumont ga simulating dynamic hypnotic drug effect eeg anesthesia simulator nwac world anesthesia convention vancouver bc april may tp petersen cl ansermino jm dumont ga comparing operating range lowcost pulse oximeter society technology anesthesia sta phoenix azpetersen cl ansermino jm dumont ga towards depth hypnosis eeg simulator society technology anesthesia sta phoenix azg√∂rges petersen cl ansermino jm lnhealth rapid medical software development platform using iot communication standard medical device interoperability society technology anesthesia sta phoenix azdunsmuir dt payne ba cloete g petersen cl g√∂rges lim j von dadelszen p dumont ga ansermino jm development mhealth application preeclampsia triage ieee journal biomedical health informatics gan h chiu petersen cl dumont ga ansermino jm mobile application measuring respiratory rate canadian pediatric anesthesia society cpa meeting montreal qc september cl phone oximeter mobile pointofcare monitor diagnostic device design crc press isbn september cl g√∂rges ansermino jm dumont ga schemebased closedloop anesthesia system proceeding ilc montreal canadapetersen cl ansermino jm dumont ga iswirl selfaffine visualization ppg ecg waveform society technology anesthesia sta orlando flpetersen cl gan h g√∂rges ansermino jm dumont ga comparison motion artifact response three mobile pulse oximeter society technology anesthesia sta orlando flumedaly west n van heusden k g√∂rges petersen cl dumont ga ansermino jm merchant rn robust closedloop control anesthesia adult undergoing elective surgery society technology anesthesia sta orlando fldunsmuir karlen w gan h chiu petersen cl dumont ga ansermino jm design respiratory rate mobile application society technology anesthesia sta orlando flg√∂rges baxter p coelho cooper b gagne j thomas p petersen cl dumont ga ansermino jm portable operating room tracker teleport analysis system usage identification area improvement society technology anesthesia sta orlando flpetersen cl chen tp ansermino jm dumont ga design evaluation low cost smartphone pulse oximeter sensor cl gan h g√∂rges dumont ga ansermino jm systematic evaluation mobile phone pulse oximetry performance anesthesiology san francisco cag√∂rges van heusden k west n umedaly petersen cl dumont ga ansermino jm merchant rn response noxious stimulus closedloop controlled propofol anesthesia target controlled infusion remifentanil international society anaesthetic pharmacology isap cl g√∂rges dustin ansermino jm dumont ga experience report functional programming mhealth application international conference functional programming icfp h petersen c macinnis jm dumont ga ansermino jm calibration evaluation novel low cost pulse oximeter sensor annual meeting canadian anesthesiologist society calgary canada jun cl gan h macinnis mj dumont ga ansermino jm ultralowcost clinical pulse oximetry proc annual international conference ieee engineering medicine biology society p j nguku sm sleiman j karlen w dumont ga petersen cl warriner cb ansermino jm usability testing prototype phone oximeter healthcare provider high lowmedical resource environment anesthesia cl gan h ansermino jm dumont ga comparing new ultralow cost pulse oximeter two commercial oximeter iampov international symposium yale university new june july jr cooke e petersen cl karlen w froese n lim j ansermino jm pulse oximeter plethysmograph variation relationship arterial waveform mechanically ventilated child j clin monit comput mar epub ahead print van heusden k dumont ga soltesz k petersen cl west n ansermino jm clinical evaluation closedloop controlled propofol infusion child world congress anesthesiologist buenos aries argentina march n dumont ga van heusden k khosravi petersen cl ansermino jm administration closedloop control anesthesia gastrointestinal endoscopic investigation child society pediatric anesthesia aap pediatric anesthesiology annual meeting tampa fl usa february cl ansermino jm dumont ga audio pulse oximeter society technology anesthesia annual meeting palm beach fl usa january cl ansermino jm dumont ga highspeed algorithm plethysmograph peak detection realtime application society technology anesthesia annual meeting palm beach fl usa january heusden k dumont ga soltesz k petersen cl west n ansermino jm robust pid control closedloop propofol infusion child society technology anesthesia annual meeting palm beach fl usa january petersen cl karlen w lim j dumont ga ansermino jm phone oximeter mobile spotcheck society technology anesthesia annual meeting palm beach fl usa january petersen cl ansermino jm capturing vital sign research multibed monitoring environment proceeding society technology anesthesia annual meeting p g liu n petersen cl chazot fischler closedloop administration propofol guided neurosense clinical evaluation using robust proportional integralderivative design american society anesthesiologist asa annual meeting w hudson j lim j petersen cl anand r dumont ga ansermino jm phone oximeter ieee engineering medicine biology society unconference boston usa august w dumont g petersen cl gow j lim j sleiman j ansermino jm human centered phone oximeter interface design operating room proceeding international conference health informatics rome italy p jr cooke e petersen cl froese n lim j amsermino jm arterial oximeter wave relationship ventilated child canadian anesthesiologist society annual meeting montreal canada jun jr cooke e petersen cl froese n lim j ansermino jm arterial plethysmograph waveform relationship child side coin ubc department anesthesiology pharmacology therapeutic research day vancouver canada jun jr cooke e petersen cl froese n lim j ansermino jm respiratory induced change pulse pressure pulse oximeter plethysmograph wave amplitude related ventilated child international anesthesia research society annual meeting honolulu hi usa mar w petersen cl pickard dumont g ansermino jm capillary refill time assessment using mobile phone application irefill asa abstract
18,Lobsters,mobile,Mobile Development,The Price is (Not) Right: Comparing Privacy in Free and Paid Apps (PETS ‚Äô20),https://blues.cs.berkeley.edu/blog/2020/03/25/the-price-is-not-right-comparing-privacy-in-free-and-paid-apps-pets-20/,price right comparing privacy free paid apps pet,abstract citation,abstractit commonly assumed free mobile apps come cost consumer privacy paying apps could offer consumer protection behavioral advertising longterm tracking work empirically evaluates validity assumption comparing privacy practice free apps paid premium version also gauging consumer expectation surrounding free paid apps use static dynamic analysis examine pair free android apps paid counterpart difference data collection practice privacy policy pair understand user expectation paid apps conducted online survey found consumer expect paid apps better security privacy behavior however clear evidence paying app actually guarantee protection extensive data collection practice given free version least one thirdparty library dangerous permission respectively discovered paid version reused thirdparty library free version paid version dangerous permission held free app likewise dynamic analysis revealed paid apps exhibit data collection transmission behavior free counterpart finally found apps privacy policy link google play store pair reflected difference free paid version citationcatherine han irwin reyes √°lvaro feal joel reardon primal wijesekera narseo vallinarodriguez amit elazari kenneth bamberger serge egelman price right comparing privacy free paid apps appear proceeding privacy enhancing technology popets
19,Lobsters,mobile,Mobile Development,Sxmo: Simple X Mobile - A Pinephone UI that is simple and suckless,https://sr.ht/~mil/Sxmo/,sxmo simple x mobile pinephone ui simple suckless,sxmo simple x mobile project overview install guide user guide contributing image alpine repository demo video sxmo suckless unix philosophy pinephone pinephone button action dwm swipe gesture lisgd menu interface dmenu onscreen keyboard svkbd window managment dwm call texting dmenu scriptsmmcli incoming textcall notification script lock screen custom c program menu script web browser surf terminal st application systemmenus applicationspecific menu login screen xdm alpine linux pmos based image,sxmo simple x mobile project overview install guide user guide contributing image alpine repository demo video sxmo simple x mobile collection simple suckless x program script used together create fully functional mobile ui adhering unix philosophy pinephone control ui largely using pinephone button press different number time quickly different action swipe gesture overview sxmo feature pinephone button action via dwm press hardware button different number time different action like launching terminal browser window management swipe gesture via lisgd move workspace move window workspace raiselower volume via swipe gesture menu interface via dmenu use pinephone hardware button select menu entry eg volume upvolume downselect translates previousnextselect onscreen keyboard via svkbd multiple layer responsive onscreen keyboard autoadjusts wm space window managment via dwm arrange window classic dwm layout like monocle tile bstack kill client cycle window focus using pinephone button call texting via dmenu scriptsmmcli compose text editor vimlike editor read text pager make call audioroute via dmenu script utilizing modemmanager incoming textcall notification via script vibrate phone blink led incoming calltext lock screen via custom c program disable screen input toggle screen onoff listening music pocket use menu script web search file countdown timer youtube audio video mpvbased weather r web browser via surf browse web saving screenspace includes pinephone button via dmenu based linkfollowing terminal via st excellent terminal support scrollback copypaste color invert application prebaked image bundle foxtrotgps gps sacc gopher client firefox netsurf web browser systemmenus control volume brightness camera wifi logout modem info launching apps applicationspecific menu increase fontsize zoom paste perapplication level via dmenu script login screen via xdm loginlogout via xdm launch onscreen keyboard alpine linux pmos based image infrastructure bakes image live ontop pmosalpine linux keep thing small simple pragmatic
21,Lobsters,mobile,Mobile Development,King releases the Defold game engine under a permissive license,https://defold.com/2020/05/19/Defold-is-now-open-source/,king release defold game engine permissive license,learn defold open source page,mobile game company king today announced free use defold game engine sharing source code inviting collaborator partner part process king transferred defold software foundation defold foundation stockholm sweden may mobile game company king today announced defold game engine sharing source code inviting collaborator partner part process king transferred defold software foundation defold foundation defold foundation taken full ownership defold product service including website build server user forum social medium channel source code available github immensely proud able make defold source code available open contribution eager start journey free use source available game engine together great community game developer building game using defold would also wish thank king believing vision entrusting defold defold foundation say bj√∂rn ritzl product owner defold foundation developer original development team leave king work full time defold behalf defold foundation foundation work closely developer community industry partner drive new development beyond defold foundation board headed sara cederberg king include industry profile elin eriksson woman tech sweden hugely impressed defold team look forward seeing many great gaming experience come life seen million player already playing king game run defold engine excited see community come together even support defold foundation say tjodolf sommestad chief development officer king defold foundation defold foundation owner free use developerfriendly source available game engine defold foundation work together industry partner provide free open software service game developer across globe foundation created may registered stockholm sweden defold defold free use source available game engine developerfriendly license used development crossplatform game defold used growing number developer create commercial hit well game game jam school teach game development defold known ease use praised technical documentation friendly community developer king king leading interactive entertainment company mobile world million monthly active user first quarter across web social mobile platform developed exclusive game enjoyed around world kingcom facebook mobile distribution platform apple app store google play store microsoft window app store amazon appstore king acquired activision blizzard nasdaq atvi february king game studio stockholm malmo london barcelona berlin along office malta san francisco sara cederberg chairperson defold foundation sara defoldse bj√∂rn ritzl product owner defold foundation bjorn defoldse learn head defold open source page learn contribute support foundation
22,Lobsters,mobile,Mobile Development,Server vs mobile development: Where the code runs matter,https://ashishb.net/tech/server-vs-mobile-development-where-code-runs-matter/,server v mobile development code run matter,like post navigation,code run server much control context run mobile device device o user control context difference lead subtle implication one significant set difference come lack control platform serverside code one choose wide array language mobile code however best choice would almost always one dictated platform javakotlin android objectivecswift io serverside one stick particular version language case mobile platform control language version go regarding hardware choice one choose use different type server machine specialized handling job eg gpus mathintensive computes mobilecode one write good enough fallback support wideenough set device similarly serverside rarely worry server killing running process normal mobile os kill backgrounded process eventually set difference come temporary change platform introduced carrier user network request running mobile robust enough deal intermittent broken connectivity outright unavailability data connection eg due user switching airplane mode mobile network type matter well network request cellular would usually cost network request wifi user network request roaming even mobile code aware unnecessary work user low battery serverside code rarely subjected constraint lastly possible parallelize speed serverside code adding resource like ram better cpu certain number server enough add usually way offload computeintensive memoryintensive work mobile device without trading network latency sometimes user privacy well might preferable go multiprocessing approach server code avoid concurrency issue mobile however multithreading straightforward le resourceintensive almost always choice like like loading post navigation
23,Lobsters,mobile,Mobile Development,Pinephone first steps,https://scattered-thoughts.net/writing/pinephone-first-steps/,pinephone first step,pinephone installing operating system mobilenixos samueldr lineageos update process crosscompiling dependency shellnix crosscompiling code zig buildzig writing simple gui library gdc talk renderer font atlas microui,anki trashed history uploaded trashed history sync server repeatedly resynced trashed history every time tried restore backup wrote spaced repetition app read input markdown file asks question terminal store state json file wrote hundred line code afternoon using ever since wanted run android phone several day struggling several gigabyte ide downloads lost interest typical experience extending customizing laptop routine affair extending customizing phone painful give every time software laptop feel like comfortable old boot worn year tweaking scripting software phone feel like slot machine move button around month hold eye open ad play shiny polished nt side pinephone mobile phone aim able run mainline linux bought one hoping create experience like experience using laptop obviously writing entire mobile suite big project relentlessly cutting corner wherever possible adopting aesthetic simplicity capability finished first milestone porting little spaced repetition app installing operating system installed mobilenixos doc time barebones samueldr kind enough walk irc wrote process nt gotten around writing system configuration yet singleclick deploy nixops deploy focus big improvement lineageos update process default configuration look like crosscompiling dependency since phone running normal linux userland possible compile directly phone laptop compiles thing faster seemed worth investing crosscompilation first step getting hold version dependency done shellnix pin version nixpkgs make sure local remote development use exact version dependency nixpkgs builtinsfetchtarball name url http nix recently gained support crosscompilation many package nt crosscompile successfully yet trick setup crosscompilation grab package native repo wo nt build source machine prebuilt version available nixpkgs binary cache armpkgs import nixpkgs system crosspkgs import nixpkgs crosssystem overlay self super inherit armpkgs gcc mesa libgl config shared local cross build shellnix take boolean argument tell attempting targetpkgs cross crosspkgs else hostpkgs need pkgconfig patchelf runnable host machine used compilation need libgl runnable target machine link buildinputs hostpkgspkgconfig hostpkgspatchelf targetpkgslibglall nixshell drop shell setup local compilation nixshell arg cross true drop shell setup cross compilation crosscompiling code wrote everything zig trying keep whole system small simple fast zig small simple fast language also care lot crosscompilation buildzig mostly selfexplanatory crosscompiling zig take almost effort one hitch struggled find header using pkgconfig crosscompiling nt tried debug passed directly instead shellnix nixlibgldevtargetpkgslibgldev buildzig try includenix exe nixlibgldev try includenix exe fn includenix exe stdbuildlibexeobjstep envvar const void var buf stdarraylist init allocator defer bufdeinit try bufappendslice stdosgetenv envvar try bufappendslice include exeaddincludedir bufitems zig also nt set path correctly resulting binary reasonable way know crosscompiling identical nix system default reasonable heuristic patch binary compilation shellnix nixgcctargetpkgsgcc nixlibgllibtargetpkgslibgl sync patchelf setinterpreter cat nixgccnixsupportdynamiclinker zigcachefocuscross patchelf setrpath nixlibglliblib zigcachefocuscross scp zigcachefocuscross focus homejamiefocus build process either zig build local zig build cross sync since laptop phone running operating system pinned dependency nt bother use virtual machine local development mock device sensor code everything else run writing simple gui library writing immediatemode gui library find much simpler retained system term line code mental overhead machinery recently gave gdc talk lay rationale battery usage often given concern laptop app hovers around cpu time whereas gnomecalculator reach whenever press button becomes problem complex uis add caching draw command layer definitely thing may difficult well immediatemode like complex reactive layout luckily nt thing care phone copied renderer font atlas microui built enough ui library get thing working entire ui spaced repetition app uikey orelse q try savelogs selflogsitems stdosexit const white uicolor r g b var textrect rect var buttonrect textrectsplitbottom atlastextheight switch selfstate prepare try uitext textrect white try format allocator pending selfqueuelen try uibutton buttonrect white go selfstate prompt prompt const next selfqueue const text try format allocator nn urgency interval nextclozerenders nextstaterenderix nextstateurgency nextstateintervalns try uitext textrect white text try uibutton buttonrect white show selfstate reveal reveal const next selfqueue try uitext rect white try format allocator nextclozetext var evento logevent null var missrect buttonrect var hitrect missrectsplitright divtrunc missrectw try uibutton missrect white miss evento miss try uibutton hitrect white hit evento hit evento event try selflogsappend atns stdtimemillitimestamp clozetext nextclozetext renderix nextstaterenderix event event selfqueue selfqueue selfqueuelen selfqueue try sortbyurgency selfframearena selfclozes selflogsitems selfstate prepare else selfstate prompt really like straight code split across multiple file class callback read top bottom want abstract component layout put function obviously need lot work improve antialiasing font layout etc think done without complicating interface
24,Lobsters,mobile,Mobile Development,Refactoring Android Themes with Style: Restructuring Themes,https://ataulm.com/2020/04/30/refactoring-themes-with-style.html,refactoring android theme style restructuring theme,nick butcher chris bane developing theme style monzo ideal theme structure app theme nightmode base theme platform theme resource qualifier framework theme nick rout describing migrate appcompat materialcomponents theme renaming pruning tree android styling theme v style migrating single base theme adding platform layer creating guarded alias next check emma chris,last year nick butcher chris bane presented developing theme style droidcon berlin welcome recap theme style well best practice android theming working apply best practice android app monzo u challenge lay could make change safely time word refactor theme ideal theme structure outside look feel monzo app pretty simple dark theme light theme well light theme dark toolbar actually turned three theme theme hierarchy looked follows square represents theme arrow show theme inherit checked usage always clear screen used particular variant another used app growing fast last count around activity fragment developed android engineer spread across multiple team ship new release every week understandable got position difficult aspect two tree meant reasonably easy add themerelated bug one tree went bug fix wanted something closer structure nick chris presented single tree four layer app theme base theme platform theme framework theme one specific purpose understanding help u keep theme tidy maintainable app theme bottom app theme apply activity level thememonzolight thememonzodark app theme mostly contain value colour attribute like colorprimary colorsurface android colorbackground example android colorbackground defined navy thememonzodark offwhite thememonzolight style name thememonzolight parent basethememonzo item name android colorbackground coloroffwhite item item name coloronbackground colornavy item item name colorsurface colorwhite item item name coloronsurface colornavy item item name colorprimary coloroffwhite item item name coloronprimary colornavy item style style name thememonzodark parent basethememonzo item name android colorbackground colornavy item item name coloronbackground colorwhite item item name colorsurface colordarkgrey item item name coloronsurface colorwhite item item name colorprimary colornavy item item name coloronprimary colorwhite item style view layout reference colour attribute theme adding nightmode app becomes trivial override app theme valuesnight resource directory different set colour value base theme base theme basethememonzo override define default style view text appearance attribute layer generally contain reference specific colour instead style resource used reference attribute app theme style name basethememonzo parent platformthememonzo item name tabstyle stylewidgetmonzotablayoutlegacy item item name textinputstyle stylewidgetmonzotextinputlayout item item name toolbarstyle stylewidgetmonzotoolbar item style avoiding use hardcoded colour layer mean everything common theme go platform theme platform theme layer allows u account api specific attribute using resource qualifier specify different platform theme different version android xml version encoding resource style name parent attribute available api style style name platformthememonzo parent resource resvaluesthemesxml xml version encoding resource style name parent themematerialcomponentslightnoactionbar style name platformthememonzo parent resource work based following principle base theme depends platformthememonzo platformthememonzo defined resource bucket need versionspecific attribute instance platformthememonzo depends versionspecific theme resource eg versionspecific theme resource inherit older versionspecific resource unless minsdkversion case depend framework theme framework theme chose themematerialcomponentslightnoactionbar framework theme inherit framework theme provides lot sensible default specify everything nick rout wrote article describing migrate appcompat materialcomponents theme showcase thing get free inheriting framework theme rather creating scratch structure looking get step take help u renaming pruning tree many theme style difficult know start part difficulty lay fact clear theme used always clear style resource theme decided adopt strict naming convention help u navigate current state app first rule agreed take advantage dot notation possible reserving usage explicit parent two case declaring theme overlay want inherit attribute changing namespaces inheriting style different family made really easy see lineage theme removing indirection grouped theme family made easier reduce number theme using projectwide find replace replacing lightstatusbarlighttoolbar variant lighttoolbar light toolbar status bar ought light anyway detangling left theme made easier adopting naming prefix thememonzo app theme themeoverlaymonzo theme overlay widgetmonzo widget theme theme overlay style distinct concept android represented style resource stricter name mean resource le chance misused information difference theme style check android styling theme v style migrating single base theme although renaming resource collapsing similar theme help reduce hierarchy manageable number understandable theme still need collapse multitree setup one multiple tree mean duplicate attribute base tree problematic still issue would easy make change one forget fastest way forward merge base root app theme tree moving attribute base corresponding root app theme reparent thememonzodark thememonzolight new empty base reparenting theme introduce unexpected bug case careful check usage thememonzodark depend colourspecific attribute themematerialcomponentsdark component might changed colour reparented theme descendent themematerialcomponentslight monzo app often used light themed component theme eg dialog popup menu meant attribute overridden force light style anyway meant major regression adding platform layer got single tree possible u add platform layer help u handle specific attribute android windowlightstatusbar android windowlightnavigationbar available api respectively inform system whether status bar navigation bar light system choose provide light dark icon attribute set isolation relate android statusbarcolor android navigationbarcolor even though available older api version want set separately one instead create custom theme attribute abstraction creating guarded alias creating custom theme attribute case declaring attribute resource value resource file name format xml version encoding resource attr name preferredstatusbarcolor format color attr name preferdarkstatusbaricons format boolean resource use app theme like theme attribute style name thememonzolight parent basethememonzo item name preferredstatusbarcolor coloroffwhitedarker item item name preferdarkstatusbaricons true item style style name thememonzodark parent basethememonzo item name preferredstatusbarcolor colornavydarker item item name preferdarkstatusbaricons false item style anything except assign value attribute put platformspecific theme ensure set attribute meant coupled like android windowlightstatusbar android statusbarcolor together xml version encoding resource style name parent control whether status bar icon lightdark minsdkversion item name android windowlightstatusbar attrpreferdarkstatusbaricons item available set alongside avoid hardtoread icon item name android statusbarcolor attrpreferredstatusbarcolor item style style name platformthememonzo parent resource status bar attribute set together configurable app theme next look default style help u deduplicate code improve consistency strengthen theme check meantime please let know found post helpful comment question correction let know twitter thanks emma chris review
25,Lobsters,mobile,Mobile Development,More Extensions supported with Firefox Preview for Android,https://blog.mozilla.org/addons/2020/04/14/april-extensions-for-firefox-preview/,extension supported firefox preview android,back february firefox preview recommended extension program,back february announced support first extension firefox preview new rebuilt mobile browser android set replace firefox android later year since expanded support addons recommended extension program like introduce addons available firefox preview within next week dark reader website mobile easy read light dim extension automatically inverts bright color web page offer eyepleasing dark mode number configuration option allowing customize experience go want people eavesdropping browsing behavior http everywhere automatically enables website encryption page default unencrypted communication especially helpful surfing via shared wifi connection worried potentially malicious web content noscript protects number web security exploit disabling potentially malicious script running website finetune configuration noscript permit script run site trust concerned advertiser thirdparty tracker following around web privacy badger nicely complement firefox builtin tracking protection extension automatically learns website start tracking put end privacy invasion also includes additional privacy protection like block link tracking said see picture often search image right extension help extension select image feed reverse image search search engine like thank developer addons supporting firefox preview developer made great adjustment optimize extension mobile pleasure talk pleased offer six highly recommended addons starting point clear addon developer great idea extension enhance mobile browsing experience intend enable addons recommended extension program within next month reaching developer soon
26,Lobsters,mobile,Mobile Development,Don't design for mobile,https://mattanddesign.com/dont-design-for-mobile/,nt design mobile,device capability viewport safe area correct way cs breakpoints pointer pointer medium query pointer api keyboard keyboard alternative device sensor hardware browser api haptic feedback ambient light sensor network speed navigatoronline currently online fetch medium known size network information api speed difference wifi mobile,mobilefirst solution constraint device early day mobile computing revolution back made lot sense even day work well lot situation though invariably create two category tend carry lot assumption mobile touch desktop cursormobiles slow internet desktop fast internetmobile device slow desktop device assumption start create issue today device landscapethe latest mobile device far powerful average laptop desktop hybrid device work touch mouse tablet mobile desktop new category altogether device capabilitiesthe device capability approach type progressive enhancement initially target le capable device enhance become capable many way mobilefirst attempting lesser effect let explaincanva product work daytoday pretty complex beast long ago working selection handle appear element selectedpreviously version desktop version made thing touch worked pretty nicely part though around time also developing something turned canva design lab measure desktop large screen connected wifi sits one yet screen touch enabled categorisation meant large touchscreen using desktop version selection frame version optimised use mousewe targeting mobile desktop instead targeting particular capability device particular case would pointer essentially map touch mousethat pretty extreme example plenty situation encounter similar issue interactive example practical solution dealing issuesviewportsize viewport frequently considered designing mobilefirst commonly targeted attribute viewport width attribute including height aspect ratio device orientation ie portrait landscapethe first thing note viewport nt necessarily equal screen size occasionally case ui taking space window nt using entire screen reason like safe area take current situation width viewport px wide screen pxheight viewport px high screen pxaspect ratio viewport aspect ratio screen coverage viewport cover screentry resizing browser see impact valuesa common way design different size device use breakpoints mistake make breakpoints though placing point exactly match common device size etc becomes bit maintenance nightmare september roll around apple decides release new currently different sized ipads saleif take step back look across device market today pretty apparent cluster around common device tablet laptop desktop gap cluster place upiphone upiphone l iphone plus l pixel l note l ipad pro upipad l ipad pro l ipad pro air go upmacbook pro pro fantastic article david gilbertson correct way cs breakpoints cover topic depthpointersnext pointer typical interpretation touch v even reflected pointer medium query reality spectrum wacommousetrackpadsmartphoneplane screenswhen come pointer accuracy platform suggestion minimum target size good place start though factor worth taking accounta good example car mode apps like spotify map even though device context quite different combination focus road device used away typical general bump jump get driving mean much harder accurately tap element screen account car mode increase size commonly used action even type screen issue capacitive touchscreen used modern smart phone far greater accuracy type touchscreen sure struggled screen plane atm beforeas little experiment try dragging around different circle may notice take effort even impossible move around material hig pointer support simple tap click event though support advanced right click double tap swipeoften device specifically size device used detect support event say mobile device touch right lot laptopslots device support touch nt considered mobile device many support several different pointer latest ipad update includes first class support mouse trackpadsa far accurate method use one various pointer api reveal lot information current pointer type click tap button see say pointer detect pointerthe ideal solution design suit need least capable pointer necessary progressively enhancing accuracy capability improveit worth also noting whilst advanced event available across every device often event interaction serve suitable alternative keep mind use casemousetouchtertiary actionsright clicklong pressselectiondouble clicktwo finger tapzoomdedicated uipinchkeyboardthe keyboard really two option available virtual keyboard physical keyboard device support one though growing number device support never time ipad instance wo nt show virtual keyboard bluetooth smart keyboard connected physical keyboard nt pose much issue though virtual keyboard take valuable screen real estate appear unfortunately time nice way detect existence virtual keyboard accurately measure size resultant keyboard hacky detecting change size keep mind solution unreliable tested across different device platformsi originally mention two keyboard option though strictly true want go weird wonderful rabbit hole good guide keyboard alternativesdevices sensor hardwaredevices sensor hardware thing start get interesting include thing like gyroscope gps haptic engine camera fingerprint sensor ambient light sensorsthe usage sensor hardware range subtle enhancement user small buzz feedback haptic engine right opening entire product category case gpsthere lot different api access sensor hardware within browser one likely come across geolocation api used locate current position api support much position though click tap button find fetch locationunfortunately support many api nt great across various platform browser proceed caution active development worth keeping date available browser api interesting upcoming option haptic feedback ambient light sensorsnetwork speedsnetwork speed√¢ nt necessarily device constraint greatly impact used different way detecting network speed varying level accuracythe simplest check see online navigatoronline api return boolean checking whether connected network notyou currently online try turning connection possible detect speed getting browser fetch medium known size measuring elapsed time also experimental network information api provides even detail thing connection typesadly neither approach particularly accurate widely supported best approach take stance network speed slow unreliable send much necessary always compress file assetsit also worth clarifying mobile connection nt assure slow speed wired wifi connection nt assure fast speed relative speed difference wifi mobile connection varies drastically around world wifi fasterchinarussiasingaporesouth koreaukusasimilar speedsbelgiumbrazilfinlandhungarynorwaynew zealandmobile fasteraustraliaegyptgreecesouth africaturkeyqatarthere also situational factor impact sure used flaky wifi connection airport cafe beforeand intent mobilefirst right one average site app outcome mobilefirst approach v device capability approach fairly much samethough device landscape continues converge categorisation continue blur introduce interactivity complex feature site singular approach start break downit slight mindset shift two approach significant one design touchscreen work mouse optimise performance slow connection work faster connection design small screen least work larger screensince started approach canva meant le code le design le far greater outcome something think get behind
27,Lobsters,mobile,Mobile Development,In search of the perfect pocket device,https://isene.org/2020/08/Nerding.html,search perfect pocket device,hp calculator collector vim lot nice program ericsson psion series zero terminal samsung ultra small foldable bluetooth keyboard hyperlist ruby amar tool package latex ssh weechat termux xsdl userland urxvt zsh gimp libreoffice http,lockdown geekery searching perfect pocket computer setup hp calculator collector since couple decade passion pocket computing power really long battery life amazing calculator month battery life still calculator also want real computing power ability run vim editing text decent keyboard much goody cram started quest perfect pocket computer reviving old early pocket computer running do vim running do device run lot nice program yes slow cool search better keyboard got ericsson psion series pocket computer running hoping make boot linux possible turn cf card reader device flaky kept searching forum later stumbled upon interesting project zero terminal talking raspberry pi zero packed sort port expansion capability waiting patient wait minute always carry samsung ultra anyway serve need true battery life suck cell phone always charged problem small foldable bluetooth keyboard massive computing power time added benefit easily use monitor tv screen via builtin smart view real kicker run vim galore even hyperlist plugin run ruby whole amar tool package latex ssh weechat name lot terminalconsole program readily available via termux x server app xsdl userland app fact install full linux distro fire android phone full glory terminal graphical software run session urxvt terminal running zsh gimp libreoffice whatnot nerdvana via looking zero terminal found answer right pocket quite detour ending bliss link post http
28,Lobsters,mobile,Mobile Development,A Best in Class iOS App,https://swiftjectivec.com/A-Best-in-Class-App/,best class io app,jordan morgan thing quantify help make app great accessibility platform technology user experience design app store presence accessibility first class rotor voice gesture escape magic tap threefinger scroll increment decrement voice control appropriate element add necessary subtitle audio track uiaccessibilitylocationdescriptors vision hearing physical motor literacy learning io technology tightly integrated lplinkview universal link touch face id user experience top mind native two finger drag edit gesture support field token viewdidappear determinate indeterminate view hiddenpreviewsbodyplaceholder background task compact environment design drip polish app store page logistical asset thoughtfully crafted wrapping,indie dev diary present written jordan morgan feb updated jul get public github issue version list updated reflect io long part industry watched incredible welldeserving apps take home apple design award endgame year ago set create list succinctly answer one question thing quantify help make app great believe created list help answer question might look different one mine attempt take emotion mostly opinion want capture apple say great people may define though opinion assuredly value give ada apple quick brief methodology behind created first importantly read io human interface guideline annually top bottom gm release upcoming version io list applies primarily latest version io ipados smoke fire apple said record great app include whatever thing interaction thing clandestine trade secret rather thing apple apple design evangelist publicly gave seal approval lastly remember largely yesno list part equation make truly great app innovation technology user experience come together enriching people day day interaction apps knowing us extremely well always got item two belongs list mean create pull request get added visiting link bottom post five section cover accessibility designing everyone right thing best apps exceptionally well platform technology apple love apps utilize new apis great effect shoehorning feature looking product seeing utilize io around user experience make people think app core function act thesis paper ux body support design explaining design hard know good one see section list thing apps thoughtfully created app store presence far nascent category tracking list short includes best practice app store accessibility first class voice fully supported rotor control implemented including relevant heading using screen curtain yield experience usable par regular app using voice voice gesture overridden necessary escape twofinger zshaped gesture dismisses modal dialog go back one level navigation hierarchy func accessibilityperformescape bool magic tap twofinger doubletap performs mostintended action func accessibilityperformmagictap bool threefinger scroll threefinger swipe scroll content vertically horizontally func accessibilityscroll direction uiaccessibilityscrolldirection bool increment onefinger swipe increment value element func accessibilityincrement decrement onefinger swipe decrement value element func accessibilitydecrement voice control also supported appropriate accessibilityuserinputlabels set needed app respect following setting including bold text high contrast cursor reduce transparency dark mode reducing motion presenting new controller set voice cursor appropriate element topmost left element make sense uiaccessibilitypostnotification screenchangednotification myheading context considering use accessibilityignoresinvertcolors image video punctuation spoken accessibility text use attributed string set accessibilityspeechpunctuation true group content logically using accessibility container efficient navigation adaptive support device multitasking scenario elegantly fully support dynamic type readable text us readablecontentguide color blind support color contrast ratio smart invert color support app responds well color inversion bar button landscapeimagephone largecontentsizeimage property set control grouped way make navigation trivial shouldgroupaccessibilitychildren already use system vended item common bar button quick action tab navigation bar item ie save done etc glyph accessibility image set ie adjustsimagesizeforaccessibilitycontentsizecategory includes closed caption audio description image icon alternative text set full rotor control support provided via uiaccessibilitycustomaction leading trailing margin used constraint support left right language got ui inherit uiview uicontrol leverage uiaccessibilityelement make accessible needed include video add necessary subtitle audio track user interface appears flawlessly tested using double length pseudolanguages using nsshownonlocalizedstrings yield result support drag drop uiaccessibilitylocationdescriptors set also leverage accessibilitydragsourcedescriptors accessibilitydroppointdescriptors modally presented view clear button available dismiss instead relying solely swipe gesture imessage sticker extension accessibility label provided magic tap supported app common functionality us cfbundlespokenname app name could potentially mispronounced system e would coolapp twenty three request permission io truly need hig request clearly related current context help people understand app intention end day considering building accessibility technology deal mac catalyst alternate pointer action slow key larger text header pointer speak screen guided access typing feedback full keyboard access assistive touch reduce motion voice control reachability live listen rtttty accessibility keyboard zoom magnifier voiceover sticky key switch control speak selection display accommodation audio description mouse key hover text large text braille dwell main thing address broadly vision hearing physical motor literacy learning lastly running entire app accessibility inspector produced warning turning screen curtain navigate app work flawlessly io technology tightly integrated contextual menu integrated long press showing preview appropriate find good balance include many option overwhelming use glyph reinforce action meaning edit menu used right place conflict context menu opt pull style menu action sheet use reduce modality throughout app keep focus squarely content action sheet still used confirm destructive action provides enough friction ensure user really want perform deletion also include cancel menu item canceling implicit action system provides tapping outside menu bound use menu disambiguation navigation selection showing option offer menu present power user functionality long pressing bar button necessary addition providing standard action tapping fully support dark mode multiple space scene support ipados leverage idea primary window versus auxiliary window one provides access full feature set help user complete focused singular task usually closed afterwards full multitasking support home screen quick action support offer sign sign apple included spotlight search indexing support custom uipointerinteraction support app need interface support cursor support correctly force interaction paradigm another ie touch viable pointer keyboard viceversa use correct content effect consistently highlight lift hover effective energy management ie support low power mode reacts keyboard shortcut added app could used almost completely solely use keyboard modifier key along mouse pointer click supported support handoff mac applicable meaningful extension included app whether via share extension action extension file provider sticker pack custom keyboard etc extension carefully thought example widget mini app strives provide glanceable actionable information table collection view cell make sense focus selectionfollowsfocus set callback url supplied documented apps may integrate xcallbackurl uimenucontroller support necessary via overriding uiresponderstandardeditactions supply custom icon enhance user personal connection app want display link consider using lplinkview deep siri intent support donate shortcut action user already taken suggest shortcut user shortcut apps section shortcut app suggesting invoiceshortcutcenter integrate wind make sense support shortcut include ui view also include intent phrase help coach user alternate app name included appropriate watchface support make sense document sharing supported via file provider drag drop first class support fully fleshed nsitemprovider exists custom object editable control data entry also accept content via drop used reordering app support drag make new window data could copied moved inserted duplicated also via drag drop make sense data shared via airdrop natural language processing support necessary tab bar image vector pdf image corresponding size included ensure adapt correctly vended accessibility modal properly displayed live photo animate force touched utilize phlivephotoimageview playback system specific feature live photo arkit experience use system badge indicate available ie live photo arkit badge make sense support printing via uiprintinteractioncontroller call uigraphicsbeginimagecontextwithoptions uigraphicsimagerenderer used instead universal link supported especially app content available online need secure data opt user touch face id vend useful interaction current context via uiactivity uiactivityviewcontroller relevant app supply app clip use system capability arkit lean platform defined convention help user get started example get arkit experience started typically use arcoachingoverlayview instead rolling solution finally running analyze function xcode yield error warning suggestion user experience top mind support native undo redo action typically shaking system defined gesture content type text view text field included correct keyboard type used current context keyboard language identifier integrated correctly support two finger drag edit gesture table collection view using custom input view place keyboard provide audible tap noise using uideviceplayinputclick got customized text input support uiscribbleinteraction customized back button image navigation controller also set backindicatortransitionmaskimage searching capability support field token handle keyboard undocked ipad view constrained via inputaccessoryview data quantifiable data transfer occurring progress indicator used activity indicator localized territory released text tends truncate never clip rather always readable tappable interface element least point entire app binary megabyte source based multitude data point delete action always followed confirmation prompt app store rich information file like keynote presentation us quick look api preview robust nsuseractivity support state restoration handoff drag drop creating new window core spotlight donating siri inintent us correct audio setting responds audio interruption gracefully audio played within custom edit option supported text image selected appropriate user provided ample time form opinion app request rating opt builtin skstorereviewcontroller ask launch screen branding free closely resembles first screen app displaying video using avplayerviewcontroller player display content original aspect ratio include extra padding around frame would cause video appear smaller fullscreen fittoscreen mode opening link could lead another app web view sfsafariviewcontroller try calling uiapplication openurl uiapplicationopenurloptionuniversallinksonly option first table view deselect selected row viewdidappear popping back loading data let user know progress operation either using determinate indeterminate view notification supply value hiddenpreviewsbodyplaceholder detail view also consider using short memorable sound make sense notification using unnotificationsound supply detail view expand context notification user accomplish task within notification without open app good thing also let user edit notification preference within app uitextinputassistantitem item used support common task ipad home within shortcut bar performing crud operation table collection view opt animate change using diffable datasource instead reloaddata testing leak freed memory part workflow consuming unnecessary amount memory power hamper everyone long running task keep ui free date using background task using system material accompany content contained within matching vibrancy effect ie mix match different semantic effect tend use system semantic color instead hard coding custom color adapt light dark mode increased contrast transparency reduction scenario also use semantic color consistent way redefine meaning ie use link label color defer providing custom gesture towards edge screen appropriate viewing medium override preferredscreenedgesdeferringsystemgestures needed user interface element constrained keyboard frame handle situation may undocked floating split support pencilkit include undo redo button compact environment additionally ensure systemwide double tap gesture modify content customized app navigation clear foolproof use either flat hierarchical contentux driven navigation use sidebar flatten information hierarchy make sense example app several folder playlist similar collection use tab bar aim item need tab likely going wrong direction modality used sparingly clearly brings back dismissed design also considers text app voice messaging part design experience stay consistent mix playful error message juxtaposed serious one io technology technical term made anyone understand ie use scan tag instead activate nfc reading session similar design drip polish correct system margin used throughout app hard coded one used ie layoutmarginsguide safearealayoutguide etc haptic feedback used throughout system complement user interaction overdone right haptics used right time example use selection selection change instead something like rigid example often accompany visual auditory feedback utilize sf symbol common io glyph apps running io later show dedicated one system apis ie glyph exclusively icloud usage use custom one custom glyph adapt well environment controller transition feel natural fluid great example calendar photo opt vector asset combat differing resolution avoid blurry asset content always focus constantly challenge true throughout development cycle particular specific user experience guideline followed segment control used toolbars five le option toolbars tab bar screen destructive action top choice action sheet alert used ideally two choice title punctuation avoid using yes choice need two choice opt action sheet picker height equal list value progress indicator bar unfolded portion track clear otherwise colored denote amount work left network activity indicator shown network request last second popover iphones avoided discard work user actively tap cancel button example someone tap outside popover work saved switch exclusively used within table list style collection view row page control always centered bottom screen aspire ship apple platform io iphone ipad watchos tvos macos animation tasteful reinforce introduce action confusing likely mimic real physical law general reduce modality possible keep focus content supply highresolution asset image use right asset format given scenario png icon bitmapraster artwork jpeg photo pdf glyph vector artwork controller specific configuration thoughtfully implemented status bar hidden exchange equal value pointer locking occurs boost experience home indicator hidden rich medium experience full width button respect uikit margin extend edge edge screen color used denote value purpose provide mixed signal example enabled disabled control colored red triangle conveys problem red used everywhere else app create rich medium apps apps primarily used reading watching provide sensible value uiwhitepointadaptivitystyle adjust along true tone handle color management well ensure color display fine srgb device app voice use consistently example app strike formal tone display error message text overtly place humorous opt lean system font better support size improve legibility consistency custom font provides value direct purpose used system font also work weight dynamic type size lastly app jank free know mean app store page logistical asset thoughtfully crafted app store preview video used keywords category carefully researched link privacy policy provided supported territory localized app icon follows golden grid likely include brand primary color well embrace simplicity conveys app main idea supply size needed spotlight setting etc otherwise io shrink app store icon ideal wrapping love checklist quality checklist constantly evolving one main reason created spend stack see could get state meet exceeds almost every single bullet point certainly quality take time nailed everything list working towards year close meeting item listed stress also mean probably shipped take piece piece work way wise honeyloving bear said get going walking away app might lack polish better ever spend time giving next time
29,Lobsters,mobile,Mobile Development,The Promise vs Reality of SwiftUI Multiplatform,https://write.as/angelo/the-promise-vs-reality-of-swiftui-multiplatform,promise v reality swiftui multiplatform,last week post tweeted letdown swiftui illustrated broken button reality multiplatform via r,happy august friend update last week post swiftui app writefreely work progressed pretty well shared code last week point got preliminary ui display list post filter collection tapping post load editor make change title content iphone ipad also new post button create new draft iphone ipad well pull chair let chat little bit gap promise reality multiplatform swiftui apps working post tweeted managed flesh key ui feature app across iphone ipad mac day thanks swiftui live preview xcode show view look like next code update realtime code stated building native app speed iteration ever encountered building web looking html cs looking react latest iteration look like far iphone ipad installed macos aka big sur beta able build mac app compare way final ui plenty work still done including replacing unusual picker view selecting collection proper sidebar adapting spacing little better mac app ca nt preview anything mac target even xcode upgrade machine macos beta one thing helpful moving quickly swiftui declarative nature let specify semantics element placement view letting framework figure mean iphone v ipad v mac great example focus developer experience dx toolbaritemplacement api let semantically state particular item add toolbar primaryaction status element used texteditor view place post status badge status area publish button primaryaction area see screenshots shared element placed differently depending whether shown iphone ipad mac nt write single line code customize difference letdown swiftui illustrated broken button life swiftui rose newdraft feature nt quite working fully yet building iphone ipad version app tapping newdraft button list post work beautifully slide new draft list open text editor next great essay thrilled working end workday friday finished installing big sur beta mac morning excited see everything looked worked mac app expected little ui refinement list post example need healthy dose padding otherwise figured similar experience least ipad app mostly picker replaced popup menu choose collection narrow list post tap post list load text editor ready change post status change instantly update badge toolbar post list tried create new draft mac clicking newdraft button appears interestingly enough next poststatus badge screenshot nothing thing error thrown view drawn nothing reality multiplatform suppose nt use word letdown multiplatform panacea reality app expects different thing iphone ipad mac issue facing newdraft button nt failing swiftui paradigm mac app treat navigation v button v instantiating new window different iphone nt structured thing way framework expects fine need spend little time adapting mac client would liked got say despite couple little issue need fix really impressed much worked right box extra work part nativeapp development may yet happen pace web development closer ever enter email subscribe update also subscribe via r follow angelo writeas mastodon
30,Lobsters,mobile,Mobile Development,5G Just Got Weird,https://spectrum.ieee.org/tech-talk/telecom/standards/5g-release-16,got weird,,
31,Lobsters,mobile,Mobile Development,Apple Security Research Device Program,https://developer.apple.com/programs/security-research-device/,apple security research device program,applying program initial application period end august applicant receive response end august apply,applying program start application sign apple id associated apple developer program membership enrolling organization need authority accept legal agreement behalf organization need list name everyone access security research device approved apple individual acknowledge responsibility initial application period end august receive response end august apply
32,Lobsters,mobile,Mobile Development,A few thoughts about Signal‚Äôs Secure Value Recovery,https://blog.cryptographyengineering.com/2020/07/10/a-few-thoughts-about-signals-secure-value-recovery/,thought signal secure value recovery,secure value recovery see article signal matter signal technology foundation signal protocol facebook messenger whatsapp surprisingly nonobvious right scanning qr code thirtydigit encryption key begun attract larger user base secure value recovery secure value recovery strong dictionary attack software guard extension update update apple google hardware security module happens sgx secure random manual highentropy phrase edit sgx done far plundervolt inject malicious code scariest attack speculative execution big deal protect account hijacking blocking access entire app addendum signal say,past several month signal rolling raft new feature make app usable one feature recently raising bit controversy user contact list backup feature based new system called secure value recovery svr svr feature allows signal upload contact signal server without ostensibly even signal able access new signal approach created trauma security people due fact recently enabled without particularly clear explanation shorter summary issue see article post want delve little bit deeper decision made concerned signal try mitigate concern signal matter familiar signal opensource app developed moxie marlinkspike signal technology foundation signal received lot love security community basically two reason first signal app served sort technology demo signal protocol fundamental underlying cryptography power popular apps like facebook messenger whatsapp billion user second signal app popular securityminded people mostly app relatively smaller technical user base tended towards nocompromises approach security experience wherever usability concern come conflict security signal historically chosen cautious safer approach compared commercial alternative like whatsapp strategy obtaining largescale adoption lousy one goal build really secure messaging product impressive let give example encrypted messenger like whatsapp apple imessage routinely back text message content contact list remote cloud server backup undo much strong security offered endtoend encryption since make much easier hacker government obtain plaintext content disable backup surprisingly nonobvious right least larger service justify backup default pointing lesstechnical user tend worried lost message history theoretical cloud hack signal contrast taken much cautious approach backup june year finally added way manually transfer message history one iphone another transfer involves scanning qr code android cloud backup possible user willing write thirtydigit encryption key probably really annoying many user absolutely fantastic security similarly since signal relies entirely phone number contact database point admittedly many user hate never back contact list server changed recently signal begun attract larger user base user traditional expectation enter picture unhappy signal limitation response signal developer begun explore way offer feature without compromising security plain challenging feel developer one area tried square circle new solution contact backup system called secure value recovery secure value recovery signal secure value recovery svr cloudbased system allows user store encrypted data signal server even signal access without usability headache come traditional encryption key management moment svr used store user contact list message content although data may menu backup future challenge storing encrypted backup data strong encryption requires strong high entropy cryptographic key password since u terrible selecting let alone remembering strong password pose challenging problem moreover key stored device since whole point backup deal lost device goal svr allow user protect data much weaker password human actually memorize pin traditional passwordbased encryption password would completely insecure motivated attacker obtained encrypted data signal server could simply run dictionary attack trying password second minute thus obtaining data signal svr solves problem ageold way introduces computer even signal hack specifically signal make use new extension intel processor called software guard extension sgx sgx allows user write program called enclave run special virtualized processor mode mode enclave invisible untouchable software computer including operating system storage needed enclave persistently store seal data attempt tamper program render data inaccessible update note signal svr seal data persistently included draft thinking misremembered technology preview signal svr deploys enclave program signal server program performs simple function user generates store random cryptographic secret seed along hash user pin user contact server present hash pin enclave ask cryptographic seed hash match enclave stored server delivers secret seed client mix together pin result cryptographically strong encryption key used encrypt decrypt backup data update thanks dino dai zovi correcting detail key approach encryption key depends user password strong cryptographic secret stored sgx enclave server sgx job even user hack signal server include signal developer perhaps operating duress unable retrieve user secret value way access backup encryption key actually run enclave program enter user hashed pin prevent bruteforce guessing enclave keep track number incorrect pinentry attempt allow limited number lock user account entirely elegant approach conceptually quite similar system already deployed apple google use dedicated hardware security module implement trusted component rather sgx key weakness svr approach depends strongly security integrity sgx execution discus moment sgx exactly spotless record happens sgx secure anytime encounter system relies fundamentally trustworthiness component particularly component exists commodity hardware first question happens component actually trustworthy svr question take great deal relevance let step back recall goal svr ensure three thing backup encryption key based least part user chosen password strong password mean strong encryption keyseven weak password encryption key still cryptographic strength come integration random seed get chosen stored sgxno attacker able bruteforce way password space enforced sgx via guessing limit example highentropy passphrase random manual please use signal password note first goal really enforced cryptography goal achieved user selects strong highentropy password example look like see picture right remaining goal rely entirely integrity sgx let play devil advocate think happens svr sgx secure attacker able dump memory space running signal sgx enclave able expose secret seed value well user password hash value hand attacker run basic offline dictionary attack recover user backup key passphrase difficulty completing attack depends entirely strength user password phrase fine pin strongly encouraged ui signal app sensitivity data becomes even worse pin happens phone passcode make sure similarly attacker able compromise integrity sgx execution example cause enclave run using stale state rather new data might able defeat limit number incorrect password retry attempt would allow attacker run active guessing attack enclave recover pin edit noted relevant svr data stored ram never sealed written disk final subtle concern come fact signal svr also allows replication backup database address real concern signal part backup server could fail resulting loss user backup data would ux nightmare understandably signal want user exposed deal signal operator spin new instance signal server cloud provider new instance second copy sgx enclave software software request copy full seed database original enclave even sophisticated consensus protocol make sure two copy stay agreement state retry counter copy made important thing keep mind security replication process depends entirely idea original enclave hand data another instance enclave software running secure sgxenabled processor possible trick original enclave status new enclave example convince hand database system merely emulating sgx enclave normal execution mode compromised signal operator would able use mechanism exfiltrate plaintext copy database would break system entirely prevention attack accomplished via another feature intel sgx called remote attestation essentially intel processor contains unique digital signing key allows attest fact legitimate intel processor running specific piece enclave software signature verified assistance intel allows enclave verify talking directly another legitimate enclave power system also contains fragility single sgx attestation key extracted single sgxenabled processor would provide backdoor entity able compromise signal developer concern mind worth asking realistic sgx meet high security bar need make system work sgx done far well honest list sgx compromise given wikipedia really tell whole story various attack sgx many varied largely common cause sgx designed provide virtualized execution program complex generalpurpose processor said processor lot weird unexplored behavior attacker get processor misbehave turn undermine security sgx lead attack plundervolt malicious software able tamper voltage level processor realtime causing fault leak critical data includes attack leverage glitch way enclave loaded allow attacker inject malicious code place proper enclave scariest attack sgx rely speculative execution side channel allow attacker extract secret sgx including basically working memory used enclave could allow extraction value like seed key used signal svr sealing key used encrypt data disk worse attack twice successful extracting cryptographic signing key used perform cryptographic attestation recent one patched week ago much live attack bet forthcoming last part bad svr attacker extract even single copy one processor attestation signing key compromise signal admin secret potentially force signal replicate database onto simulated sgx enclave actually running inside sgx svr replicated database system everyone secret seed data would available plaintext really scare attack listed simply result academic exploration system given point past two year able beer someone like daniel genkin u mich daniel grus tu graz know either professor team sitting least one catastrophic unpatched vulnerability sgx smart people smart people world smart people resource would much like access backedup signal data worth pointing attack softwareonly attack assume attacker able get logical access server attack restricted sgx really designed defend sophisticated physical attacker might attempt tap system bus make direct attempt unpackage attach probe processor attack costly challenging certainly agency would difficulty executing finally also mention security svr approach assumes intel honest frankly probably assumption already making let punt big deal major issue svr something basically want trust happy signal offering option user long user allowed choose use unfortunately week signal giving user choice concretely week ago signal began nagging user create pin code app really explain well setting pin would start svr backup many people spoke said believed pin protecting local storage protect account hijacking signal ask pin followed common dark pattern born silicon valley basically forcing user add pin first nagging repeatedly ultimately blocking access entire app giant modal dialog bad behavior merit critically probably result good pin choice make go away chose simplest pin app would allow assume many user simply entered phone passcodes nasty security risk say big deal since svr currently protects user contact list already stored cleartext competing messaging system fact one argument moxie made buy nobody going engineer something complex signal svr store contact list hammer like svr going want use knock nail find critical data user tired losing apply svr back data since message content backup one bigger pain point signal user experience sooner later want apply svr solving problem past view would fine since signal would surely give user ability opt message backup recent decision signal shaken confidence addendum signal say originally post section summarized discussion moxie around issue respect moxie removed request think fair let moxie address issue directly without filtered rewritten section simply want make point following discussion twitter workaround issue either choose set highentropy passcode phrase forget screw account unless turn registration lock feature use new disable pin advanced feature signal latest beta essentially thing automated way seems like good addition still think discussion around consent optin start
33,Lobsters,mobile,Mobile Development,Dealing with phone numbers in contact book,https://ashishb.net/tech/dealing-with-phone-numbers-in-contact-book/,dealing phone number contact book,telephone country code prefixfree telephone number multiple representation std call multiple country share telephone code continuous area code country code always adjacent confirming phone number ownership like post navigation,building app us user contact book certain gotchas avoid telephone country code prefixfree country country code country get country code like scheme ensures number inherently unambiguous telephone number multiple representation since people dial internationally telecom system implicitly assume domestic call someone dialing u dialing person india dialing since international dialing would infrequent telecom require unique prefix number like distinguish whether someone country austria state even domestic area code explicitly required user might stored phone number telecom implicitly prefix user area code user want dial beyond area telecom operator would require additional prefix mark std call localization massive implication regarding processing cleaning normalizing phone number retrieved user contact book country code area code contain usually superfluous telecom might ok calling sending sm treat number like incorrect multiple country share telephone code usa canada many country caribbean share telephony code carrier would treat call sm international though italy vatican city share continuous area code country code always adjacent population grows certain area others code reserved region get allotted example san francisco bay area first allocated top existing area code deal growing population confirming phone number ownership never trust incoming call incoming sm phone number therefore way verify user owns phone number sending text message making phone call like like loading post navigation
34,Lobsters,mobile,Mobile Development,System hardening in Android 11,https://security.googleblog.com/2020/06/system-hardening-in-android-11.html,system hardening android,initializing memory aslr stack heap spray undefined behavior initializing userspace initializing kernel stack heap scudo android default native allocator finding heap memory safety bug wild gwpasan available developer application software tagbased kasan adopting arm memory tagging extension hwasan software tagbased kasan hwasan kerneladdresssanitizer software tagbased mode generic kasan kernel commit expanding existing compiler mitigation prior release cfi networking daemon dns resolver effectiveness software codec sandbox announced new constrained sandbox software codecs,posted platform hardening team android continue increase security android platform moved safer default setting migrated hardened memory allocator expanded use compiler mitigation defend class vulnerability frustrate exploitation technique initializing memory enabled form automatic memory initialization android userspace linux kernel uninitialized memory bug occur cc memory used without first initialized known safe value type bug confusing even term uninitialized misleading uninitialized may seem imply variable random value reality random whatever value previously placed value may predictable even attacker controlled unfortunately behavior result serious vulnerability information disclosure bug like aslr bypass control flow hijacking via stack heap spray another possible side effect using uninitialized value advanced compiler optimization may transform code unpredictably considered undefined behavior relevant c standard practice us uninitialized memory difficult detect error may sit codebase unnoticed year memory happens initialized safe value time uninitialized memory result bug often challenging identify source error particularly rarely triggeredeliminating entire class bug lot effective hunting individually automatic stack variable initialization relies feature clang compiler allows choosing initializing local variable either zero patterninitializing zero provides safer default string pointer index size downside zero init lesssafe default return value exposing fewer bug underlying code relies zero initialization pattern initialization tends expose bug generally safer return value le safe string pointer index size initializing userspace automatic stack variable initialization enabled throughout entire android userspace development android initially selected pattern order uncover bug relying zero init moved zeroinit month increased safety platform o developer build autopatterninitializetrue want help uncovering bug relying zero init initializing kernel automatic stack heap initialization recently merged upstream linux kernel made feature available earlier version android kernel including feature enforce initialization local variable heap allocation known value controlled attacker useless leaked feature result performance overhead also prevent undefined behavior improving stability security kernel stack initialization adopted configinitstackall upstream linux currently relies clang pattern initialization stack variable although subject change future heap initialization controlled two boottime flag initonalloc initonfree former wiping freshly allocated heap object zero think skmallockzalloc whole kernel latter object freed help reduce lifetime securitysensitive data initonalloc lot cachefriendly smaller performance impact within therefore chosen protect android kernel scudo android default native allocator android scudo replaces jemalloc default native allocator android scudo hardened memory allocator designed help detect mitigate memory corruption bug heap scudo fully prevent exploitation add number sanity check effective strengthening heap memory corruption bug also proactively organizes heap way make exploitation memory corruption difficult reducing predictability allocation pattern separating allocation size internal testing scudo already proven worth surfacing security stability bug previously undetected finding heap memory safety bug wild gwpasan android introduces gwpasan inproduction heap memory safety bug detection tool integrated directly native allocator scudo gwpasan probabilistically detects provides actionable report heap memory safety bug occur work process enabled default system process system apps gwpasan also available developer application via one line optin app androidmanifestxml complicated build support recompilation prebuilt library necessary software tagbased kasan continuing work adopting arm memory tagging extension mte android android includes support kernel hwasan also known software tagbased kasan userspace hwasan supported since android kerneladdresssanitizer kasan dynamic memory error detector designed find outofbound useafterfree bug linux kernel software tagbased mode software implementation memory tagging concept kernel software tagbased kasan available android kernel enabled configkasanswtags kernel configuration option currently tagbased kasan support tagging slab memory support type memory stack globals added future compared generic kasan tagbased kasan significantly lower memory requirement see kernel commit detail make usable dog food testing device another use case software tagbased kasan checking existing kernel code compatibility memory tagging tagbased kasan based similar concept future inkernel mte support making sure kernel code work tagbased kasan ease inkernel mte integration future expanding existing compiler mitigation continued expand compiler mitigation rolled prior release well includes adding integer bound sanitizers core library lacking example libminikin font library libui rendering library bound sanitized hardened nfc stack implementing integer overflow sanitizer bound sanitizer component addition hard mitigation like sanitizers also continue expand use cfi exploit mitigation cfi enabled android networking daemon dns resolver core javascript library like pacprocessor effectiveness software codec sandbox prior release android announced new constrained sandbox software codecs really pleased result thus far android first android release since infamous stagefright vulnerability android zero criticalseverity vulnerability medium framework thank jeff vander stoep alexander potapenko stephen hines andrey konovalov mitch phillips ivan lozano kostya kortchinsky christopher ferris cindy zhou evgenii stepanov kevin deus peter collingbourne elliott hughes kees cook ken chen contribution post
35,Lobsters,mobile,Mobile Development,Using Extension Methods in Flutter for the Provider Lookup,https://zaiste.net/posts/extension-methods-flutter-provider/,using extension method flutter provider lookup,youtube channel dart flutter newsletter,dart add extension method feature allows add new member method existing type extension method invoked like regular method even though static function note define extension method instance method also operator setter getters field adapted name would extension member dart team however decided name feature similarly programming language sound familiar extension method solve issue wrapping object order augment wrapped object additional feature word feature allows simplify use helper method extension method nt make regular wrapper however writing inside extension method declaration refers object wrapped wrapping object important extension method syntax somehow similar class mixin syntax definition could suggest extension method declaration refers true without extension method need wrap string using helper class method class util static string capitalize string input return inputisempty input input touppercase inputsubstring void main print utilcapitalize quick brown fox jump lazy dog extension method call new method directly string value moreover method made available getter convenience extension capitalizeextension string string get capitalize return thisisempty touppercase thissubstring void main print quick brown fox jump lazy dogcapitalize compiler automatically wrap expressionmethod extension expression method long extension accessible applicable nt already member name context flutter use extension method simplify way looking provider data widget tree traditionally wrap flutter context using providerof since dart define following extension method extension myextension buildcontext provide providerof write contextprovide string instead providerof string context invoke provider method directly flutter buildcontext nt access flutter class using extension method extend method available context variable following youtube video refactoring flutter application use extension method provider class simplify data lookup video liked article video consider subscribing youtube channel dart flutter newsletter
36,Lobsters,mobile,Mobile Development,Are you using SVG favicons yet? A guide for modern browsers,https://medium.com/swlh/are-you-using-svg-favicons-yet-a-guide-for-modern-browsers-836a6aace3df,using svg favicons yet guide modern browser,using svg favicons yet guide modern browser icon mask icon touch icon manifest lighthouse done everything else dark mode http medium result,using svg favicons yet guide modern browsersyou using svg favicons supported modern browser right nowalso probably need icon link size copying project project let find absolute minimum required word wordiconthe main favicon svg size type type imagesvgxml unnecessary link rel icon href faviconsvg mask iconfor safari bit different need add maskicon also svg made single colour placed transparent background browser add colour attribute link rel maskicon href maskiconsvg color touch iconthe icon io device well favourite browser new tab page need x size size attribute superfluous link rel appletouchicon href appletouchiconpng manifestthe manifestjson provides information web app website line mandatory pas lighthouse test icon linked used android chrome largest size x one needed name starter shortname starter icon src googletouchiconpng size backgroundcolor ffffff themecolor ffffff display fullscreen themecolor meta still required android chrome browser colour meta name themecolor content ffffff donethat icon need current modern browser everything else unnecessary msapplicationtileimage added want different icon window tile otherwise appletouchicon used tilecolor used anymoreeverything elsesadly everyone modern browser yet easily resolved dropping x faviconico root website work everywhere else even grandma sdark modeto finish tip dark mode one benefit svg favicon change colour cs using preferscolorscheme medium query colour favicon change user dark light mode method work maskicon since colour attribute safari add white background enough contrast svg xmlns http width height style path fill medium preferscolorscheme dark path fill fff style path fillrule evenodd svg resulthere final result copy head website forget place faviconico root meta name themecolor content ffffff link rel icon href faviconsvg link rel maskicon href maskiconsvg color link rel appletouchicon href appletouchiconpng link rel manifest href manifestjson
37,Lobsters,mobile,Mobile Development,Design and Anatomy of a Push Notification 2020,https://onesignal.com/blog/push-notification-design-anatomy/,design anatomy push notification,apple io google android huawei android amazon echo macos window chrome safari firefox edge platform little bit different line text image character restriction operating system figma push notification ui kit web push chrome macos browser icon title domain content icon web push firefox macos browser icon title domain content icon web push safari macos icon title content web push chrome window banner image icon browser action button title content domain web push firefox window title icon domain content setting web push chrome android badge title body large picture browser domain time stamp icon mobile push android native small icon title body large picture action button app name time stamp icon mobile push io native app icon rich medium title message app name option action button free push notification ui kit figma push notification ui kit figma useful push resource p hiring designer developer,push notification around year first introduced io quickly rolled across major mobile operating system web push came along today push notification supported across apple io google android huawei android amazon echo macos window chrome safari firefox edge list go onunfortunately platform little bit different daunting complicated get head around exactly go push notification many line text need many image character restriction look like operating system access share insight help navigate design notification dissecting anatomy designer find figma push notification ui kit usefulweb push chrome macoschrome push notification macosbrowser iconchrome icon changedtitlerestricted charactersdomainwebsite user subscribed changedcontentrestricted larger png jpg gif animated note character restriction vary depending icon present character used chrome macos also support action buttonsweb push firefox macosfirefox push notification macosbrowser iconfirefox icon changedtitlerestricted charactersdomainwebsite user subscribed changedcontentrestricted larger png jpg gif animated note character restriction vary depending icon present character usedweb push safari macossafari push notification macosiconthis set changed per individual message must png jpg gif animated titlerestricted characterscontentrestricted charactersnotice safari browser icon display domainweb push chrome windowschrome push notification windowsbanner aspect ratio png jpg gif animated larger png jpg gif animated browsercan changedaction buttonssupports buttonstitlerestricted characterscontentrestricted charactersdomainwebsite user subscribed changedwindows offer screen real estate imagery banner image icon displayweb push firefox windowsfirefox push notification windowstitlerestricted larger png jpg gif animated domainwebsite user subscribed changedcontentrestricted characterssettingscan changedweb push chrome androidchrome push notification larger must white transparent background pngtitlerestricted charactersbodyrestricted characterslarge aspect ratio png jpg gif animated browsercan changeddomainwebsite user subscribed changedtime stampwhen message larger png jpg gif animated mobile push android nativenative push notification androidsmall fit device size must white transparent background pngtitlerestricted charactersbodyrestricted characterslarge aspect ratio png jpg gif animated action buttonssupports buttonsapp namecan changedtime stamptime message larger png jpg gif animated mobile push io nativenative push notification iosapp iconuses app default icon changedrich aspect ratio png jpg gif wavtitlerestricted charactersmessagerestricted charactersapp namecan changedoptionscan changedaction buttonssupports buttonsios also support subtitle note unlike android io currently support web pushfree push notification ui kit figmaif designer working project utilizes push check free figma design file push notification ui kit figmaother useful push resourcesps hiring designer developer
38,Lobsters,mobile,Mobile Development,Making a right keyboard accessory view in React Native,https://dev.to/demchenkoalex/making-a-right-keyboard-accessory-view-in-react-native-4n3p,making right keyboard accessory view react native,solution panresponder bonus http githubcomflyerhqreactnativekeyboardaccessoryview,hello name alex mobile software engineer professional experience io react native development like share story creating first opensource library react native one project needed custom view stick keyboard top open usually easy thing listen keyboard openclose event adjust view position accordingly however use scroll view keyboarddismissmode set interactive try dismiss keyboard interactively drag gesture view stay position open keyboard fully closed wanted move synchrony touch used experiencing native io apps later found inputaccessoryview component react native adding bingo view following keyboard flawlessly thought case closed moved noticed two weird bug firstly content accessory view nt resized phone orientation change posted issue secondly input accessory simply disappears every time present modal view stale issue regarding never resolved moment decided write solution solution mentioned nt want interactive dismiss support io enough listen keyboard openclose event case keyboardwillchangeframe event available android io thing left track finger position screen value higher keyboard top line change bottom value accessory view fortunately something called panresponder react native wrote simple hook export const usepanresponder const positiony setpositiony reactusestate const panresponder reactuseref panrespondercreate onpanrespondermove gesturestate setpositiony gesturestatemovey onpanresponderend setpositiony current return panhandler platformos android panresponderpanhandlers positiony see android panhandler empty object interactive dismiss need destructure panhandler scrollable component pas provided positiony keyboardaccessoryview another important part offset scrollable content accordingly aside keyboard dimension also need height accessory view height dynamic eg multiline text input another simple hook created provides dynamic size value export const usecomponentsize const size setsize reactusestate height width const onlayout reactusecallback event layoutchangeevent const height width eventnativeeventlayout setsize height width return onlayout size based accessory view size keyboard dimension keyboardaccessoryview component provides oncontentbottominsetupdate callback used adjust content offset bonus using reactnativetestinglibrary testing purpose one question trigger keyboardwillchangeframe event test code turn simple making mock nativeeventemitter jest setup file later test file emit different event jest setup jestmock reactnativelibrarieseventemitternativeeventemitter test file import nativeeventemitter reactnative import act reactnativetestinglibrary const emitter new nativeeventemitter act emitteremit keyboardwillchangeframe keyboardopenevent emitteremit didupdatedimensions screen scaledsize window scaledsize hope learned something new article thanks reading final result found http githubcomflyerhqreactnativekeyboardaccessoryview
39,Lobsters,mobile,Mobile Development,Flutter State Restoration,https://docs.google.com/document/d/1KIiq5CdqnSXxQXbZIDy2Ukc-JHFyLak1JR8e2cm3eO4/edit,flutter state restoration,,javascript nt enabled browser file ca nt opened enable reload
40,Lobsters,mobile,Mobile Development,"Looking back at how Signal works, as the world moves forward",https://signal.org/blog/looking-back-as-the-world-moves-forward/,looking back signal work world move forward,worked aclu see full subpoena response approach publish account data sync different software open source c nonprofit moving forward facebook want get involved signal hiring,midst worldwide protest racism police brutality lot people becoming immediately aware concerned security data online communication gotten lot question signal past week wanted briefly recap designed signal think concept like privacy security trustwhat worst happen unauthorized party compromise signal speak hypothetically u government already tried examine looked like u government obtained access signal user data grand jury subpoena eastern district virginia however still really anything obtain time worked aclu fight gag order intended prevent u publishing information see full subpoena response herethe signal user data data u government obtained result date account creation date last use user message group contact profile information anything elsethis designed signal keep data hand rather signal us endtoend encryption never access content message send visible intended recipient however signal also applies design philosophy rest data wellour approachunlike popular messaging apps signal also access contact social graph group data group membership profile name profile avatar location data gif search etc include tracker ad analytics software allbecause built signal completely avoid storing sensitive information stand stage front thousand people publish account data publicly without revealing anything long signal installed since last replaced phone last date signal installed today btw ask ceo major communication platform publicly publish account data platform ti blame lot data would probably uncomfortable sharing raise question whether comfortable sharing data themsync differentthis represents fundamental difference think concept like privacy security trust believe security privacy responsibly managing data control rather keeping data anyone else hand including ownwe believe even year trying anything else proven losing strategy data breach data breach incentive emerged monetary value data led dramatic loss privacy online especially intimate conversation havewe believe trust trusting u data rather trusting engineering ability knowhow design software keep data hand rather anyone else order help build trust made software open source anyone look design build thing secret never access secret begin withwe also make technology publicly available free signal c nonprofit mission increase privacy online publish technology share knowledge encourage company adopt product servicesmoving forward youevery feature add signal new opportunity make sure information accessible organization handle user data always felt like right approach u contact conversation photo information powerful voice organizing advocating changekeep sending message keep making sure get delivered securely facebookwant get involved signal hiring
41,Lobsters,mobile,Mobile Development,Stack Overflow Developer Survey 2020,https://insights.stackoverflow.com/survey/2020,stack overflow developer survey,,report based survey software developer country around world number response consider qualified analytical purpose based time spent full completed survey another approximately response submitted included analysis respondent spent le three minute survey country listed survey fielded february february median time spent survey qualified response minute minute last year respondent recruited primarily channel owned stack overflow top source respondent onsite messaging blog post email list banner ad social medium post since respondent recruited way highly engaged user stack overflow likely notice prompt take survey duration collection promotion incentive respondent finished survey could opt census badge completed survey due united state transportexport sanction survey unfortunately unaccessible prospective respondent crimea cuba iran north korea syria due traffic blocked third party survey software respondent used vpns get around block limitation kept mind interpreting survey result year past analysis professional developer based site activity stack overflow year utilized answer regarding employment deduce whether respondent qualifies professional developer built analysis based qualification asked respondent salary first asked currency respondent typically used asked respondent salary currency whether salary weekly monthly yearly converted salary user currency usd using exchange rate also converted annual salary assuming working month working week question like survey optional respondent gave u salary data top approximately salary inside outside u trimmed replaced threshold value threshold value inside outside u different many question shown respondent based previous answer example question job work shown said working job question organized several block question randomized order also answer question randomized order identify technology include survey year looked popular fastest growing tag stack overflow term question posted compared technology included last year looked many people chose option synthesized together curate collection technology include
42,Lobsters,mobile,Mobile Development,LambdaNative: Build mobile and embedded apps in Scheme,http://www.lambdanative.org/,lambdanative build mobile embedded apps scheme,petersen cl g√∂rges dustin ansermino jm dumont ga experience report functional programming mhealth application international conference functional programming icfp,publicationspublications involving lambdanativebased technology g√∂rges petersen cl ansermino jm trusted timestamps new old tool ensure integrity authenticity research clinical data society technology anesthesia sta palm beach flpetersen cl katz z g√∂rges west n dumont ga ansermino jm systematic comparison depth hypnosis index intravenous volatile anesthesia electroencephalogram replay society technology anesthesia sta palm beach flpetersen cl katz z g√∂rges west n dumont ga ansermino jm epoch clinically relevant disagreement depth hypnosis monitor observed replay electroencephalogram society technology anesthesia sta palm beach flpetersen cl mallinson venn r dumont ga ansermino jm towards ultrahigh resolution signal converter electroencephalogram monitoring society technology anesthesia sta palm beach flpetersen cl katz z g√∂rges dumont ga ansermino jm dropletbased simulation photoplethysmogram waveform oxygen saturation society technology anesthesia sta palm beach flpetersen cl ansermino jm dumont ga smartphonebased eeg anesthesia simulator nwac world anesthesia convention vancouver bc april may cl g√∂rges ansermino jm dumont ga simulating dynamic hypnotic drug effect eeg anesthesia simulator nwac world anesthesia convention vancouver bc april may tp petersen cl ansermino jm dumont ga comparing operating range lowcost pulse oximeter society technology anesthesia sta phoenix azpetersen cl ansermino jm dumont ga towards depth hypnosis eeg simulator society technology anesthesia sta phoenix azg√∂rges petersen cl ansermino jm lnhealth rapid medical software development platform using iot communication standard medical device interoperability society technology anesthesia sta phoenix azdunsmuir dt payne ba cloete g petersen cl g√∂rges lim j von dadelszen p dumont ga ansermino jm development mhealth application preeclampsia triage ieee journal biomedical health informatics gan h chiu petersen cl dumont ga ansermino jm mobile application measuring respiratory rate canadian pediatric anesthesia society cpa meeting montreal qc september cl phone oximeter mobile pointofcare monitor diagnostic device design crc press isbn september cl g√∂rges ansermino jm dumont ga schemebased closedloop anesthesia system proceeding ilc montreal canadapetersen cl ansermino jm dumont ga iswirl selfaffine visualization ppg ecg waveform society technology anesthesia sta orlando flpetersen cl gan h g√∂rges ansermino jm dumont ga comparison motion artifact response three mobile pulse oximeter society technology anesthesia sta orlando flumedaly west n van heusden k g√∂rges petersen cl dumont ga ansermino jm merchant rn robust closedloop control anesthesia adult undergoing elective surgery society technology anesthesia sta orlando fldunsmuir karlen w gan h chiu petersen cl dumont ga ansermino jm design respiratory rate mobile application society technology anesthesia sta orlando flg√∂rges baxter p coelho cooper b gagne j thomas p petersen cl dumont ga ansermino jm portable operating room tracker teleport analysis system usage identification area improvement society technology anesthesia sta orlando flpetersen cl chen tp ansermino jm dumont ga design evaluation low cost smartphone pulse oximeter sensor cl gan h g√∂rges dumont ga ansermino jm systematic evaluation mobile phone pulse oximetry performance anesthesiology san francisco cag√∂rges van heusden k west n umedaly petersen cl dumont ga ansermino jm merchant rn response noxious stimulus closedloop controlled propofol anesthesia target controlled infusion remifentanil international society anaesthetic pharmacology isap cl g√∂rges dustin ansermino jm dumont ga experience report functional programming mhealth application international conference functional programming icfp h petersen c macinnis jm dumont ga ansermino jm calibration evaluation novel low cost pulse oximeter sensor annual meeting canadian anesthesiologist society calgary canada jun cl gan h macinnis mj dumont ga ansermino jm ultralowcost clinical pulse oximetry proc annual international conference ieee engineering medicine biology society p j nguku sm sleiman j karlen w dumont ga petersen cl warriner cb ansermino jm usability testing prototype phone oximeter healthcare provider high lowmedical resource environment anesthesia cl gan h ansermino jm dumont ga comparing new ultralow cost pulse oximeter two commercial oximeter iampov international symposium yale university new june july jr cooke e petersen cl karlen w froese n lim j ansermino jm pulse oximeter plethysmograph variation relationship arterial waveform mechanically ventilated child j clin monit comput mar epub ahead print van heusden k dumont ga soltesz k petersen cl west n ansermino jm clinical evaluation closedloop controlled propofol infusion child world congress anesthesiologist buenos aries argentina march n dumont ga van heusden k khosravi petersen cl ansermino jm administration closedloop control anesthesia gastrointestinal endoscopic investigation child society pediatric anesthesia aap pediatric anesthesiology annual meeting tampa fl usa february cl ansermino jm dumont ga audio pulse oximeter society technology anesthesia annual meeting palm beach fl usa january cl ansermino jm dumont ga highspeed algorithm plethysmograph peak detection realtime application society technology anesthesia annual meeting palm beach fl usa january heusden k dumont ga soltesz k petersen cl west n ansermino jm robust pid control closedloop propofol infusion child society technology anesthesia annual meeting palm beach fl usa january petersen cl karlen w lim j dumont ga ansermino jm phone oximeter mobile spotcheck society technology anesthesia annual meeting palm beach fl usa january petersen cl ansermino jm capturing vital sign research multibed monitoring environment proceeding society technology anesthesia annual meeting p g liu n petersen cl chazot fischler closedloop administration propofol guided neurosense clinical evaluation using robust proportional integralderivative design american society anesthesiologist asa annual meeting w hudson j lim j petersen cl anand r dumont ga ansermino jm phone oximeter ieee engineering medicine biology society unconference boston usa august w dumont g petersen cl gow j lim j sleiman j ansermino jm human centered phone oximeter interface design operating room proceeding international conference health informatics rome italy p jr cooke e petersen cl froese n lim j amsermino jm arterial oximeter wave relationship ventilated child canadian anesthesiologist society annual meeting montreal canada jun jr cooke e petersen cl froese n lim j ansermino jm arterial plethysmograph waveform relationship child side coin ubc department anesthesiology pharmacology therapeutic research day vancouver canada jun jr cooke e petersen cl froese n lim j ansermino jm respiratory induced change pulse pressure pulse oximeter plethysmograph wave amplitude related ventilated child international anesthesia research society annual meeting honolulu hi usa mar w petersen cl pickard dumont g ansermino jm capillary refill time assessment using mobile phone application irefill asa abstract
43,Lobsters,mobile,Mobile Development,The Price is (Not) Right: Comparing Privacy in Free and Paid Apps (PETS ‚Äô20),https://blues.cs.berkeley.edu/blog/2020/03/25/the-price-is-not-right-comparing-privacy-in-free-and-paid-apps-pets-20/,price right comparing privacy free paid apps pet,abstract citation,abstractit commonly assumed free mobile apps come cost consumer privacy paying apps could offer consumer protection behavioral advertising longterm tracking work empirically evaluates validity assumption comparing privacy practice free apps paid premium version also gauging consumer expectation surrounding free paid apps use static dynamic analysis examine pair free android apps paid counterpart difference data collection practice privacy policy pair understand user expectation paid apps conducted online survey found consumer expect paid apps better security privacy behavior however clear evidence paying app actually guarantee protection extensive data collection practice given free version least one thirdparty library dangerous permission respectively discovered paid version reused thirdparty library free version paid version dangerous permission held free app likewise dynamic analysis revealed paid apps exhibit data collection transmission behavior free counterpart finally found apps privacy policy link google play store pair reflected difference free paid version citationcatherine han irwin reyes √°lvaro feal joel reardon primal wijesekera narseo vallinarodriguez amit elazari kenneth bamberger serge egelman price right comparing privacy free paid apps appear proceeding privacy enhancing technology popets
44,Lobsters,mobile,Mobile Development,Sxmo: Simple X Mobile - A Pinephone UI that is simple and suckless,https://sr.ht/~mil/Sxmo/,sxmo simple x mobile pinephone ui simple suckless,sxmo simple x mobile project overview install guide user guide contributing image alpine repository demo video sxmo suckless unix philosophy pinephone pinephone button action dwm swipe gesture lisgd menu interface dmenu onscreen keyboard svkbd window managment dwm call texting dmenu scriptsmmcli incoming textcall notification script lock screen custom c program menu script web browser surf terminal st application systemmenus applicationspecific menu login screen xdm alpine linux pmos based image,sxmo simple x mobile project overview install guide user guide contributing image alpine repository demo video sxmo simple x mobile collection simple suckless x program script used together create fully functional mobile ui adhering unix philosophy pinephone control ui largely using pinephone button press different number time quickly different action swipe gesture overview sxmo feature pinephone button action via dwm press hardware button different number time different action like launching terminal browser window management swipe gesture via lisgd move workspace move window workspace raiselower volume via swipe gesture menu interface via dmenu use pinephone hardware button select menu entry eg volume upvolume downselect translates previousnextselect onscreen keyboard via svkbd multiple layer responsive onscreen keyboard autoadjusts wm space window managment via dwm arrange window classic dwm layout like monocle tile bstack kill client cycle window focus using pinephone button call texting via dmenu scriptsmmcli compose text editor vimlike editor read text pager make call audioroute via dmenu script utilizing modemmanager incoming textcall notification via script vibrate phone blink led incoming calltext lock screen via custom c program disable screen input toggle screen onoff listening music pocket use menu script web search file countdown timer youtube audio video mpvbased weather r web browser via surf browse web saving screenspace includes pinephone button via dmenu based linkfollowing terminal via st excellent terminal support scrollback copypaste color invert application prebaked image bundle foxtrotgps gps sacc gopher client firefox netsurf web browser systemmenus control volume brightness camera wifi logout modem info launching apps applicationspecific menu increase fontsize zoom paste perapplication level via dmenu script login screen via xdm loginlogout via xdm launch onscreen keyboard alpine linux pmos based image infrastructure bakes image live ontop pmosalpine linux keep thing small simple pragmatic
46,Lobsters,mobile,Mobile Development,King releases the Defold game engine under a permissive license,https://defold.com/2020/05/19/Defold-is-now-open-source/,king release defold game engine permissive license,learn defold open source page,mobile game company king today announced free use defold game engine sharing source code inviting collaborator partner part process king transferred defold software foundation defold foundation stockholm sweden may mobile game company king today announced defold game engine sharing source code inviting collaborator partner part process king transferred defold software foundation defold foundation defold foundation taken full ownership defold product service including website build server user forum social medium channel source code available github immensely proud able make defold source code available open contribution eager start journey free use source available game engine together great community game developer building game using defold would also wish thank king believing vision entrusting defold defold foundation say bj√∂rn ritzl product owner defold foundation developer original development team leave king work full time defold behalf defold foundation foundation work closely developer community industry partner drive new development beyond defold foundation board headed sara cederberg king include industry profile elin eriksson woman tech sweden hugely impressed defold team look forward seeing many great gaming experience come life seen million player already playing king game run defold engine excited see community come together even support defold foundation say tjodolf sommestad chief development officer king defold foundation defold foundation owner free use developerfriendly source available game engine defold foundation work together industry partner provide free open software service game developer across globe foundation created may registered stockholm sweden defold defold free use source available game engine developerfriendly license used development crossplatform game defold used growing number developer create commercial hit well game game jam school teach game development defold known ease use praised technical documentation friendly community developer king king leading interactive entertainment company mobile world million monthly active user first quarter across web social mobile platform developed exclusive game enjoyed around world kingcom facebook mobile distribution platform apple app store google play store microsoft window app store amazon appstore king acquired activision blizzard nasdaq atvi february king game studio stockholm malmo london barcelona berlin along office malta san francisco sara cederberg chairperson defold foundation sara defoldse bj√∂rn ritzl product owner defold foundation bjorn defoldse learn head defold open source page learn contribute support foundation
47,Lobsters,mobile,Mobile Development,Server vs mobile development: Where the code runs matter,https://ashishb.net/tech/server-vs-mobile-development-where-code-runs-matter/,server v mobile development code run matter,like post navigation,code run server much control context run mobile device device o user control context difference lead subtle implication one significant set difference come lack control platform serverside code one choose wide array language mobile code however best choice would almost always one dictated platform javakotlin android objectivecswift io serverside one stick particular version language case mobile platform control language version go regarding hardware choice one choose use different type server machine specialized handling job eg gpus mathintensive computes mobilecode one write good enough fallback support wideenough set device similarly serverside rarely worry server killing running process normal mobile os kill backgrounded process eventually set difference come temporary change platform introduced carrier user network request running mobile robust enough deal intermittent broken connectivity outright unavailability data connection eg due user switching airplane mode mobile network type matter well network request cellular would usually cost network request wifi user network request roaming even mobile code aware unnecessary work user low battery serverside code rarely subjected constraint lastly possible parallelize speed serverside code adding resource like ram better cpu certain number server enough add usually way offload computeintensive memoryintensive work mobile device without trading network latency sometimes user privacy well might preferable go multiprocessing approach server code avoid concurrency issue mobile however multithreading straightforward le resourceintensive almost always choice like like loading post navigation
48,Lobsters,mobile,Mobile Development,Pinephone first steps,https://scattered-thoughts.net/writing/pinephone-first-steps/,pinephone first step,pinephone installing operating system mobilenixos samueldr lineageos update process crosscompiling dependency shellnix crosscompiling code zig buildzig writing simple gui library gdc talk renderer font atlas microui,anki trashed history uploaded trashed history sync server repeatedly resynced trashed history every time tried restore backup wrote spaced repetition app read input markdown file asks question terminal store state json file wrote hundred line code afternoon using ever since wanted run android phone several day struggling several gigabyte ide downloads lost interest typical experience extending customizing laptop routine affair extending customizing phone painful give every time software laptop feel like comfortable old boot worn year tweaking scripting software phone feel like slot machine move button around month hold eye open ad play shiny polished nt side pinephone mobile phone aim able run mainline linux bought one hoping create experience like experience using laptop obviously writing entire mobile suite big project relentlessly cutting corner wherever possible adopting aesthetic simplicity capability finished first milestone porting little spaced repetition app installing operating system installed mobilenixos doc time barebones samueldr kind enough walk irc wrote process nt gotten around writing system configuration yet singleclick deploy nixops deploy focus big improvement lineageos update process default configuration look like crosscompiling dependency since phone running normal linux userland possible compile directly phone laptop compiles thing faster seemed worth investing crosscompilation first step getting hold version dependency done shellnix pin version nixpkgs make sure local remote development use exact version dependency nixpkgs builtinsfetchtarball name url http nix recently gained support crosscompilation many package nt crosscompile successfully yet trick setup crosscompilation grab package native repo wo nt build source machine prebuilt version available nixpkgs binary cache armpkgs import nixpkgs system crosspkgs import nixpkgs crosssystem overlay self super inherit armpkgs gcc mesa libgl config shared local cross build shellnix take boolean argument tell attempting targetpkgs cross crosspkgs else hostpkgs need pkgconfig patchelf runnable host machine used compilation need libgl runnable target machine link buildinputs hostpkgspkgconfig hostpkgspatchelf targetpkgslibglall nixshell drop shell setup local compilation nixshell arg cross true drop shell setup cross compilation crosscompiling code wrote everything zig trying keep whole system small simple fast zig small simple fast language also care lot crosscompilation buildzig mostly selfexplanatory crosscompiling zig take almost effort one hitch struggled find header using pkgconfig crosscompiling nt tried debug passed directly instead shellnix nixlibgldevtargetpkgslibgldev buildzig try includenix exe nixlibgldev try includenix exe fn includenix exe stdbuildlibexeobjstep envvar const void var buf stdarraylist init allocator defer bufdeinit try bufappendslice stdosgetenv envvar try bufappendslice include exeaddincludedir bufitems zig also nt set path correctly resulting binary reasonable way know crosscompiling identical nix system default reasonable heuristic patch binary compilation shellnix nixgcctargetpkgsgcc nixlibgllibtargetpkgslibgl sync patchelf setinterpreter cat nixgccnixsupportdynamiclinker zigcachefocuscross patchelf setrpath nixlibglliblib zigcachefocuscross scp zigcachefocuscross focus homejamiefocus build process either zig build local zig build cross sync since laptop phone running operating system pinned dependency nt bother use virtual machine local development mock device sensor code everything else run writing simple gui library writing immediatemode gui library find much simpler retained system term line code mental overhead machinery recently gave gdc talk lay rationale battery usage often given concern laptop app hovers around cpu time whereas gnomecalculator reach whenever press button becomes problem complex uis add caching draw command layer definitely thing may difficult well immediatemode like complex reactive layout luckily nt thing care phone copied renderer font atlas microui built enough ui library get thing working entire ui spaced repetition app uikey orelse q try savelogs selflogsitems stdosexit const white uicolor r g b var textrect rect var buttonrect textrectsplitbottom atlastextheight switch selfstate prepare try uitext textrect white try format allocator pending selfqueuelen try uibutton buttonrect white go selfstate prompt prompt const next selfqueue const text try format allocator nn urgency interval nextclozerenders nextstaterenderix nextstateurgency nextstateintervalns try uitext textrect white text try uibutton buttonrect white show selfstate reveal reveal const next selfqueue try uitext rect white try format allocator nextclozetext var evento logevent null var missrect buttonrect var hitrect missrectsplitright divtrunc missrectw try uibutton missrect white miss evento miss try uibutton hitrect white hit evento hit evento event try selflogsappend atns stdtimemillitimestamp clozetext nextclozetext renderix nextstaterenderix event event selfqueue selfqueue selfqueuelen selfqueue try sortbyurgency selfframearena selfclozes selflogsitems selfstate prepare else selfstate prompt really like straight code split across multiple file class callback read top bottom want abstract component layout put function obviously need lot work improve antialiasing font layout etc think done without complicating interface
49,Lobsters,mobile,Mobile Development,Refactoring Android Themes with Style: Restructuring Themes,https://ataulm.com/2020/04/30/refactoring-themes-with-style.html,refactoring android theme style restructuring theme,nick butcher chris bane developing theme style monzo ideal theme structure app theme nightmode base theme platform theme resource qualifier framework theme nick rout describing migrate appcompat materialcomponents theme renaming pruning tree android styling theme v style migrating single base theme adding platform layer creating guarded alias next check emma chris,last year nick butcher chris bane presented developing theme style droidcon berlin welcome recap theme style well best practice android theming working apply best practice android app monzo u challenge lay could make change safely time word refactor theme ideal theme structure outside look feel monzo app pretty simple dark theme light theme well light theme dark toolbar actually turned three theme theme hierarchy looked follows square represents theme arrow show theme inherit checked usage always clear screen used particular variant another used app growing fast last count around activity fragment developed android engineer spread across multiple team ship new release every week understandable got position difficult aspect two tree meant reasonably easy add themerelated bug one tree went bug fix wanted something closer structure nick chris presented single tree four layer app theme base theme platform theme framework theme one specific purpose understanding help u keep theme tidy maintainable app theme bottom app theme apply activity level thememonzolight thememonzodark app theme mostly contain value colour attribute like colorprimary colorsurface android colorbackground example android colorbackground defined navy thememonzodark offwhite thememonzolight style name thememonzolight parent basethememonzo item name android colorbackground coloroffwhite item item name coloronbackground colornavy item item name colorsurface colorwhite item item name coloronsurface colornavy item item name colorprimary coloroffwhite item item name coloronprimary colornavy item style style name thememonzodark parent basethememonzo item name android colorbackground colornavy item item name coloronbackground colorwhite item item name colorsurface colordarkgrey item item name coloronsurface colorwhite item item name colorprimary colornavy item item name coloronprimary colorwhite item style view layout reference colour attribute theme adding nightmode app becomes trivial override app theme valuesnight resource directory different set colour value base theme base theme basethememonzo override define default style view text appearance attribute layer generally contain reference specific colour instead style resource used reference attribute app theme style name basethememonzo parent platformthememonzo item name tabstyle stylewidgetmonzotablayoutlegacy item item name textinputstyle stylewidgetmonzotextinputlayout item item name toolbarstyle stylewidgetmonzotoolbar item style avoiding use hardcoded colour layer mean everything common theme go platform theme platform theme layer allows u account api specific attribute using resource qualifier specify different platform theme different version android xml version encoding resource style name parent attribute available api style style name platformthememonzo parent resource resvaluesthemesxml xml version encoding resource style name parent themematerialcomponentslightnoactionbar style name platformthememonzo parent resource work based following principle base theme depends platformthememonzo platformthememonzo defined resource bucket need versionspecific attribute instance platformthememonzo depends versionspecific theme resource eg versionspecific theme resource inherit older versionspecific resource unless minsdkversion case depend framework theme framework theme chose themematerialcomponentslightnoactionbar framework theme inherit framework theme provides lot sensible default specify everything nick rout wrote article describing migrate appcompat materialcomponents theme showcase thing get free inheriting framework theme rather creating scratch structure looking get step take help u renaming pruning tree many theme style difficult know start part difficulty lay fact clear theme used always clear style resource theme decided adopt strict naming convention help u navigate current state app first rule agreed take advantage dot notation possible reserving usage explicit parent two case declaring theme overlay want inherit attribute changing namespaces inheriting style different family made really easy see lineage theme removing indirection grouped theme family made easier reduce number theme using projectwide find replace replacing lightstatusbarlighttoolbar variant lighttoolbar light toolbar status bar ought light anyway detangling left theme made easier adopting naming prefix thememonzo app theme themeoverlaymonzo theme overlay widgetmonzo widget theme theme overlay style distinct concept android represented style resource stricter name mean resource le chance misused information difference theme style check android styling theme v style migrating single base theme although renaming resource collapsing similar theme help reduce hierarchy manageable number understandable theme still need collapse multitree setup one multiple tree mean duplicate attribute base tree problematic still issue would easy make change one forget fastest way forward merge base root app theme tree moving attribute base corresponding root app theme reparent thememonzodark thememonzolight new empty base reparenting theme introduce unexpected bug case careful check usage thememonzodark depend colourspecific attribute themematerialcomponentsdark component might changed colour reparented theme descendent themematerialcomponentslight monzo app often used light themed component theme eg dialog popup menu meant attribute overridden force light style anyway meant major regression adding platform layer got single tree possible u add platform layer help u handle specific attribute android windowlightstatusbar android windowlightnavigationbar available api respectively inform system whether status bar navigation bar light system choose provide light dark icon attribute set isolation relate android statusbarcolor android navigationbarcolor even though available older api version want set separately one instead create custom theme attribute abstraction creating guarded alias creating custom theme attribute case declaring attribute resource value resource file name format xml version encoding resource attr name preferredstatusbarcolor format color attr name preferdarkstatusbaricons format boolean resource use app theme like theme attribute style name thememonzolight parent basethememonzo item name preferredstatusbarcolor coloroffwhitedarker item item name preferdarkstatusbaricons true item style style name thememonzodark parent basethememonzo item name preferredstatusbarcolor colornavydarker item item name preferdarkstatusbaricons false item style anything except assign value attribute put platformspecific theme ensure set attribute meant coupled like android windowlightstatusbar android statusbarcolor together xml version encoding resource style name parent control whether status bar icon lightdark minsdkversion item name android windowlightstatusbar attrpreferdarkstatusbaricons item available set alongside avoid hardtoread icon item name android statusbarcolor attrpreferredstatusbarcolor item style style name platformthememonzo parent resource status bar attribute set together configurable app theme next look default style help u deduplicate code improve consistency strengthen theme check meantime please let know found post helpful comment question correction let know twitter thanks emma chris review
50,Lobsters,mobile,Mobile Development,More Extensions supported with Firefox Preview for Android,https://blog.mozilla.org/addons/2020/04/14/april-extensions-for-firefox-preview/,extension supported firefox preview android,back february firefox preview recommended extension program,back february announced support first extension firefox preview new rebuilt mobile browser android set replace firefox android later year since expanded support addons recommended extension program like introduce addons available firefox preview within next week dark reader website mobile easy read light dim extension automatically inverts bright color web page offer eyepleasing dark mode number configuration option allowing customize experience go want people eavesdropping browsing behavior http everywhere automatically enables website encryption page default unencrypted communication especially helpful surfing via shared wifi connection worried potentially malicious web content noscript protects number web security exploit disabling potentially malicious script running website finetune configuration noscript permit script run site trust concerned advertiser thirdparty tracker following around web privacy badger nicely complement firefox builtin tracking protection extension automatically learns website start tracking put end privacy invasion also includes additional privacy protection like block link tracking said see picture often search image right extension help extension select image feed reverse image search search engine like thank developer addons supporting firefox preview developer made great adjustment optimize extension mobile pleasure talk pleased offer six highly recommended addons starting point clear addon developer great idea extension enhance mobile browsing experience intend enable addons recommended extension program within next month reaching developer soon
51,Lobsters,mobile,Mobile Development,Apple to host virtual Worldwide Developers Conference beginning June 22,https://www.apple.com/newsroom/2020/05/apple-to-host-virtual-worldwide-developers-conference-beginning-june-22/,apple host virtual worldwide developer conference beginning june,apple developer app apple developer website,cupertino california apple today announced host annual worldwide developer conference virtually beginning june apple developer app apple developer website free developer company also announced swift student challenge opportunity student developer showcase love coding creating swift playground year opportunity million creative innovative developer around world get early access future io ipados macos tvos watchos learn apple engineer work build app experience enrich life apple customer around globe biggest yet bringing together global developer community million unprecedented way week june learn future apple platform said phil schiller apple senior vice president worldwide marketing wait meet online june global developer community share new tool working help create even incredible apps service look forward sharing detail everyone get closer exciting event student integral part apple developer community last year wwdc saw attendance student developer spanning different country said craig federighi apple senior vice president software engineering look forward although gathering virtual year want recognize celebrate creative contribution young developer around world wait see next generation innovative thinker turn idea reality swift student challenge swift playground revolutionary app ipad mac make learning swift programming language interactive fun pm pdt may student developer world submit swift student challenge creating interactive scene swift playground experienced within three minute winner receive exclusive jacket pin set information visit developer encouraged download apple developer app additional program information including keynote platform state union detail session lab schedule shared june information also made available apple developer website email app store country region world safest vibrant app marketplace half billion people visiting week best place user discover new apps allows developer size distribute apps customer around world app store feature many way developer build business since launch developer creating innovative apps influence culture change life apple revolutionized personal technology introduction macintosh today apple lead world innovation iphone ipad mac apple watch apple tv apple five software platform io ipados macos watchos tvos provide seamless experience across apple device empower people breakthrough service including app store apple music apple pay icloud apple employee dedicated making best product earth leaving world better found
52,Lobsters,mobile,Mobile Development,The Composable Architecture,https://github.com/pointfreeco/swift-composable-architecture,composable architecture,composable architecture composable architecture state management composition side effect testing ergonomics learn pointfree brandon williams stephen celis part part part part example basic usage state action environment reducer store testing example debugging supplementary library faq requirement reactiveswift rxswift installation file swift package add package http githubcompointfreecoswiftcomposablearchitecture composablearchitecture composablearchitecture tictactoe tictactoecommon documentation help swift forum credit thanks pointfree chris liscio shai mishali combinecommunity library elm redux license license,composable architecture composable architecture tca short library building application consistent understandable way composition testing ergonomics mind used swiftui uikit apple platform io macos tvos watchos composable architecture library provides core tool used build application varying purpose complexity provides compelling story follow solve many problem encounter daytoday building application state management manage state application using simple value type share state across many screen mutation one screen immediately observed another screen composition break large feature smaller component extracted isolated module easily glued back together form feature side effect let certain part application talk outside world testable understandable way possible testing test feature built architecture also write integration test feature composed many part write endtoend test understand side effect influence application allows make strong guarantee business logic running way expect ergonomics accomplish simple api concept moving part possible learn composable architecture designed course many episode pointfree video series exploring functional programming swift language hosted brandon williams stephen celis watch episode well dedicated multipart tour architecture scratch part part part part example repo come lot example demonstrate solve common complex problem composable architecture check directory see including basic usage build feature using composable architecture define type value model domain state type describes data feature need perform logic render ui action type represents action happen feature user action notification event source environment type hold dependency feature need api client analytics client etc reducer function describes evolve current state app next state given action reducer also responsible returning effect run api request done returning effect value store runtime actually drive feature send user action store store run reducer effect observe state change store update ui benefit instantly unlock testability feature able break large complex feature smaller domain glued together basic example consider ui show number along button increment decrement number make thing interesting suppose also button tapped make api request fetch random fact number display fact alert state feature would consist integer current count well optional string represents title alert want show optional nil represents showing alert struct appstate equatable var count var numberfactalert string next action feature obvious action tapping decrement button increment button fact button also slightly nonobvious one action user dismissing alert action occurs receive response fact api request enum appaction equatable case factalertdismissed case decrementbuttontapped case incrementbuttontapped case numberfactbuttontapped case numberfactresponse result string apierror struct apierror error equatable next model environment dependency feature need job particular fetch number fact need construct effect value encapsulates network request dependency function int effect string apierror string represents response request effect typically work background thread case urlsession need way receive effect value main queue via main queue scheduler dependency important control write test must use anyscheduler use live dispatchqueue production test scheduler test struct appenvironment var mainqueue anyschedulerof dispatchqueue var numberfact int effect string apierror next implement reducer implement logic domain describes change current state next state describes effect need executed action nt need execute effect return none represent let appreducer reducer appstate appaction appenvironment state action environment switch action case factalertdismissed statenumberfactalert nil return none case decrementbuttontapped statecount return none case incrementbuttontapped statecount return none case numberfactbuttontapped return environmentnumberfact statecount receive environmentmainqueue catchtoeffect map appactionnumberfactresponse case let numberfactresponse success fact statenumberfactalert fact return none case numberfactresponse failure statenumberfactalert could load number fact return none finally define view display feature hold onto store appstate appaction observe change state rerender send user action store state change must also introduce struct wrapper around fact alert make identifiable alert view modifier requires struct appview view let store store appstate appaction var body view withviewstore selfstore viewstore vstack hstack button viewstoresend decrementbuttontapped text viewstorecount button viewstoresend incrementbuttontapped button number fact viewstoresend numberfactbuttontapped alert item viewstorebinding get factalertinit title send factalertdismissed content alert title text struct factalert identifiable var title string var id string selftitle important note able implement entire feature without real live effect hand important mean feature built isolation without building dependency help compile time also straightforward uikit controller driven store subscribe store viewdidload order update ui show alert code bit longer swiftui version collapsed click expand class appviewcontroller uiviewcontroller let viewstore viewstore appstate appaction var cancellables set anycancellable init store store appstate appaction selfviewstore viewstore store superinit nibname nil bundle nil required init coder nscoder fatalerror init coder implemented override func viewdidload superviewdidload let countlabel uilabel let incrementbutton uibutton let decrementbutton uibutton let factbutton uibutton omitted add subviews set constraint selfviewstorepublisher map assign text countlabel store selfcancellables selfviewstorepublishernumberfactalert sink weak self numberfactalert let alertcontroller uialertcontroller title numberfactalert message nil preferredstyle alert alertcontrolleraddaction uialertaction title ok style default handler self viewstoresend factalertdismissed self present alertcontroller animated true completion nil store selfcancellables objc private func incrementbuttontapped selfviewstoresend incrementbuttontapped objc private func decrementbuttontapped selfviewstoresend decrementbuttontapped objc private func factbuttontapped selfviewstoresend numberfactbuttontapped ready display view example scene delegate construct store moment need supply dependency use effect immediately return mocked string let appview appview store store initialstate appstate reducer appreducer environment appenvironment mainqueue dispatchqueuemainerasetoanyscheduler numberfact number effect value number good number brent enough get something screen play around definitely step vanilla swiftui way benefit give u consistent manner apply state mutation instead scattering logic observable object various action closure ui component also give u concise way expressing side effect immediately test logic including effect without much additional work testing test first create teststore information would create regular store except time supply testfriendly dependency particular use test scheduler instead live dispatchqueuemain scheduler allows u control work executed nt artificially wait queue catch let scheduler dispatchqueuetestscheduler let store teststore initialstate appstate reducer appreducer environment appenvironment mainqueue schedulererasetoanyscheduler numberfact number effect value number good number brent test store created use make assertion entire user flow step step way need prove state changed expect step cause effect executed feed data back store must assert action received properly test user increment decrement count ask number fact response effect trigger alert shown dismissing alert cause alert go away storeassert test tapping incrementdecrement button change count send incrementbuttontapped send decrementbuttontapped test tapping fact button cause u receive response effect note advance scheduler used receive reducer send numberfactbuttontapped scheduleradvance receive numberfactresponse success good number brent good number brent finally dismiss alert send factalertdismissed nil basic building testing feature composable architecture lot thing explored composition modularity adaptability complex effect example directory bunch project explore see advanced usage debugging composable architecture come number tool aid debugging reducerdebug enhances reducer debugprinting describes every action reducer receives every mutation make state received action appactiontodocheckboxtapped index appstate todos todo iscomplete false iscomplete true description milk id todo iscomplete false description egg id todo iscomplete true description hand soap id reducersignpost instrument reducer signpost gain insight long action take execute effect running supplementary library one important principle composable architecture side effect never performed directly instead wrapped effect type returned reducer store later performs effect crucial simplifying data flow application gaining testability full endtoend cycle user action effect execution however also mean many library sdks interact daily basis need retrofitted little friendly composable architecture style like ease pain using apple popular framework providing wrapper library expose functionality way play nicely library far support composablecorelocation wrapper around cllocationmanager make easy use reducer easy write test logic interacts cllocationmanager functionality composablecoremotion wrapper around cmmotionmanager make easy use reducer easy write test logic interacts cmmotionmanager functionality come soon keep eye interested contributing wrapper library framework yet covered feel free open issue expressing interest discus path forward faq composable architecture compare elm redux others expand see answer composable architecture tca built foundation idea popularized elm architecture tea redux made feel home swift language apple platform way tca little opinionated library example redux prescriptive one executes side effect tca requires side effect modeled effect type returned reducer way tca little lax library example elm control kind effect created via cmd type tca allows escape hatch kind effect since effect conforms combine publisher protocol certain thing tca prioritizes highly point focus redux elm library example composition important aspect tca process breaking large feature smaller unit glued together accomplished pullback combine operator reducer aid handling complex feature well modularization betterisolated code base improved compile time nt store threadsafe nt send queued nt send run main thread expand see answer action sent store reducer run current state process done multiple thread possible work around use queue sends implementation introduces new complication done simply dispatchqueuemainasync incur thread hop even already main thread lead unexpected behavior uikit swiftui sometimes required work synchronously animation block possible create scheduler performs work immediately main thread otherwise us dispatchqueuemainasync eg see reactiveswift uischeduler introduces lot complexity probably adopted without good reason end day require store used much way interact apple apis urlsession delivers result background thread thus making responsible dispatching back main thread composable architecture make responsible making sure send action main thread using effect may deliver output nonmain thread must explicitly perform receive order force back main thread approach make fewest number assumption effect created transformed prevents unnecessary thread hop redispatching also provides testing benefit effect responsible scheduling test effect would run synchronously immediately would able test multiple inflight effect interleave affect state application however leaving scheduling store get test aspect effect desire ignore prefer flexibility however still fan choice never fear composable architecture flexible enough allow introduce functionality desire possible create higherorder reducer force effect deliver output main thread regardless effect work extension reducer func receive scheduler scheduler self self state action environment self state action environment receive scheduler erasetoeffect would probably still want something like uischeduler nt needlessly perform thread hop requirement composable architecture depends combine framework requires minimum deployment target io macos mac catalyst tvos watchos application must support older os fork reactiveswift rxswift adopt installation add composablearchitecture xcode project adding package dependency file menu select swift package add package enter http githubcompointfreecoswiftcomposablearchitecture package repository url text field depending project structured single application target need access library add composablearchitecture directly application want use library multiple target must create shared framework depends composablearchitecture depend framework target example check tictactoe demo application split lot feature module consumes static library fashion using tictactoecommon framework documentation latest documentation composable architecture apis available help want discus composable architecture question use solve particular problem ask around swift forum credit thanks following people gave feedback library early stage helped make library today paul colton kaan dedeoglu matt diephouse josef dole≈æal eimantas matthew johnson george kaimakas nikita leonov christopher liscio jeffrey macko alejandro martinez shai mishali willis plummer simonpierre roy justin price sven schmidt kyle sherman petr ≈°√≠ma jasdev singh maxim smirnov ryan stone daniel hollis tavares pointfree subscriber special thanks chris liscio helped u work many strange swiftui quirk helped refine final api thanks shai mishali combinecommunity project took implementation publisherscreate use effect help bridge delegate callbackbased apis making much easier interface party framework library composable architecture built foundation idea started library particular elm redux also many architecture library swift io community one set priority tradeoff differ composable architecture license library released mit license see license detail
53,Lobsters,mobile,Mobile Development,"Rust at FullStory, Part 2: A Look Inside Our Mobile SDK",https://bionic.fullstory.com/rust-at-fullstory-part-2/,rust fullstory part look inside mobile sdk,rust fullstory part rust crossplatform mobile framework rust logo cc cargo workspace script written ditto tricky problem cratesio core value proposition rust promise rust ecosystem karen rustad t√∂lva cratesio one world fastest regular expression library specific cargo dependency resolution multiple incompatible version crate dependency tree cargo builtin support custom cargo subcommands rustfmt clippy cargodeny future tokio asyncrs threadpool flatbuffers serde serdejson serde website errorchain anyhow thiserror still iterating jni cbindgen neon wasmbindgen future direction lego back future delorean cc bynd rewrite everything rust webassembly conclusion rust adoption continues increase might also like,previous blog fullstory part rust talked factor led u choosing rust language core crossplatform mobile framework post discus specific use rust power framework rust logo used cc began writing rust set rough design guideline platformspecific concern stay platformspecific code rust code encompass common platformagnostic part part meant could implement native component straightforward way avoid pain rust good interface platform set rust package rust lingo crate cargo workspace divide thing logical piece sharedfutures combination reexports futuresrelated crate well common helper functionality around sharedflatbuffers rust code generated flatbuffer definition well additional code working generated type generated code fairly large change flatbuffer definition often separate crate help u avoid rebuilding often necessary sharedcore bulk common code crate defines trait interface platformspecific part framework sharedandroid implementation trait sharedcore glue code using jni crate interface java code currently handauthor jni definition using macro simplify declaration sharedios implementation trait sharedcore ffi function provide interface objective c code use cbindgen crate generate c header rust function type definition sharedmock ease development core rust code implemented mock platform provides interface simply run desktop environment allows u develop pure rust environment many thing avoid integration pain mobile toolchains io xcode project build framework us external build command invoke cargo build target architecture build rust code static library link final framework using script written ditto build rust toolchain us version llvm xcode ship framework embedded llvm bitcode customer need functionality would love using stock upstream rust toolchain tricky problem hopeful rust project eventually find workable solution android gradle project build java code invokes cargo build target architecture build static library cargo small cmake project build c stub link rust code result produce shared library include java libraryfor variety reason using nightly rust rust require unstable feature reduced risk using nightly build pinning specific nightly version update needed resolve incompatible change part updating toolchain version developer experience tooling around rust one biggest selling point language certainly found true access cratesio ecosystem huge benefit discus specific highlight next section developer using fantastic ide support either visual studio code intellij using rust language server integration editor like vim rust approach following platform convention leveraging llvm worldclass functionality mean platformspecific developer tooling work found debugger profilers included xcode android studio generally work fine rough edgesoverall feel like core value proposition rust promise performance reliability productivity proven true fullstory able write performant code without spending excessive time optimization find tracking weird crash bug caused data race reported customer rust code still occasionally deal crash objective c java confidently make sweeping change codebase trust rust compiler point anything correct finally bring developer new codebase know compiler limit damage full understanding code burned brainsthe rust ecosystemferris crab unofficial rust mascot karen rustad t√∂lvaany rust developer tell another highlight developing rust access great selection crate cratesio cargo make delightfully easy pull crate much good thing bloat project build time really something said able utilize one world fastest regular expression library adding one line cargotoml even polished stable fullfeatured version need often find something give considerable head start write implementation scratchfor developer coming cc background used manually vendoring dependency breath fresh air developer used language package manager like python pip node npm might impressive specific cargo dependency resolution rust ability include multiple incompatible version crate dependency tree give powerful tool work around kind dependency problem hit frequently realworld projectsadditionally cargo builtin support custom cargo subcommands given rise wide range useful tool cargo install away use great effect development process rustfmt maintain consistent formatting codebase clippy code linting cargodeny check security advisory crate depend well validating crate license compatibility leverage functionality quite external crate code use async throughout codebase rely many feature future crate code wind running people apps use fullfledged async runtime like tokio asyncrs since optimized use available resource scenario like network server client application given one goal ensure fullstory plugin minimal overhead customer application ideal instead use threadpool provided future crate run task appropriatelysized pool threadsas mentioned previously use flatbuffers crate data serialization layer crosslanguage representation important u server side receives data written go like many project use serde serdejson working json straightforward way seriously speak enough good serde seen amazing serde use go look sample code serde website one first pull request joining fullstory changing error handling errorchain great first came modern anyhow general error handling thiserror define specific error enum rust powerful error handling result type wonderful work rust ecosystem still iterating best pattern defining custom error type chaining nested error expect space continue improve near futurei mentioned previously using jni cbindgen crate help ffi interface java objective c code respectively rust great tooling interoperate language including incredible project like neon writing nodejs module mindbending wasmbindgen compiling rust webassembly working javascript apis browser mean rust great language time need play nice languagesfuture direction lego back future delorean licensed cc bynd incredibly happy rust choice core mobile framework small portion code power fullstory always thinking way could potentially use rust thing better way certainly proposing rewrite everything goal write rust sake love writing rust use rust really make sense let u thing easily accomplish languagesrust firstclass support webassembly target platform provides avenue eager explore reuse existing rust code web frontend compiling webassembly plan explore near future find whether improve performanceintensive part application also saving maintaining parallel typescript implementation codeas fullstory continues grow customer base always mindful ensuring service power product continue scale along growth requires infrastructure planning scale service horizontally well optimization work find place existing code could improved work faster part ongoing process love keep eye place targeted application rust code could improve ability scalein conclusionwe confident choosing rust right decision fullstory mobile framework recently shipped version mobile sdk continually working make better serve customer need crossplatform code rust let u focus important platformspecific work make product stand instead writing code multiple platform rust nt worry shipping security hole customer apps keep cpu memory usage impact low without huge amount effort expect rust ecosystem continue improve pay dividend rust adoption continues increase year year company discover benefit glad one might also like
54,Lobsters,mobile,Mobile Development,Inventor Haartsen considers Bluetooth not suitable for Corona apps,https://www.computable.nl/artikel/nieuws/security/6919575/250449/uitvinder-vindt-bluetooth-ongeschikt-voor-corona-app.html,inventor haartsen considers bluetooth suitable corona apps,bluetooth bedroevend bluetooth wat vindt u van de keuze voor contactonderzoek via bluetooth maar dit er voorlopig nog niet waardoor bluetooth niet nauwkeurig genoeg voor deze coronaapptoepassing ik denk dat de samenwerking van google en apple op de goede weg zit hoe kijkt u naar de weerstand tegen de coronaapp met name vanuit privacy jaap haartsen open standaard draadloze verbindingen ericsson national inventor hall fame,de nederlandse uitvinder van het bluetoothprotocol zie kader hield zich tot nu toe afzijdig berichtgeving de inzet van bluetooth voor de veelbesproken coronaapp maar hij reageert per mail op vragen van computable bedroevend bluetooth open standaard voor draadloze verbindingen tussen apparaten op korte afstand oorspronkelijk ontwikkeld door ericsson haartsen ik vind de hele aanpak van de coronaapp bedroevend zowel hoe de overheid dit heeft aangepakt al hoe de samenleving hier mee omgaat het √©√©n groot mediacircus waarbij zeventien miljoen expert een weekend hun mening mochten geven ik heb mij daarom bewust afzijdig gehouden het een ingewikkelde puzzel om dan te verwachten dat dit binnen een paar weken ontwikkeld zou kunnen worden dan doe je het vakgebied toch een beetje tekort inmiddels bekend dat het ministerie van volksgezondheid welzijn en sport vws zelf een app gaat ontwikkelen via een consortium en niet kiest voor √©√©n marktpartij haartsen ziet niet hoe dat de situatie kan veranderen verbeteren zolang er voor de huidige opzet van de inzet van bluetooth wordt gekozen wat vindt u van de keuze voor contactonderzoek via bluetooth met bluetooth kun je bijhouden wie er binnen radiobereik geweest bereik niet hetzelfde al afstand bereik wordt bepaald door het zendvermogen de ontvangstgevoeligheid de afstand ja en de omgeving muren obstakels reflectoren et cetera uit bereik kun je de afstand afleiden maar dit niet erg nauwkeurig maar ieder geval werkt het niet met gps locatie wat weer privacygevoelig dus op zich het niet gek om bluetooth te gebruiken om te achterhalen wie er bij je de buurt geweest men binnen de bluetooth special interest group wel bezig met afstandsbepaling nauwkeurigheid van ongeveer een meter maar dit er voorlopig nog niet voordat het grootschalig telefoons zit zijn wel een aantal jaren verder waardoor bluetooth niet nauwkeurig genoeg voor deze coronaapptoepassing wat nu nederland gebeurt heeft een hoog amateurgehalte met de huidige afstandsbepaling bereik gebaseerd op signaalsterkte komt het neer op statistiek false alarm binnen bereik maar misschien een afstand van twintig meter dus ongevaarlijk √©√©n meter afstand maar een muur er tussen dus ook ongevaarlijk en false reject √©√©n meter afstand maar radiosignaal sterk afgezwakt door mijn lichaam dus leek het op twintig meter maar hoe erg dit hoe vaak komt dit voor en met welke waarschijnlijkheid heeft die andere persoon griep dit een statistisch vraagstuk en dat moet je meenemen de app al je de huidige versie van bluetooth wilt gebruiken volgens haartsen bluetooth een klein onderdeel van wat best eens een goede hulp zou kunnen zijn om de samenleving weer op de rit te krijgen maar er komt veel meer bij kijken ik denk dat de samenwerking van google en apple op de goede weg zit deze bedrijven hebben toegang tot het besturingssysteem van de mobiele telefoon en kunnen dus aanpassingen doen op lagere delen van het protocol op een niveau waar een gewone appontwikkelaar niet bij kan dat een betere aanpak dan wat nu nederland gebeurt wat nogal een hoog amateurgehalte heeft hij vervolgt ook al de app binnen afzienbare tijd ontwikkeld wordt denk ik dat hij te laat om ingezet te worden voor maar wellicht hij op tijd voor de volgende variant dan heeft de wetenschappelijke wereld ook wat meer tijd om onderzoek te doen bijvoorbeeld naar de statistische aspecten voordat de app grootschalig wordt ingezet hoe kijkt u naar de weerstand tegen de coronaapp met name vanuit privacy nooit geweten dat de g op griep duidde ik geloof technologie hoe het ons leven kan verbeteren het zou ook kunnen helpen deze tijd van crisis ik verbaas de weerstand tegen zo n app negentig procent van de bevolking downloadt een app al twitter facebook whatsapp waarbij ze hun priv√©gegevens zonder meer delen ja want de app gratis waarna hun hele doopceel bekend bij google en facebook maar al ze een app moeten downloaden waardoor weer naar buiten kunnen en de app kan alleen werken al de meerderheid hem gebruikt dan de wereld te klein haartsen verbaast zich alle ontwikkelingen momenteel de markt er worden ook mobiele zendmasten brand bestoken omdat die het virus zouden verspreiden ik heb nooit geweten dat de g en op griep duidde grapt hij dus ik kijk nergens meer van op jaap haartsen de nederlander jaap haartsen ontwikkelde de jaren negentig bluetooth een open standaard voor draadloze verbindingen tussen apparaten op korte afstand destijds werkte hij voor het zweedse bedrijf ericsson werd haartsen voor dat werk officieel ge√´erd met een benoeming de national inventor hall fame de verenigde staten haartsen momenteel actief al hoofdwetenschapper draadloze technologie√´n chief scientist wireless technology bij de amerikaanse leverancier van communicatie en collaboratieapparatuur poly dat bedrijf een samenvoeging van plantronics en polycom die fuseerden jaap haartsen
55,Lobsters,mobile,Mobile Development,"All ProtonMail apps are now open source, as Android joins the list",https://protonmail.com/blog/android-open-source/,protonmail apps open source android join list,protect keep data private web app open source io app open source bridge app open source protonvpn apps open source mean proton apps beta open source github page sec consult full audit report open source proton open sourcing code increase security apps bug bounty program activist journalist open source code contributes free internet openpgpjs gopenpgp contact protonmailcom,starting today every app use access protonmail inbox open source passed independent security audit one guiding principle transparency deserve know product protect keep data private believe level transparency way earn trust community end open source long priority proton web app open source since io app open source desktop bridge app open source protonvpn apps open source mean proton apps beta open source today add protonmail android app list code available github page part making android app open source commissioned independent security audit sec consult audit found app outstanding vulnerability also published full audit report website open source proton safety number one priority open sourcing code increase security apps allows u leverage entire security community search vulnerability discover vulnerability may eligible bug bounty program mean activist journalist rely service confident communication remain private open source code contributes free internet goal bring security privacy freedom internet strong supporter open source community maintain two open source cryptographic library openpgpjs gopenpgp make easier developer encrypt apps thus protect data cooperation among open source developer create sustain privacy tech ecosystem necessary create safer internet thank community supporting effort look forward feedback github directly via email contact protonmailcom get free secure email account protonmail also provide free vpn service protect privacy protonmail protonvpn funded community contribution would like support development effort upgrade paid plan donate thank support
56,Lobsters,mobile,Mobile Development,Which is better on Android: divide by 2 or shift by 1?,https://jakewharton.com/which-is-better-on-android-divide-by-two-or-shift-by-one/,better android divide shift,better android divide shift androidx collection library anyone optimize javac kotlinc methodlocal optimization art shift faster division jetpack benchmark use information save apk size issue unsigned number poweroftwo division use shift issue issue,better android divide shift april porting androidx collection library kotlin multiplatform experiment binary compatibility performance tooling different memory model data structure library use arraybased binary tree store element java code lot shift replace poweroftwo multiplication divide ported kotlin turn slightlyawkward infix operator obfuscate intent code sampled people bitwise shift v multiplicationdivision many heard anecdotal claim shift better performance everyone remained skeptical whether true assumed one compiler seen code ran cpu would handle optimizing case effort satisfy curiosity partially avoid infix bitwise operator set answer better related question go anyone optimize three major compiler code pass hit cpu javackotlinc art opportunity optimize javac class example static int multiply int value return value static int divide int value return value static int shiftleft int value return value static int shiftright int value return value java compiled javac jdk resulting bytecode displayed javap javac examplejava javap c example compiled examplejava class example static int multiply int code imul ireturn static int divide int code idiv ireturn static int shiftleft int code ishl ireturn static int shiftright int code ishr ireturn every method start load first argument value multiply divide method load constant value run imul idiv perform integer multiplication integer division respectively shift method load constant value ishl ishr integer shift left integer shift right respectively optimization know anything java unexpected javac optimizing compiler leaf majority work runtime compiler jvm aheadoftime compiler kotlinc fun multiply value int value fun divide value int value fun shiftleft value int value shl fun shiftright value int value shr kotlin compiled java bytecode kotlinc kotlin javap tool used kotlinc examplekt javap c examplekt compiled examplekt public final class examplekt public static final int multiply int code imul ireturn public static final int divide int code idiv ireturn public static final int shiftleft int code ishl ireturn public static final int shiftright int code ishr ireturn exactly output java using original jvm backend kotlin using forthcoming irbased backend via xuseir also produce output use java bytecode output kotlin example input latest built master sha time writing java jar release output examplektclass dexdump classesdex opened classesdex dex version class class descriptor lexamplekt access flag public final superclass ljavalangobject direct method lexamplekt name divide type access public static final code examplektdivide int return lexamplekt name multiply type access public static final code examplektmultiply int return lexamplekt name shiftleft type access public static final code examplektshiftleft int return lexamplekt name shiftright type access public static final code examplektshiftright int return note output slightly trimmed dalvik bytecode registerbased instead stackbased like java bytecode result method one real bytecode associated integer operation us register first argument value integer literal change behavior optimizing compiler although methodlocal optimization run need define rule order keep method removed keep allowoptimization class examplekt method rule passed pgconf also supply android apis link using lib java jar lib release pgconf rulestxt output examplektclass dexdump classesdex opened classesdex dex version class class descriptor lexamplekt access flag public final superclass ljavalangobject direct method lexamplekt name divide type access public static final code examplektdivide int return lexamplekt name multiply type access public static final code examplektmultiply int return lexamplekt name shiftleft type access public static final code examplektshiftleft int return lexamplekt name shiftright type access public static final code examplektshiftright int return exact output art use dalvik bytecode output example input art running android emulator adb push classesdex sdcardclassesdex adb shell su dexfilesdcardclassesdex oatfilesdcardclassesoat oatdump oatfilesdcardclassesoat oatdexfile lexamplekt initialized oatclassallcompiled int examplektdivide int code mov eax ecx lea edx eax test eax eax cmovnlge edx eax sar edx mov eax edx ret int examplektmultiply int code shl ecx mov eax ecx ret int examplektshiftleft int code shl ecx mov eax ecx ret int examplektshiftright int code sar ecx mov eax ecx ret note output significantly trimmed assembly reveals art indeed stepped normalized arithmetic operation use shift first multiply shiftleft exact implementation use shl left bitwise shift of√¢ beyond look offset file leftmost column actually art recognized function body compiled assembly deduplicated next divide shiftright share use sar right bitwise shift of√¢ four additional instruction divide precede sar handle case input negative adding value running command pixel running android show art compiles code arm assembly oatdexfile lexamplekt verified oatclassallcompiled int examplektdivide int code lsrs add asrs mov bx lr int examplektmultiply int code lsls bx lr int examplektshiftleft int code lsls bx lr int examplektshiftright int code asrs bx lr multiply shiftleft use lsls left shift deduplicated shiftright us asrs right shift divide also using asrs right shift us another right shift lsrs handle adding negative value definitively say replacing value value offer benefit stop arithmetic operation reserve strictly bitwise thing however value value still produce different assembly instruction thus presumably different performance characteristic thankfully value avoids using generic division still primarily based right shift likely far apart term performance shift faster division determine whether divide shift faster use jetpack benchmark library class divideorshifttest jvmfield rule val benchmark benchmarkrule test fun divide val value toint ensure constant var result benchmarkmeasurerepeated result value println result ensure keep computation test fun shift val value toint ensure constant var result benchmarkmeasurerepeated result value shr println result ensure keep computation device armbased pixel running android result n divideorshifttestdivide n divideorshifttestshift effectively zero difference using division versus shift number small nanosecond using negative number show difference result definitely say replacing value value offer benefit stop arithmetic operation reserve strictly bitwise thing use information save apk size given two different way express operation choose one better performance performance choose whichever result smaller apk size know value value produce assembly art thus one spaceefficient dalvik bytecode unconditionally rewrite smaller form looking output produce size bytecode lexamplekt name multiply int lexamplekt name shiftleft int gain power multiplication run bytecode space shift storing literal value value compared value lexamplekt name multiply const float mulint lexamplekt name shiftleft int filed issue investigate optimizing automatically strongly suspect case applies near zero likely worthwhile output also tell u value value cost term dalvik bytecode lexamplekt name divide int lexamplekt name shiftleft int also diverge bytecode size literal reach unconditionally replacing poweroftwo division right shift never safe behavior around negative could replacement value guaranteed nonnegative track possible range integer value time unsigned number poweroftwo division use shift java bytecode lack unsigned number emulate using signed counterpart java static helper method operating signed type unsigned value kotlin offer type like uint similar thing completely abstracted behind type conceivable using division poweroftwo could rewritten shift use kotlin model case fun javalike value int integerdivideunsigned value fun kotlinlike value uint value case look code compiled start plain kotlinc kotlin kotlinc examplekt javap c examplekt compiled examplekt public final class examplekt public static final int javalike int code invokestatic method javalangintegerdivideunsigned ii ireturn public static final int int code invokestatic method kotlinunsignedkt ii ireturn kotlin recognize poweroftwo division could use iushr bytecode filed track adding behavior using xuseir change anything except remove loadstore noise however targeting java kotlinc jvmtarget examplekt javap c examplekt compiled examplekt public final class examplekt public static final int javalike int code invokestatic method javalangintegerdivideunsigned ii ireturn public static final int int code invokestatic method javalangintegerdivideunsigned ii ireturn integerdivideunsigned method available java prefered targeting newer since make function body identical revert back old output see happens comparison next notably different invoked include kotlin stdlib input also pas minapi since integerdivideunsigned available api newer java jar lib minapi release pgconf rulestxt output examplektclass kotlinstdlibjar dexdump classesdex opened classesdex dex version class class descriptor lexamplekt access flag public final superclass ljavalangobject direct method lexamplekt name javalike type access public static final code examplektjavalike int invokestatic ljavalanginteger divideunsigned ii method moveresult return lexamplekt name type access public static final code inttolong ffff ffff constwide double int inttolong longtoint return kotlin unsigned integer division implementation inlined function convert input argument literal longs performs long division convert back int eventually run art translated equivalent going leave function behind opportunity optimization already missed java version failed replace divideunsigned call shift filed issue track last opportunity optimize case art adb push classesdex sdcardclassesdex adb shell su dexfilesdcardclassesdex oatfilesdcardclassesoat oatdump oatfilesdcardclassesoat oatdexfile lexamplekt initialized oatclassallcompiled int examplektjavalike int code test eax esp stackmap push ebp sub esp mov esp eax cmpw f stateandflags jnzne call pop ebp mov edx mov eax ebp call eax stackmap add esp pop ebp ret call f ptestsuspend stackmap ebde jmp int int code art intrinsify call divideunsigned instead get machinery jump regular method implementation filed issue track adding art intrinsics unsigned divide well certainly journey congrats made far scrolled bottom summarize art rewrite poweroftwo multiplication left shift poweroftwo division right shift extra instruction handle negative observable performance difference right shift poweroftwo division size difference dalvik bytecode shift multiplydivide nobody optimizes unsigned division yet probably using anyway fact answer title post better android divide shift neither use division arithmetic use shift actual bitwise operation switching androidx collection port shift multiply divide see next time jake wharton
57,Lobsters,mobile,Mobile Development,"iPhone 7 boots postmarketOS, becomes the first Apple Linux smartphone",https://tuxphones.com/iphone-7-now-boots-postmarketos-linux/,iphone boot postmarketos becomes first apple linux smartphone,already previous post running postmarketos iphone update boot graphical interface linux wayland running iphone twitter mastodon join subreddit reddit,let u face six month ago nobody would realistically expected proprietary apple io device become linux smartphone however seen previous week seventh generation apple smartphones seen successful effort reverse engineering corelliumproject sandcastle developer point booting proper android lcd touch screen support postmarketos linux next fact could o run motorbike pocket calculator smart dishwasher enter unexplored wonderland apple proprietary chip point little say already previous post unbelievably fast progress linux apple proprietary soc simply link port author blog slightly information already try booting postmarketos iphone today running postmarketos iphone make sure update article soon device land official testing repository versatile linux distributionupdate iphone boot graphical interface well see wayland weston post plus instruction install get usb serial shell work bluetooth wifi probably going implemented next stepslinux wayland running iphone want stay tuned world linux smartphones follow tuxphones twitter mastodon join subreddit latest news communityvia postmarketos chat room reddit
58,Lobsters,mobile,Mobile Development,Upgrading to Unity 2019.3,https://medium.com/@Extrawurst/upgrading-to-unity-2019-3-e9701aaaad38,upgrading unity,upgrading unity device simulator package device simulator assetstore via package manager new editor design change pbxproject release log unity change renderpipeline srdebugger unity forum conclusion,upgrading unity recently upgraded code unity wanted share experience know still beta really got hooked new editor design device simulator packagedevice simulator new simulator package allows u set certain device specific property game view finally iterate quicker behaviour adjust example safe area notchesassetstore via package manager new feature sound small release note nice improvement builtin browser version asset store rather slow clunky useedit would nice reference specfic version asset store package via manifestjson add source control anymore way benefit precompilation reduced compile time maybe next timenew editor design editor design overhauled modernised flatter focused like macbook retina user also much appreciate finally crisp icon everywhere see comparison comparison old left new design right change pbxproject official release log unity notice two complaint point release mentioned api change documented changelogunity throw exception calling targetguidbyname unityeditoriosxcodepbxproject standard target name unityiphone broke post processing many place also lot third party pluginsfor u two important affected plugins change renderpipeline using srdebugger great tool inspect console debug element game even mobile devicesto frame profiling measure start frame rendering using unityengineexperimentalrenderingrenderpipeline callback moved experimental mentioned unity release log buried srp package changelog reported problem unity forum reply yet see fix conclusioni happy release know still beta surprisingly stable far major lifechanging improvement incremental qualityoflife one
59,Lobsters,mobile,Mobile Development,Privacy-Preserving Contact Tracing - Apple and Google,https://www.apple.com/covid19/contacttracing,privacypreserving contact tracing apple google,privacypreserving contact tracing,privacypreserving contact tracing across world government health authority working together find solution pandemic protect people get society back running software developer contributing crafting technical tool help combat virus save life spirit collaboration google apple announcing joint effort enable use bluetooth technology help government health agency reduce spread virus user privacy security central design part partnership google apple releasing draft documentation exposure notification system service privacypreserving contact tracing u apple google believe never important moment work together solve one pressing problem close cooperation collaboration developer government public health provider hope harness power technology help country around world slow spread accelerate return everyday life
60,Lobsters,mobile,Mobile Development,"Singapore open-sources BlueTrace, its Contacts Tracing set of applications, under the GPLv3",https://github.com/OpenTrace-Community,singapore opensources bluetrace contact tracing set application,grow team github sign repository used topic people reload reload,dismiss grow team github github home million developer working together join grow development team manage permission collaborate project sign repository opentrace android app reference implementation bluetrace protocol kotlin updated jun opentrace calibration device calibration data trial methodology testing implementation bluetrace protocol updated jun opentrace io app reference implementation bluetrace protocol swift updated may opentrace cloud function reference implementation bluetrace protocol typescript updated may used topic people organization public member must member see part organization perform action time signed another tab window reload refresh session signed another tab window reload refresh session
61,Lobsters,mobile,Mobile Development,"GNOME Shell is moving towards a convergent, mobile-friendly UI",https://tuxphones.com/gnome-mobile-shell-convergence-librem-5-linux-desktop/,gnome shell moving towards convergent mobilefriendly ui,repository discussion early planning already made hinted twitter mastodon join subreddit,year first official gnome apps received convergent user interface purism libhandy popular linux desktop seems ready take next step migrating fully convergent thus mobilefriendly desktop environment redesigning shell become scalable resolutionwise modernlooking purism gnome designer tobias bernard behind several recent gnome app concept convergent ui design initially aimed librem published several new mockups new mobileshell section official design playground gnome designer osmockups repository newly designed notification areawhile gnome team constantly release user interface mockups application minority becoming reality inner source told u discussion early planning already made bring better similar still convergent new interface life eta known year surely needed transition completealso hinted week ago transition gradual release example going reworking current dash workspace switcher addingremoving single component ui new notification area quick toggle finally spite graphical change still far gnome structural backend change publicly planned yet probably still put javascript st bitsall new mockups high resolution fullscreen view recommendedas mockups likely change often next week always see latest version official design repository hereyou follow tuxphones twitter mastodon join subreddit latest news linux smartphonesvia gimpnet matrixirc network
62,Lobsters,mobile,Mobile Development,NMT,http://osmocom-analog.eversberg.eu/docs/nmt.html,nmt,back main page,nmt history nmt scandinavian cellular network developed used scandinavian country used baltic country switzerland netherlands hungary poland bulgaria romania czech republic slovakia slovenia serbia turkey croatia bosnia russia ukraine asia nmt network opened sweden norway denmark finland iceland joined network shut estonia finland norway sweden iceland cellular system frequency could used efficiently offered handover capability moving phone could change cell call authentication introduces si prevent fraud optional older phone without si could cloned receiving decoding roaming update message extra service e g conditional call forwarding answering machine installed mobile exchange phone build car also handheld phone available phone available dedicated prefix caller must dial phone number reach phone anywhere network offered data service dm reused signaling modem transfer data terminal pc data service used transfer short message sm service center smsc mobile phone frequency range mhz downlink mhz uplink voice channel optional channel channel control channel traffic channel combined channel duplex distance mhz channel spacing khz optionally khz voice modulation fm signaling modulation carrier fsk frequency deviation khz mean fsk mobile station transmit power watt watt handheld base station transmit power watt feature speech compandor dm data service sm frequency range mhz downlink mhz uplink voice channel channel control channel traffic channel combined channel duplex distance mhz channel spacing khz optionally khz voice modulation fm signaling modulation carrier fsk frequency deviation khz mean fsk mobile station transmit power watt watt handheld base station transmit power watt feature speech compandor dm data service sm work nmt system made major part mobile telephone exchange mtx brain system technically complicated part several mtxs form interface nmt system fixed telephone network whereas signaling system component nmt country telephone network differ respect one function mtxs therefore compensate difference base station b intermediary link without switching function wire mtx radio path basically transmitter connected mtx via leased line mobile station m telephone vehicleborne portable handheld coinbox type mobile station owned leased subscriber country divided number traffic area traffic are number base station spaced km apart traffic area belongs single exchange mtx mean base station area connected exchange traffic channeled exchange communicates telephone network via trunk exchange every mobile subscriber registered socalled home mtx usually mtx controlling traffic area subscriber normally resides setting call call ordinary telephone subscriber connected basis first digit mobile subscriber number home mtx latter store data present location transmits call signal base station traffic area mobile station answer automatically call acknowledgment mtx assigns mobile station traffic channel call set call mobile subscriber cause mobile station search traffic channel current traffic area automatically call set forwarded current mtx destination network mobile subscriber traffic belonging home mtx home mtx hand call mtx controlling visited traffic area latter mtx take subsequent setting call example charging done calling subscriber local exchange call initiated mobile subscriber would charged mtx roaming special function enables person call mobile subscriber without knowing called roaming one need even know whether mobile subscriber gone another country roaming made possible fact mobile station leaf traffic area enters new one automatically notifies mtx entered new area location update location mobile station stored mobile station home mtx used routing call correct area transfer call base station conversion may happen mobile subscriber leaf coverage area base station conversation started result impaired speech quality conversation conducted another base station speech quality supervised mean supervisory signal √∏ signal one four tone around khz base station sends √∏ signal mobile station sends back base station quality returned √∏ signal measured base station unsatisfactory base station transmits alarm mtx latter order base station neighboring base station measure fieldstrength radio signal mobile station base station transmit result mtx switch call base station best reception small cell technique nmt system allotted optional radio channel hightraffic urban area number channel would suffice future conventional cell size coverage area base station increase traffic capacity area smallcell technique adopted e cell size considerably reduced distance base station radio channel reduced channel thus used efficiently smallcell area base station mobile station transmit reduced power change power output mobile station take place automatically order mtx danish norwegian telephone network permit maximum digit trunk prefix pn access code type pn remain digit subscriber number anticipated however system would constructed subscriber number problem solved adding sixth digit dialed number signaling nmt system mtxs sixth digit added automatically mobile subscriber home mtx system thus provides subscriber number country introduce length number system first come operation finnish swedish fixed telephone network setting call done digit pn digit code subscriber hometraffic area pn thus constitutes sufficient information routing call mobile subscriber home mtx denmark norway connection similarly set digit pn distinguish subscriber number different country additional digit nationality digit z required number dialed subscriber added subscriber number mobile subscriber home mtx digit z accompanies signaling nmt system signaling mobile subscriber z sent automatically mobile station receiving mtx thus distinguish calling mobile subscriber different country charging principle nmt system character joint nordic mobile telephone network made natural adopt common principle al charging call important principle charge direction nmt subscriber pay three compulsory charge initial charge charge shall cover cost involved opening subscription e g correspondence introduction accounting routine registration central equipment directory listing subscription fee recurring fixed charge coverage traffic unrelated cost e g mtx equipment dependent number subscriber cost relating roaming administrative cost billing keeping record telephone directory call charge variable charge covering trafficrelated cost e g transmission telephone network operationmaintenance mt base station line base station data transfer mtxs nmt system offer number special facility e g barring certain outgoing call transfer telephone numberannouncing macine special charge made facility technical form system imposes certain limitation rate structure charging nmt system thus differ respect fixed telephone network domestic traffic call ordinary telephone subscriber mobile subscriber registered country charged ordinary subscriber local exchange charge based digit dialed call routed mobile subscriber home mtx case technical possibility price differentiation call different mtxs eventual transfer another mt possibly abroad link mtx base station mean price differentiation bit mobile telephone call switched trunk network may well happen local call well routed long distance cost difference different domestic call therefore fact small therefore considered uniform rate charged call home mobile ordinary subscriber country technical possibility price differentiation accordance principle equal charge direction uniform rate adopted well internordic traffic call ordinary mobile subscriber registered abroad charge based international prefix following digit route call mtx analyzed caller local exchange call therefore charged ordinary international call call direction mobile subscriber charged toll ticketing mtx case price differentiation possible owing desire equal rate international rate used well national mobile telephone rate used however international rate lower mobile telephone rate many type signal used different part nmt system signal following main objective mtx m setting clearing call switching call progress updating ordering powerreduction mtx b remote control base station transmission alarm measurement mtx mtx updating subscriber register roaming register transfer call roaming subscriber mtx telephone network b m supervision transmission quality signal sent form socalled frame frame length divided field contains given type information two frame format exist depending whether frame sent mtx mtx p z mtx p z n channel number p prefix frame id traffic area number zx subscriber number j information character n p etc consists hexadecimal digit e four bit frame start number channel frame sent number match channel receiver locked frame ignored fault due intermodulation thus avoided character channel number prefix p defines kind message frame relates actual message found information field signaling mobile station mobile subscriber number always sent also sent signaling mtx specific subscriber furthermore mtx always sends traffic area number base station use example signal frame calling channel indication channel prefix ta additional info p calling channel indication frame recognized prefix p value number calling channel frame sent number traffic area base station situated additional information like battery saving info additional information traffic channel allocation traffic channel channel prefix ta mobile tc subscriber p nanbnc allocation traffic channel frame sent calling channel mobile station connection set ordered traffic channel number na nc seizure ordinary m identity traffic channel channel prefix mobile area pas subscriber info word p transmission identity traffic channel frame sent traffic channel mobile station either acknowledegment identity request seizure signal call mobile station appears frame consists x bit increase reliability frame sent errorcorrecting code length message bit additional bit used synchronization transmitted signal frame following form bit sync frame sync message example bit selected errorcorrecting code convolution type permit correction error burst false bit sequence least correct bit error burst binary position signal frame transmitted ffsk fast frequency shift keying modulation logic represented cycle frequency hz logic cycle hz change take place zero crossing signal data speed thus bit per second call mobile station call mobile station handover another cell roaming feature reduce radio noise syllabic compandor used end compress audio level dynamic audio level raised compressor lowered expander radio noise floor would reduced expander sm transmitted via protocol similar gsm standard transport sm data user data facility dm nmt network used dm reuses existing signaling hardware mobile phone offer data link protocol backward error correction caller id added system caller id transmitted first ringing order repeated ringing order case lost frame enable sending caller id use option software setup base station running base station need select network network defined system traffic area ta default make phone access network need network selected check network available nmt n list ta ta yy code channel short country provider denmark tele danmark mobile sweden telia mobitel norway telenor mobil finland telecom finland nmt n list ta ta yy code channel short country provider denmark tele danmark mobile sweden telia mobitel norway telenor mobil finland telecom finland example select sweden must set phone network sweden se use command line parameter trafficarea select cell area sweden example set two digit traffic area phone area recently send roaming update soon find network run base station channel tune transmitter mhz receiver mhz tune receiver mhz first check hear decode idle signal base station tune actually uplink frequency mhz actual level yet relevant whenever want make phone register network change traffic area use traffic phone register previously registered nmt k info selecting country code se sweden provider telia mobitel info entering idle state sending idle frame combined calling traffic channel base station channel ready please tune transmitter mhz receiver mhz info rx level info received roaming seizure subscriber info sending identity request info rx level info rx level info received identity confirm password info send roaming updating confirmation info rx level info releasing connection towards mobile station info rx level info send release info rx level info rx level info received release guard info entering idle state sending idle frame combined calling traffic channel info rx level info rx level info rx level phone search previous traffic area registered find search strongest calling channel channel different traffic area phone register sending channel seizure base station request identity phone sends secret password base station accepts password send line signal roaming updating confirmation release connection phone store new traffic area acknowledges release request level adjustment see receive level around tune receiver donwlink frequency get loopback base station broadcast use variable resistor connecting transmitter adjust volume received level match level previously received phone case adjust transmitter match around good whatever frequency deviation phone transmits signaling base station receive level base station phone use variable resistor connecting receiver adjust volume level match good base station receives correct frequency deviation also voice level adjusted right switch back receiver uplink frequency change traffic area see result adjustment phone register enter phone number digit like phone start dialing watch base station receiving call output look like info received call subscriber info sending identity request info rx level info rx level info received identity confirm password info send proceed send info rx level info rx level info send dial tone info rx level info rx level info rx level info received odd digit info rx level info rx level info received even digit info rx level info rx level info received odd digit info rx level info rx level info received odd digit info rx level info dialing complete call established info setup call network info incoming call info send address complete info rx level info rx level info send compandor info connect audio first thing phone tune channel sweep supported channel channel decodes channel type selects channel traffic channel type phone sends seizure similar registration base station acknowledges call receiving identity phone dial number base station accepts number switch compandor throughconnects audio path make call phone enter digit phone number know number already since saw register network start call phone info outgoing call info call mobile station paging station id info entering paging state try sending call info paging channel info send call mobile info rx level info received call acknowledgment channel info send channel activation mobile info sending identity request info rx level info received identity password info call alerting info send ringing order info rx level info rx level info rx level info rx level info rx level info rx level info rx level info send ringing order info send ringing order info send ringing order info rx level info received answer phone info call answered info send compandor info rx level info rx level info rx level info connect audio base station transmit paging message control channel station id match phone send acknowledgment requesting identity base station order phone ring answering call compander switched audio throughconnected info rx level info received clearing mobile phone state active info release call towards network info call released info send release info rx level info rx level info entering idle state sending idle frame combined calling traffic channel phone hang base station release call towards network acknowledge release towards phone info call hangup info call released network releasing call notice outgoing release active call releasing info releasing connection towards mobile station info send release info rx level info received release guard info entering idle state sending idle frame combined calling traffic channel network hang base station sends release towards phone phone acknowledges release sending receiving sm nmt support sm protocol us lower dm layer transfer data network mobile station phone support sm try sending test sm number sure set smsc short message service center software detect sm call phone dial define smsc phone send sm check number dialed use number smscnumber number define smsc software also sure enable encryption sm process look like info rx level info received call subscriber info sending identity request info rx level info rx level info received identity confirm password info send proceed send info rx level info rx level info send dial tone info rx level info rx level info rx level info received odd digit info rx level info rx level info received even digit info rx level info rx level info received odd digit info rx level info rx level info dialing complete call established info setup call smsc info send address complete info rx level info rx level info send compandor info connect audio info starting dm transfer mobile originated info received valid dm frame ct id info received valid dm frame ct rand info sending dm frame ct rand info sending dm frame ct rand info received valid dm frame rr info received valid dm frame dt info received valid dm frame dt info received valid dm frame dt info received valid dm frame dt info submitting sm upper layer notice received sm sm received info sending submit report ok info sending dm frame dt info sending dm frame dt info received valid dm frame rr info sending dm frame dt info sending dm frame dt info sending dm frame dt info sending dm frame dt info sending dm frame dt info sending dm frame dt info sending dm frame dt info sending dm frame dt info sending dm frame dt info rx level info received clearing mobile phone state active info send release info rx level info rx level info rx level info entering idle state sending idle frame combined calling traffic channel establishing call sm received via dm frame dm protocol assembles chunk sm forward sm protocol sm protocol decodes sm appends file tmpnmtsmssubmit cat tmpnmtsmssubmit deliver sm phone run base station write socket tmpnmtsmsdeliver echo test tmpnmtsmsdeliver process look like info sm subscriber sm sending test info call mobile station paging station id info entering paging state try sending call info paging channel info send call mobile info rx level info received call acknowledgment channel info send channel activation mobile info sending identity request info rx level info received identity password info rx level info rx level info rx level info rx level info send autoanswer order info rx level info rx level info rx level info received acknowledge autoanswer info rx level info rx level info rx level info connect audio info delivering sm upper layer info sending dm frame ct id info sending dm frame ct rand info sending dm frame ct id info sending dm frame ct rand info sending dm frame ct id info sending dm frame ct rand info sending dm frame ct id info sending dm frame ct rand info sending dm frame ct id info sending dm frame ct rand info sending dm frame ct id info sending dm frame ct rand info sending dm frame ct id info received valid dm frame rr info sending dm frame ct rand info received valid dm frame ct rand info received valid dm frame rr info sending dm frame dt info sending dm frame dt info sending dm frame dt info received valid dm frame rr info received valid dm frame rr info sending dm frame dt info sending dm frame dt info received valid dm frame rr info sending dm frame dt info received valid dm frame rr info sending dm frame dt info sending dm frame dt info sending dm frame dt info sending dm frame dt info sending dm frame dt info received valid dm frame rr info sending dm frame dt info sending dm frame dt info sending dm frame dt info sending dm frame dt info received valid dm frame rr info sending dm frame dt info received valid dm frame rr info sending dm frame dt info received valid dm frame rr info received valid dm frame dt info received valid dm frame dt info received delivery report ok notice got sm deliver report sm sent notice outgoing release sm layer info releasing connection towards mobile station info send release info rx level info received release guard info entering idle state sending idle frame combined calling traffic channel base station call mobile phone instead ringing phone ordered answer call support auto answer user must accept call sm encoded sm layer delivered using dm frame sending dm frame call released toward mobile station back main page
63,Lobsters,mobile,Mobile Development,March Update: Manjaro on Pinebook Pro & PinePhone Software,https://www.pine64.org/2020/03/15/march-update-manjaro-on-pinebook-pro-pinephone-software/,march update manjaro pinebook pro pinephone software,last month community update arch linux fedora port,major development task currently concern improving battery life idle state something something already touched upon last month community update number different attempt making pinephone last day battery perhaps impressive date seen newest kde neon build running kde neon wifi lte modem turned pinephone last approx hour battery alone recognize may seem underwhelming compared android iphone smartphones keep mind device nothing like ordinary phone moreover also many known area improved upon regard think fair say given length time development hour standby time connectivity enabled good improvement previous hour another topic wish touch upon growing o availability software option literally exploded past day braveheart brought many new developer began porting variety os previously seen small formfactor device phone among others seen early port android running kernel le well much anticipated nixos much anticipated sure overall popularity sadly handon time either system gathered nixos already work well android mostly unusable present time arch linux o image one clearly aimed tinkerer experienced enthusiast come desktop environment ui clearly invite build custom experience atop bare arch o image last certainly least seen impressive amount work done pinephone fedora port port already run great much functionality os offer includes phone call functionality sm lte gpu acceleration etc like give shoutout peter robinson red hat actively help mentor dedicated group enthusiast porting fedora pinephone
64,Lobsters,mobile,Mobile Development,Linux on Mobile Part 2: Where we are now,https://osjournal.com/linux-on-mobile-part-2-where-we-are-now-518/,linux mobile part,previous installment libhybris living android world libhybris ubports continuing promising start ubports postmarketos breaking free android postmarketos plasma mobile phosh plasma mobile halium phosh librem pinephone librem pinephone wrapup,previous installment threepart series took look reason truly open sourcefriendly linuxbased phone good thing also necessary shake thing mobile space idea course new go far back openmoko communitydriven project even mostlybutnottotally open source nokia day long gone however smartphone industry changed drastically last decade attempt making linux phone part take stock option currently available linux enthusiast privacy freedomloving people well libhybris living android world making smartphone hardware complicated expensive process foreshadowing part series give credit credit due google done lot work even get hardware maker supplier pay attention android platform mean android easily tap smartphone hardware also mean android able tap proprietary hardware rather go lengthy risky process reverse engineering firmware open source developer opted make compromise developed libhybris nutshell compatibility layer allows traditional linux software talk hardware via usual android hardware library perfect solution least allowed linuxbased project hit road running rather starting ground ubports continuing promising start libhybris opened door many attempt installing alternative user experience android phone one popular perhaps ubuntu touch sadly variety factor caused canonical totally back mobile space operating system would lost history fact entire platform open source importantly people willing continue work even without profit canonical almost three year ago ubports brought ubuntu touch beyond initial implementation able cover supporting phone updating stack recent software continued dream convergence even running regular linux desktop apps phone also kept platform controversial foundation ubports definitely proved ubuntu touch could accomplish even without full resource company postmarketos breaking free android linux open source enthusiast even libhybris project built unacceptable compromise even without considering ideological issue using android core technical disadvantage like using terribly outdated linux kernel course curse relying proprietary firmware postmarketos set solve practical problem able use even tenyearold android smartphones running androidfree recent linux open source software easy road especially trying truly free proprietary blob thanks work done pmos community nearly ancient phone suddenly usable open source community familiar linuxbased stack build new mobile experience plasma mobile phosh libhybris postmarketos provided foundation allowed open source developer build equivalent linux desktop workspace mobile quite lot sprung lately thanks two almost mirroring development desktop space two big one kde gnome giant plasma mobile spiritual successor plasma active yesteryear share common architecture plasma desktop started halium used libhybris android part base grew also support postmarketos direct kde neon foundation technically owned purism also developed open source developer phosh gnomebased shell ship librem fortunately given phone open source nature phosh also installed used linux phone librem pinephone open source software phone great without open source phone run become nothing concept prototype situation libhybris halium project trying address though still completely ideal way far true open source even true linux phone concerned fortunately time changed production manufacturing process allowing smaller company take stab becoming phone manufacturer neither purism make librem creator pinephone aim smartphone maker traditional sense company root open source world come different origin purism making linux laptop making singleboard computer sbcs putting focus privacy security selling point phone also share controversy criticism story another piece wrapup smartphone industry tech market large definitely changed significantly past halfdecade alone hardware component become cheaper part offloaded printer manufacturing process become accessible smaller company allowed dreamer upstart turn idea reality making idea true linux phone pipe dream ingredient mostly dish taking long time cook definitely lot hurdle along way take look cause delay next part linux mobile series
65,Lobsters,mobile,Mobile Development,"Postmarket OS Project direction 2020: base on Alpine stable, get serious about supported devices",https://gitlab.com/postmarketOS/postmarketos/issues/11,postmarket o project direction base alpine stable get serious supported device,postmarketos note current progress tracked milestone introduction last year bpo road daily driver alpine stable deviceinfo device categorization craftyguy aur closed pmbootstrap closed todos milestone pmdevicesgit related stable branch pmaportsgit depends pmdevicesgit supported device selection could worked parallel closed streamlining minecrell,cc postmarketos note current progress tracked milestone introduction somewhat followup last year big project direction post time come quite contrary core team monthly phone call talk one two hour moving postmarketos forward basically came addition probably fact idea technically mature ready implemented let write together big picture fill blank necessary detailed todos link separate issue approach get comfortable chair grab drink go longread since last direction post huge amount commits pmaportsgit pmbootstrapgit obviously going recount would blow issue focus important overall project direction biggest change building binary package home anymore built sourcehut bpo previously merge request would merged truly could see whether build fail merging build log transparently online people merging mr allows whole project scale see alpine stable goal work le mr task like one dropped several uis well maintained remaining uis maintainer hardware side pinephone librem delivering first prototype people ordered day afaik librem already pinephone either december january phone made linux distribution running close mainline kernel free software possible android downstream kernel fork ton blob like regular smartphone great postmarketos make daily driver goal realistic notably pinephone expects ready daily usage around march gathered recent interview linux unplugged podcast reasonable timeframe getting postmarketos shape daily usage least basic task road daily driver base alpine stable release moved milestone alpine stable device separate repository discussion idea abandoned device go separate repository device go separate repository allows using device latest channel edge long nt depend deviceindependent feature edge without downside keeping device duplicated two even three branch time device minimum compatible postmarketos channel tested deviceinfo let introduce new variable deviceinfominpostmarketoschannel case device depend feature available edge would simply put next version latest latest would consistency pmbootstrapgit pmaportsgit let call new repository pmdevicesgit get serious supported device update moved milestone device categorization sure deviceinfo variable directory structure indicates category right nt device claim actually supported homepage two device highlighted however nokia nexus great mainline support possible postmarketos impressive considering downstream kernel nonfree userspace driver come however current state port usable daily driver let take look upandcoming device purism pinephone pinetab librem since made running linux collaborate build work related linux smartphone project reasonable get following feature working call tablet sm tablet usable phone ui plasma mobile possibly phosh battery charging wifi nice point must definitively prioritized going approach realistic angle start two three supported device name two device team member enough able maintain find somebody one able maintain librem possibly craftyguy doubt start two even pinephone one working reliably small feature set expand let add new deviceinfo variable see device officially supported think device like aur still useful sometimes broken need know using unsupported device also variable future explicit deviceinfoofficiallysupported true hope future expand supported device favorite oldbutgold one like nexus one specifically nt audio working question postmarketos working daily driver least one phone would game changer likely lead new hacker showing eventually lead making old device supported device selection tiny consider catalyst whole project let grow lot device whole architecture postmarketos designed device specific code possible sophisticated approach allows two value supported unsupported closed pmbootstrap change pmbootstrap init behind scene clone pmdevicesgit missing like clone pmaportsgit add symlink local clone pmaportsgit pmaportsdevice pmaportsfirmware point new repository consistent handled split pmaportsgit pmbootstrapaports repository pmaportsgit master branch known channel branch would ask user channel would like use along available choice parsed channelscfg first run recommend latest stable one regular user using device selection show warning selected device unsupported pmbootstrap pull yetanotherrepository developer also regular user need keep updated let make little bit easier provide shorthand command git pull pmaportsgit pmdevicesgit check first repository question master channel branch run git pull regular user benefit change nt need familiarize repository update run one command pmbootstrap status basically health check pmbootstrap setup would importantly check need update pmaportsgit pmdevicesgit repository directly point user pmbootstrap pull idea concept pmdevicesgit big picture hand seems like perfect addition make transition new repository painfree possible also run end pmbootstrap init also show device supported full issue pmbootstrap closed todos see milestone uptodate progress need done chronological order unlike thematically sorted show build add related issue future add checkboxes unless existing issue finish post today pmdevicesgit related stable branch pmaportsgit depends pmdevicesgit supported device selection could worked parallel see closed eventually later streamlining next writing short blog post related buildpostmarketosorg production wanted get issue written first could link case reader curious planned switch making necessary bpo improvement starting implement first point list besides necessary admin work list reflects would implement somebody interested helping would great certainly speed process pick one easy starting point like pmbootstrap add pmbootstrap pull shorthand pmbootstrap aportgen add deviceinfoofficiallysupported create issue state work link try nt duplicate work please make sure nt take long blocking next task thanks reading thanks everybody awesome contribution lead u looking forward comment edit changed wording release channel appropriate firmware dir also need move pmdevicesgit mention need something like pmaportscfg pmdevicesgit check min pmbootstrap pmdevicesgit version pmbootstrap like pmaports bpo add todo building devicesfirmware one release using symlinks edit add streamlining section edit edit minecrell rewrite step supported device selection edit
66,Lobsters,mobile,Mobile Development,POC to remotely dump user memory on IPhone 11,https://bugs.chromium.org/p/project-zero/issues/detail?id=1982,poc remotely dump user memory iphone,,
67,Lobsters,mobile,Mobile Development,Replacing Okta Verify with Open Source Software,https://battlepenguin.com/tech/replacing-okta-verify-with-open-source-software,replacing okta verify open source software,owned way many cellphone activation token factor id pyotp pyperclip freeotp andotp fdroid,owned way many cellphone like break free android without switching io one application required work okta verify moving okta verify open source solution easier expected path discovering simple one following explains get secret used multifactor auth code use open source alternative okta verify well python script first time someone sign okta portal multifactory authentication enabled asked setup multifactor device qr code presented user otppath url time based one time password totp official standard defined rfc unfortunately url parameter okta verify us standard otpauth totpexampleoktacom username issuerexampleoktacom f shttps touchidrequiredfalse otppath qr code including used google authenticator contain parameter called secret contains shared key use generate totps otppath parameter developer might think could simple look specification otpauth protocol except one reference first appeared google authenticator commit message suggested came blackberry source digging okta documentation appears represents activation token f represents factor id started digging okta api see way use information retrieve secret also started digging data directory rooted phone see could find decrypt secret however searching unnecessary glossed prior article official blog micah silverman described making hardware totp generator using audrino since device lacked real time clock device set current time whenever turned guide show possible get secret needed totp generator simply clicking ca nt scan link qr code secret used rfc compatible totp generator following python script us pyotp generate totp copy clipboard using pyperclip usrbinenv import pyotp import pyperclip totp pyotptotp insert secret pyperclipcopy totpnow also use code mobile open source authenticator including freeotp andotp available fdroid open standard help prevent vendor lockin although took little work transparent like glad okta provides easy way end user grab totp secret web ui used party verification application
68,Lobsters,mobile,Mobile Development,New LTE Network Flaw Could Let Attackers Impersonate 4G Mobile Users,https://thehackernews.com/2020/02/lte-network-4g-vulnerability.html,new lte network flaw could let attacker impersonate mobile user,attack work softwaredefined radio researcher said imsi catcher alter attack solution similar research undertaken protection imsi catcher,group academic ruhr university bochum new york university abu dhabi uncovered security flaw lte network could potentially allow hacker impersonate user network even sign paid subscription behalf impersonation attack named impersonation attack network exploit mutual authentication method used mobile phone network base station verify respective identity manipulate data packet transit attack exploit missing integrity protection user data reflection mechanism ip stack mobile operating system make use reflection mechanism build encryption decryption oracle along lack integrity protection allows inject arbitrary packet decrypt packet researcher explained research presented network distributed system security symposium nd february san diego vulnerability impact device communicate lte includes smartphones tablet iot device currently sold market bochumbased team attempting close security gap latest mobile communication standard currently rolled researcher said flaw responsibly disclosed telecom standard body gsm association last may attack work researcher carried attack using softwaredefined radio device read message phone base station connected maninthemiddle attack allows hacker impersonate user towards network vice versa word attacker trick network thinking radio fact phone uplink impersonation also dupe phone assuming softwaredefined radio legitimate cell tower downlink impersonation uplink impersonation allows attacker establish arbitrary ip connection towards internet e g tcp connection http server downlink variant attacker build tcp connection ue researcher said noted adversary must close proximity range victim mobile phone mount attack consequence attack different involve cellsite simulator imsi catcher aka stingray used law enforcement agency intercept mobile phone traffic communication channel compromised next stage attack work taking advantage missing integrity protection lte communication standard arbitrarily modify data packet exchanged forging internet traffic attack could allow hacker make unauthorized purchase access illegal website upload sensitive document using victim identity even redirect user malicious site different form attack called alter attack attack farreaching consequence provider user researcher said paper provider longer assume ip connection originates user billing mechanism triggered adversary causing exhaustion data limit access control provider firewall bypassed moreover show attacker bypass provider firewall mechanism phone open incoming connection attack stepping stone attack malware deployment solution disclosure attack come heel similar research undertaken academic purdue university university iowa uncovered three new security flaw network used eavesdrop phone call track location cell phone user incoming standard rolled handful country aim offer faster speed longneeded security feature including protection imsi catcher hundred million device impacted flaw imperative implementation apply robust security data protection fix vulnerability mobile network operator would accept higher cost additional protection generates data transmission david rupprecht one paper coauthor said addition mobile phone would replaced base station expanded something happen near future scrutiny standard made possible catch fix potential vulnerability network widely deployed latest research sign cellular network security need attention
69,Lobsters,mobile,Mobile Development,Confidence and Joy: React Native Development with ClojureScript and re-frame,https://hackmd.io/@byc70E6fQy67hPMN0WM9_A/rJilnJxE8,confidence joy react native development clojurescript reframe,,confidence joy react native development clojurescript reframe clojure http clojureorgguidesgettingstarted code editor intellij idea community http wwwjetbrainscomideadownload cursive plugin http cursiveidecom shadowcljs http shadowcljsorg reframesteroid http githubcomflexsurferreframesteroid rnshadowsteroid http githubcomflexsurferrnshadowsteroid project source http githubcomflexsurferclojurernproject create new react native project open existing one reactnative init clojurernproject cd clojurernproject open project ide http iimgurcomgflzmoipng edit appjs jsx import react react import safeareaview view text reactnative const app react node return safeareaview view text hello clojure text view safeareaview export default app run app terminal yarn start terminal yarn io http ok rn project want run app clojure add shadowcljs yarn add shadowcljs already make sure using latest version create shadowcljsedn clojure sourcepaths src dependency reagent reframe reframesteroid rnshadowsteroid refriskremote build dev target reactnative initfn clojurernprojectcoreinit outputdir app compileroptions closuredefines reframetracetraceenabledqmark true devtools afterload steroidrncorereload buildnotify steroidrncorebuildnotify preloads refriskremotepreload next need initialize project clojure deps depsedn used code inspection ide know better way pls file pr create cljs project create depsedn file clojure deps orgclojureclojure mvnversion orgclojureclojurescript mvnversion reagent mvnversion reframe mvnversion reframesteroid mvnversion rnshadowsteroid mvnversion path src right click file add clojure deps project http optional turn spelling indellij idea preference http iimgurcomeqwzrqmpng create src folder clojurernproject package corecljs file http corecljs clojure n clojurernprojectcore require steroidrncore rn defn rootcomp rnsafeareaview rnview rntext hello clojure cljs defn init rnregisterreloadcomp clojurernproject rootcomp indexjs javascript import appindexjs terminal shadowcljs watch dev reload app disable fast refresh cmndd http try change code see reloaded shadowcljs app clojurescript rn app configured hot reload app state reframe update app state need use event let create eventscljs register first event eventscljs clojure n clojurernprojectevents require steroidfx fx fxdefn initappdb event initappdb db counter fxdefn updatecounter event updatecounter key db db update db counter inc set cursor fxdefn press optionreturn http move selection resolve press return select defn update view state changed need use subscription let create subscljs register subscription subscljs clojure n clojurernprojectsubs require steroidsubs sub subsregrootsubs counter update view corecljs clojure n clojurernprojectcore require steroidrncore rn steroidviews view reframecore reframe clojurernprojectevents clojurernprojectsubs viewsdefview rootcomp viewsletsubs counter counter rnsafeareaview style flex rnview style alignitems center justifycontent center flex rntext str counter counter rntouchableopacity onpress reframedispatch updatecounter rnview style backgroundcolor gray padding rntext update counter defn init reframedispatch initappdb rnregisterreloadcomp clojurernproject rootcomp resolve defview defn letsubs let way fxdefn press update counter button change code see app updated app state remained http clojurescript rn app configured hot reload reframe state three major rule working reframe view pure dumb render ui data subscription dispatch event bad clojure viewsdefview comp viewsletsubs counter counter delta delta rntext str counter counter delta rntouchableopacity onpress reframedispatch updatecounter delta counter delta good clojure viewsdefview comp viewsletsubs counterwithdelta counterwithdelta rntext str counter counterwithdelta rntouchableopacity onpress reframedispatch updatecounter separate subscription event get data state root key subscribed appdb bad clojure reframeregsub counter fn db get db counter reframeregsub delta fn db get db delta reframeregsub counterwithdelta fn db get db counter get db delta good clojure subsregrootsubs counter delta reframeregsub counterwithdelta counter delta fn counter delta counter delta event must pure computation bad clojure fxdefn updatecounter event updatecounter key db dosomething db update db counter inc good clojure reframeregfx dosomething fn dosomething fxdefn updatecounter event updatecounter key db db update db counter inc dosomething nil devtools let run refrisk debugging tool see exactly happening app terminal shadowcljs run refriskremotecorestart open http http see happening app event appdb state subscription test add test folder configure test build project clojure sourcepaths src test dependency build dev test target nodetest outputto outnodetestsjs autorun true let add test eventscountertestcljs clojure n eventscountertest require cljstest refer deftest clojurernprojectevents event deftest eventscountertest eventsupdatecounter db counter db counter run test terminal shadowcljs compile test http navigation react navigation terminal yarn add reactnavigationnative reactnavigationstack reactnativereanimated reactnativegesturehandler reactnativescreens reactnativesafeareacontext reactnativecommunitymaskedview terminal cd io pod install cd terminal yarn io corecljs clojure n clojurernprojectcore require steroidrncore rn reframecore reframe steroidrnnavigationcore rnn steroidrnnavigationstack stack steroidrnnavigationbottomtabs bottomtabs clojurernprojectviews screen steroidrnnavigationsafearea safearea steroidrnnavigationevents clojurernprojectevents clojurernprojectsubs defn mainscreens bottomtabsbottomtab name home component screenshomescreen name basic component screensbasicscreen name ui component screensuiscreen name list component screenslistscreen name storage component screensstoragescreen defn rootstack safeareasafeareaprovider rnncreatenavigationcontainerreload onready reframedispatch initappdb stackstack mode modal headermode none name main component mainscreens name modal component screensmodalscreen defn init rnregistercomp clojurernproject rootstack hot reload need register component differently register rootstack regular reloadable component rnregistercomp use rnncreatenavigationcontainerreload navigation container required steroidrnnavigationevents n dispatch navigateto navigateback event navigation screen try open modal screen change code see navigation state nt changed modal screen still opened img http githubcomflexsurferrnshadowsteroidrawmasterscreencastgif –∫–æ–Ω–µ—Ü
70,Lobsters,mobile,Mobile Development,How To Design Mobile Apps For One-Hand Usage,https://www.smashingmagazine.com/2020/02/design-mobile-apps-one-hand-usage/,design mobile apps onehand usage,author simform large preview steve job said screen perfect size consumer larger screen foolish large preview smartphones sold today bigger display large preview bigger screen ease access reachability suffer designing onehanded usage research large preview user hold phone onehand specifically go designing onehanded usage become top priority app maker research use phone distracted shortburst usage rescue time large preview team researcher simform large preview one thumb one eyeball design keeping onehanded shortburst usage mind large preview large preview spotify large preview click general menu item use established ux pattern common app usage scenario make onehanded usage easy common user behavior ux pattern navigation ux pattern designing action shopping transactional checkout flow design pattern searching sorting filtering pattern input interaction pattern miscellaneous pattern designing app navigation keeping onehanded usage mind challenge solution user suffer onehanded reachability joox zenly onehanded pattern core action like creating editing posting adding deleting others mobile phone time challenge solution core action finish entire creation addition editing task sharing sending thing designing faster checkout transactional experience onthego kaspersky cybersecurity index baymard institute challenge solution shopping choose wear trbl tasty hamburger app payment method report spaced challenge travel vr checkout promocode gamification checkout searching filtering sorting content reachability main goal baymard product listing filtering study challenge solution use gesture easily accessible button search keep filterssorting button near reach user twostep filtering control apply filter immediately large preview large preview large preview filter car sharing friend user input control form picker selector dropdowns slider make building block app challenge solution zenly airbnb periscope peach zova workout fitness square order miscellaneous pattern medium playback photo capture photo editing map navigation pattern composer concept gamification checkout conclusion,authormaitrik kataria ux consultant cmo simform software development company love helping client improve ux collaborated many maitrik smartphones sold today display bigger screen real estate present newer challenge opportunity app maker designer let look designing apps onehanded usage solve challengeson friday january world shrank palm three revolutionary product ipod phone breakthrough internet communicator unified create smartphones know love todaythe first iphone introduced marked fall qwerty keypad stylus large preview iphone built comfortably used onehanded operation allowing smoother thumb movement across screensteve job said screen perfect size consumer larger screen foolish large preview turn last decade phablets gained popularity owing bigger screen much le device sold today smaller smartphones sold today bigger displaysin meantime goldrush biggerthebetter presented app maker designer opportunity utilize screen real estate serve content functionsfor instance cnn app among got early access iphone introduced developer gave aesthetic transformation also designed readerfriendly visuallyappealing experience made headline stand outadapted phil schiller keynote apple special event large preview bigger screen ease access reachability sufferwhile bigger screen great showing content design consideration steve job making phone suffers designing onehanded usagein research airport street cafe bus train steven hoober shed light three way user hold phone large preview user hold phone onehand specifically gomaking strong case designing apps onehanded usage steven also found user frequently alter grip based comfort situationwhy designing onehanded usage become top priority app makerswe use phone great deal preoccupied hurry greatly impact user hold phone use apps resulting lot onehandedusage number suggested aboveresearch suggests average user check phone many time day mobile interaction last le minuteswe use phone distracted shortburst usage image credit rescue time large preview team researcher simform observed usage behavior shortburst sporadic usage multiple scenario example case shortburst usage large preview google product director luke wrobleski term short burst one thumb one eyeball mobileusage experience reflects distracting environment force user engage singlehanded usage within short span partial attention add optimal type smartphone usage single hand one quick interaction supported smooth functionalityhow design keeping onehanded shortburst usage mind answer rather simple continuous usability testing study different way user hold phone various situationsif user app tend use app lot distracting scenario focus designing pattern target reachability onehanded use large preview let take look evolution spotify interface get perspective problem spotify old navigation hamburger menu large preview spotify used hamburger menu topleft concealed feature set user treasure hunt sort advent bigger screen however another design challenge added list reachabilityspotify certain level difficulty discomfort experienced user tried communicate app large preview compelled spotify team pull hamburger menu lay core feature home browse search radio library bottom resulted increase click general menu itemsuse established ux pattern common app usage scenario make onehanded usage easywhy reinvent wheel use proven ux pattern work many designer already focused onehanded usage designing principlewe gone hundred apps thousand pattern find best pattern onehanded usage mind let look work problem solved benefit get thesewe divide common user behavior ux pattern six category navigation ux patternseg menu bar tab bar gesture easily moving important section app designing actionscreating editing posting adding removing action user take utilize core functionality app shopping transactional checkout flow design patternssearching sorting filtering pattern user want quickly find browse content input interaction patternssliders picker selector dropdowns form fill zooming scrolling make building block app miscellaneous patternsmedia playback photo capture photo editing map navigational designing app navigation keeping onehanded usage mindwhat foundation great app good navigation design good navigation help user discover feature faster find important user discover feature app using navigation link compared search way navigation bar menu gesture link tab etc common navigation ux patternsa good navigation design important section right upfront easily accessiblechallengescommon ux pattern like apple tab bar google swipeable menu limitation put limited number feature tab bar access swipeable menu item easyusers struggle reach important part app stretching top screen bad usability specifically user onthego using app short burstsolutionfacebook many apps solve challenge putting item tab icon called menu user access feature section app however ideal reachability onehanded useuse flyout menu instead fullpage menu reachability fitting itemsexpanded tab bar contentpersonalized tab bar power user quickly access likeuse gesture imbibe easeofaccess user habitsgetting back closing page easy wellquickly jumping section page smart ux patternsfacebook instance conceals numerous feature hamburger menu declutters main screen although inclusion cleaner organized appeal user suffer onehanded make hamburger menu real problem use flyout menu instead fullpage menu reachabilitythankfully way resolve challenge menu replaced flyout menu like name suggests flyout bottom allows easier access option even one mobile ux pattern flyout menu design video credit joox expand tab bar contenthuman interface guideline recommend feature bottom navigation bar make tricky app builder present additional core functionality forefrontthis option dot come handy located bottom bar conceal functionality reveal designing bottom navigation bar expandable optionspersonalized tab bar power user quickly access likeevery user different feature important one user may important make app allow user customize tab bar frequently used personalized bottom tab bar quick featureaccessibilitygestures easy imbibe user habit quick navigationpopularised tinder gesturebased navigation great technique facilitate singlehanded usage gesture smartly used help expand navigation onehanded gesturebased navigation access app featuresfrom designing getting getting back using gesture accessibilitynavigation getting screen section app important design going back user came closing screen jumping section page let look apps use gesture ux pattern thing using gesture navigate multiple screen video credit zenly pattern quickly jumping different section appapps many category subcategories section book wiki restaurant menu product may need organization ensure user struggle finding contentthese organized hierarchy using ux pattern increase accessibility ease floating tab bar gesture jump onehanded pattern core action like creating editing posting adding deleting otherswhat user spend mobile phone time selfexpression social interaction online shopping managing finance health productivity planning upcoming event actiondriven ux pattern include thing like creating social post editing document editing otherschallengeswhen designing actiondriven apps ensure nt take backseat like post creating button top instead right next thumbsolutionthere three thing keep mind designing user experience core actionscore action grab user attention prominent placement icon button put top right corner app get buried easily reachable without needing use second hand overreachingon top user able finish entire creation addition task flow one hand includes thing like canceling task typing keyboard opening moving next step ondesigning complex editing task multilevel edit menu controlswith reachability goal make sharing sending thing easy simple toothe button icon core task app draw user inapps core task center around thing like capturing image creating post adding file sharing etc becomes necessary user focus first make reachable discoverablefor instance snapchat hide everything incentivizes user capture photo video also send button immediately asks user share story making core task easily reachable gesture flyout menu floating tab barsbreaking complex editing task menu control designed specifically mobilefor many user mobile phone used computing device generation user get real work done mobile phone example document editing longer computeronly affair since host mobile apps offer servicemicrosoft word wps office offer host editing tool multilevel menu within thumb reach intuitive menu system smart powerful allowing user complex operation multiple placing editing tool bottom half screen quicker modificationswith reachability goal make sharing sending thing easy simple toowhat amplifies experience favorite music day superquick shareability option social medium often click awayyou employ share extension slide bottom allows user directly type ux pattern singlehanded sharing photo video music moredivide creating adding task multiple stepscreating board favorite wish list drag especially placed top extreme let look pattern handle multistep data inputsflipboard airbnb keep everything bottom within reach thumb typing selecting next step canceling action placing create add icon within reach thumb smooth onehanded designing faster checkout transactional experience onthegowhat according kaspersky cybersecurity index ecommerce sale happen mobile phone add commercial transaction like booking ride flight hotel room movie ticket concert ticket realize important designing mobile checkout experience report baymard institute suggested shopper abandon cart abandon complicated checkout process specifically true mobile shopper checkout multistep process inputting data easychallengesthe checkout process requires many input careful attention usersdesigning onehanded checkout experience would mean user complete transaction minimal thumb movement fewer stepsthis especially important user move need transaction immediatelysolutionto design onehanded checkout experience minimize information required userswhen choosing product variation like size color timedate others easily accessible discoverablewe use application like google apple wallet autofill thing like keychain lastpass fill information like name credit card address onetimepasswordswe also must emphasize simple minimal thumb movement usersadding item cart choosing product preference thumb reachthe logistics shopping online simplified within three step adding item cart picking product variation completing payment processas designer becomes essential u make selection noticeable also place within reach thumbone way achieve goal display product variation tray slide user chooses itemanother way allow user scroll page quickly select variation product option place order buy stay static smooth payment checkout flow option add item choose product adding item cart ecommerce ondemand delivery apps video credit shopping choose wear trbl tasty hamburger appusing ewallets password manager swift paymentthe payment method report suggests online transaction carried via ewallets like apple pay google pay alipay fitbit samsung pay yandexmoney others wallet deemed faster also much safer easier accessthe checkout process made efficient straightforward also add swipetopay option higher ux pattern payment checkout ecommerce mobile ux pattern payment checkout ecommerce mobile apps video credit spaced challenge travel vr checkout promocode gamification checkout searching filtering sorting content reachability main goalwhat without right ux finding right product item tedious challenge user searching filtering sorting tool determine easy difficult user browse site product item catalogfilters great tool narrow high volume content find relevant resultsin theory different sorting organizes content according certain parameter filtering remove viewduring baymard product listing filtering study observed site average product list usability saw abandonment rate abandonment user trying find exact type product ecommerce site slightly tweaked toolset resulted approximately increase leadschallengessearching mobile easily accessible example youtube amazon prime slack google map make difficult user reach search menu reach top right cornerorganizing information hierarchy filter many parameter category user find looking quicklymanage multilevel information ui especially many category category many itemschanging ui based different state like filter applied filter applied accomplished user reach user thumbsolutionuse gesture easily accessible button search user go search screen give suggestion well open text box immediatelyspeak language user keep user intent mind organizing filter keep filterssorting button near reach user also make accessing closing filter menu one handto solve information complexity use either twostep filtering control side side filtering controlapply filter immediately make filter interactive based action user take allow user choose multiple option change filter category match applied filtersshow recommendation recently used frequently used information firstfor many apps search one top feature used many app designer make reaching search icon difficult see comparison apple map v google map netflix v youtubecomparing search bar reachability apple map v google map large preview comparing search bar reachability netflix v youtube large preview apps use search screen content discovery screen recommend user like searched trending creating search page user discover content large preview remove friction impending step searching filteringto make thing really quick user make tap search icon tab bar keyboard immediately pop user start typing query immediately see example netflix spotheromany apps like amazon google drive use search bar prominently top home page case use gesture swipe like inshorts app immediately start typing instead reach top tap search searching filtering made thumbfriendlydoubletap search icon pull keyboardif want use search page show information user also use doubletap pull keyboard like microsoft news spotify reddit accessing keyboard made easy doubletap search iconthumb reachable filter menu let user find information fasteronline shopping booking ondemand apps alike contain laundry list item user choose fromthe biggest consideration designing filtering menu small device information hierarchy let look example understand filtering sorting designed option aplenty show handle information complexity without letting onehanded usage sufferalso filter responsive reactive user choice indicate filter appliedto make process responsive search result filtered background simultaneously user select sorting filtering item ecommerce ondemand delivery mobile sorting filtering item ecommerce ondemand delivery mobile apps video credit filter car sharing user input control form picker selector dropdowns slider make building block appwhat smaller screen come smaller real estate fundamental user interaction reimagined order increase productivity mobile usersthings like filling form typing password choosing datetime making selection popover translate well touch interface without abandoning metaphor pcschallengesinputting data mobile device tedious especially number data field filledtranslating user interaction smaller device easy biggest challenge speed user input fast minimal movement user thumbinformation gathered minimal number stepsthe input control design easily understood interface metaphorthe experience delightful consistentusers must know location information must lostwhen done correctly adding input tracker calendar others alike could become short tasksolutionsany user action like filling form making choice closer bottom flow action choice consistent without jarring ui changesinformation needed move ahead thumb reachdata input option including notification clear near bottombigger form divided multistep multiscreen form multiscreen approach going forward going back easilyfixing filling form starting signup formswe hate filling sign form timeconsuming ask unnecessary informationfilling form le laborious turning lengthy form multiple screen using thing like autofill thumb reachable button next previous step continuous keyboard presence scrolling make approach faster best practice multiscreen onboarding flow video credit zenly airbnb get quick input user minimal thumb movementpositioning userinput control towards bottom screen allows quicker data entry prompt calltoaction responsesuse picker dropdowns scrollers slider supply information onehanded user input control accurate form filling video credit periscope smart mobile pattern user input controlslet look pattern make getting input user onehanded user input control mobile app form video credit peach zova workout fitness square order miscellaneous pattern medium playback photo capture photo editing map navigation patternswith million apps google store million apps app store become imperative designer make apps stand one way make common function fun smooth user final section roundup miscellaneous user forget pinching apps let user zoom one whether selecting emojis sending image listening audio clip gesture add ease app whether selecting emojis sending image listening audio clip gesture add ease app interaction video credit composer concept gamification checkout conclusionalthough reachability big part designing onehanded usage ensuring everything close user reach apps good onehanded use also save time user remove friction take unnecessary step importantly focus quickening distracted short burst usage appswe looked many pattern designer use solve different ux challenge check website find pattern help design onehanded use cc yk il
71,Lobsters,mobile,Mobile Development,The iOS Developer Community Survey [2019],https://iosdevsurvey.com/2019/,io developer community survey,,
72,Lobsters,mobile,Mobile Development,Pine64 February Update: Post CNY and FOSDEM Status Report,https://www.pine64.org/2020/02/15/february-update-post-cny-and-fosdem-status-report/,february update post cny fosdem status report,post,housekeeping part pandemic couple thing initially wanted discus section situation warrant focus important topic main topic housekeeping agenda relates outbreak coronavirus impact guangdong province well hong kong know device produced city shenzhen located guangdong province equipment battery pinebook pro pinephone ship hong kong may already know post forum earlier month guangdong issued restrictive order prohibiting work resuming february theory company allowed resume business practice everything remains complete standstill word operation partner well factory resumed today variety reason also limit much work staff moment factory producing pinephone pinetab pinebook pro remain closed need undergo long complicated procedure allow resume operation however due huge volume government sanctioned procedure required provincewide may yet time people even enter factory worth pointing issue also felt entire supply chain manufacturer component also affected shortage expectedsadly entire extent problem already mentioned device contain battery ship hong kong earlier month hong kong closed many key crossing region mainland china including one rely long quarantine anyone arriving mainland china hong kong mean shipping staff reach hong kong warehouse mean practice mean produce anything month even could way u ship device battery refrain speculating thing return normal expect shipping date slip considerably suspicion extent disturbance felt across entire electronics industry rest year keep updated best previously linked thread moment know something make sure create new post update original entry
74,Lobsters,mobile,Mobile Development,Analyzing WhatsApp Calls,https://medium.com/@schirrmacher/analyzing-whatsapp-calls-176a9e776213,analyzing whatsapp call,analyzing whatsapp call wireshark frida jailbroken vulnerability hack white paper tool network traffic analysis wireshark wireshark session traversal utility nat stun wireshark white paper secure real time protocol srtp real time protocol rtp rfc wireshark wireshark noise pipe protocol binary analysis whatsapp application binary whatsapp core framework hopper disassembler bfdecrypt libsignalprotocolc libsignalprotocolc signal protocol double ratchet algorithm signal signal signal signal signal signal signal signal signal signal signal signal signal signal signal libsrtp libsrtp secure real time protocol libsrtp libsrtp libsrtp libsrtp libsrtp libsrtp libsrtp libsrtp libsrtp cloning stream ssrc cloning stream cloning stream pjsip pjsip pjsip wireshark pjsip pjmedia pjmedia pjmedia pjmedia pjmedia pjmedia pjmedia pjmedia pjmedia pjmedia pjmedia pjmedia pjmedia pjmedia pjmedia mbed tl mbed tl tl protocol mbedtls mbedtls mbedtls mbedtls mbedtls mbedtls mbedtls mbedtls mbedtls mbedtls mbedtls mbedtls mbedtls mbedtls mbedtls xmpp extensible messaging presence protocol xmpp xmpp objcclass xmpp objcclass xmpp objcclass xmpp objcclass xmpp objcclass xmpp objcclass xmpp objcclass xmpp objcclass xmpp objcclass xmpp objcclass xmpp objcclass xmpp objcclass xmpp objcclass xmpp objcclass xmpp noise protocol framework white paper noise protocol framework noise protocol framework noise pipe protocol noise protocol framework runtime analysis frida frida key transport white paper frida proxy objectivec object nil nsdata white paper jid encryption master secret white paper libsignalprotocolc frida protocol buffer double ratchet algorithm signal protocol libsignalprotocolc signal protocol libsignalprotocolc signal protocol preparing master secret frida signal protocol noise pipe protocol swhatsappnet swhatsappnet swhatsappnet opus opus pkmsg transmitting master secret callee white paper noise protocol framework noise protocol framework mbed tl noise pipe protocol wireshark key derivation frida libcommoncrypto nil frida libcommoncrypto rfc call initialization libsrtp libsrtp libsrtp libsrtp libsrtp libsrtp frida frida libsrtp hopper disassembler address space layout randomization aslr frida frida frida call encryption libsrtp call integrity libsrtp frida frida ca fe cd fe ca dc fe fe de af bd ff cf db fc eb cc bd ea bc ed ac bb frida conclusion libsignalprotocolc libsrtp pjsip mbed tl hkdf noise pipe protocol signal protocol xmpp signal protocol xmpp noise pipe protocol http githubcomschirrmacherfilesblobmasterwhatsapp http githubcomschirrmacherfilesblobmasterwhatsapp http githubcomschirrmacherfilesblobmasterwhatsappcore,analyzing whatsapp call wireshark fridain article want demonstrate revealed part whatsapp voip protocol help jailbroken io device set forensic tool whatsapp got lot attention due security vulnerability hack interesting target teaching security analysiswhile official white paper describing encryption whatsapp detailed overview protocol work security feature implemented consequently foundation serious security related analysismy research based three step analysis network trafficanalysis binary filesanalysis runtime behaviortoolsi used following tool analyzing io whatsapp client installed jailbreak io device scopenetwork traffic analysisthis part examines network traffic whatsapp client call recorded wireshark recording network traffic io device created remote virtual network interface shell command follows work macos deviceuuid replaced uuid inspected io device rvictl device uuid wireshark detects usage session traversal utility nat stun stun signaling protocol handle necessary step establishing peertopeer connection client also many tcp udp packet wireshark recording could related highlevel protocolwireshark recording whatsapp voip call sessiontcp packet exchanged inspected whatsapp client multiple whatsapp server udp packet exchanged caller callee hundred udp packet sent within minute since whatsapp white paper mention usage secure real time protocol srtp stand reason udp packet srtp packet containing call data protocol provides encryption message authentication integrity protection replay attack real time protocol rtp packetsthe following listing show srtp packet hexadecimal representation sent caller callee contains header field rtp form foundation srtpsrtp packetthe first four byte red contain seven rtp header field inspected looking binary packet header field rfc first two bit contain rtp version v equal version two case third bit padding field p indicates padding included packet fourth bit extension field x indicates header follows fixed rtp header bit position five eight csrc count cc show contributing source csrc identifier follow fixed header csrcs list identifier indicating source contributed payload srtp packet also marker bit position set zero used mark frame boundary packet stream next six bit contain packet type pt equal decimal value case given packet type defined rtp srtp standard might custom value chosen whatsapp last bit contain sequence number seq given packet rtp standard recommends randomize initial value sequence number recommendation applied whatsapp since packet sequence number increased zero seen wireshark recording next four byte blue represent timestamp packet four byte green represent synchronization source ssrc identifier used distinguishing call session running parallel remaining byte represent payload probably payload inspected packet contains audio data callwe know whatsapp applies srtp protecting call confirmed structure udp packet exchanged whatsapp client wireshark recording show also tcp packet sent io client whatsapp server packet represent message encrypted noise pipe protocol see laterbinary analysisthe io whatsapp client contains two main binary file whatsapp application binary whatsapp core framework part examines binary file hopper disassembler binary io application encrypted downloaded app store analyzing io whatsapp client security measure apple circumvented jailbreak installed inspected io device accessing file adding binary file whatsapp decrypted tool bfdecrypthere demonstrate gathered information underlying protocol algorithm open source library whatsapp us open source library especially interesting easily analyzedlibsignalprotocolcwhatsapp us libsignalprotocolc open source library implement signal protocol protocol based double ratchet algorithm handle encryption whatsapp message library identified following function name binary whatsappcore signalsearching byte hit rializeprekeysignalmessagedestroylibsrtp libsrtpwhatsapp us libsrtp implementing secure real time protocol symbol name library function stripped binary despite application binary contains string reference libsrtp whatsapp rc libsrtp error initialize libsrtp sfailed led register libsrtp deinitfailed deinitialize libsrtp ck crypto init libsrtp create pool packet slibsrtpstat test cbesides binary contain string constant also found source code libsrtp like cloning stream ssrc whatsapp cloning streamsearching byte hit sent srtp cloning stream ssrc pjsipwhatsapp us pjsip implement multimedia communication signaling encoding audio video data besides pjsip implement stun also detected wireshark recording library identified string constant binary contain debug information pjsip whatsapp pjmediasearching byte hit r stream txpacket ideoenabled ibyuv rter count rame status eunknown pjmediavideodev error errorunknown pjmediaaudiodev error atency unknown pjmedia error mat info cbuf mbed tlswhatsapp applies mbed tl implement tl protocol library identified following function name binary whatsappcore mbedtlssearching byte hit rauthencryptmbedtlsciphercheckta xmppwhatsapp us extensible messaging presence protocol xmpp exchanging message asynchronously client form xml stanza supported fact many class name binary contain keywords relating protocol whatsapp xmppsearching byte hit byte hit byte hit objcclass xmppackstanza objcclass objcclass objcclass objcclass objcclass objcclass objcclass objcclass objcclass objcclass objcclass objcclass objcclass xmppnotificationstan noise protocol frameworkaccording whatsapp white paper noise protocol framework used securing communication client server noise protocol framework developed constructing easytouse cryptographic protocol set small building block precisely whatsapp applies noise pipe protocol derived noise protocol framework following static string constant found whatsapp binary string constant describe handshake pattern implemented whatsapp client first string referenced within class called wanoisefullhandshake second string referenced within class called wanoiseresumehandshake last string referenced within class called wanoisefallbackhandshake protocol work detail scoperuntime analysisthis part examines runtime behavior io whatsapp client help frida frida command line tool creates javascript hook function mobile application hook utilized observing manipulating parameter return value called functionskey transportthis part outline key transport whatsapp voip protocol work according whatsapp white paper encrypting voip call initiator generates random srtp master secret caller transmits encrypted message recipient signal incoming call contains srtp master secret information utilized reconstructing key transport ie transport master secret calleeas starting point traced function containing word secret fridatrace u whatsapp secret secret whatsapp call initiated method derivesecretsfrominputkeymaterial class wahkdf called wahkdf derivesecretsfrominputkeymaterial salt info outputlength withmessageversion input value pointer objectivec object frida allows create proxy objectivec object pointer javascript function hook derivesecretsfrominputkeymaterial used printing debug description object output script seen following wahkdf derivesecretsfrominputkeymaterial salt nil info byte withmessageversion first third parameter seem nsdata object contain static byte buffer first parameter length byte like master secret described whatsapp white paper third parameter ascii string representing jid caller see following first parameter indeed master secretencryption master secretaccording whatsapp white paper master secret essential protecting call session transported securely callee observing master secret processed traced function call containing key word relevant encryption fridatrace u whatsapp crypt crypt call initiated function signalencrypt libsignalprotocolc library called following show signalencrypt function header plaintext parameter read frida hook signalencrypt signalencrypt plaintext valuethe first four byte used serializing master secret protocol buffer following byte represent master secret last byte represent encryption padding discovered plaintext encrypted cbc mode encryption key derived double ratchet algorithm part signal protocol inner working libsignalprotocolc signal protocol investigated article output signalencrypt represented following byte signalencrypt output valuethe output carry byte authentication tag appended message computed part revealed first part whatsapp voip protocol master secret serialized padded encrypted aes key cbc mode encryption key iv well authentication key derived libsignalprotocolc library implement signal protocolpreparing master secretin following demonstrate encrypted master secret processed traced function containing keyword signal fridatrace u whatsapp signal frida command reveals function textsecuresignalmessagepack process encrypted master secret function creates signal message containing encrypted master secret parameter relevant signal protocol textsecuresignalmessagepack output valuethe gray byte used serializing signal message blue byte represent sender ratchet key red byte represents previous message counter follows message counter orange finally encrypted master secret represented following byte green signal messagewhen tracing xmpp related objectivec function see method named writenoiseframetosocketwithpayload class xmppstream called method sends xmpp message encrypted noise pipe protocol via tcp whatsapp server revealed content payload parameter xmppstreamwritenoiseframetosocketwithpayload payload valueit binary xmpp message containing signal message created disassembling message traced class named xmppbinarycoder class method called serialize creates binary representation xmpp stanza printing parameter see variety keyvalue pair added xmpp message xmppbinarycoder serialize call swhatsappnet id swhatsappnet offer callid callcreator swhatsappnet audio rate enc opus audio rate enc opus net medium capability ver encopt keygen enc v type pkmsg compressed able fake indication missed call alice bob device even though call initiated mallory possible overwriting callcreator parameter alice jid although name mallory shown message mallory bob responds notification start call alice instead mallory think research required analyzing manipulation initial call messagefaked missed call notificationthis part revealed encrypted master secret processed whatsapp encrypted master secret packed signal message added binary xmpp stanza xmpp stanza also contains call id jids caller calleetransmitting master secret calleeaccording whatsapp white paper client use noise pipe aesgcm noise protocol framework long running interactive connection tracing function containing key word relating noise protocol framework see class named wanoisestreamcipher used encrypting traffic sent whatsapp server class method called encryptplaintext plaintext value initiating call xmpp message message encrypted function mbed tl library called mbedtlsgcmcryptandtag moreover mbedtlsgcmsetkey called key size bit mean applied encryption key derived noise pipe protocol investigated article encrypted plaintext sent via tcp whatsapp server revealed wireshark recording server forward message callee initiating callencrypted call initialization messagekey derivationthis part explains key material used encrypting whatsapp call created key derivation function kdf result part retrieved help frida tracing class called wahkdf library libcommoncrypto wahkdf class applied deriving key salt nonce initializing srtp stream method derivesecretsfrominputkeymaterial called ten time call start wahkdf derivesecretsfrominputkeymaterial salt nil info byte withmessageversion result wahkdf derivesecretsfrominputkeymaterial salt nil info byte withmessageversion result wahkdf derivesecretsfrominputkeymaterial salt info byte withmessageversion result wahkdf derivesecretsfrominputkeymaterial salt info byte withmessageversion result wahkdf derivesecretsfrominputkeymaterial salt info byte withmessageversion result wahkdf derivesecretsfrominputkeymaterial salt info byte withmessageversion result wahkdf derivesecretsfrominputkeymaterial salt info byte withmessageversion result wahkdf derivesecretsfrominputkeymaterial salt info byte withmessageversion result method creates encryption key salt nonce based master secret jid call participant resulting value used initializing six srtp stream three call directionthe following code snippet show reconstruction key derivation function written javascript hkdf javascript implementationthis code snippet represents key derivation initializing single srtp stream input parameter function output recorded frida reconstructing kdf algorithm input output hash function libcommoncrypto library analyzed three computation applied deriving final key found kdf based rfc initializationsrtp implemented libsrtp applied whatsapp encrypting audio data exchanged whatsapp client voip call unfortunately symbol libsrtp library stripped whatsapp binary trace library function symbol name instead followed different approach analyzing function libsrtp librarymany function libsrtp library contain debug statement carry information internal library processing debug statement utilized identifying function library searched string constant data segment whatsapp binary also found libsrtp searched function body binary referencing string constant identified function libsrtp binary copied first byte hexadecimal representation used frida searching hexadecimal representation memory way revealed function start address traced fridaas example explain revealed usage libsrtp library function called srtpaesicmcontextinit function used initializing encrypted srtp stream based aesicm function analyzed part traced applying methodologythe implementation srtpaesicmcontextinit contains two debug statement see string constant debugprint call occur reference application binary whatsapp searching reference location possible associate string constant function encloses function containing reference revealed hopper disassembler line contain reference debug string constant location target function within whatsapp binary known still search memory location runtime address space layout randomization aslr applied io device function change address every time mobile application launchedthe following code snippet demonstrates srtpaesicmcontextinit located runtime apiresolver frida applied finding known memory location anchor start linear memory search use function anchor located closely target function binary symbol name function symbol name easily traced frida urlwithunicodestring traced line anchor found location used starting linear search memory value scansize chosen depending distance anchor target function line contains first byte target function hexadecimal value finally nativefunction created line traced frida hexadecimal pattern found function accepts two parameter pointer encryption context cv pointer encryption key key call started srtpaesicmcontextinit called six time initializing six srtp stream two stream receive master secret key parameterthe stream encrypted aesicm purpose stream clear also function called srtpaesicmalloc identified string constant allocating cipher key length function accepts key length parameter value byte every stream result applied encrypting srtp stream despite fact byte derived key derivation function byte actually used initializing first two stream overwriting remaining byte memory call two whatsapp client still work show byte used call encryptionthere function called srtpaesicmencrypt part libsrtp library function encrypts srtp stream whatsapp client based function identified reference following string constant debug statement block index following represents hexadecimal output single srtp packet encrypted srtpaesicmencrypt srtpaesicmencrypt outputthe meaning first byte red already explained following byte blue represent actual srtp payload last four byte represent authentication tag investigated six srtp stream different kind payload could identify actual payload content transported streamcall integritythis part explains integrity srtp packet protected libsrtp library contains function named srtphmaccompute function computes authentication tag srtp packet exchanged whatsapp client srtphmaccompute could located traced frida searching reference string constant found function implementation intermediate state function header srtphmaccompute seen following srtphmaccompute applies computing authentication tag tracing function frida revealed input message output result well value taglen sent srtp packet following log show taglen message parameter srtphmaccompute call attaching search srtphmaccompute memory srtphmaccompute ca fe cd fe ca dc fe fe de af bd ff cf db fc eb cc bd ea bc ed ac bb two thing noticed srtp packet tag length four byte authenticated incorrectly message parameter contain actual srtp packet instead constant value four zero byte used computing authentication tag however tag packet manipulated call terminated second maybe observation authentication tag computed incorrectly right packet manipulation made invalid packet encoding destroyed stream authenticated tag length ten byte seem authenticated right way ie packet input srtphmaccompute function message parameter despite authentication tag checked integrity voip call session following code snippet show overridden authentication tag srtp packet authentication tag ten byte executing frida script runtime voip call still work hence integrity protection srtp packet broken consequence finding unknown since could reveal stream actually used behavior analyzed preciselyconclusionthis article revealed fundamental part whatsapp voip protocol demonstrated analysis network traffic binary application file dynamic runtime behavior whatsapp client helped reveal protocol stepsthe result analysis following whatsapp applies open source library like libsignalprotocolc libsrtp pjsip mbed tl implementing voip protocola value called master secret used initializing two srtp stream encrypt payload master secret used input key derivation function hkdf derives key salt nonce initialization parameter srtpthe noise pipe protocol signal protocol xmpp interact transporting master secret callee setting call session master secret encrypted signal protocol packed xmpp message encrypted noise pipe protocol sent whatsapp server server pass encrypted master secret callee signaling incoming callintegrity protection voip call seems flaw srtp stream checked integrity moreover stream compute invalid authentication tag zero byte input instead actual srtp packetsrtp packet reveal sensitive data except duration voip call sessiona malicious caller able manipulate initial call message enables attacker confuse whatsapp client callee see unintended caller information device social engineering attack realized vulnerabilityfor cryptographer http githubcomschirrmacherfilesblobmasterwhatsapp binary http githubcomschirrmacherfilesblobmasterwhatsapp http githubcomschirrmacherfilesblobmasterwhatsappcorethe conducted research face several limitation four stream initialized encryption key unknown origin adding know key integrity protection srtp stream come fromto conclude article showed difficult application developer hide implementation mobile application tool like frida enable researcher attacker gather critical information implementation mobile application short amount time application developer bear mind cryptographic key easily extracted tool impeding dynamic analysis application useful strip symbol name application binary moreover application developer remove string constant contain critical application information help locate function
75,Lobsters,mobile,Mobile Development,Ubuntu Touch on the PinePhone is Shaping Up [Video],https://www.omgubuntu.co.uk/2020/01/ubuntu-touch-on-the-pinephone-is-coming-along-nicely,ubuntu touch pinephone shaping video,thousand folk snapped pinephone brave heart edition went sale last year handset arriving many earlyadopters scouting mobile operating system use different operating system ubports postmarketos home video ubuntu touch shaping nicely pinephone video,thousand folk snapped pinephone brave heart edition went sale last year handset arriving many earlyadopters scouting mobile operating system use company behind pinephone shared video different operating system running pinephone christmas month many system showcased improved greatly including ubuntu touch mobile o created canonical continued communitybased ubports short video posted youtube ubports developer marius gripsg√•rd showcase current state ubuntu touch fledgling fossfriendly handset video look pretty good unity interface fairly responsive despite gpu driver graphic chipset pinephone pretty basic great see wifi browsing web installing apps work without hiccup remember ubuntu touch like linux os actively developed pinephone daily driver ready state getting ubuntu touch postmarketos seem outsider eye least two system best shape right without issue broadly functional progress made linux community support device even widely available yet pretty impressive real community gathering around pinephone well many pine product leaf feeling hyped rather optimistic thing go next particular company pinephone currently custom waiting clearance testing system first hand sure share early thought thing shaping home video ubuntu touch shaping nicely pinephone video
76,Lobsters,mobile,Mobile Development,Research In Motion‚Äôs BlackBerry Wireless E-Mail Devices: Decoding the Mobitex protocol (2002),http://grandideastudio.com/wp-content/uploads/blackberry_decoding_paper.pdf,research motion blackberry wireless email device decoding mobitex protocol,,obj length r filter flatedecode stream j
77,Lobsters,mobile,Mobile Development,Easily Add Offline-First to Any Application,https://replicache.dev/,easily add offlinefirst application,write data,write data const createtodo replicacheregister createtodo async tx args const id text complete args await txput todo id text complete createtodo id uuid text thisstatetodotext complete false let createtodo replicacheregister createtodo tx writetransaction args txput todo args id args createtodo id uuid uuidstring text todotext done false mutator mutator replicacheregister createtodo writetransaction tx jsonvalue args txput stringformat todo argsget id args mutator createtodo jsoncreateobjectbuilder add id idstring add text todotext add done done build const createtodo replicacheregister createtodo tx args async await txput todo args id args createtodo id uuid text todotext complete false replicache executes mutator immediately local cache subscription refire view instantly updated pending change
79,Lobsters,mobile,Mobile Development,Setting the Record Straight: PinePhone Misconceptions,https://www.pine64.org/2020/01/24/setting-the-record-straight-pinephone-misconceptions/,setting record straight pinephone misconception,mainline atf lima gpu driver introduced kernel http linuxsunxiorglinuxmainliningeffort statusmatrix,take pleasure writing blog post fact even writing word internally torn whether right approach addressing problem hand whether chosen right approach remains seen regardless feel time confront misconception pinephone misconception misconception concern openness pinephone numerous occasion seen pinephone refereed closedsource one level another know origin misconception understand reason become propagated throughout internet know however repeatedly quoted online article covering pinephone linux device year let set record straight pinephone full closedsource firmware moreover one open device open let start allwinner soc brain pinephone run mainline linux us mainline atf uboot open source driver main soc component openness extends lima gpu driver introduced kernel linux contain driver major component soc part still need upstreamed mainline hdmi audio msgbox driver work information mainlining effort please refer column http linuxsunxiorglinuxmainliningeffort statusmatrix worth mentioning initialization done uboot spl also open source blob either needle say pinephone open platform o run grand majority os developed pinephone completely open blob nonfoss part phone follows wifi bluetooth firmware must uploaded realtek initialization optional autofocus firmware currently used pinephone os uploaded rear omnivision camera quectel lte modem run closedsource o wifi module communicates cpu sdio bt uart neither connection provide direct access cpu memory lte modem pinephone black box run linux system internally includes proprietary module blob needed run actual cellular radio however system almost entirely isolated main system running soc data contact modem usb connection data connection audio data going modem must go connection ram flash storage shared system short unless explicitly send data modem never contact blob running inside modem send data phone unless phone willing receive basic usb closing statement think misconception arose online result someone ill intention conspiracy really however feel leave unanswered much longer misconception would propagated
80,Lobsters,mobile,Mobile Development,The AlphaSmart dana in 2019,https://www.osnews.com/story/131180/the-alphasmart-dana-in-2019/,alphasmart dana,machine palm o potential deal breaker conclusion note reference link alphasmart writing tool group flickr largest online community alphasmart dana alphasmart dana power hack vance fry battery hack article photograph discussion comment hook alphasmart dana help link hook update file guide link invaluable new dana owner alphasmart history one edtech favorite dropkickable writing tool audrey watters take depth look history alphasmart inc alphasmartcom archive palmopensourcecom repository free software palm o palm ready wallow osnews retrospective palm o,alphasmart dana technically palm o pda way hannibal lecter technically famous chef dana run palm o almost reversed priority normal pda example drafted college essay dana never used calendar address book began writing article contrast palm o founder jeff hawkins distilled average pda user need really care calendar address book trying coordinate secretary palm designed operating system organize social schedule alphasmart inc used codebase create device focused expression rather organization alphasmart founded exapple employee designed simplified computer classroom afford high end computer alphasmart achieved lower cost hyperfocusing composition lower cost became irrelevant laptop price dropped hyperfocus composition become relevant era distraction consider dana device producing draft even flaw transformed strength alphaword article progress dana pinnacle alphasmart writerfocused device former apple engineer ketan kothari joe barrus created alphasmart early create wordprocessing computer kothari said goal allow user focus word floated idea education discussion board fidonet met group enthusiastic teacher get feedback prototype device prototype simply full keyboard lcd display ability store writing teacher liked told engineer needed something fewer key standard battery smaller form factor kothari barrus incorporated tweak original alphasmart device future product kept form factor reduced keyboard lcd screen output port battery compartment future model introduced handful new feature alphasmart pro could connect pc mac computer five year later alphasmart introduced usb support dana adapted palm o facilitate much capable machine dana included touch screen backlight proper file management compatibility load palm application larger screen improved font rendering plethora port including two sd card slot screenshot normal sized palm app diddlebug running dana dana first alphasmart machine use palm o also last dana released retail cost well adjusted inflation time lower end ibook retailed adjusted inflation cost weight laptop fell alphasmart simplify design compete lower end laptop released neo abandoned palm o many dana feature cost half much dana initially alphasmart aimed two tier product line cheaper neo higher end dana however found school reluctant pay without getting fullblown laptop alphasmart slightly upgraded memory neo rebranded continued several year sole device even though sold low finally killed current successor dana stand high water mark alphasmart mission create machine focus word machine dana text editor theoretically could function complete word processor way calendar address book center palm handhelds alphaword software heart dana alphaword plenty option formatting rarely go typing dana right focused entirely content adjusted font point garamond bold purely visibility font stripped move document onto laptop dana output rtf document preserve font bit awkward preserving font requires squinting already blurry screen smaller letter dana much word processing power even print straight dana feature highlight much dana used finished product first alphaword separate document page document pure stream text perfect first draft however pageless document mean actual layout mystery document printed next dana quite technical printer issue connected two cheap inkjet printer ignored dana connected brother laser printer believe printed correct number page came blank found couple large officestyle copier could print document straight alphaword disregarded font except italic bold favorite printer interaction connecting thermal printer expect anything cheap thermal printer spooled anything dana threw thermal printer completely disregarded formatting dana something fitting stark receiptlike printout coming simple keyboard experimented sending receiptstyle list poetry thermal paper pleased output however imagine trying read essay narrow scroll receipt paper alphaword document screen versus printed dana adequately print palm o facilitates plethora way get document dana usb keyboard emulation best way get material dana machine default setup connected via standard usb cable dana becomes usb keyboard type like keyboard big difference send key dana function like robot typing document keystroke keystroke alphaword even allows set typing speed case connection slow versatile work every computer tested also every phone tested even allows dana connect usb keyboard bluetooth adapter transform dana wireless bluetooth keyboard versatile software side well dana treat character keystroke write fianc√© naivet√© even though know offhand create accented character onscreen simply type way would laptop keyboard use software convert markup markdown formatting type dana also slot workflow usb keyboard method exporting document work perfect moving rough draft dana usb cable also allows dana upload sync document palm desktop cumbersome required fair bit set window laptop offer much benefit removing document dana big difference allows twoway flow document downloaded dana synced across device one benefit syncing allows upload material dana add address calendar date like palm device also upload document work even ebooks read easy way add application font dana apps also sideloaded via dana sd card slot custom widescreen launcher using category dana sd card also work great back transfer information kept document primarily ram saving reloading sd card slows otherwise immediate response dana file structure card natively viewed computer handle fat alphaword us proprietary format easy strip formatting generate text file even window apps convert dana file rtf txt format standard file system apps stored sd card used computer also text editor palm o open alphaword material save text document sd card within dana sd card bulletproof sending via usb cable incredibly versatile moving experience typing dana going quickly run connection option dana great infrared port use dana like world largest universal remote also wifi older wep router even option brief tour public wifi hotspot revealed local coffee house built old repurposed train station wep available even think mistake coffee house password set wep catch error nowhere dana get online directly may better result live rough neighborhood time warp big deal dana web browser painfully slow play dana hyperfocus writing wifi connection would open lot distraction like email social medium custom widescreen launcher showing apps loaded onto sd card palm o huge advantage palm o provides making easier keep phone pant study psychologist bill thornton found mere physical presence phone even lying silent face reduced attention span impaired people ability perform complex task thornton described mobile device external stimulus could trigger thought wider social network way holiday decoration ritual trigger holiday thought thus mobile device provoke distracting thought frequently used distraction dana possible use handful apps set alarm check time tiny important task might otherwise user reaching smart phone dana run piece software give advantage alphasmarts still access social medium therefore become associated distraction dana facilitates deep focus writing main reason got one something see echoed throughout online post regarding machine writer praise device limitation dana limitation always feel responsive dana processor slow palm o make seem fast whole system life ram software minimal even though dana work different goal average pda palm fastaspaper design philosophy still huge strength dana keyboard several hotkeys mapped instantly open app proper multitasking alphaword remembers cursor position seamless hop example battery status monitor hop right back document even using complex software like file manager never keypress away dive back work writing keyboard also function key mapped document key work like tab workspace document saved moved background map key document device alphaword menubased feature like undo cut paste accessed keyboard shortcut even shortcut pop word count make possible simply type without take hand keyboard feature set way maintains flow creation avoided quirk flaw far overall love dana however couple huge issue one device largest shortcoming software ecosystem alphasmart designed device two decade ago modern version palm o palm desktop window bridging time gap give dana almost archaeological user experience physical store even app store experience setting device device missing crucial software update improves stability native alphasmart apps downloaded enthusiast website machine lacked proper file manager downloaded filez dropbox link flickr thread dana longer supported accessed online user manual via plugging broken link wayback machine archive old manufacturer page found free text editor specifically written dana wide screen sied dana version sourceforge alpha left abandoned year ago editor sometimes crash whole system work fine used purely convert proprietary alphaword format pure text document really wanted app could tab check time battery level clock battery monitor found complex interactive thing used tiny font none quite worked drafting workflow downloaded n basicpalm antique ide puzzle limited programming knowledge found dusty book palm o software upper floor university library entirely atypical experience active alphasmart online community flickr user frequently swap tip obscure resource discus modified dana custom clock battery monitor one modification seems incredibly common among dana user vance fry battery hack factory dana wired take either aa battery rechargeable battery pack fit aa battery compartment rechargeable battery pack make dana far useable trying swap aa every week month depending usage however pack production existing pack aging leaf two option user open old battery back replace battery inside modern aa rechargeable battery far elegant solution vance fry website wire battery pack connector aa battery terminal allows dana run normal rechargeable battery sold everywhere dana charged usb port modification something honestly enjoyed enjoyed open device cut wire resolder first time soldered electronics built knowledge since something positive experience soldering battery pack searching ruin crumbling website vintage software however may deal breaker user many alphasmart fan prefer basic device like neo alphasmart ecosystem navigate potential deal breakerthe dana main issue biggest flaw dependence biggest flaw alphasmart device need upload laptop desktop tablet phone designed era desktop computer common type laptop luxury today laptop outsell desktop computer double smartphones tablet become commonplace mean dana compared device requires choice dana laptop rather choice dana plus laptop simply laptop personally used dana quite bit school semester remained stashed closet sometimes even writing project dana could valuable required constant reference note research project laptop least phone run alongside dana dependence biggest flaw dana one problem really work dana purpose dana another device table next laptop increase complexity writing add distraction function push writer writing process dana lot problem turn strength dependence one thing would caution author student consider tracking used machine would still recommend experience writing dana fascinating explore computing experience divorced distraction seem inherent modern platform conclusionoverall alphasmart dana show relationship minimalism focus abandonment complex feature enables much stronger writing machine tiny screen poor internet simplicity enhance writing process dana enough flexibility operating system facilitate composition without ability really distract writing dana valuable experience even using find conscious relationship distraction creation fascinating look alternate type computing distraction negative rather form monetization note reference link alphasmart writing tool group flickr largest online community alphasmart dana alphasmart dana power hack vance fry battery hack article photograph discussion comment hook alphasmart dana help link hook update file guide link invaluable new dana owner alphasmart history one edtech favorite dropkickable writing tool audrey watters take depth look history alphasmart inc alphasmartcom archive palmopensourcecom repository free software palm o palm ready wallow osnews retrospective palm o referred business behind alphasmart product alphasmart inc simply alphasmart coherency brand variously owned intelligent peripheral device inc alphasmart inc renaissance learning neo direct inc edmodo
82,Lobsters,mobile,Mobile Development,"Building responsive apps for Linux Smartphones with GTK and libhandy, Part 1",https://tuxphones.com/tutorial-developing-responsive-linux-smartphone-apps-libhandy-gtk-part-1/,building responsive apps linux smartphones gtk libhandy part,example simple todo pomodoro timer app step installing flatpak page truly necessary step setting build environment installing libhandy build source installing gnome builder flatpakenabled distribution step creating new project builder choose name buildaux data po src comtuxphonesorganizerjson mesonbuild step adding app comtuxphonesorganizerjson step ui stub todo app also remember set true nice icon step making view switcher responsive step deploying app guide excellent guide tobias bernard leave tip,delivery first developeroriented librem pinephone prototype bravest backer officially state modern linux smartphones thing know smartphone without proper apps basically widescreen dumbphone linux phone without proper touchfriendly responsive apps far usable daily lifethe aim short series tutorial guide towards building simple apps example simple todo pomodoro timer app linux smartphones using libhandy library developed purism used several official gnome project extend gtk providing mobilefriendly widget make creation responsive apps easier basic knowledge programming wysiwyg ui design tool highly recommended understand step fullyalthough tutorial made ubuntu use python programming language purely practical reason easily adapted distribution installing couple package different way programming language meson build tool relatively languageagnostic gtk function name overall logic work le way language making easy follow adaptstep installing flatpakyou need setup flatpak add flathub remote order app correct flatpak runtimessdks packaged properly follow instruction page ubuntu box flatpak within second plus time rebooting machine yes rebooting case still truly necessarystep setting build environmentinstalling libhandyto install libhandy ubuntu later simply get official repository sudo apt install distribution either look repository aur build source please notice step optional still recommended enable libhandy widget ui design tool standalone compilation outside flatpak moreinstalling gnome builderwe going use official gnome builder ide application get easily ubuntu repository sudo apt install gnomebuilderon flatpakenabled distribution installing difficult flatpak install flathub orggnomebuilderstep creating new project builderthankfully builder offer readymade hello world template basic gtk application using meson ninja build tool eliminating hassle setting build environment scratchlaunch gnome builder click start new project button bottom welcome screen choose name project case simply organizer application id somewhat follow reversedomain scheme example comyourwebsiteappname iogithubusernameappname comgitlabusernameappname commonly found pattern case comtuxphonesorganizer workwe choose python language app gnome application template version control mandatory still highly recommended finally click create project et voil√† ide create open hello world gtk templatenot bad right sidebar show project tree briefly explain follows buildaux auxiliary directory wo nt touch projectdata kind data file app manifest static file need access runtime copy installing apppo internationalization translation related file beyond tutorialsrc python code case ui layout file appcomtuxphonesorganizerjson flatpak manifest file project containing information needed dependency projectmesonbuild base meson build file project every directory involved compiling installing oneclick central item builder title bar one say organizer get information project build statusnow click update dependency button leftmost two icononly one build status popover download needed dependency project install required gnome sdks platform prompted ready test hello world app still without libhandy support click build brick button title bar play icon run projectafter second minute several dependency need installed everything work see hello world window screenas fun watching paint dry still appstep adding libhandy appnow plain gtk app time add libhandy support order start designing ui therefore need add libhandy dependency flatpak manifest file meson build file latter nt strictly mandatory case dependency always packaged app include flatpak manifest warns user installed compile time prevents runtime error project built standaloneso open flatpak manifest comtuxphonesorganizerjson look module line need add libhandy module built source git organizer module latter depends former simply copy following module module list name libhandy buildsystem meson configopts dprofilingfalse dintrospectionenabled dgtkdocfalse dtestsfalse dexamplesfalse dvapifalse dgladecatalogdisabled source type git url http branch open mesonbuild file root directory add following line first project line dependency version still able compile run project properly open windowui file src folder change gtkheaderbar hdyheaderbar see properly integrated first need include handy windowpy order app load libhandy widget alongside gtk one also need call random function libhandy source order python overoptimize import thanks martijn tip make useless remove label line template replace dummy handycolumn achieve thisyou build run app nt see error log congratulation gtk app libhandy support step ui stub todo appto start designing ui open windowui file builder click small view design button title bar builder crash sigh builder ui designer glade right front libhandy fully installed see widget catalog clicking three dot see picture libhandy widget show nt panic distros might set dgladecatalog flag false mean first try install libhandyrelated development package distro compile install source manually still work also without libhandy widget glade ui editor entirely mean edit ui source file manually might longernow start removing gtkheaderbar clicking select pressing del label add hdyheaderbar title bar gtkbox content area set number item top part box store gtkstack bottom one view switcher shown mobilealso remember set show decoration true hdyheaderbar order window control shown desktop devicesnow add gtkstackswitcher title bar wide screen mobileoriented hdyviewswitcherbar bottom boxnow select gtkbox go third tab right sidebar set vertical expand true using switchnext set stub widget label case first page dragging label inside gtkstack selecting first page one two switcher createdthen give identity stack page switching second packing tab label setting name todo title nice icon following freedesktop naming case viewlistsymbolic page done icon objectselectsymbolic pomodoro alarmsymbolic minor tweak ui set icon size bottom switcher make look arguably better ready hit run button see app stub glorya marginally le boring appsure still long way go app responsive two redundant view switcher shown top one even centered nice libhandy app stub view switching logic already work remove redundant switcher make app finally responsive let find outstep making view switcher responsivefirst need rework ui little order header bar become responsive libhandy hdysqueezer become first child hdyheaderbar widget adapts container bestfit logic case showing first child fit current window width one present widget always shownwe temporarily delete gtkstackswitcher title bar instead add hdysqueezer id squeezer childthen set header bar title string none add two widget squeezerthe first hdyviewswitcher bar id headerbarswitcher stack set previously created gtkstack remember set visible case nt defaultme v drunk touchpadsecondly add gtklabel mimick window title label must placed switcher order shown fallback might tricky add second child squeezer ui editor may need click view source manually insert second child hdysqueezer child object class gtklabel property name name titlelabel property property name visible true property property name canfocus false property property name label organizer property attribute attribute name weight value bold attribute object child finally add property header bar set centering policy property name centeringpolicy strict property important modify line object class hdysqueezer specify headerbar child represents title change child child type title attribute quite tricky tends get discarded ui editor even minimal change app look ui modification remember set source finally select bottom switcher ui editor set id bottomswitcher disable reveal switch nt panic visible anymore still therewe need implement simple python logic dynamically revealing bottom switcher inside class declare three instance variable squeezer headerbarswitcher bottomswitcher pointing gtktemplatechild somewhat magic function bind object ui id variable namenext init python class constructor connect squeezer object notify visiblechild signal triggered hdysqueezer widget change visible object show hide view switcher selfsqueezerconnect notify visiblechild selfonheaderbarsqueezernotify finally need create function receive signal called onheaderbarsqueezernotify function simply check squeezer showing label switcher hidden instead hdyviewswitcher show bottom switcher one header bar hidden def onheaderbarsqueezernotify self squeezer event child squeezergetvisiblechild selfbottomswitchersetreveal child selfheaderbarswitcher bottom switcher revealed default nt duplicate switcher initially starting app window certain size signal sent mobile switcher shownthe final organizerwindow class windowpy look similar class organizerwindow gtkapplicationwindow gtypename organizerwindow handycolumn squeezer gtktemplatechild headerbarswitcher gtktemplatechild bottomswitcher gtktemplatechild def init self kwargs super init kwargs selfsqueezerconnect notify visiblechild selfonheaderbarsqueezernotify def onheaderbarsqueezernotify self squeezer event child squeezergetvisiblechild selfbottomswitchersetreveal child selfheaderbarswitcher compile run usual first responsive hello world app front resizing window horizontally toggle mobile normal stack switchersstep deploying appfinally want know deploy stub app thankfully builder make task turning code flatpak bundle one button far first need minimal desktop appdata file represent app desktop launcher app storesin data folder already find two almost ready template appid appdataxmlin appid desktopin need make slightly completewe modify desktopin file slightly capitalizing name field adding genericname short description line nameorganizer genericnamea responsive todo app pomodoro timer designed linux phone similarly simply add name summary field appdataxmlin file need complete detailed appdata file order app published correctly shown linux software center apps guide cover topic detail xml version encoding component type desktop id comtuxphonesorganizerdesktop id name organizer name summary responsive todo app pomodoro timer designed linux phone summary metadatalicense metadatalicense projectlicense projectlicense description description component designing adding icon beyond tutorial excellent guide tobias bernard probably help youfinally said want bundle app flatpak builder make fuss oneclick thing compile project click top bar toggle build status popover click blue export bundle button wait second flatpak bundle comtuxphonesorganizerflatpak case show within second default file managerdid already say easy finally come end first tutorial working still useful responsive libhandy app stub bundled flatpak ready published flathub anywhere elsewe eventually turn organizer fullyfunctional todo app within tutorial series enjoyed guide least found useful leave tip
83,Lobsters,mobile,Mobile Development,Watch 4 Linux-Based Mobile OSes Running on the PinePhone,https://www.omgubuntu.co.uk/2019/12/pinephone-mobile-os-demo-video-one,watch linuxbased mobile os running pinephone,mentioned previously pinephone linux phone super excited ubuntu touch postmarketos phosh kde neon plasma mobile luneos pinephone brave heart edition available purchase home news watch linuxbased mobile os running pinephone,mentioned previously pinephone linux phone super excited one reason gaga gadget rather say pricey purism librem breadth mobile o support planned something innately linuxy accessible hardware platform software project free encouraged build extend explore expand etc like default o switch another like try something else pinephone let distro hop phone multiple linux mobile os planning support device sd card bootable easy switch system video filmed uploaded get glimpse linux mobile operating system currently active development firstgeneration pinephone ubuntu touchpostmarketos phosh kde neon plasma mobile luneos keep mind everything shown video including hardware still fine tuned nothing shown video final video pinephone go general early next year priced default o writing undecided want one sooner pinephone brave heart edition available purchase albeit aimed solely enthusiast developer well early adopter mind bug missing feature home news watch linuxbased mobile os running pinephone
84,Lobsters,mobile,Mobile Development,"Wikipedia removing support for old Android smartphones and ""Web Security"" software",https://en.wikipedia.org/sec-warning,wikipedia removing support old android smartphones web security software,english ‰∏≠Êñá espa√±ol Ô∫éÔª†ÔªãÔ∫ÆÔ∫íÔª≥Ô∫ì fran√ßais Êó•Êú¨Ë™û deutsch italiano magyar svenska http browser recommendation,english wikipedia making site secure using old web browser able connect wikipedia future please update device contact administrator ‰∏≠Êñá espa√±ol wikipedia est√° haciendo el sitio m√°s seguro usted est√° utilizando un navegador web viejo que ser√° capaz de conectarse wikipedia en el futuro actualice su dispositivo contacte su administrador inform√°tico m√°s abajo hay una actualizaci√≥n m√°s larga m√°s t√©cnica en ingl√©s Ô∫éÔª†ÔªãÔ∫ÆÔ∫íÔª≥Ô∫ì ŸàŸäŸÉŸäÿ®ŸäÿØŸäÿß ÿ™ÿ≥ÿπŸâ ŸÑÿ™ÿ£ŸÖŸäŸÜ ÿßŸÑŸÖŸàŸÇÿπ ÿ£ŸÉÿ´ÿ± ŸÖŸÜ ÿ∞Ÿä ŸÇÿ®ŸÑ ÿ£ŸÜÿ™ ÿ™ÿ≥ÿ™ÿÆÿØŸÖ ŸÖÿ™ÿµŸÅÿ≠ Ÿàÿ® ŸÇÿØŸäŸÖ ŸÑŸÜ Ÿäÿ™ŸÖŸÉŸÜ ŸÖŸÜ ÿßŸÑÿßÿ™ÿµÿßŸÑ ÿ®ŸÖŸàŸÇÿπ ŸàŸäŸÉŸäÿ®ŸäÿØŸäÿß ŸÅŸä ÿßŸÑŸÖÿ≥ÿ™ŸÇÿ®ŸÑ Ÿäÿ±ÿ¨Ÿâ ÿ™ÿ≠ÿØŸäÿ´ ÿ¨Ÿáÿßÿ≤ŸÉ ÿ£Ÿà ÿßŸÑÿßÿ™ÿµÿßŸÑ ÿ®ÿ∫ÿØÿßÿ±Ÿä ÿ™ŸÇŸÜŸäÿ© ÿßŸÑŸÖÿπŸÑŸàŸÖÿßÿ™ ÿßŸÑÿÆÿßÿµ ÿ®ŸÉ ŸäŸàÿ¨ÿØ ÿ™ÿ≠ÿØŸäÿ´ ŸÅŸÜŸä ÿ£ÿ∑ŸàŸÑ ŸàŸÖÿ∫ÿ±ŸÇ ŸÅŸä ÿßŸÑÿ™ŸÇŸÜŸäÿ© ÿ®ÿßŸÑŸÑÿ∫ÿ© ÿßŸÑÿ•ŸÜÿ¨ŸÑŸäÿ≤Ÿäÿ© ÿ™ÿßŸÑŸäÿß fran√ßais wikip√©dia va bient√¥t augmenter la s√©curit√© de son site vous utilisez actuellement un navigateur web ancien qui ne pourra plus se connecter √† wikip√©dia lorsque ce serum fait merci de mettre √† jour votre appareil ou de contacter votre administrateur informatique √† cette fin de information suppl√©mentaires plus technique et en anglais sont disponibles cidessous Êó•Êú¨Ë™û deutsch wikipedia erh√∂ht die sicherheit der webseite du benutzt einen alten webbrowser der zukunft nicht mehr auf wikipedia zugreifen k√∂nnen wird bitte aktualisiere dein ger√§t oder sprich deinen itadministrator ausf√ºhrlichere und technisch detailliertere hinweise findest du unten englischer sprache italiano wikipedia sta rendendo il sito pi√π sicuro stai usando un browser web che non sar√† grado di connettersi wikipedia futuro per favore aggiorna il tuo dispositivo contatta il tuo amministratore informatico pi√π basso √® disponibile un aggiornamento pi√π dettagliato e tecnico inglese magyar biztons√°gosabb lesz wikip√©dia b√∂ng√©sz≈ë amit haszn√°lsz nem lesz k√©pes kapcsol√≥dni j√∂v≈ëben haszn√°lj modernebb szoftvert vagy jelezd probl√©m√°t rendszergazd√°dnak al√°bb olvashatod r√©szletesebb magyar√°zatot angolul svenska wikipedia g√∂r sidan mer s√§ker du anv√§nder en √§ldre webbl√§sare som inte kommer att kunna l√§sa wikipedia framtiden uppdatera din enhet eller kontakta din itadministrat√∂r det finn en l√§ngre och mer teknisk f√∂rklaring p√• engelska l√§ngre ned ‡§î‡§∞ ‡§Ü‡§™ ‡§è‡§ï ‡§ï‡§∞ ‡§è‡§ï ‡§î‡§∞ removing support insecure ciphersuites using cbc mode specifically browser software relies connect site usually caused outdated browser older android smartphones could interference corporate personal web security software actually downgrade connection security must upgrade web browser otherwise fix issue access site message remain august date browser able establish connection server see also http browser recommendation page moredetailed information
85,Lobsters,mobile,Mobile Development,Moving To Progressive Web Apps,https://kevq.uk/moving-to-progressive-web-apps/,moving progressive web apps,progressive web apps wikipedia use pwa mastodon add pwa io android conclusion subscribe click,possible decided transition native apps progressive web apps pwa mobile device want know think much better solution native apps please read onwhat progressive web apps pwa basically shortcut website stored device click shortcut website loaded full screen browser window generally feel native appa progressive web application pwa type application software delivered web built using common web technology including html cs javascript intended work platform us standardscompliant browserwikipediathe advantage using progressive web app instead native app get functionality none tracking battery drain pwa closed beacon home track drain batterythat persistent code stored device carry task gps tracking checking new notification security advantage new code mean new potential vulnerability introduced exposure footprint reducedwhere use pwa social medium apps absolute worst come tracking battery drain constantly checking update see new notificationssince switching iphone managed replace following apps pwa alternative mastodon fosstodon twitterlinkedinredditmy r feed readermastodon pwathis may sound like much since moving apps pwa alternative able significantly extend battery life regularly go bed still half battery left considering many people know appear permanently tethered plug socket think pretty good goingi also like fact progressive web apps support notification constantly bothered various social network even using native apps still turned notification offthe advantage remain control social medium want check call interrupt ready check notification get wayhow add pwawhether running andoird io really simple add pwa device io open safari idevice go website example twittercom tap share button safari swipe select add home screen tap tap add top right android open chrome android device go website example twittercom tap setting top right corner chrome swipe tap add home screen want know website work pwa need visit site mobile device site behaves well mobile browser pwa behaviour exactly sameconclusioni personally found replacing native apps progressive web apps number advantage many disadvantagesthe next time thinking installing native app consider trying pwa alternative far experience pretty seamless mesubscribe receive monthly email update preview upcoming post find click
86,Lobsters,mobile,Mobile Development,Building Mobile Apps (iOS and Android) with Clojurescript,https://medium.com/mindorks/building-mobile-apps-ios-and-android-with-clojurescript-4600235f826c,building mobile apps io android clojurescript,medium github,let change background color button text shown press buttonlet reinstall app using npm run runandroideven changing code reinstalling application everything look samestill working credit giphy although made change cljfile one thing still done rebuild code update indexandroidjs file actually loaded bundlerthis figwheel come picture without need manually rebuild install application every time make change code check projectclj notice exactly happens prod profile figwheel every time build project update indexandroidjs indexiosjs lein withprofile prod cljsbuild autohowever really slow feedback cycle development therefore separate dev profile us figwheel start using figwheel run following command make sure emulator running beforehand renatal useandroiddevice renatal lein figwheel npm run runandroidusing figwheel developmentnow make change code see result realtime thank reading hope enjoyed article next part let build application scratch also follow medium github
87,Lobsters,mobile,Mobile Development,Plasma Mobile as Daily Driver on PinePhone,https://blog.bshah.in/2019/12/20/plasma-mobile-as-daily-driver/,plasma mobile daily driver pinephone,preparing pinephone web browsing hotel checkin boarding trainflights itinerary application adding zxingcpp dependency searching public transport option ktrip application communication animated sticker conclusion post martijn braam,last week bluesystems gmbh meeting germany almost km away home one would hope journey smooth ofcourse case journey missed phone first segment journey route home write hour layover tried retrieve phone unfortunately already lost found team getting would require going immigration etc thankfuly lg nexus generally use test plasma mobile build hurry flashed lineageos downloaded basic application needed second lag journey spent time copying required document file mobile device fastforward day nexus decided time give turning screen turn back tried charging hour luck need mobile meeting since meeting stay place able communicate family friend telegram needed travel back home realized survive without mobile device largely fun preparing pinephone android device pinephone developer prototype run plasma mobile among others decided see make use plasma mobile traveling back usecase general limited minor web browsing hotel checkin boarding train flight searching public transport option communication generally use sim card abroad due high international roaming charge need working call yet absolute minimal requirement mind started setting pinephone web browsing plasma mobile angelfish web browser using qtwebengine kirigami user interface box qtwebengine work used pinephone however internally chromium manages workarounds specific graphic driver one workaround available already however tested binary driver released allwinner opensource lima driver needed adjust workaround match opensource lima driver well id crbugs description support glrgb format glvendor arm glrenderer glrenderer mali feature disableglrgbformat patch allows one browse web using angelfish hotel checkin boarding trainflights staying frankfurt one day since flight early morning next day needed check hotel also board two train reach frankfurt paper copy booking using boring wink decided use itinerary application checking hotel traveling train itinerary allows import manage various booking boarding pass managed import booking hotel trouble importing booking train boarding pass investigation issue showed itinerary built neon zxingcpp dependency zxingcpp allows scan decode various type barcodes qr code commonly used flight train boarding pass adding zxingcpp dependency kitinerary package solved issue able import boarding pass importing able use place without problem searching public transport option needed search public transportation frankfurt used ktrip application find way around frankfurt general quite easy use enter start point end point enter time want depart find connection make use map train station bus station well able get information directly mobile device quite useful communication travel able connect friend family colleague using telegram messanger able easily install using discover software center since kde neon qt package decided use version flathub telegram worked flowlessly minor annoying issue someone sends animated sticker chat telegram application would crash opening chat investigated issue could bug telegram issue graphic driver hard tell moment wanted use telegram one use kaidan xmpp spectral matrix chat well conclusion overall much smoother experience use plasma mobile daily driver realized definitely ready average user variouse area improve make impact working call absolute must using daily driver hope solve audio routing issue pinephone soon power management currently case plasma mobile operating system optimized definitely new horizon u lot user interface responsiveness realized lot place improve general responsiveness user interface application application usecase quite limited term wanted phone sure people different usecases phone includes lot application currently blog post focused usage software pinephone looking hardware review take look post martijn braam comparing librem pinephone hardware provides much detail hardware pinephone excited linux smartphones want help u progressing plasma mobile forward reach u plasmamobile kdeorg matrix room
88,Lobsters,mobile,Mobile Development,Mobile Privacy with DoH using Firefox and LibreDNS,https://libreops.cc/2019/12/21/libredns-mobile-firefox/,mobile privacy doh using firefox libredns,dns http mobile firefox mobile libredns http dohlibrednsgrdnsquery http wikimozillaorgtrustedrecursiveresolver,dns http mobile using doh mobile phone easy task many application setting major operating system mobile device support doh resolve domain name firefox provides easy solution order use doh phone browser article provide step help firefox libredns firefox mobile download firefox mobile device open firefox write address bar config write search bar networktrruri change value preference url libredns doh endpoint http dohlibrednsgrdnsquery write search bar networktrrmode use value want use libredns default doh provider use prexisting dns provider fallback use value want use libredns without fallback option visit http wikimozillaorgtrustedrecursiveresolver choose networktrrmode also need add following preference config search networktrrbootstrapaddress address bar change value ip address libredns
89,Lobsters,mobile,Mobile Development,PinePhone review,https://drewdevault.com//2019/12/18/PinePhone-review.html,pinephone review,tl dr postmarketos right people perhaps dozen phone right phone given current level software support sway ofono open source casa fdicons,tl dr holy shit phone always wanted never excited mobile sector however software side totally absent phone call dubious sm somewhat dubious lte requires hack everything written ground pinephone developer edition model paid pocket took excruciatingly long time arrive finally arrived came sim microsd card expected emmc halfassed version android boot looped without posting anything useful bother slightest like computer purchased planned immediately flashing o linux distribution choice postmarketos basically mobile o build wanted build mobile o let make clear right people perhaps dozen phone right phone given current level software support using daily driver time kind person would recommend phone developer belief phone want help build software necessary work however seems right people working software end phone everyone expect pmos community kde kernel hacker phone unprecedented level community support software written actually like expand summary spec device cm thick weighs gram screen cm tall cm bezel cm wide mm bezel physical size weight similar daily driver samsung galaxy refine usbc port understand reconfigured displayport standard headphone jack speaker sound fine experience screen look nice phone front backfacing camera yet get working understand someone got working point plus flashlamp back rgb led front emmc side note seventeen partition first got phone ram core powerful experience run lightweight uis sway fine little effort way power management obvious power sink left unfixed battery last hour short quite satisfied never especially strenuous demand phone run benchmark gpu seems reasonably fast opensource lima driver support modem supported ofono telephony daemon based dbus however understand open talk modem may write program using ofono successfully spun lte internet sent received sm message placed answered phone call though last one without working audio friend kde bhushan shah working rumor call successfully placed success mm think possible wifi work zero blob kernel admittedly pretty heavily patched open source making way upstream course one want place phone call typing lengthy command terminal feature done annoying way mean feasible write application convenient way part working component mobilefriendly wayland compositor based sway calling sway mobile time sure sway actually stick around becomes difficult bend designed keyboarddriven operation building mobile shell component translate nicely wlrootsbased compositor first simple app drawer dubbed casa lot stuff planned new barnotification drawerquick action thing dialer call manager maybe integrated gnomecontacts telephony daemon record incoming sm message pull call manager incoming phone call idea write incoming sm message maildir new touchfriendly wayland lock screen onscreen keyboard program video showing casa action browser support webm playback please choose browser support free open standard latest version column us space bit better also course work put together fdicons library may useful sort small thing work like making audio behave better improving power management intend contribute tool postmarketos upstream nice lightweight plugandplay ui package choose installing pmos either improving existing postmarketosuisway metapackage making something new conclusion waiting phone year year year hoping someone would make phone whose hardware compatible upstream linux driver could theoretically used daily driver software snuff wanted knew free software community totally capable building software phone hardware existed actually happening free software people would hope working pinephone working pinephone could buy four price typical smartphone might
90,Lobsters,mobile,Mobile Development,Don't Use Email to SMS Gateways. Please,https://szy.io/thonks/no-email-to-sms/,nt use email sm gateway please,,nt use email sm gateway please email sm gateway good one purpose one purpose creating notification personal use whether script external service send email want sm instead etc used production application company know better least able afford actual smssending service obvious application using email sm gateway ask phone number also select mobile carrier using fullfledged sm sending service wo nt need know carrier result email sm gateway work familiar using one gateway simple sending email number xyzcom number phone number recipient xyzcom carrierspecific gateway email address example us txtattnet verizon us vtextcom tmobile us tmomailnet select carrier application know gateway send problem way carrier anyone reasonably expected support especially one considers regional prepaid carrier exist outside usa idea email sm gateway situation might supported internationally application using gateway even le accessible issue toomanycarriers exactly problem run could nt get sm tire installation appointment prepaid carrier nt list available carrier went college one dining place campus sent sm food ready notification method used small regional carrier time obviously nt available selectyourcarrier dropdown sol usually ask friend let punch phone number get notification could let know email sm gateway great creating script application use want send sm certain event however terrible option production service unless certain user using carrier specify carrier selection spoiler alert wo nt originally published december last updated december
91,Lobsters,mobile,Mobile Development,Code AR Live,http://chirag.io/carl,code ar live,carl char stile recurse center built using,carl carl stand code augmented reality live algorave programmerperformer code environment fly using raymarching algorithm written glsl shader code also executing updating everyone phone real time using phone orientation audio input carl window immersive evolving algorithmic world dance music worked project char stile batch recurse center video feel free check built using
92,Lobsters,mobile,Mobile Development,Proving conspiracy theorists wrong about network operator data miscalculation,https://venam.nixers.net/blog/programming/2019/11/12/data-consumption-tracking.html,proving conspiracy theorist wrong network operator data miscalculation,trace download trace upload google transparency report sodetel ericson charging system oracle cps system oracle cps cisco cps allot etsi t article see article info webdevfast average webpage size original doom average web page much care webobesity privacy fast blog another blog fast website blog lighter email irc,lebanon conspiracy theory common occurrence whole world blame ailment usually dismiss one post got nerve moreover quite simple experiment could finally shatter remove option conversation conspiracy go follows visit lebanon data consumed way faster lebanese carrier deny say delusional guess enjoy screwed mb mb lebanon piss seems like data run much quicker lebanon confident calculate properly data consumption shown operator lebanon real data consuming playing number screw people crazy data consumption calculation think something handle uploads first ass plausibility scenario known touch alfa operator lebanon benefit duopoly also know full leverage data price unlikely control one would try cheat usage calculation go recent drop data price additionally risk people notice discrepancy data consumed carrier show website regard feature phone people still believe conspiracy sure gather actual number speak limit alfa subscription touch question want answer need machine full control data pollution script download upload specific amount data tool monitor much actually used network download upload machine different network check consumption alfa website peek value expecting testing monitoring tool wireshark running linux machine nothing else running job need way download upload specific value prepared three file different size remind reader byte thus file composed byte added file server download set php script upload test php size file filetoupload size echo size byte download request look like curl http trace download wireshark see tx rx total tx stand transmit rx receive overall way upload download download something wrong nope wrong account clientserver tcp handshake http header exchange certificate tl becomes negligible size request bigger longer keep open le consume transaction initialization average number expected different size curl http total curl http total regarding upload trace upload curl f filetoupload http venamnixersnetalfaconsumptionuploadphp tx rx curl f filetoupload http venamnixersnetalfaconsumptionuploadphp tx rx curl f filetoupload http venamnixersnetalfaconsumptionuploadphp tx rx overall good idea keep reconnecting small request people aware downloading something mean actually use network regardless carrier past year campaign encrypt web make secure thing like letsencrypt free tl certificate popular browser flagging unsecure website according google transparency report web run securely encrypted compared encryption come price small overhead initiating connection website got expectation straight next step inspect going appreciate consumption website login dashboard page see request akin http wwwalfacomlbenaccountgetconsumption disregard unix timestamp millisecond right actually useless response request currentbalancevalue xxxx extensiondata mobilenumbervalue onnetcommitmentaccountvalue null responsecode securitywatch null serviceinformationvalue extensiondata servicedetailsinformationvalue consumptionunitvalue mb consumptionvalue descriptionvalue mobile internet extensiondata extraconsumptionamountusdvalue extraconsumptionunitvalue mb extraconsumptionvalue packageunitvalue gb packagevalue validitydatevalue validityvalue servicenamevalue shared data bundle subtypevalue normal typevalue prepaid waffervalue extensiondata pendingaccountsvalue notice consumptionvalue shown mb precise get assume every hundredth decimal point setting aside missing last element experiment isolating sim card using machine monitoring tool gaining full control happens network opted use huawei mobile wifi model pocketsized mifi initially used sodetel setup would let use device hotspot connection monitoring machine device take sim card holder size hand unfortunately device came locked vendor sodetel reverse engineering figure configure apn setting alfa card long story short part documentation available online hinted add new alfa apn curl http h useragent linux h accept texthtml applicationxhtmlxml applicationxml h authorization basic h connection keepalive request delete delete setdefault setdefault modify modify profile index index isvalid isvalid name alfa name apnisstatic apnisstatic apnname alfa apnname dialupnum dialupnum username username password password authmode authmode ipisstatic ipisstatic ipaddress dnsisstatic dnsisstatic primarydns secondarydns readonly readonly profile request remember login web even though sending basic authorization accept request logged successful request return xml version encoding response ok response set alfa profile default disable required alfa sim card disable pin curl http h useragent linux h accept texthtml applicationxhtmlxml applicationxml h authorization basic h connection keepalive request operatetype operatetype currentpin currentpin request set gather data download data request initial sent total rx expected value txrx considered rx considered tx considered consumption value website reason executed request instead single one consumption website update reach threshold specific interval see value website lower combination download upload together exactly update threshold mean value shown always le one consumed unless consume exact threshold chunk visual explanation happening test request initial sent total rx expected value txrx considered rx considered tx considered consumption value website request initial sent total rx expected value txrx considered rx considered tx considered consumption value website upload data request initial sent total rx expected value txrx considered rx considered tx considered consumption value website request initial sent total rx expected value txrx considered rx considered tx considered consumption value website alfa actually show bit le value using opposite conspiracy happening explanation truth give mobile carrier credit need powerful omnipotent owner network knowing building scratch powerful theme recurrent conspiracy theory make seem like people powerless face contrary mobile operator constituted technical person like term implies operating instrument buy caring job business business core network one piece equipment called tdfpcef pcrf traffic detection function policy charging enforcement rule function along implementation cps system cost per sale system also known charging system operator buy hardware know much else ericson charging system oracle cps system another oracle cps cisco cps virtual one anyone like allot figure overall pcc logical architecture nonroaming spr used taken etsi t example scenario usage monitoring control useful operator want allow subscriber certain high eg unrestricted bandwidth certain maximum volume say gigabyte per month subscriber us month bandwidth limited smaller value say mbit remainder month another example operator want set usage cap traffic certain service eg allow certain maximum volume per month tv movieondemand service paragraph taken article reason conspiracy theory mysticism lack education topic agenda confirmation bias delusional reduce fact people genuinely feeling like using data quicker using truth moved recent year world always connected web web morphed medium heavy tech world news anymore call webobesity crisis website bloated content entangled mess dependency posting chrome starting endeavour move web faster lighter one see article info along webdevfast topic talked lot year average webpage size original doom average web page much care webobesity privacy fast blog another blog fast website also part making blog lighter sum webliteracy thanks reading attribution cesare pearson scott foresman public domain info core network good discussion link want depth discussion always available email irc discus argue like dislike new idea consider opinion etc nt feel like discussion intimidated email simply say something small comment section andor share friend
93,Lobsters,mobile,Mobile Development,Github for Mobile Beta,https://github.com/mobile,github mobile beta,organize task swipe keep work moving fit worklife style bring github wherever build reload reload,organize task swipe get inbox zero wrap task save notification come back later may new favorite way keep work organized lot todo need complex development environment desk commute coffee run unblock team wherever whenever need keep work moving whether need review bug fix merge code github mobile covered merge mark done go fit worklife style get fullynative github experience automatically collaborate dark mode based device watch adapt every screen size bring github wherever build perform action time signed another tab window reload refresh session signed another tab window reload refresh session
95,Lobsters,mobile,Mobile Development,You have to force quit because cache design is hard,https://abe-winter.github.io/force-quit/2019/10/20/kaching.html,force quit cache design hard,help page iap archiveorg link cache design missing skill tool help play well language technical example next cache design missing skill job title testing gce postmortem tla pluscal amazon technical example change trigger refresh bundled state summary agree list next,finished highadrenaline refund convo app provider serverside log showed device making successful request screenshots device showed stale data seat app working fascinatingly app vendor knew app sucked advised turn wifi force quit google help page iap archiveorg link also tell force stop reopen app game bet smartphone user lifetime juiced cache somehow drag top screen force quit reload worst case uninstallreinstall also experience different part app different information like sent email reply inbox still think draft something completely stroking connection go clearing data becoming unresponsive input hint io main thread even google map theory first class android freak leave backgrounded long era direction inconvenient set route last night offline subway need know stop get cache design missing skill tool help play well language technical example next cache design missing skill cache design mean engineering subdiscipline making sure update data one place update everywhere particularly hard storing data multiple layer cache including user pocket mobile device hard include automated test may running old version software budget get somebody good easy hire good mobile devs couple hour whiteboarding make sure using recent tool keto snack fridge make offer cache design hiring ecosystem people starting say programmer distributed programmer skill diffusing slowly particular part ecosystem missing job title unless ship product caching feature like cockroachdb cloudflare probably person place responsible mean caching broken know assign may even recognize recent bug fall umbrella one person responding issue may authority impose change across org backend mobile divide example need hire hard find know call testing manual testing always uncover edge case part skill testing getting clean starting point inhouse dogfooders using app hot new hardware silky smooth office wifi cruddy office wifi downstairs devs blame wifi logic error even original author caching logic may testing strategy kind logic big state space uncommon ship code recovery case run ever example gce postmortem event canary step correctly identified new configuration unsafe crucially however second software bug management software propagate canary step conclusion back push process thus push system concluded new configuration valid began progressive rollout read recovery case never endtoend tested given version software functional language vogue seeing functional feature daily driver lot frontend platform j kotlin swift functional tends come strong type type safety end water edge accurately serialization boundary type safety cured lot ill industry help caching fact creates false confidence one specie caching bug mismatched type client server version wrote data one read rule protobuf use google field optional word tolerate missing field balloon line count every function deal directly externally stored data decrease odds schema change leading failure either parsing step biz logic amazon us verification tool highreliabilty system always loved paper tla pluscal amazon say far used tla large complex realworld system every case tla added significant value either finding subtle bug sure would found mean giving u enough understanding confidence make aggressive performance optimization without sacrificing correctness write runnable system directly tla exhaustively executable pseudocode taking implementation running across multiple codebases different os modelchecking requires hefty work lot different kind developer bridging gap verification model runnable code something yet see industrial language would good improvement technical example ultrasimple example familiar anyone stuck particular well change trigger refresh let say change mean purchase case book bought may immediately appear library may require banging refresh button get show mobile device question used make purchase definitely know happened moving data right place reallife example sent message email client show sent list intermittent connectivity clear draft preview inbox list widely used email client came shitty phone new purchase visible library right away vr interface major game purchase platform bundled state home screen includes bundled preview data different part app data may correct click subsection preview wrong homepage even forcerefresh bundle new server invalidate stored blob individual ttls subfields summary agree list summary updated event bus message slow missed see transaction list transaction screen tally account balance example point summary detecting need recover missed update easy user usually sense something wrong ux solution user forced update invalidate cache layer user device schema design solution synchronously mark summary dirty asynchronously presumably expensive computation update user request summary two event recompute inband something make sure use vector clock dirty bit next caveat daily driver older android device mean get hit triple whammy come app quality many apps exist android outsourced web view lesstested implementation even android app highquality may tested o version still main point software suck people write included think true os good news distributed programming knowledge including cache design diffusing landscape see trick preventing failure built language pounded brain eventually even job description
96,Lobsters,mobile,Mobile Development,GerdaOS: a custom ROM to liberate the heart of Kai,https://gerda.tech/,gerdaos custom rom liberate heart kai,,gerdaos iconpng welcome home page world first custom rom nokia future kaios based phone aim user privacy security freedom control everything device mission liberate kai heart snow queen han christian andersen hence name see action http key feature say ad tracking default decision create gerdaos initially made finding devastating security bug kaios version shipped nokia earlier hmd firmware version gerdaos nt preinstalled apps proven track including limited kaistore fota updater gameloft game google apps also analytics disabled track header enabled default default browser search engine set duckduckgo moreover comprehensive hostbased advertisement blocking list day surfing experience wo nt distracted plague modern web install want contrast poor slowly filled app store gerdaos come file manager package installer evolved since first day jailbreaking http installer gerdapkg allows install kaioscompatible application local zip package choose file manager like apk file android alternative store thirdparty apps see full list http sitesgooglecomviewbhackersstorehome also compatible gerdaos overcome limit multitask since first public alpha gerdaos provides screenshooting app switching capability extent allowed underlying architecture using intuitive control overcome hardware limitation nokia keypad pressing power button different slide lid position performs different action fullopen slide power minimizes app halfopen slide power take screenshot closed slide power act normally master device gerdaos installation include developer menu hidden stock kaios root adb access default also gerda recovery component crucial installing system part also root adb access able repair system unfortunate situation also since beginning february gerdaos build include ability bypass ttl restriction carrier blocking wifi tethering default since apr build imei manipulation frontend added believe right complete control phone shape future community rom gerdaos open public audit everyone report bug contribute new feature express desire listening future port kaiosbased phone beyond nokia also planned also see faq page http gitlabcomprojectprissystemwikisgerdaosfaq get answer question get gerdaos download latest image recovery main system updated build version recovery image nokia http system installer http see changelog forum thread http groupsgooglecomforum contribute current development stage alpha report bug project pris system issue tracker http gitlabcomprojectprissystemissues repository contribute main system http gitlabcomprojectprissystem recovery repository http gitlabcomprojectprisrecovery install current support status dualsim model ensure stock firmware updated least proceeding process wipe stock system data voiding warranty stock update longer possible risk responsibility install recovery prepare recovery image file copying sd card first need find way root phone obtain root shell nokia firmware version inclusively exploit exists allows obtain root privilieges right kaios browser go page http rgerdatech phone browser check whether phone vulnerable get temporary next reboot root shell accessible via adb stock system adb debug mode activated entering debug secret code may need enter visiting page stock version please use wallace http wallace lite http rooting method installing one apps via webide pale moon old firefox version entering debug code see forum topic http detailed instrtuctions root shell backup existing recovery image case dd ifdevblockbootdevicebynamerecovery ofsdcardrecoverybackupimg install new one platform assuming also copied sdcard dd ofdevblockbootdevicebynamerecovery also backup partition modified root console highly recommended dd ifdevblockbootdevicebynamesystem ofsdcardsystembackupimg dd ifdevblockbootdevicebynameboot ofsdcardbootbackupimg dd ifdevblockbootdevicebynamesplash ofsdcardsplashbackupimg dd ifdevblockbootdevicebynamefsg ofsdcardfsgbackupimg dd ifdevblockbootdevicebynamerpm ofsdcardrpmbackupimg dd ifdevblockbootdevicebynamemodem ofsdcardmodembackupimg install main system recovery place first boot powering phone holding arrow button several option install rest choose one clone system repo http gitlabcomprojectprissystemtreemaster run make phone booted gerda recovery connected pc method work gerda recovery requires necessary build prerequisite bash git python make gcc openjdk ffmpeg etc download installer see link put sd card navigate install recovery alternatively use adb sideload feature method also work stock recovery installing gerda recovery adbenabled custom recovery highly recommended installation mandatory run wipe datafactory reset recovery reboot enjoy freshly installed gerdaos credit main contributor luxferre http aka suborg http gitlabcomsuborg branch initial research modification package installer security hardening page sylvainblot http gitlabcomsylvainblot ci part jiophone researchsupport branch kaius unofficial store gotziem http gitlabcomgotziem testing jiophone researchsupport branch oleole http gitlabcomoleole build process saper http gitlabcomsaper build process vbhjyzxc internal tooling rom would possible without community support special thanks bananahackers group forum http groupsgooglecomforum forumbananahackers admins ivan alex hc perry kaios reddit community http wwwredditcomrkaios admin xdadevelopers forum community stevenblack http githubcomstevenblackhosts wonderful hostbased adblocking solution everyone signed open letter http support movement elsewhere luxferre gerdatech bananahackers present
97,Lobsters,mobile,Mobile Development,WARP is here,https://blog.cloudflare.com/announcing-warp-plus/,warp,warp warp announced warp april year original launch announcement mea culpa basic warp service free without bandwidth cap limitation mcdonald big mac would cost region known argo okay thanks nice took long hyperefficient wireguard protocol app great technical post overcoming challenge bug even faster plus argo privacy first strong privacy protection launched warp service like tor app fast secure fast internet network,today longer expected wait opening warp warp plus general public heard yet warp mobile app designed everyone us global network secure phone internet trafficwe announced warp april year expected roll next month fairly steady clip get released everyone wanted use july happen turned building next generation service secure consumer mobile connection without slowing burning battery harder originally thoughtbefore today approximately two million people waitlist try warp demand blew u away also embarrassed u common refrain consumer care security privacy attention warp got proved u wrong assumption actually isthis post explanation releasing warp took long learned along way apology eagerly waiting also talk briefly rationale built warp well privacy principle committed however want deeper dive last two topic encourage read original launch announcementand want jump try download start using warp io android device free following link already installed app device may need update latest version order get option enable warpmea culpalet start apology sorry making warp available took far longer ever intended way hopefully making amends everyone waitlist today giving gb even faster version warp us cloudflare argo network patiently waitingfor people signing today basic warp service free without bandwidth cap limitation unlimited version warp available monthly subscription fee warp even faster version warp optionally pay fee warp varies region designed approximate mcdonald big mac would cost region io warp pricing publication post still adjusted regional basis settle next couple dayswarp us cloudflare virtual private backbone known argo achieve higher speed ensure connection encrypted across long haul internet charge cost u provide however order help spread word warp earn warp every friend refer sign warp everyone refer get warp free get started wellokay thanks nice took long took u long warp ambitious project set secure internet connection mobile device edge cloudflare network however nt want slow device burn excess battery wanted work also wanted bet technology future technology past specifically wanted build around legacy protocol like ipsec instead around hyperefficient wireguard protocolat level thought would easy already app securing dns request running million mobile device worked great much harder could securing rest request device right turn lot zack bloom written great technical post describing many challenge faced solution invent deal interested encourage check outsome highlight apple threw u curveball releasing io day april planned roll new version io significantly changed underlying network stack implementation way made implement warp unstable ultimately find workarounds networking code costing u valuable timewe version warp app kind worked april started invite people outside cloudflare use quickly realized mobile internet around world far wild varied anticipated internet made diverse network component always play nicely knew expect much pain introduced diversity mobile carrier mobile operating system mobile device modelsand phone testbed relatively stationary phone real world move around lot network setting change wildly nt matter much stateless simple dns query rest internet traffic make thing complex keeping wireguard fast requires longlived session phone server network maintaining hour day complex even beyond use technology called anycast route traffic network anycast meant traffic could move machine entire data center made thing complexovercoming challengesbut huge difference hard impossible long announcement team hard work deeply proud accomplished changed roll plan focus io solidify shared underpinnings app ensure would work even future network stack upgrade invited beta user order signed instead based network nt yet information help u discover many corner case possible invented new technology keep session state even wild west mobile network anycast routing collidei running warp phone since april first month rough really rough today warp blended background mobile sleep better knowing internet connection phone secure using phone fast case faster without warp word warp today set accomplish securing mobile internet connection otherwise getting waythere bugswhile warp lot better first announced know still bug common bug seeing day warp significantly slower using mobile internet without warp usually due traffic misrouted instance discovered network turkey earlier week routed london rather local turkish facility aware routing issue typically fix quicklyother common bug involved captive portal page enter information instance connecting hotel wifi fixed lot warp user connecting every hotel wifi yet inevitably still brokenwe made easy report issue discover app click little bug icon near top screen shake phone app open quickly send u report expect week ahead squashing many bug reporteven faster plus warp product testbed internetimproving technology spent year developing one dream use argo routing technology allow internet traffic use faster lesscongested route internet used cloudflare customer past several year argo improved speed website average hard work team making technology available warpthe warp technology without cost u routing traffic network often cost u release directly internet cover cost charge monthly fee le warp fee depends region intended approximate big mac would cost regionbasic warp free first priority make money warp however want grow secure every single phone help make happen wanted give incentive share warp friend earn free warp every person share warp everyone refer also get warp free well limit much warp data earn sharingprivacy firstthe free consumer security space traditionally reputable many company promised keep consumer data safe instead built business around selling using help target advertising think disgusting cloudflare business model never warp continues strong privacy protection launched including nt write useridentifiable log data disk never sell browsing data use way target advertising data need provide personal information name phone number email address order use warp warp andwe regularly work outside auditor ensure living promiseswhat warp notfrom technical perspective warp vpn designed different audience traditional vpn warp designed allow access georestricted content traveling hide ip address website visit looking kind highsecurity protection traditional vpn service like tor likely better choice youwarp instead built average consumer built ensure data secured transit network application using spy help protect people sniffing data local coffee shop also help ensure isp hoovering data browsing pattern sell advertiserswarp designed ultratechie want specify exactly server traffic routed basically one button warp interface simple purpose designed mom dad ask every holiday dinner bit safer online excited year something easy install app enable warp rest bit easierhow fast got warp stable place first question initial inclination go one many speed test site see result result weird sometimes much faster sometimes much slower overall make lot sense reason site designed measure speed isp warp different test site give particularly accurate readingsthe better test visit common site around internet see load real condition warp versus built tool generally test warp around speed nonwarp connection high performance network network condition get worse warp often improve performance experience depend particular condition networkwe plan next week expose test tool within app see device load set popular site without warp warp warp seeing particularly poor performance please report u goal provide security without slowing burning excess battery already many network device rest everyonehere secure fast internetcloudflare mission help build better internet done securing making performance million internet property since launched almost exactly year ago warp furthers cloudflare mission extending network help make every consumer mobile device bit secure team proud built warp albeit bit embarrassed took u long get hand hope forgive u delay give warp try let u know think
98,Lobsters,mobile,Mobile Development,iPadOS,https://www.apple.com/ipados/,ipados,apple arcade voice control new voice siri siri shortcut smarter way share useful way look map custom memoji message allnew reminder app text formatting tool mail new improved note audio sharing airpods personalized experience homepod see full list new ipados,apple arcade play groundbreaking new game storytelling design pushed ever game subscription service unlike learn voice control control ipad voice rich text editing feature let make correction dictate navigate comprehensively using voice command gesture even see number name next everything tap superimpose grid onscreen tap control new voice siri new siri voice us advanced neural technology sound natural speaking longer phrase like reading news answering knowledge question siri shortcut shortcut app single place siri shortcut new conversational shortcut let siri ask question clarify request like finding location want go say order usual coffee smarter way share share photo document ipad suggests might want share app may want use quickly share tap useful way look map look around show going seamless highresolution experience allnew map feature realistic detail road beach collection let track share mustsee spot custom memoji message make memoji one trillion new hairstyle headwear makeup piercings memoji automatically become sticker pack use message mail thirdparty apps allnew reminder app even easier create organize reminder smart list make easy display track upcoming reminder quick toolbar let add date time location flag photo scanned document siri suggests reminder might want add text formatting tool mail write professionallooking email go formatting option include font style size color alignment indenting outdenting text numbered bulleted list new improved note new gallery view powerful search help find whatever note need right need new checklist option help get done shared folder make easier collaborate others folder note audio sharing airpods pair two set airpods one ipad easily listen song watch movie along friend personalized experience homepod siri learn recognize voice family member using homepod everyone personalized experience see full list new ipados learn
100,Lobsters,mobile,Mobile Development,The joy and challenge of developing for KaiOS,https://nolanlawson.com/2019/09/22/the-joy-and-challenge-of-developing-for-kaios/,joy challenge developing kaios,pinafore kaios htc dream tripleboot android firefox o ubuntu touch growing surprisingly fast secondmost popular mobile o android step one buying development phone nokia next step development environment official developer guide paul kinlan quick start guide webide mozilla download site setting usb access next step actually writing code update permission manifest fabrice polyfill sapper optimizing kaios fairly simple logic kaios web developer hurdle supported firefox sveltejs conclusion,recently spent time getting pinafore run kaios device overall found challenging enjoyable post talk trick helped work curious little feature phone kaios well guess always bit gadget geek developing android since early day htc dream managed get nexus tripleboot android firefox o ubuntu touch also played around amazon fire phone window phone ipod get idea recently though found mobile landscape bit boring android io two big player way nearly decade firefox o blackberry o window phone wouldbe contender long since bitten dust excited kaios platform growing surprisingly fast actually based firefox o may rest peace especially popular india already secondmost popular mobile o android kaios run regular website also run packaged apps ala firefox o aspiring kaios developer get started step one buying development phone like test real device want experience app realworld hardware performance constraint actual user would decided get nokia available amazon note phone support u plan using actual personal phone may luck first unbox phone minute worth setup screen ready go also recommend going setting upgrading o since mine needed upgrade right away next step development environment best resource found kaios development official developer guide paul kinlan quick start guide paul guide best place start since short get running quickly paul say could get webide work firefox found firefox also worked per kaios developer guide let use first want download firefox o case ubuntu via mozilla download site sadly could get firefox run alongside latest firefox goto browser also found firefox tried aggressively update every time reopened would running latest version work around run script rm fr firefox profile mkdir profile tar xjf firefoxfirefoxbin profile profile delete firefox stored data restart fresh profile every time handy quickly restarting firefox input secret code paul mention see little bug icon corner point able run adb device see device list device list device attached device adb running run adb killserver adb startserver restart work box got error saying connect device due faulty udev rule luckily kaios developer guide setting usb access script fix running script used paul trick setting adb forwarding adb forward localfilesystem datalocaldebuggersocket able connect firefox webide clicking remote runtime one thing noticed occasionally device would get disconnected webide case forward another port adb forward localfilesystem datalocaldebuggersocket reconnect webide new port work next step actually writing code far tell kaios based firefox tell user agent string mobile mean necessarily latestandgreatest javascript web api feature brief list found work async function serviceworker intl update turn serviceworker supported enable permission manifest thanks fabrice quick gutcheck whether app run kaios try downloading firefox loading website seeing work found easier trying debug kaios right gate use script run firefox fresh profile code sufficiently backwardscompatible found babelpresetenv default setting plus intl polyfill good enough starting point two option testing app packaged app hosted app done firefox o development find option familiar tried technique found hosted app easier quick testing development machine phone wifi network create manifestwebapp file per kaios documentation load url like http sure ip address use run ifconfig grep inet see app listed run device clicking play button also try packagedapp route found play well routing library framework choice sapper due extra indexhtml plus ever actually submit app kaistore probably go hosted route since le maintenance work optimizing kaios term web development good thing aware developing kaios particular nokia first available screen size pixel check using windowinnerwidth javascript medium maxwidth cs etc set fullscreen true hide status bar get slightly breathing room already optimized app iphone screen size found extra work make thing show correctly even tinier screen iphone already pretty small giant compared nokia next input method quite limited actually taken time make webapp keyboardaccessible way still extra optimization may make kaios default arrow typically scroll page decided use arrow change focus ie act proxy tab shift tab key wrote fairly simple logic navigate focusable element page taking special care allow arrow key work properly inside text input modal dialog also found focus outline bit hard see small screen scaled kaios added extra styling make focus obvious apps may opt display onscreen cursor seems default behavior web browser found bit clumsy experience think managing focus better kaios web developer hurdle next difficult thing kaios still lack modern browser standard instance get svg use tag work properly fell back inlining svg workaround cs grid mercifully supported backport grid logic since grid supported firefox hint kaios must tweaked firefox o code beyond firefox support done full rundown supported feature still find helpful use firefox minimum bar quick test target web development area probably roll sleeve test supported overall find kaios much easier develop say much along standard track truly legacy browser gotten past hurdle though result surprisingly good impressed well tiny feature phone could run pinafore much credit sure due excellent sveltejs framework conclusion building kaios fun device quirky lightweight make excited mobile development way felt term development feel like nice compromise feature phone limited hardware small screen touch limited key input smartphone o cuttingedge web technology cs grid stringprototypepadstart bad however huge fan app store like agree tos going review process ultimately subjecting whim private corporation kaios neat cute growing developing market think worthy venue development unlike fully proprietary development platform writing throwaway code kaios ever go away since ultimately webapp improvement made pinafore keyboard accessibility small screen accrue device browse web manifestwebapp file nothing truly specific kaios support overall find fun refreshing build something like kaios help see web platform new perspective nothing else got new gadget play
102,Lobsters,mobile,Mobile Development,Huawei Mate 30 phones launch without Google apps,https://www.bbc.co.uk/news/technology-49754376,huawei mate phone launch without google apps,u blacklist cinema camera,image copyright huawei huawei launched latest smartphones without many apps typically preinstalled android handsetsthe mate mate pro lack youtube google map gmail among softwarethey also feature google play store normal way user outside china install thirdparty software android phonesto address huawei preloaded new alternative apps owna spokesman chinese firm told bbc facebook instagram whatsapp would available via huawei store called huawei app galleryhe added would also way sideload google apps onto handset phone store staff would advise customer although might run smoothly normal image copyright getty image image caption user face learn way round huawei alternative google service issue addressed minute company launch event munich germany briefly today know u ban phone preinstall gm google mobile service core explained firm consumer device chief richard yu forced u use hm huawei mobile service core added firm set aside encourage developer make apps compatible said apps already integrated firm technology name hardware impressive differentiating caters huawei strength commented bryan market research firm idc enough offset lack google service aside diehard customer patience sideload tolerate possible issue maybe trying ride hope eventually get access google service later one invitee launch tweeted video showing two google service refusing work mate u blacklisthuawei world second bestselling smartphone brand past year behind samsungmr yu said company experienced growth demand smartphones januarytoaugust period compared eight month specify figure referred sale shipmentshowever analyst suggest sale started suffer europe u added huawei blacklist prevents many company providing chinese company latest tech image copyright huawei image caption mr yu said demand compay product continues rise spent billion dollar last year building brand worldwide basis key market like western europe able google full support flagship phone massive blow commented ben wood cc insight consultancy although may way work around restriction going difficult get people embrace phone concerned missing apps rely every day issue affect sale china company strong lead rival customer use play store many google service blockedcinema camerahuawei hoping device feature encourage consumer overlook inconvenience face working around u trade banthe phone billed world first second generation handset promising greater power efficiency thus longer battery life model market well potential faster internet speedsmr yu claimed download data faster samsung note time faster fastest phoneshowever dependent network providing strong enough signal although uk provider offer service end likely year coverage approach addition larger pro model feature four camera rear include megapixel mp supersensing camera largerthannormal sensor handset let light captured thus benefit lowlight photography camera optical zoom mean user close subject without compromising resolution cine camera dedicated video use widerratio sensor others match widescreen format video normally watched firm also claim sensor provides best lowlight video sensitivity slowest slowmotion effect handset delivering frame per second depthsensing camera provides data used apply realistic blureffect still photo video background helping subject stand smaller standard model feature supersensing camera well wideangle version telephoto component portrait image copyright getty image image caption mr yu claimed new phone offer superior lowlight photography video rival huawei long sought market smartphones superior imaging technology rival case analyst suggest difficult pitch question huawei packed lot feature mate mate pro onstage performance always look impressive commented carolina milanesi analyst creative strategy many buyer outside china overlook lack google service company also unveiled huawei vision smart tv popup camera used make video call get feedback fitness exercise app well new smartwatch wireless ear bud
103,Lobsters,mobile,Mobile Development,Understanding Flutter Bloc Pattern,https://blog.soshace.com/en/programming-en/understanding-flutter-bloc-pattern/,understanding flutter bloc pattern,understanding flutter bloc pattern adaware oghenero prerequisite knowledge introduction bloc setstate approach problem approach bloc approach introduction reactive programming missing stream create stream fit stream flutter reactive ui model bloc implementation benefit using bloc pattern guideline writing bloc alternative bloc conclusion link demo application useful resource author,understanding flutter bloc pattern adaware oghenero following unfollow follow september following unfollow follow understanding flutter bloc patternflutter interesting libraryframework building crossplatform mobile application flutter also used develop desktop web application since release grown popularity adopted company like alibaba building crossplatform mobile application assuming reading article interested flutter want learn stop rave review let try get hand head dirtyprerequisite knowledgefor get tutorial understanding following flutterdartbasic knowledge reactive programming streamsobservables introductionwhat covered tutorial bloc little bit reactive programming stream streamcontrollers subjectsobservables use bloc patternaccessing bloc widgetsbenefits using blocguidelinesrules implementing blocalternatives blocwhat bloc bloc acronym business logic component introduced google google io provides elegant reusable way managing state flutter application take advantage flutter ui reactive model reactive model meaning flutter user interface component made widget build complex user interface composing widget flutter reactive help u manage state widget state widget change automatic redrawsrerender widget use trigger state change redraw flutter provides setstate function ever written react similar thissetstatea problem arises building complex application might multiple setstate call logic tightly coupled user interface widget might deal unnecessary redraw widget lead performance issue bloc come play bloc help u separate logic user interface maintaining flutter reactive model redrawingrerendering state case new streamto understand bloc need little bit knowledge reactive programmingaccording wikipedia reactive programming declarative programming paradigm concerned data stream propagation change simple term programming asynchronous data stream reactive programming flutter help propagate change user interface without describe propagation happensin flutter lot source data stream user input network request almost everything source data stream flutter make sense take advantage stream reactivity flutter build maintainable testable applicationswe cover reactive programming stream later articlein article using simple demo application accepts user input textfield widget query unsplash api image display briefly walk implementation using setstate model managing statedemo appsetstate approachfolder structure maindart contains main method initializes appdartimport package fluttermaterialdart import screensimagelistscreendart class app extends statelesswidget widget build context return materialapp title view image theme new themedata primaryswatch colorsdeeporange home scaffold appbar appbar title text view image body imagelist src folder appdart stateless widget render scaffold containing appbar widget imagelist widget focusing import package fluttermaterialdart import dart convert import package httphttpdart show get import apikeydart class imagelist extends statefulwidget createstate return new imageliststate class imageliststate extends state imagelist list image bool isloading false override widget build buildcontext context return container margin edgeinsetsall child column child widget searchfield displayimage image future list makerequest query async final response await get http apiunsplashcomsearchphotos query query clientid accesskey final img jsondecode responsebody setstate image img result return image widget searchfield return textfield onchanged query makerequest query decoration inputdecoration border outlineinputborder prefixicon icon iconssearch hinttext search anything cat doggos maybe widget displayimage list image return imagesisempty center child new circularprogressindicator expanded child listviewbuilder itemcount image null imageslength itembuilder context int index return buildimage image index widget buildimage dynamic image return container margin edgeinsetsall padding edgeinsetsall decoration boxdecoration border borderall color colorsgrey child column child widget padding child imagenetwork image url small fit boxfitfitwidth height padding edgeinsetsonly bottom text image description null description image description imagelist widget stateful widget state called image store image gotten http request trigger redraw new imagein build method imagelist widget two function searchfield displayimage return widget searchfield function return textfield widget onchange function call another function makerequest current value argument make http request unsplash apiwe displayimage function return widget display list image short description listview widgetthis trivial example make api call change textfield widget generates list image work simple application like look good application start getting complexwhat problem approach separation concernsdifficult testing user interface tightly coupled logicwe reuse logic application elsewhere tightly coupled user interface implementationlet see bloc approach help u solve problemsbloc approachwe seen setstate approach managing state flutter application mentioned issue approach let see bloc help u solve thatin context say reactive programming use function manipulateconsume data stream asynchronously read reactive programming introduction reactive programming missingwhat stream stream source asynchronous data event provides way receive sequence event event click event user input variable hover event network request could anythingwe understand something anything source stream like variable click user input create control behavior stream let take look analogy stream like channel anything variable mouse click event network request flow add item one end flow endstreamshow create stream create control stream dart using streamcontroller streamcontroller class provided dart dartasync package streamcontroller used create stream provides sink property add data event variable network request stream also stream property either transform data listen data error done event added streamthis example show create stream dart async void main final subject new streamcontroller subjectstreamlisten x print x subjectsinkadd g subjectsinkadd subjectsinkadd subjectsinkadd subjectsinkadd subjectsinkadd subjectsinkadd outputgoodday note stream created streamcontroller singlesubscription stream default mean allows one listener listen stream listened try listen add multiple listener throw exceptionbut possible create broadcast stream listen multiple listener streamcontrollers call streamcontrollerbroadcast constructor creating one thing note broadcast streamcontroller streamcontroller sends listener event added stream time final subject new streamcontrollerbroadcast subjectsinkadd first subjectstreamlisten x print first listener x subjectsinkadd second subjectstreamlisten item print second listener itemtouppercase second listener see event added start listener subjectsinkadd third subjectsinkadd fourth output first listener second second listener third first listener third second listener fourth first listener fourth need streamcontroller memory event added stream subscription suggest use streamcontrollers provided rxdart packagerxdart dart implementation reactivex reactive extension library build top native dart stream rxdart stream called observable streamcontrollers called subject observable extends native stream class method defined stream class available observables wellrxdart provides three type streamcontollers publishsubject similar broadcast streamcontroller one difference stream property return observable instead stream rxdart streamcontroller return observable instead subject new publishsubject subjectsinkadd first subjectstreamlisten x print first listener x first listener see event added start listener subjectsinkadd second subjectstreamlisten item print second listener itemtouppercase second listener see event added start listener subjectsinkadd third subjectsinkadd fourth output first listener second second listener third first listener third second listener fourth first listener fourth behaviorsubject special streamcontroller capture latest item added controller emits first item new listener also seed behaviorsubject initial value emitted value added final subject new behaviorsubject subjectsinkadd first subjectstreamlisten x print first listener x subjectsinkadd second subjectstreamlisten item print second listener itemtouppercase second listener see latest event added stream one added start listener subjectsinkadd third subjectsinkadd fourth output first listener first first listener second second listener second second listener third first listener third second listener fourth first listener fourth replaysubject special streamcontroller capture item added controller emits first item new listener possible limit number stored item replaysubject passing maxsize property final subject new replaysubject subjectsinkadd first subjectstreamlisten x print first listener x subjectsinkadd second subjectstreamlisten item print second listener itemtouppercase second listener see every event added stream subjectsinkadd third subjectsinkadd fourth output first listener first first listener second second listener first first listener third second listener second first listener fourth second listener third second listener fourth tableshow fit stream flutter reactive ui modelflutter provides u stateful widget called streambuilder us statesetstate internally streambuilder widget take stream property listens change anytime stream emits new data streambuilder call builder callback redrawsrerenders widget see streambuilder used bloc implementation demo applicationi think know enough jump right bloc implementation demobloc implementationfolder nothing really changed appdart maindart remain change made imagelist import package fluttermaterialdart import package import package class imagelist extends statelesswidget final imagebloc imagebloc imageapi override widget build buildcontext context return container margin edgeinsetsall child column child widget searchfield imagebloc displayimage imagebloc widget searchfield imagebloc bloc return textfield onchanged blocqueryadd decoration inputdecoration border outlineinputborder prefixicon icon iconssearch hinttext search anything cat doggos maybe widget displayimage imagebloc bloc return expanded child streambuilder stream blocimages builder context snapshot snapshothasdata return center child circularprogressindicator else return listviewbuilder itemcount snapshotdatalength itembuilder context index return buildimage snapshotdata index widget buildimage dynamic snapshot return container margin edgeinsetsall padding edgeinsetsall decoration boxdecoration border borderall color colorsgrey child column child widget padding child imagenetwork snapshoturlssmall fit boxfitfitwidth height padding edgeinsetsonly bottom text snapshotdescription null description snapshotdescription looking bloc implementation imagelist see stateless widget business logic like method make http request setstate component business logic moved bloc create instance bloc class imagebloc pas textfield widget call add method onchanged handler also pas instance stream property streambuilder widget create list image seems like magic happening imagebloc component let take look bloc implemented come back see everything work dart async import modelsimagemodeldart import apiimageapidart import package rxdartrxdartdart class imagebloc final imageapi api stream list image image streamempty behaviorsubject string query behaviorsubject string stream list image get image image sink string get query query imagebloc thisapi image querydistinct asyncmap apimakerequest asbroadcaststream void dispose queryclose imagebloc class create class property image stream type list image used store image fetched unsplash api since need something store image used streamempty initialize image property creates empty broadcast streamthe query property behaviorsubject special streamcontroller type string covered behaviorsubject earlier tutorial query property sink input stream contains string typed textfield widget add item sink call add methodwe create getters image query property make available use image getter get image stream query getter access query sinkthen imagebloc constructor accepts instance imageapi import package httphttpdart show get import dart convert import modelsimagemodeldart import apikeydart class imageapi future list image makerequest string query async list image image final response await get http apiunsplashcomsearchphotos query query clientid accesskey final parsedresponse jsondecode responsebody final list result parsedresponse result resultsforeach result imagesadd imagesfromjson result return image imageapi class basically contains logic make http request unsplash api single method called makerequest return future back imagebloc constructor see strength functionalreactive programming help u write concise clean codeimages queryasyncmap apimakerequest line code simply take query added query sink fetch image related query assign image property break line step queryasyncmap asyncmap type operator provided dart similar dart map method take stream function applies function every element stream asyncmap different asynchronouslynow understand going blocblocback imagelist component understand everything fit create instance imagebloc called imagebloc passed function need whenever change textfield widget call bloc queryadd method onchanged callback add query string sink streamcontroller stream image coming bloc stream convert stream widget talked streambuilder widget earlier take stream bloc builder method call builder method whenever new event stream trigger redrawrerender widget builder displayimage imagebloc bloc return expanded child streambuilder stream blocimages builder context snapshot snapshothasdata return center child circularprogressindicator else return listviewbuilder itemcount snapshotdatalength itembuilder context index return buildimage snapshotdata index widget buildimage dynamic snapshot return container margin edgeinsetsall padding edgeinsetsall decoration boxdecoration border borderall color colorsgrey child column child widget padding child imagenetwork snapshoturlssmall fit boxfitfitwidth height padding edgeinsetsonly bottom text snapshotdescription null description snapshotdescription streambuilder take bloc image property stream builder method take context snapshot snapshot empty return circularprogressindicator else return listviewbuilder widget generates image descriptionthe bloc implementation involves u writing lot code business logic moved bloc easily modify business logic without touching ui also mean easier share logic widget across platform consuming bloc couple way consumingaccessing bloc single global instance involves creating instance bloc sharing instance componentwidget need access bloc example class imagebloc single instance bloc given widget import filefinal imagebloc imagebloc local instance current implementation import bloc componentwidget need access bloc component create instance bloc instance available component provider pattern inheritedwidget like approach accessing bloc opinion think suitable building large application approach us inheritedwidget wrap parent widget every child widget parent access instance bloc worked react similar react context implementation completely differentthe diagram explains itproviderto implement provider pattern create provider class like belowimport package flutterwidgetsdart import blocimageblocdart import apiimageapidart class imagesprovider extends inheritedwidget final imagebloc imagebloc override bool updateshouldnotify inheritedwidget oldwidget return true imageprovider class extends inheritwidget class inheritwidget magic help child component reach widget tree get access data without pas data multiple constructorsin imageprovider create instance imagebloc want child widget access implement inheritedwidget abstract method updateshouldnotify return boolean return truethen create static method called take buildcontext argument return imagebloc instance method take context passed child widget look widget tree widget match type imageprovider cast type imageprovider return imagebloc property containing instance blocthen imageprovider constructor take imagebloc instance child key package fluttermaterialdart import screensimagelistscreendart import providerimageproviderdart import blocimageblocdart import apiimageapidart class app extends statelesswidget widget build buildcontext context wrap application image provider return imagesprovider imagebloc imagebloc imageapi child materialapp title view image theme new themedata primaryswatch colorsdeeporange home scaffold appbar appbar title text view image body imagelist wrap app widget provider like shown code snippet pas instance imagebloc child widget imageprovider constructor widget app widget access imagebloc instance using provider access bloc child widget call imageprovider static method pas context argument like code import package fluttermaterialdart import package imageviewerblocsrcblocimageblocdart import package imageviewerblocsrcproviderimageproviderdart class imagelist extends statelesswidget override widget build buildcontext context final imagebloc imagesproviderof context return container margin edgeinsetsall child column child widget searchfield imagebloc displayimage imagebloc widget access bloc imageprovidernote several option accessing bloc might better three covered article choose cover articlewhat benefit using bloc pattern separation concern user interface business logic longer tightly coupled make easier make change user interface without modifying business logic keep ui simple dumbtesting easier business logic worry fit user interfacereactive programming since bloc make use stream help u take advantage operator like distinct asyncmap switchmap etc help writing clean concise codeguidelines writing blocin paolo soares talk dartconf january listed guideline need follow writing blocvideoinput output bloc simple stream sinksdependencies must injectable platform agnosticno platform branching allowedimplementation whatever want long follow rulesalternatives blocwhat option manage state flutter applicationsreduxmobxscoped modelflutter hooksfirebaserxvms dependency injectionservice locator conclusionflutter lot approach managing state application application developer pick right tool see bloc overkill demo application used tutorial complex application approach might best encourages separation concern cleaner codelink demo applicationsuseful resourcesabout author registered last seen day ago
104,Lobsters,mobile,Mobile Development,"5G Will Definitely Make the Web Slower, Maybe",https://adactio.com/links/15808,definitely make web slower maybe,jevons paradox javascript,september jevons paradox action faster network fix performance problem far interesting unintentional impact web historically faster network speed enabled developer deliver code particular javascript code javascript talking even folk new fast network likely choking code sending rendering potential speed improvement moot longer spend field convinced web performance technical problem people problem
105,Lobsters,mobile,Mobile Development,Fine-grained timing and energy profiling in Servo (2015),https://blog.servo.org/2015/09/11/timing-energy/,finegrained timing energy profiling servo,connor imes power energy electrical energy joule watt reason care goal challenge capturing energy data modelspecific register parallelism test page approach simplified version heartbeat api profile crate energymon cpu running average power limit sysfs interface wikipedia result perfrainbowhard wikipedia conclusion future work short term energy module long term poet acknowledgment,name connor imes summer working research assistant mozilla servo team post introduce finegrained timing energy profiling servo power energy let first clarify difference power energy go great detail energy actually find easiest think electrical energy context consumable resource joule si unit energy power rate energy used measured watt joule per second consider task perform computer requires fixed amount work completing work fast requires power completing slowly perfect world could trade fixed amount work fixed amount energy power would scale ratio speed increase reason go electrical circuit actually work like running faster requires increasingly power cost energy care probably notice application behave well certainly take note run slowly ruin battery life right many software system like servo subject timing energy constraint need provide good performance minimize energy consumption timing energy management especially important lowperformancelowpower system like cell phone tablet developer always paid much attention problem configure software run fast possible recently approach worked well achieving good performance low energy consumption unfortunately longer case lot modern hardware also likely work well future particularly parallel architecture servo designed take advantage may seem counterintuitive want run slower thing happen fast user would never notice difference present u opportunity trade performance energy saving goal pie sky dream deploy servo system achieve desired performance minimal energy consumption implement anything like must first understand servo behavior brings u goal work identify configurable setting component servo manipulated affect application behavior instrument servo capture finegrained timing energy data execute servo various configuration different workload observequantify behavior change challenge capturing energy data modern powerenergy sensor relatively low refresh rate usually update per second often worse interval insufficient capturing data task complete millisecond submillisecond time frame best without bulky expensive equipment much performance overhead use estimate based hardware counter powerenergy sensor also consistent across hardware software platform different hardware different powerenergy monitoring component even particular hardware setup interface accessing sensor standard across operating system requiring platformspecific code furthermore sensor instrument either specific component system system whole example intel modelspecific register msr provides energy estimate core uncore component gpu dram component like disk screen network interface included even though also draw power hand using external sensor provides data complete system tell u specifically energy used parallelism servo designed perform work parallel meaning system resource shared concurrent task since manage finegrained resource scheduling powerenergy data easily attributed individual task unless task running time parallel task separately capture energy shared resource whole test page servo capability still development need sufficiently complex page useful analysis experiment selected couple page set servo completely load approach record timing energy data introduce simplified version heartbeat api new version integrates better rust shift burden capturing timing energy result developer required recording data parallel task crossplatform compatibility heartbeat store timing energy history compute performance power metric instruction enabling heartbeat energy monitoring profile crate energymon project support reading energy data various source using common c interface add rust binding abstraction interface however currently enable capability energyprofiling feature servo since energy monitoring platformspecific universally available run experiment lenovo thinkpad carbon gen dual core cpu running ubuntu linux kernel read energy estimate intel msr using running average power limit rapl sysfs interface msr refresh interval millisecond servo provides various configuration option including limited cpu gpu painting tile size number paint thread number layout thread varying number layout thread seems biggest impact performance focus configuration option experiment start synthetic webpage called perfrainbowhardhtml included servo testshtml directory test real wikipedia page offline page vary number layout thread average result trial setting default result present data two type plot first plot type column chart naively sum time energy recorded profiler category averaged trial error bar included recall task run parallel even sometimes within single category energy may counted total time longer wall clock completion time plot give u indication time energy spent servo x axis list different category left axis total time millisecond right axis total energy joule second plot type time series profiler category activity single trial broken horizontal bar indicate profiler category active power curve plotted visualize order event time really spent different workload also correlate task energy consumption seeing concurrently running task draw power x axis elapsed time millisecond since profiler initialized left axis list profiler category right axis power watt red power curve important profiler category encounter applicationheartbeat recurring task capture energy result entire execution layoutperform wrap layout task double counting clearly indicate significance layout operation scriptnetworkevent read block data kb size source disk case also see instrumented task never run take little time record energy data case shortlived task bottleneck critical wrt time energy perfrainbowhard scriptnetworkevent make strong appearance perfrainbowhardhtml distinct event file unusually large mb black bar time series denote beginning end event indistinguishable power usually lower period since io cpuintensive disk instrumented energy monitor layoutperform also us significant amount time energy notice power increase period layoutstylerecalc us majority layout time followed layoutmain layoutdisplistbuild task mixed execution completes scriptconstellationmsg callback constellation component likely notification graphic rendering complete would hypothesize type cleanup work performed investigation required know sure total runtime execution second consuming joule energy average power watt wikipedia looking column chart wikipedia page see lower fraction total time spent scriptnetworkevent higher fraction spent layout task still page fairly large kb plus another mb additional image cs file time series show u total runtime much le perfrainbow also mean fewer energy sample applicationheartbeat draw power curve speaking power spike watt like perfrainbow page result repetitive layout task possibly caused additional script event total runtime execution second consuming joule energy average power watt conclusion found using layout thread provided consistent behavior test system seems reasonable given virtual core single trial configuration sometimes beat using layout thread total runtime energy consumption consistently even configuration sometimes better importance predictability ignored also acknowledge overhead profiling memory overhead small relative entire application disturbance task timing timing energy reading require system call access hardware resource introduce operating system overhead interference processor cache combined issuing heartbeat overhead becomes pronounced extremely shortlived task heartbeat designed inpart used runtime feedback mechanism would use shortlived task needed heartbeat could issued every n task event specifying n amount work particular heartbeat case nontrivial amount variability timing behavior trial attribute profiling overhead short runtimes interference job running system also contribute unpredictability real software deal challenge post preliminary investigation timing energy behavior servo complete analysis instrumentation testing needed draw scientifically sound conclusion invite examine result try profiling future work short term want help still plenty work much servo volunteer community help starter profiling still incomplete component task added profiler better understand servo behavior whole also need energy monitor implementation especially sensor common use today particularly important arm device running linux android given arm chip shown expose interesting timingenergy tradeoff space current energy monitor implementation written c contributor write new energymonitor trait implementation rust choose servo energy module also refactored modularity substituting energy monitor long term web page present widely varying workload depending content provide predictable behavior servo need make assumption derive characteristic page early processing make informed decision eventually able configure runtime complete timing energy data construct performancepower model different hardware workload prerequisite implementing feedback control mechanism servo meeting performance power goal enter utility like poet designed accept performance goal minimize energy consumption manipulating system resource application setting runtime poet us behavior model along feedback control loop provide soft realtime guarantee achieving nearminimal energy consumption acknowledgment work would possible without talented passionate people mozilla research especially core servo team volunteer contributor thank keep rockin free web
106,Lobsters,mobile,Mobile Development,iOS Heap Exploit Development,https://azeria-labs.com/heap-exploit-development-part-1/,io heap exploit development,,september last week google published series blog post detailing five io exploit chain used wild found google threat analysis group tag team back february reverseengineering exploit work google project zero team complicated detailed professional exploit developer platform security engineer lot information post specific exploit worked along google approached analyzing technical detail hex dump codesnippets lie great story strategy thought process exploit developer highlighting story showing exploit developer strategy behind might helpful people getting started exploit development well need defend memory corruption vulnerability adjoining field like platform security reason want writeup one io exploit google found slightly different focus walk various stage exploit also look major vulnerability category exploitation strategy general hopefully pull back curtain little magic modern memorycorruption exploit see huge amount engineering enables exploit developer turn software defect reliable exploit first part series give overview different stage exploit chain next part cover various stage exploit build tool called exploit primitive use take full control operating system
107,Lobsters,mobile,Mobile Development,Welcoming Android 10,https://android-developers.googleblog.com/2019/09/welcoming-android-10.html,welcoming android,android open source project aosp android keyword blog innovation new experience foldables developer guide network existing apis live caption optional smart reply notification optout dark theme developer guide gesture navigation get started optimizing app privacy user android developer site giving user control location data developer guide blog post protecting location data network scan requiring fine location permission instead preventing device tracking best practice securing user data external storage blocking unwanted interruption security gartner may mobile os device security comparison platform quantifying measurable security even feature storage encryption adiantum tl default tl enhanced security platform hardening hardening several securitycritical area biometricprompt android security update camera medium dynamic depth photo open format audio playback capture new audio playback capture api blog post new audio video codecs using le bandwidth opus native midi api native midi api source code vulkan everywhere vulkan connectivity improved peertopeer internet connectivity network connection apis network suggestion apis wifi performance mode high performance low latency mode android foundation art optimization art profile neural network api tensorflow faster update fresher code project treble project mainline get apps ready android update current apps compatibility soon possible install app android emulator behavior change privacy change gesture navigation change dynamic linker path bionic library test android privacy feature new location permission scoped storage background activity start change data identifier checklist privacy change doc test us restricted nonsdk interface test library sdks app update publish compatible app crucial faster platform update throughout ecosystem enhance app android feature apis new feature apis dark theme dark theme force dark gesture navigation gesture navigation optimize foldables optimizing foldables interactive notification smart reply notification better biometrics biometricprompt audio playback capture audio playback capture better codecs opus native midi api better networking apis network connection apis android developer site android studio follow instruction coming device near available available android open source project next file new issue,posted stephanie cuthbertson senior director product management android year development month testing early adopter ready introduce android world android built around three important theme first android shaping leading edge mobile innovation advanced machinelearning support emerging device like foldables enabled phone next android central focus privacy security almost feature give user greater protection transparency control finally android expands user digital wellbeing control individual family find better balance technology today releasing android source code android open source project aosp making available broader ecosystem also starting official android rollout three generation pixel device worldwide many partner device including beta program receive update end year thank support year beta tested early release different beta device reporting unique issue top many article discussion survey inperson meeting voiced thought work make apps compatible today release support engagement make android amazing platform together oem partner created excitement android release ever fact android available device previous release android fortunate passionate community get started developing android visit android look android use today make sure check keyword blog innovation new experience android take advantage latest hardware software innovation build amazing app experience user foldables building robust multiwindow support android extends multitasking across app window provides screen continuity maintain app state device fold unfolds detail optimize apps foldables see developer guide video network promise deliver consistently faster speed lower latency android add platform support extends existing apis help take advantage enhancement use connectivity apis detect device high bandwidth connection check whether connection metered apps game tailor rich immersive experience user live caption automatically caption medium playing user device video podcasts audio message across app ml speech model run right phone audio stream ever leaf device developer live caption optional expands audience apps game making content accessible single tap live caption coming pixel device fall working closely partner launch broadly device running android video smart reply notification android us ondevice ml suggest contextual action notification smart reply message opening map address notification built feature user privacy mind keeping ml processing completely device apps take advantage feature right away optout rather generate suggestion smart reply suggest action based notification content dark theme android add systemwide dark theme ideal low light help save battery build custom dark theme app let system create one dynamically current theme see developer guide detail dark theme google keep gesture navigation android introduces fully gesture navigation mode eliminates navigation bar area allows apps use full screen deliver richer immersive experience get started optimizing app today gesture navigation give apps full screen content privacy user privacy central focus android stronger protection platform new feature designed privacy mind building previous release android includes extensive change protect privacy give user control improved system ui stricter permission restriction data apps use see android developer site detail support apps giving user control location data user control location data new permission option allow app access location app actually use running foreground apps provides sufficient level access user big improvement transparency control learn location change see developer guide blog post protecting location data network scan apis scanning network already required coarse location permission android increase protection around apis requiring fine location permission instead preventing device tracking apps longer access nonresettable device identifier could used tracking including device imei serial number similar identifier device mac address also randomized connected wifi network default read best practice help choose right identifier use case see detail securing user data external storage android introduces number change give user control file external storage app data within apps store file private sandbox must use mediastore access shared medium file use system file picker access shared file new downloads collection learn blocking unwanted interruption android prevents app launch background unexpectedly jump foreground take focus another app learn security android always working ass ongoing security investment refer measurable security one way measure ongoing investment third party analyst research gartner may mobile os device security comparison platform report subscription required scored android highest possible rating category ahead multiple point authentication network security malware protection read longterm work security quantifying measurable security finish line come security android introduced even feature keep user secure advance encryption platform hardening authentication storage encryption compatible device launching android required encrypt user data make efficient android includes adiantum new encryption mode tl default android also enables tl default major revision tl standard performance benefit enhanced security platform hardening android also includes hardening several securitycritical area platform update biometricprompt framework robust support face fingerprint implicit explicit authentication read android security update camera medium dynamic depth photo apps request dynamic depth image consists jpeg xmp metadata related depth related element depth confidence map embedded file let offer specialized blur bokeh option app dynamic depth open format ecosystem working partner bring device running android later dynamic depth image offer specialized blur bokeh option app audio playback capture app play audio let apps capture audio stream using new audio playback capture api addition enabling captioning subtitle api let support popular usecases like livestreaming game built new capability privacy copyright protection mind ability app capture another app audio constrained read blog post new audio video codecs android add support open source video codec allows medium provider stream high quality video content android device using le bandwidth addition android support audio encoding using opus open royaltyfree codec optimized speech music streaming high dynamic range video device support native midi api apps perform audio processing c android introduces native midi api communicate midi device ndk api allows midi data retrieved inside audio callback using nonblocking read enabling low latency processing midi message give try sample app source code vulkan everywhere vulkan requirement device running android higher recommendation device already see significant momentum vulkan support ecosystem among device running android n half support vulkan better new requirement android expect see adoption rise even coming year connectivity improved peertopeer internet connectivity refactored wifi stack improve privacy performance also improve common usecases like managing iot device suggesting internet connection without requiring location permission network connection apis make easier manage iot device local wifi peertopeer function like configuring downloading printing network suggestion apis let apps surface preferred wifi network user internet connectivity wifi performance mode apps request adaptive wifi enabling high performance low latency mode great benefit low latency important user experience realtime gaming active voice call similar usecases platform work device firmware meet requirement lowest power consumption android foundation art optimization improvement art runtime help apps start faster consume le memory run smoother without requiring work art profile delivered google play let art precompile part app even run runtime generational garbage collection make garbage collection efficient term time cpu reduces jank help apps run better lowerend device chart show percentage improvement startup time specific apps tested using play profile neural network api added new operation including argmax argmin quantized lstm alongside range performance optimization lay foundation accelerating much greater range model object detection image segmentation working hardware vendor popular machine learning framework tensorflow optimize roll support nnapi faster update fresher code android continuing focus bringing new platform device rapidly working closely devicemakers silicon partner like qualcomm project treble played key role helping u bring partner device year beta program along pixel device double number last year even better expect device get official android update end year working several partner new flagship launch update seeing great momentum android already device previous android release getting new version month ahead android also first release support project mainline officially called google play system update new technology securing android user keeping device fresh important code change direct google play google play system update able update specific internal component across device running android higher without requiring full system update device manufacturer expecting bring first update consumer device next several month developer expect update android help drive consistency platform implementation broadly across device time bring greater uniformity reduce development testing cost get apps ready android today public release android update coming soon device asking android developer update current apps compatibility soon possible give user smooth transition android install app android install current app google play onto pixel device running android emulator test app look great run well full functionality handle android behavior change properly watch impact privacy change gesture navigation change dynamic linker path bionic library others test android privacy feature new location permission scoped storage restriction background activity start change data identifier others see checklist top privacy change get started review privacy change doc area test test us restricted nonsdk interface move public sdk ndk equivalent instead detail test library sdks app find issue try updating latest version sdk reach sdk developer help update publish compatible app finished testing made update recommend publishing compatible app right away help deliver smooth transition user update android getting apps tested ready new version android crucial faster platform update throughout ecosystem please prioritize work possible enhance app android feature apis next ready dive android learn new feature apis use top feature get started recommend every app dark theme ensure consistent experience user enable systemwide dark theme adding dark theme enabling force dark gesture navigation support gesture navigation app going edgetoedge making sure custom gesture complementary system navigation gesture optimize foldables deliver seamless experience today innovative device optimizing foldables recommend relevant app interactive notification notification include message enable smart reply notification engage user let take action instantly better biometrics use biometric auth move biometricprompt preferred way support fingerprint auth modern device audio playback capture support captioning gameplay recording enable audio playback capture app great way reach user make app accessible better codecs medium apps try video streaming high dynamic range video speech music streaming use opus encoding musician native midi api available better networking apis app manages iot device wifi try new network connection apis function like configuring downloading printing read new feature change visit android developer site get started developing download official api sdk tool android studio higher follow instruction configure environment coming device near android begin rolling today three generation pixel phone pixel pixel even original pixel pixel device get update next week including enrolled year beta program pixel device watch official overtheair update coming soon always system image pixel device available manual download flash get latest android emulator system image via sdk manager android studio broader testing treblecompliant device generic system image gsi available looking android source find android open source project repository android branch next soon closing android beta issue tracker feedback app please keep feedback coming file new issue android aosp issue tracker thanks many developer early adopter participated android beta program year gave u great feedback filed thousand issue helped u make android platform great consumer developer looking forward seeing apps android
108,Lobsters,mobile,Mobile Development,Building a Raspberry Pi 3B+ full keyboard handheld,https://0x0f0f0f.github.io/posts/2019/08/building-a-raspberry-pi-3b-full-keyboard-handheld.-part-1/,building raspberry pi full keyboard handheld,obscure one fo hyperpixel raspberry pi handheld feature gamepad full size keyboard wifi antenna external hdmi screen game console emulator multiple free open source operating system modern kernel data never leaf device customize everything simple advanced desktop environment program read edit gui apps power tool window manager sandboxed desktop apps flatpak hardware hyperpixel handheld teensy thumb board tindie page driver driver library issue operating system follow,really surprisingly quite hard get mobile linux handheld device either build try get hand discontinued obscure one would computer manufacturer sell device last year really profitable seller point view owning linux handheld computer help detox harmful social medium experience using fo also mean getting rid bloatware walled garden like android io macos window allow run top quality creative software without spending cent hardware relatively really cheap also daily gnulinux user like ease integration device planning use distro void linux every device desktop laptop handheld building general purpose linux handheld fun educative experience also end device kid parent friend sysadmin enjoy everyday task build based hyperpixel raspberry pi handheld anthony di girolamo still print key assemble case electronics together feature thing device smartphones taking note drawing keeping track calendar todo list browse internet watch video listen music play game roadmap take picture record video call internet thing handheld smartphone well use usb device like gamepad full size keyboard wifi antenna plug pi external hdmi screen use like medium center game console emulator switch multiple free open source operating system simply swapping memory card running modern kernel operating system android smartphones example run outdated kernel bulky java runtime default data never leaf device also mean synchronizing file device amazing sshgit need external cloud anymore root access box customize everything choice dozen high quality simple advanced desktop environment run hundred program read edit malwarefree user friendly gui apps run dozen command line power tool window manager run sandboxed desktop apps flatpak thing rpi handheld yet smartphone phone call sm data connectivity build default raspberry pi connectivity method wifi bluetooth go set external portable hotspot able use portable mobile data wifi hotspot smartphone hardware hyperpixel inch touch screen display raspberry pi model b pi need case redesign printed retro looking case frame full key qwerty keyboard controlled teensy perfect programming using command line mah battery regulated adafruit powerboost usable usb ethernet port building diy linux handheld basing anthony di girolamo design keyboard hyperpixel handheld teensy thumb board got teensy thumb board pcb anthony tindie page thumb keyboard pcb magical piece missing create usable device single board computer printed case touch display already widely available nothing though smooth using full layout qwerty keyboard using unix interface building soldering keyboard also good exercise electronics beginner thanks hole soldering driver pimoroni open sourced hyperpixel display driver github install void linux compile install library compile configure install driver manually reproduce build raspberry download library build install configure make sudo make install download pimoroni hyperpixel driver cd src directory build make build make init date new init written python update pimoroni updated driver new script written python need package installed sudo xbpsinstall su install python library accessing gpio pin needed hyperpixel init script sudo pip install rpigpio compiled successfully cd back directory install driver init program cd cp bootoverlays cp usrlocalbin initialize display boot time add line containing etcrclocal copy boot configlines installsh file driver repository bootconfigtxt remove quote enable rotation change config line rotate rotate screen deg change config line calibrating touchscreen bit tedious open issue hyperpixel driver repository shout helping calibrate touch display install evdev driver xinputcalibrator sudo xbpsinstall xinputcalibrator xinput create xorg config folder sudo mkdir enable sudo cp list input device remember id number next goodix capacitive touchscreen xinput list calibrate touchscreen save config file replace hyperpixelid number found previous step xinputcalibrator misclick device hyperpixelid display calibrated correctly open config file text editor remove leading line one beginning section remember save file nano move configuration file correct directory sudo mv test calibration restarting xorg rebooting pi xorg crash forget remove instruction operating system raspberry pi raspberry linux handheld run variety operating system provide great smooth secure daily usage experience follow next post show finished build talk software run handheld add official rpi camera speaker microphone
109,Lobsters,mobile,Mobile Development,Its time to start giving back,https://www.pine64.org/2019/08/19/its-time-to-start-giving-back/,time start giving back,digital gap decide send pinebooks,wait also making contribution closing digital gap term used describe inequality access computer internet technology underprivileged individual group may inconceivable many access computer secure sophisticated software well internet remains privilege le half humanity number child regular access computer worldwide measly important access fresh water food shelter electricity access computer substantially positive effect individual thus also community inhabit recent un report outlined providing schoolage child computer correlated directly improved literacy rate access education financial independence particularly important case girl young woman perhaps importantly safety many le economically developed country child access internet homework internet cafe travel toandfrom internet cafe well cafe frequently expose child potential danger enter pinebook ideal laptop distribution aid closing digital divide inexpensive sturdy durable well simple design effectively mean repaired anyone limited resource needed access pinebook internals philip screwdriver event component failure spare part small fee moreover despite low cost pinebook basic networking connectivity one would require basic task allows wide array software run long batterylife well reaps benefit running open source softwarehow achieved commitment closing digital gap start pinephone launch two type cover available pinephone pine store soft rubber cover likely transparent hard plastic one following refers soft cover sold pine store final pricing cover set stone yet expect range revenue soft cover go sole purpose funding pinebooks used initiative help close digital gap math simple let outline anyways soft pinephone cover sold pine store buy one pinebook someone need get pinphone cover someone need get pinebook like decide send pinebooks intend make community process detail still worked envision community member submit suggestion people place charity institution existing project dealing digital divide etc would either directly benefit using pinebooks help distribution time may advisory body consisting community member well notable people broader linux community tasked weighing proposal put vote see go suggestion regarding subject matter please make sure share thought comment section lastly developer represent existing educationfocused project would like tailor o build pinebook make sure get touch
110,Lobsters,mobile,Mobile Development,Dealing with Platform Inconsistencies as a North Korean Front-End Developer,https://medium.com/@Raicuparta/dealing-with-platform-inconsistencies-as-a-north-korean-front-end-developer-ea116b910c55,dealing platform inconsistency north korean frontend developer,io viewport size remains unchanged covered keyboard,filter leader list becomes small enough fit screen without scrolling keyboard visible android opening keyboard shrink viewport visible area io viewport size remains unchanged covered keyboard io let scroll page keyboard open revealing missing portion page behavior break position fixed element like yoursto make matter worse way know tall keyboard user using hardware keyboard clever cs trick save timeso need scrollable list item accessible without knowing arbitrary portion lower part screen visible workaround add spacer bottom list highlighted green visibility height spacer height list area minus one element way always possible scroll way bottom bringing last element top listthere still way make modal scroll outside viewport need patch themone way swiping nonscrollable element currently visible case modal header disable pointer event cs since need inner element filter input close button still usable solution disable scrolling touchmove event default reaction touchmove scrolling blocking preventdefault make unscrollable
111,Lobsters,mobile,Mobile Development,The (not so) hidden cost of sharing code between iOS and Android,http://blogs.dropbox.com/tech/2019/08/the-not-so-hidden-cost-of-sharing-code-between-ios-and-android/,hidden cost sharing code io android,irbnb sunset use r eact n ative overhead custom framework library jinni nn overhead custom development environment overhead addressing difference platform overhead training hiring retaining developer join team,recently dropbox technical strategy mobile sharing code io android via c idea behind strategy code c instead twice java objective c adopted c strategy back mobile engineering team relatively small needed support fast growing mobile roadmap needed find way leverage small team quickly ship lot code android io completely backed strategy favor using platform native language primarily swift kotlin exist started decision due hidden cost associated code sharing thing learned company cost effectively share code stem basic issue writing code nonstandard fashion took overhead would worry stayed widely used platform default overhead ended expensive writing code twice breaking different type overhead encountered like clarify never actually got point codebase developed c overhead c adoption actually prevented u ever moving fully direction also worth noting much larger company like google facebook developing scalable codesharing solution several year solution far gained limited adoption avoid overhead described leveraging party code sharing solution like react native flutter still apply least one technology gain traction mature example airbnb sunset use react native many reason outlined post group different type overhead faced four main category overhead custom framework library easiest overhead predict c need build framework library roughly break subcategories framework would allow u interact host environment build full fledged mobile app example djinni tool generating crosslanguage type declaration interface binding framework running task background v main thread trivial task perform platform native language library would replace language defaultsopen source standard could used within platform native language example json de serialization nn nonnullable pointer c none code would necessary stayed platform native language contribution open source project would probably benefited developer platform native language possible could done better job leveraging open source c library open source culture c development community still strong mobile development community particular almost nonexistent c mobile community note cost particularly high c opposed possible nonnative language like python c lack single fullfeatured standard library said cc language compiler supported google apple using different language would created whole host problem deal overhead custom development environment mobile ecosystem lot tooling available make development efficient mobile ides rich google apple invested lot resource making best development experience developer corresponding platform moving away platform default gave away benefit notably debugging experience platform native language generally superior debugging c code via platform default ide one particularly memorable example bug causing deadlock background threading framework leading app randomly crash type bug hard pin even work simple standard stack issue involved debugging multithreaded code running back forth c java took week nail addition losing tool also invest time building tool would support c code sharing importantly needed custom build system created library containing c code well java objectivec wrapper could generate target understood xcodebuild gradle system big drag resource needed constantly updated support change two build system overhead addressing difference platform even though io android apps mobile apps generally expose feature functionality platform difference affect implementation example way application execute background task platform different even thing started fairly similar adopted crossplatform strategy greatly diverged time eg interaction camera roll result even really write code run different platform box spend lot time integrating code different platform writing platform specific code sometime code end c layer make theoretical benefit writing code live promise thus greatly reducing benefit approach begin overhead training hiring retaining developer last definitely least cost training andor hiring developer work custom stack dropbox started mobile strategy core group experienced c developer group started c project trained mobile developer dropbox contribute codebase time developer moved team company engineer remained sufficient experience fill technical leadership gap opened became increasingly difficult hire replacement senior engineer relevant c experience would interested mobile development result ended real lack critical expertise maintain c codebase way restore expertise invest substantially one two option find hire candidate specific skillset tried hire role year success train mobile c engineer inhouse missing skillset practically impossible longer someone desired skillset perform training even core group moved mobile engineer generally interested learning c finding people train big issue well top hiring problem rolling tech stack created retention developer simply want work c project caused lot talented mobile engineer leave project rather slog notverywell maintained custom stack general mobile development community technology pattern emerge frequently adopted quickly best developer like keep skill date keeping latest greatest challenge mature product environment standard stack sacrifice adoption speed stability challenge hugely magnified lock custom stack wider mobile ecosystem although writing code sound like great bargain associated overhead made cost approach outweigh benefit turned smaller expected anyway end longer share mobile code via c nonstandard way instead write code platform native language addition want engineer delightful experience able contribute back community made decision align practice industry standard hiring android io engineer get excited building amazing product contributing mobile ecosystem come join team
112,Lobsters,mobile,Mobile Development,New Attack Vectors for Mobile Core Networks,http://www.sicherheitsforschung-magdeburg.de/uploads/journal/MJS_064_Holtmanns_MobileCoreNetworks.pdf,new attack vector mobile core network,,obj length filter flatedecode stream «≥«í tfhw rÁîØ endstream endobj obj type xobject subtype image width height bitspercomponent length colorspace devicergb filter dctdecode stream jfif mm jan w meine j n w e n e hlino mntrrgb xyz acspmsft iec srgb cprt p lwtpt bkpt rxyz gxyz bxyz dmnd pdmdd l lumi meas tech rtrc
116,Lobsters,mobile,Mobile Development,Two years of postmarketOS,https://postmarketos.org/blog/2019/06/23/two-years/,two year postmarketos,booting device install alpine linux port new one pmbootstrap last update post elogind puretryout use lightdm phosh librem initial patch port merged martijnbraam pinephone plasma mobile video video puretryout puretryout kde framework plasma desktop ubports drop nine mir patch initial version one package left presentation unrznbl shelli ui grafitti gesture recognition program video rahmanshaber cubocore coreapps sway make available postmarketosmainline drebrez mainlining galaxy nexus soc device tree source wait forever emergencyrestart direct link booting based kernel one year ago masneyb crazy amount patch based kernel online service ouya android gaming console get shut patch samsung captivate glide midori browser work well zhuowei google pixel xl mainlining lambdadroid sourcehut outlined day post get touch crosscompiling pmbootstrap zhuowei crossdirect introduced earlier security reason pmaportsgit ollieparanoid always increase version modified package skipping test build checksum verification martijnbraam imagespostmarketosorg hwtest mberndt anyway drebrez added alpine asrieldanctnix minlexx xiaomi redmi samsung galaxy libhybris hybrisbase pulseaudiomodulesdroid martijnbraam,would nt great could take obsolete smartphone past ten year replace outdated insecure software maintained modular free software stack using raspberry pilike device next tinkering project constraint postmarketos make possible today booting device every single package whole o updated exception vendor linux kernel firmware blob plan using case even possible switch discontinued vendor kernel fork upstream kernel release straight linus torvalds made easy fellow hacker install alpine linuxbased distribution kind mobile device port new one change every piece operating system development done linux distribution requirement except installing lightweight pmbootstrap program people use daily basis create amazing contribution yet still beginning full potential eventually breathe much new life obsolete pocket computer may one day become usable actual phone stay celebrating two year extending improving fun platform community could potentially end madness planned obsolescence mobile phone market let start summary happened since last update post ui related news alpine developer packaged elogind upstream distribution mean finally use proper display manager puretryout created patch use lightdm instead previous approach hacking etcinittab autologin kicking etcprofiled script halfhearted job setting session almost uis expect display manager therefore le compatibility problem moving forward fact purism phosh ui upcoming librem work without elogind run phosh top postmarketos qemu initial patch port merged beginning month even though patch obviously seen much testing point martijnbraam already managed run pinephone devkit display resolution clearly touch input reported working gotten plasma mobile run librem video pinephone video devkits fully free software gpu driver please note port device still early day sluggish performance due gpu driver still development usually puretryout keeping plasma mobile stack uptodate latest version also created postmarketosuiplasmamobileextras package effectively allows user choose whether want base installation fully blown one extra apps like pdf reader calendar music player like upstream everything make sense help alpine friend puretryout got kde framework plasma desktop alpine maintaining package plan keep specifically postmarketos either mobile specific development version speaking upstreaming contributed quite muslspecific patch back unity ubports iterating next release able drop nine mir patch postmarketos port initial version unity packaging available far cross compilation issue month ago today one package left cross compiled properly testing purpose compiled natively took photo unity starting pinephone devkit besides giving presentation current progress porting free software baseband firmware osmocombb mediatek device unrznbl got shelli ui postmarketos essential piece grafittiinspired gesture recognition program started six year ago allows writing single letter time drawing rough shape letter across whole screen see video gesture tab use tab completion slashing bottom left top right enter reverse gesture strange input method offer contrary usual onscreenkeyboard way thing radical difference set apart literally mobile uis today run entirely tty user get minimalist environment nothing tiny resourceefficient terminal application certainly everyone folk like pc use case explored using shelli fallback ui case graphical ui start extending texttospeech blind people rahmanshaber cubocore team creator relatively young project called coreapps provides several lightweight touchscreenfriendly application consistent look work lowend system without hardware acceleration latter perfect match postmarketos device especially right initial porting phase hardwareaccelerated graphic working created initial port application installed postmarketos writing postmarketos port missing proper theming coreapps look bit weird image comparison added reference screenshot look proper theming support added sway wayland dropin replacement window manager already packaged alpine rather easy exercise make available postmarketos ui selection provided pmbootstrap reminded u merge request need hardware acceleration work may noticed previous blog post one driving force mainlinerelated aspect postmarketos unfortunately seemingly absent internet last month certainly miss great contribution fun talking always incredibly helpful towards anyone username way answered question newcomer would even impression chatting ai sincerely hope well nevertheless absence mean mainlining progress work stopped motivation ever community get device mainlined much actually create dedicated postmarketosmainline channel instance thrilling report drebrez mainlining galaxy nexus although soc supported mainline linux actually booting device made panic reboot instantly starting stub device tree source way get log useful clue crash device usb serial course working display anything beyond applied best hacking skill configured kernel wait forever said panic occurs edited code emergencyrestart one particular interesting location compiling booting device would either hang forever reboot way knew whether code patched restart would get executed hour later patiently narrowed troublemaker mostly clock setup related offending code commented device would finally boot initramfs course crash point two paragraph simplified summary took get first feeling success mainlining endeavor illustrate many mindboggling problem solved throughout next month get following working usb mmc internal flash storage battery reporting charging volume power key accelerometer gyroscope barometer finally display see photo probably wondering video next paragraph show even earphone audio working video muted default enable audio manually try direct link also another video galaxy nexus booting based kernel anyone looking mainline smartphone reading original issue worthwhile lot step taken well documented could practically serve blueprint future mainline port mainlining tale began galaxy nexus nexus soc end spectrum pretty much everything besides audio working one year ago comparatively small patch top kernel instead nearly two million line added code downstream kernel underestimate take resolve remaining quirk rebase replace remaining outoftree hack last line beautiful patch integrate rest kernel source finally worth getting accepted upstream masneyb determined get task done nexus take look crazy amount patch gotten merged undertaking together patch still review thanks effort run postmarketos nexus based kernel wip merge request le outoftree patch ever publishing blog post coincidence one month online service ouya android gaming console get shut happens highly anticipated crowdfunding sensation useful paper weight original software stack however possible install postmarketos moreover patch allow running slightly patched mainline kernel use grate free software userspace driver get accelerated graphic tegra soc latter exactly stable far audio support still missing nice foundation expanding lifetime gaming console surely able run bunch retro emulator next ten year rather take much time update device mainlining progress make update remaining phone bit shorter put kernel close mainline samsung captivate glide tegra soc photo report midori browser work well latest grate driver even better stock webview android next zhuowei put incredible amount work google pixel xl soc get next nothing way penguin greeting booting process finally started mainlining samsung galaxy teamed lambdadroid working similar soc bad infrastructure news first manage move binary package repository sourcehut yet outlined day post building top sourcehut make maintaining binary repo easier transparent whole thing scale better allow u move towards stable postmarketos version still working postmarketos specific part orchestrate build job fact php based version feature complete hard resolve bug test case long story short made tough decision starting python version focus testing beginning using programming language pmbootstrap decrease friction development writing test increase bus factor somebody interested helping u get touch pleasant announcement crosscompiling pmbootstrap completely revamped zhuowei crossdirect method change longer need run distccd localhost anymore neatly resolve distccdbehindsshd performance bottleneck introduced earlier security reason heart postmarketos development package build recipe pmaportsgit order shorten code review ollieparanoid improved ci script new check make sure always increase version modified package sometimes nt want bump version though example enable another architecture case skip new check ci skipvercheck commit message similarly ci skipbuild allows skipping test build eg know wo nt finish within one hour timeout still running checksum verification ci test martijnbraam created imagespostmarketosorg host prebuilt installation pinephone probably add device future also wrote terminal program hwtest test whole bunch mobile hardware related component report status back elegant overview allows example quickly checking regression kernel upgrade probably guessed make perfect candidate including automated testing future one thing learned long list ported device downstream kernel compile certain gcc version even worse may compile newer gcc wo nt boot latter course nightmare resolve mberndt anyway allowed htc desire z built instead spare porter pain drebrez added shortly afterwards alpine subject workarounds vendor kernel asrieldanctnix minlexx trying get optional android driver support phone integrated postmarketos targeting xiaomi redmi first photo samsung galaxy second photo course streamlining necessary libhybris packaging device process example new hybrisbase meta package photo show libhybris test gpu functionallity running successfully support audio worked packaging pulseaudiomodulesdroid sailfishos thanks everyone ported device see contributor section device wiki page let assume read entire post reward easter egg martijnbraam created dark mode website configure browser appropriately open page look entirely differently mind blown right another thing want miss course convergence fancy word people use describe consistent interface desktop phone next paragraph prime example convergence done postmarketos critical piece information grateful thought towards everybody contributed let get right next year exciting postmarketos development
118,Lobsters,mobile,Mobile Development,Huawei Exploring Linux-based Sailfish OS Fork As Its Android Alternative,https://fossbytes.com/huawei-linux-based-sailfish-os-android-alternative/,huawei exploring linuxbased sailfish o fork android alternative,android alternative bell aurora o sailfish o linux operating system privacy security hongmeng o trademark,huawei paradise currently trouble due u ban imposed google among many company banning well company received temporary relief mean everything fine search android alternative huawei need badly chinese company seems opting existing o instead new one according russian site bell huawei likely go aurora o sailfish o fork russian o based opensource sailfish o linux operating system made finnish company jolla back sailfish got status mobile o russia used government corporation mobile device project sailfish o relatively unpopular mobile world operating system known privacy security could prove beneficial huawei utilize trait smartphones sailfish o also known compatible android apps well however sure adoption aurora o would prove viable option huawei uninitiated aurora o option huawei considering company also planning develop o dubbed hongmeng o company huawei also filed trademark around nine country hence safe say reaching decision huawei thoroughly looking option finally decide present future reminder following ban huawei u huawei three month receive android update find huawei finally decided stay tuned fossbytes
119,Lobsters,mobile,Mobile Development,Reality Projection with Magic Leap One in Exokit,https://www.youtube.com/watch?v=m_QntqZmd_Q,reality projection magic leap one exokit,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature reality projection magic leap one exokit youtube,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature reality projection magic leap one exokit youtube
120,Lobsters,mobile,Mobile Development,GrapheneOS: privacy and security-focused mobile OS with Android compatibility,https://grapheneos.org/,grapheneos privacy securityfocused mobile o android compatibility,open source hardenedmalloc hardenedmalloc readme nextgeneration musl malloc implementation release page install page auditor app attestation service page tutorial issue tracker faq section device support,grapheneos open source privacy security focused mobile o android app compatibility focused research development privacy security technology including substantial improvement sandboxing exploit mitigation permission model grapheneos also develops various apps service focus privacy security vanadium hardened variant chromium browser webview specifically built grapheneos grapheneos also includes minimal securityfocused pdf viewer hardwarebased auditor app attestation service providing local remote verification device externally developed seedvault encrypted backup initially developed inclusion grapheneosgrapheneos collaborative open source project company used supported variety company organization wo nt closely tied company particular eventually nonprofit grapheneos foundation developer represent projectgrapheneos improves privacy security o bottom hardened kernel libc malloc compiler toolchain many lowlevel improvement change designed eliminate whole class serious vulnerability provide meaningful barrier exploitation avoid making change without clear rationale regularly work towards simplifying replacing lowlevel improvement malloc implementation hardenedmalloc providing cutting edge security modern system hardenedmalloc project portable linuxbased operating system adopted securityfocused operating system like whonix hardenedmalloc readme extensive documentation work also heavily influenced design nextgeneration musl malloc implementation offer substantially better security musl previous malloc still minimal memory usage code sizethere also many underthehood change higher level including major improvement selinux policy particularly app sandbox grapheneos try avoid impacting user experience privacy security feature ideally feature designed always enabled impact user experience additional complexity like configuration option always feasible grapheneos add various toggle feature like network permission sensor permission restriction device locked usb peripheral camera quick tile etc along complex userfacing privacy security feature uxgrapheneos made substantial contribution privacy security android open source project along contribution linux kernel llvm openbsd project much past work longer part downstream grapheneos project successfully landed many patch upstream even success making suggestion participating design discussion steer thing direction want many upstream change aosp removing app access lowlevel process network timing profiling information originated grapheneos project need upstream project often different often reimplement feature flexible way almost always able move using upstream feature even still need implementation help conceptsrestrictions considered upstream project apps needing compatible getting feature upstream often lead improved user experience app compatibilityofficial release available release page installation instruction install pagethe official grapheneos release supported auditor app attestation service auditor app attestation service provide strong hardwarebased verification authenticity integrity firmwaresoftware device strong pairingbased approach used also provides verification device identity based hardware backed key generated pairing softwarebased check layered top trust securely chained hardware detail see page tutorial also support operating systemsgrapheneos never include either google play service another implementation google service like microg part android open source project required baseline android compatibility apps designed run android rather android bundled google apps service already work grapheneos huge number open closed source apps already available itopen apis tied google continue implemented using open source provider like seedvault backup app texttospeech voicetotext nongpsbased location service geocoding accessibility service etc example open android apis need developbundle implementation based existing open source project compatibility apps depending google apis service improved implementing way pretend google stopped existing server unavailablegrapheneos founded daniel micay late started solo project incorporating previous open source privacysecurity work project initially created port openbsd malloc android bionic libc port pax kernel patch kernel supported device quickly expanded large set homegrown privacy security improvement particularly lowlevel hardening work compiler toolchain bionic work began landing code upstream aosp upstream project substantial portion early change either successfully landed upstream heavily influenced upstream change replaced project able move quickly day much low hanging fruit address nt yet trying produce highly robust production quality osin late company incorporated became primary sponsor project grapheneos previously known copperheados sponsored company intention use company build business around grapheneos selling support contract work customized proprietary variant o company supposed serve need open source project rather vice versa explicitly agreed grapheneos would remain independently owned controlled daniel micay company failed live promise longer associated way grapheneos fact company accidentally founded coppperhead limited beginning multiyear trainwreck holding back poisoning successful open source project ended leeching rather supportingin company hijacked ceo attempted take project coercion rebuked seized infrastructure stole donation project successfully moved without fully revived since taken fraudulently claiming ownership authorship work basis fact tried retroactively change term involvement rewrite history project claim easily falsified public record people involved open source project former sponsor former sponsor engaged campaign misinformation harassment contributor project aware actively trying sabotage grapheneos engaging many form attack project developer contributor supporter meanwhile continue profiting open source work falsely claim creationafter splitting former sponsor project rebranded androidhardening grapheneos continued original path independent open source project never closely tied particular sponsor companythe copyright grapheneos code entirely owned grapheneos developer made available osiapproved open source license upstream licensing inherited modification project mit licensing used standalone project grapheneos never copyright assignment developer always owned contributionsthe tiny portion code written people contract former sponsor included project since ported android oreo pie code became obsolete longer useful vast majority code previous era owned daniel micay exception never written contract employment agreement never assigned company organization continuation original independent open source project code originally published permissive open source license used grapheneos today small portion historical code actually still use today become obsolete replaced rewrite taking better approach pastthere era september project split former sponsor noncommercial usage licensing used revision existing permissively licensed code attempt prop sponsor supposed supporting open source project impact ownership code daniel micay relicensed portion code used grapheneos grapheneos contain code based code noncommercial usage licensing great care taken avoid pulling anything solely owned daniel micay case nearly everything projectdetails roadmap project posted site near futureto get idea near term roadmap check issue tracker vast majority issue filed tracker planned enhancement care taken make sure issue open tracker concrete actionablein long term grapheneos aim move beyond hardened fork android open source project achieving goal requires moving away relying linux kernel core o foundation security model need move towards microkernelbased model linux compatibility layer many stepping stone leading towards goal including adopting virtualizationbased isolationthe initial phase longterm roadmap moving away current foundation deploy integrate hypervisor like xen leverage reinforcing existing security boundary linux would running inside virtual machine point inside outside sandbox reinforced longer term linux inside sandbox replaced compatibility layer like gvisor would need ported given new backend alongside existing kvm backend longer term ie many year linux fade away completely usage virtualization anticipation many project going interested kind migration going solely grapheneos project demonstrated current existence gvisor project various project working virtualization deployment mobile hypervisor verified boot still intact also provide way achieve goal based extension trusted execution environment tee functionality even without grapheneos hardwarehardware firmware security core part project currently limited research submitting suggestion bug report upstream long term project need move hardware spacesee faq section device support
121,Lobsters,mobile,Mobile Development,"Lease-based, utilitarian resource management on mobile devices",https://blog.acolyer.org/2019/05/31/lease-os/,leasebased utilitarian resource management mobile device,case leasebased utilitarian resource management mobile device wasted energy un wise steward earn trust extra hour http orderlabioleaseos,case leasebased utilitarian resource management mobile device hu et al asplos chosen another energyrelated paper end week addressing problem many people relate apps drain battery leaseos borrows concept lease distributed system rather nice twist able reduce power wastage disruption application experience change required apps twist leaseos injects transparent proxy app powerhungry o resource app think control resource release cover proxy given lease traditional leasing scheme borrower request lease extension half problem apps requesting expensive resource really need instead o monitor wisely leased resource used app making good legitimate use resource lease transparently extended loses underlying resource tell whether app wise steward resource interesting question get severe type defect developer frequently introduce apps energy bug drain battery abnormally fast example wakelock mechanism android apps instruct o keep cpu screen wifi radio etc active stateoftheart runtime technique monitor app resource usage kill throttle apps usage exceeds threshold making heavy use resource necessarily imply misbehavior legitimate scenario usage justified eg navigation gaming wasted energy underlying abstract model resource usage mobile os askuserelease cycle app asks try acquire resource assuming resource granted app us resource work finally releasing app get resource really need forgets free thus holding onto resource much longer really need place excessive drain battery example mail app android bug whereby would enter infinite retry loop network disconnected mail server failed retry app would acquire wakelock causing severe battery drain betterweather app similar energy failure mode get gps signal eg phone inside building would keep searching nonstop never find signal graph onehour trace betterweather app running nexus phone inside building app spends time asking gps lock never get since app update display without location battery drain result benefit end user betterweather example misbehaviour ask phase mail case example misbehaviour use phase see chart holding wakelock long time actively using time cpu usage spike bottom chart ultralow utilization pattern consistent across different phone ecosystem experiment high utilisation necessarily mean thing good though disconnected network mail another failure mode use wakelock even higher usage cpu also high truth behind chart app stuck exception loop wakelock acquisition network request error handling without making progress utility end user zero un wise steward author identify four different class energy misbehaviour three detected automatically frequent ask behaviour fab app frequently try acquire resource rarely get long holding behaviour lhb app granted resource hold long time rarely us low utility behaviour lub app us granted resource long time lot work work use excessive use behaviour eub app lot useful work incurs high overhead frequent ask behaviour identified low resource request success ratio unsuccessful request time total request time long holding behaviour identified low usage hold time ratio resource usage time holding time low utility behaviour identified low utility rate utility score resource usage time excessive use behaviour hard separate desired behaviour though author analyse energy misbehaviour case across popular apps determine distribution cause according classification four type misbehavior prevalent fab lhb lub together occupy studied case eub occupies case majority fab lhb lub due clear programming mistake bug majority eub due design tradeoff nonbug earn trust leaseos transparently creates lease app first access object lease term lease holder right access resource instance without approval o end term o decides whether renew lease app explicitly release resource lease term ended immediately otherwise leaseos examines collected utility metric lease expires normal behaviour lease automatically extended misbehaviour lease enters deferred state extends lease delay r delay period underlying resource temporarily released reduce wasteful energy consumption continuous examinerenew model differentiates leaseos simple oneshot throttling solution statistic leaseos collect determine utility particular resource type follow pattern wakelock example leaseos examines ratio cpu wakelock holding time lowutility behaviour definition may app specific cooperative developer provide utility callback general heuristic still prove pretty useful eg frequency exception raised transparent lease proxy sit front protected resource coordinate lease manager gather stats make expirerenew decision app legitimately try use resource expired lease main difference see slowdown underlying resource reacquired also possible app see eg io exception network timeouts app already required handle tradeoff lease length short lease save energy lease management overhead empirical experiment leaseos set default lease term second default deferred interval r second app using resource efficiently lease manager increase lease term reverting back lease sign misbehaviour extra hour author reproduce energy bug case realworld apps evaluate leaseos android doze mode defdroid us simple throttling android doze mode defers app background cpu network activity device unused long time conservative trigger systemwide mode experiment doze mode forced kickin commandline adb interface otherwise take effect case leaseos significantly reduce wasted power consumption case achieving average reduction ratio case evaluated leaseos introduce negative usability impact testing apps legitimately make heavy use resource runkeeper spotify leaseos renews lease without interruption whereas pure throttling scheme three apps experienced disruption overhead leaseos le endtoend test one buggy gps app system playing music hour watching youtube one hour browsing minute keeping phone standby showed android ran battery around hour leaseos battery lasted hour find leaseos source code http orderlabioleaseos
122,Lobsters,mobile,Mobile Development,Mobile Release Engineering at Scale with Shipit Mobile,https://engineering.shopify.com/blogs/engineering/mobile-release-engineering-scale-shipit-mobile,mobile release engineering scale shipit mobile,continuous deployment web apps issue mobile release transferable solution shipit mobile existing tool releasing web apps creating new release shipit mobile trunkbased development testing building release candidate distributing app different channel google play official api fastlane apple app store connect api configuring shipit mobile convention configuration release captain useful notification emergency release rollout trust developer decision anka reliable ci system resilient test infrastructure flakiness mobile developer test apps engineering career page,one important phase software development releasing final user shopify invested heavily tooling continuous deployment web apps developer working web project want deploy change production process simple merge build container run ci ship production contrast uploading new version one mobile apps google play app store involved several manual step lot human interaction caused various problem wanted provide level convenience releasing mobile apps web apps also take opportunity define framework mobile team adopt reason developed new tool shipit mobile platform create view manage app release issue mobile release automatic deploys continuous delivery possible mobile several reason including approval wait time coordination developer designer product manager user need update app automatic update enabled finding several update app multiple time week even day annoyingmoreover new release deploy latest version code repository infrastructure thirdparty service app store involved software approval distribution owned mean update apps several time day even wanted touploading new version mobile apps google play app store fraught problem releasing new apps error prone due high number manual step involved like selecting commit release executing script upload binary store different team different process release mobile apps release process shared within organization process inconvenient complex team variant release script script complex untested release version build number managed manually finally lot responsibility burden release manager make decision fix bug found along way communicate stakeholder coordinate side task solution shipit mobile mobile release flow releasing new mobile app requires performing multiple step pick commit release increment build version number run ci manually test app qa iterate testing bug regression fixed update screenshots release note upload store wait app submission approved existing tool releasing web apps nt suitable mobile release process decided build something new shipit mobile shipit mobile home creating new release shipit mobile creating new release shipit mobile release start new branch repository follow trunkbased development approach release branch branched master opted trunkbased development instead release directly master branch reduces risk including code belong current release mistake new feature bug fix pushed branch release taking place release branch never merged back master branch bug fix pushed master cherrypicked release branch branching model branching model allows u automatically manage release branch avoid merge conflict release completed testing building release candidate release page shipit mobile new release created candidate built candidate shipit mobile corresponds releasable unit work every new commit release branch creates new candidate shipit mobile every candidate build number incremented new candidate trigger two continuous integration ci pipeline one test pipeline ensures app work expected pipeline build app release decided decouple two pipeline emergency want allow developer release app even test pipeline finished failed distributing app different channel distributing app different channel app built tested ci passing time upload store shipit mobile concept distribution channel distribution channel platform app downloaded release binary uploaded different channel useful want publish app google play send version app internally support team quickly access right version app support request come know app user downloaded storethe two main channel support google play app store google play used google play official api app store fastlane make easy upload io apps appstore connect use alongside apple app store connect api communicate app store upload apps metadata check apps approved ready release configuring shipit mobile every project release using shipit mobile need configuration file file tell shipit mobile basic information project platform channel want upload app optionally slack channel need notified state release went simple configuration favouring convention configuration seen way manage metadata release note screenshots app configuration file tell shipit mobile upload metadata app store know find upload long located expected folder release captain mobile release discrete process every release contains new feature bugfixes need person responsible making decision along way person release captainour previous release process complex role release captain easy transfer others moreover release captain communicate state release people involved itwith shipit mobile wanted make release captain role transferable made reality building platform guide release captain release process notify right people status release change easier others see charge release useful notification providing useful notification request got user since started work shipit mobile shipit mobile person charge release knew exact state responsible communicating others shipit mobile offload responsibility release captain sending notification slack channel every developer team know release status removing burden communicating status release stakeholder shipit mobile notification emergency release rollout shopify trust developer decision although strongly recommend passing ci creating release uploading app store mechanism place bypass restriction developer decide start release upload app store without waiting ci useful one service rely misbehaving status build received end day build tool make developer life easier get wayat shopify work infrastructure build better product quickly last year mobile tooling team spent time working scalable ci system android io pioneering use new technology like ankaalso worked providing reliable ci system resilient test infrastructure flakiness built tool top system improve mobile developer test appsdefining standard tool across mobile team bringing good practice convention make easier developer share knowledge jump project one goal mobile tooling team shipit mobile used production six month time changed evolved platform accommodate user need add new release channel improve user interface shown useful stable product developer trust release apps reduced complexity incurred mobile app release enabling u speed release cadence three week one week seen people take role release captain first time interested mobile tooling shopify production engineering team hiring love hear please take look open position engineering career page
123,Lobsters,mobile,Mobile Development,who killed videogames? (a ghost story),https://web.archive.org/web/20110926012139/http://insertcredit.com/2011/09/22/who-killed-videogames-a-ghost-story/,killed videogames ghost story,page action button entertainment,page killed videogames ghost story tim rogers figure one satan smaller men still talking engagement wheel look one said clicked next powerpoint slide men reacted uh like one best clicked one time prior engagement wheel resembled closeup snapshot brier patch one looked like something might see sticker side recycle bin particularly particular hippie commune engagement wheel today girl would one one day decide married larger man spoke gestured teach player play game one minute within one minute give ingame money make spend money buy investment begin earn profit build thing say thing finished five minute spend one premium currency unit happen one free premium currency unit game make use thing say wait three minute collect thing reason stick around three minute three minute tell come back half hour say done come back half hour phone sends push notification half hour right telling wait expressing importance patience never going forget way feel wait half hour playing game one minute going forget second time wait half hour third time forget first time wait four hour twentyfour hour start pay thing right first half hour get push notification phone vibrates tell suchandsuch ready collection men make sound collectively folded hand alongside alpine crystal spring superclear water bottle atop glass table collective face intent weirdly worried like man hearing beginning joke involving rabbi toddler lizard open app collect suchandsuch game tell leveled give bonus coin tell unlocked new thing fancier thing important part collect suchandsuch give maybe coin coin bonus get leveling coin magnitude collecting suchandsuch tell open store show new thing buy around coin leave couple collection worth maybe couple collection half worth coin purpose build new thing promising thousand coin per hour come back hour two hour three hour made enough cover initial investment buy upgrade coin thing make coin hour instead mathematical part brain see think double making everyone love number double control game world control number control ceiling doubling control player player almost hooked important give something give reason come back two half hour give ninety minute telling get coin per hour overall maybe got investment bringing coin per hour thing take twentyfour hour hook day hook two becomes tricky smaller men say hook two day difficult say whether hook three hook three say closing eye focusing pupil perhaps core head opening eye staring right going considering sticking around week stick around week larger man gold cufflink say find difficult conceive sticking around month three month concept occurred smaller man continues ready spend money show something say take three day build spend eleven ingame premiumcurrency unit right sell ingame premiumcurrency unit twenty dollar second buy twenty unit hooked least twenty larger man say say one older men say breaking long throaty silence man tell sitting head table playing action button entertainment ziggurat iphone designed game director team three people infinitely talented everything except math acting like jerk public meeting one going mention game though next one guy money going ask someone else toilet break drink lot green tea look awesome say designed game ask play die six time groan excitement upon death gradually escalating footballspectator volume sixth death hand iphone back casually touch fingertip forehead say want pause jumped back game say without trace irony monetization strategy used stand lot meeting try anymore genuinely took couple month realize talking thing stand talking time put white iphone sleep lay face board table fold hand say math math psychology might say economics clear throat economics philosophy might say modern video game design larger man praise blushing expert balancing thing construct algorithm shrewdly obscures downwardtrending curve ingame investment value saying smaller man say guy making thing people fathom playing three month play week going make thing people consider playing six month play three day generate mathematically proofable engagement wheel player come cute character listening anymore care probably going say player come cute character stay cruel mathematics
125,Lobsters,mobile,Mobile Development,Bringing Flutter to the Web,https://medium.com/flutter-io/bringing-flutter-to-the-web-904de05f0df0,bringing flutter web,bringing flutter web flutter ambition flutter web browser flutter web architecture flutter desktop effort flutterdevweb,bringing flutter webflutter portable ui framework building beautiful tailored experience support modern web pleased release technical preview sdk let take flutter ui code business logic run directly browserour ambition flutter web browserssince first beta last year customer using flutter create mobile apps run io android however flutter always architected portable ui toolkit among place run window mac fuchsia even raspberry pi since flutter built using dart includes productionquality compiler native machine code javascript solid foundation remaining challenge replace skiabased graphic engine text renderer webplatform equivalentsto right needed deliver fast jankfree framespersecond performance interactive graphicsconsistent behavior visuals flutter platformshighproductivity developer tooling integrates existing development patternssupport core web feature across modern browserswhile flutter web work progress plenty work area ready share preview try give u feedbackflutter web architecturethe overall architecture flutter web closely resembles flutter mobile flutter web architecturethe flutter framework green diagram shared mobile web offering provides highlevel abstraction ui foundation flutter including animation gesture base widget class well materialthemed set widget common application need already building flutter feel immediately home flutter webthe magic come translating concept browser reimplemented dart ui library replacing binding skia engine used mobile code target dom canvas compile flutter code web application flutter framework webflavored dart ui library written dart compiled javascript run modern browserflutter web demo running chrome firefox safariwe thoughtfully embracing core web feature like seamless integration browser history flutter routing model also coordinating flutter desktop effort enable mouse scrolling hover focus feature required mobile experiencesthe flutter web project focusing core value provided framework rich interactive experience web content focused document still benefit embedding flutter web visualizationsthe preview framework exists temporary fork existing flutter framework allowed engineer move quickly implement web functionality letting core team continue maintain improve productionready toolset already begun merge browser support main repository plan provide one flutter toolkit one framework power mobile web platformsour planned work includes support text feature selection copypastesupport plugins feature like location camera file access hope bridge mobile web single apioutofthebox support technology like progressive web appsunifying web development tooling existing flutter cli ide integrationdebugging web application using devtoolsimproved performance browser support accessibilitygo flutterdevweb find example documentation link resource excited see build
126,Lobsters,mobile,Mobile Development,The inception bar: a new phishing method,https://jameshfisher.com/2019/04/27/the-inception-bar-a-new-phishing-method/,inception bar new phishing method,inception bar new phishing method line death go hacker news discussion upvote article inception attack based fullscreen api custom cursor inception attack vidrio jim programming security fave found error edit page,inception bar new phishing method welcome hsbc world seventhlargest bank course page reading actually hosted hsbccom hosted jameshfishercom visit page chrome mobile scroll little way page able display hsbccom worse page able jail fake browser post show attack work suggest way chrome fix vulnerability finally show get still stuck first proof chrome mobile user scroll browser hide url bar hand url bar screen space web page user associate screen space trustworthy browser ui phishing site use pose different site displaying fake url bar inception bar bad get worse normally user scroll chrome redisplay true url bar trick chrome never redisplays true url bar chrome hide url bar move entire page content scroll jail new element overflow scroll user think scrolling page fact scrolling scroll jail like dream inception user belief browser actually browser within browser video hack use browser support video tag get even worse even scroll jail user able scroll top jail point chrome redisplay url bar disable behavior insert tall padding element top scroll jail user try scroll padding scroll back start content look like page refresh proofofconcept screenshotted chrome url bar hsbc website inserted webpage little effort page could detect browser forge inception bar browser yet effort inception bar could made interactive even user fooled current page get another try user enters gmailcom inception bar serious security flaw well even creator inception bar found accidentally using imagine technique fooling user le aware le technically literate time user opportunity verify true url page load scrolling page much escape guard attack really know see security flaw chrome fix tradeoff maximizing screen space one hand retaining trusted screen space one compromise would chrome retain small amount screen space line death instead giving literally screen space web page chrome could use space signal url bar currently collapsed eg displaying shadow almosthidden url bar want keep longer still stuck one way get go hacker news discussion upvote article hack similar one see inception attack based fullscreen api custom cursor inception attack released vidrio free app macos window make screensharing awesomely holographic vidrio show webcam video screen like mirror share record screen zoom quicktime app vidrio make presentation effortlessly engaging showing gesture gaze expression product hunt available macos window jim tagged programming security fave content copyright james fisher post associated employer found error edit page
127,Lobsters,mobile,Mobile Development,Building a Passive IMSI Catcher,https://harrisonsand.com/imsi-catcher/,building passive imsi catcher,imsi catcher imsi number purpose legal work temporary mobile subscriber identity tmsi hardware nooelec nesdr smart xtr hackrf one software gnu radio grgsm imsicatcher wireshark install grgsm install everything else capture gsm traffic imsis conclusion android,imsi catcher device commonly used law enforcement intelligence agency around world track mobile phone designed collect log imsi number unique identifier assigned mobile phone subscription certain circumstance imsi number linked back personal identity inherently raise number privacy concernspurposethe purpose post educational highlight ease device built practically show privacy already compromised today nothing post necessarily new le honest intention certainly already using similar deviceslegalthis post walk process building passive imsi catcher distinctly different traditional imsi catcher transmit interfere cellular network waytraditional imsi catcher illegal jurisdiction due fact transmit cellular frequency requires license essentially perform maninthemiddle attack phone mobile base station break sort antihacking law passive imsi catcher neither one point note personal data collected device imsi number may subject privacy law mindful storingprocessingsharing data device collect course legal expert way researchhow worksthe passive imsi catcher work capturing imsi number phone initializes connection base station imsi disclosed initial connection effort protect privacy subsequent communication base station done random temporary mobile subscriber identity tmsi numberthis mean collect imsi number device move base station traditional imsi catcher work differently spoofing legitimate base station forcing subscriber connect added ability collect data stationary device potentially targeted rangehardwarethe hardware required pc sdr receiver support gsm frequency generally mean mhz inexpensive based receiver upperfrequency range mhz get one course wo nt able listen station mhzi recommend something like nooelec nesdr smart xtr extended frequency range hackrf one another popular optionsoftwarethe project based main component gnu radio signal processing frameworkgrgsm block tool gnu radio process gsm transmissionsimsicatcher python script process data grgsm extract imsi numberswireshark used view raw gsm packet grgsmi ran everything inside ubuntu lts virtual machine running window good resultsinstall grgsmthe official grgsm installation instruction found ubuntu use following command install required dependency buildinstall grgsmsudo apt install gnuradio gnuradiodev git cmake autoconf libtool pkgconfig g gcc make libcppunitdev swig doxygen pythonscipy grosmosdr libosmocore libosmocoredev build install grgsm git clone http gitosmocomorggrgsm cd grgsm mkdir build cd build cmake make sudo make install sudo ldconfig install everything else imsicatcher script sudo apt install pythonnumpy pythonscipy pythonscapy git clone http wireshark sudo apt install wireshark tshark capture gsm traffic imsisa good first step test everything work run sudo grgsmscanner scan list nearby base station take minute start seeing stationspick base station capture traffic signal strength listed farright column number closer zero represent stronger signal example use station mhzyou tell grgsm capture traffic sudo grgsmlivemon f gsm traffic piped loopback interface easily viewed wireshark filter show packet contain imsi numbersthe python simpleimsicatcherpy sniff command also used parse imsis data stream bit easier read wireshark also match imsi specific network operator brand countryconclusionyou bunch imsi number next ideally nt able anything imsi number alone problem arise associate imsi individual network operator law enforcement generally access data mass hopefully proper authorization warrant however various way private individual corporation associate imsi number well think correlation known data setsone often overlooked method mobile application apps access device imsi number android sometimes collected used serve unique user identifier imsis stored alongside name phone number email address customer database customer database commonly sold party marketing purpose course potential stolen sudden database imsi number name internet bad
128,Lobsters,mobile,Mobile Development,Android and The Art of War (2013),https://paulhammant.com/2013/05/07/android-and-the-art-of-war/,android art war,art war people process divert resource technology google trunk based development google trend cost justification elephant room via pat gibson update http see wikipedia ref yep dead microsoft phone revenue fell last quarter two year ago microsoft confirms death window phone,help feel google employed art war decided take microsoft mobile platform android course search generally ad consequence revenue targeted microsoft google needed preemptively attack microsoft protect microsoft would go buy powerset probably shopping around search definitely threat read chapter summary sun tzu art war come back going attempt match aspect google plan individual chapter art war going rollup instead aspect around weakness confrontation focusing resource diverting opponent tactic timing maneuver people process google perhaps knew efficient development practice tuned towards throughput earliest feedback including embracing change exmicrosoft people board understood difference respective way quite well google calculated term resource could win stated goal launch relevant compelling mobile o knew also would cause microsoft divert resource executive attention defend mobile technology promoting diverting resource would help towards unstated goal protecting ad revenue technology term technology google huge adeptness java might agree fact microsoft c better language java library wider ecosystem universally agreed microsoft tool framework typically much bigger installs fast moving compare visual studio intellij idea sun cutdown environment would lift gaze despite proof concept mobile arm early time google take java mobile anyway back m schizophrenic net sure whether go write o c retreat mobile desktop relevant timing aspect art war internally m suggested amount repetition redundancy term implementation obvious like office suite google perhaps knew cultureobsession ofwith reuse healthy perhaps peopleprocess aspect worth calling google sourcecontrol usage versus microsoft mentioned yesterday google trunk based development outset android knew hive team highthroughput development work microsoft probably still using source depot internally time although team beginning plan flip tfs tfs inspired source depot onetime shipment perforce m tfs back good many argue still good google trend google knew opponent temporarily weak mentioned window ce blue pocket pc redorange window mobile gold reality achieved perhaps beyond expectation android purple window phone green cost justification guess math needed work breakeven point taking googlers regular development putting android development deferred revenue protection aspect ad wolframalpha figure peremployee profitability google m happens charted minimum maximum table essence google pushed ahead period m stagnated change plan iswas capex justification android programme google back cashrich company agreeable dominant shareholder worry much elephant room course apple io elephant room google want take steve job famously angry android announcement perhaps google invested android external development since apple advantage could fork o x make io diverge ever since fact hardware manufacturing experience apple threaten ad revenue though key point tom dale suggested google getting better design faster apple getting better web service via pat gibson hope continue true even though apple device time change apple dreadful custodian made xcodeobjectivec toolchain archaic redeemed interfacebuilder update march http microsoft allegedly unbox galaxy phone store populate m eqivalent apps take google one apr turn last version window mobile ship february see wikipedia window phone new way ahead microsoft ref apr opinion piece article yep dead microsoft phone revenue fell last quarter two year ago window phone came window mobile oct itproportal others microsoft confirms death window phone rip
130,Lobsters,mobile,Mobile Development,viewport and iphone reflow,https://flak.tedunangst.com/post/viewport-and-iphone-reflow,viewport iphone reflow,web,something annoyed year web site build work quite right iphone scroll page visit link go back safari jump back top page annoying pretty much site visit seems problem yet figure wrong since barely anything support forum complaint similar bug mostly several year ago mostly solved work without explanationfinally figured seems problem iphone introduces viewport meta tag define screen dimension control whether user zoom lot site abuse point unusability determinedly stayed clear without viewport tag safari really dumbwithout viewport setting safari pick default render page fit seem fine problem leaving page coming back safari forgotten size picked pick reflow page content even though picked exactly dimension previous render result forgets scroll position reset top page sigh least determined going onso finally broke added viewport tag header required futzing cs rendered much smaller virtual canvas generally solvableanyway frustrated long time find useful information seems work posted apr tedu updated apr tagged web
131,Lobsters,mobile,Mobile Development,"Bitrise launches ASMR video tutorial series for iOS, Android, Flutter and React Native",https://blog.bitrise.io/asmr-mobile-technology-video-tutorials,bitrise launch asmr video tutorial series io android flutter react native,bitrise launch asmr video tutorial series,bitrise launch asmr video tutorial series
132,Lobsters,mobile,Mobile Development,Designing for the Librem 5,https://blogs.gnome.org/tbernard/2019/03/27/designing-for-the-librem-5/,designing librem,gnome design philosophy gnome human interface guideline design principle page simplicity focus search undo never use warning mean undo avoid preference article havoc pennington topic design process define goal pocket relevant art app store listing google play listing wallabag sketchesmockups gnome mockup template navigation new adaptive version leaflet shiny new adaptive view switcher widget plain old view switcher article list screen primary menu selection mode page gnome hig relevant hig page article screen secondary menu desktop maximum width comfortable reading hdycolumn source svg,excited librem gnome going mobile want start building app course first step design app seem quite challenging starting new platform fear blog post walk important ui pattern process going idea mockups step step throughout using readitlater app example gnome design philosophy starting design platform good familiarize design philosophy platform gnome human interface guideline design principle page encourage read entirety paraphrase highlight simplicity focus make sure clear goal app outset focus often better make separate application cover additional use case rather cramming many thing one app eg video podcasts different enough audio podcasts better app search undo large amount content app provide fulltext search make easy find thing forgiving people making mistake making hard lose data never use warning mean undo avoid preference adding option often seems like quick fix case treating symptom rather root cause better figure root cause fix problem everyone rather papering crack preference highly recommend article havoc pennington topic design process full highminded ideal let jump actual design process let design great readitlater app follow gnome design process primarily consists three step plus iteration define goal nongoals app collect relevant art ie example similar apps borrow idea make sketchesmockups main view user flow define goal app designing going native client readitlater web service pocket service allow store article web page interested time read right way catch stuff saved later time primary goal listing saved article providing great focused experience reading article app helping actually catch reading list storing article offline read without network connection nongoals ie thing scope application social feature content discovery relevant art next step find example existing apps similar thing good look people solved problem well could improved jumping designing new app let check competition pocket android screenshots pocket android lot feature pretty complicated interface lot category social feature discover section texttospeech much personally never used feature make app feel quite cluttered experience pocket also good helping get list thing already saved feel like mostly want discover new thing save read clearly lesson learned app instapaper io screenshots app store listing never used app judging screenshots instapaper ui feel lot saner focused pocket also really like rich article preview list view nice typography wallabag android screenshots google play listing wallabag selfhosted alternative pocket instapaper android client also called wallabag sophisticated uiwise good example simple native client kind service structurally apps quite similar main view list article article view display article clean readable format depending service multiple list different type article archive highlight favorite note etc keep thing simple targeting wallabag first foremost since selfhosted service going three category unread archive favorite mean application going four main screen need design three article category mentioned plus reader view display article content sketchesmockups basic idea structure app finally dive designing ui personally like starting sketch paper move inkscape detailed mockups use tool familiar need good drawing particular application find way visualize idea work using inkscape mockups might want check gnome mockup template contains common layout pattern use design looking gnomestyle symbolic icon mockups find navigation come layout interface one first thing consider navigation structure make sense type content common navigation pattern gnome apps stack view switcher sidebar list example stack navigation gnome photo stack pattern completely separate view shared ui back button go back overview photo navigating stream photo detailed view individual photo example bit friction switch view pattern also focused pattern great situation switch view lot view switcher gnome clock view switcher case small number view equally important need always easily accessible used gnome apps clock music software primary navigation desktop switcher always headerbar work new adaptive version move bottom screen mobile quite ready yet hit version libhandy near sidebar list fractal sidebar list case lot view need switch often example used fractal room list give overview room allows quick context switching course mobile enough space content pane sidebar libhandy widget called leaflet transforms sidebar list desktop stack mobile experimental branch gnome setting using hdyleaflet switch sidebar list stack navigation readitlater app need navigation switch different list unread archive favorite switch list article view former small set view want easily accessible view switcher good fit since use shiny new adaptive view switcher widget yet use plain old view switcher header bar though already design ui new switcher mind latter could either use stack sidebar list using leaflet widget work mobile since want app focused reading experience switching back forth quickly article common use case stack probably best solution mean main screen look something like quick pencil sketch layout list article screen article list screen basic navigation structure design individual screen detail three article list screen basically list different content main purpose screen provide nice legible list saved article entices people catch reading list order going comfortable layout including article title preview information article help people catch saved article also try make content interesting possible simple reversechronological list saved item quite boring noticed use often scroll list randomly discover older article potential way build core experience would show reading list randomized order show recently saved article top separate category tried mockups mockups unread archive favorite screen latter two structurally identical though course real app different content term action need expose search selection mode operation multiple element well application primary menu primary menu contains global applevel thing help preference selection mode need ability move article favorite archive delete reading list since essential functionality though design yet want learn look selection mode page gnome hig go search relevant hig page article screen article screen job pretty straightforward provide great reading experience saved article since many website kind suck regard reader mode like epiphany firefox default view whenever possible however since guarantee given article rendered perfectly need way show website native styling necessary also need way move article favorite archive delete share important action usually exposed directly header bar le important action enough space use secondary menu mockup article screen desktop know le app look like mobile desktop responsive web design design app mobile first usually pretty easy make work well larger screen case since sidebar complicated layout element main change happening larger size content column width grows window reach maximum width comfortable reading implemented wrapping content area hdycolumn view switcher also move header bar close button right side desktop mockups screen basic structure important screen application course far everything yet design login account setting empty state first run experience error search number thing wanted stick basic post perhaps could expand thing future blog post interest also worth noting mockups never final interface almost always change implementation learn use case underlying technology constraint ideally also informal user testing real people get feedback design way hope useful introduction designing apps librem gnome generally question feel free drop gnomedesign ircmatrix librem apps matrix room communitylibremapps talkpurism want play mockups made tutorial source svg
133,Lobsters,mobile,Mobile Development,A community curated list of resources about Server Side Swift,https://github.com/cak/awesome-server-side-swift,community curated list resource server side swift,join github today sign,dismiss join github today github home million developer working together host review code manage project build software together sign
134,Lobsters,mobile,Mobile Development,iOS Development Pro Tip for Private CA Usage,https://christine.website/blog/ios-development-pro-tip-for-private-ca-2019-03-22,io development pro tip private ca usage,io development pro tip private ca usage http man middle attack ala superfish contact,io development pro tip private ca usage io order get http working cert private ca another step need user io newer statistically yes matter order ensure installed profile device open setting select general select profile ensure root ca name visible profile list like staticimgiosprofilespng go level general select select certificate trust setting root installed via profile listed heading enable full trust root certificate user toggle onoff trust root staticimgioscerttrustpng please understand user potentially vulnerable http man middle attack ala superfish please ensure appropriate measure place keep signing key ca safe hope help share mastodon article posted fact circumstance may changed since publication please contact jumping conclusion something seems wrong unclear
135,Lobsters,mobile,Mobile Development,Square In-App Payments SDK for React Native,https://medium.com/square-corner-blog/square-in-app-payments-sdk-for-react-native-499520539d9a,square inapp payment sdk react native,thing understand react native development inapp payment sdk react native interface inapp payment sdk sqipcore sqipcardentry card file sqipapplepay sqipgooglepay storing card customer profile processing transaction square documentation routing navigation react navigation stack navigator order ahead example application order push beta react navigation io card entry theme need set stylesxml android,thing understand react native development inapp payment sdkreact native interface inapp payment sdksqipcore used initialize inapp payment sdk react native applicationsqipcardentry handle standard credit card form capture worth noting wanting store card file user want use interface since store card detail using digital walletssqipapplepay although fairly straightforward name interface used handling apple pay flowsqipgooglepay thing apply pay interface handling google payeach interface method initiating flow handling error user closing form completing authorization get nonce onetime use token still required backend implementation use nonce either storing card customer profile processing transaction find flow work square documentation onrouting navigationalthough vary depending library using worth explaining one use example react navigation commonly used library routing navigation react native appsyou add running npm install save reactnavigation reactnativegesturehandlerreactnative link reactnativegesturehandlerthe basic premise navigation library create central hub root react native app control screen displayed given time different type navigation library sticking stack navigator work exactly like stack data structure screen go stack user go back pop stackan order ahead example applicationin order punny show done react native inapp payment plugin created app let people pick square lego person conference also demonstrate new order push beta push square point sale po root app use createappcontainer createstacknavigator react navigation wrapping react app handling routing navigation also initialize inapp payment sdk using sqipcore componentdidmount lifecycle methodthe root order ahead applicationwe kept really simple two screen main screen display product case lego people screen checkouta lot code application dedicated styling component could blog post key part take away interact inapp payment sdknext dig checkout screen look inside componentwillmount method checkoutscreen component set io card entry theme need set stylesxml android componentwillmount method checkoutscreen componentthen create lifecycle method handling event starting credit card form flow handle getting nonce processing card detailsto break base method starting card flow onstartcardentry method oncardnoncerequestsuccess oncardentrycancel oncardentrycomplete handling different event flowoncardnoncerequestsuccess handle successfully requested nonce using inapp payment sdk send backend additional processingoncardentrycancel used handle user close card entry form filling triggering card nonce responseoncardentrycomplete used close form also used handling state update application
136,Lobsters,mobile,Mobile Development,Plasma Mobile sprint in Berlin,https://www.plasma-mobile.org/2019/03/11/Plasma-Mobile-Sprint-in-Berlin.html,plasma mobile sprint berlin,user interface documentation work kirigami tutorial infrastructure workaround application make use kirigami display favicons autocompletion search query provides download manager leave kirigami layer mobile device work packaging software management patch discover fix icon incorrectly displayed fixed issue nonmobilefriendly application recommended discover plasma mobile hwcomposer backend device hardware demonstrated plasma mobile running riscv hardware purism librem project pinephone devkit project anakin ama ask anything session reddit livetooted todo board,week february kde plasma mobile team held first ever plasma mobile sprint berlin first day collected important task planned work discussed future release project following day worked following task user interface ilya bizyaev visually refreshed plasma mobile shell brought nearer mockups meanwhile marco martin refactored simplified codebase top sliding panel making ui code simpler maintainable documentation dimitris kardarakos improved documentation make development environment setup application development easier everyone thanks work kirigami tutorial moreover instruction build qemu virgil source code substituted installation single snap package also explored new way could leverage flatpak update website debian based image ilya bizyaev helped make new documentation resource discoverable cleaning old wiki page setting redirects appropriate infrastructure sanity check plasma mobile documentation found building flatpak phone failing kde neon user edition since root cause lie qemuuserstatic binfmt configuration bionic harald sitter provided workaround issue get solved upstream application simon schmeisser worked mobile angelfish web browser make use kirigami display favicons provides autocompletion search query planning give angelfish kirigamistreamlined look marco martin patch resizing window keyboard input accepted related jonah br√ºchert added setting configuring search engine homepage linus worked kaidan xmpp messaging client plasma mobile many platform kaidan provides download manager download cache file instead downloading time start jonah merge request add emoji picker kaidan also accepted expect feature rewritten database backend soon marco matrin fixed improved many area kirigami enabling change angelfish mentioned one improvement make possible leave kirigami layer mobile device without requiring app developer add close button another kirigami also got new api customize application top bar header lot work done refactor signature columnbased navigation ui allow many new feature nicolas fella worked improving kde connect plasma mobile work went integrating setting desktop side mobile app also verified sm telephony stack nexus functional discussed idea appropriate ui camilo higuita working mauikit framework maui set apps almost year apps going shipped plasma mobile default work mostly consisted bringing apps date adding missing feature fixing bug along way also worked getting acquainted plasma mobile shell plasmoids architecture structure since plan eventually hacking shell maui apps index vvave buho nota using better modeling system allows better control content give user cleaner interface gained feature along way like content sorting file searching better editor control packaging software management jonah br√ºchert created patch discover fix icon incorrectly displayed update page made improvement new application available debian repository continuing discover aleix pol also fixed issue nonmobilefriendly application recommended discover plasma mobile aleix also made many new mobilefriendly application available kde flatpak repository bhushan shah worked improving kde neonbased image date latest change including patch better scaling plasma shell application hwcomposer backend david edmundson meanwhile bart ribbers made plasma mobile apps update available postmarketos example install use kaidan angelfish device hardware addition software work plasma mobile team also worked various hardware project sprint kde community attended fosdem demonstrated plasma mobile running riscv hardware thanks work carried alistair francis western digital sprint joined dorota czaplejewicz purism work librem project purism provided librem developer kit plasma mobile developer help dorota able bring plasma mobile kit talking fosdem sprint bart ribbers also worked bringing plasma mobile pinephone devkit project anakin excited open hardware project would like thank company working device actively collaborated community member sprint make sure everyone opinion considered carried ama ask anything session reddit bhushan also livetooted work first sprint great experience happy growing significantly project since akademy marco invited u united plasma sprint looking forward continuing work want join help u project todo board good place get started know maybe get chance welcome new developer next sprint
137,Lobsters,mobile,Mobile Development,"Converging on Convergence PureOS is Convergent, Welcome to the Future",https://puri.sm/posts/converging-on-convergence-pureos-is-convergent-welcome-to-the-future/,converging convergence pureos convergent welcome future,latest post jeremiah foster see many device one o convergence founder envisioned got universal operating system purism pureos showcasing adaptive convergent design web browser notice window subtly resizes button application header shift footer mobile friendly interface √¢ master branch gnome web adaptive design gnome purism pureos showcasing adaptive convergent development discussion fractal matrix chat program window resizes column width dynamically change preserve legible line width sidebar message view fit time point leaflet fold message view visible back button added headerbar allow navigation room list building convergence feature existing apps purism pureos showcasing adaptive convergent development password safe encrypted password storing application,director pureos purismlatest post jeremiah foster see many device one osthe two big mobile o vendor dreaming convergence laptop o mobile o long time dreaming able make application code execute operate mobile phone laptop adapting application screen size input devicespurism beating duopoly dream pureos announcing purism pureos convergent laid foundation future application run librem phone librem laptop pureos releasepurism one convergent operating system pureos google two separate one chromeos android apple two separate one macos ioswhat convergence ever app phone wanted laptop wanted convergence convergence term used describe similar functioning app across different platform many company eager software convergent brings consistent look feel well exact functionality apps run phone computerconvergence really handy since allows use apps already familiar well data already synced convergence also brings plenty benefit developer writing app testing running everywheresince ideal dream convergence already person run exact app phone laptop today turn really hard unless complete control software source code access hardware even catch need compile software phone cpu laptop cpu usually different architecture complex process often reveals assumption made software development show build truly convergent device need design convergence beginningreaching convergence one checked item list purism founder envisioned created company specifically mobile phone schematic would run ethical operating system got therethe right path get u starting operating system foundation pureos purism operating system running many different cpu architecture huge benefit often laptop need powerhungry fast cpu phone need poweraware batterysaving cpu cpu consequently designed differently different us often crosscompile software work well cpu basing pureos solid foundational operating system one solving performance runeverywhere problem year mean large set packaged software many different type cpuspurism pureos showcasing adaptive convergent design web browser notice window subtly resizes button application header shift footer mobile friendly interface√¢ example already built master branch gnome web classbased modification existing code allowing easily adjust adapt screen size input mobile desktopadaptive designmultiple architecture enough reach convergence however people know many important part getting true convergence good example problem website design space ever gone website phone tiny text scrolled phone screen know regular web page designed desktop computer always suitable smaller screen phoneweb designer toolbox design web page adjust mobile desktop order get easier readability use similar far complex practice required software apps defined purism adaptive design purism hard work creating adaptive gnome apps community joining effort well apps look great work great phone laptop combining work free software ecosystem purism contribution mean target convergence librem hardware line laptop phone mean get ecosystem community convergent apps easier maintain therefore easier secure also easier build enabling vibrant community build cool stuff free software protects privacypurism pureos showcasing adaptive convergent development discussion fractal matrix chat program window resizes column width dynamically change preserve legible line width sidebar message view fit time point leaflet fold message view visible back button added headerbar allow navigation room listbuilding convergence feature existing appsdevelopers tap convergence tool actively use contribute develop directly ecosystem created libhandy mobile adaptive presentation library gtk gnome active development packaged pureos debian already also use flatpaks simply including flatpak maniphest builderpurism pureos showcasing adaptive convergent development password safe encrypted password storing applicationwe excited provide convergence well mobile o vendor let see long take catchup thank continued support
138,Lobsters,mobile,Mobile Development,Creating a Plasma Mobile App 1 ‚Äì Basic Controls,https://nicolasfella.wordpress.com/2019/02/28/creating-a-plasma-mobile-app-1-basic-controls/,creating plasma mobile app basic control,kirigami page basic control git like,last post show create stub pythonkirigami app anything time change post filling screen control kirigami page kirigami apps typically organized page different screen app come android world think view part activity case want initial page offer enter stop destination open new page show list possible route clicking one list item open new page detailed view connection page organized pagestack page pushed popped phone topmost page shown whereas larger screen desktop tablet multiple page shown next single page phone two page next desktop let create page going put page qml file let name end page first version startpageqml look like import qtquick import qtquicklayouts import qtquickcontrols import orgkdekirigami kirigami kirigamipage title start journey produce empty page title actually see need add pagestack replace label declaration mainqml pagestackinitialpage qtresolvedurl startpageqml pagestackinitialpage well setting initial page page stack qtresolveurl converting relative url qml file absolute one starting app give u empty page time fill content basic control start page need need way enter start destination journey well date time travel start destination using simple textfields qtquick control note older version qtquick control still around foreseable future want avoid using extending startpageqml control columnlayout width parentwidth label text textfield layoutfillwidth true placeholdertext w√ºrzburg label text textfield layoutfillwidth true placeholdertext berlin columnlayout component position child vertically set wide parent page textfields shall span whole width well instead using width parentwidth using layoutfillwidth true property available child layout difference first way width already occupied element layout filled next need way enter departure date time unfortunately aware readytouse date time picker qtquick kirigami leave open future post time two simple placeholder button shall enough let add columnlayout rowlayout width parentwidth button text pick date layoutfillwidth true button text pick time layoutfillwidth true app look like button layoutfillwidth property set true resulting one getting space button look bit weird using builtin qtquick control style using plasma probably used orgkdedesktop style emulates active qt widget style force app use orgkdedesktop style running qtquickcontrolsstyle orgkdedesktop mainpy look closer desktop qt also offer material style follows android material guideline next need way press search could solve yet another button kirigami offer another way page kirigami action associated presentation differes phone desktop phone action displayed bottom easily reachable desktop displayed form toolbar top page let add action page kirigamipage id root title start journey actionsmain kirigamiaction iconname search text search ontriggered pagestackpush qtresolvedurl connectionspageqml columnlayout phone get desktop get force mobile view desktop setting qtquickcontrolsmobile variable triggering action push connectionspageqml pagestack cource need create one import qtquick import qtquicklayouts import qtquickcontrols import orgkdekirigami kirigami kirigamipage title connection right empty page going fill life next post find full source code post git happy hacking like like loading related
139,Lobsters,mobile,Mobile Development,https-server v1.0.3 released,https://mastodon.ar.al/@aral/101655758750180989,httpsserver released,,httpsserver releasedhttps sourceindiehyphatoolshttpsserverwe seamless firstrun experience across linux macos window auto auto certutil req aptyumpacmanhomebrewmacports auto port privilege nodejs auto ca auto certificate npm g httpsserver foldertoserve go http localhost see site without certificate warningswould love help testingenjoy
141,Lobsters,mobile,Mobile Development,My phone serves me 400+ ads and trackers per hour,https://raymii.org/s/blog/My_phone_serves_me_400_ads_per_hour_blokada_blocks_beats_them_all.html,phone serf ad tracker per hour,antivirus security software vendor avg say google wellbeing blokadaorg ublock origin like article consider sponsoring trying digital ocean vps link get credit day referral link adblock android blog blokada security ublockorigin,recently switched new phone year old phone stopped receiving call making time new one new phone android allowed install system wide adblocker blokada need adblocker besides seeing advertisement trackedspied every move improves battery life make device secure malicious advertisement make page apps load faster make data plan last longer page cleaner view read telling big antivirus security software vendor avg say blokada work posing local vpn filtering advertisement tracker kind nasty thing spy bring malware require root access android open source best work well big surprise three day using phone everything set transferred blokada blocked almost fivethousand advertisement tracking request request hour ad every minute would use device hour period according google wellbeing statistic three day used phone actively hour mean phone served ad tracker per active hour adstrackers served phone use went bed reset counter woke blocked request already mean even sleeping using phone used spy tracking serve advertisement blokada free open source software found blokadaorg recommend install default adblock list energized blu plus tracker list found site application work user experience would without blokada battery life still maybe even bit better desktop browser recommend ublock origin like article consider sponsoring trying digital ocean vps link get credit day referral link tag adblock android blog blokada security ublockorigin
143,Lobsters,mobile,Mobile Development,MMKV: mobile key-value storage used by WeChat,https://github.com/Tencent/MMKV,mmkv mobile keyvalue storage used wechat,ËøôÈáå efficient small easytouse android iosmacos posix mmkv android feature efficient multiprocess concurrency easytouse small handful file binary size getting started installation via maven android setup quick tutorial multiprocess access android tutorial performance benchmark mmkv iosmacos feature efficient easytouse small handful file le binary size getting started installation via cocoapods cocoapods iosmacos setup quick tutorial multiprocess access performance benchmark mmkv feature efficient multiprocess concurrency easytouse small handful file binary size getting started installation via source setup quick tutorial multiprocess access tutorial mmkv posix feature efficient multiprocess concurrency easytouse small handful file binary size getting started installation via cmake posix setup quick tutorial multiprocess access posix tutorial license licensetxt change log changelogmd contributing contributingmd tencent opensource plan code conduct faq feedback faq issue,‰∏≠ÊñáÁâàÊú¨ËØ∑ÂèÇÁúãËøôÈáå mmkv efficient small easytouse mobile keyvalue storage framework used wechat application currently available android iosmacos posix mmkv android feature efficient mmkv us mmap keep memory synced file protobuf encodedecode value making android achieve best performance multiprocess concurrency mmkv support concurrent readread readwrite access process easytouse use mmkv go change saved immediately sync apply call needed small handful file mmkv contains process lock encodedecode helper mmap logic nothing really tidy binary size mmkv add per architecture app size much le zipped apk getting started installation via maven add following line buildgradle app module dependency implementation comtencent replace available version installation option see android setup quick tutorial use mmkv go change saved immediately sync apply call needed setup mmkv app startup say application class add line public void oncreate superoncreate string rootdir mmkvinitialize systemoutprintln mmkv root rootdir mmkv global instance used directly import comtencentmmkvmmkv mmkv kv mmkvdefaultmmkv kvencode bool true boolean bvalue kvdecodebool bool kvencode int integerminvalue int ivalue kvdecodeint int kvencode string hello mmkv string str kvdecodestring string mmkv also support multiprocess access full tutorial found android tutorial performance writing random int time get chart benchmark data please refer benchmark mmkv iosmacos feature efficient mmkv us mmap keep memory synced file protobuf encodedecode value making iosmacos achieve best performance easytouse use mmkv go configuration needed change saved immediately synchronize call needed small handful file mmkv contains encodedecode helper mmap logic nothing really tidy le binary size mmkv add le per architecture app size much le zipped ipa getting started installation via cocoapods install cocoapods open terminal cd project directory run pod repo update make cocoapods aware latest available mmkv version edit podfile add pod mmkv app target run pod install open xcworkspace file generated cocoapods add import mmkvmmkvh source file done installation option see iosmacos setup quick tutorial use mmkv go configuration needed change saved immediately synchronize call needed setup mmkv app startup myapp application didfinishlaunchingwithoptions add line bool application uiapplication application didfinishlaunchingwithoptions nsdictionary launchoptions init mmkv main thread mmkv initializemmkv nil return yes mmkv global instance used directly mmkv mmkv mmkv defaultmmkv mmkv setbool yes forkey bool bool bvalue mmkv getboolforkey bool mmkv forkey ivalue mmkv mmkv setstring hello mmkv forkey string nsstring str mmkv getstringforkey string mmkv also support multiprocess access full tutorial found performance writing random int time get chart benchmark data please refer benchmark mmkv feature efficient mmkv us mmap keep memory synced file protobuf encodedecode value making window achieve best performance multiprocess concurrency mmkv support concurrent readread readwrite access process easytouse use mmkv go change saved immediately save sync call needed small handful file mmkv contains process lock encodedecode helper mmap logic nothing really tidy binary size mmkv add application size much le zipped getting started installation via source getting source code git repository git clone http githubcomtencentmmkvgit add solution add mmkv project project dependency add outdir include project cc general additional include directory add outdir project linker general additional library directory add mmkvlib project linker input additional dependency add include mmkvmmkvh source file done note mmkv compiled mtmtd runtime default project us mdmdd change mmkv setting match project cc code generation runtime library vise versa mmkv developed visual studio change platform toolset use different version visual studio installation option see setup quick tutorial use mmkv go change saved immediately sync save call needed setup mmkv app startup say main add line include mmkvmmkvh int main std wstring rootdir getyourappdocumentdir mmkv initializemmkv rootdir mmkv global instance used directly auto mmkv mmkv defaultmmkv mmkv set true bool std cout bool mmkv getbool bool std endl mmkv set std cout mmkv std endl mmkv set hello mmkv string std string result mmkv getstring string result std cout string result std endl mmkv also support multiprocess access full tutorial found tutorial mmkv posix feature efficient mmkv us mmap keep memory synced file protobuf encodedecode value making posix achieve best performance multiprocess concurrency mmkv support concurrent readread readwrite access process easytouse use mmkv go change saved immediately save sync call needed small handful file mmkv contains process lock encodedecode helper mmap logic nothing really tidy binary size mmkv add application size much le zipped getting started installation via cmake getting source code git repository git clone http githubcomtencentmmkvgit edit cmakeliststxt add line addsubdirectory mmkvposixsrc mmkv targetlinklibraries myapp mmkv add include mmkvh source file done installation option see posix setup quick tutorial use mmkv go change saved immediately sync save call needed setup mmkv app startup say main add line include mmkvh int main std string rootdir getyourappdocumentdir mmkv initializemmkv rootdir mmkv global instance used directly auto mmkv mmkv defaultmmkv mmkv set true bool std cout bool mmkv getbool bool std endl mmkv set std cout mmkv std endl mmkv set hello mmkv string std string result mmkv getstring string result std cout string result std endl mmkv also support multiprocess access full tutorial found posix tutorial license mmkv published bsd license detail check licensetxt change log check changelogmd detail change history contributing interested contributing check contributingmd also join tencent opensource plan give clarity expected member mmkv adopted code conduct defined contributor covenant widely used think articulates value well check code conduct faq feedback check faq first question nt hesitate create issue
144,Lobsters,mobile,Mobile Development,The Legacy of Firefox OS,https://medium.com/@bfrancis/the-legacy-of-firefox-os-c58ec32d94f0,legacy firefox o,story firefox o kaios kaios technology started office jiophone nokia wizphone jiophone nokia wizphone announced wizphone kaios device device rapid growth million million million third largest statcounter second place statcounter forecasting panasonic home screen released home screen stopped selling tv html sdk million servonk servonk servo transition early discussion necunos readme webian webian desktop version quantum browser runtime touch version android thing geckoview notably web app manifest service worker astian o call icewolf o twitter profile nodejs chromium electron mozilla project research development webvr firefox reality deepspeech firefox listen mozilla iot early work legacy statcounter statcounter future conclusion kaios technology panasonic stacey iot wired continuing exploration madhava enros,wrote story firefox o birth boot gecko open source software project empty github repository shipping firefox o five million device worldwide eventually transitioned community two year since mozilla announced end firefox o mozillarun project source code found way surprising number commercial product fact since mozilla moved firefox o derivative shipped order magnitude device entire time mozilla leadership gone form basis third largest fastest growing mobile operating system worldin blog post take look legacy project device buy today running code related effort still continue inside outside mozilla cover kaios panasonic home screen servonk webian astian o icewolf o latest mozilla research development explain think strong argument mozilla take active role supporting downstream user gecko future even codebase itselfkaiosprobably notable fork source code kaios kaios technology started team people since grown office france germany taiwan india brazil hong kong mainland china addition headquarters uskaios logokaios ui optimised nontouch smart feature phone physical keypad small colour screen includes hugely popular jiophone india hmd nostalgic relaunch nokia recently announced wizphone indonesia device kaios much continuing firefox o vision connecting next billion low end device aimed mainly emerging marketskaios technology ceo sebastien codeville kaios device ce jiophone extremely popular india since launch july part due given away free security deposit usd refunded returning device jio store three yearsthe jiophone released july price usd full qwerty keyboard apps facebook whatsapp youtubejiophone jiophone nokia available internationally including uk recommended retail price unlocked available many popular retailer mobile network provider including carphone warehouse curry john lewis amazon vodafone ee giffgaff btnokia nokia neat little device intuitive ui reminiscent symbian modern twist surprising much web actually work small nontouch screen though fiddly experience used touch screen smartphonethe presence google assistant feature phone price point remarkable work surprisingly well implement google assistant kaios google created custom app packaged mozapp app runtime kaios inherited running google assistantwhen first bought nokia bundled app store grand total eight apps way install web apps browser since grown little apps game jiophone come app store called jiostore apps available kaios device eg whatsapp wizphone wizphone recently announced indonesia partnership google alfamart purchased vending machine wizphone kaios devicesother device running kaios include rapid growthby end kaios shipped million phone u canada india via partnership carriersby june reached million device google made investment company part agreement kaios technology agreed bundle google service including google assistantas end reached million device across north america asia europe africaaccording statcounter end kaios third largest mobile operating system world android io market share worldwideworldwide mobile operating system market share december source statcounterin india market share beating apple io second placeindia mobile operating system market share december source statcounterstrategy analytics forecasting kaios device shipment grow year year shipment coming nonindia market africa south east asia latin america say make world fastest growing major platform panasonic home screenkaios fork panasonic first hardware vendor create firefox o based smart tv received great review user friendly design released mozilla stopped work firefox o panasonic continued development software home screen later home screen oled smart tv running home screen panasonic smart tv still running fork localised variation sold running home screen world including north america latin america europe middle east africa asia oceania range low end led uk high end oled hong kong hk notable exception u panasonic recently stopped selling tv due difficult market condition uk come across smart tv walking popular high street electronics retailer like john lewis curry argo listing online store even still refer tv powered firefox o despite official change brandingmy home screen probably bit frankenstein web native code hood point support wide range live ondemand video platform user interface remained largely samepanasonic tv running home screen panasonic tv running firefox o branded home screen branded software browser barely changed app development become much locked downwith latest html sdk based hybrid broadcast broadband tv standard developer account basically invitation applied account panasonic first wanted know app developing could decide whether wanted storethis quite contrast original firefox o tv anyone could enable developer mode anyone could submit app firefox marketplacestill major apps like netflix youtube amazon prime video already supported home screen continues provide slick compelling user experience smart tvsin total panasonic sell approximately million tv per year worldwideservonkin january tech lead kaios fabrice desr√© previously tech lead mozilla started open source project called servonk servonk kind boot servo like original boot gecko project based mozilla experimental servo rendering engineservonk running emulatorservonk running android deviceservonk take advantage cutting edge feature servo largely built rust programming language roughly follows slimmed architecture started transition towards end projectwhilst cool open source project servonk unlikely ship commercial device time soon although early discussion around shipping version necunos community edition servonk preloadedservo still experimental browser engine render majority web page web today inside mozilla work servo recently mostly focused vr application moving part servo gecko part quantum project servo currently still research projectaccording readme main motivation servonk scratch personal itch build alternative open source o encourage contribution servo outside mozilla join still surprisingly busy channel ircmozillaorg find recent discussion around servonkwebianmy webian project predated still continues crawl along learning many lesson firefox o using web standard helped create webian operating system dedicated running standardsbased web appsthe desktop version currently built experimental quantum browser runtime qbrt mozilla touch version based android thing geckoviewwebian desktop touchwebian touch running raspadthe current approach using touchbased device implement system ui android app run top android thing android thing basically special version android run single app default system ui like status bar task manager included enabling device maker full control system uiandroid thing used build range commercial smart display lenovo lg samsung though notably google home hub smart display based lightweight google cast platform using android thing build browserbased o using gecko via geckoview native system ui written java idea standard web apps discovered installed web using web app manifest service worker availablethe upside building android thing google maintains underlying o android apis full control system ui use gecko via existing wellsupported android widget layer downside probably never perform well could done hardware requires additional java layer removal one biggest benefit course android controlled googleastian osastian o logoastian o call successor firefox o spiritual fork actual derivative really desktop linux distribution love web apps based devuan fork debian astian o launchericewolf osicewolf logooriginally known pl√°nium o icewolf o see open source project started brazil according twitter profile icewolf o inspired firefox o built web technologiesafter experiment nodejs chromium electron nwjs project leader patrick lima making effort move back gecko along new firefox o inspired name unfortunately experienced gecko much harder embed due monolithic nature architecturepl√°nium osmozilla projectsmy current job working research development emerging technology department mozilla many current project emerging technology origin firefox osthe webvr effort culminating firefox reality browser first started potential new form factor firefox o vr headsetsfirefox realitydeepspeech born part vaani voice assistant firefox o may eventually used voice browser called firefox listenfirefox listen pocketthe current mozilla iot effort includes early work smart display using android thing geckoviewthings controller mozillalegacyin five year mozilla leadership around five million device shipped running firefox o since million smart feature phone million smart tv shipped running code several new software project derived inspired itaccording statcounter mobile user kaios browser firefox v mobile browser market share december source statcountertheir number show kaios browser market share overtook firefox mobile time april show sign stoppingworldwide mobile browser market share source statcounterwith current rate growth kaios corresponding decline firefox market share kaios stick gecko mozilla manage turn thing around feasible kaios could eventually become biggest consumer gecko altogetherbut kaios currently running old patched version gecko panasonic home screen running gecko latest version gecko firefox running gecko home screen running gecko technology panasonic prevented upgrading newer version gecko mozilla removed code mozillacentral code repository including gonk widget layer since significant architectural change gecko part quantum project make difficult downstream project port latest versionthis unfortunately mean legacy firefox o currently ten million phone tv across world running date browser engine probably never updated potentially put user device risk also hold back web platform wholethe futureso company next likely without support mozilla kaios forced migrate gecko google blink engine fact understand already work way support google chrome teamthe resulting architecture could look lot like androidchrome o hybrid something speculated year panasonic could use codebase move another software stack altogethera port blink huge undertaking come fruition would contribute webkitblink monoculture increasingly seeing web platform today chrome safari opera samsung internet edge bravewith opera microsoft given browser engine favour building chromiumbased browser mozilla really last groundup alternative implementation web platform hugely important without multiple interoperable implementation web standardsthere ongoing effort mozilla target new androidbased platform geckobased browser apps firetv amazon echo show vr headset well specialised browser aimed emerging market rate decline firefox market share slowing recent time competitor converging chromium code base overall mozilla market share still shrinking future gecko diversity health web platform looking little bleakconclusionssince mozilla discontinued firefox o source code found way surprising number commercial product form basis third largest fastest growing mobile operating system world however device currently running date version gecko use locked packaged app store developed behind closed door arguably great showcase open web way originally intended bei necessarily think smart feature phone smart tv would great success mozilla pursued product direction firefox o form factor necessarily best showcase capability open web however unexpected continuing legacy serve demonstrate much value still existed proven versatile scalable platformfrom low end phone tiny screen high end tv screen continued performsmart feature phone smart tv source kaios technology panasonicin personal opinion mozilla seriously consider working kaios technology reintroduce gonk widget layer mozillacentral reclaim ownership codebase kaios could use slimmed architecture local system service plan transition project adopt modern web standard installable web appsthis would enable kaios continue running uptodate version gecko million device rather move blink many employee partner might actually prefer could significantly contribute diversity health web also believe could open enormous future opportunity new product area mozilla wellthere new form factor emerging today smart display amazon echo show lenovo smart display google home hub tablet hybrid device pixel slate asus chromebook flip could great fit open weblenovo smart display source stacey iotpixel slate source wiredwith continuing exploration voice mixed reality iot many new potential product area mozilla could benefit software stacksmart display example could ideal home voicefirst trusted personal agent consistent mozilla new three year strategy whilst early smart display product built google android thing platform could option mozilla well even google used google cast google home hub product lightweight technology stack much similar could give mozilla partner edge market platform le controlled googlethere could use case vr headset smart home countless connected device yet dream uppersonally would love see mozilla emerge comfort zone fear retreated recent year shipping firefox browser others platform web always second class citizen like see new big bet product partnership web platform allowed take centre stage mozilla constrained rule platformsthe web platform mwc source madhava enrosthe web platform let allow shine
145,Lobsters,mobile,Mobile Development,Progressive Web App Progress in iOS 12.2 Beta 1,https://medium.com/dev-channel/progressive-web-app-progress-in-ios-12-2-beta-1-build-16e5181f-a18cd05ca361,progressive web app progress io beta,progressive web app progress io beta build beta release note pwa feature detector research paper research paper web share api support two checkmarks web share api level demo pwa feature detector demo outofscope link add home screen apps use losing state completely documentation sfsafariviewcontrollerconfiguration keeping state multitasking make pwas added home screen keep state webkit bug twitter lite trivago pwa related work medium query detect issue still respecting web app manifest icon icon specified web app manifest configure web application sam thorogood pwacompat io add home screen manifest io add home screen web app manifest medium capability api intersection observer experimental feature medium capability api demo pwa feature detector demo new feature lazyloading image video iframes late game version polyfill demo demo conclusion call action one heck release progressive web apps henrik joreteg positive experience htmlanchorelement download sending feedback chris dumez let u keep webkit team busy filing bug commenting existing one pwa feature detector push notification webkit bug background sync webkit bug storage estimation webkit bug fixed getusermedia webkit bug web app manifest icon webkit bug add home screen webkit bug web share target api webkit bug fixed web share api level webkit bug navigation preload api webkit bug fixed text asynchronous clipboard api webkit bug see issue file new bug update maciej stachowiak acknowledgement mike hartington maximiliano firtman max article ≈°ime vidas sam thorogood,progressive web app progress io beta build regular passionate io user strong belief web betatest new io build soon get hand main motivation see come progressive web app feature new io version come new version safari yet change safari tend almost never get highlighted io release note beta release note exception routine fire pwa feature simple testing tool described accompanying research look potential change myselfresearch paper web view analysis progressive web app feature mean web access web browser web share api support last couple release two checkmarks offline capability payment request however beta surprise present pwa feature detector tool reported web share supported web share api level defines api sharing text link content arbitrary destination user choice tested official demo worked like charm brilliant news thanks apple pwa feature detector running io beta showing support web share api left web share api action demo right outofscope link add home screen apps add app home screen io run environment called webapp far tell public documentation apple engineer alike use term refer problem far apps opened regular safari soon outofscope link clicked leading app losing state completely also see next paragraph changed link finally open something look like customized sfsafariviewcontroller however without share sheet reload button would reader mode button io programmer looking documentation sfsafariviewcontrollerconfiguration judging seen sfsafariviewcontroller used past seems userconfigurable setupoutofscope link viewed twitter lite pwa left native twitter app right reload button share sheet also reader mode button new experience leftkeeping state multitasking kept maybe biggest change end seems like work underway finally make pwas added home screen keep state context multitasking away app added home screen came back would always reload lose state completely reported issue webkit bug closed core issue webkitthis appears changing better tried new experience twitter lite started tweet multitasked different app came back find previously started tweet ready continued second example screenshot series see searching hotel trivago pwa going back home screen finally switching back app find search state preservedin many case screenshot apple multitasking ui still white screen case actually reflected last state hopefully improved future preserving state seems work sometimes always occasionally trapped within view twitter app could tap ui element even back button brought back start screen trivago app redo searchside note apps provide back button relied android systemlevel back button see related work medium query detect issue behavior mean permanently locking user always make sure provide back button first trivago pwa shown clock left switching back home screen middle finally restored state clock right still respecting web app manifest icon light shadow little icon specified web app manifest still ignored use apple oldschool way configure web application link relation outlined code sample use sam thorogood pwacompat library link rel appletouchicon href touchiconiphonepng link rel appletouchicon size href ipadpng link rel appletouchicon size href link rel appletouchicon size href little test tool called io add home screen manifest list gazillion well almost differently sized icon one io end using still safarigenerated screenshotbased oneios add home screen tool left showing io still ignores icon specified web app manifest right medium capability api intersection observer experimental feature want continue post positive note couple surprise several new apis made safari experimental webkit feature list setting app navigate safari advanced experimental feature activate want highlight medium capability api allows website make optimal decision picking medium content user api expose information decoding encoding capability given format also output capability find best match based device display tested api demo macbook pro say good go iphone x tell configuration supportedmedia capability api support forth checkmark pwa feature detector left demo right let app know medium configuration supported play smoothly power efficientother new feature second pwarelated yet still important context api added experiment intersectionobserver api essential performant lazyloading image video iframes safari really late game one desktop safari technology preview gained support version finally great api hopefully soon mobile safari graduate current experimental status longer rely polyfillwhat also new likewise exactly pwa feature input typecolor support playing demo would maybe wish longpress support granular color selection current implementation probably work well enough use case input type color action democonclusion call action concluding one heck release progressive web apps really happy apple engineer listening user feedback another example henrik joreteg recent positive experience getting htmlanchorelement download attribute added one easily create downloads dynamicallywhile admittedly time might feel like shouting forrest sending feedback help webkit engineer chris dumez put call action universally great pwa support safari user let u keep webkit team busy filing bug commenting existing one listening experimental feature included pwa feature detector make safari four checkmarks webkit team add want push notification support chime webkit bug want background sync support chime webkit bug want storage estimation support chime webkit bug fixed want getusermedia support pwas chime webkit bug want web app manifest icon pwas chime webkit bug want add home screen support pwas chime webkit bug want web share target api support chime webkit bug fixed want web share api level support file sharing chime webkit bug want navigation preload api support chime webkit bug fixed text want asynchronous clipboard api support chime webkit bug see issue file new bug duplication fine according webkit team use company email address tell need feature many io user missing outupdate apple maciej stachowiak clarified following point team would like receive feedback bug tracker acknowledgementsthere couple likeminded io beta nerd helped unearth get detail feature twitter discussion mike hartington maximiliano firtman read max article subject ≈°ime vidas sam thorogood thank
146,Lobsters,mobile,Mobile Development,600 Days of postmarketOS,https://postmarketos.org/blog/2019/01/16/600-days-of-postmarketOS/,day postmarketos,new front page booting mainline accelerated graphic connecting cellular modem free software userspace pmbootstrap aports separated pmbootstrap tool pmaportsgit pypi different alpine linux branch future substantial breakage worthy successor buildssrht sircmpwn describes martijnbraam working backend code ollieparanoid purism necuno solution craftyguy crowdfunding day managed boot postmarketos craftyguy refactored necuno solution postmarketos among puretryout ubports porting interface postmarketos puretryout ollieparanoid martijnbraam packaging phosh tab completion pmbootstrap using argcomplete longer case puretryout changing architecture sony xperia compact upgrade vendor kernel package pinoaffe block device partition zhuowei build rootfs image byte sector size packaged grate driver homepage pparent ollieparanoid wiki community postmarketos related repository moved gitlab last post fosdem bshah martijnbraam mayeulc puretryout unrznbl reddit reddit hn,postmarketos aiming ten year lifecycle smartphones see new front page short introduction new around today cover happened second half many wondering took u long write real update post project dead already nt phone call almost working happened development going continuously dead maybe little undead though like old forgotten phone trying revive really gotten closer goal getting telephony working turning phone daily driver nexus booting mainline accelerated graphic connecting cellular modem free software userspace still working audio one example device different problem however sitting idle nothing past month might think well suck get last missing piece making call place daily driver salvation androidios duopoly right see even missing functionality still proof concept something easily used daily driver making phone call nexus still requires firing terminal inputting command name obvious flaw like linux distribution need take care thing surface list housekeeping task include integrating various component one another updating software repository dealing breakage update maintaining binary package repository repairing package fail build handling incoming patch bug report feature request writing organizing documentation thing slow development especially optimized could stuck proofofconcept stage time get mean going rush telephony functionality even could done easily pretending everything around fixed later certain workflow need put place get rock solid base upon easy fun develop becoming great platform development idea beginning applied foundation postmarketos pmbootstrap development tool time take next level deploy concept distribution whole mind took one longstanding issue postmarketos architecture package building recipe aports separated pmbootstrap tool resolved pmbootstrap clone copy nowseparated pmaportsgit repository run initialization wizard first time thanks new independence linux distribution properly package pmbootstrap change also allowed u finally put pypi pip install user pmbootstrap pmbootstrap init also important stepping stone basing package different alpine linux branch future right alpine bleeding edge aptly named edge branch allows u get latest version package quickly moving target roughly month update one package cause substantial breakage throughout postmarketos developer fun situation deal typically day everything adjusted end nt need tell unacceptable would phone refused work day especially every often fix involves reinstall o therefore plan use alpine stable release future base rebasing package separate branch next alpine release roughly every six month match alpine release cycle allow u give user clear safe upgrade path current stable package branch new one ready multiple package branch mean need build package branch every cpu architecture course fun exercise without powerful automated package building infrastructure problem right cut task single machine ghz quadcore manually triggered build everything take example several hour build new plasma mobile upgrade supported architecture even though cross compiling supporting multiple branch yet prompted u start brainstorming worthy successor long discussion started buildssrht build dot sir hat mentioned since started collaborating author sircmpwn describes project flagship product srht continuous integration platform buildssrht easily capable continuous integration system available today powerful working multiple linux distribution bringing onboard platform scale automation need entire linux distribution martijnbraam working backend code start individual package build job whenever new commits land pmaportsgit come nice status page frontend link individual postmarketos package srht build job one job per package requires knowledge package need built advance ollieparanoid added pmbootstrap repomissing srht based build repository effort still work progress however already caused nice spike srht statistic triggered initial package build see image majority device running postmarketos rather old one interested packaging support new hardware well especially hardware produced free software loving company purism necuno solution next purism librem craftyguy ordered development kit back crowdfunding day september arrived week ago writing blog post managed boot postmarketos sharing much code device possible paid librem requires uboot written sd card also need another firmware file written craftyguy refactored code allow arbitrary number firmware file embedded sd card image picture see dev board booted hooked hdmi monitor last least necuno solution collaborating six alternative mobile o community postmarketos among puretryout receive one device free porting purpose possible order postmarketos preinstalled course brings back classic question device sold postmarketos name marketos premarketos prepostmarketos work clearly needed may remember canonical canceled attempt bringing ubuntu unity desktop phone called ubuntu touch life without canonical backing form ubports forked project maintain nowadays started porting interface postmarketos already done impressive amount upstreaming everything fixed along way unity boot far ubuntuapplaunch working enough application launch everything lock easily point need package actual apps well right system setting app picture meanwhile puretryout ollieparanoid martijnbraam took shot packaging phosh ui librem use default purism pureos like unity port getting ui running alpine stack hold unresolved challenge help highly appreciated always blog post get long even nt bother listing every change noteworthy one tab completion pmbootstrap work perfectly bash zsh added support using argcomplete automatically tab completion existing argparse without manual maintenance always perfect nt nice recently use binary device cpu available alpine postmarketos longer case able unleash full cpu power shortly device puretryout tested changing architecture sony xperia compact work flawlessly one tougher challenge postmarketos alpine upgrade lot vendor kernel refused compile least one device nt boot kernel compiled ended packaging sidebyside building existing kernel allowing device owner ability select gcc version used vendor kernel package device owner slowly switching since carefully testing device still boot change new default patch related added new port nt deal issue pinoaffe updated initramfs script look rootfs block device partition speaking rootfs zhuowei made possible build rootfs image byte sector size required google pixel xl two important project change nt necessarily related packaged grate driver tegra gpus wiki main page homepage based pparent excellent photo updated mobile friendly ollieparanoid document progress wiki reach community share result work together fixing flaw found optimizing postmarketos use case thanks everyone ported device see contributor section device wiki page big update blog post additional figure note merged mr closed issue open issue counted across postmarketos related repository possible github moved gitlab star fork watch included imported see last post reference fosdem start roughly two week quite people postmarketos attend bshah martijnbraam mayeulc puretryout unrznbl together folk pretty much every alternative floss mobile project looking forward seeing going mixed bag news honest still fun celebrating hacker spirit flow project thanks reading good luck whatever passion let make marvelous year overcoming obstacle fun hacking fascinating stuff reddit thread post reddit thread new homepage hn
147,Lobsters,mobile,Mobile Development,NetGuard non-root Android firewall to block internet access per app or host,https://github.com/M66B/NetGuard,netguard nonroot android firewall block internet access per app host,netguard block ad using host file compatibility faq faq work profile secure folder copperheados ipsec mcc mnc ip address frequently asked question faq use netguard netguard completely protect privacy use another vpn application using netguard use netguard android version netguard use extra battery power netguard send internet traffic external vpn server application without internet permission shown need enable google store app work vpn service restarted provide tasker plugin remove ongoing netguard entry notification screen ca nt select ok approve vpn connection request fdroid build supported application shown dimmed netguard using much memory ca nt find netguard google store app application xyz still internet access greenifyhibernate netguard doze mode affect netguard tether use android hotspot use wifi calling using netguard remove notification status bar add select read blocked traffic log google connectivity service allowed internet access default get item requested available purchase also run afwall device application configured group batterynetwork usage netguard high add profile add condition foreground vpn start add pin password protection pro feature expensive netguard stop running vpn based firewall differ iptables based firewall add schedule add wildcards permission needed get app causing device run slowly nt get notification access netguard handle incoming connection get refund application advertisement domain name blocked set allowed netguard encrypt internet traffic hide ip address netguard automatically start boot netguard block internet traffic lockdown mode translation language missing incorrect incomplete tunnel tcp connection tor network netguard connect amazon ipinfoio netguard allows internet traffic netguard use much data loading application list take long time help restore purchase ip wifi callingsmsmms work help netguard crashed solve problem parsing package dns traffic allowed add dns tl netguard block support use xdadevelopers forum thread netguard supported phone tablet device type like television car contributing attribution license gnu general public license version http wwwgnuorglicenses trademark,netguard netguard provides simple advanced way block access internet root required application address individually allowed denied access wifi andor mobile connection blocking access internet help reduce data usage save battery increase privacy netguard first free open source noroot firewall android feature simple use root required open source calling home tracking analytics actively developed supported android later supported tcpudp supported tethering supported optionally allow screen optionally block roaming optionally block system application optionally forward port also external address available installed play store optionally notify application access internet optionally record network usage per application per address optionally block ad using host file available installed play store material design theme light dark theme pro feature log outgoing traffic search filter access attempt export pcap file analyze traffic allowblock individual address per application new application notification configure netguard directly notification display network speed graph status bar notification select five additional theme light dark version noroot firewall offering feature requirement downloads certificate fingerprint cc dc usage enable firewall using switch action bar allowdeny wifimobile internet access using icon along right side application list use setting menu change blacklist mode allow setting block unwanted application list whitelist mode block setting allow favorite application list redorangeyellowamber internet access denied tealbluepurplegrey internet access allowed screenshots see compatibility way build noroot firewall android use android vpn service android nt allow chaining vpn service use netguard together vpn based application see also faq netguard used rooted device even offer feature root firewall android version especially samsung android version buggy vpn implementation result android refusing start vpn service certain circumstance like internet connectivity yet starting device incorrectly requiring manual approval vpn service starting device netguard try workaround remove error message succeeds else luck lineageos version broken android vpn implementation causing traffic blocked please see faq information netguard supported apps installed work profile secure folder samsung android vpn service often work correctly situation ca nt fixed netguard filtering mode used copperheados netguard work crash package comandroidvpndialogs removed otherwise unavailable removing package possible root permission disable package enable command adb shell pm enable user comandroidvpndialogs netguard supported phone tablet device type like television car android allow incoming connection incoming traffic android vpn service support either therefore managing incoming connection server running device supported wifi ip calling work provider us ipsec encrypt phone call sm message andor mm message unless made exception netguard provider currently tmobile verizon happy add exception provider need mcc code mnc code ip address range provider using alternative enable option disable call available since version frequently asked question faq use netguard netguard completely protect privacy use another vpn application using netguard use netguard android version netguard use extra battery power netguard send internet traffic external vpn server application without internet permission shown need enable google store app work vpn service restarted provide tasker plugin remove ongoing netguard entry notification screen ca nt select ok approve vpn connection request fdroid build supported application shown dimmed netguard using much memory ca nt find netguard google store app application xyz still internet access greenifyhibernate netguard doze mode affect netguard tether use android hotspot use wifi calling using netguard remove notification status bar add select read blocked traffic log google connectivity service allowed internet access default get item requested available purchase also run afwall device application configured group batterynetwork usage netguard high add profile add condition foreground vpn start add pin password protection pro feature expensive netguard stop running vpn based firewall differ iptables based firewall add schedule add wildcards permission needed get app causing device run slowly nt get notification access netguard handle incoming connection get refund application advertisement domain name blocked set allowed netguard encrypt internet traffic hide ip address netguard automatically start boot netguard block internet traffic lockdown mode translation language missing incorrect incomplete tunnel tcp connection tor network netguard connect amazon ipinfoio netguard allows internet traffic netguard use much data loading application list take long time help restore purchase ip wifi callingsmsmms work help netguard crashed solve problem parsing package dns traffic allowed add dns tl netguard block support question feature request bug report please use xdadevelopers forum thread support latest version netguard support thing directly related netguard support building developing thing netguard supported phone tablet device type like television car contributing building building simple install right tool native code built part android studio project expected solve build problem support building build prebuilt version netguard available translating translation language welcomed translate online language listed please send message marcel plus netguard faircode dot eu see status translation please note contributing agree license including copyright without additional term condition attribution netguard us license gnu general public license version copyright c marcel bokhorst right reserved file part netguard netguard free software redistribute andor modify term gnu general public license published free software foundation either version license discretion later version netguard distributed hope useful without warranty without even implied warranty merchantability fitness particular purpose see gnu general public license detail received copy gnu general public license along netguard see http wwwgnuorglicenses trademark android trademark google inc google play trademark google inc
148,Lobsters,mobile,Mobile Development,How NetBSD came to be shipped by Microsoft,http://fogey.com/contemplating/?p=1023,netbsd came shipped microsoft,,joe britt matt hershenson andy rubin formed danger incorporated danger developed world first recognizable smartphone danger hiptop tmobile sold first hiptop brand name sidekick october danger well developed kernel designed built house kernel came viewed core intellectual property danger started search replacement business reason mostly legal concern gnu public license danger rejected linux began consider bsd unix replacement kernel hired mike chen manager kernel development group investigate feasibility replacing danger kernel bsd kernel select version bsd use develop prototype develop plan adapting bsd danger requirement netbsd easily best choice among bsd variation time well developed cross development tool easy use netbsd desktop running intel release cross compile netbsd kernel runtime device running arm processor interested mailing list archaeology might amused investigate netbsd technical mailing list mail picovex particularly bucky katz picovex began product development specific prototype phone would become sidekick contract phone written tmobile half way two year development cycle microsoft purchased danger microsoft would preferred ship sidekick running windowsce rather netbsd schedule analysis performed another independent outside contractor indicated would result unacceptable delay
150,Lobsters,mobile,Mobile Development,Design and Develop an Android App with React Native and Publish to Google Play Store,https://developer.okta.com/blog/2018/12/26/react-native-android-play-store,design develop android app react native publish google play store,mega project list prime factorization determine interface theming react native app styled component work great react native entire page set android production environment install android studio install jdk oracle java sdk sdkman add react native cli initialize skeleton node installed version init connect android phone run emulator installed android studio note reduce output size android app conflicting configuration ndk abifilters add linting react native app eslint airbnb configuration eslint ctrl alt e cmd option e one vscode eslint fix add styled component react native styled component add custom font react native app racing sans one adjust app fullscreen android create android app component related online tutorial styling example install chathura font available google font react property touchablehighlight hacked work styled component install orbitronbold google font add color android app android oreo fixed color management android user wire button react lifting state need capture state javascript class react constructor destructures modifying state react top use class property correctly react update react native app display clear add screen android app press calculate prime factor display list react native go pulling react native app together back go back go set android app name icon new image asset stack overflow fix add authentication appauth sign free okta developer account application add application native next done login redirect uri client id reactnativeappauth redirect url alert authorize revoke launch android app play store great advice prelaunch checklist sign developer account create icon android app iconic create android application play store console create application create feature graphic pixabay one gimp save draft app release app release track app signing google play generate upload key build generate signed bundle apk apk next key store path create new next signature version finish add app permission behind scene content rating content rating content rating pricing distribution available ready publish releasing android app app release confirm pending publication note learn android react native secure user management google play store available github twitter facebook linkedin subscribe youtube channel,mobile app usage expected continue grow good time get market android far popular o worldwide dominant way get android apps phone user google play store tutorial build react native app walk everything pick design well setting react native environment tip getting editor publishing google play eventual app look like tutorial checked karan goel mega project list project inspiration building prime factorization problem take number return prime factor determine interface theming react native app outside application logic ui theming decision important make app includes control like dropdowns button well layout screen since using reactbased technology going use styled component popular lightweight approach theming react application also work great react native entire page listing component componentsystems based styled component tutorial using styled component build component set android production environment order build eventual apk format app upload store need install android studio done make sure sdk version react native us install jdk also need make sure recent java development kit installed like version installation differs depending platform use oracle java sdk use sdkman install option like openjdk add react native cli initialize skeleton next install react native command line interface make sure node installed varies depending operating system using version npm install g reactnativecli command reactnative available includes init option reactnative init primecomponents create primecomponents directory put react native project inside runnable skeleton change directory connect android phone run emulator installed android studio run project note android studio prompt open project create emulator point primecomponentsandroid directory cd primecomponents reactnative runandroid see output upload play store go androidappbuildoutputsapkdebug see appdebugapk around size reduce output size android app want make sure user smallest download possible already quite small around using command line something like expo produce even basic apps reduce http mediumcom go androidappbuildgradle change following variable true def enableseparatebuildpercpuarchitecture true def enableproguardinreleasebuilds true also remove ndk section defaultconfig removing conflicting configuration ndk abifilters error ndk abifilters rerunning reactnative runandroid see two much smaller apks output directory add linting react native app writing javascript like react requires tool ensure made obvious mistake big help beginner common eslint plugged right project editor first add linter using npm npm install eslint babeleslint one common set plugins airbnb configuration add npm install eslintconfigairbnb eslintpluginreact eslintpluginimport put following eslintrcjs need create file moduleexports extends airbnb parser babeleslint env jest true rule nousebeforedefine reactjsxfilenameextension reactproptypes commadangle globals fetch false need add plugins editor sublime eslint give output error issue ctrl alt e cmd option e mac also one vscode lot error fixed automatically using eslint fix command run editor eslint fix package add styled component react native react react native build interface using web technology ie html cs javascript one popular library use react react native styled component clean one add cs component example take look following code taken react native sample app get reactinit export default class app extends component prop render return view style stylescontainer text style styleswelcome welcome react native text text style stylesinstructions get started edit appjs text text style stylesinstructions instruction text view const style stylesheetcreate container flex justifycontent center alignitems center backgroundcolor welcome fontsize textalign center margin instruction textalign center color marginbottom declare dom element view text linking style create stylesheet later styled component would following const container styledview flex justifycontent center alignitems center backgroundcolor const welcome styledtext fontsize textalign center margin const instruction styledtext textalign center color marginbottom export default class app extends component prop render return container welcome welcome react native welcome instruction get started edit appjs instruction container cleaner portable cs name clash etc install run npm install styledcomponents root directory add custom font react native app get custom font like racing sans one application first need download ttf put assetsfonts need create directory add following packagejson rnpm asset assetsfonts finally run reactnative link command line see font inside androidappsrcmainassetsfonts able use create component folder put following inside componentsheaderjs import styled styledcomponentsnative export default styledtext color black fontfamily racingsansoneregular fontsize margintop backgroundcolor transparent textalign center import appjs add heading welcome heading text node import header componentsheader export default class app extends component prop render return view style stylescontainer header welcome header text style styleswelcome welcome react native text text style stylesinstructions get started edit appjs text text style stylesinstructions instruction text view get nicely formatted header adjust app fullscreen android get app show title bar go androidappsrcmainresvaluesstyledxml add following inside style element item name android windowfullscreen true item rerun see navigation bar gone create android app component take long time decide final design layout color font often iterative process go build final result saw start inspired related online tutorial styling example remember take time get something like change appjs following import react react import container header input keypad buttonrow component const app container header prime component header input input keypad buttonrow key buttonrow key buttonrow key buttonrow key clear go keypad container export default app see clean thing styled component header input keypad name choose surrounded container superfluous information styling happens component create component directory inside componentsindexjs put following export default input input export default container container export default header header export default keypad keypad export default button button export default buttonrow buttonrow convenience module allows importing appjs ie import container header input keypad buttonrow component otherwise import component separate line put componentscontainerjs note must use capital letter component react native import styled styledcomponentsnative export default container styledview flex simple extending view component assigning flex value one context mean take everything componentsheaderjs import styled styledcomponentsnative export default header styledtext flex fontsize fontfamily chathuraextrabold backgroundcolor rgb color gold textalign center also styled text component large centered font gold color grey background make sure install chathura font google font componentsinputjs import styled styledcomponentsnative export default input styledtext flex textalign right fontfamily audiowideregular textalignvertical center fontsize color firebrick backgroundcolor gold similar except audiowideregular font also available google font componentskeypadjs import styled styledcomponentsnative export default keypad styledview flex backgroundcolor rgb paddingtop paddingbottom also styled view essentially container like div html componentsbuttonrowjs import react react import styled styledcomponentsnative import button const rowbox styledview flex flexdirection row export default buttonrow key rowbox http keysmap key button text key key key rowbox thing get complicated importing button current directory create second creating component called rowbox exported buttonrow defined react property called key mapping key button component clean way looping array using value set text key attribute must set key attribute make dom object unique using text render button componentsbuttonjs import react react import styled styledcomponentsnative http http const buttonbox styledtouchablehighlightattrs underlaycolor flex alignitems center justifycontent center backgroundcolor rgb borderradius margin const buttontext styledtext fontsize fontfamily orbitronbold color prop propstext go green orange handlebuttonpress value export default button text buttonbox onpress handlebuttonpress buttontext text text text buttontext buttonbox last component start creating buttonbox act container whole button using touchablehighlight react native component change color touched styling normal except underlay color color see touching since need hacked work styled component next buttontext text control install orbitronbold google font color set using boolean check another great feature styled component fullcss support essentially color green text go orange otherwise next define function handle button press empty export button component combine two set text attribute buttontext using property set button styled component see set style done see app render saw top article add color android app color android emulator may always match viewing actual phone android oreo fixed color management ensure thing looked across device similar issue see using android could restrict user android right android user probably best put message somewhere thing look bit better later version wire button react basic design layout need connect button actually something start need make pressing number clear key add remove number number display need understand state react lifting state need single source truth current number displayed callback function modify parent input button since part app put app component appjs start modifying appjs converting react class current functional definition since need capture state import react react import container header input keypad buttonrow component class app extends reactcomponent render return container header prime component header input input keypad buttonrow key buttonrow key buttonrow key buttonrow key clear go keypad container export default app app javascript class render method return jsx reload emulatorapp emulator use rr still render add following render method constructor prop super prop thisstate overriding react constructor calling parent always must setting state json object one member number initialized old value add return appjs destructures state local variable change input line input statenumber input input rendered state reload see output change state constructor see changing modifying state react need tell button call function defined app class add following constructor thispress thispressbind make press function access needed called thissetstate next define press function alert button pressed press value alert value pas function button row buttonrow func thispress key buttonrow func thispress key buttonrow func thispress key buttonrow func thispress key clear go modify buttonrow take value pas created button export default buttonrow func key rowbox keysmap key button func func text key key key rowbox finally change button take function call pressed button also remove previous button handler export default button func text buttonbox onpress func text buttontext text text text buttontext buttonbox press button see alert pressed single function defined top control button use class property correctly react clean thing bit use class property initialize state react simply take constructor replace state number update react native app display number button pressed need add said number current number also clear pressed delete first change press following press value let number thisstate value clear number mathfloor number thissetstate number first pull value number state using destructuring using linter previously see preferred key clear divide number ten floor ie remove last digit set state enough make clear button work add following statement press else value go number number value thissetstate number go pressed value le one million stop somewhere phone fast add value back interpreting string instead integer set state make every button work thing left go button add screen android app go button pressed want hide keypad show progress screen need another state variable boolean add state class property ie state number processing false also add check go press function else value go thissetstate processing true create componentsprocessingjs import react react import styled styledcomponentsnative const processingbox styledtext flex fontsize textalign center textalignvertical center fontfamily orbitronbold color red backgroundcolor rgb paddingtop paddingbottom export default processingbox processing processingbox add componentsindexjs export default processing processing import top appjs import container header input keypad buttonrow processing component use processing boolean decide whether render keypad stateprocessing processing keypad buttonrow func thispress key buttonrow func thispress key buttonrow func thispress key buttonrow func thispress key clear go keypad check stateprocessing true show processing otherwise show keypad calculate prime factor simplest way break number prime factor looping number since anything greater factor check divide however number prime also check factor prime clever algorithm described start keep dividing num case add list divide anymore num addfactor num num odd start process except go square root num incrementing odd number int mathfloor mathsqrt num num addfactor num numi note use floor javascript dealing thing like square root number javascript float actually double similarly keep adding divisor factor remainder left last step check number left great must prime num addfactor num putting together shortly code need display result display list react native display list need use react native list view cast flatlist take list value object called data way render item called renderitem flatlist data key key b renderitem item text itemkey text change componentsprocessingjs following import react react import flatlist reactnative import styled styledcomponentsnative const processingbox styledview flex backgroundcolor rgb paddingtop paddingbottom const header styledtext fontsize textalign center textalignvertical center fontfamily orbitronbold color red paddingtop const item styledtext fontsize textalign center textalignvertical center fontfamily audiowideregular color firebrick export default processingbox header processing header flatlist data key key key key renderitem item item itemkey item processingbox processingbox header item combined export see following click go pulling react native app together make work app need control rendering outside change render method following export default running factor press processingbox running header processing header header finished header list data factor renderitem item item itemkey item running button func press back text back processingbox control take three variable control header shown prime factor displayed function used switch parent state function used button pressed respectively flatlist replaced list styled component control size list rendering add following processingjs const list styledflatlist flex also button control import import button move appjs change processing tag render processing running staterunning factor statefactors press thispress passing three parameter discussed first two state change state property include new value state number factor processing false running false app class put function calculating prime getprimes n const factor let num n num factorspush key num let mathfloor mathsqrt num num factorspush key num num factorspush key num return factor finally change press function get factor set state using well respond correctly back button processing screen press value let number thisstate value clear number mathfloor number thissetstate number else value go value back number number number value else number value thissetstate number else value go thissetstate processing true let factor thisgetprimes number thissetstate running false thissetstate factor else value back thissetstate processing false run app press go see list prime factor well back button take back editing number reclicking go get new list factor congrats finished app set android app name icon make thing look good deployed phone need set name icon set name androidappsrcmainresvaluesstringsxml resource string name appname prime component string resource icon best open project android studio use android directory create drawable directory asset rightclick say new image asset let import large icon overwrite iclauncher used launcher icon generating version need play store redeploy reactnative runandroid see proper name icon apps list get bundling issue next time run reactnative runandroid running android stack overflow fix work add authentication appauth authentication may missioncritical calculator often wise add app feature remain simple add feature may want give user option save calculation history share work friend feature require kind secure user management okta make simple first add new loginjs component copying buttonjs changing font size border radius margin zero background color something lighter like rgb import react react import styled styledcomponentsnative const buttonbox styledtouchablehighlightattrs underlaycolor flex alignitems center justifycontent center backgroundcolor rgb borderradius margin const buttontext styledtext fontsize fontfamily orbitronbold color orange export default login func text buttonbox onpress func text buttontext text text text buttontext buttonbox add indexjs component directory import top appjs add loggedin false app class state finally input control render put switch determine print login button stateloggedin login text logout login text login rerun project see new login button note seeing change code reflected reactnative runandroid deploy might removed internet permission androidmanifestxml react native us connect app development machine simply replace application directive usespermission android name androidpermissioninternet next need sign free okta developer account login navigate application add application select native click next choose name click done note login redirect uri theclient id since add app install reactnativeappauth link reactnative install reactnativeappauth reactnative link reactnativeappauth add following defaultconfig section android config androidappbuildgradle using base redirect url eg defaultconfig applicationid comprimecomponents manifestplaceholders appauthredirectscheme redirectbase top appjs import alert react native package authorize revoke app auth package import alert reactnative import authorize revoke reactnativeappauth define app class add config variable detail okta app const config issuer http youroktadomain clientid clientid redirecturl redirecturl additionalparameters scope openid profile email offlineaccess find value youroktadomain okta dashboard logged add accesstoken state initialization add following two function app class state accesstoken authorize async try const authstate await authorize config thissetstate loggedin true accesstoken authstateaccesstoken catch error alertalert failed log errormessage revoke async try const state await revoke config tokentorevoke stateaccesstoken sendclientid true thissetstate accesstoken loggedin false catch error alertalert failed revoke token errormessage finally add func thisauthorize attribute login button func thisrevoke logout button stateloggedin login text logout func thisrevoke login text login func thisauthorize rerun click login redirected okta login screen using login detail user attached okta application redirect back app showing logout button click logout log notice prompted log fix add login prompt additionalparameters const config additionalparameters prompt login scope openid profile email offlineaccess ensures user prompted password every time launch android app play store last step publishing done play store standard doc great advice well prelaunch checklist besides reading developer policy need sign developer account pay registration fee need create icon create icon android app easy making something unique striking well relevant app tutorial check iconic mobile app play store link free icon repository let edit create graphic like following create android application play store console open play console click create application select default language enter name click create see lot need fill store listing including least short description long description two screenshots feature graphic highres icon categorization app type category email address also need specify providing privacy policy feature graphic need something exactly get royalty free image pixabay example one though resize something like gimp make sure pixabay image free commercial use done click save draft see large green tick side panel next store listing show completed listing detail still need fill content rating form well pricing distribution although need put app release app release click app release sidebar see list track various testing phase click manage production track click create release see message using app signing google play new feature put managing key google hand reason want simple manage key lose longer able release update app fact create new one new name however note option using need generate upload key open app android studio browsing android folder react native project go build generate signed bundle apk select apk click next key store path click create new choose path like homekarlkeystoresandroidjks choose password keystore key enter certificate information note displayed app certificate click ok click next select signature version click finish build start see inside androidapprelease project one device architecture try upload apps get error saying app using permission require privacy policy react native add app permission behind scene force included must first add xmlns tool http schemasandroidcomtools manifest element androidappsrcmainandroidmanifestxml add following see previous link usespermission tool node remove android name androidpermissionreadphonestate usespermission tool node remove android name androidpermissionwriteexternalstorage usespermission tool node remove android name androidpermissionreadexternalstorage also remove alert window internet usespermission since using rebuild reupload put release note click save content rating release made enter rating information go content rating sidebar read message iarc click continue type click utility bottom questionnaire show click field click save questionnaire click calculate rating see list app rated scroll bottom click apply rating put tick next content rating thing left pricing distribution pricing distribution section also straightforward since charging app simply select available button top country column select country available select childdirected contains ad check content guideline u export law checkboxes click save draft top play console say ready publish releasing android app go app release click edit release scroll bottom click review click start rollout production click confirm app say pending publication top need wait hour google check app releasing note might worthwhile using testing release first make sure everything work release production ie everyone learn android react native secure user management congrats finished choosing designing developing android app using react native well publishing play store hope found tutorial enlightening go make something useful publish find app built blog post google play store app source code available github interested learning app design react native secure user management okta check following resource like learned today follow u twitter like u facebook check u linkedin subscribe youtube channel
151,Lobsters,mobile,Mobile Development,Wi Not Calling: Practical Privacy and Availability Attacks in Wi-Fi Calling,http://sefcom.asu.edu/publications/wi_not_calling-acsac18.pdf,wi calling practical privacy availability attack wifi calling,,obj endobj obj info rfilterflatedecodew index decodeparms size stream b r endstream endobj obj stream e
153,Lobsters,mobile,Mobile Development,How I accidentally found a clickjacking ‚Äúfeature‚Äù in Facebook,https://malfind.com/index.php/2018/12/21/how-i-accidentaly-found-clickjacking-in-facebook/,accidentally found clickjacking feature facebook,doc page update update update zdnet article http appid http examplecom http malfindcomtestpochtml,would never thought one first blog post looking bug facebook consider bounty hunter never actively looked bug focus mostly incident response forensics malware analysis surprise sharing particular story first bug report short spam campaign strange facebook feature yesterday annoying spam campaign facebook lot friend published link seemed like site hosted aws bucket link french site funny comic click right one spam link clicked link site hosted aws bucket appeared asked verify older french order access restricted content clicked button indeed redirected page funny comic lot ad however meantime link clicked appeared facebook wall possible cickjacking page looking page source spotted suspicious iframe tag smelled clickjacking frame led another aws hosted page led another end led following facebook url changed destination url obvious reason http hrefhttps examplecom localeenus link pasted browser lead typical share page window may know facebook although may need change appid removed however look response header page properly set xframeoptions deny header susceptible clickjacking attack strange suspicious iframe code trying reproduce attack every popular browser chrome chromium edge ie firefox confirmed already knew trying load specific iframe browser everytime raised xframeoptions error correct chromium behavior little bit stuck point post kept appearing facebook wall work attacker funny thing meantime attacker banned polish user site redirecting nonexistent domain polish swear word definitely polish seems targeted campaign french facebook user much traffic poland least assume simple geolocation script ban victim poland time idea figured victim use desktop browser especially even url iframe giving clue mobile subdomain launched android facebook app miraculously worked xframeoptions header totally ignored working iframe android facebook app strangely enough work tried put iframe part protected content like setting page example seems facebook inbuilt browser chose deliberately ignore xframeoptions header particular api call dug little facebook developer documentation seemed may bug feature doc page learn special parameter called mobileiframe set true share button open share dialog iframe top website option available mobile desktop seems indeed feature poorly implemented one update verification real issue connected mobile device facebook even set xframeoptions header site indeed feature also include substitute security precaution clickjacking mobile user popup confirmation ask really want share link campaign proved effective nevertheless reported facebook bug bounty program although quite sure rejected working intended want publish post without giving chance fix first ever bug report quite excited anyway expected facebook declined issue despite trying underline security implication stated clickjacking considered security issue must allow attacker somehow change state account example disable security option remove account bright side pleased reaction time swift response matter closed within hour initial report opinion fix since declined moral issue publish article maybe help better highlight problem see feature extremely easily abused attacker trick facebook user unwillingly share something wall stress enough dangerous time exploited spread spam easily think much sophisticated usage technique imagine much damage link malware document phishing site cause shared wellknown person thousand follower end trust facebook friend guru btw want reproduce little poc instruction update reddit user rightfully noticed poc fully exploitable one security precaution included facebook connected mobile device asks confirm really want share link new popup window far sure campaign author got around update according zdnet article facebook state improved clickjacking detection earlier week yesterday took full clickjacking site edge cache rebuilt work popup confirmation still appears possibly facebook improved detection mechanism introduced popup confirmation attack register new facebook publish turn create new website following html code html body iframe style margintop width height id tenframe src http appid yourappid hrefhttps examplecom localeenus scrolling iframe body html change yourappid app id publish link website facebook click link facebook app android see load iframe without issue poc also available http malfindcomtestpochtml paste facebook wall change privacy setting use one facebook test account click android app
156,Lobsters,mobile,Mobile Development,You need neither PWA nor AMP to make your website load fast,http://tonsky.me/blog/pwa/,need neither pwa amp make website load fast,need neither pwa amp make website load fast amp recently found pwa developer frequently need deploy got associated performance hardest thing computer science bad experience tinder case study verdict subscribe support patreon,need neither pwa amp make website load fast trend new revolutionary technique web basically let stuff possible decade ago amp first amp accelerated mobile page think web general failed fast google invents parallel web simply let use javascript oh let use couple googleapproved amp j component wait regular web run without javascript course regular web include custom j component bet fast netflix recently found remove kb javascript static webpage load way faster user generally happier would thought right amp needed well basically google needed lock content provider served google search needed good cover story chose promote performance solution thing web developer believe performance say reality believe hype hype old trick new name developer say finally start writing fast apps thank google like google ever stopped beforehand amp new ampimg much img might stop google really intention help releasing regular j library hype worked lot developer bought cover story rushed creating parallel version every webpage serve ampenabled performance boost hey bos let rewrite website make load fast fuck study show every second load said fuck hey bos let rewrite website amp new tech drop everything take also might care get saying practice promoted amp bad useless good practice nothing stop following regular web nothing ever stopped writing performant page inception web google hardly invented cdns async script loading nobody cared old tech good practice never tempting something branded new pwa enter pwa progressive web application apps progressive web apps whatever idea able create nativelike experience web stack web missing installing apps offline mode notification ew working background yeah basically going say thing wrong want create nativelike app using web technology use something like make sense apps like shopping list know alarm clock problem pwa well two problem first apps would better website rather apps website load resource gradually needed unlike apps fetch everything install app bundle size usually way bigger website site efficient use offline apps today onlineonly anyways call uber offline would open uber app otherwise tinder useless offline date empty chat screen join meetup meetupcom without network connection choose book hotel transfer money check account balance offline nobody want reread old cached tweet twitter yesterday photo instagram make sense yeah would prefer apps website believe benefit enjoy smaller download size especially visit site occasionally quick look enjoy website consume resource background close unloads constantly download new version library developer frequently need deploy ready sacrifice offline mode second problem pwa relevant topic somehow got associated performance thing nothing performance mean nothing new always able cache resource make navigation page quick browser pretty good efficiently fetch resource bulk even push resource server instant experience managing resource cache serviceworker seems like burden blessing http caching also declarative welltested well understood point word hard screw say serviceworker caching one two hardest thing computer science personally bad experience meetupcom pwa error cache code made whole site unusable point open meetup page unlike http easy reset nope refresh help would ok serviceworker tradeoff pay complexity fee get exciting new capability except nothing useful serviceworker http cacheajaxrestlocal storage complexity hole sink countless workhours pwa well amp even guarantee website would anywhere near fast instant kind funny tinder case study show login screen one text input one button one svg logo background gradient take second load connection mean add loader second user close bullshit immediately call fast fast fucking caring performance simple oh also serving gazillion javascript bundle rendering client react served graphql via fetch polyfill probably helped serviceworker amp landing page request mb image four form field load fast matter many new framework throw verdict verdict write fast website amp pwa still need understand performance optimization deeply without choice go hype remember neither amp pwa would magically make website faster say regular rewrite would airbnb famous index page would expect care perfwise developer average salary even sublimetext give highlighting bullshit point understand performance though notice need neither amp pwa stop bullshit web suddenly start work instantly amp invent cdn noscript pwa invent caching static web still run circle around modernday muchhyped framework user want fancyschmancy interactivity demand animation tell one thing one enjoys staring loading screen second loader animated make difference performance least pretend feature hi nikita write programming ui design subscribe also create opensource stuff fira code anybar datascript rum like want get early access article along benefit support patreon
157,Lobsters,mobile,Mobile Development,"Square + Flutter: Beautiful, fast mobile payment apps",https://medium.com/square-corner-blog/square-flutter-beautiful-fast-mobile-payment-apps-539995d2e23a,square flutter beautiful fast mobile payment apps,flutter live event collins family orchard flutter plugin square reader sdk inapp payment sign omnichannel payment try square flutter plugins today,flutter live event showed collins family orchard custom flutter app take inperson payment square collins family fourthgeneration organic family farm selling produce multiple location square year loved using square faced challenge keeping track sale location vendor moving several farmer marketsin order track produce sold location created custom branded point sale app us flutter plugin square reader sdk using locationaware app see made sale flutter collins family quickly created beautiful app integrating square hardware streamline paymentsinapp paymentstoday also announcing flutter plugin inapp payment feature require hardware customer mobile device flutter write code io android square flutter taking pain complexity building apps paymentswithin app customer enter card number use digital wallet make payment add inapp payment plugin flutter app customize look feel leave payment complexity usour inapp payment flutter plugin support popular wallet including google pay apple pay usonly early access also support card file enables safely store card postsale streamline experience future purchase together plugin make frictionfree seamless customer purchase flutter app resulting increased conversion salesyou sign get early access take payment square mobile appomnichannel paymentswith square flutter plugins online inapp inperson custom app payment report single place square seller also get advantage dedicated dispute management team fraud detection powered machine learning wherever taking payment get benefit squarewe following flutter quickly fell love combination fast development experience beautiful output many customer asking u produce flutter plugins seeing fast growth flutter knew make priority supporting carl perry general manager developer platform squaretry square flutter plugins today incredibly excited see build
158,Lobsters,mobile,Mobile Development,Fully Automated Continuous Deployment on Android with Bitrise,https://overflow.buffer.com/2018/11/29/fully-automated-continuous-deployment-on-android-with-bitrise/,fully automated continuous deployment android bitrise,tuesday thursday note wednesday deploying build play store using bitrise running scheduled build deployment note human error responsibility silo keystore distribution machine configuration cognitive load professional manually triggering release build using bitrise workflow code signing file downloader bitriseioandroidkeystoreurl bitriseapkpath pregenerated bitrise unless need use specific path environment variable suffice bitriseioandroidkeystoreurl bitriseioandroidkeystorepassword secret key bitriseioandroidkeystorealias secret key bitriseioandroidkeystoreprivatekeypassword secret key note bitriseiogoogleservicejsonurl package name apk path track user fraction rollout directory whatsnew file prodincrementalrelease betarelease scheduling release build using bitrise betarelease enlarge env variable size retrieve last commit gitcurrenttag gitcurrenttag gitlatestcommit gitlatestcommit currentcommit gitlatestcommit skipbuild skipbuild skip gitlatestcommit cachefilepath latestcommit cachefilepath gitlatestcommit generate beta tag currentvalue gitbetatag github release github release personal api token username repository url tag gitbetatag release name gitbetatag release body gitbetatag draft skipbuild skipbuild note change android version name code gitbetatag human error cognitive load machine misconfiguration responsibility silo keystore security issue,deploying mobile application tends fairly different process come web application web push update fix regularly without concern versioning time user access change almost instantly within browserwhen come mobile application thing work little bit differently first luxury instant change example need push change android application take least hour user get change device automatic update enabled process may take even longer manually download updated version whilst automate process ci service number different thing think come automatic deployment mobile application thirdparty servicewhat android team least trialling setup automated continuous deployment flow look like every tuesday thursday bitrise kick build beta branch take current version eg increment rcx value use app version value build uploaded play store beta track along release note held within whatsnewtxt file note process run commits since previously shipped commit beta trackevery wednesday bitrise kick build master branch take current version eg strip rcn representation increment minor version numberin post want take look fully automate schedule deployment process android application use bitrise ci article split two section deploying build play store using bitrise first look use github tag trigger bitrise build deployed play store process requires manual versioning tagging allows u shift responsibility building deployment developer onto ci servicerunning scheduled build deployment configured bitrise build desired apks release need add configuration versioning build process fully automated chosen schedulenote important note going using scheduling process minor release bigger feature major release scheduled still manually ship pushing tag ourselvesthe great thing step individual workflow mean still manually trigger release want way versioning handled trigger thing manually automated process continue work intendedon android team buffer always manual release process place whilst manually releasing update might classed trivial process several factor could bear mind come topic human error whatever task always room human error whether building uploading releasing update play store plenty room error maybe end building wrong branch maybe latest commits maybe forgot local change made accidentally end release build whilst may seem like obvious thing people everyone bad day change circumstance rule completelyresponsibility silo team common single person responsible release process whilst focus responsibility also creates knowledge responsibility silo process happens person vacation fall ill leaf job reason around release situation get tricky responsibility may pushed onto someone else may know release work could introduce problemskeystore distribution issue worry using google play app signing key distribution likely present even application signing key one developer machine security liability riskmachine configuration machine may change configuration multiple machine different configuration already manage build process application could end unexpected result based point single machine configuration responsible process greatly reduces mishap may happen difference configurationscognitive load finally manual build release process requires u aware update need go set aside time handle process stick plan easy get caught let get fix getting caught another task know day automating entire release process help remove cognitive load may introduced manual release processto summarise point fully automated continuous deployment allows professional practice come software development lifecycle application enables team becomes flexible focused also allows user benefit frequent update apps turn improves experience accelerates feedback loop productmanually triggering release build using bitrisethe first thing need configure bitrise ability sign release apks started automate release process decided first put place triggered release tag pushed github meant build longer needed take place machine could shift responsibility onto ci service want achieve something like setup process bitrise deploy build actually involve much beta release bitrise workflow currently look little something like see number different step required publish apk play store let look setting release workflow first need create workflow handle building deployment apk going select workflow create new workflow based existing one save u adding configuration detail againnow workflow tidy bit setting may want remove ui unit test get thing working bit quicker come actual real world use workflow though whether run test running test every single pull request never merge anything without test added passing may alright skip decide u run unit ui test every pr opened theoretically master beta branch never broken reason currently going run unit test build workflowthe next thing need give bitrise access keystore sign apk release head code signing tab top workflow editor section upload keystore file enter credential also done add new file downloader step release workflowwe configure using bitriseioandroidkeystoreurl environment variable created uploading keystore followed destination key placed step completed bitrise ability sign applicationthe next step may optional case may make use localproperties file keep api key use within application chance commit repository something bitrise access box going exact previous step localproperties file next significant step within workflow actual signing apk bitrise provides step work u need configure work correctly per image notice environment variable used bitriseapkpath pregenerated bitrise unless need use specific path environment variable suffice bitriseioandroidkeystoreurl location remote keystore download use within step bitriseioandroidkeystorepassword password keystore saved secret key within bitrise dashboard bitriseioandroidkeystorealias alias keystore saved secret key within bitrise dashboard bitriseioandroidkeystoreprivatekeypassword private key keystore saved secret key within bitrise dashboardif configured correctly bitrise sufficient information sign apk ready releasenote remove step completely opting google play app signing play console next step actual deployment apk google play console release couple detail need configure work bitriseiogoogleservicejsonurl url google service service account json file essentially give bitrise ability publish release u play store accountpackage name package name application publishingapk path path apk located using default bitrise environment variabletrack track publishing release using beta also release production perform rollouts toouser fraction wish release build using rollout option within track configuration fielddirectory whatsnew file location whatsnew file contain release note application releasefinally need begin defining trigger going use github tag mean bitrise use github webhook detect new tag pushed repository turn trigger build process neat thing use pattern recognise tag pattern trigger workflow notice use rc detect tag thats pushed beta build hence triggering betarelease workflow build patterned beta build trigger production releasewith mind prodincrementalrelease us clone betarelease workflow difference build get released production track rollout percentage update manually please scheduling release build using bitrisenow workflow used build sign deploy build google play store need workflow scheduled run given time decide displayed step need take within workflowto summarise want run workflow specified day time bitrise currently feature beta allows select day hourminute workflow run atnow want run workflow change made branch building want ship update nothing new ship change ship going store latest commit reference next time workflow run use commit compare new latest commit againnext need generate new version name number application used update application buildgradle filefinally use generated version name create new tag push tag project repositoryand push tag repository original betarelease workflow run triggered tag pushnow comparison previous workflow new workflow little le going let break difference comparison first workflow enlarge env variable size script used increase allowed size environment variable working branch commit message might get pretty large due number commits merged branch bitrise imposes default restriction size variable however increase size defining following script within given script step usrbinenv bash set ex mkdir p envman echo e envbyteslimitinkb envmanconfigsjsonretrieve last commit step need assert whether run scheduled workflow based whether previously logged commit match recent commit given branch like git fetch tag export gitcurrenttag git describe tag envman add key gitcurrenttag value gitcurrenttag filepth bitrisecachedirgitlatestcommit latestcommit f filepth echo file exist else latestcommit cat filepth envman add key gitlatestcommit value latestcommit fi currentcommit git revparse verify releasebeta latestcommit currentcommit export gitlatestcommit currentcommit envman add key skipbuild value else envman add key skipbuild value skip fi filepth bitrisecachedirgitlatestcommit echo gitlatestcommit filepth let break little bit begin fetching tag current repository followed fetching recent tag list exporting gitcurrenttag field field export environment variable make use step workflow gitcurrenttaggit fetch tag export gitcurrenttag git describe tag envman add key gitcurrenttag value gitcurrenttag next need try fetch stored commit value bitrise cache make use bitrise cache directory attempt access file labelled gitlatestcommit point file currently exist mean commit value logged would likely first time workflow run clear bitrise cache however file exist retrieve commit value cached file path export environment variable use within step workflow gitlatestcommitcachefilepath bitrisecachedirgitlatestcommit latestcommit f cachefilepath echo file exist else latestcommit cat cachefilepath envman add key gitlatestcommit value latestcommit finow stored commit value need go ahead fetch current commit branch use git command branch building save within field currentcommit next use currentcommit value along latestcommit value check equal equal want go ahead continue workflow point export current commit retrieved gitlatestcommit also clear value currently stored skipbuild environment variable variable used determine whether step within workflow run finish configuration later hand current commit latest commit value equal set skipbuild environment variable value skip finish configuration step skipping towards end section whole workflow implementedcurrentcommit git revparse verify releasebeta latestcommit currentcommit export gitlatestcommit currentcommit envman add key skipbuild value else envman add key skipbuild value skip fifinally take gitlatestcommit environment variable created write cache file located cachefilepath mean next time workflow run latestcommit value initial cachefilepath check populated gitlatestcommit valuecachefilepath bitrisecachedirgitlatestcommit echo gitlatestcommit filepth generate beta tag commit information available release go ahead generate tag release understandable application may different way configuring version name app may need tweak step accordingly example buffer publish use xxx production release xxxrcx beta release version naming probably part catch lot automated build workflow need manually configure somehow achieved within script step versionname echo gitcurrenttag newversion versionname rc newversion versionname else newversion versionname rc fi currentvalue newversion rc currentvalue currentvalue newvalue else fi name newversion rc versionname name rc newvalue export gitbetatag versionname envman add key gitbetatag value gitbetatag begin getting reference current git tag retrieved previous step set foundation current version name releaseversionname echo gitcurrenttag newversion next need handle rc suffix version name script would look bit different production release workflow begin checking current version name contains rc text leave version name assigning newversion field otherwise add rc suffix assign newversion field ready formatting rc value next step need check current release play store may supersede beta version meaning rc suffix place currentlyif versionname rc newversion versionname else newversion versionname rc finext need work current rcx value used tag workflow going used minor release need retrieve value rc string increment begin using currentvalue field accessing value appears rc string next value currently exists ie greater empty increment value otherwise default setting value used case current release production build releasing beta supersedes thatcurrentvalue newversion rc currentvalue currentvalue newvalue else fifinally need put piece together export beta tag environment variable use later begin taking newversion field generated version name strip everything rc string onwards next take name field append rc followed new numerical value calculated previous section together give u something like take value export gitbetatag environment variable use later stepname newversion rc versionname name rc newvalue export gitbetatag versionname envman add key gitbetatag value gitbetatag github release finally going make use github release step provided bitrise publish release tag repository step requires collection different value configuration see personal api token github token give bitrise ability publish release repositoryusername github username used accessing repositoryrepository url url repository want accesstag tag used release notice use gitbetatag environment variable exported previous scrip steprelease name name used release reuse gitbetatagrelease body message body used release reuse gitbetatagdraft whether release uploaded draftnow release published repository initial workflow pick tag release build sign deploy publish release google play storeskipping step commits changed start workflow brushed might want abort current workflow new commits since previously tracked one saving skipbuild environment variable either skip empty value going make use decide whether step run let take look github release step inside bitriseyml file githubrelease input username ghuser tag gitbetatag name gitbetatag body gitbetatag draft commit gitlatestcommit apitoken ghtoken runif enveq skipbuild skip notthe key last line added execution step runif enveq skipbuild skip nothere access skipbuild environment variable make use bitrise runif functionality declare step executed value variable skip actually added step one environment variable initially set save wasting build timenote important remember update whatsnew file working branch setup scheduled release well checking within play console requirement release note length long release published within play console blank updated correct release note shown within play store releasenow everything need configured workflow however updating version name need modify release workflow utilise hop back first workflow created add step altering version namechange android version name code updated version name need go ahead assign within project configuration step within bitrise allows u manipulate version name code within buildgradle file see simply need provide path buildgradle file wish modify along new versionname applied using gitbetatag environment variablephew know lot take hope see possible completely automated continuous deployment flow place remove chance human error cognitive load machine misconfiguration responsibility silo keystore security issue allowing team become flexible many anglesas noted currently starting trial process testing done far issue arise likely thing noted post may need tweaked come across issue need hand getting setup please feel free reach
159,Lobsters,mobile,Mobile Development,KDE Plasma on the Necuno Mobile,https://necunos.com/blog/necuno-solutions-and-kde-collaboration/,kde plasma necuno mobile,necuno solution kde collaboration necuno solution kde collaborate bring plasma mobile necuno mobile truly open source hardware platform kde necuno mobile kde necuno solution tanjadrca necunoscom,necuno solution kde collaboration helsinki november necuno solution kde collaborate bring plasma mobile necuno mobile truly open source hardware platform necuno solution kde announce community collaboration offer plasma mobile necuno mobile truly open source hardware platform plasma free open source graphical user interface developed kde plasma mobile platform effort bring plasma graphical user interface mobile device plasma mobile promising true open source alternative walled garden duopoly necuno solution introducing truly open source secure mobile hardware platform called necuno mobile open source mobile community looking forward device like long time device uniquely open never made privacy security user main focus necuno solution working free software community ensure hardware welcoming platform free open source operating system mobile ecosystem plasma mobile necuno solution perfect match community collaboration shared value regarding open source privacy security aim grow kde necuno solution community together attract interested early adopter developer giving everyone chance join effort kde reached far mobile ecosystem leveraging power community feel kde good position challenge duopoly future new innovative approach combine truly open source hardware truly open source operating system tanja drca chief communication officer necuno solution important developer within mobile ecosystem able work open device easy modify tweak locked vendor particular operating system necuno solution working one device ultimately help improve plasma mobile due open nature bhushan shah plasma plasma mobile developer kde kde kde international community cooperating development distribution free open source software variety platform device kde created wide range application communication work education entertainment community strong focus finding innovative solution old new problem maintaining vibrant open atmosphere experimentation necuno solution necuno solution company dedicated bringing freedom mobile world starting secure open source mobile device necuno solution root open source community first device targeted towards enterprise necuno mobile also work open source hardware platform community build upon tanja drca tanjadrca necunoscom chief communication officer necuno solution information
160,Lobsters,mobile,Mobile Development,How to Game the App Store,http://davidbarnard.com/post/180568817995/how-to-game-the-app-store,game app store,game app store app store free market app store millionaire growing anywhere close began blinded apple forest apps weather stuffing keywords spanish mexico localization io weather app admob bonus point completely hiding close button second sell user precise location data david,game app store pestering apple year publicly privately manipulation outright scam going app store apple made progress overall apple strictness area hand approach others disproportionately rewarded bad actor stifling conscientious developersas said many time app store free market apple dramatically shape app store economy similar government shape economy tax law policy apple shape app store economy app review policy app store implementation detail editorial decision app store search algorithm many subtle subtle way love see apple wield power shape app store way sustain encourage meaningful development instead continuing allow deck stacked iti know ramblings failed app developer blame apple shortcoming quite opposite app store millionaire past year provided growing family solely revenue apps apps grossed net income spend lot design share revenue partner pay apple pay self employment tax pay way much health insurance etc made millionaire anywhere close still blown away apps downloaded million people featured countless time apple mentioned everywhere indie blog ny time grossed million dollarsmy critique apple management app store began never embarassing apple denigrating employee motif want see amazing platform apple created best possibly app store incredible marketplace generated ten billion revenue empowering billion people around world amazing thing magical little computer carry around pocket think overall success app store blinded apple need various course correction year financial incentive build maintain great niche apps dry beautiful diverse forest apps app store slowly start look like unkempt play storeso let talk developer gaming app store matter future platform one tactic might seem somewhat bland individually ten thousand apps deploy multiple tactic across many category apps impact measured hundred million user likely billion dollarsi focused researching weather category past couple year working weather app weather tactic apply pretty much every category app storeso top way game app find keyword drive decent amount organic search traffic obvious one keywords like weather calculator solitaire etc keywords competitive rest tactic powerful could get away tier keyword target go app store connect name app exact keyword weather already taken apple allow duplicate app name need add symbol let go weather thing app store search algorithm give massive boost exact match user searched algorithm ignores symbol weather get huge search advantage help drive organic installs app lot hack manipulate app store search algorithm kept black hat tactic sure work anymore fun one app store search algorithm index multiple language per app store localization double keywords u app store stuffing keywords spanish mexico localization app store search app template minimize amount code write functionality app terribly important long cover basic user might expect downloading app called weather one look perfect cost io weather app admob weather data cost money trying maximize revenue cost proxy weather apps request data borrow api key happen find hear apple weather app might good place implement tricky subscription page high priced subscription price far removed sort continue trial button also hide button used close page bonus point completely hiding close button second user feel compelled tap continue button apple starting crack thing tough enforce might get lucky watch company like apalon cue user hostile apple allow subscription page need inspiration trick user full list compiled actual scam app store trigger subscription randomly app running one included list cunning worth specific mention iphone home button serf sort universal back button panicking iphone user likely hit home button trying get something unfortunately iphones touch id home button also confirm purchase payment view randomly triggered many user accidentally confirm purchase trying exitvideo sign teemo revealmobile factual firm use many want simultaneously sell user precise location data cold hard cash still baffled apple allows given stance user privacy make hay sun still display full screen ad every second andor user tap certain button app user experience horrible shocking much user tolerate money great ecpm full screen ad banner ad ad app launch randomly promote apps terrible user experience hey work app live app store start buying fake rating review one blatant violation apple rule seem penalize apps „ÉÑ pay keyword boost campaign user paid search specific keyword download app teach app store search algorithm app great match specific keyword thousand dollar rocket app top important keywords reinforced get organic downloads use custom review prompt filter user likely positively review app beg bit good measure rule app store review guideline forbids custom review prompt hard catch probably get away obvious widely used tactic gaming app store hundred experimented one explicitly rule mirror app sold last fall know powerful becumulatively apps using tactic creating billion terrible experience io user choking developer care building great experience respecting user employing tactic apps far profitable afford pay acquire user make really tough apps employing tactic compete acquiring user gaming app store search apps make nearly impossible conscientious developer get organic search traffic high volume keywordsthere absolutely way succeed app store despite know year heck lot harder bigger point writing apple shape app store economy way reward conscientious developer punish bad user experience given apple genuine concern privacy great user experience io shocked allowed app store fall prey much manipulation outright scamming icing cake apple recently featured app one notorious app store abuser apalon featuring app great carrot apple generally feature apps blatantly flaunt app store manipulation user hostile tactic carrot getting featured pale comparison much money made gaming app store well past time apple employ carrot create great experience app store use bigger stick manipulating app store creating terrible user experience apple customersdavid
161,Lobsters,mobile,Mobile Development,"Flutter: the good, the bad and the ugly",https://medium.com/asos-techblog/flutter-vs-react-native-for-ios-android-app-development-c41b4e038db9,flutter good bad ugly,flutter gallery app source code github widget catalog page good good bad ugly flutter ui drawing rendered exactly way io version also android phone hot reloading small reusable component react change state dart simple powerful complete language comparable swift kotlin java flutter dart builtin support unit testing widget testing official doc article devon carew builtin support theming see full example bonus make much easier keep aligned time notsogood flutter paint ui custom way create native component flutter wiki tomek pola≈Ñski jan reehuis list great looking ui component plugins github nowhere rich plugins find react native even xamarin available either io android debugging best official doc error screen log get layout error something else lower level confusing obscure would prefer create ui markup code feel like still defined standard almostuniversallyaccepted architectural approach video brian egan sample github article stream rxdart didier boelens post redux overall architectural review conclusion link,get sense performance look feel flutter app comparison native app download flutter gallery app play store maybe look source code github also refer widget catalog page official docsthe goodyou know movie good bad ugly right fact flutter ui drawing rather wrapper around platformspecific native component pro con pro something rendered way test iphone io example rendered exactly way io version also android phone react native xamarin ui component number property supported one platform maybe supported translated slightly different way native counterpart behind scene mean either need test lot device o version potentially write platform specific code fix situation know might look broken least different user app might even crash use attribute feature supported specific o version flutter much safer least ui part app still check app multiple device especially use third party plugins map underlying platformspecific native component case use thing like audiovideo push notification inapp billing etc negative side approach covered next section articlehot reloading useful developer dream come true editor app reloads sec sim goodbye endless build wait run wait test startover endless process reality still need rebuild change asset plugins change something navigation state initialisation logic ui change applied immediately app running apps uiheavy dedicate timei like overall principle small reusable component react change state also one react react native core idea reactive apps also developed pure io android development course easier natural flutter rn core technology rather something provided thirdparty libs implemented dozen different waysdart simple powerful complete language comparable swift kotlin java asynchronous programming asyncawaitfuture breeze also feel complete consistent say javascript flutter dart builtin support unit testing logic widget testing uiinteractions example send tap scroll gesture find child widget widget tree read text verify value widget property correct official doc good job clearly presenting available article devon carew show flutter plugin make well integrated code editori love builtin support theming every aspect app ui difficult part creating light dark theme app actually picking right colour created two could created approach term code line basically set theme property root materialapp object see full example bonus advantage crossplatform technology reality flutter still going mention creating app platform time make much easier keep aligned time traditional development process might launch platform time feature parity short realise one platform performing better term downloads sale ad revenue start cutting cost mean one partially left behindthe notsogoodalso taken watch already maybe old young like thing know say really find anything deserved stay bad ugly section list thing good least certain point view mentioned couple time already flutter paint ui custom way create native component good job replicating android material design also iosspecific component cupertino library still native hood implication io changed way segmented control uiswitch rendered flutter app us cupertinosegmentedcontrol cupertinoswitch would keep old look flutter updated rebuild one argue many user care nontechy friend care even notice example care app looking pretty enough rather whether per cent consistent o pure look feel might deal breaker purist b plan use flutter section existing app covered flutter wiki article tomek pola≈Ñski article jan reehuis might see difference native part flutter part might bother user much le problem new apps per cent flutter course c make thing easy possible dev assuming user care native look app could use materialapp us material design component compile android io work fine despite nonnative appearance fact app instead care decide use materialapp android cupertinoapp io duplicating code ui considerable part app make architecture complex consider carefully decide worthwhilehere decent list great looking ui component plugins github nowhere rich plugins find react native even xamarin probably flutter much newer smaller community thing moment choice limited many plugins old maintained maybe even work anymore current dartflutter version component especially nonui one map platformspecific feature available either io android typically support android android devs flutter io devs moment since flutter come google true however filling gap writing platformspecific code missing platform still better starting scratch thing improve sure flutter keep getting popularitydebugging best use printdebugprint statement look log use tool profile cpumemory visualise view hierarchy different planet comparison xcode android studio working native sdks option official doc correction number people reported point correct use breakpoints step code inspect variable value like javakotlin android applies android studio vscode great news error screen log get layout error something else lower level confusing obscure point line code framework maybe many level abstraction directly interact native io android error usually clearer understand typically copy paste full error google reasonably confident get useful list link tell flutter since community still relatively small muchcreating ui programmatically dart file code screen easy direct also mean much separation would prefer create ui markup code similar native android apps separate fileson android vast majority developer use clean architecture mvp modelviewpresenter io mvc mvvm modelviewviewmodel viper case even android clear well known architectural pattern proven work well large apps flutter react native well feel like still defined standard almostuniversallyaccepted architectural approach article show simple sample normal still need take people onboard talking advanced aspect however plan use flutter rather large project would preferable clear idea structure scalable easily maintainable app grows size complexity highly recommend watching video brian egan start looking deeper cover layering code redux testing checking sample github also recommended article stream rxdart didier boelens post redux overall architectural review definitely saying flutter allow build apps clean maintainable architecture trial error experimentation study involved something mature widely used accustomed native iosandroid appsconclusionsi could almost copy paste wrote last year react native instead link summarise lot potential easy get started actually create something real many good principle idea however community still small bit piece missing term crossplatform plugins much choice best case also must ok fact per cent nativelooking ui want least close possible io android code structure get complexpersonally think useful technology already use situation must quick possible reach widest user base possible say startup starting scratch want release platform see traction one invest polish thing etc could see advanced prototype polished later still staying flutter replaced native version dedicated teamthe ui biggest concern anyway example apps want lineofbusiness app employeescustomers use type device concerned consistent everything else o ecosystem groupon app merchant end user examplewhat say closing creating first simple app enjoyable part even though developed quite io android native apps past sure took le time create one flutter albeit started knowledge would taken create two separate native apps bad say
162,Lobsters,mobile,Mobile Development,Unfixed spoofing vulnerability in Google Inbox mobile apps,https://twitter.com/sephr/status/1064962729889288192,unfixed spoofing vulnerability google inbox mobile apps,,detected javascript disabled browser would like proceed legacy twitter yes
163,Lobsters,mobile,Mobile Development,Why I'm Ditching Android,https://kevq.uk/why-im-ditching-android/,ditching android,degoogling life thing replace massive fail google ad vortex digital content next paper summary paper bleeping computer bloatware notification iphone se conclusion ditched android ditched io let know thought,regular reader blog know went process degoogling life ago part think process pretty successful however thing replacefast forward year lot trial error ready take next step removing google life ditching androidfirst tried ditch smartphone completely massive fail tried replacing android lineage o old phone whilst meant google apps device still android underneath also many apps kept complaining google service device got old quickso last night decided ditching android completely ordered apple iphone se probably think jumped frying pan fire let explain rationale behind google ad vortexunless living rock last decade sure probably aware google business model based around advertising make money lot service free producton hand apple business model based around hardware yes hardware grossly overpriced flagship android phone pretty much inline apple day moot point reallybecause google make money advertising best interest get much information possible need look recent digital content next paper proved android sends data back google apple doeshere good summary paper bleeping computer bothered reading pagesbloatwareandroid vendor almost bad window come bundling additional application device almost meme point least window uninstall bloatware bloatware android device used year removed marked system appsand want remove google proprietary apps like google drive google search google photo forget system apps uninstalledthe also true io certain degree however android much prevalent use hicare huawei weather huawei music let bloody remove notificationsin last update received android around month ago new battery saving measure implemented whilst battery life huawei really good done something funky notificationsi hardly ever get notification email calendar event social medium etc assume battery saving measure kill background process apps carry background task like checking new emaili tried work around using battery optimisation setting android get work number occasion missed important email phone decides want notify mewhy iphone se gon na flip apple get latest device right well one pet hate phone day sheer size basically tablet pocket want phonethe iphone se actually phone sized device cheap still supported apple seemed like nobrainer give tryconclusioni doubt issue flipping iphone se already ipad whilst perfect solution ditching android favour io another step towards getting rid googlei never going completely get rid google impossible point think right decision se get delivered week post update month use let guy know getting onhave ditched android ditched io let know thought
165,Lobsters,mobile,Mobile Development,Sailfish 3 is here,https://blog.jolla.com/sailfish3/,sailfish,sailfish national park lemmenjoki sony product page helsinki berlin,october sami pienim√§ki happy share today released first sailfish software release made available sailfish user jolla device sailfish x sailfish o matured third generation sailfish fully packetizes offering multitude corporate solution line regional licensing strategy sailfish deeper level security making solid option various corporate organizational solution use case new enhanced feature include eg mobile device management mdm fully integrated vpn solution enterprise wifi data encryption better faster performance daily user sailfish brings essentially better performance deepened security smoother user experience sailfish also better equipped offer full support regional infrastructure including steady release o upgrade local hosting training flexible feature set support specific customer need sailfish next step noted earlier sailfish rolled phase thus many feature deployed several software release first phase sailfish available early access version starting today sailfish named legendary national park lemmenjoki northern lapland always aimed respecting finnish root naming software version previously covered lake river set explore beautiful national park early access release today expect roll release customer week next release early december addition security corporate feature mentioned user experience highlight sailfish new top menu quick setting shortcut accessed anywhere light ambience new fresh look sailfish o data encryption memory card encryption available device file system encryption coming next release new keyboard gesture quickly change keyboard layout one swipe usb onthego storage connect different kind external storage device camera improvement new lock screen camera roll allows review photo took without unlocking device achieve much better ui performance sailfish thanks rewritten way launch apps load view start enjoy faster sailfish already release upcoming major qt upgrade improve responsiveness performance resulting better overall performance sailfish x community program update next week november introduce sailfish x support various sony xperia model sony xperia device great hardware addition sailfish x program happy share start support product variant beginning including single dual sim model variant choose see product detail sony product page trust enjoy sailfish hope see many upcoming celebration event helsinki berlin make person also live stream available event share link social medium channel let sail even together sami
166,Lobsters,mobile,Mobile Development,OsmoCon 2018,https://media.ccc.de/b/conferences/osmocon/2018,osmocon,,podcast feed
167,Lobsters,mobile,Mobile Development,"Librem 5 general development report ‚Äî October 15th, 2018",https://puri.sm/posts/librem5-progress-report-21/,librem general development report october,latest post heather ellsworth see conference libre application summit talk given librem xdc wlroots pengutronix design software work image built pureos base distro sshd host key generation script added building image phosh phosh standardizing po header initial app switcher added touch based application switching added top panel cleaned first release version phosh tagged gnome setting gnome setting started ported gnomesessiongnomesettingsdaemon fixed initial wwan plugin added image wlrootskeyboard virtboard display scaling issue process upstreamed fixed issue affecting virtual keyboard gtk patch issue tag generation fixed submitted upstream call call gtk inspector opened call flatpak debian package modemmanager created gemalto modem partial ui overhaul libhandy libhandy hdytitlebar widget added hdyheadergroup widget added hdyleaflet got added fold property libhandy example application updated styling fix libhandy released uploaded debian unstable released podcasts gtk selectionmode separator styling issue look separator improved got merged upstream serial number textinput alive needed keyboard guido gunther blog post gtk application id upower upower several upstream documentation improvement added contact adaptive fork contact separator styling fix size requirement fix app menu online account shortcut messaging chatty kernelmesaetnavivlibdrm patch sent upstream kernel mostly work enabled debian libdrm added upstreamed mesa tree improved proposed addressed fractal hardware work community outreach jenkins job build necessary plasma package developer documentation updated gtk documentation public zanata instance phosh project available zanata,latest post heather ellsworth see hi everyone phew busy exciting time last several week fairly detailed summary progress made various piece librem projectconferencesin person collaboration taken place different way hackfest germany many librem team member got together hack work bond libre application summit also attended talk given librem also great one developer able attend xdc fruitful discussion wlroots pengutronix folksdesignthe software design continues improve developer look strive latest design software workimagesthe image still built based debian buster built pureos base distro also clean cruft image sshd host key generation script added image mass dependency moved packageas dev kit phone based imx som board much work gone bringing kernel building image future boardsphoshin phosh many bug fixed code cleaned also effort gone towards translation updating german french translation well standardizing po header hopefully make le confusing new translatorsan initial app switcher added initial touch based application switching addedthe top panel cleaned make look nicer well matching design mockups bit better enough first release version phosh tagged gnome settingsthe gnome setting application started ported librem continues worked ongnomesessiongnomesettingsdaemonan upstream issue around starting gnomesession debugging enabled fixedthere plugin work well initial wwan plugin proposed upstream handle sim card pin unlockthis patched gnomesettings daemon added image upstreamed sim unlock stuff proposed upstream added image time beingwlrootskeyboardsome major improvement gone virtboard recently among many bug fixed notable one display scaling issue corrected significant glue added virtboard process upstreamed virtboard pop start default image keyboard improved behave expectedsimilarly change upstreamed wlroots gtk addition already mentioned fixed issue affecting virtual keyboard gtk important cursor movement treated relative surface screen made patch also issue tag generation fixed submitted upstreamcallsthe call application also seen lot progress recently many bug fix audio work ongoing makeover ui gtk inspector opened call flatpakto prepare dev kit qmiderived modemmanager driver simcom modem completed mix qmi audio streaming command add call audio support debian package modemmanager created contains call audio patchessince modem used actual phone may different dev kit initial testing begun gemalto modemsalso partial ui overhaul call application done exciting ui change come new daemon written ferry audio data modem pulseaudio daemon integrated image build run startuplibhandythe libhandy library also seen quite bit change since last progress report besides many minor bug fixed couple widget added hdytitlebar widget added workaround titlebar glitch hdyheadergroup widget added automatically update header bar existing hdyleaflet got added fold property assist community playing libhandy libhandy example application updated styling fix toolibhandy released uploaded debian unstable newer version released tooit really exciting start see libhandy used wild podcasts first thirdparty app ship libhandy short video demonstrating libhandy progress current behaviorgtkour close collaboration gtk team led number change separator among thing selectionmode separator styling issue reported look separator improved separating two header bar selection mode additional adwaita fix around separator titlebar issue simplifying setting selection mode got merged upstreamother fix documentation change made upstream example fix included upstream around serial number textinput alive needed keyboard read take look guido gunther blog post gtk application id likely helpful planning write flatpak application librem good candidate api program might want use eg extract battery information several upstream documentation improvement addedcontactsthe contact application need made adaptive using libhandy checkout adaptive fork contact change submitted upstream eventually longer need fork simple√¢ separator styling fix simple size requirement fix submitted upstream app menu online account shortcut needed moved wellmessagingthe chatty application new addition change also chatty built flatpak toothe bubblechat view turned widget basic version msglist widget finished included libhandy soon gtk change needed present libpurple conversation separate chatlists buddy list working libpurple plugin tested message logging sqlite database order useful require replacing libpurple logging function custom loggingsubsystem support handling sm sendreports work done parser purple logfiles chat history loaded msgbubbles parser purple logfiles tentative solution provide chat history messageview time beingwe currently working accountsmanagement setupscreens introduced registering xmpp account enablingdisabling separately work also done blist ui formatting list entry round icon switching font bold unread message available added timestamp make look nicerkernelmesaetnavivlibdrmas mentioned earlier newer cpu imx dev kit phone versus started tinkering imx incidentally large effort towards bringing newer kernel imx cpu well work done etnaviv mesa progress highlightssince dev kit phone usb typec power delivery patch sent upstream kernel support thisetnaviv mostly work drm layer etnaviv enabled debian libdrm offset sensitive state added etnaviv avoid warning patch upstreamed allow command parser workour mesa tree available anyone look patch merged upstream build mesa improved patch r alignment check proposed uncached mapping issue addressedwe would like thank etnaviv maintainer linux kernel libdrm mesa support since building heavily already big help upstreaming patchesfractalsince also investing fractal endtoend encryption effort exciting report module development support basic functionality could already start working integrating still plenty work done getting therehardware workour hardware engineer nicole working closely team assembling dev kit final prototype manufacturing file prototype fabrication assembly drawing kicad sent assembly team nicole traveled carlsbad california assist building assembling testing small print run dev kit prototype verify soundness electronics design hiccup like component lost mail needed reacquired obstacle overcome thus far assuming go well testing prototype full print run final dev kit shipped backer begin shortlycommunity outreachthe librem team continues work plasma team working towards building plasma image used dev kit currently jenkins job build necessary plasma package plasma team member working u fix failuresthe developer documentation seen updated gtk documentation new code examplesince received offer help translating part o begun use public zanata instance enable community contribute translation currently phosh project available zanata translation contribution project libhandy call chatty virtboard added soona big thanks go external team helped review merge change upstream project time contribution much appreciated folk stay tuned exciting update come
170,Lobsters,mobile,Mobile Development,Manyverse mobile scuttlebutt client,https://www.manyver.se/,manyverse mobile scuttlebutt client,familiar yet radically new data live entirely phone syncs latest update directly,familiar yet radically newmanyverse social network mobile app feature would expect post thread like profile etc running cloud owned company instead friend post social data live entirely phone way even offline scroll read anything even write post like content phone back online syncs latest update directly friend phone shared local wifi internet building free open source project community effort believe noncommercial neutral fair mobile communication everyone
171,Lobsters,mobile,Mobile Development,Flutter Release Preview 2: Pixel-Perfect on iOS,https://developers.googleblog.com/2018/09/flutter-release-preview-2-pixel-perfect.html,flutter release preview pixelperfect io,flutter release preview beta release release preview new release preview pixelperfect io apps apple interface guideline extensive library widget class built flutter documentation visual widget catalog medium article reduction application package size minimal flutter app io package built growing momentum android io android io android io android io recent survey dart programming language stackoverflow day one getting started upgrade flutterio fluttersamples curated list sample handson video newsletter community article developer show discussion group chat room community support weekly online hangout,posted flutter team google flutter google new mobile app toolkit crafting beautiful native interface io android record time today keynote google developer day shanghai announcing flutter release preview last major milestone flutter release continues work completing core scenario improving quality beginning initial beta release february availability first release preview earlier summer team fully focused completing release new release preview theme release pixelperfect io apps designed flutter highly branddriven tailored experience mind heard feedback wanted build application closely follow apple interface guideline release greatly expanded support cupertino themed control flutter extensive library widget class make easier ever build io mind reproduction io setting home page built flutter new iosthemed widget added flutter release preview updated ever flutter documentation place go detailed information cupertino class note time writing still working add new cupertino widget visual widget catalog made progress complete scenario also taking look hood support added executing dart code background even application suspended plugin author take advantage create new plugins execute code upon event triggered firing timer receipt location update detailed introduction read medium article demonstrates use background execution create geofencing plugin another improvement reduction application package size android io minimal flutter app android weighs built release mode saving since started effort continuing identify potential optimization note improvement affect io android may see different result io io package built video growing momentum many new developer continue discover flutter humbled note flutter one top active software repository github declared flutter production ready google io year flutter getting ever closer stable release many new flutter application released thousand flutterbased apps already appearing apple google play store include largest application planet usage alibaba android io tencent android io google ad android io video alibaba used flutter build xianyu app android io currently used million customer china video take customer satisfaction seriously regularly survey user promised share result back community recent survey show developer satisfied satisfied flutter would recommend flutter others come fast development beautiful uis found flutter extremely helpful helpful reaching maximum engineering velocity implementing ideal ui flutter developer satisfied satisfied dart programming language recently celebrated hitting release milestone dart flutter strong community growth felt way stackoverflow see fast growing interest flutter lot new question posted answered viewed chart show number stackoverflow question view tagged four popular ui framework time flutter open source day one design goal transparent progress encourage contribution individual company share desire see beautiful user experience platform getting started upgrade flutter release preview beta channel already take one command flutter upgrade check release preview installed running flutter version command line version later everything described post nt tried flutter yet perfect time flutterio detail download flutter get started first app ready whole ecosystem example apps code snippet help get going find sample flutter team fluttersamples repo github covering thing like use material cupertino approach deserializing data encoded json also curated list sample link best example created flutter community also learn stay date flutter handson video newsletter community article developer show discussion group chat room community support weekly online hangout available help along way build application release preview last release preview next stop
172,Lobsters,mobile,Mobile Development,How to design for thumbs in the Era of Huge Screens (2014),http://scotthurff.com/posts/how-to-design-for-thumbs-in-the-era-of-huge-screens,design thumb era huge screen,apple announced sold preorders adobe mobile benchmark report cursory examination range designing thumb study mobile expert steve hoober conducted created luke wroblewski thumb zone choking reachability john gruber mean download updated thumb zone template download thumb zone template tweet one click,year resistance apple iphone announcement last week officially signaled dawn era huge screen going crash existence big way monday apple announced sold four million preorders phone opening night preorders one night sold almost half sold entire opening weekend last year iphone looking like screen yore start inevitable decline quickly mean u gotten comfortable building apps responsive site mobileoptimized web view old way mind learning included decline already motion adobe mobile benchmark report claim mobile browsing among phone screen smaller mean learning design thumb important ever luckily help phone display size going practically universal cursory examination popular android screen size point range apple change make life easier smaller screen size die learn adapt design future going pretty painful thumb especially important u building io apps design tradeoff thought never worry suddenly right front u avalanche preorders apple tv ad entitled thumb designing thumb mean design thumb mean building interface comfortable use within thumb natural sweeping arc get complicated unconsciously adjust way hold phone reach certain control various area screen given day wager stretch grip choke phone angle way make reaching difficult area easier start somewhere research suggests u hold phone following way bottom thumb anchored lowerrighthand corner assumption come study mobile expert steve hoober conducted people early last year discovered people held phone following way one handed cradled two handed handedness figure also instructive right thumb screen left thumb screen hoober note lefthandedness figure population around observed higher rate lefthanded use could correlated people thing time smoking riding bike drinking coffee eating currywurst etc created luke wroblewski thumb zone thumb zone heat map sort best guess easy thumb tap area phone screen let use hoober research create thumb zone map representing seems common use case onehanded use right thumb screen thumb anchored lowerrighthand corner thumb zone heat map applied every iphone display size since direct comparison iphone iphone plus next notice safe green zone stay roughly iphone plus different second thumb magically scale screen size also unfortunate loved dhalsim street fighter kid change sheer amount ow space becomes startlingly apparent iphone plus furthermore notice shape natural zone change iphone plus requires different type grip due size using pinkie finger stabilizer surprised different experience note thumb reach fully across phone screen maybe bigger hand term condition certainly apply choking let analyze thumb zone change shift grip sometimes might situation easier tap phone thumb anchor vertical midpoint illustration action iphone iphone plus notice iphone plus actually gain natural thumb space screen size comparison iphone run real estate reachability choking might necessary though io reachability feature apple take opportunity teach people existence doubletapping home button clicking display running apps io push top screen within one grasp demo reachability reachability look thumb zone overlaid iphone plus notice anything yes apple demonstration image place thumb exactly natural zone another observation reachability pointed john gruber reachability plus move thing display percentagewise moving top display typical thumb length bottom device action mean mobile screen size whole becoming similar good thing also mean treat screen range simply scaledup version smaller phone grip completely change interface might need well think prototyping become even important jumped train time p launching xcode designer next week teach designer build interactive prototype xcode le week chockfull video really great prelaunch discount running right get list interested download updated thumb zone template want copy thumb zone diagram drew screenshots luck download individual jpgs download thumb zone template hopefully help current project got value grateful shared tweet one click
173,Lobsters,mobile,Mobile Development,Putting a Finger on Our Phone Obsession,https://blog.dscout.com/mobile-touches,putting finger phone obsession,q often touch phone oh time day emotionally people nerd mobile session day dscout free copy report covered many time day user interact phone many session day people use phone time day people touch phone phone locked many apps people actually using apps touched app type generate touch others often touch anything made google facebook apps use together session people care much use phone good use people time q many time day user interact phone people tapped swiped clicked whopping time day average back index q many separate time day people actually pick mobile phone use average user engaged separate phone session day heavy user top averaged session day back index q time day people use phone activity drop far disappears predawn hour touch explode ramping almost continuously dinner time back index q use phone without even unlocking count right course calorie counting last donut nearly half user session locked phone give human opportunity distraction take back index q apps phone count many apps people actually using many touch apps receiving half active phone session used one app back index q one app per session let yes facebook total number touch app racked finger time native messaging even home screen back index q apps touchier others given facebook win touch google win session expected social medium search take touch per session prize back index q often touch anything made google facebook nearly half touch guided apps made alphabet zuckerberg half split among apps textra back index q use tinder netflix together wish knew two apps plus okcupid highest use time period hour school work prime time back index q people give sh tapping one two million time year really according scout learning level phone use stunning back index touch well spent shareable version report,q often touch phone oh time day know life since apple launched iphone nearly ten year ago little screen always pocket backpack nightstand u u feel pull hard dimensionalize much really attached phone physically people nerd dscout research team exists understand pull first dug discovered dearth good data pundit long tossed statistic often use phone pretty much everyone reference kleiner perkins report citing mobile session often number taken context decided dig data dscout webbased research platform pair smartphone app capture inthemoment behavior study recruited demographically diverse sample android user pool participant built supplementary smartphone tool track every user interaction across day hour day every interaction mean every tap type swipe click calling touch like greek tragedy learned simultaneously expected little bit sad follows insight help better understand intensity mobile life user live brand product strategy become part study conducted additional takeaway download free copy report covered click jump question answer scroll read top bottom many time day user interact phone many session day people use phone time day people touch phone phone locked many apps people actually using apps touched app type generate touch others often touch anything made google facebook apps use together session people care much use phone good use people time measured designed study scout day end scout participated day remainder participated day q many time day user interact phone people tapped swiped clicked whopping time day average heaviest top interaction doubled touch day per year nearly million touch million le restrained among u definitely letting finger walking marathon tap swipe feel small tiny fraction brain power physical effort volume interaction become onerous load phone screen time hour average user hour heavy user time spent everything typing text swiping tinder turning kindle page scrolling facebook back index q many separate time day people actually pick mobile phone use average user engaged separate phone session day heavy user top averaged session day necessarily glued phone long period like rep day fiveounce dumbbell long usage session netflix reading general people prefer lot little session break back index q time day people use phone activity drop far disappears predawn hour touch explode ramping almost continuously dinner time happens dinner simply switching new screen chart show people tend put phone bedtime also found average scout getting tap two even fact course fiveday study participant checked phone least midnight finger never sleep back index q use phone without even unlocking count right course calorie counting last donut nearly half user session locked phone track user clicked phone sleep state capture click tap made locked phone phone password user still conduct many activity review notification check time change volume skip song etc whopping average daily touch actually lowball figure lockedphone interaction perhaps ocd maybe plain pavlovian phone must check phone whew better see phone must check phone ah message good phone must check phone worth constant interruption u notice brief give human opportunity distraction take back index q apps phone count many apps people actually using many touch apps receiving half active phone session used one app together scout used different apps day half time picked phone finger one destination session use single app app particular one per session another time people used two three apps engagement narrow focused much multitasking hop pick obsession stick back index q one app per session let yes facebook total number touch app racked finger time native messaging even home screen overall nothing get finger moving like communication outweighed information gathering messaging social medium unshaded graphic apps totaled interaction respectively internet search browser comprised facebook native messaging home screen chrome came distant fourth combine chrome google apps sure hard one chosen downloaded app store even harder design experience hold facebook popular apps world app banking mobile mirror fall quickly longtail back index q apps touchier others given facebook win touch google win session expected social medium search take touch per session prize gaming course social medium search finger like linger shopping apps even touchiest shopping app etsy followed groupon general apps lacking many touch also lacked exception browser chrome specifically lot session many touch go get looking get back index q often touch anything made google facebook nearly half touch guided apps made alphabet zuckerberg half split among apps facebook inc dominated top ten four big apps facebook instagram messenger sapp facebook app alone recorded interaction application service alphabet youtube chrome gmail second note particular study conducted exclusively android phone apple present independent app crack top textra course dscout unicorn alert also app every participant recorded qualitative research response back index q use tinder netflix together wish knew two apps plus okcupid highest use time period hour school work prime time day search message facebook repeat sun set chill swipe netflix complemented competing tinder okcupid probably neither wonder apps competing share based different time day back index q people give sh tapping one two million time year really according scout learning level phone use stunning accurately estimated frequently would tap swipe click fact scout underestimated phone long shot participant reaction hard number actual phone use typically started five second shock ended wholehearted meh admitted shallow desire intent change behavior back index touch well spent highly concentrated highly tactile interaction good bad time well spent know scratching surface touch love incorporate question next round research topic question thinking physical interaction pattern supplanted voice interaction new apps gain share thumb turning voice mile affect shift autonomous automobile people clearly interested phone car phone replacement human socialization computer replacement job next behind touch tap question tell u comment want shareable version report dig data additional research contribution jess mon
174,Lobsters,mobile,Mobile Development,Evolving mobile architecture at Reddit,http://redditblog.com/2018/09/12/evolving-mobile-architecture-at-reddit/,evolving mobile architecture reddit,setting stage illustrating problem going modelviewpresenter breaking massive view controller thinking mvp improved flexibility maintainability comprehensibility free change view layer implementation unit testing critical examination mvp reddit summary future work,andrew rohn first series architectural work reddit io app first part discus work done closer ui particular discus move modelviewpresenter mvp architecture improved code flexibility comprehensibility maintainability future growth faster iteration unlocked butterysmooth improvement scroll performance encouraged unit testing increased test count handful clarity high level diagram layered architecture ended focusing view presenter layer first post high level layered architecture ended setting stage year ago published building feed reddit io app discussed built performant extensible feed admirable crashfree session rate explained application modelviewcontroller mvc architecture creating abstraction fetching paginated feed data fast forward today reddit grown continues grow organization product consequently reddit io app placed heavier demand app needed support feature request faster development iteration cycle higher quality standard also support development team grown around three developer twentyplus developer original mvc architecture strained increased demand needed make architectural change adapt illustrating problem code also grown inflexible incomprehensible io development community massive view controller wellknown appropriation mvc initialism common view controller balloon onethousand plus line god object despite best effort problem began rear head top view controller inheritance hierarchy grown uncomfortably deep meant controller began grow incomprehensible god object inflexible change final nail mvc coffin necessitated rearchitecture wanted change view layer implementation feed reddit app continued growing feed scroll performance started degrade consistent fps occasional fps meant needed rewrite view layer feed still supporting original implementation existing mvc architecture rewrite view layer feed without thousand line code duplication existed many difficult test part codebase code placed difficult test view layer class dependency often singleton hardcoded class wanted make change would unlock assurance testing provides top change needed maintain high crashfree session rate lay foundation next phase growth work without disrupting feature team dependent existing infrastructure meant change evolutionary rather revolutionary going modelviewpresenter decided wanted next iteration app needed address problem considered several option decided go modelviewpresenter mvp architecture addition meeting criterion mvp benefit wellknown documented architecture meant would easier educate engineer also preserved concept view model necessary create singleresponsibilityfocused view model object presenter use inflate view modelviewpresenter diagram breaking massive view controller commonly io app view object subclass uiview controller object subclass uiviewcontroller model object plain ol object read name uiviewcontroller role view controller combined single object mean mvc io tends lose proposed benefit tight coupling view controller layer interestingly apple admit coupling modelviewcontroller io often end actually looking like mvp architecture io accept notion formalize considering uiviewcontroller really glorified view layer object concept treating uiviewcontroller view object unfortunate naming gained popularity recent year uiviewcontrollers remove nonview logic allow presenter take role intermediary view model new role presenter knowledge view concretion uiviewcontrollers note presenter communicates view interface theory could swap view implementation nsviewcontroller macos view concretion slimming viewcontroller introducing presenter splitting responsibility thinking mvp see mvp diagram architecture actually end looking lot like mvc truth matter similarity difference architecture help u restore proper separation presentation code business logic mvc aim fact descendent mv x architecture mvp mvvm mvadapter etc really different flavor core concept one might wonder threw mvc altogether fact apple describes different kind controller model controller mediating controller coordinating controller truthfully likely could replace presenter different kind controller however chose io developer variety reason instilled belief uiviewcontrollers synonymous controller using word presenter signal developer object meaningfully different typical controller specific set responsibility property improved flexibility maintainability comprehensibility prefer composition inheritance wellknown mantra programming inheritance predict future construct grand taxonomy object however perfectly constructed inheritance hierarchy begin fall apart unforeseen change difficult change rigid structure composition instead compose object object delegate work useful easily change behavior object runtime simply changing object composed composable object also comprehensible pushed code inheritance hierarchy singleresponsibility focused abstraction composability one greatest benefit mvp architecture gave u since view controller composed presenter change behavior view controller simply changing concrete presenter composed also worry le construct decipher complex rigid inheritance structure lastly presenter view controller easier comprehend focused set responsibility introducing presenter pushing nonview logic able flatten view controller inheritance hierarchy graphic see able remove galleryfeedviewcontroller class pushed gallery mode logic presenter discussed flatter inheritance hierarchy easier comprehend le rigid flattened inheritance hierarchy composition free change view layer implementation discussed earlier feed scroll performance started degrade consistent fps occasional fps decided use texture rewrite view layer implementation feed texture open source framework built top apple uikit improves ui performance precomputing work background thread given current mvc architecture actually change view layer implementation without ton code duplication mvp duplicate nonview code orange viewcontrollers using new mvp architecture able evolve support texture rather rewrite thing scratch simply pushed nonview logic shared presenter class wrote new texture implementation view layer reused presenter code gave u benefit supporting view implementation comfortable rolling texture feed user mvp move nonview code shared presenter impact chart illustrates much improved feed scroll performance want stay close possible frame per second achieve buttery smooth scrolling feed unit testing although mvp solely responsible enabling encouraging unit testing large factor notably mvp increase unit testing surface area moving code harder test view layer easily testable presenter layer conveniently also side benefit making view dumber view get dumber care le testing increasing testable center moving nonview code view layer unit test make codebase maintainable give u confidence making change help u understand correct behavior also make code flexible comprehensible encourage technique like dependency injection composition programming abstraction rather concretion since mvp refactor gone handful unit test critical examination mvp reddit though mvp refactor work give u lot thing critically examine rewriting feed using texture introduced new set threading issue app originally written support asynchronous view implementation mean issue inconsistency view state app state introduces bug example view feed might expect n post however background thread app state changed foot undetected contains n post correctly address discrepancy app crash view attempt display nth post feed threading bug among hardest fix difficult consistently reproduce mean hard debug change logic retrieving data source feed view particular put safe guard freeze data source change feed view undergoing sort change smaller fix cut threading related bug however still remains room improvement improving support supporting async multithreaded world secondly presenter layer yet another hoop jump hoop jumping cost term increased code complexity decreased performance sometimes might want execute nonview logic uiviewcontroller luxury habit unfortunate situation might find presenter merely exists pas meaningful logic actually executed situation like cost presenter seem justify existence mvp really look like sometimes layer bridging view redditcore without presenter reality app entirely converted mvp architecture one converting every single uiviewcontroller presenter would massive evolutionary secondly stated previous paragraph sometimes presenter necessary discovered texture feed refactor work presenter great trying slim massive view controller need variable view implementation sophisticated logic want test sometimes uiviewcontroller simple justify adding presenter amount presenter optional developer implement one necessary summary future work refactoring mvp architecture reddit io app helped u achieve lot desired goal introducing presenter layer able gradually evolve application architecture support new view layer implementation without disrupting feature team code becoming comprehensible slim massive view controller pushing nonview logic code presenter layer also given feature team leverage quickly iterate spin new feature lastly made large stride improving testability application given still long way go still building presenter refining need continue moving nonview logic uiviewcontrollers presenter layer also need make presenter singleresponsibilityfocused end application architecture always next take even broader look architecture io app discus modularization reddit io app creating separate framework redditcore redditui tie back work mvp architecture stay tuned
175,Lobsters,mobile,Mobile Development,How to build a cross-platform IoT mobile app with NativeScript and Particle,https://blog.particle.io/2018/09/13/building-a-cross-platform-iot-mobile-app-just-got-a-lot-easier/,build crossplatform iot mobile app nativescript particle,,
176,Lobsters,mobile,Mobile Development,"""Love Notes to Newton"" A documentary about the Apple Newton Message Pad and those who love them",http://lovenotestonewton.moosefuel.media/,love note newton documentary apple newton message pad love,,
177,Lobsters,mobile,Mobile Development,Bitrise launches free mobile CI plan for open source projects,https://blog.bitrise.io/free-developer-plan-features-for-open-source-projects-on-bitrise,bitrise launch free mobile ci plan open source project,free developer plan feature open source project bitrise,free developer plan feature open source project bitrise
178,Lobsters,mobile,Mobile Development,An app for lobste.rs on both iOS and Android,https://gitlab.com/nikhiljha/lobsters-app,app lobster io android,,io android app lobster sister site read
179,Lobsters,mobile,Mobile Development,Librem5 Progress Report: Let‚Äôs get Chatty,https://puri.sm/posts/librem5-progress-report-19/,progress report let get chatty,latest post andrea see rise fall instant messenger escape walled garden matrix fractal xmpp prosody pidgin gajim dino adium swift conversation chatsecure public xmpp server im observatory sm old gold sm twofactor authentication sm implemented application codenamed chatty plugins chatty going support xmpp omemo encryption well sm day one instead sm backing commitment provide matrix librem purely additive process chatty lurch plugin interesting read article piece effort andreas straub spent making omemo encryption broadly available xmpp client,latest post andrea see today provide technical update demonstration sm encrypted xmpp message chat application developing chatty first bit historical rise fall instant messengersin today rapidly changing world new proprietary product appear every fifteen minute attract quite lot user survive market couple year however someday disappear service become attractive regarding functionality simple reason huge marketing campaign pushed social medium world seen myspace sink insignificance people ran facebook much fluctuation messenger world past two decade year ago used icq aol acquired time msn yahoo messenger glory day former discontinued yahoo pulled plug year old service july yeartoday whatsapp facebookmessenger trend user habit change like people today gravitating social medium service likely service able keep presumably limited lifespan predecessor today facebookmessenger user run instagram messaging service telegram chip away user whatsapp onescape walled gardensproprietary messaging service mostly centralized nonfederated system run single corporate provider since protocol andor server software free software source code available user understand data utilized although service provider always eavesdrop communication end end encryption applied service provider see talk time since manage account buddy list related metadata single provider systemthe alternative single provider system decentralized federated structure run fully freedomrespecting software stack multiple server relay information common protocol allowing people registered different service provider communicate type conversation handling work mostly like email course one trust service provider manages account data entirely handed relay station though certain amount metadata shared server buddy run accountthere course matrix protocol love use every day committed bringing librem also wanted offer kind encrypted communication day one native client application hoping support yet work happening fractal schedule also offering alternative based xmppxmpp extensible messaging presence protocol also federated system welldefined standard developed jabber community provide instant messaging multiparty chat voice video call many free software implementation available xmpp chatanyone run xmpp server prosody examplegetting started client side pretty easy multitude client application platform pidgin gajim dino linux adium swift macos conversation android chatsecure io plenty public xmpp server choose picked xmpp server list may want check security im observatory make connection performs couple test evaluate clienttoserver encryption servertoserver encryption sm old goldtoday u online banking sm twofactor authentication lot online service also make use method authentication sm may viewed antiquated technology reality sm play role modern technology survey showed sm effective way reach user percent read rate minute people get sm think must something important sending sm thought reliable frankly speaking also send sm every want sure message reach destination going read time even reliable wifi rumor death greatly exaggerated mark twain sent blackberryso realistically phone like librem still need application handle sm messagessms implemented application codenamed chatty working title chosen long shot plugin libpurple provides interface modemmanagerthe libpurple library support many instant messaging protocol via plugins allows user log various service one application simultaneously messaging client pidgin widely known user library libpurple originally developed itlibpurple also get benefit capability client allowing software developer create sm client start chatty merely meant application handle sm librem due tight deadline limited resourcesover time talking messaging service team discussion kept coming would nice sm im taking place one application since feel inconvenienced remember chat ecosystem choose want chat friend texted thought idea single app accommodate number messaging protocol lot merit especially libpurple provides extra protocol cheaply adding xmpp support fairly trivialtherefore bonus feature chatty going support xmpp omemo encryption well sm day one instead sm protocol like telegram may added later feature represented appropriately within frontend backing commitment provide matrix librem xmpp matrix protocol provide endtoend encryption fact providing xmpp feature purely additive processso chatty moment chatty perform basic arguably difficult task send receive operation sm via modemmanager simcom modem well xmppomemo message via libpurple lurch plugin like shown short demo video currently chatty basic functionality going expanded writing function linking gtk object libpurple callback function registered libpurple ui interface structs signal libpurple core manage conversation roster user interfacelibpurple conveniently provides core functionality im application general protocol per se buddy chosen roster panel libpurple pull data related buddy id selects plugin protocol type establishes connection buddy emits signal trigger callback function set ui loading chat history bringing chat screenthere way go make chatty decent messaging app librem many thing done wrapping smsmodemmanager code libpurple plugin work plugin started already interface modemmanager work output viewed pidgin debug window storing message history databasecreating chat view image rendering lazy load capabilitiesinterfacing contact databasedesigning screen setting libpurple account xmpp may added later implementing file picture lurch pluginincluding trust management lurch plus designing appropriate uixmpp client omemo encryption available mobile device conversation released android exciting mission make xmpp messaging available librem maybe protocol introduced later via libpurple pluginsinteresting readsthere myth regarding performance xmpp article shed light itdaniel gultsch wrote excellent piece effort andreas straub spent making omemo encryption broadly available xmpp client took two year whatsapp example able roll encryption overnight nothing could describe dearbought feature better conclusion daniel essay endtoend encryption homogenous environment easier introducing heterogenous one like however something hard achieve two possible approach either try best give put head sand create yet another walled garden different proprietary solution
180,Lobsters,mobile,Mobile Development,React Performance - Insights on Optimizing Major React Performance issues,https://www.simform.com/react-performance/,react performance insight optimizing major react performance issue,way rendering big list data react performance tip reactredux based app performance optimization conclusion twitter,codesplitting reduced bundle size pinterest case also result improving app loading time second secondsif using webpack split code multiple file using commonschunkpluginif fan using webpack use reactloadable library splitting bundled code react performance ssr react incredible framework building single page application spa however clientsideframework might experience following performance issue building application bad seo since javascriptrelated content rendered clientside search engine like yahoo baidu bing able index could see blank page relates negative seoslow app loading time application load initially cache javascript browser application big time taken initially load application also huge note google bot capable rendering javascript certain situation mean worried seo search engine yahoo bing baidu duckduckgo etc alright spa without optimizing anything however really concerned seo search engine google make lot sense go server side rendering build isomorphic react appin serversiderendering javascriptrelated content rendered server initially initial rendering take place clientside script take work like normal spa ssr helped engineering team housingcom serve meaningful content user second faster normal network compared clientside rendered app see comparison webpagetest housingcom server side rendered app previous version used client side renderingbut implementing ssr react come lot codecomplexity cost setting huge considering requirement good server nodejshowever really want improve app loading speed implement ssr nextjs save lot time go setting server improving app loading time lazy loading image previous section talked loading necessary code upfront greatly improves app load speedbut image image heaviest resource user may never see web page fully loaded might degrade react app performance due following reason data wastage loading image unnecessarily lead heavy usage data complete waste considering user see properlyunnecessary consumption device resource battery image get downloaded server browser must decode render content ui requires heavy consumption device resource batteryin order improve apploading time rule thumb load image moment need instead loading app page loading referred lazy loading imagespinterest used progressive lazy loading technique image progressive web apppinterest used placeholder initially time page load image appear blurr initial load load completely page fully loadedlazy loading image react app implemented using react lazyload libraryways rendering big list data list grid view common pattern show data react app big list say item react supposed render element scrolling might experience ui might lag bit scroll fast till itemshave look gif scrolling work great start scrolling everything go topsy turvylet dig detail happens hood react try render big list componentswhen scroll fast much rendering component make ui sluggish let break simpler term understand easier ever experienced boredom teacher make lecture long explained much stuff time long session hundred message form information get exchanged tutor student due student say component example feel hard consume result get bored mean component get rerendered tutor start complaining mean ui get sluggish optimizing list rendering react virtualized list virtual rendering come play instead rendering whole bunch component let render component whatever number end day render small subset component give big performance boostreact virtualized list library take virtual rendering technique account whenever feel ui lagging due large list data use react virtualized list make optimizing react list performance using correct key component react us key attribute decide element reused next rendering phase key important updating element dynamic listsreact updation comparing key new element key previous element process might also render component new key unrender component key used anymorei seen developer wrongly assumes index item key rendering list ran performance issue unnecessary rerenders listunwanted bug may make ui unresponsive scrollinghave look following gif clicking add item reflects text previous item instead allowing user type third item great example using index item place component key result rendering previous component third item caseusing key attribute list help maintaining consistent performance list side note remember key value unique every single component listhenceforth use key wisely implementing list reactreact performance tip reactredux based app performance optimizationwhen used together react redux awesome combination technology help u structure complex application true separation concernswhen using redux app component subscribed redux store get rerendered unnecessarily slows app major fraction timethe engineering team yahoo faced similar performance issue mainpage component located higher order tree rerendered due experiencing ui clogged rendering huge number data rowsin yahoo case still faced performance lag reduxbased react app even optimizing component rendering optimizing redux based react apps reselectreselect library used redux based react apps higher order component handling complex rendering operationsyahoo experienced significant improvement performance data analytics tool using using immutablejs optimize performance issue redux based react appsi talked importance immutability previous section even benchmarking study demonstrates using immutablejs reduxreact app improve application performance considerable mannerthe study compare two largelists item one mutable immutable performance list analyzed immutable list said performant nonimmutable onehere result using mutable data structure could result unnecessary data copying due nested redux state tree consumes lot device memory slows react app performanceon hand immutating data structure redux based react app ensures operation app return newer version data structure keep original data structure intact instead updating considerably boost performance redux based react app copying data anymoreconclusionnow clear optimize react app right hopefully help solve react performance issuesstill facing issue building react app shoot email hardik simformcom connect twitter happy help
181,Lobsters,mobile,Mobile Development,Retrospective on publishing an iOS app with ClojureScript and React Native,http://increasinglyfunctional.com/2018/08/17/i-published-an-ios-app-with-clojurescript-and-react-native.html,retrospective publishing io app clojurescript react native,outboard clojurescript react native reframe pro functional reactive programming repldriven development hiccup syntax flexbox hiccup library availability native module con react native sharp edge packager issue metro issue future plan sync alternate device conclusion translation available russian —è –æ–ø—É–±–ª–∏–∫–æ–≤–∞–ª –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è io —Å clojurescript –∏ react native,past year kept notesapp list restaurant hike bar thing meaning visit messy geographicallyaware difficult quickly add finding satisfactory solution elsewhere decided scratch itch build app worth spot home screen outboard result last five month side project hacking built clojurescript react native built couple apps using objectivec enjoy swift language stack become familiar functional reactive model interpreted reframe hard approach ui implementation way throw hot reloading clojure repl clojurescript react native obvious choice follows pro con ran along way pro functional reactive programming risk overselling start simply run bug intersection state ui anymore entire class defect struggled last decadeplus professional software development virtually disappeared slightly outofsync screen link dead data gone place lightweight lowceremony lowboilerplate framework reframe make data manipulation straightforward easy understand return old code future opinion reframe killer application clojure philosophy front end repldriven development ability experiment change app layout running state io simulator transformative speed development want know particular set data might look like laid device eval single line repl result onscreen instantaneously comparison recompiling manually updating data hiccup syntax probably personal preference borne experience app layout flexbox hiccup much easier grapple xcode interface builder never found apple constraint system managing different device size resolution intuitive flexbox let leverage meager web design experience make reasonable responsive app design library availability react native community point time span wide range heavilyinvested company resulting good stable wellmaintained library additional functionality used javascriptnative simple integrate clojurescript native module thing needed react native library already built building functionality thing like data storage app group geocoding address mapkit swift exposing clojurescript layer straightforward subject post con sunshine rainbow though far biggest problem ran working deep stack layer would change sometimes without warning love using clojurescript introduces another layer abstraction top shaky foundation npm javascript react native constant state flux react native sharp edge react native particular prone frequent breaking change part able sit locked version react native occasionally adding library would require upgrade react native upgrade process exceptionally brittle requires manually git merging large infoplist file packager issue one acute pain point resulting tool mismatch issue react native packager metro clojurescript us entirely different compiler packager google closure using two together inefficient see example issue documenting memory time issue metro slowly try package alreadypackaged clojurescript file even without extra complication closure metro infuriating work solved issue cache hour following dozen posited solution github issue thread simpling renaming directory project lived future plan happy release using daily making occasional ui tweak bugfix plan big future feature though sync obvious next step adding sync functionality user share others device app data entirely represented edn spec hopefully make sync service easier reliably build alternate device also like add client ipad desktop able repurpose data model appropriate ui layer top helpful conclusion tradeoff fully considered choose clojurescript react native heartbeat class app speed reliability heart development process hard beat outweigh misaligned tool occasional ecosystem immaturity issue translation version post available russian —è –æ–ø—É–±–ª–∏–∫–æ–≤–∞–ª –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è io —Å clojurescript –∏ react native
183,Lobsters,mobile,Mobile Development,I don‚Äôt trust Signal,https://drewdevault.com/2018/08/08/Signal.html,trust signal,google play rootkit download apk directly signalorg fdroid fdroid definitively shut discussion cryptographically signed apk direct download harm reduction signal like trust federation peertopeer chat truly secure system require trust,occasionally signal press getting lot favorable discussion feel need step various forum irc channel explain trust signal let blog post instead bat let explain expect tool claim secure actually secure view make harder average person acceptable excuse edward snowden bruce schneier going spout virtue app expect actually secure matter vulnerable people using encrypt sensitive communication targeted smart powerful adversary making promise security without explaining tradeoff made order appeal average user unethical tradeoff necessary selfserving tradeoff responsibility clearly explain drawback advantage tradeoff make make broad inaccurate statement communication product secure political prisoner believed tortured hanged stake serious let explain think signal take seriously google play make big deal google play google play service well people might trust google company nation state contest google tie nsa served secret subpoena literally world largest machine designed harvesting analyzing private information user google play service actually rootkit google play service let google silent background update apps phone give permission want google play service phone mean phone secure longest time signal work without google play service moxie founder open whisper system maintainer signal finally fixed also long time signal available google play store today download apk directly signalorg well get minute fdroid alternative play store android fdroid open source app store repository would better term includes open source apps signal thankfully mean signal distributed fdroid certainly compelling alternative proposed moxie definitively shut discussion admittedly point argument changed let quote position rebuttal upgrade channel timely automatic update perhaps effective security feature could ask would real blow project fdroid support update concerned moving update quickly minimal bureaucracy fdroid always run repository maybe lot work wonder workload compare animated gif search gifshit important feature security concious user bet million dollar donation bigbucks could help given many people operate fdroid repository budget app scanning nice thing market serverside apk scanning signature validation start distributing apks around internet reversion back pc security model malware problem came try searching google play store flashlight look permission top apps come harvesting selling personal information user advertiser kind joke fdroid curated repository like linux distribution google play malware distributor package fdroid reviewed human cryptographically signed run fdroid repo even le concern going address moxie point deeper problem consider get detail shortly read thread tearing moxie argument apart github added feature lock thread want see indepth rebuttal apk direct download last year moxie added official apk download signalorg said harm reduction avoid people using unofficial build find around net download page covered warning telling advanced user insecure would please go google play store stupid user wonder moxie considered communicating people risk using google play version apk direct download even accomplish stated goal harm reduction user manually verify checksum figure phone le checksum signature way government workplace abusivespouseinstalled certificate authority get way replace apk checksum whatever want app update using similarly insecure mechanism fdroid handle update actually sign package brainer moxie put signal fdroid yet signal like like like moxie approach issue want use something else moxie know everything said article smart guy illusion understand everything put forth think moxie make choice think right thing make argument hold derails thread lean logical fallacy loop back around longdebunked position run idea think deliberate open source software team read article list thing improve get started moxie read prepares war moxie come say openly made decision made serve interest lot organization pretending make selfserving decision customer expense rely argumentative strategy like moxie put together argument surface appears reasonable requires indepth discussion debunk passerby reassured position correct dissenter troll time read lengthy discussion demonstrates conclusion wrong especially draw discussion like moxie hard distinguish genuine position held person talking conveniently allows make selfserving play big red flag strong accusation know thing convinced truth signal centralized design hostile attitude towards fork open source project making decision running thing way like always fork project one fundamental right granted open source side effect moxie want however reduces power project moxie clever solution centralized server trademark trust federation peertopeer chat truly secure system require trust service provider point endtoend encryption trust moxie running server software say trust writing list people talked often trust moxie trustworthy given open whisper system based san francisco trust received national security letter way signal warrant canary moxie tell u store thing could truly secure system require trust couple way solve problem used tandem stop signal knowing talking using peertopeer chat significant drawback namely user online time message delivered still fall back peertoservertopeer one peer offline however important two solution important change federation federated service like email alice send email gmailcom bob yahoocom address able stand signal server hardware control log communicate freely signal server including open whisper server distributes security risk across hundred operator many country various data extradition law turn would today easy united state government break make much much difficult federation would also open possibility bridging gap several open source secure chat platform talk federated network would spurn competition great move user chat platform moxie forbids distributing branded build signal app rebrand forbids using official open whisper server server federate mean user signal fork talk signal user truly genius move fork signal date ever gained traction never talk signal user fact thirdparty application interact signal user way moxie write many blog post appeal wispy ideal moving ecosystem want really convenient excuse argument allows design system serve interest doubt nontrivial problem solve personally involved open source project collectively solved similarly difficult problem thousand time combined budget order ten thousand dollar going million dollar
184,Lobsters,mobile,Mobile Development,Introducing Square Reader SDK,https://medium.com/@gjinich/introducing-square-reader-sdk-939a9ec2d197,introducing square reader sdk,introducing square reader sdk integrated inperson payment solution android io developer using square hardware http developersquareupcomblog square developer point sale api square reader sdk work add sdk documentation developer dashboard authorize sdk connect square reader contactless chip reader accept form payment learn shake shack fuzz infinite peripheral clover food lab acuity scheduling quiqmeds square reader sdk,introducing square reader sdkan integrated inperson payment solution android io developer using square hardwareheads moved like continue keeping latest technical content square please visit u new home http developersquareupcomblogit two year since introduced square developer platform empowers developer build custom solution square seller since developer used point sale api build custom solution used thousand seller leveraging square hardwarewhile developer love relying square securely manage complexity payment heard open square point sale app via api always ideal example difficult manage two different application building selfcheckout kiosk solution hard manage authentication two separate apps size deployment scaleswe listened feedback today thrilled announce launch square reader sdk developer use square hardware accept inperson payment directly within application appswitch required line code quickly add emv pcicompliant inperson payment android io app square reader sdk allows engineer zero knowledge payment build secure compliant solution hardware talking apps let developer good square good adam mack lead system architect fuzz production developer shake shack kiosk worksreader sdk enables io android developer easily build inperson payment solution using square platform affordable easytoget hardware developer add sdk project morning purchase square reader lunch take first pci emvcompliant card payment afternoon sort magical instant spend time talking interesting stuff instead worry payment work jenny zhao director digital marketing clover food labsadd sdkit easy get started reader sdk simply visit documentation site learn head developer dashboard request access sdk repositoryauthorize sdkwhether deploying device easy authorize application take payment behalf square seller server call mobile authorization api sends resulting authorization code client us authorize sdksquareupcommobileauthorizationcode authorizationcode yourmobileauthorizationcode expiresat connect square readerreader sdk designed work square beautiful reliable affordable hardware including contactless chip reader provide user interface help seller pair card reader ensure uptodate firmware help troubleshoot connectivity issuesaccept form paymentreader sdk make easy accept major credit card nfc payment inperson checkout flow emvcompliant used million square seller buyer across globe also provide powerful checkout configuration parameter configure checkout flow suit needslearn moredozens developer participated beta program built powerful custom solution using reader sdk example shake shack fuzz built selfservice kiosk application streamline ordering process allowing employee engage customersinfinite peripheral built ezmetr nextgeneration digital taxi meter currently used taxi throughout washington dc take card paymentsclover food lab built custom point sale system update menu twelve location real time accommodate everchanging menuacuity scheduling added inperson payment small business scheduling solution customer keyin card number lower rate cardpresent paymentsquiqmeds built platform allows point care also function pharmacy patient get medication end doctor visitvisit square reader sdk documentation site get started wait see build
185,Lobsters,mobile,Mobile Development,General Magic tried to invent a smartphone in the 1990s. This is why it failed,https://www.recode.net/2018/7/30/17628766/general-magic-smartphone-apple-iphone-documentary-sarah-kerruish-matt-maude-kara-swisher-podcast,general magic tried invent smartphone failed,recode decode hosted kara swisher recode decode apple podcasts spotify pocket cast overcast website kara swisher today delighted sarah kerruish matt maude studio director new documentary called general magic pioneering tech company name really started silicon valley lot way may know sarah matt welcome recode decode sarah kerruish matt maude talk project movie full disclosure movie genius thing astonishing story give background general magic one either one sk let talk little bit background apple set situation general magic got created name everything else mm job fired mm explain people sarah sk joanna sk joanna andy responsible let give due apple mm macintosh mm sk mm right attracted lot people especially young people early career talk marc porat decide carry around balsa wood model sk background sk mm looked like version iphone time piece place mm mm experience running company correct sk mm sk mm much money get talk money great exploding startup couple pen computing company thing like mm wifi mm million total mm sk lot money mm sk worked sk explain wifi cellphone sk internet else mm sk mm say mm sk hope make communication device using telephone telco mm plug mm later went adobe bunch place mm sk mm explain name general magic called called magician recall mm raised million seems sk without product sk sound like creating product talk little bit product development time creating one basement called magic leap mm sk magic link right sk magic leap overfunded company currently sk say susan sk work apple sk mm sk year sk right one sk mm sk yeah thing ready use case necessarily think even turn maybe could desk touched mailbox else definitely trash sk phone sk rolodex sk much really sk mm sk small part thing blackberry communication part one successful took small part moved forward talk people andy hertzfeld joanna hoffman everybody pierre omidyar sk mm sk gave away ip right sk would sk mm sk mm pierre owns france something like mm yeah mm became ebay tony fadell mm mm tony happened tony sk mm sk ipod sk right andy rubin mm explain sk mm sk mm idea stuff like sk sarah kerruish matt maude director new documentary called general magic one critical company silicon valley never heard fact home many people went invent thing like iphone android nest kind thing ebay sk apple watch everything pretty much people invented thing already started talk thing came product failed product really people bought many sell sk happened talk happened matt mm also failure mm sk mm wanted device personal device thinking line talk newton sarah apple product sk apple developing investor general magic also developing mm sk product sk talk public offering go public needed money sk mm sk rabbit logo rabbit hat logo sk happened sk talk sk product another product sk happened mm sk mm different part individually mm closed sk went bankrupt sk failure understanding product sk mm internet called interchange right interchange mm interchange original one competed aol sk concept remember interchange washington post going invest either interchange aol kept urging invest aol time would made billion would money rest life essentially really like bet like yeah interesting sk yeah absolutely want get impact next section go bankrupt everybody scatter wind essentially go different place go great thing going nathan myhrvold buy ip like typical silicon valley crackup essentially sk mm shareholder lost money pretty much anyone make money general magic mm think anyone walked away even investor mm maybe ip mm worth wall street went public mm sk mm worth something shareholder lost money happened marc sk movie open movie right sk mm sk never another company right sk point fact sister sk yeah kind big deal sk interesting thing intersect either morgan stanley time sk mm goldman sachs time london remember meeting long time ago banker essentially long long time sarah kerruish matt maude director new documentary called general magic exwife also megan smith big player young person working work forget sk united state sk one sk one anymore sk yes let talk idea people went got scattered wind impact way real money made later google whether nest apple idea brought elsewhere andy brought android eventually google pierre ebay everything went everywhere else talk idea tree die silicon valley yet creates lot wealth understand mm talk sarah sk also kill idea look retrospect really astonishing really iphone came think something like mm sorry even later facebook look like looking see leonardo da vinci drawing flying machine like sk kind got directionally sure sk really interesting look drawing even look device sort every idea way street idea apple street run peter remember name online service looked like town beepbeeped terrible directionally correct interesting imagine keep innovation going lot people feel innovation gone people gotten older gotten rich lot people feel innovation moved china enthusiasm cycle innovation sk ass right looking sk mm people gotten broken lot thing sk think think innovation almost dead mm yeah think thing cycle mm indicator innovation always around tolerance openness fresh idea willingness change stuff like signal decay happens really good author guy think something happiness place happiest people also innovation thrives dy always pattern every place whether rome whether innovative place mm money inspiration think broken lot thing look happening around facebook twitter everything else say damage society significant aware meanwhile float away giant pile money little care knowledge going bubble floating something exist becoming painfully aware damage caused mm pick speaker make tool monitor tool make give little responsibility mm yes absolutely mm absolutely signed created platform caused problem think signed mm oh like trouble caused frankenstein monster mm oh monster killing people mm except everybody making money mm sure absolutely percent talking innovation talking health care really happening even attached worrisome issue around privacy around kind thing giving much technology think real worry humanity end technology begin sk thing like look disturbing interview mark last week saying well thrive going deal china good think choice xi like choice particularly good choice true country surveillance economy essentially value one think openness although good innovation good mm two question end want end think inspiration came people lot archival footage get stuff get wanted film get everybody sk talk pierre bad pierre try sk oh please andy busy go ahead sk reason sk nobody phone nobody taking picture constantly sk people forget nobody phone nobody cellphone nobody camera cellphone sure mm sk storyteller changed documentary old traditional trope think age mm yeah sk making documentary like changed sk always hard sk mm sk mm john sculley guy always went left gone right right sk sk sk true sk like john personally man make bad choice life funny although good though caused steve angry created better thing realize time need sort villain call villain know mean need sk antagonist hero overcome lesson learn film mm still close mm sk yeah people yeah going film festival premiering silicon valley go sk best part silicon valley really lot way would go netflix happens sk somewhere people see stuff like mm watched one last night mm interesting looking forget got know even pulled comcast thing watching fourth estate new york time thing going writing mm got say looking reporter hour hour exciting thing mm know like oh god mm done funny mm good first episode great everything crisis oh oh charlottesville wait minute whatever manafort like okay go crazy type type type great people way mm fantastic people case sarah matt thanks much coming good luck tonight thursday night premiere mm film going everybody see mostly everybody see really document silicon valley people made stuff using today bright line general magic everything today look see came recode daily,latest episode recode decode hosted kara swisher sarah kerruish matt maude talk new documentary general magic tell story pioneering tech startup tried failed invent smartphone kara appears documentary important figure company history andy hertzfeld john sculley tony fadell although people know name general magic anymore kerruish maude say team failure paved way silicon valley know today listen recode decode apple podcasts spotify pocket cast overcast wherever listen podcasts shared lightly edited transcript kara full conversation kerruish maude learn documentary website kara swisher today delighted sarah kerruish matt maude studio director new documentary called general magic pioneering tech company name really started silicon valley lot way may know sarah matt welcome recode decode sarah kerruish thank kara matt maude thank talk project movie full disclosure movie genius thing astonishing story give background general magic one either one sk general magic spun apple make essentially first smartphone john sculley famously said famous company important company silicon valley nobody ever heard incredible team people went build thing use every day everyone pocket know first went spectacular failure people worked went build android iphone ebay work cto obama went extraordinary thing let talk little bit background apple set situation general magic got created name everything else mm sculley charge apple following job fired mm yeah job fired sculley looking next big thing macintosh sale steady looking legacy project guy working called marc porat walking around diagram balsa model look like smartphone hold today john said well let let inside apple marc said well going apple killed many cook said need spin john gave money rented small little enclave mountain view started putting together engineer designer make smartphone andy hertzfeld bill atkinson joanna hoffman veteran original macintosh project explain people sarah sk andy joanna really core team built original macintosh joanna sk hoffman played kate winslet aaron sorkin movie really worthy view steve job disciple people took learning wanted go steve fired exile wanted build next great thing taking desktop putting everybody pocket vision joanna andy responsible let give due apple mm macintosh macintosh mm rock star people told u rolling stone article seeing engineer rolling stone magazine andy software wizard joanna responsible international marketing bill atkinson responsible pretty much middle line macintosh bill dominated whole way machine stuff quick paint also worked sk hypercard mm hypercard guy originator people really really looked people found bill andy joanna working secret project know could wanted work amazing people right attracted lot people especially young people early career talk marc porat decide carry around balsa wood model sk marc porat aspen institute working thesis information age saw next great age background sk academic stanford classic visionary went visionary wilderness came back mount literally spell book extraordinary large red tome full vision future incredible detail smartphone apps something called facebase sound awfully like facebook today remarkable document mm talked time traveler went future saw everybody interacting device enabled talk anyone anywhere across world reading saying use name interact interact photo called facebase remember reading first started working project like looked remarkably like iphone apps economy used iphones looked like version iphone time piece place mm fair diagram designed looked exactly like iphone mm took little longer experience running company correct sk broadcaster basically academic mm think done ceo work much smaller company nothing size sk nothing sort mm something built much money get talk money great exploding startup couple pen computing company thing like mm raised finance two different way first idea marc order create infrastructure partner global industry time time wireless term able get device talk another device needed go telecom company wifi mm go biggest spoke sony term actually building motorola device known founding partner end put million entity first way raising finance million total mm million sk lot money mm yeah also time like well running money let bring new partner let bring new partner need money suddenly thing felt nimble agile maybe working three partner swollen one aspect sk quick story husband steve jarrett met general magic one week sold worked sk worked sold million share one week crazy demand unprecedented building sort collaboration industry partner never done explain wifi cellphone sk internet internet else mm strange sk touchscreen mm strange film word say back u film one said wifi phone like say mm nothing everything rely today exist incredible sequence megan smith diving cupboard brings walkabout device huge talking pressing saying need balance x axis able create touchscreen touchscreen invented everything sk hope make communication device using telephone telco mm yeah like taking fax plug mm taking fax turning head trying work mean software modem invented line kevin lynch say kevin vp technology apple later went adobe bunch place mm dreamweaver everything sk built watch mm saying normally build shoulder giant starting toe way insanely ambitious trying year iphone year explain name general magic called called magician recall mm arthur c clarke quote sufficiently advanced technology indistinguishable magic second part general electric general motor general magic become household name two phrase raised million seems sk initial funding partner went public first concept ipo basically product idea raised million right first day stock exchange without product sk without product sound like creating product talk little bit product development time creating one basement called magic leap mm magic sk magic link magic link right sk different one magic leap overfunded company currently sk good cognitive dissonance project handheld basically metaphor desk street using susan kare amazing design susan say susan sk susan think important designer age everything interact pretty much influenced original desktop icon macintosh work apple sk yeah worked apple original mm pinterest sk macintosh team pinterest designed beautiful world interact thing need communicate make call make little beautiful note designed emojis like incredible walking lemon emojis even today far exceed phone genesis idea many important idea came together one device problem device know clunky big expensive think original sale price also early term adoption really people starting use email year sk went sale people massive brick wireless phone right one sk early term actual development product everything expensive component therefore price expensive also mm also tried ship perfection sk tried ship perfection think general magic company like led way develop today agile method development would work thing two three year tadah course one bought catastrophic particularly general magic case yeah thing ready use case necessarily think even turn maybe could desk touched mailbox else definitely trash sk phone phone sk rolodex rolodex sk keep track account move world main street could go along could became online shopping another place sort hallway game room incredible feat creativity design mean still much really sk much think one root failure enamored joy making creativity without stick steve job come say well nice walking lemon actually let focus shipping product mm also one problem solve one problem solve people year want future going world one thing solve tried thousand thing sk palm hand really focused contact piece small part thing blackberry communication part one successful took small part moved forward talk people andy hertzfeld joanna hoffman everybody pierre omidyar sk pierre particularly great story story pierre guy developer relation guy would walk past desk would big pile looked like check paper envelope desk say hey pierre desk said well got little idea connecting people internet via auction everybody would say odd fact actually went general counsel said hey mike thinking auction thing thinking spinning want involved mike said worst idea ever heard mm want trust people internet sk want trust people internet became ebay gave away ip right sk yeah would sk want mm twice sk mm mike twice general magic sake pierre said well would like invest said think heard trusting people internet get pierre owns france something like mm yes seventh biggest gdp world something chris macaskill took investor conference pierre time ponytail waist yeah mm people taking seriously left said chris mac ever lo behold became ebay tony fadell mm tony fadell slept doorstep outside general magic would budge someone gave interview mm michigan stick comparison everybody else got job packed parent car put belonging move mountain view year half worked solidly blown away working hero tony happened tony sk tony went philip actually think one poignant part film tony vision product could go fact went make philip critical success commercial failure ended steve job calling saying think time something tony always loved music well something small life pocket play hundred song mm thousand song pocket sk tony became coinventor ipod ipod sk iphone course went found nest future shape represents somebody really took lesson general magic really thing working break start iterate iterate perfect right andy rubin mm andy rubin explain sk andy rubin android creator android rubin amazing character used keep ferrari garage always crazy thing like representing chief communication minister grand cayman always massive crazy prank involving world global mm imagine neverland lost boy sk girl mm girl sorry finding first time parent around incredible chaos running bouncing make bit idea stuff like sk think important note made huge breakthrough whether usb software modem touchscreen emojis literally hundred innovation developed general magic sarah kerruish matt maude director new documentary called general magic one critical company silicon valley never heard fact home many people went invent thing like iphone android nest kind thing ebay sk apple watch apple watch everything pretty much people invented thing already started talk thing came product failed product really people bought many sell sk well initial sale sold friend family sale figure absolutely abysmal term thing created said usb touchscreen emojis list go think interesting think nathan myhrvold ended buying ip general magic extraordinary catalog ip people still talk day happened talk happened matt mm talk three thing went wrong think one trying achieve perfection general magic potentially iterated way ipod released different iteration ipod every single year encapsulated new feature six seven year later ipod become iphone general magic could quite easily done rather trying put five year work one device also external pressure john sculley almost father general magic term spinning apple betrayed general magic taking product thought marketing plan releasing newton direct competitor general magic device also failure mm also failure third thing killed world wide web trying create proprietary form internet pay use another thing come free use losing side argument decimated everything general magic made mistake newton sk microsoft mm bill gate also trying create proprietary form everybody knew coming wanted device personal device thinking line talk newton sarah apple product sk apple product little messaging product remember actually general magic time intense pressure caused fact newton shipped early fact people upset shipped apple developing investor general magic also developing mm unknown apple owned small percentage general magic whereas newton owned entirety apple could see across board general magic think really hard engineer people like andy hertzfeld whose friend people worked macintosh working newton project think really hard people like andy bill see people like steve capps working direct competitor completely surrounded secrecy really hard time think created bunker mentality across general magic really put head fight life sk also caused go early term publicity stealth mode announcement forced go product sk yeah talk public offering go public needed money sk needed independence created monolithic entity different partner arguing many natural enemy cumbersome work well mm board director ceo alliance partner got sony president got president sitting board general magic dictating general magic made realization needed go public cut tie really powerful board first concept ipo sk amazingly audacious think product point really early development phase audacious bold move initially paid spectacular day went public rabbit logo rabbit hat logo sk yeah great susan kare logo iconic susan kare logo happened sk think matt said early ship product people wanted meaningful volume think fundamentally lost heart think really lose heart talk sk think work hard intensely something worked harder anyone ever seen mean year year people pull allnighters tech company unusual year people really gave huge part life think end day tony said said look think make product sell think andy said think famous meeting actually andy said tired pivot make shift product another product sk yeah happened mm u beginning act film period mourning palpable grief people general magic grief never recovered younger generation magician people come company wanted work people like andy joanna bill time look mistake made company well still taking idea general magic original vision would carry around device pocket magician took vision put domain sk next thing mm yeah say tony fadell idea able carry something pocket could put song could carry around everywhere became ipod different little iteration people started spawn think kevin dreamweaver term able something could built consumer tried general magic would create developer access took put adobe creative world could see different part vision populating different place different magician look entire vision achieved magician different part individually mm almost combined way closed sk went bankrupt went bankrupt sk end think important note though think one talked think really important think magician would admit hubris played element think certain incredible faith ability pull miraculous thing walk wall trying something technologically hard time certain hubris willing look outside world bubble think really instrumental failure failure understanding product sk understanding product climate time willing question orthodoxy believe passionately trying kind thing time need able retain ability take hard cold look mm need coldhearted person coldhearted people come say matter loyalty say creating proprietary internet world wide web come cut partner internet called interchange right interchange mm personal link interchange original one competed aol sk cloud cloud made first video cloud concept remember interchange washington post going invest either interchange aol kept urging invest aol time would made billion would money rest life essentially really like bet like yeah interesting sk thus history made yeah absolutely want get impact next section go bankrupt everybody scatter wind essentially go different place go great thing going nathan myhrvold buy ip like typical silicon valley crackup essentially sk gone one reason wanted make film really interested failure experienced personal catastrophic failure startup involved really interested idea first role journey startup journey also take bring big idea life want make film way glorified failure painful wreck people life think important note really one reason wanted make film mm amy lindberg worked general magic docker talk general magic supernova star exploded created much use today real happy ending film people taken long hard look shareholder lost money pretty much anyone make money general magic mm uh think anyone walked away even investor mm maybe ip mm brightest spark wall street worth wall street went public mm remember supposed go share closed sk million mm cleared million first day worth something shareholder lost money happened marc sk really good question think main character movie open movie right sk movie think mm close sk think marc went long phase wilderness came side actually think one favorite part film john sculley say marc second act really person saw future product meticulously designed book really reality today done interesting thing term sustainable building material interested thing green active right trump never another company right sk think think gave much sacrificed much including marriage point fact sister sk yes ruth cfo alphabet yeah kind big deal sk big deal interesting thing intersect either morgan stanley time sk goldman sachs mm goldman sachs goldman sachs time london remember meeting long time ago banker essentially long long time sarah kerruish matt maude director new documentary called general magic exwife also megan smith big player young person working work forget sk hardware team worked sale team famously went vp google start planet former ceo planet went third cto united state sk united state america one sk president obama one anymore one anymore sk yes let talk idea people went got scattered wind impact way real money made later google whether nest apple idea brought elsewhere andy brought android eventually google pierre ebay everything went everywhere else talk idea tree die silicon valley yet creates lot wealth understand mm spoke stanford professor called fred turner made incredible observation engineer work one company work valley one company fails take idea failure iterate new company really like idea huge microcosm silicon valley lesson passed different company think general magic really good example learn mistake somewhere else able make success another company venture think supernova metaphor redwood talking see iterating everywhere across valley also see iterating nature making film also looked example nature would able break monotony urban landscape could put cinematic footage looking kind nature example wave forest fire redwood forest success spawn failure talk sarah sk would also like say mentor story master apprentice also big part film big part valley seeing steve handing lesson disciple lesson passed think really important tradition valley continues see today magician megan tony desire pas knowledge use lesson solve really big problem talk beautifully film think important message film take lesson bringing big idea life apply problem really need solve also kill idea look retrospect really astonishing really iphone came think something like mm sorry even later facebook look like looking see leonardo da vinci drawing flying machine like sk good analogy kind got directionally sure sk codex good analogy really interesting look drawing even look device sort every idea way street idea apple street run peter remember name online service looked like town beepbeeped terrible directionally correct interesting imagine keep innovation going lot people feel innovation gone people gotten older gotten rich lot people feel innovation moved china enthusiasm cycle innovation sk think true also think really big lesson lesson came steve lesson people thing money sure like making money sure horrible thing least everybody know context driven vision idea much came steve andy hertzfeld talk think passion create make change drive ass right looking sk personally see blossoming meaningful way dighealth space working company kheiron using ai read mammogram stateoftheart performance work others going change cancer diagnosis example look work done immunotherapy cancer treatment think get excited green tech space superinteresting ed tech space think much happening continue optimistic excited innovation people innovator mm technologist stepping world discovering much give massive amount hope going lot fear lot uncertainty surrounding u everywhere consistently look towards technologist innovator within technology one thing give hope problem people finding solution problem even aware people finding solution towards well think term next cycle innovation sure known think worked maybe worked different basement different garage might yet people gotten broken lot thing sk think think think innovation almost dead mm valley yeah think thing cycle mm could dead valley think indicator innovation always around tolerance openness fresh idea willingness change stuff like signal decay happens really good author guy think something happiness place happiest people also innovation thrives dy always pattern every place whether rome whether innovative place mm venice capital may move sorry capital move actual like name town moved silicon valley moment got streak money money move depending innovation occurs money inspiration think broken lot thing look happening around facebook twitter everything else say damage society significant aware meanwhile float away giant pile money little care knowledge going bubble floating something exist becoming painfully aware damage caused mm think greater worry technology signal noise coming coming technology facebook exacerbating volume problem elsewhere worrisome trend happening news heard news spread changed lifetime idea fact truth unfortunately facebook one pick speaker pick speaker make tool monitor tool make give little responsibility mm sign unfortunately done yes absolutely mm done absolutely signed created platform caused problem think signed mm think got oh like trouble caused frankenstein monster mm yes oh monster killing people mm genie box unfortunately nobody checking problem except everybody making money mm get talking two different type innovator looking facebook saying wow solving problem existence sure absolutely percent talking innovation talking health care really happening even attached worrisome issue around privacy around kind thing giving much technology think real worry humanity end technology begin sk agree thing like look disturbing interview mark last week saying well thrive going deal china good think choice xi like choice particularly good choice true country surveillance economy essentially value one think openness although good innovation good mm strange first started working film three year ago felt like going politically much positive direction brexit occurred trump occurred nationalism seems something going rife everywhere term wanting engaged film tackle issue asks difficult question yeah feel like good time asking two question end want end think inspiration came people lot archival footage get stuff get wanted film get everybody sk get everybody andy rubin get pierre omidyar get talk pierre bad pierre try sk timing think busy people oh please andy busy go ahead sk well footage joy original footage helped shoot reason sk marc pulled crew led david hoffman make film something imagined real yet could help communicate vision future started general magic cache two instance found enormous stockpile footage one hawaii tape hawaii another one smaller collection footage important fact almost edited film point got second stash footage like christmas still dream getting footage still dream finding box footage joyful nobody phone nobody taking picture constantly sk footage think one best thing film people forget nobody phone nobody cellphone nobody camera cellphone sure mm still camera polaroid video camera sk people really video camera bill atkinson brought one back japan filming incredible insider view knew story wanted tell actually find footage supported story incredible storyteller changed documentary old traditional trope think age mm documentary yeah sk viewed like narrative film wrote script follow convention documentary film sense narrator build scene build archival scene tell story greek chorus john markoff paul saffo think important element film giving u perspective story mean making documentary like changed sk hard always hard always hard sk take year longer think mm think every film requires amount people hour making fiction film people condense time eight week shooting making documentary people take lot lot longer sk also joy say total joy many interesting moment interview john sculley revelation many moment fabulous fabulous journey go mm john sculley guy always went left gone right right sk owned sk interviewed sk really owned many people true sk think actually lesson film people really mistake failure experience form redemption like john personally man make bad choice life funny although good though caused steve angry created better thing realize time need sort villain call villain know mean need sk antagonist antagonist hero overcome lesson learn film mm think enough love thing making love people making making film three year making film always going struggle creating something people back absolute joy lot parallel general magic company general magic film one thing everpresent footage incredible companionship friendship something wildly ambitious tribe people felt amazing still close mm yeah hope sk except let hope people watch buy actual sony magic link yeah people yeah going film festival premiering silicon valley go sk world premiere tribeca great one top film according time thank time wonderful really trying decide part want make sure want see want show innercity school want show kid want show university one track hope right distributor pick get seen people ultimately film tech film people dream change world take best part silicon valley really lot way would go netflix happens sk netflix would great hbo would great somewhere people see stuff like mm think alluded question earlier documentary changing prior world netflix hard watch documentary would make theatrical release otherwise go local blockbuster watched one last night mm world changed great seeing like people money seeing documentary watched huge audience huge appetite interesting looking forget got know even pulled comcast thing watching fourth estate new york time thing going writing mm amazing got say looking reporter hour hour exciting thing mm first episode gripped though know like oh god mm really well done funny mm one episode premiered tribeca thought good good first episode great everything crisis oh oh charlottesville wait minute whatever manafort like okay go crazy type type type great people way mm get behind fantastic people case sarah matt thanks much coming good luck tonight thursday night premiere mm thursday film going everybody see mostly everybody see really document silicon valley people made stuff using today bright line general magic everything today look see came sign newsletter recode daily article originally appeared recodenet
186,Lobsters,mobile,Mobile Development,Race Detection for Event-Driven Mobile Applications (2014),https://web.eecs.umich.edu/~pmchen/papers/hsiao14.pdf,race detection eventdriven mobile application,,obj stream ov Œ∂ g f j r –ø h ﬂ© x v
187,Lobsters,mobile,Mobile Development,GNOME Mobile - Designing GNOME for your smartphone (Librem 5 - Purism),https://www.invidio.us/watch?v=b1PVepoAxxw,gnome mobile designing gnome smartphone librem purism,,guadec subscribe shared july purism librem first phone built ground respect user freedom privacy run pureos real gnulinux distribution use gnome user interface possible gnome nt run phone well quite yet purism working changing role designer librem project adapting design existing gnome apps phone form factor designing new apps scratch want much work possible go upstream order benefit gnome usersin presentation show progress making talk design gnome apps work well across different form factorsccbysa
503,Lobsters,mobile,Mobile Development,What the Virtual Viewport?,http://updates.html5rocks.com/2015/01/virtual-viewport,virtual viewport,chrome learn web fundamental super simple example html overflow hidden solid info,chrome change viewport pretty subtle make big difference user mobile browser started lack viewport meta tag meant would make web page think approximately screen real estate render size viewport meta tag developer could define width common devicewidth set screen size device learn web fundamental way rick byers describes virtual viewport follows idea virtual viewport split notion viewport two layout viewport fixed position item attached visual viewport user actually see super simple example website videojscom good example appbar fixed top link left right side appbar image show would see zoomed site tried panning left right top device chrome nt virtual viewport bottom chrome virtual viewport chrome see appbar zoom scrolling right nt allow view link right side bar ever see logo compare chrome virtual viewport see visual viewport scroll everything inside layout viewport allowing view link right internet explorer already behavior change bring u closely inline html overflow hidden major developer facing change come could apply overflow hidden html element page would still scroll longer supported page simply scroll solid info want learn huh well view slide deck
504,Lobsters,mobile,Mobile Development,Mobile Chameleon: A round-up of multiplatform mobile SDKs,http://www.mobilechameleon.com/,mobile chameleon roundup multiplatform mobile sdks,,copyright
505,Lobsters,mobile,Mobile Development,An interactive Comparison Chart of the 300 most popular Tablets,http://www.productchart.com/tablets/,interactive comparison chart popular tablet,amazon fire kid detail dragon touch detail zonko detail dragon touch detail jumper ezpad pro detail vankyo matrixpad detail dragon touch detail vankyo matrixpad detail dragon touch detail zonko detail vankyo matrixpad detail hoozo detail topelotek detail microsoft surface go detail dragon touch pro detail vankyo matrixpad detail vankyo matrixpad detail vankyo matrixpad detail samsung galaxy tab lite detail contixo detail veidoo detail vankyo matrixpad detail vatenick detail samsung galaxy tab detail microsoft surface detail detail pritom detail winsing detail rca delta pro detail detail detail rca viking pro detail chuwi x detail simbans tangotab detail lectrus detail microsoft surface go detail meberry detail rca atlas pro detail jinheng detail lenovo tab detail dragon touch detail nuvision encite split detail microsoft surface pro x detail vankyo matrixpad detail samsung galaxy tab detail dragon touch notepad detail samsung galaxy tab detail apple ipad mini detail aoyodkg detail microsoft surface pro detail dragon touch detail vucatimes detail apple ipad pro detail yisence detail flyingtech detail detail lenovo tab detail samsung galaxy tab detail hoozo detail hoozo detail asiur detail winnovo detail apple ipad mini detail ujoyfeel detail microsoft surface book detail rca galileo pro detail lenovo smart tab detail prograce detail microsoft surface pro detail ujoyfeel detail lenovo tab detail surfans detail microsoft surface go detail winsing detail nxy detail microsoft surface book detail chenen detail samsung galaxy tab detail rca voyager detail remarkable detail microsoft surface pro detail forentek detail samsung galaxy tab e detail yellyouth detail microsoft surface pro x detail lenovo tab detail lenovo tab detail samsung galaxy tab detail samsung galaxy tab detail yellyouth detail lectrus detail forentek detail samsung galaxy tab detail samsung galaxy tabpro detail victbing detail lectrus detail samsung galaxy tab detail victbing detail sumtab pro detail yisence detail microsoft surface detail microsoft surface pro x detail rca voyager pro detail lenovo yoga book detail yuntab detail azpen detail microsoft surface pro detail microsoft surface pro detail lenovo tab detail asus zenpad detail microsoft surface pro detail google pixel slate detail lenovo smart tab detail apple ipad air detail bbpaw detail lectrus detail manjee detail detail asus zenpad detail yellyouth detail apple ipad mini detail yuntab detail apple ipad mini detail yitaoera detail microsoft surface pro x detail microsoft surface detail lenovo yoga tab detail victbing detail samsung galaxy tab detail contixo detail samsung galaxy view detail microsoft surface pro detail samsung galaxy tab detail microsoft surface pro detail apple ipad pro detail lenovo yoga tab pro detail apple ipad pro detail samsung galaxy tab detail dragon touch plus detail winsing detail samsung galaxy tab e lite detail apple ipad air detail detail microsoft surface pro detail jinheng detail lenovo thinkpad detail apple ipad air detail,amazon fire kid price aug pst detail screen inch pixel x storage gb ram gb weight ounce dragon touch price aug pst detail screen inch pixel x storage gb ram gb weight unknown ounce zonko price aug pst detail screen inch pixel x storage gb ram gb weight unknown ounce dragon touch price aug pst detail screen inch pixel x storage gb ram gb weight unknown ounce jumper ezpad pro price aug pst detail screen inch pixel x storage gb ram gb weight unknown ounce vankyo matrixpad price aug pst detail screen inch pixel x storage gb ram gb weight unknown ounce dragon touch price aug pst detail screen inch pixel x storage gb ram gb weight unknown ounce vankyo matrixpad price aug pst detail screen inch pixel x storage gb ram gb weight ounce dragon touch price aug pst detail screen inch pixel x storage gb ram gb weight unknown ounce zonko price aug pst detail screen inch pixel x storage gb ram gb weight unknown ounce vankyo matrixpad price aug pst detail screen inch pixel x storage gb ram gb weight ounce hoozo price aug pst detail screen inch pixel x storage gb ram gb weight unknown ounce topelotek price aug pst detail screen inch pixel x storage gb ram gb weight unknown ounce microsoft surface go price aug pst detail screen inch pixel x storage gb ram gb weight ounce dragon touch pro price aug pst detail screen inch pixel x storage gb ram gb weight unknown ounce vankyo matrixpad price aug pst detail screen inch pixel x storage gb ram gb weight ounce vankyo matrixpad price aug pst detail screen inch pixel x storage gb ram gb weight ounce vankyo matrixpad price aug pst detail screen inch pixel x storage gb ram gb weight ounce samsung galaxy tab lite price aug pst detail screen inch pixel x storage gb ram gb weight ounce contixo price aug pst detail screen inch pixel x storage gb ram gb weight ounce veidoo price aug pst detail screen inch pixel x storage gb ram gb weight unknown ounce vankyo matrixpad price aug pst detail screen inch pixel x storage gb ram gb weight ounce vatenick price aug pst detail screen inch pixel unknown x unknown storage gb ram gb weight unknown ounce samsung galaxy tab price aug pst detail screen inch pixel x storage gb ram gb weight ounce microsoft surface price aug pst detail screen inch pixel x storage gb ram gb weight ounce price aug pst detail screen inch pixel x storage gb ram gb weight ounce pritom price aug pst detail screen inch pixel x storage gb ram gb weight unknown ounce winsing price aug pst detail screen inch pixel x storage gb ram gb weight unknown ounce rca delta pro price aug pst detail screen inch pixel x storage gb ram gb weight unknown ounce price aug pst detail screen inch pixel x storage gb ram gb weight ounce price aug pst detail screen inch pixel x storage gb ram gb weight ounce rca viking pro price aug pst detail screen inch pixel x storage gb ram gb weight ounce chuwi x price aug pst detail screen inch pixel x storage gb ram gb weight ounce simbans tangotab price aug pst detail screen inch pixel x storage gb ram gb weight unknown ounce lectrus price aug pst detail screen inch pixel x storage gb ram gb weight ounce microsoft surface go price aug pst detail screen inch pixel x storage gb ram gb weight ounce meberry price aug pst detail screen inch pixel x storage gb ram gb weight ounce rca atlas pro price aug pst detail screen inch pixel x storage gb ram gb weight ounce jinheng price aug pst detail screen inch pixel x storage gb ram gb weight ounce lenovo tab price aug pst detail screen inch pixel x storage gb ram gb weight ounce dragon touch price aug pst detail screen inch pixel x storage gb ram gb weight unknown ounce nuvision encite split price aug pst detail screen inch pixel x storage gb ram gb weight ounce microsoft surface pro x price aug pst detail screen inch pixel x storage gb ram gb weight ounce vankyo matrixpad price aug pst detail screen inch pixel x storage gb ram gb weight ounce samsung galaxy tab price aug pst detail screen inch pixel x storage gb ram gb weight ounce dragon touch notepad price aug pst detail screen inch pixel x storage gb ram gb weight unknown ounce samsung galaxy tab price aug pst detail screen inch pixel x storage gb ram gb weight ounce apple ipad mini price aug pst detail screen inch pixel x storage gb ram gb weight ounce aoyodkg price aug pst detail screen inch pixel x storage gb ram gb weight unknown ounce microsoft surface pro price aug pst detail screen inch pixel x storage gb ram gb weight ounce dragon touch price aug pst detail screen inch pixel x storage gb ram gb weight unknown ounce vucatimes price aug pst detail screen inch pixel x storage gb ram gb weight ounce apple ipad pro price aug pst detail screen inch pixel x storage gb ram gb weight ounce yisence price aug pst detail screen inch pixel x storage gb ram gb weight unknown ounce flyingtech price aug pst detail screen inch pixel x storage gb ram gb weight unknown ounce price aug pst detail screen inch pixel x storage gb ram gb weight ounce lenovo tab price aug pst detail screen inch pixel x storage gb ram gb weight ounce samsung galaxy tab price aug pst detail screen inch pixel x storage gb ram gb weight ounce hoozo price aug pst detail screen inch pixel x storage gb ram gb weight unknown ounce hoozo price aug pst detail screen inch pixel x storage gb ram gb weight unknown ounce asiur price aug pst detail screen inch pixel x storage gb ram gb weight ounce winnovo price aug pst detail screen inch pixel x storage gb ram gb weight ounce apple ipad mini price aug pst detail screen inch pixel x storage gb ram gb weight ounce ujoyfeel price aug pst detail screen inch pixel x storage gb ram gb weight unknown ounce microsoft surface book price aug pst detail screen inch pixel x storage gb ram gb weight ounce rca galileo pro price aug pst detail screen inch pixel x storage gb ram gb weight ounce lenovo smart tab price aug pst detail screen inch pixel x storage gb ram gb weight ounce prograce price aug pst detail screen inch pixel x storage gb ram gb weight ounce microsoft surface pro price aug pst detail screen inch pixel x storage gb ram gb weight ounce ujoyfeel price aug pst detail screen inch pixel x storage gb ram gb weight ounce lenovo tab price aug pst detail screen inch pixel x storage gb ram gb weight ounce surfans price aug pst detail screen inch pixel x storage gb ram gb weight ounce microsoft surface go price aug pst detail screen inch pixel x storage gb ram gb weight ounce winsing price aug pst detail screen inch pixel x storage gb ram gb weight unknown ounce nxy price aug pst detail screen inch pixel x storage gb ram gb weight unknown ounce microsoft surface book price aug pst detail screen inch pixel x storage gb ram gb weight ounce chenen price aug pst detail screen inch pixel x storage gb ram gb weight unknown ounce samsung galaxy tab price aug pst detail screen inch pixel x storage gb ram gb weight ounce rca voyager price aug pst detail screen inch pixel x storage gb ram gb weight ounce remarkable price aug pst detail screen inch pixel x storage gb ram gb weight ounce microsoft surface pro price aug pst detail screen inch pixel x storage gb ram gb weight ounce forentek price aug pst detail screen inch pixel x storage gb ram gb weight ounce samsung galaxy tab e price aug pst detail screen inch pixel x storage gb ram gb weight ounce yellyouth price aug pst detail screen inch pixel x storage gb ram gb weight ounce microsoft surface pro x price aug pst detail screen inch pixel x storage gb ram gb weight ounce lenovo tab price aug pst detail screen inch pixel x storage gb ram gb weight ounce lenovo tab price aug pst detail screen inch pixel x storage gb ram gb weight ounce samsung galaxy tab price aug pst detail screen inch pixel x storage gb ram gb weight ounce samsung galaxy tab price aug pst detail screen inch pixel x storage gb ram gb weight ounce yellyouth price aug pst detail screen inch pixel x storage gb ram gb weight ounce lectrus price aug pst detail screen inch pixel x storage gb ram gb weight ounce forentek price aug pst detail screen inch pixel x storage gb ram gb weight ounce samsung galaxy tab price aug pst detail screen inch pixel x storage gb ram gb weight ounce samsung galaxy tabpro price aug pst detail screen inch pixel x storage gb ram gb weight ounce victbing price aug pst detail screen inch pixel x storage gb ram gb weight ounce lectrus price aug pst detail screen inch pixel x storage gb ram gb weight unknown ounce samsung galaxy tab price aug pst detail screen inch pixel x storage gb ram gb weight ounce victbing price aug pst detail screen inch pixel x storage gb ram gb weight ounce sumtab pro price aug pst detail screen inch pixel x storage gb ram gb weight ounce yisence price aug pst detail screen inch pixel x storage gb ram gb weight unknown ounce microsoft surface price aug pst detail screen inch pixel x storage gb ram gb weight ounce microsoft surface pro x price aug pst detail screen inch pixel x storage gb ram gb weight ounce rca voyager pro price aug pst detail screen inch pixel x storage gb ram gb weight ounce lenovo yoga book price aug pst detail screen inch pixel x storage gb ram gb weight ounce yuntab price aug pst detail screen inch pixel x storage gb ram gb weight ounce azpen price aug pst detail screen inch pixel x storage gb ram gb weight ounce microsoft surface pro price aug pst detail screen inch pixel x storage gb ram gb weight ounce microsoft surface pro price aug pst detail screen inch pixel x storage gb ram gb weight ounce lenovo tab price aug pst detail screen inch pixel x storage gb ram gb weight ounce asus zenpad price aug pst detail screen inch pixel x storage gb ram gb weight ounce microsoft surface pro price aug pst detail screen inch pixel x storage gb ram gb weight ounce google pixel slate price aug pst detail screen inch pixel x storage gb ram gb weight ounce lenovo smart tab price aug pst detail screen inch pixel x storage gb ram gb weight ounce apple ipad air price aug pst detail screen inch pixel x storage gb ram gb weight ounce bbpaw price aug pst detail screen inch pixel x storage gb ram gb weight ounce lectrus price aug pst detail screen inch pixel x storage gb ram gb weight unknown ounce manjee price aug pst detail screen inch pixel x storage gb ram gb weight ounce price aug pst detail screen inch pixel x storage gb ram gb weight ounce asus zenpad price aug pst detail screen inch pixel x storage gb ram gb weight ounce yellyouth price aug pst detail screen inch pixel x storage gb ram gb weight ounce apple ipad mini price aug pst detail screen inch pixel x storage gb ram gb weight ounce yuntab price aug pst detail screen inch pixel x storage gb ram gb weight ounce apple ipad mini price aug pst detail screen inch pixel x storage gb ram gb weight ounce yitaoera price aug pst detail screen inch pixel x storage gb ram gb weight unknown ounce microsoft surface pro x price aug pst detail screen inch pixel x storage gb ram gb weight ounce microsoft surface price aug pst detail screen inch pixel x storage gb ram gb weight ounce lenovo yoga tab price aug pst detail screen inch pixel x storage gb ram gb weight ounce victbing price aug pst detail screen inch pixel x storage gb ram gb weight ounce samsung galaxy tab price aug pst detail screen inch pixel x storage gb ram gb weight ounce contixo price aug pst detail screen inch pixel x storage gb ram gb weight ounce samsung galaxy view price aug pst detail screen inch pixel x storage gb ram gb weight ounce microsoft surface pro price aug pst detail screen inch pixel x storage gb ram gb weight ounce samsung galaxy tab price aug pst detail screen inch pixel x storage gb ram gb weight ounce microsoft surface pro price aug pst detail screen inch pixel x storage gb ram gb weight ounce apple ipad pro price aug pst detail screen inch pixel x storage gb ram gb weight ounce lenovo yoga tab pro price aug pst detail screen inch pixel x storage gb ram gb weight ounce apple ipad pro price aug pst detail screen inch pixel x storage gb ram gb weight ounce samsung galaxy tab price aug pst detail screen inch pixel x storage gb ram gb weight ounce dragon touch plus price aug pst detail screen inch pixel x storage gb ram gb weight unknown ounce winsing price aug pst detail screen inch pixel x storage gb ram gb weight ounce samsung galaxy tab e lite price aug pst detail screen inch pixel x storage gb ram gb weight ounce apple ipad air price aug pst detail screen inch pixel x storage gb ram gb weight ounce price aug pst detail screen inch pixel x storage gb ram gb weight ounce microsoft surface pro price aug pst detail screen inch pixel x storage gb ram gb weight ounce jinheng price aug pst detail screen inch pixel x storage gb ram gb weight ounce lenovo thinkpad price aug pst detail screen inch pixel x storage gb ram gb weight ounce apple ipad air price aug pst detail screen inch pixel x storage gb ram gb weight ounce
506,Lobsters,mobile,Mobile Development,"No, it‚Äôs not the end of XMPP for Google Talk",http://xmpp.org/2015/03/no-its-not-the-end-of-xmpp-for-google-talk/,end xmpp google talk,end xmpp google talk blog post dan york google cloud messaging hangout videochat us explained product manager announced ago developer page best explained google since may,end xmpp google talk recent discussion sky falling xmpp google see blog post dan york example reality nt know state xmpp inside google nt share use xmpp xsf know android google cloud messaging us know hangout videochat us know google talk still insecurely federates xmpp service outside perspective google made major recent change term using xmpp observe happened google talk app window deprecated february explained product manager google announced ago intended come little surprise given client seen much development decade instead google talk hangout promoted hangout interoperate federated xmpp client user appear visible message federated contact lost confusing user experience xsf still belief principle client choice best explained google developer page believe user choice client use connect google talk service want encourage developer community create new innovative application leverage service enable google talk us standard xmpp protocol authentication presence messaging note still continue use google talk service third party xmpp client google talk xmpp server continue federate domain called service choice principle best explained google service choice something email part regular phone service today mean regardless choose email service provider gmail hotmail yahoo mail school isp etc email anyone using another service provider applies phone service call someone even use phone company allows choose service provider based important factor feature quality service price still able talk anyone want however since google talk service support servertoserver encryption via tl something required rfc number server including jabberorg refuse establish connection since may love see google embrace secure messaging federated messaging aside longstanding issue xmpp alive kicking google
507,Lobsters,mobile,Mobile Development,Futures of text,http://whoo.ps/2015/02/23/futures-of-text,future text,voice actually requires lot cognitive physical effort always bet text guiaided chat lark iphone apps persona wechat west brought david marcus witai acquired talkto magic cut away search rise card luka product hunt deeper semantics chatgrape otherwise traditional dull form type appear end beginning julien genestoux joel monegro jason black additional reading twoodo lark chatgrape appearin integration slack dasher path talk magic slack cloe luka fantastical xai glip,weather bad take bus work forever grateful person bus stop informed text new york mta service find exactly bus going arrive sure app put bus map would rich information got texting bus time thought thank god need download another f app texting bus time contrast gui defines rule interaction rule frustratingly change app app textbased conversational interaction liberating familiarity really one way skin cat text type displayed right text someone else typed left input field bottom compose message many way skin messaging cat primary alternative app paradigm google siri today however skeptical future communicate computer primarily voice vision space odyssey portray voice effortless interaction voice actually requires lot cognitive physical effort pointing mouse typing keyboard tapping app icon navigating ui consider time exchanged million text someone making plan voice would resolved much quickly text often comfortable even le convenient believe comfort convenience important thing software text incredibly comfortable medium textbased interaction fast fun funny flexible intimate descriptive even consistent way voice user interface often always bet text text socially useful communication technology work well n n mode indexed searched efficiently even hand translated produced consumed variable speed asynchronous compared diffed clustered corrected summarized filtered algorithmically permit multiparty editing permit branching conversation lurking annotation quoting reviewing summarizing structured response exegesis even fan fic breadth scale depth way people use text unmatched anything convenient comfortable bus time may interaction still suboptimal bot language unnatural interacted month never learns bus even though bus ever ask actually highlight one fundamental difference apps service whereas view service mere endpoint inputoutput expect apps retain state session session looking forward day service graduate service app begin retain state take seat bus conversation keep going smarter bus time obvious problem interaction strict command line type might work natural language processing still good enough ubiquitous enough power app primarily interacts via messaging nlp get though way alleviate current shortcoming see happening right guiaided chat lark iphone virtual health coach interface healthkit iphone excellent job weaving freeform chat gui lark also excellent message design tone natural tempo fast fast make feel like response perfunctory smart already built io message app quicktype new io far removed typing assistant like swype quite good turning prompt send sm series onetap input sure photoshopped quicktype hint smarter message app slightly surprised yet seen chat agent leverage convenience quicktype primary obstacle likely sm slow expensive app persona model via one ott messenger make much sense apps persona western market want interact service phone either visit mobile website likely download app china wechat service across asia service may want interact right messenger need download app could tap app app store start using within app store app array messaging experience china appaspersonae elegant solution problem described earlier bus time ie never retains state bus one easy alternative bus time would offer unique ptsn message instead ptsn bus obvious candidate become wechat west facebook messenger brought david marcus something along line look east young man new look west young man also recently purchased witai api provider helped app developer parse natural language perhaps facebook already burned developer badly past even attempt regardless one easily imagine service sitting right alongside contact messenger experience facebook messenger apps meanwhile path reportedly acquisition target apple acquired talkto build messenger service venue sit side side contact list friend kik snapchat eye market arriving scene weekend magic virtual assistant interact purely sm magic service appaspersonae model emerge west would least somewhat disruptive google could cut away search apple could cut away app store especially true rise card come fruition content locked apps web quickly consumed within chat vision realized wildcard sdk video look well luka popped today product hunt mesh chat card think apple google would see coming likely would either try stifle facebook effort bundle service inside messenger seemingly impractical try beat punch obvious path google apple beat one messenger punch open messenger hangout message would entail disrupting model degree yet another alternative might preempt runaway messenger embed service within text across o deeper semantics example shown point depict largely discrete mode interaction guiaided chat present end user explicit response apps persona merely shift origin launch action springboard contact list messenger enumerated earlier primary interaction model since beginning computing discrete next model significantly fluid conversational rather o defining rule launching app user essentially drive interaction service according need context see beginning model market today desktop chatgrape obviates need open separate tab app get data document type follow data document looking chatgrape file come sure example see entail opening file within thirdparty apps hop skip jump accessing data without ever launching app tremendous productivity gain made embedding within messaging data currently locked file perhaps one embraced messaging input method well slack slack example never fill profile information would otherwise traditional dull form chat slackbot slack replaces boring ol input form informal chat integration slack also amazing example type appear launched appearin video chat want launch app launch appearin app hop skip jump interaction model closely mirror omnipresent virtual assistant state fairly plain language aided escape character want launch video call video call hard imagine work phone fact already kinda o already recognizes calendar contactrelated keywords expand horizon keywords o identify still quite lot lowhanging fruit semantics o recognizes talk keyword placing call immediately initializes call save one launching facetime tapping person contact view find little call facetime icon expand horizon even imagine apps service respond kind object date action name brand say o know foursquare user could ask foursquare directly recommendation could interact directly text imagine service could even respond directly input o facilitated interaction service via text outside messenger service respond text selection semantically relevant content service even limited messaging intriguing shift responsibility explicitly linking content content creator o service perhaps even example person whose name highlighted might say matter possibility broad language end beginning messaging interface machine communicates much way communicate trend outlined post pervade would mark qualitative shift interact computer whereas computer interaction date largely discrete deliberate event typing command line clicking file clicking hyperlink tapping icon shift messaging conversationalbased ui implicit hyperlink would make computer interaction far fluid natural messaging ai benefit obvious feedback loop interact bot messaging ui better get perhaps true gui well far lesser degree messaging ai may get better rate never seen gui world hold tight thanks julien genestoux joel monegro jason black feedback input post additional reading much refined reading topic check source interesting apps service space twoodo team collaboration tool hashtag generation lark automated chatbased health app chatgrape reference data external service right type appearin integration slack dasher messaging benefit path talk smart private messaging magic text get whatever want demand slack platform team communication cloe text message concierge luka ai recommending restaurant sf chat interface fantastical natural language calendar mac io xai personal assistant schedule meeting glip realtime messaging integrated task management video conferencing shared calendar historical precedent
509,Lobsters,mobile,Mobile Development,Stanford researchers develop method for tracking mobile devices using battery charge data,http://appleinsider.com/articles/15/02/23/stanford-researchers-develop-method-for-tracking-mobile-devices-using-battery-charge-data,stanford researcher develop method tracking mobile device using battery charge data,,privacy advocate long tried educate consumer peril giving apps access gps data group stanford researcher developed method infer device location seemingly much innocuous source battery charge information attack creator dubbed powerspy relies fact mobile device use power get farther connected cellular tower comparing pattern battery consumption device known pattern established previously measuring given area location determined without access location information similar song identification apps like shazam operate thousand audio fingerprint created stored database new snippet recorded user fingerprinted compared existing set show simply reading phone aggregate power consumption period minute application learn information user location researcher yan michalevsky dan boneh aaron schulman stanford wrote paper published earlier month coauthored gabi nakibly israeli defense company rafael ltd aggregate phone power consumption data extremely noisy due multitude component application simultaneously consuming power nevertheless show using machine learning technique phone location inferred estimated route versus actual route estimated route red actual route green researcher achieved impressive precision tracking known route also able infer longer route analyzing data collated variety shorter route give example tracking movement college campus address problem prerecording power profile road segment within given area possible route mobile device may take concatenation subset road segment given power profile tracked device reconstruct unknown route using reference power profile corresponding road segment though research performed android device appear reason method could work locate device running apple io mobile operating system long battery charge data available team also note availability battery data via battery api could increase risk onthesly tracking requiring user load web page mitigate issue researcher suggest remedy like removing radio stack power consumption reporting requiring superuser privilege access data alternatively o maker could treat battery data location indicator giving spot user privacy preference user aware installing application access voltage current data application potential capability risk potentially posed privacy team wrote defense may actually consistent current security policy smartphone operating system like android io current permission scheme
511,Lobsters,mobile,Mobile Development,Radical Statements about the Mobile Web,http://jlongster.com/Radical-Statements-about-the-Mobile-Web,radical statement mobile web,radical statement mobile web detailed explanation blog ensued houdini work mozilla want web win web nt close competing higherend native apps user nt care web need accept dom slow dom make javascript slow solution main thread layoutrendering javascriptbased animation important maybe need native support scrollviews servo right track intention maybe dom answer cry lowerlevel apis going exposed accessibility important prediction reappio prediction prediction,radical statement mobile web february drafted long post mobile web flipboard released new mobile site detailed explanation used canvas instead dom layout content subsequent blog post ensued response since topic fps mobile apps already discussed greatly original post nt relevant anymore nt time polish however would still like point important issue quick note added publishing give huge prop recently formed houdini project involving party web figure make csslayoutrendering extensible talking problem depth see wiki smarter people might able really solve triggered playing react native stem year trying make web work well mobile statement intentionally bold stir discussion assertion may wrong believe least truth going try new pointbased format interesting thing help make argument clear since colorful articulation nt time removed downside quite dense might easy misinterpret go work mozilla want web win however thought experiment going try take role unbiased observer statement undoubtedly controversial none reflect employer thought web nt close competing higherend native apps may think ux getting close always jank let even talk technical even getting close company want develop beautiful groundbreaking app choose native talked enough developer see nt close changing yet user nt care web may argue web brings sort benefit native apps url accessible zoom sadly user nt care clear many user would choose native app web app need accept longer downplay importance performance native app animation longer fail animation smoothly respond gesture progressive enhancement mobile user interact maybe lowend device think wrong bet web lowend dom slow nt think argue question get faster everyone seems assume point dom fast enough mobile web start winning say based nothing indication dom ever fast enough happen lightyears away mobile seen technical description truly plausible way make significantly faster like trying optimize rendering loop render model million polygon really need reduce number polygon model dom make javascript slow land mine browser javascript kill performance dom apis synchronous touch dom entire j engine may block indication working right solution work make dom apis asynchronous first thing really want try make dom work edit statement bold recently involved standard looking solution may actually work much better need guarantee j event loop run fps impossible right main thread layoutrendering ideally even layout would separate thread need guarantee content painted fps well ca nt anything like image decoding especially run javascript main thread dom make really hard asynchronous apis step right direction javascriptbased animation important matter might wonder offthread cs animation nt working ton animation ca nt really hard gesturebased physicsbased animation cs besides animation offthread introduces delay trying interrupt cancel maybe need native support scrollviews instead javascriptbased animation maybe need better native support common gesturebased interaction like scroll view render fixedheight item within view moving element around based finger would diminish need custom jsbased solution talk iosandroid shop see much customization go highend mobile app dropdown native code write custom animation ca nt dropdown like servo right track project tackling correctly writing parallel browser scripting layout everything else run separate thread expose terrible part current web showing point stall javascript event loop block rendering perfectly summed intention make asynchronous version dom apis finally maybe dom answer web dom dom nt work look solution point advanced app work dom see whole react movement ember copying others industry cry something faster controllable dom nt religious lowerlevel apis going exposed work already started controlling layout measurement system browser see might finally allow u start experimenting custom domlike solution believe direction going box tree api especially interest accessibility important start circumventing dom need think make content accessible nothing show impossible obviously important web nt freak might way simpler think prediction next year see significant amount effort run web apps web worker asynchronous apis created interact anything run main thread like layout storage etc reappio lot interesting research vein prediction react native becomes popular significant portion web developer use write webnative apps attempt mitigate dom running apps web worker fails provide experience react native dom still bottleneck see big push collection lowerlevel asynchronous apis layout rendering construct accessibility database instead using dom accessibility apis allow developer apply role various part layout prediction special mode shared memory multithreading becomes available asmjs fallback singlethreaded cooperative mode asmjs nt specially recognized farfetched based current work game already pushing hard grant access lowerlevel rendering layout apis special asmjs subthread giving developer ability construct advanced rendering engine dedicated rendering thread apps written javascript inside web worker communicating asmjs code made fast enough
512,Lobsters,mobile,Mobile Development,"T-Mobile CEO Slams AT&T, Verizon Spectrum Stranglehold",http://www.dslreports.com/shownews/TMobile-CEO-Slams-ATT-Verizon-Spectrum-Stranglehold-132692,tmobile ceo slam verizon spectrum stranglehold,cleaned blog post intensely fought front company,usually case verizon cleaned recent auction securing billion spectrum respectively billion secured auction may great government coffer tmobile ceo john legere called disaster american consumer blog post tmobile website legere said company holding allowed hang back auction implied company active next year mhz auction verizon showed dig deep pocket corner market available spectrum nearly cost lament legere add insult injury fcc rule actually allowed company provide wireless service buy huge amount spectrum sit ten year critic long accused verizon warehousing far spectrum need eye toward limiting new competitor though company repeatedly denied accusation similarly company intensely fought fairly modest rule ensuring spectrum get hand smaller competitor legere quick point dish verizon alone spent billion spectrum sold last auction also point verizon alone control percent nation lowband spectrum next year mhz auction different wireless competition going survive short legere want rule place next year auction set aside least mhz spectrum competitor nation duopoly nt allowed grab legere also call new use lose rule require auction winner actually put spectrum use consumer network instead collecting trading like financial security likely dig dish charlie ergen dish able grab billion spectrum auction courtesy front company exploitation legal loophole intended small business dish claim plan build wireless network many believe ergen collecting valuable public resource sold road tidy profit asking government handout like twin bell got insists legere asking rule level playing field sustain competitive market
513,Lobsters,mobile,Mobile Development,VoIP for SIP Blocked Region,https://www.youtube.com/watch?v=zpMCS5i78QI,voip sip blocked region,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature zute sip dialer work youtube,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature zute sip dialer work youtube
514,Lobsters,mobile,Mobile Development,BlackPwn: BlackPhone SilentText Type Confusion Vulnerability,http://blog.azimuthsecurity.com/2015/01/blackpwn-blackphone-silenttext-type.html,blackpwn blackphone silenttext type confusion vulnerability,http wwwblackphonech http githubcomsilentcircle silenttext messaging application scimp protocol http lloydgithubcomyajl json parsing yajl api vulnerability detail,privacy hot topic moment continues dominate headline news new nsa incursion celebrity phone hack corporate breach reported increasingly regular basis response number product brought market attempt provide consumer greater level privacy typical device allow phone market one premier product released recent year undoubtedly blackphone http wwwblackphonech cited numerous time tech publication one best available defense mass surveillance provides full endtoend encryption facility voice call textmms messaging exploring recently purchased blackphone discovered messaging application contains serious memory corruption vulnerability triggered remotely attacker exploited successfully flaw could used gain remote arbitrary code execution target handset code run attacker privilege messaging application standard android application additional privilege specifically possible decrypt message commandeer silentcircle account gather location information read contact write external storage run additional code attacker choosing privilege escalation exploit aimed gaining root kernelmode access thus taking complete control phone knowledge required attacker target silent circle id phone number target need lured contacting attacker although flaw exploitable scenario well issue patched silent circle blackphone respective app store product update remainder post discus technical detail vulnerability citing source code vulnerable application appropriate code available silent circle github repository http githubcomsilentcircle silenttext messaging application silenttext application bundled blackphone also made available standalone app android iphone provides ability user send text message share file encrypted channel encrypted channel established managed using silent circle instant message protocol scimp tunneled silent circle xmpp server scimp provides endtoend encryption data exchanged given conversation decrypted eavesdropping third party including silent circle scimp implementation supplied silenttext contains type confusion vulnerability allows attacker directly overwrite pointer memory either partially full successfully exploited used gain remote unauthenticated access vulnerable device discussing vulnerability quick overview scimp yajl yet another json library third party library relevant flaw provided scimp protocol scimp simple messageoriented protocol message encoded json object sent xmpp scimp message distinguished fixed header string scimp followed json object followed terminator example message look like scimp scimp message message type followed number data field depending message type message type one following commit sent initiator wishing establish new session also used rekey existing session sent remote party responder response commit message part session establishment sent initiator response message part session establishment confirm sent responder response message indicating session establishment successful data applicationlevel data sent secure session established message encoded json using single map object name map indicating message type variable number string integerbased variable within map relevant specific message type jsonencoded scimp message shown commit version ciphersuite sasmethod hpki json serialization deserialization handled thirdparty library named yet another json library libyajl source code library available http lloydgithubcomyajl understanding basic api relevant discovered scimp vulnerability briefly covered json parsing yajl api yajl library initialized call yajlalloc following prototype yajlhandle yajlalloc const yajlcallbacks callback yajlallocfuncs afs void ctx function creates opaque yajlhandle later passed parameter yajlparse function responsible parsing block json text first parameter yajlalloc function yajlcallbacks structure allows caller define series callback function invoked json parsing certain element encountered yajlcallback structure follows yajl event driven parser mean json element parsed called back something data function table indicate various event called back callback accepts context pointer void passed yajlparse function client code may use pas around context callback return integer nonzero parse continue zero parse canceled yajlstatusclientcanceled returned parse attention note handling number yajl convert number represented double bit long long int number passed client string form using yajlnumber callback furthermore yajlnumber null always used return number yajlinteger yajldouble ignored yajlnumber null one yajlinteger yajldouble defined parsing number larger representable double bit integer result parse error typedef struct int yajlnull void ctx int yajlboolean void ctx int boolval int yajlinteger void ctx long long integerval int yajldouble void ctx double doubleval callback pass string representation number back client used number present int yajlnumber void ctx const char numberval sizet numberlen string returned pointer json text possible result null padded int yajlstring void ctx const unsigned char stringval sizet stringlen int yajlstartmap void ctx int yajlmapkey void ctx const unsigned char key sizet stringlen int yajlendmap void ctx int yajlstartarray void ctx int yajlendarray void ctx yajlcallbacks described comment yajl parser invoke callback whenever corresponding element within json block encountered ctx parameter passed callback ctx parameter passed called third parameter yajlalloc anything caller wish finally possible caller specify custom allocator allocate block memory used store json string achieved filling second parameter yajlalloc function callback custom allocation free routine yajlallocfuncs structure encapsulates callback defined follows structure passed yajl alloc routine allow client specify memory allocation function used typedef struct pointer function allocate uninitialized memory yajlmallocfunc malloc pointer function resize memory allocation yajlreallocfunc realloc pointer function free memory allocated using reallocfunction mallocfunction yajlfreefunc free context pointer passed allocation routine void ctx yajlallocfuncs handle allocated block json text parsed calling yajlparse following api yajlstatus yajlparse yajlhandle hand const unsigned char jsontext sizet jsontextlen seen function simply take previouslycreated yajlhandle followed block text parsed length calling yajlparse block text result userspecified callback defined earlier called json element encountered illustrate yajl callback api used action consider following json block valuestring innerkey parsing block following sequence callback invoked yajlstartmap called parsing initial token yajlmapkey called parsing yajlinteger called parsing yajlmapkey called parsing yajlstring called parsing valuestring yajlmapkey called parsing yajlstartmap called parsing token following yajlmapkey called parsing innerkey yajlinteger called parsing yajlendmap called parsing token following yajlendmap called parsing final token vulnerability detail vulnerability question occurs json deserialization incoming scimp message within libscimp performed scimpdeserializemessagejson function defined srcscimpprotocolfmtjsonc code shown edited brevity sclerror scimpdeserializemessagejson scimpcontext ctx indata sizet insize scimpmsg msg sclerror err ksclerrornoerr yajlgenstatus stat yajlgenstatusok yajlhandle phand null scimpjsoncontext jctx null jbuf null sizet jbuflen static yajlcallbacks callback null null null null sparsenumber sparsestring sparsestartmap sparsemapkey sparseendmap null null yajlallocfuncs allocfuncs yajlmalloc yajlrealloc yajlfree void null check cleartext insize strlen kscimphdr memcmp indata kscimphdr strlen kscimphdr handle cleartext message else process scimp message err indata insize jbuf jbuflen ckerr jctx xmalloc sizeof scimpjsoncontext cknull jctx zero jctx sizeof scimpjsoncontext phand yajlalloc callback allocfuncs void jctx yajlconfig phand yajlallowcomments stat yajlparse phand jbuf jbuflen ckstat stat yajlcompleteparse phand ckstat isntnull jctx msg msg jctx msg function simply allocates zero context structure jctx scimpjsoncontext structure establishes yajl handle invokes yajlparsefunction following code snippet show function sparsestartmap sparseendmap pair function invoked whenever opening brace closing brace encountered respectively static int sparsestartmap void ctx scimpjsoncontext jctx scimpjsoncontext ctx int retval isntnull jctx jctx isstate isnull jctx msg jctx msg xmalloc sizeof scimpmsg zero jctx msg sizeof scimpmsg jctx level done return retval static int sparseendmap void ctx scimpjsoncontext jctx scimpjsoncontext ctx isntnull jctx isntnull jctx msg jctx level return see sparsestartmap jctx msg pointer initialized pointer scimpmsg structure nt initialized already following definition typedef struct scimpmsg scimpmsgptr next scimpmsgtype msgtype void userref union scimpmsgcommit commit scimpmsgconfirm confirm scimpmsgdata data scimpmsgcleartxt cleartxt scimpmsg simple structure used contain scimp message type denoted msgtype field data value message stored within union interpreted depending value msgtype field message type structure contained within union follows typedef struct version ciphersuite sasmethod hpki scimphashlen hcs scimpmaclen scimpmsgcommit typedef struct pk sizet pklen hcs scimpmaclen typedef struct pk sizet pklen maci scimpmaclen typedef struct macr scimpmaclen scimpmsgconfirm typedef struct seqnum tag scimptaglen msg sizet msglen scimpmsgdata typedef struct msg sizet msglen scimpmsgcleartxt revisit later initializing jctx msg sparsestartmap increment jctx level integer integer indicates nesting level within json message currently examined sparseendmap function performs corresponding decrement operation jctx level variable indicate end currently nested block nesting level utilized sparsemapkey callback also passed yajl indicate whether key message type occurs nesting level variable name occurs nesting level anything else static int sparsemapkey void ctx const unsigned char stringval sizet stringlen scimpjsoncontext jctx scimpjsoncontext ctx int valid isntnull jctx jctx level valid sparsemsgtype jctx stringval stringlen else valid sparsekey jctx stringval stringlen return valid parsing top level json block nesting level map key must valid message type determined sparsemsgtype static int sparsemsgtype scimpjsoncontext jctx const unsigned char stringval sizet stringlen int valid jctx isstate relevant else scimpmsgptr msg jctx msg cmp stringval kcommitstr strlen kcommitstr msg msgtype kscimpmsgcommit valid else cmp stringval strlen msg msgtype valid else cmp stringval strlen msg msgtype valid else cmp stringval kconfirmstr strlen kconfirmstr msg msgtype kscimpmsgconfirm valid else cmp stringval kdatastr strlen kdatastr msg msgtype kscimpmsgdata valid return valid assuming recognized message type received msgtype field scimpmsg structure originally allocated sparsemapstart initialized constant denoting type message value following message type submap whose key parsed sparsekey function since jctx level variable set parsing submap sparsekey function follows static int sparsekey scimpjsoncontext jctx const unsigned char stringval sizet stringlen int valid jctx isstate relevant else scimpmsgptr msg jctx msg switch msg msgtype case kscimpmsgcommit cmp stringval kversionstr strlen kversionstr jctx jtype jctx jitem msg commitversion valid else cmp stringval kciphersuitestr strlen kciphersuitestr jctx jtype jctx jitem msg commitciphersuite valid else cmp stringval ksasmethodstr strlen ksasmethodstr jctx jtype jctx jitem msg commitsasmethod valid else cmp stringval khpkistr strlen khpkistr jctx jtype scimpjsontypehash jctx jitem msg commithpki valid else cmp stringval khcsstr strlen khcsstr jctx jtype scimpjsontypemac jctx jitem msg commithcs valid break case cmp stringval kpkrstr strlen kpkrstr jctx jtype scimpjsontypestring jctx jitem msg jctx jitemsize msg valid else cmp stringval khcsstr strlen khcsstr jctx jtype scimpjsontypemac jctx jitem msg valid break code return valid seen depending message type jctx jtype jctx jitem point relevant field within scimpmsg structure filled along information type data given field field filled sparsestring sparsenumber callback passed yajl shown static int sparsestring void ctx const unsigned char stringval sizet stringlen scimpjsoncontext jctx scimpjsoncontext ctx int valid jctx jtype scimpjsontypehash jctx jtype scimpjsontypemac jctx jtype scimpjsontypetag jctx jtype scimpjsontypestatetag buf max max scimphashlen scimpmaclen scimptaglen sizet datalen sizeof buf stringval stringlen buf datalen cryptok jctx jtype scimpjsontypehash datalen scimphashlen jctx jtype scimpjsontypemac datalen scimpmaclen jctx jtype scimpjsontypetag datalen scimptaglen jctx jtype scimpjsontypestatetag datalen scimpstatetaglen copy buf jctx jitem datalen valid else jctx jtype scimpjsontypestring sizet datalen stringlen buf xmalloc stringlen stringval stringlen buf datalen cryptok sizet jctx jitemsize datalen jctx jitem buf valid else xfree buf return valid static int sparsenumber void ctx const char str sizet len scimpjsoncontext jctx scimpjsoncontext ctx char buf int valid len sizeof buf copy str buf len jctx jtype val atoi buf jctx jitem val valid jctx jtype val atoi buf jctx jitem val valid return valid problem way scimp employ yajl library sparsemapkey function call sparsemsgtype function potentially parsing single json block result altering message type even field scimpmsg union filled sparsestring sparsenumber example consider happens following message received pki maci data seq null message parsed yajl library resulting following callback sparsestartmap allocates jctx msg zero set jctx level sparsemapkey indicates message sparsestartmap increment jctx level sparsemapkey parse set pk pklen field scimpmsg structure sparsemapkey parse maci field set maci array sparseendmap decrement jctx level sparsemapkey indicates data message overwrites msg msgtype field new type sparsestartmap increment jctx field sparsemapkey par seq field integer field overlap low byte pk pointer allocated previously sparseendmap decrement jctx level sparsemapkey indicates message overwriting msg msgtype field message pk pointer modified arbitrary content attacker resetting jctx msg msgtype field attribute end message type confusion vulnerability occur seq field supplied data message incorrectly interpreted pk field raw memory pointer case low two byte set note utilizing message data could arbitrarily modify entire pointer pklen field indicating much data pk point assuming correct phase protocol negotiation sending message result following crash fatal signal sigsegv thread comsilentcircl idebug idebug revision idebug pid tid name comsilentcircl comsilentcirclesilenttext idebug signal sigsegv code segvmaperr fault addr deadbaad idebug abort message invalid address address corrupt block passed dlfree idebug deadbaad idebug idebug sl fp idebug ip sp lr pc cpsr idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug scr idebug idebug backtrace idebug pc systemliblibcso idebug pc systemliblibcso idebug pc dataapplib idebug pc dataapplib idebug pc dataapplib idebug pc dataapplib idebug pc dataapplib idebug pc dataapplib idebug pc dataapplib highlighted line show invalid address passed free pointer corrupted manipulating mechanic underlying heap application data structure possible leverage flaw gain arbitrary code execution
515,Lobsters,mobile,Mobile Development,Creating a Task Application for iOS using Swift,http://developer.telerik.com/featured/creating-task-application-ios-using-swift/,creating task application io using swift,telerik ui io discontinued uwp xamarin kendo ui angular kendo ui react mean customer documentation resource telerik ui xamarin question address,telerik ui io discontinued taking decision easy multiple factor taken consideration time changing mobile development trend native mobile application development become preferred method creating mobile apps io android existing crossplatform framework hardly compete always stood developer productivity believe road productivity paved skill reuse targeting multiple platform single code base deliver truly native application focusing product portfolio enhance productivity working popular rising development platform way continue provide best ui productivity tool help developer keep pace latest trend technology staying true calling increasing investment tooling around latest technology developer need includes net related product like uwp xamarin javascript offering kendo ui angular brandnew kendo ui react name mean customer effective immediately new feature product update accompanying documentation resource remain available understand might inconvenience strongly advice try telerik ui xamarin continue building io mobile application question address ready best answer question comment might drop u line reply soon possible
516,Lobsters,mobile,Mobile Development,"BlackBerry CEO prods regulators for 'app neutrality,' wants cross-platform iMessage",http://appleinsider.com/articles/15/01/22/blackberry-ceo-prods-regulators-for-app-neutrality-wants-cross-platform-imessage,blackberry ceo prod regulator app neutrality want crossplatform imessage,wrote,comparing net neutrality debate expansion railroad century blackberry ceo john chen tuesday called authority force company apple netflix make service available consumer regardless platform carrier like railway last century building track carry traffic point throughout country chen wrote blog post adapted letter sent member congress railway car travelling track today internet world controlled carrier content application provider therefore truly open internet policymakers demand openness traffictransport layer also contentapplications layer ecosystem chen specifically called apple imessage netflix example two popular service available consumer running blackberry device developer preference support two largest platform created twotiered wireless broadband ecosystem iphone android user able access far content application customer using device running operating system argues expected chen pointed blackberry content neutrality strategy seen company open blackberry messenger blackberry enterprise server io android relatively recent tactic however service available blackberry subscriber nearly decade introduction decision open bbm reportedly source major internal strife blackberry company cofounder jim balsillie pushing hard move severing tie company thenceo thorsten heins killed plan abject failure blackberry smartphones left company even behind apple io google android device program reinstated chen prominent figure taking rein blackberry company remains major player enterprise neither likely help push idea app neutrality however given economic burden would place smaller company highly intrusive nature regulation
517,Lobsters,mobile,Mobile Development,Using TestFlight to Release Awesome Apps First Try,http://www.ryanbrink.com/using-apples-testflight-program/,using testflight release awesome apps first try,joshuaoxj crowdsourced qa getting started testflight io developer program member center itunes connect member center itunes connect create app get first build get approved get beta tester hackernews reddit inbound get build update get feedback fabricio google analytics one one summary,joshuaoxj asked yesterday used testflight gatoday http ryanbrinkcomgatoday thought answer blog post case one looking bit guidance testflight hugely helpful number way solo developer qa team one testflight helped crowd source product verification running campaign get user sign testflight access built initial traction idea helped landing page seo launched testflight tester engaged set user helping iron key ux issue actual release roadmap gatoday future crowdsourced qa designed developed launched gatoday case never tried know really hard test something built know instead depending incredibly amazing average design unit testing skill decided try crowd sourcing testing worked well case gatoday ever available app store user external tester list besides helping make sure gatoday ready initial release group engaged user always running working helping find bug get public unless working sort topsecret app finding group people willing go trouble setting testflight get prerelease version software incredibly valuable help iron bug catch also great source feedback design general easy use solve problem would give fivestart review getting early answer question crucial okay enough pitching let get started getting started testflight first thing first need access apple io developer program service give access apple developer member center itunes connect member center configure thing development get access code signing certificate create development distribution profile developer manage app identifier member center thing development assume post got thing set humming along itunes connect configure thing release set financial legal agreement apple set app store page apps manage prerelease disitribution focusing today like break thing step create app go detail pretty straightforward first foremost need create configure app itunes connect fairly straightforward process match application identifier come name write basic description app store sure lot get done right app well outside scope blog although may find helpful advice app store optimization aso http wwwmobyaffiliatescomblogaguidetoappstoreoptimisationaso get first build beta tester useful anything test created app itunes connect use xcode application loader push first build apple tool responsible building packaging signing uploading app related file apple distribution server task fairly straightforward self explanatory apple guide get approved yes unfourtunitally even prerelease build require approval apple lukily first build given version requires real approval prerelease approval typically happen much faster full release approval first build new version gatoday typically approved external testing within day submission following build version approved instantly submit build external testing approval go app click prerelease build link external row latest build submit app link take page fill basic information required ask apple blessing first build version question form asks made significant change build build likely approved external testing immediately handy small fix fast update major issue found beta testing keep mind submit build approval per app per period making many small change might end wait important one ever happened get beta tester thought talk quickly got external tester gatoday case boat trying get something reasonable quality start created basic landing page gatoday described building simple screenshots user could get sense going work sign site allowed user optin free forever beta access giving apple id distributed link page link sharing site social network pitching free access app cost would released turn beta testing link fairly well hackernews reddit inbound also basic twitter search find people already looking better google analytics app io replied directly tweet link helped gather email address fairly engaged user ready help test app simply added apple id list external tester gatoday get external tester list clicking app itunes connect going prerelease external tester img alt finding external tester src http iimgurcomhupokxjpng width get build build approved external testing list external tester ready go soon build becomes approved link external becomes invite tester clicking trigger testflight email everyone list instruction accessing prerelease build via testflight app user first build future build trigger push notification simple upgrade process really work great thing going note occasionally ran user signed apple id check associated email inbox therefore receive testflight invitation make sure user know invited via email apple id always clear io user update update easy simply upload new build via xcode application loader submit review usually instant made significant change clikc invite link allow tester upgrade get feedback besides getting feedback via submission testflight app exactly obvious external tester highly recommend integrating something like fabricio google analytics help keep track issue user running fabricio give great crash report google analytics tell user app often interacting besides two tool ran mail campaign throughout prerelease testing cycle gatoday asking user fill form like one one asked bit experience charge app released would like see next many user filled form helped decide exactly would charge focus development future feature summary testflight work exceptionally well get people running latest build finding bug app reach world plus use engaged user help refine building work ensure good product go ga hopefully way getting helpful feedback user know using prerelease build instead negative review everyone world see using testflight effective anything missed join conversation
518,Lobsters,mobile,Mobile Development,Native Mobile Apps with JavaScript Using NativeScript,http://developer.telerik.com/featured/getting-started-nativescript/,native mobile apps javascript using nativescript,,earlier march unveiled kinvey studio lowcode tool progress help pro developer build apps fast month since checked studio let look new nativescript developer care
519,Lobsters,mobile,Mobile Development,10 Free ebooks on Windows Phone and Windows Store app development,http://superdevresources.com/free-ebooks-windows-phone-windows-store-app-development/,free ebooks window phone window store app development,free ebooks download code sample free ebooks window app development microsoft virtual academy creating mobile apps xamarinforms download pdf epub mobi microsoft platform tool mobile app development download pdf epub mobi programming window store apps html cs javascript edition detail download pdf epub mobi code sample location intelligence window store apps detail download pdf code sample window phone development absolute beginner window phone development succinctly download pdf kindle format net technology guide business application detail download pdf window phone programming c download pdf developing advanced window phone app connects cloud download pdf programming window phone detail download pdf epub mobi code sample net book zero detail download pdf xps code sample c programming yellow book rubber duck edition detail download pdf share,ebooks great way learn free time downloaded free ebooks developing apps window platform post tried collect known free ebooks window phone window store app development including window universal platform xamarin find direct link download available multiple format like pdf mobi epub etc link download code sample also included wherever available free ebooks window app development tend keep list uptodate latest released book find many free ebooks microsoft press microsoft virtual academy creating mobile apps xamarinforms author charles petzold page written legendary author charles petzold ebook deep dive c programmer want write application using single code base target three popular mobile platform io android window encompassing universal window platform window phone download pdf epub mobi microsoft platform tool mobile app development author cesar de la torre simon calvert page book outline platform microsoft form critical capability organization selecting technology tool mobile application development platform madp rapid mobile application development rmad also describes core decision factor organization consider outline technical capability available within microsoft solution product download pdf epub mobi programming window store apps html cs javascript edition author kraig brockschmidt page indepth ebook writing window store apps using html javascript window platform ebook includes chapter appendix detail download pdf epub mobi code sample location intelligence window store apps author ricky brundritt page dive world location intelligence different option creating location aware application window platform detail download pdf code sample window phone development absolute beginner window phone development succinctly author matteo pagani page free ebook syncfusion cover important concept develop window phone application basic one like xaml application lifecycle etc advanced one like background task geolocalization speech apis download pdf kindle format net technology guide business application author cesar de la torre david carmona page guide help select right microsoft development technology approach custom net application development depending priority application business domain targeted decision maker software architect development lead developer involved selecting technology use application project specifically cover custom enterprise application development although independent software vendor isvs might also find information recommendation useful detail download pdf window phone programming c author rob mile page book tell develop application game using xaml xna using monogame serve good introduction window phone development experienced c developer download pdf developing advanced window phone app connects cloud author david britch francis cheung adam kinney rohit sharma page get familiar design implement advanced application window phone take advantage remote service obtain upload data providing great user experience device download pdf programming window phone author charles petzold page slightly old one core concept still relevant learn basic writing application window phone using c programming language silverlight xna framework detail download pdf epub mobi code sample net book zero author charles petzold page ebook introduction c microsoft net framework programmer experience c c would serve foundation developing window phone window store apps c detail download pdf xps code sample c programming yellow book rubber duck edition author rob mile page c yellow book used department computer science university hull basis first year programming course provided free cost author rob mile detail download pdf let wealth knowledge get lost hit share button tell fellow developer know free ebooks available window app developer let u know make sure update list
521,Lobsters,mobile,Mobile Development,Mobile Deep Linking for Web and Hybrid Apps,http://developer.telerik.com/products/mobile-deep-linking-web-hybrid-apps/,mobile deep linking web hybrid apps,challenge partnership community deliver expected,challenge demand better user experience continues grow time develop high quality modern engaging application continues shrink stop sweating ui focus part application truly make differencepartnership community like developer purpose life make developer superheroes enabling deliver expected faster expected nearly two decade partnering community two million developer help cut development time increase productivity make easy embrace latest technology user experience trendsdeliver expected using modern featurerich professionally designed ui component telerik kendo ui armed everything need deliver outstanding web mobile desktop experience le timewith backing legendary technical support provided directly developer build product confident best partner rely journey
522,Lobsters,mobile,Mobile Development,The 300 ms Click Delay and iOS 8,http://developer.telerik.com/featured/300-ms-click-delay-ios-8/,m click delay io,challenge partnership community deliver expected,challenge demand better user experience continues grow time develop high quality modern engaging application continues shrink stop sweating ui focus part application truly make differencepartnership community like developer purpose life make developer superheroes enabling deliver expected faster expected nearly two decade partnering community two million developer help cut development time increase productivity make easy embrace latest technology user experience trendsdeliver expected using modern featurerich professionally designed ui component telerik kendo ui armed everything need deliver outstanding web mobile desktop experience le timewith backing legendary technical support provided directly developer build product confident best partner rely journey
524,Lobsters,mobile,Mobile Development,Ignore the code - Jolla,http://ignorethecode.net/blog/2014/12/08/jolla/,ignore code jolla,webos jolla jolla tablet crowdsourcing project end tomorrow onehanded operation humongous assistant like spatiality additional note,first create new kind device many advantage get lot recognition temporary monopoly market entering market later also advantage get learn predecessor mistake also much better understanding make product work people want product kind feature product need offer knowledge allows much considerate design product take iphone came app store app switcher push notification large screen apple added feature later many way still feel tacked fully native fully thought part o device came later notably webos already knew offer app switcher way manage notification thus created system integrated feature o much tighter natural powerful versatile way jolla another system took many lesson io android rethought mobile system work since jolla tablet crowdsourcing project end tomorrow seems like good time talk thing jolla really well onehanded operation phone become humongous recently much screen easily accessible one hand phone operating system still designed people used small phone every part screen could easily reached jolla know us gesture work around still back button topleft corner allows move back inside app swiping left right thing move back swiping right left move forward assistant like user interface move multiple consecutive screen even better dragging open menu example note application app like jolla apps little ui chrome want create new note send note somebody simply drag move ui show menu sliding similar pull refresh gesture except depending far drag different menu entry selected spatially menu part note ui hidden edge screen drag screen send note touch screen anywhere start dragging share note selected release simple quick gesture work one hand matter large screen spatiality way note menu arranged edge screen note app hint something else jolla really well arranges thing spatially feature io android tacked seemingly random without real logic appear would located io physical thing people jolla took great pain think jolla piece fit together take way jolla lock screen home screenapp switcher app screen fit together io android three disparate thing really connected jolla three different section virtual space move dragging turn jolla device see lock screen drag reveal lock screen menu drag reveal home screen combine app switcher dock drag reveal app screen go back app switcher drag app screen lock phone drag home screen see immediately understand piece fit together supposed switch screen power system designed whole rather starting simple growing time video myriam joire show jolla ui additional note jolla hardware nice bit thick look good hardware button volume power arranged right side device prevents problem trying change volume accidentally turn phone power button exact opposite volume button pushing one make accidentally also push counterpart side phone grid running apps allows get quick access running apps force scroll apps find one looking jolla even run android apps though always perfectly amongst fringe phone operating system sailfish firefox o ubuntu mobile jolla sailfish easily mature firefox o interesting jolla phone something could actually use even something could genuinely prefer android io window phone
525,Lobsters,mobile,Mobile Development,Chinese mobile app UI trends,http://dangrover.com/blog/2014/12/01/chinese-mobile-app-ui-trends.html,chinese mobile app ui trend,table content input hard indeterminate badge walled garden portal platform account login screen chat universal ui buying stuff location location location everything downloaded word moment miscellanea footnote input hard pinyin stemming soundex recent interview indeterminate badge new content loaded b new feature available c user turned subdued notification part app walled garden portal platform splitting apps emacs vim law allow hardware device use app communicate sina tencent news hamburger menu ota install account login screen captcha chat universal ui smarterchild hospital autotranscribes voice message mentioned text grata emojis traditional text emoticon buying stuff buy thing elsewhere app buy thing real life send payment friend buy thing nothing anything location location location momo filed ipo weiju bilin everything downloaded word moment filtering intimate companiesnews autoposts game photo filter miscellanea option miui yunos smartisan launch event ray andrew alex appsocially andrew badr,summer packed thing moved san francisco guangzhou china work unlikely chain coincidence entirely recall become product manager wechat popular messaging app china moving new country meant learning lot thing differently speaking new language eating shopping getting around month surprised acclimated become first seemed overwhelmingly alien place applied digital life replaced apps used owning keen interest someone tech industry extent since similarly become blind adaptation required one day fun started writing list notebook thing different apps accustomed using creating back u finished surprised long list seemed fitting flesh post table content input hard indeterminate badge walled garden portal platform account login screen chat universal ui buying stuff location location location everything downloaded word moment miscellanea footnote input hard pinyin fuzzy matching people use myriad method typing chinese character everything pinyin tracing character hand strokeorganized keypad even one emulating older cell numeric keypad method one prefers seems depend largely era region one grew though pinyin seems popular yet site apps require using happily accept latin character search term resolve chineselanguage result independent operating system even use heuristic interpret typo homophone used annoying o apps work way apps gone great length handle sort chinese input surprise seldom implement good fuzzy matching english eg stemming soundex gracefully handling diacritical mark punctuation capitalization voice message voice search voice agent make typing smoother avoid altogether voice message chat apps particularly wechat popular save hassle typing godsend older generation little proficiency computer much le muscle memory various method inputting chinese character personally always feel slightly inconvenienced receive voice message must stop listen instead skim also feel awkward replying voice particularly public fear people clearly feel way easy witness many public place sending voice message typical pose holding phone microphone mouth slight angle pressing button thumb voice search also widely supported across apps recent interview andrew ng noted search made voice input qr code everything shipped conducted user research interview san francisco gather insight u habit preference one point interview showed subject qr code asked like take picture brings mystery website scoffed one college girl another said took photo one using camera app apparent effect never tried think coupon surmised often adding bit afraid might phone taped buffudled reaction show coworkers underscore point qr code never took u chinese guess stranger qr code printed ad brochure restaurant menu business card yes coupon even back train seat restroom stall door apps qr code reader feature builtin code find printed thing sometimes work one app often row qr code wechat weibo apps contain url one would expect always one deeplink app scanned external reader describe later code used everything yes marketing website also useful thing like adding people meet real life contact paying thing logging site indeterminate badge apps china liberally employ ui element best described possible native ui control io seen u apps use standard red badge used number used every point menu hierarchy cascading ending bottom tab opened app little find screen sequined indeterminate badge indicate new content loaded somewhere beneath badged ui element indicates new item require action user exact number matter used social medium news feed well stream new item movie music ecommerce apps b new feature available find red next c user turned subdued notification part app instance one mute chat wechat supplants numbered badge indeterminate one new message sent chat apps employ numbered indeterminate badge ui element child displaying type numbered one take precedence get displayed parent strike invention necessity complex menu hierarchy require thoughtful mean guiding user plunge depth also heightens addictiveness many apps instance many numbered badge would inyourface fun fact qq drag numbered badge indeterminate one come unstuck parent ui element disappear little puff smoke walled garden portal platform richard rise classic essay first draw distinction two opposing view software design approach exemplified unix c developed bell lab lean towards collection small somewhat crude interoperable tool right approach exemplified common lisp scheme emacs developed mit approach produce larger comprehensive monolithic solution problem latest trend u apps splitting apps evermorefocused minimalist taskdriven apps nod towards school apps tugged opposite direction every app accumulated feature seemingly unrelated ostensible purpose sometimes cleverly integrated sometimes strapped arbitrarily imagine bid make app retain eyeball work way daily habit example come mind wechat emacs vim besides messaging video call news feed wallet payment service favorite feature functioning like evernote game center builtin game locationbased people finder shazaamlike songmatching service accordance law mail client official account platform described later go far providing layer allow hardware device use app communicate service instead requiring custom apps baidu map weather optional feature travel guide full mode buying kind thing tencent map let send audio postcard qr code reader obligatory grouponstyle local offer weibo twitter analog much button actually allows one post distinct type content blog entry restaurant review grown wallet feature allencompassing yahoolike homepage died u sometime early long life site like sina tencent news though apps sprouted portallike feature actual portal site apps seem popular enough new hamburger menu u apps standardized way group noncategorizable oddsandends thing like setting help often tab far right elipsis icon dreaded hamburger menu case tab hamburger menu icon chinese apps sometimes likewise using often second third bottom tab emblazoned n discover menu house changing menagerie fun notquiteessential extra augment core function app icon choice typically compass many app store lot apps screen promoting apps download typically game often apps well sometimes screen link io app store time circumventing app store ota install entire thirdparty app store using method also promoted within popular apps android big app store releasing app requires listing updating even io alternative store see ad one called apple helper requires installing custom provisioning profile use cydia still popular jailbroken iphones abound account login screen phone number token password u site apps typically allow two method logging traditional email password thirdparty authentication facebook google day course also used confirming phone number messaging apps whatever spinoff social app du jour come key number receive confirmation code via sm apps offer type phone number registrationlogin prefer also applies website even without apps qr code logins many site also allow user log scanning qr code app qr code expiring session identifier read mobile app associate browser session loggedin account ideal situation want user entering password actual keyboard told past many people used online service public computer place like internet cafe plagued keyloggers spyware third party logins many apps also offer thirdparty authentication wechat qq sina weibo sometimes renren phone switch respective app website get choice either traditional login scanning qr code thirdparty mobile app security measure bank site well alipay require special browser plugin implementing password field bank even gave usb thumbdrive containing kind crypto key sure hide often login screen require completing captcha far consistently u apps site typically use registration form mobile apps even chat universal ui official account wechat popularized concept brand public figure kind like irc aim bot yore think smarterchild bank phone company blog hospital mall government agency many institution otherwise would native apps mobile site opted instead official account send kind message text image voice etc reply either automated fashion routing human somewhere interface exactly chatting friend save one difference menu bottom shortcut main feature account though toggled away reveal normal text field every feature use normal chat available wechat even autotranscribes voice message mentioned text passing thirdparty server running account official account also push news update subscriber every medium outlet operates one making screen account live much akin r reader many user success model led many apps appropriating chatstyle ui different way sina weibo naturally us official account feature qq also found support area many apps startup called grata even sell whitelabel version dropped app app maker seized upon insight familiar chatstyle ui would make sense actually copied entire ui lock stock barrel layout threetabbed bottom menu news message pushed subscriber emoticon sticker massadoption emojis smiley available western apps direct graphical equivalent traditional text emoticon perhaps common use qq long ago set standard graphical emoticon set icon wonderfully expressive versatile even compared emojis icon set range basic emotion odder one like one fitting time place app offering chat feature would remiss copy indeed emoticon carried forward wechat many many apps including larger animated sticker also obligatory though contrary expectation seem like people asia stickercrazy people u buying stuff online payment china bit rocky start due well complexity working chinese bank website instead taking credit card number require user choose bank list thirty fill form bind account bank apparently offer unique point integration website must support quickly abstracted thirdparty payment solution like tenpay alipay adopted widely website singlesignon mobile payment many mobile apps link bank account used intermediary apps freeing going onerous binding process yet another app time seen u app able use venmo pay hotel room hotel tonight stranded airport delighted see option booked room right rather peruse option might require enter credit card information go without saying key difference user download weird extra walletpayments app wallet built apps already every app wallet management functionality around payment organized central screen usually called addition screen button buy thing elsewhere app would naturally come eg buying offer local offer app buy thing real life scanning qr code displayed pointofsale vice versa also phone show qr code read camera pointofsale tad faster send payment friend usually called traditional red envelope used give gift money china buy thing nothing anything instance apps feature offer plane ticket lottery ticket movie ticket uberlike service hail cab eg dididache way recharge prepaid cell phone service way pay utility bill apps miniversion jdcom partner ecommerce site well way buy virtual currency apps wallet use similar layout grid colorful icon typically representing collection function even actual app screen like allowing buy thing balance dude trust shield okay app touching money make enormous pain promising security transaction often screen us giant shield icon somewhere u ecommerce site course similar thing early remember safe today make promise subtly also popular apps supposed somehow make phone run faster free memory make secure perhaps rid snake superficially reminiscent made window xp nadir malware issue course kind app useless phone know real deal got big shield location location location apps never shy asking permission retrieve location usually find way use look hard enough whether autofilling dropdown showing weather populate screen many apps also let connect stranger nearby creepy tried u apps like highlight skout never degree mainstream success category enjoyed could due differing cultural attitude simple function population density urbanisation widelyused widelyimplemented idea standalone category momo one app expressly built purpose million monthly active user already filed ipo let meet people near also find event discussion game weiju bilin contender category built everyday apps aside popularity standalone apps remarkable still every normal seemingly utilitarian app also includes feature wechat qq two popular messaging apps feature giving simple list people near often also letting browse photo posted news feed optin course appear list people nearby contactable couple hour virtue looking list weibo unlike twitter let see post near well popular account group major music movie tv apps even show medium people near watching listening also noteworthy baidu liveupdated blockbyblock population density map created aggregating user location transmitted server feeling mainstream u apps ever added feature even careful restrained implementation instant fodder scare story evening news broadcast angry diatribe blogosphere interest group another everything downloaded every app centered around kind medium allows download thing offline consumption includes music apps qq music duomi baidu music etc tvmovie apps iqiyi pptv tencent video baidu video guaranteed subway ride see least dozen people zoned catching show commute something never seen u likely ability download show major news apps let suck hundred article later perusal every major map app allows store offline copy map city even entire country english chinese translation apps like baidu fanyi youdao follow suit allowing user download set training data faster coarser offline machinetranslations apps include functionality highly tout marketing download movie song usually given choice quality setting told exactly much data storage used kb instance u apps would reduce progress bar omit entirely often time give graph total disk usage well word moment worth breaking general trend call special attention design feature first saw seemed someone hastily ducttaped ersatz facebook news feed app slapped picassa icon used found surprisingly original subversive feature fact everything news feed filtering every one post filtering reordering one friend annoying take feed allornothing deal intimate like comment post mutual friend see friend facebook mean author post accurate idea many people liked commented post user inhibition engaging post companiesnews follow company news official account push update separate area news feed though friend repost content account moment take deliberate action autoposts thirdparty apps post moment user initiate get switched wechat manually confirms post time game tencent make boatload money zyngastyle social medium game however good sense relegate activity section app safely ignored photo filter though many type content posted moment biased towards photo moment also actively eschews instagramstyle filter attempt make post fast spontaneous raw result design decision way sewn parent app people addicted checking feed switch messaging checking feed commenting engaging back swift fluid movement people perform countless time day miscellanea assistive touch probably half iphone user see option turned make floating button appear screen time button besides annoying emulates hardware button well multitouch gesture user whose impairment prevent performing nobody give straight answer person two functioning hand full complement motor neuron enabled obscure accessibility setting answer range protecting investment phone wearing physical home button fun play bored cutesy mascot see lot cutesy mascot often shown loading error screen apps include quick way keeping tab local pollution level ad splash screen quite apps show fullscreen ad start wait load typically preloaded background even baked app sometimes contentitems available purchase inside app special event promotion time unrelated sort ad see billboard subway theming clearly trend major apps offering way themeskin seem think single u app use io android rom place google blocked anyway people get much value lilywhite unadulterated google experience nexus device offer stock o distribution phone terrible anywhere fill void alternative android o distribution emerged including miui yunos smartisan quite polished share original ui idea enough time android device make full note perhaps topic future post highly recommend watching launch event english subtitle entertainment value acknowledgement thanks ray andrew alex appsocially zach xiong andrew badr revision post
527,Lobsters,mobile,Mobile Development,Looking for technical users to Beta test SuperBeam for iOS (P2P file transfer),https://docs.google.com/a/ryanbrink.ca/forms/d/1-lRGyXlwaPPWJS4V2AoG_aD9O0Eml1nEnke0PhUskbo/viewform,looking technical user beta test superbeam io file transfer,,never submit password google form
529,Lobsters,mobile,Mobile Development,OnePlus One Review,"http://www.tomshardware.com/reviews/oneplus-one-smartphone,3992.html",oneplus one review,oneplus one two good true oneplus one tech spec oneplus one htc one apple iphone plus availability option,today best oneplus one dealsoneplus one two good true google nexus phone gained popularity pairing uncluttered android experience good hardware affordable price ascension nexus high perch premium priced android flagship distinct opportunity player google capture market oneplus want fill void left nexus affordable flagship oneplus onefounded december pete lau previously vice president oppo electronics oneplus newcomer smartphone market created around mantra never settle oneplus strives deliver premium product focus solely feature customer find useful although direct link oppo oneplus insists separately run company image credit oneplus oneplus managed create lot buzz around first device oneplus one part device scarcity oneplus one purchased via oneplus website receiving special invitation invitation distributed oneplus promotional event oneplus forum social medium additionally person buy one receives invitation give friend invitation system interrupted brief period starting october time generally available publicinterest one also stoked impressive list hardware oneplus one come snapdragon soc ram display camera mah battery matching hardware many current flagship android phone also ship cyanogenmod popular android community rom known lean highly customizable even impressive price one start around half price flagship competitorsoneplus one tech spec oneplus one htc one apple iphone plus term hardware oneplus one compare favorably flagship phone like samsung galaxy lg htc one thing missing support microsd card removable battery speaking battery one power cell larger found lg iphone plus smaller cell samsung note larger image frontal area width x height weight oneplus one le value plus note foregoing physical capacitive button lg requires le bezel area allowing shorter narrower lighter one even though size screenavailability optionsthe oneplus one purchased oneplus website receive invite starting october oneplus offering one general public brief period timethe one support four gsm frequency mhz five umtswcdma frequency mhz give good global coverage also support lte band u one compatible tmobile sprint verizon also since phone purchased directly oneplus arrives unlockedthere two different color onboard storage option oneplus one silk white gb sandstone black gb white version smooth glossy finish black model come grippy texture image credit oneplus really get unlocked flagship phone looking list hardware answer seems yes paraphrase yoda hardware spec make one great live flagship killer moniker one also need attractive appearance good inhand feel feature rich bugfree software strong performance longlasting battery
530,Lobsters,mobile,Mobile Development,The $12 ‚ÄúGongkai‚Äù Phone (2013),http://www.bunniestudios.com/blog/?page_id=3107,gongkai phone,mingtong digital mall bit legal tussle introducing gongkai shanzhai galapagos island pearl river delta year,cheap make phone recently paid mingtong digital mall complete phone featuring quadband gsm bluetooth playback oled display plus keypad ui simple functional nothing compared smartphone useful going worried getting primary phone wet stolen also would certainly find appreciative audience impoverished developing nation price paid single quantity retail contractfree nonpromotional unlocked phone box charger protective silicone sleeve cable word production cost phone somewhere retail price rumor place really amazing price point price large domino cheese pizza decent glass wine restaurant compared arduino uno admittedly little unfair humor spec phone arduino uno price cpu speed mhz mhz ram interface usb microsd sim usb wireless quadband gsm bluetooth power lipoly battery includes adapter external adapter display twocolor oled possible answer something trying learn teardown yield hint first screw whole case snap together also almost connector inside everything display battery soldered directly board shipping storage get flip switch harddisconnect battery best tell battery also secondary protection circuit bluetooth antenna nothing small length wire seen lower left still phone feature accoutrement backlit keypad decorative light around edge electronics consists two major ic mediatek vanchip course price competition like western firm suing protect ground vanchip bit legal tussle rf micro mediatek also subject lawsuit rumored sell volume able anecdotally confirm price buying couple piece cuttape retail broker broker chip phone beat best price ever able get atmega type used arduino course call mediatek buy extremely difficult engage going front door design even bother return call however know bit chinese know right website go download schematic board layout software utility something rather similar free could theory point attempt build version phone minimal cash investment feel like opensource different kind open ecosystem introducing gongkai welcome galapagos chinese open source call gongkai ÂÖ¨ÂºÄ gongkai transliteration open applied open source feel deserves term phenomenon grown beyond socalled shanzhai Â±±ÂØ® becoming selfsustaining innovation ecosystem galapagos island unique biological ecosystem evolved absence continental specie gongkai unique innovation ecosystem evolved little western influence thanks political language cultural isolation course galapagos seeded hardy specie found way island gongkai also seeded hardy idea came west idea fell fertile mind pearl river delta took root evolving significantly gongkai totally lawless freeforall network idea spread peertopeer certain rule enforce sharing prevent leeching different western ip concept trying open mind curious study new gongkai ecosystem sure critic adhere tenet western ip law summarily reject notion alternate system nourish innovation entrepreneurship hand tenet lock open hardware technology several generation old wait patent expire ndas lift gaining access latest greatest technology year eternity high tech hope openminded individual accept exploration gongkai galapagos perhaps someday understand maybe even learn ecosystem produced miracle gongkai phone
531,Lobsters,mobile,Mobile Development,Become Part of the Web of Apps: Developers tricks to increase mobile app usage,http://blogs.telerik.com/blogs/14-11-18/become-part-of-the-web-of-apps-developers-tricks-to-drive-app-engagement-up,become part web apps developer trick increase mobile app usage,app index become part web apps app index tutorial deep link reengage user deep linking deep linking foundation new mobile web tag apps lose time republishing app every single update android io web apps ui android ui io,mobile developer facing severe limitation come app distribution app content almost invisible browser search apptoapp connection scarce app discovery channel marketplace search algorithm still evolving improving app update need go tedious resubmission process relevant marketplace let look technology help u overcome limitation app index become part web apps built android app app index yet already losing potential reengagement indexing android app mean inapp content become accessible mobile search user already installed app little green text title link informs user sent mobile app know hard get user reinteract app abandoned google app indexing great step toward making easier technically pretty simple follow tutorial get started feature available android apps make sense expect work operating system future screenshot source http developersgooglecomappindexingwebmasters deep link reengage user google app indexing available nonandroid apps app take advantage deep linking core technology google app indexing us deep linking powerful tool increase user engagement used countless scenario increase roi advertising email nurture campaign user sent relevant content even include call uber button make sense context app check deep linking foundation new mobile web deep dive deep linking image source http mobileads tag apps lose time republishing app every single update web allows realtime update content feature mobile apps practically frozen installed user device point developer push update app user base user agrees google tag manager gtm mobile apps provides effective way solve challenge extent gtm enabled apps fairly simple change configuration value apps though gtm interface without rebuild resubmit application binary app marketplace work across device support mobile website native mobile apps control configuration various ui setting display string size location language well type ad served app getting started guide walk process detail android io apps web apps marketplace probably stay place user search apps many untapped opportunity mobile app owner reach existing potential customer web apps evolve willingness mobile developer become part transformation already using technology app glad hear solve challenge mobile developer going native way check telerik ui android ui io
532,Lobsters,mobile,Mobile Development,Judge threatens detective with contempt for declining to reveal cellphone tracking methods,http://www.baltimoresun.com/news/maryland/baltimore-city/bs-md-ci-stingray-officer-contempt-20141117-story.html,judge threatens detective contempt declining reveal cellphone tracking method,,critic say use technology might appropriate court approval help law enforcement locate suspect secrecy surrounding use say always clear law enforcement official secured necessary approval stayed within bound
533,Lobsters,mobile,Mobile Development,Styling Native Apps with CSS,http://developer.telerik.com/featured/styling-native-apps-css/,styling native apps cs,styling native apps cs telerik developer network,second major preview telerik open source nativescript product released quite excited share term code reuse crossplatform ui api release important milestone u managed prototype post styling native apps cs appeared first telerik developer network
534,Lobsters,mobile,Mobile Development,Adding Real World Context to Mobile Apps with Beacons,http://developer.telerik.com/featured/adding-real-world-context-mobile-apps-beacons/,adding real world context mobile apps beacon,adding real world context mobile apps beacon telerik developer network,idea creating consumerready indoor proximity system dream many startup recently satellitedriven gps work brilliantly positioning car road work well finegrained positioning might want find spot given floor building brand soup post adding real world context mobile apps beacon appeared first telerik developer network
535,Lobsters,mobile,Mobile Development,libphonenumber: Google's phone number handling library,https://code.google.com/p/libphonenumber/,libphonenumber google phone number handling library,quick link highlight functionality demo java java demo latest release version number javascript javascript demo java code wiki maven repository javadoc http javadociodoccomgooglecodelibphonenumberlibphonenumber versioning announcement metadata porter libphonenumberdiscuss release tag release note libphonenumberdiscuss quick example formatting phone number type geocoding phone number mapping phone number original carrier number portability unit test thirdparty port faq http githubcommichaelrockslibphonenumberandroid http githubcomcatamphetaminelibphonenumberjs http githubcomseegnogooglelibphonenumber,google common java c javascript library parsing formatting validating international phone number java version optimized running smartphones used android framework since ice cream sandwich quick link highlight functionality parsing formatting validating phone number countriesregions world getnumbertype get type number based number able distinguish fixedline mobile tollfree premium rate shared cost voip personal number uan pager voicemail whenever feasible isnumbermatch get confidence level whether two number could getexamplenumber getexamplenumberfortype provide valid example number countriesregions option specifying type example phone number needed ispossiblenumber quickly guess whether number possible phone number using length information much faster full validation isvalidnumber full validation phone number region using length prefix information asyoutypeformatter format phone number onthefly user enter digit findnumbers find number text phonenumberofflinegeocoder provides geographical information related phone number phonenumbertocarriermapper provides carrier information related phone number phonenumbertotimezonesmapper provides timezone information related phone number demo java java demo updated slight delay github release last demo update number lower latest release version number release demo may either version javascript javascript demo may run various tag link take master j demo link working rawgit deprecated todo host alternative platform java code include java code application either integrate maven see wiki download latest jar maven repository javadoc javadoc automatically updated reflect latest release http javadociodoccomgooglecodelibphonenumberlibphonenumber versioning announcement generally choose release number following guideline change pushed master since last release incompatible intent specification existing libphonenumber api may cause libphonenumber java c j client change code keep building publish major release example last release new one would change enable client update code take advantage new functionality client would rollback change event release marked bad publish minor release example go otherwise including release contains metadata change publish subminor release eg sometimes make internal change code metadata affecting compatibility client could affect compatibility porter library change make announcement libphonenumberdiscuss change reflected version number would publish subminor release change want get notified new release year excepting holiday extenuating circumstance release fortnightly update release tag document detailed release note also send announcement libphonenumberdiscuss every release quick example let say string representing phone number switzerland parsenormalize phonenumber object string swissnumberstr phonenumberutil phoneutil phonenumberutilgetinstance try phonenumber swissnumberproto phoneutilparse swissnumberstr ch catch numberparseexception e systemerrprintln numberparseexception thrown etostring point swissnumberproto contains countrycode nationalnumber phonenumber class originally autogenerated phonenumberproto necessary modification efficiency detail meaning field refer resourcesphonenumberproto let u validate whether number valid boolean isvalid phoneutilisvalidnumber swissnumberproto return true format supported formatting method illustrated produce systemoutprintln phoneutilformat swissnumberproto phonenumberformatinternational produce systemoutprintln phoneutilformat swissnumberproto phonenumberformatnational produce systemoutprintln phoneutilformat swissnumberproto could also choose format number way dialed another country produce number dialed united state systemoutprintln phoneutilformatoutofcountrycallingnumber swissnumberproto u formatting phone number type phonenumberutil phoneutil phonenumberutilgetinstance asyoutypeformatter formatter phoneutilgetasyoutypeformatter u systemoutprintln formatterinputdigit output input digit systemoutprintln formatterinputdigit output geocoding phone number phonenumberofflinegeocoder geocoder phonenumberofflinegeocodergetinstance output zurich systemoutprintln geocodergetdescriptionfornumber swissnumberproto localeenglish output z√ºrich systemoutprintln geocodergetdescriptionfornumber swissnumberproto localegerman output zurigo systemoutprintln geocodergetdescriptionfornumber swissnumberproto localeitalian mapping phone number original carrier caveat provide data current carrier phone number original carrier assigned corresponding range read number portability phonenumber swissmobilenumber new phonenumber setcountrycode setnationalnumber phonenumbertocarriermapper carriermapper phonenumbertocarriermappergetinstance output swisscom systemoutprintln carriermappergetnamefornumber swissmobilenumber localeenglish example use library found unit test thirdparty port several thirdparty port phone number library known u share case useful developer however emphasize port developer outside libphonenumber project evaluate quality influence maintenance process alternative version androidoptimized java version load metadata class getresourcesasstream asks android apps follow android loading best practice repackaging metadata loading assetmanager open faq nt want check port http githubcommichaelrockslibphonenumberandroid repackage metadata use assetmanager open may depended without needing specific loading optimization client javascript nt want use version depends closure several option including http githubcomcatamphetaminelibphonenumberjs strippeddown rewrite kb size http githubcomseegnogooglelibphonenumber browserifycompatible wrapper around original unmodified library installable via npm pack google closure library kb size
536,Lobsters,mobile,Mobile Development,What Android 5.0‚Äôs Auto-Updating WebView Means for Mobile Apps,http://developer.telerik.com/featured/android-5-0s-auto-updating-webview-means-mobile-apps/,android autoupdating webview mean mobile apps,challenge partnership community deliver expected,challenge demand better user experience continues grow time develop high quality modern engaging application continues shrink stop sweating ui focus part application truly make differencepartnership community like developer purpose life make developer superheroes enabling deliver expected faster expected nearly two decade partnering community two million developer help cut development time increase productivity make easy embrace latest technology user experience trendsdeliver expected using modern featurerich professionally designed ui component telerik kendo ui armed everything need deliver outstanding web mobile desktop experience le timewith backing legendary technical support provided directly developer build product confident best partner rely journey
537,Lobsters,mobile,Mobile Development,Microsoft Band,http://www.microsoft.com/microsoft-band/en-us,microsoft band,connected care public health,connected care public health read government cultivate greater ambition developing holistic connected continuum care based three pillar healthcare care home public housing putting people heart service design taking holistic view meeting need
538,Lobsters,mobile,Mobile Development,Retailers Are Disabling NFC to Block Apple Pay,http://daringfireball.net/2014/10/nfc_apple_pay,retailer disabling nfc block apple pay,retailer disabling nfc block apple pay eric slivka reporting macrumors article currentc debbie simurda update printed receipt cv look like whole thing,retailer disabling nfc block apple pay saturday october eric slivka reporting macrumors earlier week pharmacy chain rite aid shut unofficial support apple pay google wallet mobile payment system resulting outcry user testing apple new system since launch monday rite aid official apple pay partner payment system generally work existing near field communication nfc payment terminal anyway many user success using apple pay rite aid store early week appears fellow major pharmacy chain cv following suit today shutting nfc functionality payment terminal entirely move presumably intended thwart apple pay google wallet service obviously also affected move retailer part group merchant customer exchange mcx working upcoming mobile payment system called currentc article currentc debbie simurda writing mainstreet inc pointofsale provider currentc mobile payment platform merchant customer exchange mcx mobile wallet developed group major retailer want greater control payment mobile brand mobile customer experience want keep customer data rather ceding technology company mcx established currently consists participating retailer many large tier merchant across segment update sure mainstreet inc took original article linking google cached version supposed work application downloaded free app store google play store available io android device designed simplify expedite customer checkout process applying qualifying offer coupon participating merchant reward loyalty program membership account offering payment option consumer selected financial account single scan using currentc mobile payment pointofsale display qr code customer read phone qr code generates payment token smartphone verifies shopper presence identity initiate transaction merchant bank phone connects cloud authorization sends approval merchant currentc support contactless near field communication nfc used apple pay qr code good luck plus currentc even work credit card work prepaid store card debit card tied directly bank account apple pay built atop credit card system currentc futile say attempt eliminate credit card apple get one else industry using mobile device payment work far easier better using credit card currentc unlock phone launch app point camera qr code wait apple pay take phone put thumb touch id sensor tim cook exactly right stage last month introduced apple pay mobile payment solution designed around improving customer experience currentc designed around collection customer data ability offer coupon junk printed receipt cv look like look like joke real sort experience want bring mobile payment reading right think retailer shutting nfc payment system validating apple pay actually working people actually using remember work monthold iphones think happens year two majority iphones use apple pay enabled think turning nfc payment system whole thing people actually using apple pay apple pay work well even work nonpartner system thing installed year people used apparently retailer would rather block everyone allow apple pay continue working imagine better validation apple pay appeal reason want allow apple pay apple pay give personal information customer security apple pay far secure creditdebit card system u money apple tiny slice transaction come bank merchant data pursue system le secure thirdparty apps access secure element apple pay store credit card data one thing le convenient qr code private know cv rite aid disabling apple pay spite going drive customer switch pharmacy walgreens apple pay partner know currentc unlikely ever gain traction whatsoever
539,Lobsters,mobile,Mobile Development,China collecting Apple iCloud data,https://en.greatfire.org/blog/2014/oct/china-collecting-apple-icloud-data-attack-coincides-launch-new-iphone,china collecting apple icloud data,github google yahoo microsoft following way firefox chrome enable twostep verification remove apps china app store technical evidence attack icloudcom apple loginlivecom microsoft http http http http http http,previous attack github google yahoo microsoft chinese authority staging maninthemiddle mitm attack apple icloud posted previously mitm attack google github broke news recent attack yahoo refer appendix end post see technical evidence attack case different however reason wikipedia defines maninthemiddleattack following way maninthemiddle attack form active eavesdropping attacker make independent connection victim relay message making believe talking directly private connection fact entire conversation controlled attacker clearly malicious attack apple effort gain access usernames password consequently data stored icloud imessages photo contact etc unlike recent attack google attack nationwide coincides launch today china newest iphone attack google yahoo enabled authority snoop information chinese accessing two platform apple attack different user ignored security warning clicked apple site entered username password information compromised chinese authority many apple customer use icloud store personal information including imessages photo contact may also somehow related image video hong kong protest shared mainland user counteract attack internet user china first use trusted browser desktop mobile device firefox chrome prevent user accessing icloudcom trying access site suffering mitm attack qihoo popular chinese secure browser anything load mitmed page directly user ignored security warning find undisrupted connection icloudcom accomplished using vpn finding different internet access point gfw mitm stable also enable twostep verification icloud account protect icloud account attacker even account password compromised latest mitm attack may related increased security aspect apple new iphone detail new iphone announced felt perhaps chinese authority would allow phone sold mainland ironically apple increased encryption aspect phone allegedly prevent snooping nsa however increased encryption would also prevent chinese authority snooping apple user data unclear apple made change iphones selling mainland china however mitm attack may indicate least conflict chinese authority apple feature new phone attack come surprise apple past company bromance authority blindly acquiesced asked remove apps china app store close cozy snuggly relationship hard imagine executive apple felt would get kind treatment china tim cook looking mirror cry wrong episode provide clear warning signal foreign company work chinese authority censorship agenda working authority help prevent free access news information guaranteed path rich china anything cooperation chinese authority increasingly labeled worst decision foreign company make authority bite as willingness work censorship regime lose customer fan worldwide reached apple comment update post reply technical evidence attack icloudcom apple loginlivecom microsoft icloud gfw great firewall china wiretapping apple icloud gfw implemented mitm attack icloud using selfsigned certificate authority attacked ip user china affected icloud dns might return different ip address wirecapture mitm http selfsigned certificate used attack http connection log http traceroute http hotmail mitm wirecap http tcp traceroute http
540,Lobsters,mobile,Mobile Development,Mobile design that scales: building for existing and future devices,http://developer.telerik.com/featured/mobile-design-scales-building-existing-future-devices/,mobile design scale building existing future device,mobile design scale building existing future device telerik developer network,mobile designer developer share common frustration stemming fragmented device landscape wearable horizon puzzle becoming baffling possible design perfect app user experience device tv wearable article offer practical stepbystep guideline help design flawless crosschannel post mobile design scale building existing future device appeared first telerik developer network
542,Lobsters,mobile,Mobile Development,Marriott to Pay $600K to Resolve WiFi-Blocking Investigation,https://www.fcc.gov/document/marriott-pay-600k-resolve-wifi-blocking-investigation,marriott pay resolve wifiblocking investigation,full title document type bureau description dafcc fcc record citation,full title marriott international inc marriott hotel service inc document type orderconsent decree consent decree bureau enforcement description adopted consent decree proceeding dafcc fcc record citation fcc rcd
543,Lobsters,mobile,Mobile Development,bladecoder-adventure-engine - Classic point and click adventure game engine and editor [libGDX],https://github.com/bladecoder/bladecoder-adventure-engine,bladecoderadventureengine classic point click adventure game engine editor libgdx,bladecoder adventure engine bladecoder adventure engine bladecoder adventure engine bladecoder adventure engine adventureeditor bladeengine bladecoder adventure engine libgdx adventure editor adventure editor blade engine goddess robbery bladecoder adventure engine goddess robbery goddess robbery adventure editor goddess robbery documentation wiki page test project download latest release release page building running license bladecoder adventure engine apache license,bladecoder adventure engine bladecoder adventure engine set tool create interactive graphic adventure classical point click game think type game great medium tell story mobile device provide big opportunity rebirth evolve creating bladecoder adventure engine want create platform tell story interactive story modern graphic animation music bladecoder adventure engine composed following subprojects adventureeditor graphical editor creating point click game bladeengine engine run game created adventureeditor bladecoder adventure engine developed using libgdx framework project generates layout similar libgdx project lower learning curve eas development deploy several platform adventure editor adventure editor graphical editor create full point click game minimal programming blade engine engine following feature multi platform support android io desktop window osx linux several animation technique spriteatlas animation spine cutout animation model animation character support multiresolution deal different density screen size multilanguage support goddess robbery bladecoder adventure engine currently continuous development ready production goddess robbery test game created show feature engine source goddess robbery downloaded useful learn use adventure editor goddess robbery also available android device google play store documentation available documentation wiki page documentation good enough need improve working meanwhile download look test project download latest release check release page download latest version linux user flatpack package dependency included building running order compile build run engine java platform necessary project us gradle build package build gradlew build run adventure editor gradlew run create distribution package adventure editor gradlew distzip zip package ready distribution created folder bladecoderadventureengineadventureeditorbuilddistributions license bladecoder adventure engine licensed apache license meaning use free charge without string attached commercial noncommercial project
544,Lobsters,mobile,Mobile Development,Flexible Grid System,https://github.com/flexiblegs/flexible.gs,flexible grid system,,flexiblegsmethod cs bem flexiblegsbreakpoint xl lg maxwidth md maxwidth sm maxwidth wrapcol auto wrapprop table flexbox normal left center right top middle bottom stretch around baseline reverse notreverse colrow colwidth colprop hidden nothidden first notfirst last notlast wrapgutter wrapoutside import nodemodulesflexiblegsscssflexiblegsscss import nodemodulesflexiblegsscssplusflexiblegsscssplus
545,Lobsters,mobile,Mobile Development,Why the Scroll Event Change in iOS 8 is a Big Deal,http://developer.telerik.com/featured/scroll-event-change-ios-8-big-deal/,scroll event change io big deal,,graphql specification defines type system query schema language web api execution algorithm graphql service engine validate execute query graphql schema article learn implement authentication graphql server
548,Lobsters,mobile,Mobile Development,How to Create a PouchDB Infobot,https://blog.engineyard.com/2014/pouchdb-infobot,create pouchdb infobot,set pouchdb infobot pouchdb designing app associative array setting jquery coffeescript pouchdb telling story script beautifulstyle connecttocouchdb beautiful style connect couchdb synchronisationsucceeded synchronisation succeeded createinput userinput create input user input userget userput usererror user get display strong strong display strong user put multiversion concurrency control putdoc display strong putdoc use view put doc display strong display strong user error display display strong result one made earlier conclusion,know set pouchdb next write app course going develop simple infobot style app let u store retrieve useful information thanks wonder pouchdb automatically sync information remote server mean could many client meaning multiple user potentially collaborating many server providing load balancing designing app store information original infobot use statement syntax b infobot silently retain information example user ey http engineyardcom later reclaim b interrogating syntax like user ey infobot somebody said ey http engineyardcom adapt app little web environment try retain feel method input biggest challenge replicating chat environment webpage since data associative array usually called hash table could two input corresponding common operation hash table put get put would take two input b get would take would require tabbing clicking field also harder extend wanted example start support operation delete instead retain conversational input parse using simple regexps setting first create checklist thing installed available working directory contain three minified j file jquery using coffeescript using version coffeescriptjs pouchdb using use whatever latest version script example still work run problem try using version close given important note pouchdb require coffeescript jquery using library convenience free pair pouchdb anything nothing create tiny boilerplate html file doctype html meta charset title pouchdb infobot title script src script script src coffeescriptjs script script src script script type textcoffeescript src infobotcoffee script call file whatever like eg infobothtml notice link infobotcoffee file currently exist going write create app telling story reading procedural code like reading story runtime execution flow like unfolding plot beginning script initialisation routine onwards program written story told reverse imagine script get user name tell many vowel name vowel name total total namecount vowel vowel e u total hello name say hello name say name contains vowel name vowel run code execution start hello function hello function us vowel function put vowel function first source code otherwise hello function variable scope include vowel function program written backwards explain program however want explain though telling forward following code tell story reverse create coffeescript file function need paste reverse order file work going explain part code reverse order copy paste code example infobotcoffee file starting bottom working way function explain written bold monospace code block script start registering action jquery fire document ready event mean document successfully loaded ready u work jquery call script function script beautifulstyle connecttocouchdb infobot set cs page look nice continues connecting couchdb start series thing want make app work using infobot name couchdb database beautiful style beautifulstyle body cs font helvetica neue helvetica padding style set jquery update want make look even beautiful eg setting lighter weight font making input centre aligned connect couchdb connecttocouchdb name db pouchdb name p synchronising remote database p appendto body dbsync http name live true uptodate synchronisationsucceeded db name database passed script infobot function connects couchdb creates database already exist tell user going synchronise dbsync call pouchdb parlance bidirectional replication using local couchdb instance running sample app set option live true continue bidirectionally synchronise browser couchdb server register action perform synchronisation currently date actually want something first time synchronisation date ie set ui handle within synchronisationsucceeded function synchronisation succeeded synchronisationsucceeded db input size p successfully synchronised p appendto body input createinput inputbind enter e userinput db inputval inputval inputfocus since successfully synchronised couchdb server set ui want first time pouchdb synchronises make sure already synchronised pouchdb provide way bind first instance event firing roll method simply check existing ui component input exists know already created ui exist go ahead create create first notify user synchronisation succeeded create input element used getting command user next register action perform user input command two thing process input using userinput function clear value entered enter without old value lingering around focus input element page ready straight away user input text since anything next action user waiting user input call userinput time ask u something create input user input element created createinput input attr id input type text size keyup e trigger enter ekeycode appendto p appendto body input element within p form work listening user pressing return key inside input key code mean return trigger enter event bound sychronisationsucceeded function block starting inputbind enter e user input user input want process basically three mode user give u need get answer user give u b need store b user give u something else error select mode want use use regular expression userinput db text get textmatch put textmatch get userget db get else put userput db put put else usererror text first regular expression match case second match b case need regular expression case user error since anything match either two defined error determined three different kind input user entered turn function corresponding kind input user get user want u get item infobot need get action couchdb server using pouchdb dbget call userget db dbget err doc err display someone told strong strong docb else display sorry nt know strong two possibility get either succeeds succeeds tell user value stored succeed usually mean value stored yet even different error basic fact bot give reply tell use infobot know could extend infobot give u specific error get user put user want u put item infobot need put action couchdb server using pouchdb dbput call unlike dbget version go ahead problem value already stored update document instead storing two different concept couchdb update document must specify version trying update couchdb implement multiversion concurrency control figure whether need store update first dbget get error dbget call know existing document need store got successful response hand need update document complex part code worry much understand entirely first read take approach deleting document storing new version avoid deal revision userput db b doc id b b dbget err old err dbremove old err resp err putdoc db doc else consolelog remove error err display sorry unable store strong else putdoc db doc made sure existing document ie deleting existing one necessary put new version using putdoc function note storing user input directly document id simple app fine real app want namespace document id possible conflict couchdb reserved id alternately could switch automatically generated uuids use view type query beyond scope present post put doc put information couchdb server use dbput putdoc db doc dbput doc err resp err display stored strong successfully else consolelog put error err display sorry unable store strong quite straightforward compared logic userput function call simpler piece machinery simply store document pouchdb tell u everything worked correctly tell user otherwise tell unable store logged error javascript console good measure user error user gave u input understand tell understand also logged javascript console easier debugging usererror text consolelog user entered text display sorry nt understand input display strong may noticed tell user happening using display function display command argument often us strong function order provide formatting quite straightforward function display text p text p insertbefore input strong text strong text strong code functional result save code snippet reverse order infobotcoffee everything else checklist running able interact html like like copy paste full file content one go one made earlier app make cross origin request ie speaks couchdb database different domain need serve http making use neat feature python standard library code directory run python simplehttpserver visit http browser replicate screenshot typing type conclusion built simple app couchdb pouchdb combination give u lot flexibility example could use simple test app multiple browser without rely local state single browser save data small remote instead local enable multiple user work single system better yet app work offline try stop couchdb continue use app set value retrieve value start couchdb reload page pouchdb take advantage couchdb powerful sync protocol bring two database one browser one managed couchdb back state consistency next step would set continuous replication reload necessary would keep two database sync whenever connection present completely free app enjoyed tutorial found anything confusing problem please let u know comment general comment using pouchdb interested hear throw u comment using form
550,Lobsters,mobile,Mobile Development,My year with a distraction-free iPhone (and how to start your own experiment),https://medium.com/@jakek/my-year-with-a-distraction-free-iphone-and-how-to-start-your-own-experiment-6ff74a0e7a50,year distractionfree iphone start experiment,year distractionfree iphone start experiment distractionfree iphone zombie yes still one year later hour experiment remove safari remove mail good psychology remove infinity apps consciously decide keep want sensible phone smart phone word sermon tell try tweet,year distractionfree iphone start experiment realized problemmy iphone made twitchy could feel pocket calling like ring called bilbo baggins distracted kid distracted wife distracted anytime anywhere willpower ignore email twitter instagram whole world wide web infinity pocket muchi wanted get control want give iphone altogether loved google map uber find friend amazing cameraso decided try experiment disabled safari deleted mail account uninstalled every app handle thought try weeka month went two loving newfound freedom wrote post experience medium called distractionfree iphonethen lot people read post got view medium lifehacker ran got gizmodo ran got another obviously people interested topic interesting writer comparison next thing wrote zombie got le view sure bajillion reader especially gizmodo wanted talk idiot buy flip phone see lot people supportive lot actually tried even friend gave shotthe biggest victory wife made iphone distractionfree month telling nut bet stoked really gloat situation enlightened guy good iphone thing anyway still get lot people asking still people probably impatient read long boring intro skimmer answer big letter yes still one year lateroh great come selfrighteous partover last month learned enjoy least ok moment boredom reach phone lot le often probably imagination feel like easier concentrate need get thing done tackle big projecttimes bus would checked email listen music look around even started meditating bus yes really please mug using app called calm believe hippy dippy weirdo meditating bus using app actually lot happier tweetsat home phone becomes part stereo nothing work set thing lot nearly day forget something never able imagine weird part experiment supposed hardship feel like easy way want go back going back sound difficult think thing keep track managing notification stream ping bleep add lot workthe hour experimentif intrigued encourage try going distractionfree hour pretty easy set iphone people done really enjoy breaknow pressure people seem handle smartphones fine rest u worthy remove safarisafari big problem open window limitless universe know everything infinity given moment something super interesting internet seen actually gon na go check real quick iphone postyou delete safari go setting restriction turn em turn safari yes know restriction person trust use phone kinda awkward right remove mailemail another big problem good psychology behind brain glitch make random reward incredibly appealing slot machine big payout note bos guessi give email luckily job really phone last year encouraged people text call need fast response added bonus people much higher threshold texting calling firing emailyou turn mail app way iphone easiest thing delete email account remove infinity appsinstagram facebook twitter even new york time potentially endless supply new interesting stuff could check time none belong phoneyou delete apps oldfashioned way course jiggle jiggle consciously decide keephaving blank desktop phone surprisingly calming cleared much stuff wanted keep clean found really useful ask remaining app phone tool made life better dragging along ride made cut list phonemessagescameraapps make feel like live future kept folder inventively called future dropbox google map uber rdio instacart lot nondistractors amazing even weather app pretty cool stop think mean walkman point reference freakin walkman totally amazing get weather report pocket would never ever get addicted useful thing rarely use like new york subway map compassuseless thing delete like passbook game centerwhat left iphone still fantastic far better flip phone getting better timei want sensible phone smart phonethis whole exercise left feeling like took iphone life without ever really thinking gon na take internet time everywhere sign game news photo popularity yes please please allyoucaneat buffet excellent gourmet food trouble always eat shouldsince line work helping company build software hardware trying take philosophy heart leave little word sermonwhen invest time energy technology creator consumer invest product belong future make life disappear faster already dopersonally life already going speed light past year felt tiniest bit slowertell try itthanks reading experiment love hear take screenshot drop tweet check laptopupdate set distractionfree android
551,Lobsters,mobile,Mobile Development,"RTFM 0day in iOS apps: G+, Gmail, FB Messenger, etc.",http://algorithm.dk/posts/rtfm-0day-in-ios-apps-g-gmail-fb-messenger-etc,rtfm io apps g gmail fb messenger etc,whatsmyipdk,din info ip adresse eller xforward ip adresse r browser useragent foresp√∏rgsels timestamp unix tid foresp√∏rgsels leveret af whatsmyipdk
552,Lobsters,mobile,Mobile Development,The Secret Life of SIM Cards,http://simhacks.github.io/defcon-21/,secret life sim card,download slide pdf still available,sim card authenticate phone carrier small apps installed run directly sim separate without knowledge phone o although sim application common many part world mostly unknown u closed nature ecosystem make difficult hobbyist find information experiment talk based experience building sim apps toorcamp gsm network explains u sim toolkit application work develop explain various piece technology involved including java card standard let write smart card application using subset java globalplatform standard used load manage application card also talk application silently loaded updated interacted remotely overtheair download slide pdf raised eff selling sim card talk thanks everyone additional sim card still available
554,Lobsters,mobile,Mobile Development,What You Need To Know About Windows Universal Apps,http://developer.telerik.com/products/need-know-windows-universal-apps/,need know window universal apps,,march telerik ui blazor component built groundup ensure experience shorter development cycle quick iteration cut time market short video learn acquire install telerik component free trial installing visual studio integration grid menu template support included blazor theme
555,Lobsters,mobile,Mobile Development,Mobile Connectivity in iOS Apps,http://developer.telerik.com/featured/mobile-connectivity-ios-apps/,mobile connectivity io apps,challenge partnership community deliver expected,challenge demand better user experience continues grow time develop high quality modern engaging application continues shrink stop sweating ui focus part application truly make differencepartnership community like developer purpose life make developer superheroes enabling deliver expected faster expected nearly two decade partnering community two million developer help cut development time increase productivity make easy embrace latest technology user experience trendsdeliver expected using modern featurerich professionally designed ui component telerik kendo ui armed everything need deliver outstanding web mobile desktop experience le timewith backing legendary technical support provided directly developer build product confident best partner rely journey
556,Lobsters,mobile,Mobile Development,4 Mistakes To Avoid in Mobile App Development,http://developer.telerik.com/featured/4-mistakes-avoid-mobile-app-development/,mistake avoid mobile app development,nt beta tester prelaunch marketing task roomalyzrcom roompaintingappcom preapps nt assume ui obvious nt monetization fly nt forget test ad conclusion,mobile app developer since got first iphone four year ago concentrating mostly educational fitness apps apps built year include seven minute workout app stretching app apps teach chinese conversation middleeastern dance ebooks apps help kid practice musical instrument others enjoy releasing little software nugget wild solve small problem ease pain point customer apps paid apps done moonlighting side project thus without large resource marketing social medium push general earned modest download rate imagine surprise one apps roomalyzr hit app store garnered downloads first day consistently downloads per day subsequently caught surprise soon realized made mistake design app successful could known design requirement type app article going share sometimes difficult lesson learned releasing roomalyzr app outline tip designing app avoiding mistake might get lot downloads app done right recurring revenue nt beta tester roomalyzr born entry contest hosted corona lab maker corona sdk introduced graphic new way working graphic filter special effect mind perfect test bed roompainting graphic design app weekend roomalyzr born built sent coronalabs lucky enough win category business apps roll decided launch app io android followed advice prelaunch marketing task creating twitter account website secured roomalyzrcom roompaintingappcom nice icon beautiful screenshots publicity app trailer video current roomalyzr interface also submitted app preapps get little prelaunch visibility made first mistake nt feel time follow volunteer signed betatest app instead device testing beta testing simple task part every app deployment asking friend family kid volunteer tester click make sure understand app work preferably start beta testing early development process catch problem ui entirely committed app design asked external people betatest would realized missing tutorial removed alert included proved annoying user rethought use interstitial ad see better thought inapp purchase availability nt assume ui obvious uis created equal creating kid app ui entirely different business fitness app creating painting app smart idea check many similar apps see uis like market research apparently ui presented real problem user based early feedback via app review user nt understand manage colourlovers integration enables import new color palette nt see pulldown panel encloses entire painting toolbox update app included tutorial show first time app used available viewed subsequently via button bottom navigation bar update negative review significantly slowed detailed tutorial mandora app game interface simple onescreen tutorial business app take time download least five apps genre targeting ask app deviate significantly good way apps monetizing mine fit general strategy within sample set app stand innovative way intrigue user without annoying nt monetization fly inapp purchase critical monetization strategy free apps tricky however make app look like cash register always begging upgrade initially included one option inapp purchase send copy roomalyzed room painting remove ad subsequent upgrade included two new panel one lighting another plant addition decorate room available via inapp purchase would smarter strategy include one central store location user see exactly sale app decide whether use launch app get initial rush downloads solid iap strategy surely pay even begin building free app ask going monetize much depending ad bring revenue inapp purchase point well defined purchasing process smooth take look top free apps sorted revenue app annie download one see monetizing maybe get idea consider releasing free paid version app make sense within overall strategy nt forget test ad experience ad network roomalyzr avoided placing ad apps feel place fitness apps distraction educational apps often target young audience lack experience meant made every mistake book regard ad placement app initially included fullscreen video ad delivered vungle naively thought would provide oneanddone experience user vicious negative review however triggered interstitials clearly genre app wrong type ad fullscreen interstitials used effectively game often pausepoint ad shown workflow wizardtype interface like roomalyzr built encourage art creation maddeningly distracting example fullscreen interstitial ad madgods app switching iads served google solved problem placement ad remains challenge chose put banner top screen except panel placed windowshade style pulldowns top photo screen displayed even one reviewer complained sometimes ad load delay actually cover tool panel blocking core functionality addition seems ad better placed bottom screen future iteration app plan move navigation offscreen allow ad show throughout app experience placed bottom example banner ad bottom nav pockettube app think hard ad going put want interstitials video ad banner ad kiipstyle reward think apps use good ad placement placing banner ad top bottom middle think way monetize ad sure test ad various device including tablet conclusion would say launch maintenance various iteration roomalyzr app valuable learning experience negative feedback painful compels evolve app skill takeaway experience include need solid betatesting coherent monetization strategy cleareyed choice ad network market research inclusion tutorial sure continue develop apps learn even lesson glad hear experience
557,Lobsters,mobile,Mobile Development,Device Mirroring Options for Mobile Developers,http://developer.telerik.com/featured/mirroring-options-mobile-developers/,device mirroring option mobile developer,window phone window phone even technically need developer get miracast project screen nokia beamer io lightning vga lightning hdmi reflector tj vantoll airserver xbmc medium receiver android mobizen michael crump chromecast brings full screen android mirroring conclusion,mobile developer feel sense joy deploy apps see running real device feel great see code action interact creation next obvious step show creation right however sharing group recording demo sharing via tiny smartphone screen simply nt work would really need mirror device screen running app onto much bigger screen number use case device screen mirroring taking app screenshots recording app demo sharing client technical speaking live demo thankfully tooling come long way article sum popular effective mirroring option crossplatform mobile developer let explore window phone let begin window phone yes one lowest market share well respected o nonetheless passionate developer community window phone look awesome update bringing cortana action center worldflow keyboard whole lot feature mobile carrier push window phone update summerfall update available window phone even technically need developer get running window phone beta update look setting find project screen setting shown wireless mirroring work ultimate goal support miracasttype receiver screencasting grab project screen pc app usb cable connect window phone prompted phone project screen may uninstall preexisting phone driver device manager shown otherwise fire project screen pc app connect window phone phone screen get immediately duplicated pc see screenshot displaying window phone start screen screen simulation stay sync phone may also choose display touch pointer screen great demo screen projection usb cable thing craving wireless mirroring window phone nokia window phone luck nokia excellent beamer service wireless screencasting window phone even need window phone modern browser simply head nokia beamer website grab window phone app scan qr code boom window phone screen beamed browser nokia mirroring server screenshot expect beamer website visual window phone screen beamed wifi io several good mirroring option io first simplest requires newer device iphone touch gen forward specifically need io device lightning port screencast directly device bigger screen vga hdmi input simply grab lightning vga lightning hdmi adapter connect device bigger screen appropriate input voila screen mirrored including anything running device wired connection thing want convenience wireless mirroring best option may reflector come highly recommended colleague tj vantoll reflector quite simply airplay receiver io device extra needed already built simply fire reflector application pcmacandroid allow io device stream device airplay find expect reflector website followed screenshot little ipod touch gen device told airserver xbmc medium receiver apps pcmac also decent job mirroring airplay android fortunately android story platform plenty mirroring option cover noteworthy choice mobizen also highly recommended good friend michael crump mobizen offer reliable android screencasting browser window pc application full interactivity mirroring device grab mobizen app google store plug away mirroring android device bigger screen screenshots showcase mobizen feature followed michael android phone screen mirrored another fun option wirelessly mirror android device bigger screen come tiniest streaming device popular google chromecast week back chromecast update brings full screen android mirroring chromecastconnected tv instead app content cast entire android device screen tv everything show bigger shown sample android screenshot conclusion bottom line matter mobile platform targeting several option mirroring smartphone device onto bigger screen love mirroring option nt mention drop comment share simulator come long way nothing beat ondevice app testing able easily share mobile device screen audience invaluable
558,Lobsters,mobile,Mobile Development,Backend as a Service,https://blog.engineyard.com/2014/backend-as-a-service,backend service,alternated champion cloud computing service model service provides infrastructure rise baa shifting back towards clientside beyond baa offline first nobackend conclusion offline first nobackend,server client alternated champion battle developer attention ever since serverclient model application development began mobile era saw server ascendancy cloud computing cheap mobile client underpowered technology gain starting bring mobile hardware parity amongst factor driving return towards clientside computing client taking task app developer naturally thinking way minimise dependence interaction server reviewing existing cloud service model possible derive whole new service model assist minimisation also introduces range benefit service model idea behind aa service style acronym service dependency converted kind purchasable commodity great provider whole company formed around service great user mean faster development outsourcing low price competition existing cloud computing service model include infrastructure service iaa provides infrastructure eg server vm image load balancer platform service paas provides platform eg os varnish cache database range currently available service model developed basic dependency first paas available roll platform top iaa built app custom platform iaa available run infrastructure platform infrastructure build app platform run infrastructure needle say iaa paas popular day old complicated mess replaced single step running software top platform software face user make user would describe app really app depends level datacentre host hardware right user client even software made service indeed many app developer building software service saas offering kind tempting think next level paas app saas offering apps split two client server move custom code client processing happens server packaged generic service call backend service baa rise baa though current balance task allocation shifting back towards clientside many problem domain serverside ruled entirely service absolutely depend number reason remote server authentication one common requirement another access centralised proprietary service automatic language translation even task simple sending email still requires server one moreover established trusted entity message blocked still status quo server client changing client become natural place solve various existing problem faced app connectivity responsiveness device proliferation whilst abstract server side much need call remote service baa come baa make app development efficient also help u attack problem serverside bias introduced possible example bake feature baa ease transition connected unconnected device providing graceful fallback network go extent feature implemented depends specific baa framework beyond baa idea behind baa stop providing backend service related movement seek push baa limit offline first example champion notion native connectivity handling apps designed resilient outset handling network connection problem afterthought similarly nobackend philosophy extols virtue minimising serverside component whilst recognising server replaced entirely adherent philosophy advocate condensing existing apis minimal generic set like unix philosophy cloud designed need application developer backwards backend technology forward incorporating unix philosophy cloud mean baa deliver serviceoriented architecture soa networkbased service used client isolated made reusable possible using soa advantage helping combat problem introduced device proliferation promoting usability individual service across widerange device also make whole product easier document easier understand help get new engineer speed code le likely rot likely reusable future product conclusion baa natural extension existing cloud service model though unless roll framework existing paas find significant vendor lockin either way baa allows app developer roll app efficiently way work modern development approach like offline first nobackend moreover modularise apps able reuse component new product making development investment really pay used installed baa framework perhaps even develop baa framework want share insight well please let u know comment love hear
559,Lobsters,mobile,Mobile Development,Building Cordova Apps with the Verified Plugins Marketplace,http://modernweb.com/2014/07/21/building-cordova-apps-verified-plugins-marketplace/,building cordova apps verified plugins marketplace,sebastian witalec argued plugin marketplace portal point verified plugin marketplace practice download plugin flashlight plugin page prepare project add plugin code testing app tj vantoll detailed look done summary remotesynthesiscom past publication presentation remotesynth,sebastian witalec one powerful aspect cordova aka phonegap extensibility however argued cordova plugin ecosystem messy recently telerik published plugin marketplace portal goal improving current state plugin ecosystem show improve experience finding using plugin article look simple example utilize flashlight plugin probably seen lot apps google play app store let use phone flashlight surely difficult let get started point whole point using verified plugin instead building plugin fact much work already done plugin built tested api documented popular plugins tend well maintained community continuously improved issue get fixed reported mission marketplace help find verified plugins protect noise plugins work badly documented supported platform interested developing basically need search around hour manually test plugin realize compatible platform targeting way tell use half feature verified plugin marketplace practice show marketplace improve experience finding using plugin probably seen lot apps google play app store let use phone flashlight let look simple example utilize flashlight plugin surely difficult let get started download plugin plugin verified plugin marketplace unique page offer detail plugin use let open flashlight plugin page download plugin scrolling page see detail use plugin case three main function method case toggle method come example call within app prepare project puposes example using telerik appbuilder allows build hybrid mobile application compiled butt first create new blank project appbuilder window client worth use window client cli plugin visual studio available well add plugin rightclick plugins project navigator select import plugin select previously downloaded plugin result new plugin appearing plugin menu code next open indexhtml remove everything head apart script type textjavascript src cordovajs script replace body content html simply defines button onclick event call corresponding function flashlight plugin doctype html html head script type textjavascript src cordovajs script head body button onclick windowpluginsflashlightswitchon button button onclick windowpluginsflashlightswitchoff button button onclick windowpluginsflashlighttoggle toggle button body html testing app run app emulator see simple white screen small button however press button get error message expected laptop led switch also emulator work external plugins case need real device test app good news appbuilder make easy load iterate test application real device colleague tj vantoll detailed look done case tested code samsung galaxy note button performs expected summary whole process took le minute yes agree app attractive long battery charged walk dark importantly benefit plugin marketplace plugins tested documented ready go download read documentation add plugin go moment plugins telerik plugin marketplace number plugins continue grow hopefully support community time hopefully marketplace solve problem plugin noise minimize time spend searching right tool make hybrid app development better experience brian rinaldi founder flippin awesome brian work developer content manager telerik though site affiliated employer focused ensuring developer relation team creates top notch content web development community previously brian focused publishing html cs javascript developer content adobe developer connection adobe brian published variety technical publication year presented numerous conference event served technical editor number book read brian blog archive year content remotesynthesiscom still post infrequently find full list brian past publication presentation follow brian twitter remotesynth
560,Lobsters,mobile,Mobile Development,The Client-Server See-Saw,https://blog.engineyard.com/2014/the-client-server-see-saw,clientserver seesaw,modern era clientside phoenix prevented bad responsiveness lead decreased revenue conclusion,modern apps usually come two half one half app life browser local operating system whether desktop mobile half life remote server cloud cluster half called client server environment respectively delegation task two half changed time originally first clientserver application internet slow computational resource cpu time memory expensive meant client bear brunt remote server consulted absolutely necessary one first us remote server respect software registration gradually bandwidth connectivity improved dialup gave way broadband expectation computer always connected greater percentage computer user going online despite growth internet usage mainly focused use browser browser limited displaying simple web page modern era two subsequent development changed state affair rise mobile improvement browser efficiency mobile platform saw rise platformspecific apps mostly io android browser improved javascript became faster started dhtml technique soon evolved ajax web apps even starting compete native performance development consequence delegation task across client server connectivity improved rise number apps across mobile browser saw action increasingly pushed serverside especially true mobile apps social age many mobile apps simply thin client giving access closedsilo website like twitter facebook flickr trend continues present day client started primary place work server relegated secondary task present day client secondary however everything computed stored cloud often closedsilo style proprietary individual company yet tide changing clientside phoenix server presently upper hand term delegation task clientserver apps fact even extremely unexpected delegation starting happen rendering game cloud gpu cluster display mobile circumstance led rise serverside changing company want horde user data example many way make strong business sense analytics trump small cost development storage circumstance changing mobile platform example getting faster faster yet competing desktop closing gap astonishing rate meanwhile clientserver apps face number problem increasingly highlighted one problem mobile becomes popular expectation connectivity exceed reality internet enabled mobile device first became widely popular revelation previously connectivity meant sitting desktop computer sat desk room somewhere suddenly internet walking road internet local shop internet park seemed like massive boost connectivity connectivity perfect going tunnel going holiday far flung country hiking mountain used connected almost everywhere almost nature proposition becomes noticeable galling especially clientserver apps absolutely rely server side equation go offline suddenly mobile browser even many native desktop apps network connection go home unusable good design prevented another overrun expectation come responsiveness computer always seem getting slower expect apps open instantly expect tab close soon click expect message sent received instantly practice time actually exception galling study consistently show bad responsiveness lead decreased revenue many problem lead bad app responsiveness one simply delegating many task serverside incurring cost latency problem network sometimes happen due bad asynchronisation within code often unavoidable property network many mobile laptop desktop increasingly device internet finding problem one size fit approach design web page example look great desktop terrible mobile applies apps supposed work across device getting apps working similar functionality difficult take lot developer cycle expensive quite fragile three problem mostlyserverside apps connectivity responsiveness device proliferation yet time clientside environment getting faster faster people starting notice status quo changed conclusion dawn connected era clientside apps standard server became powerful connection internet pervasive social mobile entered scene suddenly apps emerged everywhere often form thin client almost entirely serverside hosted service state affair changing due proliferation powerful client clientside making comeback next post series take look new cloud service model called baa making clientside attractive target bundling existing serverside framework pattern easy use apis manage client server side app side find easier finding clientside making comeback company organisation let u know comment
561,Lobsters,mobile,Mobile Development,5 Killer Tools for iOS Developers,http://developer.telerik.com/featured/5-killer-tools-ios-developers/,killer tool io developer,telerik ui io discontinued uwp xamarin kendo ui angular kendo ui react mean customer documentation resource telerik ui xamarin question address,telerik ui io discontinued taking decision easy multiple factor taken consideration time changing mobile development trend native mobile application development become preferred method creating mobile apps io android existing crossplatform framework hardly compete always stood developer productivity believe road productivity paved skill reuse targeting multiple platform single code base deliver truly native application focusing product portfolio enhance productivity working popular rising development platform way continue provide best ui productivity tool help developer keep pace latest trend technology staying true calling increasing investment tooling around latest technology developer need includes net related product like uwp xamarin javascript offering kendo ui angular brandnew kendo ui react name mean customer effective immediately new feature product update accompanying documentation resource remain available understand might inconvenience strongly advice try telerik ui xamarin continue building io mobile application question address ready best answer question comment might drop u line reply soon possible
563,Lobsters,mobile,Mobile Development,Lobsters: An open source Lobste.rs app for iOS 7+,https://github.com/JamesS237/lobsters-ios,lobster open source lobster app io,lobster io lobster screenshots building please note rubymotion ruby bundler xcode cocoapods issue open issue contributing roadmap licence lobster licence jcs jcsorg,lobster io lobster technologyfocused linkaggregation site created july joshua stein similar hacker news reddit slashdot borrows idea also attempting fixing problem specific site app nonoffical io app build rubymotion browse enjoy lobster whilst providing native io feel though strictly forbidden license please submit unmodified trivially modified version application app store screenshots story list view story view building please note licenced rubymotion installation required build project available download app store dependency rubymotion ruby bundler xcode newer xcode cocoapods fetched bundler build lobstersios firstly clone repository locally change directory grab ruby gem bundle install grab cocoapods rake pod install run rake simulator rake device device issue feedback bug report comment open issue contributing see contributingmd roadmap unit testing ci make comment viewing nicer offline cache idea open issue licence mit license mit copyright c james spencer permission hereby granted free charge person obtaining copy software associated documentation file software deal software without restriction including without limitation right use copy modify merge publish distribute sublicense andor sell copy software permit person software furnished subject following condition copyright notice permission notice shall included copy substantial portion software software provided without warranty kind express implied including limited warranty merchantability fitness particular purpose noninfringement event shall author copyright holder liable claim damage liability whether action contract tort otherwise arising connection software use dealing software lobster licence copyright c joshua stein jcs jcsorg redistribution use source binary form without modification permitted provided following condition met redistribution source code must retain copyright notice list condition following disclaimer redistribution binary form must reproduce copyright notice list condition following disclaimer documentation andor material provided distribution name author may used endorse promote product derived software without specific prior written permission software provided author express implied warranty including limited implied warranty merchantability fitness particular purpose disclaimed event shall author liable direct indirect incidental special exemplary consequential damage including limited procurement substitute good service loss use data profit business interruption however caused theory liability whether contract strict liability tort including negligence otherwise arising way use software even advised possibility damage
564,Lobsters,mobile,Mobile Development,Ember Sync,https://github.com/kurko/ember-sync,ember sync,ember sync alpha version work requirement querying online record usage indexeddbadapter installation initialization define online store define offline store indexeddbadapter localstorageadapter important define emberjs initializer wire ember sync store important creating record finding record deleting record synchronization download conflict resolution record synchronized distributed data consistency roadmap test build license copyright http opensourceorglicensesmit,ember sync ember sync allows emberjs application seamlessly work online offline alpha version beware risk want try production readme document state master probably feature described reflect status previouslatest release work ember sync queue operation every time save update delete record offline database eg localstorage indexeddb etc usually new operation created queue queue processed order operation executed online store internet go offline server queue stop processed operation run concurrently order always respected internet connection continue using app data saved offline new operation continue enqueued internet restored queue continue processed pending record created updated online store requirement ember data required tested generate unique id record eg uuid client backend maintain consistency offline online data querying online record whenever search something ember sync automatically query concurrently offline online store merge result single ember array mean findquery return embera right away instead promise second later response come rest api ember sync push new record array already shown template mimic stream work process ember sync automatically update offline database record come online store usage example consider indexeddbadapter offline database activemodeladapter online one use database want ember runtime use ember cli installation ember cli run npm install save embersync project ember cli add embersync dependency bowerjson file add following brofilejs restart server appimport vendorembersyncdistembersyncjs embersync default initialization define online store setup ember sync define online store done many way related ember sync example appinitializersonlinestorejs var customonlineserializer dsactivemodelserializerextend var customonlineadapter dsactivemodeladapterextend serializer customonlineserializercreate namespace server namespace var onlinestore dsstoreextend adapterfor function type return thiscontainerlookup adapter customstore serializerfor function type return thiscontainerlookup serializer customstore export default name onlinestore initialize function container application customonlineserializerreopen container container containerregister store online onlinestore containerregister adapter customstore customonlineadapter containerregister serializer customstore customonlineserializer applicationinject route onlinestore store online applicationinject controller onlinestore store online nt need custom serializer nt need define previous example define offline store define adapter serializer would normally offline store located thisstore default may use indexeddbadapter localstorageadapter others important using offline store requires manually create tablesobject store create embersyncqueuemodel example lsadapter create automatically whereas indexeddb define emberjs initializer connect ember sync app using emberaddon version installed npm embercli project skip step appinitializersembersyncjs import default embersync embersync export default name embersync initialize function container application containerregister lib embersync embersync containerregister model embersyncqueuemodel embersynccreate get queuemodel applicationinject route embersync lib embersync applicationinject controller embersync lib embersync manual step later automate wire ember sync store finally tell ember sync store instance application route using ember cli applicationroute approutesapplicationjs export default emberrouteextend init function thissuper thisembersyncset offlinestore thisstore thisembersyncset onlinestore thisonlinestore thisembersyncsynchronizeonline manually nt know name online store important remember call thisembersyncsynchronizeonline activate loop take care queue creating record save record following var user book user thisembersynccreaterecord user name robinson crusoe book thisembersynccreaterecord book name life robinson crusoe userget book pushobject book userembersyncsave function user bookembersyncsave createrecord deleterecord commonly called thisstore called thisembersync call embersyncsave model normally would example user book could used controller fine thisembersynccreaterecord return essentially thisstorecreaterecord instance approutesuserjs export default emberrouteextend model function return thisembersynccreaterecord user name robinson finding record find record user thisembersyncfindquery user name robinson crusoe automatically search user offline online store remember findquery nt return promise embera instead instance record found offline miliseconds show template right away another record found restadapterbased store second later array automatically populated simulating stream instead findquery use find well return promise user thisembersyncfind user deleting record delete record following thisembersyncdeleterecord user record recordembersyncsave synchronization download findquery find ember sync automatically save record found online offline store conflict resolution record synchronized speaking data consistency unlikely ever problem due use queue offline online envs imagine rest api take second respond create record update finally deletes online server nt even responded creation request yet ember sync smart enough enqueue creation update deletion online store run specific order even record nt exist offline anymore reason update locally might changed associated model consequency want sideeffect happen server order operation matter rest api go ember sync stop queue resume later order distributed data consistency ember sync however solve problem computer computer offline record altered sort conflict dealt backend although plan build api help figure client advise architecture network client avoid conflict first place roadmap following planned feature area need improvement periodicaly asynchronously download data online store push record offline store user enough data go offline granular configuration conflict handled refactor code smaller object encapsulate initializer user nt write explicitly test build first install depdendencies npm install bower install run broccoli serve visit http prefer use npm run testall terminal need phantomjs installed build new version run npm run build build available dist directory license copyright copyright c alexandre de oliveira mit style license http opensourceorglicensesmit
565,Lobsters,mobile,Mobile Development,Google New Material Design concept - intuitive metaphors allowing the mind to work less,http://blogs.telerik.com/blogs/14-06-26/google-new-material-design-concept-intuitive-metaphors-allowing-the-mind-to-work-less,google new material design concept intuitive metaphor allowing mind work le,card ui future mobile component learn telerik ui android,yesterday google presented material design concept underlying design system allows unified experience across platform device size natural evolution path google last year disclosed new ui framework using card ui heart showed helped achieve design scale across device web yesterday presented material design concept musthave resource android developer designer providing systematic detailed guideline design interaction fundamental animation color typography layout principle structure component essential pattern get core material design concept android team analyzed visual language unifies classic concept good design solid understanding fundamental physical property said matias duarte google director android user experience team chose use metaphor paper surface unifying principle people long history interacting paper surface physical exist world team relied tangible metaphor user understand intuitively accelerate understanding ui surface intuitive use foundation said duarte presentation organize space rationalize interaction allows make mind work le watch presentation elaborates thinking guided android team create visual language two month ago asked rhetorical question card ui future mobile today card one component part material design concept soon dominating design pattern across android design landscape click learn material design download resource click learn telerik ui android suite native component chart calendar appfeedback
566,Lobsters,mobile,Mobile Development,Announcing Telerik UI for iOS,http://blogs.telerik.com/blogs/14-06-25/announcing-telerik-ui-for-ios,announcing telerik ui io,ui io ui android core product series ax annotation trackball pan zoom animation easy data population flexible api view different selection mode event support localization flexible api smart syncing algorithm local data persistence sqlite integrated telerik backend service support resource online documentation video tutorial demo apps github appstore support update special price ui io suite ui io pricing page platform pricing page supported io version trial v licensed version grab bit ui io download page next step blog google twitter,week really exciting telerik native mobile story ui io ui android officially released manufacturing rtm article look ui io really add missing ui piece io application core product ui io suite native control fill gap uikit framework component aim address various ui data related scenario make native development easy pleasant first official version ui io offer chart calendar appfeedback datasync beta let look component chart chart intuitive easy use data visualization control business consumer ipad iphone apps control delivers elegant user experience polished ui sleek animation performance quick rundown chart feature series depending scenario choose one supported series column bar line line area spline spline area pie donut bubble scatter stack series bar column area candlestick ohlc financial indicator ax supported ax numeric categoric datetime multiple ax support negative value annotation make note trend observation anywhere plot thanks new annotation feature annotation explanatory image text anchored single point coordinate chart surface available annotation type band line cross line balloon layerview trackball —Çhis feature allows even greater precision reading chart data display small popup containing information point trackball line cross visualization series object pan zoom feature come especially handy small device viewing data may allow understand well case chart io allows zoom data pinch gesture get chunk data viewable area pan chart order get portion data view animation chart ship collection prebuilt core animation uikit dynamic based animation animate data point individually modify animation velocity easing control leverage uikit dynamic engine introduced latest io help easily create unique inspiring user interface easy data population choose three easy way populate io chart data depending coding style use delegate configure data source consuming collection data point nsmutablearray array nsmutablearray new int array addobject tkchartdatapoint alloc initwithx chart addseries tkchartlineseries alloc initwithitems array configure data source consuming property model object flexible api thanks control flexible api freedom style according specification calendar calendar control new addition io suite highly customizable easy use developer enduser perspective view present date week month year view different selection mode control cover various selection scenario enabling user select single date multiple date range date event support support event allows add custom event get event device using eventkit top event beautifully displayed date cell ipad shown show event glyph also event title text localization support different culture critical mobile apps telerik io calendar either inherit default device culture use custom one provided developer flexible api date cell calendar component based uiview thanks freedom style separate date cell according specification appfeedback appfeedback control implemented app gain invaluable insight user experience sending feedback user side easy simply shake device navigate feedback option control take screenshot automatically prompt user point problematic area add comment control seamlessly integrated telerik platform appfeedback module enabling developer easily monitor track user feedback one place end brings easy communication endusers directly within application post feedback appfeedback forum ui io feedback portal datasync data sync control powerful solution synchronizing application data across device cloud smart syncing algorithm ensure change made data offline synced cloud app connected smart syncing algorithm synchronization algorithm datasync component allows developer determine data synced wifi connection also specify whether cloud client data prevail conflict appears may decide use custom logic conflict resolution handling method tkdatasyncdelegate local data persistence sqlite datasync component embeds lightweight orm allows easily transform data class table sqlite thus saving lot time create appropriate schema sqlite integrated telerik backend service cloud side datasync framework backed telerik baa completing data user story start finish support resource ui io come comprehensive easy follow documentation case would like know particular feature detail documentation installed suite integrates xcode meaning hand reach time also provide online documentation preference order make comfortable read documentation style resembles apple doc expect u cover suite video tutorial make learning curve even flat demo apps ship demo application xcode project showcasing product feature source code available directly paste snippet project find application installation ui io github another demo app available appstore advanced demo application demonstrates component work currently ipad version iphone follow soon code application also available future version suite download telerik ui app appstore support telerik established standard firstclass support developer software market ui io different get access support channel even trial period professional developer license provides response time enquires year trial license provides response time day update understand dynamic development update strive produce three major release per year smaller update monthly basis always get freshest feature special price ui io suite launched ui io limited time introductory price buying product give one year product update plus dedicated support response time find offer ui io pricing page get ui io licensed version part professional business platform subscription listed platform pricing page supported io version ui io good adoption rate latest io version always high apple brings improvement benefit switch next io version get popular among endusers trial v licensed version trial version fully functional meaning provides feature find licensed version difference trial version display trial message grab bit download ui io ui io download page next step continue introducing feature ui io suite make productive successful end want make sure feature product solve real problem feel free leave comment forum submit feature request feedback portal say hi blog google twitter
568,Lobsters,mobile,Mobile Development,65 Web and Mobile App Analytics Tools,http://autosend.io/analytics-tools-web-mobile/,web mobile app analytics tool,,
569,Lobsters,mobile,Mobile Development,My First Hello World with Apple's Swift and Telerik UI for iOS,http://blogs.telerik.com/blogs/14-06-03/my-first-hello-world-with-apples-swift-and-telerik-ui-for-ios,first hello world apple swift telerik ui io,swift swift parallel scripting language developer account itunes online reference io developer library online documentation git repository,heard big news wwdc apple new modern language named swift please note mistaken existing swift parallel scripting language telerik eager try new language write code first impression positive fact registered apple developer start experimenting swift language right download xcode beta developer account language reference also available itunes free read online reference another good resource found io developer library marked prerelease let get started first create new single view application forget specify swift language specifying project name wizard finish project structure written objectivec difference header file missing file replaced swift file quite easy use third party framework swift add desired framework form target setting case use telerikuiframework nt know add follow step described online documentation one step order mix objectivec swift code add least one objectivec file instruct xcode create socalled bridging header open new file dialog choose objectivec file name file bridgem save asked configure bridging header file click yes h file created following naming convention yourprojectnamebridgingheader include following line file import uikituikith import telerikuitelerikuih way telerik ui class available use swift file start writing code open viewcontrollerswift file add following line viewdidload method var chart tkchart frame cgrectinset selfviewbounds selfviewaddsubview chart everything similar objectivec use cocoa touch framework apis named parameter also fewer brace semicolon order show chart add data following line create simple sine wave var item tkchartdatapoint x var sin mpi cdouble x itemsappend tkchartdatapoint x cdouble x x see even constant like mpi available interesting change two dot cycle three dot way include also final value iterating create series order add data chart var series tkchartsplineseries item item seriesyaxis tkchartnumericaxis minimum var xaxis tkchartnumericaxis xaxismajortickinterval seriesxaxis xaxis chartaddseries series result full sample code available git repository download telerik ui io using swift really easy intuitive
570,Lobsters,mobile,Mobile Development,Why mobile developers should care about deep linking,http://developer.telerik.com/products/why-developers-should-care-about-deep-linking/,mobile developer care deep linking,prepage rank phase deep linking type apps benefit deep linking practical benefit deep linking card ui becoming hot mobile deep linking resource apple resource android resource general resource party solution twitter google adding deep linking google post shared android app facebook learn ui io feature,user spending hour minute per day mobile device recently seen statistic revealing native app usage smartphones increasing expense mobile web industry mobile sale steadily increasing even eating web sale certain retailer hard believe huge fast growing native mobile apps market still prepage rank phase mobile developer marketer business owner ecosystem collect advanced performance data user discover content service efficiently deep linking help deep linking mobile deep linking methodology allows mobile apps communicate mobile web mobile apps via clickable link directing user specific landing page screen inside app instead sending back mobile site store deep linking help reduce conversion friction shortening user path piece content product promo interested type apps benefit deep linking apps shopping travel hotel booking music news ability send user specific product offer promo page tremendous effect conversion rate ultimately revenue deep linking enabled user navigated directly certain hotel booking page seen advertisement instead app home page last year facebook announced deep linking ad format letting user come back familiar apps ad feed image source http another scenario might app post facebook behalf user deep link post user friend interact post directed inside app instead app store fitness apps another type benefit deep linking example let imagine app track run may run route view detail run one app let view google map detailed mapping info run could logged another fitness app designed keep track day deep linking work user app already installed right true deep linking benefit preinstalled new user solution example tapstream carry forward saved request user app installed heshe sent app store upon opening app installation directly taken deep linked page screen eliminating search requested content even deep linking used reengagement mechanism bring user back inside app enormous potential drive conversion roi practical benefit deep linking big use case deep linking email campaign existing user likely app already installed basically click away given promo exciting offer another use case social medium campaign share button help deep link able send user dedicated content overcoming limitation one generic starting point user app journey huge impact profitability mobile revenue deep linking get much cleaner read analytics user dropped optimal experience device therefore deflating bounce rate revealing accurate conversion rate mobile web say marketing director curated online menswear shop recently reported share mobile sale twitter announced month ago twitter card support deep linking allowing user download app installed navigate inapp content app installed device unfamiliar card ui previous blog post talked card ui becoming hot mobile brand google pinterest facebook twitter use deep linking resource established standard deep linking native platform guideline community effort establish standard also number party vendor offering advanced solution deep link analytics deferred deep link retargeting framework list useful resource developer interested learning deep linking apple resource android resource general resource party solution twitter google adding deep linking google post shared android app facebook already using deep linking mobile apps share thought comment section tried telerik ui io native control bridge missing functionality uikit framework learn ui io feature
571,Lobsters,mobile,Mobile Development,Easy Android Custom View Reuse in Eclipse,http://developer.telerik.com/products/easy-android-custom-view-reuse-in-eclipse/,easy android custom view reuse eclipse,ui android retired uwp xamarin kendo ui angular kendo ui react mean customer documentation resource telerik ui xamarin question address,ui android retired taking decision easy multiple factor taken consideration time changing mobile development trend native mobile application development become preferred method creating mobile apps io android existing crossplatform framework hardly compete always stood developer productivity believe road productivity paved skill reuse targeting multiple platform single code base deliver truly native application focusing product portfolio enhance productivity working popular rising development platform way continue provide best ui productivity tool help developer keep pace latest trend technology staying true calling increasing investment tooling around latest technology developer need includes net related product like uwp xamarin javascript offering kendo ui angular brandnew kendo ui react name mean customer effective immediately new feature product update accompanying documentation resource remain available understand might inconvenience strongly advice try telerik ui xamarin continue building crossplatform mobile application question address ready best answer question comment might drop u line reply soon possible
572,Lobsters,mobile,Mobile Development,vpdn/MMLayershots ¬∑ GitHub,https://github.com/vpdn/MMLayershots,vpdnmmlayershots github,mmlayershots layershots take io app convert view hierarchy layered photoshop file screenshots steroid increase experimentation koen present framework http examplesframerjscom google vpdn iphone simulator rdar issue issue issue issue,mmlayershots layershots take io app convert view hierarchy layered photoshop file screenshots steroid iterating design existing app tedious oftentimes original design asset nt available anymore become outdated taking flattened screenshot png current app give date view slicing part ui reconstructing occluded area time consuming layershots eas pain little whenever take screenshot app generates photoshop psd file entire app view hierarchy take psd file dump psd editing tool choice photoshop pixelmator acorn yes even gimp adjust layer like static usecases visual change often iterated much faster graphical tool photoshop nt require compilerunnavigate cycle ultimate goal increase experimentation would icon look like another color would app look like replaced chat icon animation people make mistake thinking design look like people think veneer designer handed box told make look good think design look like feel like design work steve job framerjs one best tool currently quickly prototype animation interaction take psd load framerjs bring ui life line javascript info watch koen present framework make sure check example http examplesframerjscom google overviewframer website designer preamble designer nt write code next section might look like message written et parent guide home rest assured pretty simple plug layershots app whoever developing app get integrated line code question feel free ping twitter vpdn glad help sample project sample project link sfpsdwriter library via git submodule run sample first clone project git clone http githubcomvpdnmmlayershotsgit run following command initialize submodule git submodule update init recursive use layershots preferred way install via cocoapods add podfile pod mmlayershots application delegate initialize mmlayershots shared instance bool application uiapplication application didfinishlaunchingwithoptions nsdictionary launchoptions mmlayershots sharedinstance setdelegate self return yes mandatory delegate method tell layershots screenshot taken mmlayershotscreatepolicy shouldcreatelayershotforscreen uiscreen screen return mmlayershotscreateonuserrequestpolicy return mmlayershotscreateneverpolicy disable layershots mmlayershotscreateonuserrequestpolicy pas request user popup mmlayershotscreatenowpolicy trigger generation psd immediately two optional delegate method one called willcreatelayershotforscreen one didcreatelayershotforscreen data psd generated use latter save data file present open option user void willcreatelayershotforscreen uiscreen screen nslog creating psd could hide away stuff user info nt want psd void didcreatelayershotforscreen uiscreen screen data nsdata data nsarray path nssearchpathfordirectoriesindomains nsdocumentdirectory nsuserdomainmask yes nsstring documentsdirectory path firstobject nsstring filepath documentsdirectory stringbyappendingpathcomponent layershotspsd data writetofile filepath atomically nslog saving psd filepath iphone simulator iphone simulator nt trigger notification screenshot saved rdar work around use key command note generated psd file currently bigger need nt bound calculation yet every layer rendered full screen issue layer currently grouped layer named layer issue rendered psd pixel perfect might glitch test suite upcoming issue currently layershots support portrait mode issue list outstanding missing feature check github issue page would awesome could help thanks
573,Lobsters,mobile,Mobile Development,Talking with Mikel Evins about the Lisp-based Newton OS from Apple,http://lispm.de/lisp-based-newton-os,talking mikel evins lispbased newton o apple,,talking mikel evins lispbased newton o text originally published little known early version newton o apple written mainly lisp apple created lisplike language called ralph operating system called bauhaus development environment hacked version macintosh common lisp called leibniz shipped version newton o different mikel evins worked newton group apple answered question technology yahoo lisp machine forum edited bit put online sound exciting bauhaus newton o written ralph ralph schemeclos variant later known dylan leibniz development environment mcl plus ralph compiler crosscompiled arm plus remote listener mcl macintosh common lisp q mikel question bauhaus topic development bauhaus happen mikel newton development started probably bauhaus project junior project became shipping product started time late worked bauhaus cancelled early q would typical usage szenario machine small pda like released newton right mikel assumed people would want slatelike device variety us personal us notetaking use computer convenient laptop laptop bigger also large variety specialized us architect inventorycontrol specialist healthcare professional etc etc q kind application would written demo application written show potential mikel yes fairly thin remember six u really five larry spent time executive though debug code wrote bauhaus writing whole o kernel mikel address book notetaking application various drawing tool framebased general database application called encyclopedia help system scheduling tool thing nt remember matthew windowing graphic system bunch small graphic demo slick animation smooth scrolling sort stuff started look like going cancelled went overdrive producing code hoped would convince management let u try build tv box kind platform q much code o mikel excluding kernel line code leverage high user experience felt fairly rich complete amount code q many developer using lispralph o mikel six larry tesler yuying chow ken dickey matthew maclaurin jim grandy plus around dozen people part team testing participating demo q bauhaus written dylan mikel working bauhaus first iteration newton o dylan even lisp called ralph basically schemeclosa couple idea functional languagesa thing please smalltalk hacker apple development environment hacked version mcl supported two compiler runtimes common lisp compiler runtime ran hardware targeted hardware ralph compiler runtime ran hardware targeted arm hardware first ribboncabled newton prototype board later development prototype actual newton hardware connected mean nubus insert lengthy meeting apple cambridge team designing ralph various interested fraction apple arguing favorite language feature strongest lobbyist lisp smalltalk programmer q would main difference bauhaus released newton o mikel everything kernel written dylan except lowlevel quickdraw routine size ram twice size c version ui littler richer little faster built dylan using graphic system made wrapping quickdraw primitive dylan building graphical language mikel supported mobile software agent debate could made robust safe mikel mean automatically generated ui element readlike form class specification argument example macro getinputfromuser like binding form like let class annotation dynamically constructed ui get value binding nestable stylesheets describing appearance ui element sort like cs ui back web brand new new page still listed website world miekl novel eventhandling system capable supporting arbitrary userdefined event event system identified event patternmatching mikel frame system used implement knowledge base stored thing like prototypical person place date object supported fuzzy comparison socalled ia intelligent assistant subsytem used frame could guess thing like fact write joe probably mean joseph smith josephine baker address book also used help system could guess example sequence action probably intended establish machinetomachine connection pop information help eventhandling system could declaratively define new class highlevel event handler q sound little like macframes married newton soup mikel accident main graphicswindowing guy worked together knowledgebased automated testing system used qualify system release system written macframes wrote ui modeling system called panel macframes mikel frame system wrote bauhaus also supported relatively elaborate facet annotation q kind highlevel event would could user define mikel yes idea could plug sequence lowerlevel event together use property sheet perhaps parameterize thus creating novel kind event sort like constructing applescripts recording ui action smaller easier understand easier debug piece one thing wrote automated testing system application watched user constructed representation observed action could replayed another system represented action term lowlevel macos event term abstract state transition described term frame represented application feature moving different machine different screen layout forth would break playback idea event system came combining experience experience jim grandy actually wrote event system earlier worked garnet q event propagation like released newton o event propagation contained hierarchy prototype hierarchy iirc mikel remember right event propagated containment hierarchy visual object patternmatched subscription layer agent could subscribe event pattern would get chance handle event matched bubbled containment hierarchy dylan runtime use prototype hierarchy way shipping version used generic function thing used isa relation q ia also support command like released version support phrase like memory add meeting mike provided prefilled dialog bit reminded clim command language richer syntax mikel yes supported yuying chow used frame system implement extensive naturallanguage stuff concept stuff shipping version wanted higherlevel data type user person date place activity defined frame relatively rich pseudonatural language api ui mikel yes sense early next machine q constructed gui screen resolution independent mikel though adaptive different screen resolution thought vectorbased fellow graphic matthew maclaurin pixeloriented guy time q gui multithreaded mikel would eventually ken dickey hired implement threading system got cancelled project bore fruit q use mobile agent mikel internally experimentation q different development environment newtonscript ide mikel totally different every way application called leibniz basically mcl plus ralph dylan compiler crosscompiled arm plus remote listener interaction armralph runtime tool eg inspector stepper etc basically mcl dylan well common lisp q code organization like later dylan technical preview browser edit code inplace code retrieved database edited file mikel nothing like really mcl though good xref tool time much frustration apple cambridge spent much time new development environment much wanted making improvement dylan runtime example hired ken concluded cambridge would get around thread time matter u said nothing respect apple cambridge accomplished q user interface similar one shipped released newton mikel way yes way shipped ui one three developed original ui written dylan interesting feature example pervasive use nonrectangular window criticized slow much like conventional desktop windowing system engineering group underwent reset went rework newton based cnewtonscript environment championed steve capps andy stadler u asked see could better dylanbased environment seen shipped ui intentionally tried make look like additional capability notably animation styleable element based nested stylesheets q uims use generic method class prototypebased like one released newton mikel used generic function class also many singleton ui customization used frame system reasoning display q user interface designer mikel ui implementor instead spent time writing declarative specification language ui intended easy enough use would nt need ui designer would control element appeared using type annotation would control looked using stylesheets idea sort foreshadowed dhtml cs xul q make sure declarative specification language predictable delivers enough diagnostic message problemsviolations mikel nt would problem would required interactive graphical tool q application look like physical user perspective mikel interesting question debate exactly application practice usually frame plus ui specification plus style information plus maybe method class spent bunch time trying decide tell whether okay install something made easy migrate code one system another dynamically update system mikel userwise application usually consisted one new icon one list task could accomplish plus maybe new kind paper either new recognizers new thing could old recognizers plus new page prompt ia help plus maybe new kind object could store search frame repository mikel trying make possible make application simply plugging preexisting object together dynamically q application organized application description like defsystem graphical mikel fact used hacked version mk defsystem q possible develop machine mikel needed mac running leibniz dylan listener ran repl newton needed mac talk compile dylan code q nt need interpreter compiler machine mikel thought nt get around cancelled many idea get worked practice q ever anything written bauhaus everything head mikel plenty written documentation code couple year ago response query someone else tried get apple give permission redistribute interested nowadays think whatever get realm idea discussion q exactly dylan go infix syntax whose idea mikel hard say one mostcommonlyheard complaint early languagedesign meeting new language lisp naturally complaint came participant lisp programmer actually nt come smalltalk programmer either mostly complained really wanted name function selfdocumenting sense smalltalk method selector seemed satisfied point keyword argument complained wanted stronger encapsulation private data typical lisp give seemed satisfied point module system mikel repeated heated argument language syntax heat coming nonlisp nonsmalltalk folk felt strongly infix syntax implementors lisp people one moon seemed pretty much care one way another syntax least ot strong feeling solidly lisp camp actually favored invention infix syntax saw harmless addition make language attractive nonlispers mikel believe wrong infix syntax cause dylan succeed find distinctly inferior practice sexpression syntax used several year matter fact favorite programming language time common lisp sexpressionbased dylan later dylan version nt excite high list thing would like see new implementation something close language several thing designed bring forward today notably library supporting posix multithreaded programming internet protocol data format good xml support duim would nice q ralph make use lisplike macro mikel yes though defined common lisp rather dylan q dylan v guile scheme mikel thing old dylan would miss guile absolutely everything object sense object system iteration protocol generally wellthoughtout collection class single convenient form binding single multiple value singleton yes know possible implement using mop functional feature like curry rcurry compose complement disjoin module system prefer guile grew fond several dylan convention differ scheme eg use bind place let mikel hand guile provide thing would miss go back old dylan notably thread srfi support said also like see modern dylan support posix xml internet standard protocol data format q memory protection dylan apps mikel honestly nt remember microkernel supported protection nt remember whether dylan runtime used fcailities ran everything single heap q relationship software hardware group mikel working various flavor newtonos software hardware group separate mean course hardware engineer software engineer overall group relatively small everyone worked pretty closely met together regularly liberating throw away assumption o reenvision congenial term said live system undead thing also throw away assumption system constrained hardware given offtheshelf sense possible redesign hardware begin think would like hardware able example decided would good could carry newton around automatically network whenever close enough network node commonplace today bluesky software hardware though could think way hardware engineer macintosh s cart gut hanging ribboncabled transceivers testing spreadspectrum comm hardware associated networking stack early protonewton system would notice got close enough repeater negotiate appropriate handshake automatically put net crazy term available offtheshelf unreasonable willing think new hardware well new software addendum also newton toolkit development environment released version newton o nonlisp version prototyped lisp macintosh common lisp
574,Lobsters,mobile,Mobile Development,"Apple, Google settle smartphone patent litigation",http://ca.reuters.com/article/businessNews/idCABREA4F0S020140516,apple google settle smartphone patent litigation,,apple logo pictured front company flagship retail store near sign central subway project san francisco california january reutersrobert galbraithsan francisco reuters apple inc google inc motorola mobility unit agreed settle patent litigation smartphone technology ending one highest profile lawsuit technology joint statement friday company said settlement include cross license respective patent apple google also agreed work together area patent reform statement said apple company make phone using google android software filed dozen lawsuit around world protect technology apple argued android phone use google software copy iphones two company informed federal appeal court washington case dismissed according filing friday however deal appear apply apple litigation samsung electronics co ltd dismissal notice filed case highprofile case apple motorola began motorola accused apple infringing several patent including one essential cell phone operate network apple said motorola violated patent certain smartphone feature case consolidated chicago federal court however judge richard posner dismissed shortly trial saying neither company sufficient evidence prove case last month appeal court gave iphone manufacturer another chance win sale ban competitor google acquired motorola mobility billion year announced selling motorola mobility handset business lenovo keeping vast majority patent reporting dan levine editing andre grenon
575,Lobsters,mobile,Mobile Development,Creating a Planet Lisp mobile app in 15 minutes with mocl,https://wukix.com/pl-screencast,creating planet lisp mobile app minute mocl,screencast creating planet lisp mobile app minute mocl,screencast creating planet lisp mobile app minute mocl
576,Lobsters,mobile,Mobile Development,Introducing Moto E and Moto G with 4G LTE: Smart phones priced for all,http://motorola-blog.blogspot.fr/2014/05/introducing-moto-e-and-moto-g-with-4g-lte.html,introducing moto e moto g lte smart phone priced,cellular phone flip phone really really thin feature phone moto x moto g moto e average selling price globally motorolacom link license term,motorola first company bring consumer cellular phone flip phone really really thin feature phone want radically transform mobile industry making quality smartphones great thing available practically everyone nine month ago launched moto franchise flagship moto x brought new value smartphone buyer exclusive experience like touchless control moto maker fastest software upgrade industry introduced moto g exceptional phone exceptional price best selling smartphone motorola history pushing boundary value equation even moto e new class smartphone fully loaded fairly priced perfect combination savvy shopper firsttime smartphone buyer smartphones always come smart price believe people compromise quality style experience fact mobile phone user world still using feature phone unlock full wonder mobile internet many case think worth smartphone average selling price globally believe time feature phone era came end quality smartphones made accessible affordable say hello moto e join u officially saying goodbye feature phone forever moto e made last priced built last moto e highresolution display sharpest class everything photo video web page come life brilliant detail plus glass waterresistant splash guard help protect lasting durability power last longlasting mah battery go day without plugging think everything want much time software last moto e run latest version world popular mobile platform guaranteed know always date best android experience style last moto e feature colorful interchangeable back called motorola shell providing color design combination let personalize look feature processor dualcore cpu high performance power superior mobile graphic exceptional battery life rearfacing camera motorola streamlined camera interface touch anywhere screen take shot capture panoramic picture record video microsd slot expandable memory save photo video music movie apps builtin fm radio tune listen favorite station pick new signal best part priced starting motorolacom contract moto e available country carrier partner around world next week also offering upgraded version popular moto g featuring lte great feature fastest network available original moto g continues available motorolacom without contract local carrier country worldwide learn mobile internet access feature phone usage desire affordable smartphones around world share memory life like smartphones helping family friend say goodbyeflipphone hello motoe image broll follow link also footer image broll agree license term downloading image video battery life claim approximate based average user profile includes usage standby actual battery performance vary depends signal strength network configuration feature selected voice data operating temperature application usage pattern device receive least one software update current kitkat operating system shell sold separately color availability vary market
578,Lobsters,mobile,Mobile Development,Is cards UI the future of mobile?,http://blogs.telerik.com/blogs/14-04-15/is-cards-ui-the-future-of-mobile,card ui future mobile,card hot recently ideal responsive design going responsive google play individual unit quickly consumable content serve party data twitter card advertising format blog post think card,card part everyday routine exchange business card holiday card play card u collect card participate actively digital experience well many big brand using heavily already google embracing cardsstyle interface across mobile web mobile search google google google map google play pinterest facebook twitter three social medium giant also moved card card hot recently think card rectangle html box module actually nothing new card modular piece content enable embedding rich medium fostering interactivity make card design unit choice many publisher extremely wellsuited mobile environment easy scan consume glance offer great capability user manipulation swipe stack flip pan fold group sort etc ideal responsive design one biggest benefit card bring design various device scalability different state compact normal expanded rendered variable position accommodate vertical horizontal stacking card economical solution designing building multiple device different screen size presentation going responsive google play google play team discus depth card helped achieve design scale across device web individual unit quickly consumable content mobile user attention span comparable young child matter using device home work front tv waiting queue delivering consistent experience card individual unit quickly consumable content leaving user satisfied end rather frustrated interrupted midway serve party data card already big impact mobile development serve data experience internal api design feel natural mobile also party api markup twitter example introduced twitter card advertising format going one step using card design container platform serving party content blog post discus detail power card deliver party information performance coming api think card plan using design pattern next mobile app see viable solution challenge responsive design project share feedback comment
579,Lobsters,mobile,Mobile Development,The decline of the mobile web,http://a16zcdixon.wordpress.com/2014/04/07/the-decline-of-the-mobile-web/,decline mobile web,http http,view expressed content including post podcasts video linked website posted social medium platform collectively content distribution outlet view ah capital management llc respective affiliate ah capital management investment adviser registered security exchange commission registration investment adviser imply special skill training post directed investor potential investor constitute offer sell solicitation offer buy security may used relied upon evaluating merit investment content construed relied upon manner investment legal tax advice consult adviser legal business tax related matter concerning investment projection estimate forecast target prospect andor opinion expressed material subject change without notice may differ contrary opinion expressed others chart provided informational purpose relied upon making investment decision certain information contained obtained thirdparty source taken source believed reliable independently verified information make representation enduring accuracy information appropriateness given situation content speaks date indicated circumstance post information provided website associated content distribution outlet construed offer soliciting purchase sale security interest pooled investment vehicle sponsored discussed mentioned personnel construed offer provide investment advisory service offer invest pooled investment vehicle made separately mean confidential offering document specific pooled investment vehicle read entirety among requirement meet certain qualification federal security law investor defined accredited investor qualified purchaser generally deemed capable evaluating merit risk prospective investment financial matter assurance investment objective achieved investment strategy successful investment vehicle managed involves high degree risk including risk entire amount invested lost investment portfolio company mentioned referred described representative investment vehicle managed assurance investment profitable investment made future similar characteristic result list investment made fund managed available http excluded list investment issuer provided permission disclose publicly well unannounced investment publicly traded digital asset past result andreessen horowitz investment pooled investment vehicle investment strategy necessarily indicative future result please see http additional important information
581,Lobsters,mobile,Mobile Development,How to build an Android app that displays live accelerometer data using a line chart control,http://blogs.telerik.com/blogs/14-04-01/how-to-build-an-android-app-that-displays-live-accelerometer-data-using-a-line-chart-control,build android app display live accelerometer data using line chart control,telerik chart control android reference chart android app sensoreventlistener sensormanager documentation state http needle download telerik chart android read ui android,mobile device today builtin sensor accelerometer compass temperature audio light sensor gps etc used variety apps game weather travel apps availability sensor massmarketed mobile device creates exciting new opportunity data mining application blog going show display live accelerometer data simple android seismograph app end use telerik chart control android test control behaves handling large amount streaming data build app using android studio spoiler alert result get end let dive set new application project android studio need reference chart android app keep unnecessary code logic post focus mainly workflow core mechanic application working sensor android application one must first implement sensoreventlistener interface interface used receiving notification sensormanager sensor value changed couple method overridden onsensorchanged onaccuracychanged onaccuracychanged called accuracy sensor changed onsensorchanged sensor value changed case seismograph simulator magic happen onsensorchanged override acceleration sensor report data let start obtaining reference sensormanager accelerometer documentation state order get instance default acceleration sensor need following mind similar accelerometer app would inevitably boil following basic workflow leaving unnecessary logic look like code code simplified illustrative purpose valid application type thing remaining show create chart display data smartphone sensor case accelerometer inside chart app source code available download github http next blog post show add needle needle synchronized coordinate incoming accelerometer seismic data point create following effect download telerik chart android read ui android
582,Lobsters,mobile,Mobile Development,UX Antipatterns: Hidden Traps in Sites and Apps,http://www.lauradhamilton.com/ux-antipatterns-hidden-traps-sites-apps,ux antipatterns hidden trap site apps,michael boeke braintree antipattern click click register antipattern double jump antipattern blind carousel antipattern sharing wart reduces conversion may impact google ranking antipattern robotic repeat antipattern mixed business antipattern door slam antipattern tease antipattern thumb stretcher michael slide,yesterday pleasure attending michael boeke insightful design talk ux antipatterns michael product manager braintree talk hosted groupon arrived lobby gentleman signin table gave direction take elevator fourth floor go towards cat spaceship first thought misheard lo behold actual giant cat spaceship fourth floor antipattern michael told u design pattern appears beneficial first glance creates unintended consequence also must markedly inferior alternate design pattern used elsewhere michael shared u antipatterns come across illustrated proper way address problem antipattern click antipattern old internet although thankfully becoming pretty rare day example illinois general assembly website instead writing click register could simply write register way user clearly see link reading anchor text antipattern double jump see example double jump people gas signup page page request account number broken four different block filling form quickly might habit hit tab done field form automatically jump next field end double jump end skipping field instead simply show single number field necessary parsing backend stripping hyphen parenthesis example right way uber signup page antipattern blind carousel take look newegg site see carousel way know shown banner ca nt see without clicking result little user engagement banner except first one amazon solution blind carousel problem show small preview upcoming carousel antipattern sharing wart read article huffington post find huge number social sharing button right see following facebook like facebook share tweet google share email comment reddit stumbleupon tumblr another google button social sharing content important contentbased website number problem huffington post implementation button make multiple request external website increase pageload time reduces conversion take prime real estate unfriendly user may impact google ranking many share count zero make article seem unpopular opposite intended effect instead sharing wart michael recommends single unobtrusive share button open new dialog user choose network share think interesting idea definitely recommend site ab test setup see way better conversion social share could see potentially varying one site next antipattern robotic repeat nt make user enter information example already asking user birthday nt ask age calculate backend antipattern mixed business michael warned audience overloading button noun verb example let say list user button enable disable user account want button convey user current status also happens click button change user status example think user button next name enabled disabled currently case user enabled button disables user quite confusing instead michael suggested use iostype slider clearly communicate current status also action everybody familiar slider know mean work antipattern door slam might antipattern personally hate door slam mobile design flaw occurs try follow link otherwise visit site get huge fullpage request download site mobile app instead consensus best practice give user content requested immediately ok display small banner top advertising mobile app example yahoo right antipattern tease google map team fixed issue subsequent release first clicking red target pin nt pull direction instead google map developer expected user swipe bottom get counterintuitive unusual action think general need train user use interface bunch tooltips bounce probably something wrong interface antipattern thumb stretcher mobile designer put hamburger icon icon open menu navigation top lefthand corner quite difficult righthanded phone user reach example yahoo weather app instead michael suggested putting hamburger icon top righthand corner see michael slide
586,Lobsters,mobile,Mobile Development,Is Flash Dead Yet?,http://isflashdeadyet.com/,flash dead yet,debate html v flash img exist relevancy evolution,debate html v flash compared headon flash html appears missing many crucial feature immersive graphical uis motion tweens shiny ui effect skip intro button erm audio video control many element native html could enhance good web design used appropriately recently simply impossible embed control audio video html without relying plugin sort thankfully image made spec img exist development progression html includes audio video element interpreted death knell adobe flash plugin currently defacto standard delivering rich interactive experience audio video animation element briefly youtube flash web game embedded audio viral video communication streaming advertising january saw youtube introduce experimental html rendering video content supported browser sans flash month apple announced ipad tablet device big ipod touch multitouch screen control motion sensor processor powerful enough run game shiny thing notably missing support flash plugins continuation approach taken iphone ipod touch going relevancy html flash many year considered separate technology solution mixing two appropriate depending brand experience audience html may finally starting step flash turf audio video particular presenting another albeit nascent option rich medium interactive experience ability web standard commoditize turn popular vendorspecific owned proprietary feature open free specification countless user agent implement good tradeoff case time htmlnative video time writing partially supported number browser way go particularly around format support v ogg theora royaltyfree format another debate entirely ie yet despite potential alone html generating lot excitement interest diggblogotwitreddisphere evolution battle point future basic feature thing roughly equal likely specific feature detail quality execution interrelated yes flash huge established supported install base defacto standard work audio video application cynic would say better anything else opinion flash earned maintained dominant position continuously providing solid crossplatform graphic animation audio video support browser others tried failed guess flash retain much dominant position realtime streaming audiovideo communication perhaps animation year come html perhaps well set challenge time given standard process evidence interest number large company suspect several year html audio video anywhere near commonplace let say ie hell love wrong event html flash certainly coexist long time simply due legacy support hand company apple announced big disruptive new weboriented product simply nt flash certainly statement suggests apple belief flash nt requirement vision web html may fill gap even content product browser light perhaps html seen much competition flash rather simply next milestone constant evolution web technology word oncecomedian dennis miller course opinion could wrong
587,Lobsters,mobile,Mobile Development,Installable web apps,http://www.quirksmode.org/blog/archives/2014/02/installable_web.html,installable web apps,installable web apps replied marcos bruce fronteers session installing page installing web app point permission permission interface permission timing dunno option changing permission conclusion,installable web apps yesterday replied tweet marcos add home screen kicked long rather interesting conversation installable web apps post give view bruce explained fronteers session bookmarking something mobile browser mean adding icon device home screen instead making entry otherwise undistinguished bookmark file soon bruce said knew right like loathe consumer take something seriously mobile install like native apps one oftenquoted disadvantage mobile web apps user get confused download put homescreen let copy native experience user perspective make excellent sense let call install bookmark installing page install page mobile browser icon probably favicon long created specific one appear mobile device home screen basically serf link page page title becomes icon text exactly work see two option icon could normal bookmark contains url page tapping icon would start browser load page would nontechnical user expect sure therefore second option would bookmarking cause sort save webpage complete page attendant style script image saved device also read offline take little harddisk space much may line user expect slight technical difference would run webview browser installing web app get really interesting install static page web app let call web app something function app written html cs javascript handle sort offline use web app saved entirety much clear would browser know save point would know trying save web app solution manifest file personally support old syntax html manifest manifestjson browser detects manifest file told save page content file tell file save mere presence tell browser fact web app know know syntax currently used appcache maybe use different attribute name simple attribute html tag ok special meta tag although dislike looking besides appcache kindof foreshadowing installable web apps even though jake point time really douchebag maybe make sense hijack syntax anyway sort special attribute point file tell browser web app also file download gist permission elephant room permission yesterday conversation web app want access location address book audio user grant explicit permission want web apps start sending entire address book malicious server technically permission difficult user asked allow app access whatever want one question per functionality say yes easy permission interface easy user interface fact bloody hard first user really understand question second mobile screen small android way consists listing permission grant app installed asking one single yes work huge list user able make sense say yes order get really care exactly saying yes asking permission asynchronous question pop user required answer continuing interact web app come close current desktop browser permission interface single bar allow deny button created every separate permission app want sm microphone location permission browser show three separate bar honest sure work like right true bar would still take valuable real estate mobile device sure bar model best possible solution certainly better androidstyle list permission permission timing even solve interface problem done yet user give withhold permission app load installed fact large part yesterday discussion exactly problem first thing first user given certain permission never asked allowing microphone access mean allowing forever though see still would user expect give permission yesterday disucssion mostly question install time first run thinking see third option first load time consider installing web app likely user discovers site us bit use likely already encounter permission question allows denies thing permission least rerequested permission still undecided think ask question first run ie user actually want use web app ready consider permission see installation app end discovery process user find web app online us bit like decides install going thing flow interrupted permission question dunno option also missing permission discussion though yesterday third option apart allow deny dunno option possible user answer permission question one way android model go wrong requires synchronous answer proceeding anything ugly ugly technically dunno deny long user given explicit permission allow web app access address book simple psychologically though interaction point view different user honestly know yet want grant access address book come around pondering question yet web app creator still room sway instance offering much app functionality possible need address book printing message like grant permission x app able therefore apart onsuccess onfailure event handler permission question also indeterminate logic branch browser web app author use indeterminate state logical persuasive manner changing permission finally user want change permission denied microphone access change mind want allow vice versa suppose creating special permission button open layer current permission status button change hard implement would user discover understand right know question need answer conclusion mobile browser bookmark function become install place icon home screen icon start web page web app likely local memory permission requested asynchronously user actually using app remembered app lifetime browser especially author make sure indeterminate logic branch adequately covered finally need interface change permission step closer installable web apps work like native apps consumer point view start sending web apps plain simple bookmark device via sort connection bluetooth nfc nt care done mobile web really start take shape
588,Lobsters,mobile,Mobile Development,How to Show Animated GIFs in Android,http://weavora.com/blog/2012/02/07/android-and-how-to-use-animated-gifs/,show animated gifs android,gif help write essay animate imageview available starting version android api level class movie gifview view ondraw canvas moviestart activity attrsxml,android platform currently support quite large number medium format see documentation among described graphic file format find one interested gif general help write essay format cause trouble try animate case standard class imageview display gif file regular static image researching related forum probably find people claiming android platform fully support gif animated gifs used nevertheless still solve problem show loophole least two way difficult say solution better however one important point although webview part android sdk ability play animated gif file available starting version android api level aim supporting wide range device second option perhaps acceptable completely fair say class movie well documented case article would probably useless let try create separate component play animated gif file using movieclass ok creating new class gifview inheriting view add new variable movie type class initialize ok movieobject initialized need draw use ondraw canvas method purpose need let movieobject know part gif file draw need separate variable moviestart long type assign systemclockuptimemillis value case know movie started calculate much time passed need initialize gifview activity class let add possibility pas gif id parameter activity class look like another good practice using xml markup component let try well purpose create file attrsxml resvaluesattrsxml following structure need read xml attribute gifview class able use gifview xml markup following way activity class look like really ever used approach better solution please let u know
590,Lobsters,mobile,Mobile Development,Let Smart Devices Discover Their Peers,http://www.iotworld.com/author.asp?section_id=3224&doc_id=562561,let smart device discover peer,,digitallyenhanced world evolving anticipate automate people need nxp strives engage protect respect relationship wider world live responsibility global company
591,Lobsters,mobile,Mobile Development,Developing a mobile cross-platform library - Part 1. Exploring,http://www.skyscanner.net/blogs/developing-mobile-cross-platform-library-part-1-exploring,developing mobile crossplatform library part exploring,including experience exploring solution developing mobile crossplatform library ie single codebase could part mobile apps running different platform cover journey mobile crossplatform development tool phonegap titanium like code porting tool webviews task c javascript engine work many resource explaining approach problem thought could helpful shared experience first three part list explored solution follow post c javascript engine part currently hold market new io version high adoption rate need support version since froyo gingerbread want good coverage option mobile crossplatform development tool webview tool phonegap rhomobile sencha touch appmobi telerik adobe air xamarin appcelerator titanium corona mosync kony triggerio openfl dragonrad option c option code porting hyperloop xmlvm apportable avian box option javascript webview answer answer option javascript javascript engine development inactive time development active conclusion android crossplatform io library mobile technology related,including experience exploring solution developing mobile crossplatform library ie single codebase could part mobile apps running different platform cover journey mobile crossplatform development tool phonegap titanium like code porting tool webviews task c javascript engine work many resource explaining approach problem thought could helpful shared experience first three part list explored solution follow post c javascript engine part write run anywhere wellknown slogan created illustrate java crossplatform functionality programmer would like run code anywhere however cpu architecture impossible keep new programming language emerge every day framework come go want interact o code reusability question maybe narrowed scope mobile device could chance apparent trend towards mobile day developing mobile crossplatform library would definitely benefit developer let say narrow even io android currently hold market leaf u target cpu architecturesabis io armeabi mips android programming language objectivec io java android framework os support last io version sufficient new io version high adoption rate come android need support version since froyo gingerbread want good coverage see easy task made work wanted achieve summarized diagram one library shared two platform platformspecific glue code order make work skyscanner heavily relying internet networking functionality essential normally io library imported either objectivec source code prebuilt static library binary accompanied respective header file android apart java source code library also imported class bytecode file staticshared library binary however since option restrictive research took place went step explored alternative way importing code android io start option tool make life easier option mobile crossplatform development tool mobile developer must heard numerous mobile crossplatform development tool like phonegap appcelerator titanium xamarin tool allow u develop library right well main problem approach tool usually output endproduct appipa apk library embed runtime environment run crossplatform code difficult interface code running environment native code list tool investigated reason work webview tool tool using webview runtime environment coding immediately dismissed would difficult interface code running webview however also attempted see later tool phonegap rhomobile sencha touch appmobi telerik adobe air runtime environment adobe integrated runtime dismissed due difficulty interfacing code air xamarin output intermediate xamarin library native one appcelerator titanium building native library officially supported could possibly work wrote titanium extension would allow interfacing native code much trouble questionable result sure remain functional next titanium corona corona people claim supported android coming feature io mosync corona kony supported triggerio supported openfl supported dragonrad date seem support hence failure nothing worked wait second cc code accessible io android option c developing library c one two solution work android native development kit ndk java native interface jni framework allow runninginterfacing cc code java ndk responsible compiling c code android target armeabi mips jni allows communication two language using jni quite verbose programmer must adhere naming convention two level wrapper required java c one hand java wrapper provide java api c library exposing c class method native keyword java hand c wrapper provide bridge java wrapper c library translate object two language io thing much simpler naming convention one level wrapper required using objectivec objectivec language variant allows objectivec c code single source file consequently object translation happening single level wrapper see slightlymodified diagram androidios apps including party library unusual programmer access jreandroid cocoa touch framework case party library included either source code prebuilt binary either find build one specification library performing networking operation http request supported standard template library stl integrated libcurl crossplatform library libcurl could included source code configure script executed luckily prebuilt binary found io android used ndk toolchainscompilers built libcurl android target building library target io android timeconsuming part process automated script solution worked quite well c popular language vast number party library used tool used android ndk jni objectivec official solution supported google apple drawback approach android want keep reference c object java wrapper object manually garbage collect c object manually call delete cppobject java object released however reason retain c object copied java one destroyed immediately copying detail along code snippet solution published separate post next week option code porting another option considered maintain one codebase use appropriate tool translate code platform needed option drawback well generated code efficient code written native developer bug likely introduced manually fixed imported binary unlikely translated tool translate source code several mobile code porting tool however none provided required functionality tool translating java code objectivec supported google seems like highquality tool compared rest currently limited amount java class translated objectivec work progress unfortunately translate java http request moment implemented functionality separately platform could possibly work project alive since september hyperloop tool translates javascript native source code currently support io stable plan expand popular platform project alive since august tool translates objectivec code java could good solution well unfortunately mature enough contains many bug output noncompilable code xmlvm tool allows crosscompiling jvm bytecode objectivec neither tool appeared good enough complex use requires lot legacy jar downloadedimported apportable tool take care porting io app android unfortunately meet criterion translates whole apps library output apk android application package file avian lightweight java virtual machine could embedded io app bundle run java code solution provide desired functionality would difficult io ui code interfacing library java code running vm box porting dalvik vm android gingerbread apis top io solution dismissed project longer active option javascript webview javascript language gaining popularity rapidly last year originally used clientside scripting also used serverside application nodejs part several mobile crossplatform tool investigated maybe could crossplatform language solves problem well mobile platform execute javascript script webbrowser view webviews webview apis usually exposed app developer let see minimum functionality need javascript executing script calling function evaluating global variable returned result performing callback native code let investigate platform separately android webview execute script string callback java implemented annotating javascriptinterface certain method java class callable javascript adding reference instance class webview javascript global scope addjavascriptinterface method however evaluating variable function call straightforward way directly evaluate script workaround pas callback function javascript result evaluated callback function get called passing result java method shown answer io uiwebview execute script string unlike android evaluate global variable function call stringbyevaluatingjavascriptfromstring returned string appropriate conversion made result string however callback straightforward android mechanism uiwebview horrible workaround calling objectivec javascript try open new url custom callback scheme eg skycallback javascript capture event objectivec parse url scheme name callback scheme either parse string url resource path evaluate global variable result stored shown answer see interaction javascript native code complicated different platform likely result bug code grows size inevitably become unmaintainable consequently option abandoned option javascript javascript engine javascript library running standalone javascript engine also worked interacting javascript engine much straightforward compared webview unfortunately pure javascript engine lack networking functionality xmlhttprequest object responsible http request javascript available part webbrowser strict javascript specification result different architecture applied delegating networking functionality platformspecific glue code complicates thing particularly interested developing crossplatform javascript library worked io javascriptcore engine used awesome javascriptcore framework framework introduced io easy integrate app within second would cocoa touch framework api simple glue code needed concise android thing bit complicated javascript engine embed one manually two javascript engine successfully embedded rhino rhino written java easy embed add app size developed mozilla foundation development inactive time bit difficult embed written c hence android ndk jni used order interface java adding one layer translation java c javascript instead java javascript addition app size increased something might negligible apps however development active crossplatform library developed javascript http request performed stub stub act placeholder overridden library loaded javascript engine get replaced method call native platformspecific method request implemented full description javascript javascript engine solution found part sequence post published following week conclusion several tool technique explored two worked one hand c solution widely used reliable flexible solution significant drawback manual garbage collection java workaround proposed hand javascript solution easier implement missing functionality overcomplicates architecture dependent either rhino actively developed significant impact app size use one approach take drawback consideration proceed care project seemed promising worth revisiting future corona mosync appcelerator hyperloop nashorn javascript engine written java oracle android crossplatform io library mobile technology related
592,Lobsters,mobile,Mobile Development,"How Qualcomm and the AllSeen Alliance are Changing the World of Technology, TODAY!",https://samlanning.com/2014/02/11/how-qualcomm-and-the-allseen-alliance-are-changing-the-world-of-technology-today/,qualcomm allseen alliance changing world technology today,,
593,Lobsters,mobile,Mobile Development,How to Extract the Images From Any App in the App Store,http://objcsharp.wordpress.com/2014/01/22/how-to-extract-the-images-from-any-app-in-the-app-store/?goback=.gde_2627917_member_5833568980127744002#!,extract image app app store,extract image app app store original fullresolution image without jailbreaking without special software itunes apps view finder show window explorer ipa ipa zip zip payload app show package content facebook ipa zip app never plist always uaobfuscatedstring must like martin rybak io app audio bundle content drm extract icon image ipa original package payload png resource video permalink comment,extract image app app store recently discovered incredibly easy extract original fullresolution image resource file like video audio plist file app app store without jailbreaking without special software io developer give fascinating look inside app always sure learning purpose respect apps intellectual property open itunes go apps section yet downloaded synced apps want extract rightclick app icon itunes select view finder mac show window explorer window copy ipa file desktop rightclick file rename replacing ipa extension zip doubleclick zip file open inside payload folder app file mac folder window inside window open folder mac rightclick file select show package content tada see listed app original fullresolution image file see image content facebook app take away ipa file zip file app file package folder apple drm encryption protects app binary noncompiled resource file never keep sensitive string like api key credential plist file always use obfuscation library like uaobfuscatedstring must store sensitive string inside app binary ever think app resource safe prying eye like like loading related martin rybak new york area software developer mba year serverside experience microsoft stack also native io developer since day arc architect develop fullstack web application io apps database system backend service posted io tag app audio bundle content drm extract icon image ipa original package payload png resource video permalink comment
595,Lobsters,mobile,Mobile Development,Has Mobile Killed The Fast Follower Strategy? Sure Looks That Way‚Ä¶,http://hunterwalk.com/2013/09/09/has-mobile-killed-the-fast-follower-strategy-sure-looks-that-way/,mobile killed fast follower strategy sure look,secondmover better fast following time market delayed io app store approval discovery changed changing impact social apps tend single purpose bolting feature larger app work facebook adding another feature impact design like,mobile killed fast follower strategy ability secondmover company mimic copy innovative competitor eventually market entrepreneur steve blank suggested data show better fast following originating citing company like google benefited combining somebody else business model search technology year later feel like mobile increasingly rewarded first market product people want especially consumer market instagram snapchat line twitter foursquare come mind mobilefirst innovator able hold imitation larger tech company fast follow startup hypothesis time market delayed io app store approval web could push code control release cycle io insert delay apple review approves app first mover already cleared hurdle subsequent app update le friction due apple familiarity product fast follower need essentially get approval launch discovery changed io app store promotion wordofmouth via social medium much bigger distribution force today three year ago sure fast follower marketing budget drive paid installs adbased promotion organic editorial discovery important mobile favor innovator mimic last time apple featured fast follower app want drive new hot bestlooking apps keep iphone platform choice changing impact social using facebook connect twitter follower address book access social graph become commodity sure innovate virality smaller first mover scale quickly fast follower typically exploited existing distribution footprint meaningful advantage social mobile world purely anecdotal clicking link easy often need hear app friend go multiple click required install apps tend single purpose bolting feature larger app work classic fast follow move ship someone product feature already bloated client software another tab website mobile apps tend designed speed single purpose click button app icon something expected happen facebook adding another feature already complex app much threat startup anymore impact design ok stay rise good design user expectation often understood pixel beauty believe deeper especially mobile device phone tablet lovingly caress hand hold close face literally get warm use purrrrrrrr love component good design innovator usually really really love building come design little flourish fast follower driven primarily fear greed hold root motivation unconsciously felt product specific example maybe instagram v photo service filter snapchat v lookalikes post definitely workinprogress perhaps many example fast follow mobile apps gained tremendous usage strategy become successful mobile matures investor mobile application definitely thinking question like like loading
596,Lobsters,mobile,Mobile Development,"Telemetry Protocols, or Why HTTP Won't Work for IoT",http://www.iotworld.com/author.asp?section_id=3224&doc_id=562380,telemetry protocol http wo nt work iot,,digitallyenhanced world evolving anticipate automate people need nxp strives engage protect respect relationship wider world live responsibility global company
597,Lobsters,mobile,Mobile Development,A Slight Obsession Over Page Speed,http://flippinawesome.org/2014/01/13/a-slight-obsession-over-page-speed/,slight obsession page speed,todd anderson hat come best practice best practice speeding web site web perfomance best practice grunt manual performance analysis feedthebot yahoo yslow google pagespeed pagespeed webpagetest htaccess integrating performance reporting workflow sitespeedio sitespeedio phantomjs yslow browsertime bootstrap yslow script phantomjs sitespeedio http wwwsitespeedio junit sitespeedio configuration option grunt integration grunt sitespeedio gruntexec installation sitespeedio yslow phantomjs conclusion spdy modpagespeed http blog github amazon profile follow todd twitter visit todd site,todd anderson lately several project personal workrelated ignited increasing obsession page load speed performance wanted highlight tool resource find useful analyzing performance delivering web page production optimal load time hat come past decade primarily clientside application developer sometimes business card change personal introduction made get engineer architect thrown truthfully spend day coding application regardless language enjoy writing shipping code certain practice methodology ocassionally pause ass current workflow modify bottleneck prevelant recent year primarily concerned code performance rendering pipeline element lifecycles userperceived performance case remote offloaded operation optimizing algorithm sorting mapping analyzing data etc still also become increasingly focused delivery load perfomance especially today climate people viewing web content handheld device without wifi available perhaps due increasing work webbased client desktop native application honest never really paid attention load time older webbased application project several reason flash plugin preload skip intro desktop browser target blind naivete however enduser like term much either trying access web content phone bus ride home world consumed wised rather quickly started think someone would absolutely frustrated move second without seeing visible load response web application lovingly crafted way make life easier started incorporating page load analysis deployment workflow best practice excellent documentation regarding best practice delivering web page optimal performance best known one yahoo best practice speeding web site google web perfomance best practice steve souders rule fasterloading web site rehash tidbit article provide please visit link wealth information follow following blog keep abreast latest research development web performance one aspect find interesting handful preferred optimization described article concatenation datauris placement script style page actually become part build phase development workflow especially rise tool grunt developer community creating postprocess task take granted select tool code using certain architectural principle thati perceive providing comfortable development environment tool disposal deliver end product optimal fashion resolution year contribute library tool use often whether code monetary donation manual performance analysis site tool visit perform analysis site development additonally feedthebot handful neat little tool test thing specifically gzip working site along various metric provide scoring based criterion far tell defined either yahoo via yslow google via pagespeed typically stick opening running pagespeed developing chrome get overall recommendation optimization visit webpagetest want serious analysis busy updating htaccess file rewrite expiry integrating performance reporting workflow running analysis using tool desribed great way see metric determine solution use order better load performance siteapplication like automate thing well provide reporting continuous integration server document progress failure provide value strong proponent using sitespeedio nothing bad say sitespeedio built top phantomjs yslow browsertime bootstrap alternatively use yslow script phantomjs want something stripped sitespeedio http wwwsitespeedio generates nice set web document provide performance summary along able produce junit report ci documentation sitespeedio thorough easy follow along configuration option insanely helpful finding possible page site may issue grunt integration sure grunt task wild hook running sitespeedio probably stop lazy make one yet find search one personally use gruntexec run command build deploy proper installation sitespeedio following subtask exec task gruntinitconfig exec sitespeed cmd sitspeedio u http stagingmysitecom r docmetrics gruntloadnpmtasks gruntexec gruntregistertask dryrun build deploy analyze build deploy staging exec sitespeed generates junit report summary documentation artifact consumed presented ci server choice also tendency use yslow script phantomjs tandem exec task print perfomance grade console issuing grunt deployment conclusion sometimes especially working party library web font etc unrealistic hit performance grading kidding damn near impossible try stay feel satisfied well stated final test actually physically visiting site handheld device data plan mentioned previously usually perceived perfomance testing bus ride home ensuring get frustrated load time work hope critical stuff others tip iceberg come analyzing load performance development coming google spdy modpagespeed exciting space keep eye order deliver content faster keep endusers happily enjoying site application article originally pubished http todd anderson application developer passion architecture development workflow strong proponent agile practice test driven development decade experience helped deliver web mobile desktop solution numerous company enterprise entertainment industry including adobe thq cond√© nast publication motorola writes frequently software technology blog support open source software due best give back development community github esteemed pleasure coauthor several title reilly wiley wrox amazon profile follow todd twitter visit todd site
598,Lobsters,mobile,Mobile Development,"Some of what we did at Danger (makers of the Sidekick, predecessor to Android)",https://medium.com/tech-talk/d823af31f7c,danger maker sidekick predecessor android,came catapult entertainment webtv general magic first peanut see portal yahoocom front page looked like back subcarrier ibeacon great music horrible data spot gprs pivoting pivoting thing hiptop hiptop feature alwayson twoway data ton input multiprotocol instant messaging copyright softbank multiaccount email pim apps web browser wap avantgo wwwapplecom great text text geek susan kare cloud storage web apps multitasking interapp communication app store speaking billing air update notification music general midi open sourced deaf community tcoils tdd developer program encryption blowfish twofish aes arm thing could io android internet archive wayback machine view old post telenav finally coolest thing never shipped,came across website whose purpose provide super detailed list every handheld computing environment going back early great job except one glaring omission first mobile platform helped develop company called danger platform called hiptop follows account early day list modern technology shipped year could buy io android devicewho came fromway back early new consumer electronics startup founded took residence palo alto california company name danger research inc three founder andy rubin matt hershenson joe britt apple alumnus involved several company apple danger general magic catapult entertainment webtv still always think apple guysanyway early cast danger largely apple webtv general magic one apple people joe invited lunch one finished eating casually mentioned andy started new company asked wanted job said yes without even asking company going figured would probably cool danger ended fun place ever worked cool known world chris dangercom first peanutyou see portalsthink back web browser year old parent probably email possibly cell phone yet almost one broadband commercial web monolithic site visit read mail view calendar check headline news etc one place internet abuzz idea merging big medium web stuff costly needed keep eyeball site much possible new thing could tack onto site keep little longer fair gamei started danger april like shock take look yahoocom front page looked like back actually shock little changed huge problem facing portal developer access user desktop computer often work general purpose connected mobile computer well super costly aimed enterprise user exist help mom check online todo list line grocery danger original product idea aimed solve problemwe codenamed peanut possibly shaped like nutter butter cookie keychain fob small lcd display button idea would oneway data device would hold important bit info portal account time todo list calendar recent email etc plan sell enduser peanut charge portal monthly fee run service would tie portal data user device cool new valueadd seemed like something portal would want since would bind user portal even tightlywe two method getting data onto peanut first involved placing peanut dock connected serial port going special web page would talk custom browser plugin originally worked pull data store peanut crazy demo favorite involved ad data downloaded would show ad plugin frame browser window also show complementary animated ad peanut lcd screen data sync something expected per day get big data movement donethe second method send data fm radio subcarrier plan lease bandwidth radio station every major metropolitan market could receive fm radio could get data technology obviously oneway send much data one time intended small incremental update throughout daywe actually got stuff working fact used fm radio transmit data opened interesting possibility one idea retailer could buy small super lowpower fm transmitter connected network serve targeted reward special liked talk folk walking past starbucks peanut go ding looking seeing received coupon good next minute although never developed part product concept life known ibeacongreat music horrible datathere lot problem using fm radio delivery biggest trying convince radio station let u attach manage gear system going take really long time would kind serious coverage big hurdle figuring broadcast data signed service get zip code broadcast data primarily nearest transmitter traveled worked insane system slowly propagating change market area hope catching moved around anyway turned really bad idea microsoft fossil several watchmaker would launch nearly identical product called spot dismal failure shut year later right time vc partner ran number came great idea backofthenapkin math showed cost building maintaining doomed nationwide fm data network could instead r twoway data device hosted gsm cellular network data service network called gprs bleeding edge stuff time awesome prior gprs mostly restricted using pager network vc partner even found u data provider looking device showcase small regional carrier pacific northwest spun western wireless voicestream would later get acquired deutsche telekom act management data product division would eventually renamed tmobilepivoting pivoting thingso dropped peanut started development new thing exactly sure going knew wanted one since really anything marketplace model built thing wanted hope people would share enthusiasm want one toohiptopwe called device hiptop though tmobile sold u sidekick first alwayson internetconnected smartphone name hiptop came idea wear belt holster thus computing gone desktop laptop palmtop ultimately hiptop justification may invented fact whatever great namethe bleeding edge twoway data time started great pager bring anyone joythe featuresthe product time anything even remotely like thinking early blackberry worked pager network required attaching special hardware rim setup sold solely enterprise anything wanted spent time thinking want entirely staffed earlyadopter type wired long meaning adjective clearly going focused around electronic communication personal data management since u also going nonenterpriseearly hiptop prototype called paperback alwayson twoway day wireless pda made go transmission mode sync hiptop always connected data could pushed device service time device could respond immediately huge leap forward lost connectivity apps would queue activity outbound email calendar change etc process instant got network connection none pulltorefresh taptoretry crutch vogue day network connection data fresh user work make brief aside world owes debt thanks jeff bush first person know get full tcpip stack working cellular data connection hiptop magic happened without jeff would later move work apple palmtons power user desktop computer wanted lot input lot way tie together extra stuff roller controller also main action button later replaced trackball dpad game three button corner face device menu jump cancel also full qwerty keyboard dedicated number row could chord menu button keyboard key perform menu action cutcopypaste etc jump button quickly switch apps later add two topedge shoulder button ok button dedicated button answering hanging phone call written like sound like lot quickly got used allowed lot complicated action without ever look screenanother early prototype called navi multiprotocol instant included im client aol instant messenger yahoo messenger msn messenger jabber support early technology google talk based never shipped recall could chat going use shoulder button rotate chord menu button number row keyboard jump directly specific chat supported graphical emoticon everything use full set emoji image back still copyright softbank japan pretty good coverage smiley people usedmultiaccount supported pop imap got builtin email account signed service could link three external account email supported rich text convert incoming html mail simplified form display handled bold italic etc quite well image attachment including ability send email attachment apps device first model mb storage keep mail hiptop got low space start dumping bit piece message went read later bring piece back ondemand networkpim pim still term people use personal information manager well anyway pim apps note pad todo list address book calendar exactly expect say though calendar app handled multitimezone repeating event way better anything else thereweb saved app last huge undertaking time device idea let user access internet provide wap browser super crappy textonly walled garden based text message allowed view entire world wide webthe magic behind technology licensed avantgo big bank web proxy server sitting hiptop browser internet requested page would fetched one special proxy ran heavily modified version mozilla browser fully rendered measured converted highlycompressed list display element hiptop browser put screen would fetch resize recompress image would convert text character encoding thing natively support lot magic could still use web form stuff super complicated difficult modify amazingly wellsuited serving type web page common browser innovation let leave www com url entered browser type apple would go wwwapplecom exactly want nearly every time enter single word one many case said really bug x would make version bug usgreat text geek know happened turned hiptop amazing text insane amount work shape key keyboard could easily type without looking experienced user easily touchtyped wordsperminute zero error silicone keycaps unique key shape amazing typing user hesitate use im hour straight compose email thousand word long wrote first version text editor baked text feature loved much beloved macintosh software selection cursor movement deletion back forward page updown homeend worked exactly expected initially handcrafted bitmap font designed susan kare previously done original macintosh font icon device showing horrible dotmatrix block letter lovely proportional font system looked greatsince platform unicodebased could handle ton nonenglish language know thing hold letter iphone android keyboard pop list extended option year earlierok maybe took little far showing unicode code point character hexadecimal alternate input method would allow type character little far nerd spectrumcloud iphone data backed icloud android data google service super cool great today user year research shown plug phone manually sync fewer user ever automagic great early folk come webtv year already natural u well everything hiptop immediately communicated server backed multiple device attached account change instantly distributed deviceswe demo trade show someone audience give u quote presenter typed quote hiptop put ground dropped bowling ball hiptop destroyed removed sim card plugged another hiptop signed account second later note app quote fully restored much applauseweb backup data could neat stuff one provided web interface email pim apps photo galleryi find color screenshot design think hold pretty wellthis turned surprisingly big deal remember early data commercial cellular brand new place outside u traveled overseas likely data coverage able access data via desktop browser invaluablealong enabling web apps cloud storage also meant could provide way sync data across service sync product big market category back added way product talk service behalf sync data related apps desktop computer outlook lotus note etc multitasking interapp launched app stayed running time fact application framework even provide way app quit everything always stayed running meant could stuff like web browser start loading really big page switch read email reply ims note lunch date calendar pop back web browser page loaded would alert finished apps talked example could select anything notestodocalendaretc apps hit menum would start new email item data menum web browser would start new email url page looking atany place drew text would highlight email web url make selectable could download file web browser store sd card forward apps viewing editing many way apps cooperated wellapp tmobile inexplicably called download fun hiptop offered online app store category apps game utility seasonal stuff trending product ringtones wallpaper could browse whole catalog online see screenshots detailed description etc ringtone could play sample clicked buy button downloaded installed instantly charge added phone bill credit card extra account nothing oneclick purchasing simplest billing ever also offered hour return policy deleted app within hour billed great apple launch app store io cost hiptop service per month top whatever voice plan carrier cheap easy understand haggling deciding data cap choose granted virtue network back used tiny fraction data today phone use still time flatrate data billing novel prouserover air would need able fix bug add new feature existing device added ability hiptop software wirelessly upgraded cell network would happen background get notification telling update asking reboot could defer wanted io add capability late full year itnotifications area hiptop really shone multimedia playback rgb led device could light color also vibrator finegrained control enabled u thing still one matched one ringtone format option enhanced version general midi multicolor led vibrator midi instrument system could really amazing music synchronized colored light vibration folk published amazing professionally engineered ringtones platformwhen screen turned led would periodically blink let know notification waiting could choose color flashing pattern wanted app instance hiptop knew yellow meant unread ims blue meant email purple calendar red web page loading etc could glance hiptop across room know going onwe also mode music playback system analyze music waveform pulse vibrator match bass line music added bit lowend oomph surprisingly effective game made great use vibrator toothe amazing audio engine hiptop ton thing used well engine open sourcedthe deaf communityone thing really surprised u hiptop popular deaf community two reason behind thisthe first cellular radio chipset used phone portion device happened compatible tcoils telecoils special circuit allow phone used hearing aid cochlear implant without causing electromagnetic interference today still cell phone market hearing aid compatible virtually none werethe second reason deaf hard hearing user loved u included ttytdd application free starting hiptop ii prior deaf person wanted communicate hearing person phone would connect phone handset special modem hearing person would speak operator would type deaf person would read typing type back assumed device small sexy imagine deaf folk left home timea typical ttytdd terminal around also make sure access handset right shape acoustic coupler ugh hiptop could get functionality without extra hardware tdd software based built suddenly deaf hard hearing user could communicate hearing user anywhere anytime cell phone deaf user letter thanks received office would break heart read tmobile great thing offered dataonly pricing plan deaf user since use voice minute official asl sign hiptop find ttytdd support current smartphone developer programwe knew thirdparty application especially game would crucial success platform way write sell apps listed app store platform javabased meant huge host free tool available platform wanted tool provided packing testing submitting application also javabased could write hiptop apps mac o window linux whatever interesting historical side note engineer developed java runtime hiptop would later join google lead android kernel engineering team develop dalvik java language runtime androidwe provided outstanding device simulator let test everything could even simulate camera hardware could simulate poor network condition see app would behave lot neat stuffone aspect developer program remains unique level testing thirdparty app submission army extremely skilled software qa folk would give submission hour testing app rejected mystery provided multihundred item checklist test performing developer could testing thing would check sense confidence product submitted cost u lot manpower think better developer experience see android zero testing ton malware io testing visibility process one apps app store ssh client developed inhouse led hiptop becoming wildly popular folk since could use im client chat folk back office problem use ssh client remotely administer machinesanother aside one favorite danger story time one server engineer stuck airport waiting delayed flight noticed problem aol instant messenger proxy used ssh client remotely connect computer office coded fix kicked build pushed productionencryptionsecurity privacy pretty hot topic day remember came decided communication hiptop server encrypted used either blowfish twofish bit key cipher though later switched aes ratified crypto requires lot hard math operation performed large number original hiptop mhz processor quickly found implementing crypto java application layer would require minute thing like validating certificate ssh handshake stuff written handcrafted arm assembly engineer told great story go used bookstore find book numerical method originally written slide rule calculation said done could validate certificate five secondsa thing could io find friend foursquare app called dog would show map hiptopconnected friend phone gps back determined location based cell tower connected super accurate good enough one engineer also made cool app let leave locationbased note standing right place could see note otherwise started microblogginglifestreaming device camera network connection email app tied together procmail filter perl script would generate web page employee started chronicling life later turned service replacing perl python email text photo hiplogs hiptopcom get added hosted blog zero setup picked account name device tumblr instagram rolled one simpler use neat use internet archive wayback machine view old support bluetooth headset audio system car always sort surprised amazing deal bizdev folk managed one getting dedicated native facebook twitter myspace client platform recently learned offered mappingroutinglive traffic app created telenav screenshots look like pretty telenavand finally coolest thing never shippedin skunkworks project within danger merge color gameboy called hiptop color screen manufactured sharp happened one used gameboy advance common component well figured virtually hardware handheld game player play game prototype board photo courtesy ficuswe extracted gameboy advance chipset built backside hiptop main board developed custom chip would let u mix video signal gameboy hiptop perpixel basis could decide show screen made hiptop software would let u start stop gameboy playpause game etc gameboy input came hiptop dpad four corner buttonsthis let u following demo start gameboy game watching regular gameboy video receive phone call gameboy game would magically pause hiptop alert window would display top gameboy video asking wanted answer call soon call game would resumesince network app store seemed like great way distribute gameboy rom got working could browse gameboy game app store pick one buy download playing second need haul cartridge around youthe executive nintendo blown away absolutely loved license game catalog include right electronic distribution coupled need take new screenshots write new catalog copy electronic format determine pricing etc meant way could gotten big enough catalog title built time christmas year next window would graduation season following year whole project fizzled died damn coolupdated january photo prototype added encryption section
599,Lobsters,mobile,Mobile Development,"AT&T's Sponsored Data is bad for the internet, the economy, and you",http://www.theverge.com/2014/1/6/5280566/att-sponsored-data-bad-for-the-internet-the-economy-and-you,sponsored data bad internet economy,new sponsored data program waived mobile,today announced new sponsored data program let developer brand pay deliver content mobile device outside data cap sound great consumer face able get stuff without paying reality huge blow free vibrant market internet economy first step towards new era carrier control simple example right rent elysium apple google addition amount pay rent movie streaming movie mobile broadband also obviously count data plan additional cost pay monthly carrier like sponsored data allows company eliminate extra charge paying directly apple wanted stick google could subsidize elysium rental advertise renting movie itunes wo nt hit data cap fair competition paytoplay sound great consumer get money reality way levy tax company afford pay huge implication free market internet youtube nt hit data cap vimeo people going watch youtube facebook feel threatened snapchat launch poke free data maybe nt get completely ignored fail apple map launched free data navigation maybe driving bridge instead downloading google map io fair competition paytoplay pull thread even farther get even evil sponsored data becomes de facto cost business exploding mobile market cost get passed right back consumer free elysium rental end costing advertising apps like facebook get intrusive creepy rest assured find way keep service rate high contract term restrictive nothing plan involves shifting profit increasing lowerincome customer cheaper plan disproportionately affected might still pay data use whatever service want anyone counting bit buffeted world corporate control paying price huge policy mistake levy tax access hundred million subscriber increasingly turning mobile device traditional pc turn wireless behemoth major economic gatekeeper internet situation would flagrantly violate net neutrality principle govern landline internet waived mobile huge policy mistake paying price smartphone revolution escaping stifling restrictive control carrier walled garden freedom internet sponsored data trying put wall back
600,Lobsters,mobile,Mobile Development,Infographic: Global Cell Phone Statistics,http://www.longren.org/infographic-global-cell-phone-statistics/,infographic global cell phone statistic,read,modafinil medication used treat sleepiness caused narcolepsy may experiencing sleep disorder due shift work lead interruption sleep different time medication developed help management obstructive sleep apnea necessary enough sleep body read morebuy modafinil online trusted source
601,Lobsters,mobile,Mobile Development,"Motorola Makes The Moto G Official, A ""Premium"" Phone Starting At $179 Unlocked",http://techcrunch.com/2013/11/13/motorola-makes-the-moto-g-official-a-premium-phone-at-a-price-more-can-afford/,motorola make moto g official premium phone starting unlocked,,motorola held special event today reveal new moto g spiritual sibling moto x way googleowned smartphone maker bring vision customized mobile device future even consumer much affordable pricing setting sight world motorola ceo dennis woodside put event today noting people afford phone today woodside said average worldwide around mark phone offer really bad experience however according woodside using old tech show especially poorly running modern apps woodside cited galaxy fame phone example cheap device made poorly lastgen phone option believe half billion people deserve better woodside said announcing moto g moto g offer experience even rival galaxy modern topend superphones according woodside display ppi resolution hero feature phone outperforms iphone according motorola qualcomm snapdragon ghz processor ram offer allday battery life mean around hour talk time network v claimed iphone ship android guaranteed upgrade coming android january lte board make sense given target market growing developed country lte limited supply nonexistent motorola keeping customization key product custom shell like expensive predecessor new flip shell protect screen back software moto g designed build pure android add value google vanilla o provide user capability motorola vp product management motorola mobility punit soni specifically called foolishness adding complex skin android predictable stance moto google subsidiary obviously soni come google soni also said focused basic optimizing software instead trying jam bunch feature allows punch way weight respect competitor moto g outperforms galaxy boot time browser launch return home making call soni note validation team focusing basic important complicating thing skin software added including motorola assist predictive software feature try develop profile use phone order anticipate need optimal performance also tried focus camera software soni said capable taking excellent photograph every setting possible proof pudding however reserve judgement get chance put pace moto g buyer get additional google drive storage free phone addition come service also fm receiver phone access free music dualsim support select market soni said approach marrying value feature look motorola google combined effort going forward version u unlocked contract free version unlocked still sub price google motorola might able steal away big chunk lowcost feature phone market microsoft aim transition window phone acquisition nokia sale today brazil part europe launch coming week rest europe canada telus koodo within month u number country launch early next year
602,Lobsters,mobile,Mobile Development,The second operating system hiding in every mobile phone,http://www.osnews.com/story/27416/The_second_operating_system_hiding_in_every_mobile_phone,second operating system hiding every mobile phone,palmos rtos inside qualcomm baseband processor exactly case set reverse engineer baseband processor software hayes command set unimaginably long,always known sure never really talk every smartphone device mobile communication capability eg lte actually run one two operating system aside operating system endusers see android io palmos also run small operating system manages everything related radio since functionality highly timingdependent realtime operating system required operating system stored firmware run baseband processor far know baseband rtos always entirely proprietary instance rtos inside qualcomm baseband processor specific case called am built upon proprietary rex kernel made concurrent task handling everything usb gps run processor problem clear baseband processor proprietary closed software run poorly understood proper peer review actually kind weird considering important little bit software functioning modern communication device may think baseband rtos safe secure exactly case may secure mobile operating system world still running second operating system poorly understood poorly documented proprietary go qualcomm infineon others blue eye insecurity baseband software error design standard govern baseband processor radio work designed ending complicated codebase written complete attitude towards security instance barely exploit mitigation exploit free run amok make even worse every baseband processor inherently trust whatever data receives base station eg cell tower nothing checked everything automatically trusted lastly baseband processor usually master processor whereas application processor run mobile operating system slave complete operating system running arm processor without exploit mitigation little automatically trust every instruction piece code data receives base station connected could possibly go wrong mind security researcher ralfphilipp weinmann university luxembourg set reverse engineer baseband processor software qualcomm infineon easily spotted load load bug scattered place every one could lead exploit crashing device even allowing attacker remotely execute code remember air one exploit found required nothing byte message get remote code execution air crazy thing exploit instance turn autoanswer using hayes command set command language modem designed still work modern baseband processor found smartphones today autoanswer made silent invisible sortof assume base station cell tower operated large carrier safe fact matter base station becoming lot cheaper sold ebay even open source base station software package base station used target phone put compromised base station crowded area even financial district sensitive area remotely turn microphone camera place rootkits place callssend sm message expensive number yes even brick phone permanently pretty serious issue one rarely hear lowlevel complex software would guess people world actually understand everything going complexity exactly one reason easy write baseband implementation list standard describe gsm unimaginably long gsm need add umts hsdpa forth course everything covered ridiculously complex set patent top communication authority require baseband software certified add easy see every cellphone manufacturer opts offtheshelf baseband processor associated software mean every feature smartphone piece software always run device essentially black box whenever someone dive baseband software many bug issue found raise question long rather dubious situation continue kind sobering thought mobile communication cornerstone modern world developed developing region pivot around software dubious quality poorly understood entirely proprietary wholly insecure design
603,Lobsters,mobile,Mobile Development,LinkedIn Intro: Doing the Impossible on iOS,http://engineering.linkedin.com/mobile/linkedin-intro-doing-impossible-ios,linkedin intro impossible io,linkedin intro intro came rapportive work wherever member work impossible extending io mail client imap deferrable gratification lspace impossible interactive ui email impossible dynamic content email impossible easy installation configuration profile security privacy pledge privacy conclusion intro update linkedin intro pledge privacy,editor note since issued post bishop fox extensively tested linkedin intro clarified earlier assumption see bishop fox post recently launched linkedin intro new product show linkedin profile right inside native iphone mail client right extended apple builtin io mail app feat many people consider impossible post short summary intro work way bent technology intro see glance picture person emailing learn background connect linkedin look like iphone mail app intro intro came origin intro go back acquisition rapportive linkedin rapportive built browser extension modified gmail show profile email sender within gmail page product popular people kept asking love rapportive gmail mobile magic rapportive remember use installed right inside email showing everything need know contact need fire new app search another browser tab information right need feel natural linkedin want work wherever member work know professional spend lot time phone checking replying email figure enhance mobile email giving professional information need brilliant people ask io engineer api extending builtin mail app iphone wanted build something like rapportive people would tell impossible yet figured impossible extending io mail client key insight extend mail client add information message one way would modify message server modification would appear client desktop mobile would user want instead add information message using proxy server rewriting message using imap proxy normally device connects directly server email provider gmail yahoo aol etc configure device connect intro proxy server instead intro proxy server speaks imap protocol like email provider store message instead forward request device email provider forward response email provider back device en route insert intro information beginning message body call top bar great thing approach proxy server tailor top bar device since know device downloading message adapt layout appropriate screen size take advantage client latest feature need worry compatibility device proxy server written ruby using eventmachine allows efficiently handle many concurrent imap connection developed library make evented programming model nicer work including deferrable gratification lspace impossible interactive ui email ok way adding information sender message far static piece html top bar deliberately minimal want get way awesome could tap top bar see full linkedin without leaving mail app impossible cry run javascript mail client true javascript email simply ignored io mail powerful cs capability since us rendering engine safari recall cs hover state triggered hover mouse element used popup menu navigation many website tooltips touchscreen device hovering clicking tapping littleknown fact cs mobile safari certain circumstance tapping link simulates hover state link tapping twice effect click thanks feature popup menu tooltips still work io creativity figured use effect create interactive user interface within message tap top bar see full linkedin profile cs trick embed entire linkedin profile message impossible dynamic content email hover trick allows u interactivity within message complex interaction take browser run normal web app without mail app limitation example want connect contact linkedin take safari fine leaf u problem top bar need show already connected someone say send invitation person accepts connected open email still say connected message downloaded imap client may assume message never change cached device unlike web page never get refreshed connected top bar content need change update solution connect button tiny iframe refreshed every time open message open message device offline problem iframe positioned top identicallooking button static top bar html iframe fails load simply fall back connection status time message downloaded allows top bar contain dynamic content even though impossible server modify message downloaded device using embedded iframe keep connection status uptodate within otherwise static top bar impossible easy installation got imap proxy working faced another problem configure device use proxy expect user manually enter imap smtp hostnames choose correct tl setting etc tedious errorprone fortunately apple provides friendly way setting email account using configuration profile facility often used enterprise deployment io device using technique simply ask user email address password autodiscover email provider setting send configuration profile device user need tap ok time new mail account moreover gmail google apps account use oauth never need ask user password even better io configuration profile make setup new email account breeze security privacy understand operating email proxy server carry great responsibility respect fact email may contain personal sensitive information everything make sure safe principle key security measure detailed pledge privacy conclusion first built rapportive gmail people thought crazy writing browser extension modified gmail page fly effectively writing application inside someone else application turned great success many others since followed footstep written browser extension gmail similarly intro approach proxying imap novel way delivering software user operates limit technically possible big advantage enhance apps already use course idea limited iphone watch new platform coming way soon post scratched surface interesting challenge overcome building intro followup post talk cs technique testing monitoring tool thing achieve high performance high reliability meantime check intro let u know think update wanted provide additional information linkedin intro work address question raised point want reinforce order make sure member understand product work optin install intro see linkedin profile email usernames password oauth token email content permanently stored anywhere inside linkedin data center instead stored iphone install intro new mail account created iphone email new intro mail account go via linkedin mail account affected way communication mail app linkedin intro server fully encrypted likewise communication linkedin intro server email provider eg gmail yahoo mail fully encrypted email accessed mail app retrieving email email provider linkedin server automatically look email address intro inserted email additional question please visit linkedin intro pledge privacy provides detail hope give information intro work goal make member productive successful think linkedin intro help u towards achieving goal
604,Lobsters,mobile,Mobile Development,"Safari on iOS 7 and HTML5: problems, changes and new APIs",http://www.mobilexweb.com/blog/safari-ios7-html5-problems-apis-review,safari io problem change new apis,safari io buggiest safari version nutshell ui change new device markup apis cs home screen webapps native webapps new browser full screen big problem apps game toolbars never hide richard davey http wwwbbccoukcbeebies theflashguy go title new add home button share icon gesture control center careful suggesting user swipe bottom canvas history gesture icon size bookmark favorite new device markup support video track track iso format styling caption track element api progress output element removed datetime input type support datetime input type anymore seamless iframe javascript apis webgl fullscreen webrtc getusermedia indexeddb support yet live demo airplay api new safari webkit web developer background execution webspeech synthesis api ssml format speech synthesis markup language speech synthesis api work user explicit action online demo browsing adagjmawam device change websql bug websql api update update cs support sticky position report try demo cs region cs region online demo cs grid layout cs grid layout cs flexbox dynamic font cs improvement homescreen webapps big issue standard dialog working update webapps open external uri update install apps home screen strange thing appftcom patterndksun update update test suite status bar update launch image multitasking native webapp development nitro engine yet paginate mode paginate improvement remote debugging preview yet anything else,safari io change new apis apple rolled io iphone iphone expected apple published necessary information web developer say without fear mistake buggiest safari version since post show new apis ability problem need deal right website webapp nutshell time reading long post ui change toolbar tint problem new fullscreen navigation new home screen icon size title usage iphone possible conflict new gesture new device nothing new web developer iphone markup video track progress removed support input typedatetime apis page visibility airplay api canvas enhancement removed support shared worker web speech synthesis api unprefixed web audio animation timing mutation observer minor addition big problem websql using cs region sticky position flexbox clippath unprefixed transition enhancement home screen webapps several severe problem example alert support native webapps web view pagination javascript runtime native apps video playing new ability new browser safari well native apps received biggest update user interface experience since version change affect user interact website webapp react safari tint toolbars url bar bottom toolbar iphone based background color loading page b current main color behind bar scrolling want hack initial tint different background body tint without adding noise html new container use following cs hack body backgroundcolor blue backgroundimage lineargradient bottom green green hack define background color image content use image case gradient also data uri image next example see first two sample color background last example one tint color background color body tint full screen big problem apps game web browsing always full screen iphone ipod touch user scroll page portrait orientation bottom toolbar disappear url bar transformed small semi transparent bar top landscape user scroll page bottom toolbar host domain bar disappear leaving complete fullmode toolbar full url bar appear user tap domain host top user start scroll back top next picture show ui change scrolling landscape portrait mode fullscreen problem resize event firing anymore toolbar appearingdisappearing detect change javascript medium query old hack using windowscrollto hide url bar work anymore therefore way hide url bar toolbar without user intervention scrolling page using natural scroll problem detailed update bottom part canvas interactive anymore detail later using non natural scrolling layout iframes section overflow scroll javascriptbased scrolling mechanism toolbars never hide even problematic somehow user get fullscreen mode able go back normal mode example see twitter website using overflow scroll landscape mode scrolling area le screen toolbars never go away io honest go portrait landscape sometimes get fullscreen without scrolling get need test get idea problem scrolling back restore toolbars making thing complicate game also post started apple forum beta lot people complaining problem richard davey actually real issue u broken display game bbc site try anything http wwwbbccoukcbeebies example removal fullscreen button removal hack way make game go full screen crammed tiny window middle browser iphones enter page landscape mode screen area available control cover full screen theflashguy need control appearance disappearance browser bar landscape mode far easy user break mode touching top bottom screen break lot website web apps whose major ui nav element tend sit top bottom content area way truly fullscreen experience website one wonderful aspect io losing major step backwards richard davey game fullscreen fullscreen mode bottom portion page interactive anymore problem affect toolbar link form item bottom part viewport fullscreen mode scroll example fixed toolbars bottom one example click portion viewport matter click fire fullscreen dismiss action therefore safari toolbars appear need tap interactive item activate therefore two tap action button example test go scroll try click bottom toolbar example try click album next image open safari toolbar need click album go bottom toolbar title next big change safari ui iphone title area page title iphone replaced current host domain see next image page title available browsing tab iphone io removed title iphone io page title ignored user browsing document ipad fullscreen mode toolbar title bar always visible new add home button io changed share icon new add home screen button whole ui changed including new icon replacing share icon new style every website inviting user add bookmark home screen need update icon gesture operating system safari offer new gesture might impact website mostly detecting gesture control center appears swipe bottom screen version full screen bottom screen might part website safari toolbar therefore careful suggesting user swipe bottom canvas b history gesture second probably problematic gesture swipe right left border safari trigger back forward action browsing history √† la internet explorer window mode gesture might conflict website inviting user swipe left right without nice margin around honest problem right chrome problem even weirder single page webapps inside safari using history api using hash hack manage app state user start back gesture see two image app user app sidebyside scroll gesture yahoo homepage might usability issue user start gesture border even trigger touch event swipe right left gesture border trigger back forward action browser history gesture back animation slide right also making conflict ui framework jquery mobile sencha touch user gesture go back two animation rendered browser framework also previous page left one specific scroll position snapshot slide animation ok page load top keeping scroll position way prevent gesture managed o browser hopefully history gesture available home screen webapps uiwebviews phonegap apps icon size new o icon bigger previous version example retina iphone device instead previous system icon also flat shiny effect anymore might want update icon match new design use appletouchicon link new size value appletouchicon precomposed version still supported make result appletouchicon shiny effect anymore icon define precomposed version take precedence available icon size io iphone ipod touch retina ipad nonretina ipad ipad mini ipad retina need remember io available nonretina iphonefactor device provide new size device pick io related one want cover possible icon io code look like link rel appletouchicon href size link rel appletouchicon href size link rel appletouchicon href size link rel appletouchicon href size link rel appletouchicon href size link rel appletouchicon href size link rel appletouchicon href size bookmark favorite bookmark new icon available see left image seems way define icon specifically yet well text favorite see right image appear click url bar seems use appletouchicon link follow size rule found weird situation website proper link element taking icon favorite favorite new device day iphone iphone available market good news web development perspective exactly iphone screen size pixel density ability may faster nothing worry coding perspective new touch id feature fingerprint scanner available web site yet cpu change anything javascript developer perspective said io simulator ability emulate cpu markup support video track video element support track child subtitle andor closed caption support multiple language appear picker inside video player user change language andor disable caption track picker html video track possible track type kind attribute support caption subtitle define language srclang attribute iso format en english subtitle useful user hear audio shehe understand language caption user hear audio includes additional information happening background musing playing closedcaption menu defining label attribute track worthless io ignored language name used instead menu optional cc suffix using caption instead subtitle kind value video source src track kind caption src mycaptionsenvtt srclang en track kind subtitle src mycaptionsfrvtt srclang fr video track accessed javascript api use loop cue track file might useful ipad truly embed video web canvas instead always fullscreen mode iphone track element follow crossdomain policy default video track origin must using javascript detect track available using webkithasclosedcaptions var hascc documentqueryselector video webkithasclosedcaptions also change caption visibility using webkitclosedcaptionsvisible boolean property every video element styling caption cs perspective io support new cue pseudoelement change textshadow opacity outline property color font style ignored cue opacity track element api mind api might work safari progress output element progress element supported creating progress bar screen based max value indeterminate progress support browser suitable know determinate value activity progression progress max value output element supported think excited meter seems supported content ignored nothing rendered screen think bug removed datetime input type following google chrome safari io support datetime input type anymore fallback text type deprecated standard favor datetimelocal using two input date time purpose problem datetime compatible io version using careful week input type still available instead falling back text input type rendered noninteractive control datetime remmoved using input type datetime act immediately rendered text input type seamless iframe new boolean seamless attribute iframes available io create borderless iframe website iframe scrollbars default get height inner content appearing website using space block element dom iframe seamless src mypagehtml iframe javascript apis let start bad news webgl fullscreen webrtc getusermedia indexeddb support yet term new apis available page visibility api xhr full implementation video track api already covered airplay api cs region api canvas enhancement removed support shared worker webspeech synthesis api page visibility api webkitprefixed io detect tab go foreground background try live demo xmlhttprequest spec fully compatible mean request blob response video track api already covered quickly allow u query navigate track content medium element cs region api appears part cs region spec covered later basically prefixed webkitgetflowbyname function available every dom element canvas drawing api globalcompositeoperation attribute canvas context allows u define blending mode multiply drawing different layer top also new path constructor draw canvas context allowing u store path later usage instead drawing directly canvas airplay api airplay api need explanation airplay wireless streaming solution apple allows device stream content different device usually apple tv safari already supported xwebkitairplay html attribute define want airplay customize experience api allows u customize player get information event streaming airplay every video element eventswebkitplaybacktargetavailabilitychanged webkitcurrentplaybacktargetiswirelesschanged remind u terrible idea using underscore camel case technique event name convention javascript first event fire new airplay target apple tv available available anymore second playback status one target changed think webkitcurrentplaybacktargetiswirelesschanged record longest javascript event name ever streaming target available offer user button pick target calling video webkitshowplaybacktargetpicker function official documentation api yet check video new safari webkit web developer wwdc session covered topic background execution several use case background execution user changing tab tab selection screen code still executing image frozen user changing apps multitasking mode code still executing image updated safari foreground website background tab code frozen safari snapshot last execution ui purpose safari background code frozen webspeech synthesis api update could make api work officially supported working webspeech api allow website record transcript audio well synthesize text voice using internal voice operating system safari io includes synthesis api text speech apis listening audio microphone query available voice speak different language real device returning voice sometimes refresh page get bug think using speechsynthesisgetvoices term english female voice using enus male voice using engb expert voice recognition feel voice api siri sound much natural io make javascript speak website use shortcut version default language define different property following example speechsynthesisspeak new speechsynthesisutterance hello voice webpage var speech new speechsynthesisutterance speechtext hello speechvolume speechrate speechpitch speechlang enus speechsynthesisspeak speech speechsynthesisutterance object also bind event start end please use alert inside event whole safari freeze ask speakable string plain text standard support also xml document ssml format speech synthesis markup language input safari io reading xml important keep mind speech synthesis api work user explicit action clicking button initiate speech onload timebase try online demo browsing adagjmawam device change mutationobserver unprefixed animation timing api also known requestanimationframe unprefixed transitionend event name unprefixed url unprefixed webaudio api new advanced ability new dom property hidden visibilitystate windowdonottrack support websql bug using websql api big issue domexception trying create database bigger previous version limit user permission bug try store user get permission dialog even user grant permission get exception trying get big bug update according tarobomb new york time request le first create database try store data proper confirmation dialog appear first finally finally able store update bug still update cs support term new spec supported mostly webkit prefixed sticky position cs region cs grid layout working cs flexbox dynamic font type sticky position sticky position new experimental feature allow u fix element viewport visible area usually scrolling action like mixing position static position fixed static position move element outside visible viewport one sticky element accumulate area defining position property creating nice effect scrolling similar native uitableview section update report indicate feature available well community get keep position webkitsticky top try demo cs region cs region spec proposed adobe create magazinelike design flow content different container nature screen size use new flow mechanism ipad website webapps selecting content flowing different region allowed io cs exclusion way define shape region usually coming region companion available yet try online demo cs grid layout cs grid layout layout new spec proposed microsoft already available new cs property webkitgridx available enable using display grid display webkitgrid sure different way enable ready yet cs flexbox final spec cs flexbox finally allow u stop insulting float clear everywhere layout element horizontally andor vertically use use display webkitflex container apply different property available dynamic font dynamic font new font type available io adjusts weight letterspacing leading based current font size improve legibility take advantage new feature html using new apple prefixed constant maybe webkit going use prefix future big list constant applesystembody font p font applesystembody cs improvement good news medium query resolution attribute still supported well something new ability query mincolorindex maxcolorindex completely useless also minor update including unprefixed cs transition transitionend event cs clip path clip content based shape including circle rectangle polygon kerning ligature font enabled default background property get compatibility different value boxdecorationbreak sliceclone tabsize style overflowwrap normalhypernatebreakword support unit ch vmax masktype alpha new cue pseudoelement already covered video track section new webkitbackgroundcomposite property make work homescreen webapps using home screen webapps bad news many bug around platform version good news seems limit websql storage full screen need user permission big issue big issue homescreen webapps standard dialog working alert confirm promptupdate io solves bug webapps open external uri website safari make call open appstore etc uri ignoredupdate io solves bug install apps home screen strange thing replacing one webapp another one start seeing clone webapp happens open different webapps time try device go appftcom install webapp go patterndksun install webapp repeat operation several time see mess home screen restarting device seems solve problem portrait mode text input select date picker focus medium query honor orientation landscape resize event fire behavior bug happens home screen webapps web view safari update using application cache also managing state hash technique history object keep navigation history therefore historyback never work historylength stay forever thanks people reported problem update cooky transferred website webapp installing icon home screen authentication purpose example working working anymore thanks joseph pearson reporting test suite status bar provide applemobilewebappstatusbarstyle meta tag provide one default value status bar become black black black area screen device see battery icon user see clock icon status bar update io still bug black value work ok full mode io new style lastly defining applemobilewebappstatusbarstyle blacktranslucent blackbased anymore fully transparent following new io fullscreen mode apps previous image right unfortunately seems way define background clear dark need test icon clock look like background update text seems always white next picture see default status bar black value blacktranslucent value action status bar home screen webapps launch image multitasking new multitasking system home screen webapp system using white image launch image current status app preview exception webapp still active app see right snapshot next example see financial time webapp white snapshot even correct launch image active execution white screen bug luckily iphone bug home screen webapps anymore letterboxing app year found need viewport hack solution anymore native webapp development developing hybrid native webapps apache cordova phonegap apps news first nitro engine yet paginate mode using uiwebview rich content native apps native webapps hybrid use paginate feature ebook reading experience without vertical scrolling la window app experience feature perfect app showing dynamic content preoptimize pagination different objectivec property configure pagination process enable need use something like mywebviewpaginationmode uiwebpaginationmodelefttoright mywebviewpaginationbreakingmode uiwebpaginationbreakingmodepage mywebviewgapbetweenpages property convert html document web view pagination mode divided horizontally page improvement native development necessarily using web view io sdk includes javascript runtime javascript core framework providing wrapper objectivec standard javascript object use framework evaluate javascript code also parse json new property web view inline playback mode video instead default full screen mode new property web view enable autoplay video native webapp also safariservices framework io useful programmatically add url safari reading list remote debugging macos used remote debugging io must update safari version itunes version ability communicate io device time writing safari available preview abilites inside debugger previous version user interface changed lot much cleaner design yet list big case list feature announced safari mac safari io web speech api working io push notification website great addition io mac o background blend mode grid layout working io anything else bug problem post posted month ago private forum lot people sent bug report ask desperately forum solution believe apple give answer web developer event executing basic test suite detect api bug found api support bug feel free add comment using option available
606,Lobsters,mobile,Mobile Development,Opting Out of Emergency Alerts,http://www.nytimes.com/2013/07/25/technology/personaltech/opting-out-of-emergency-alerts.html?ref=technology&_r=0,opting emergency alert,opting alert q wwwfemagovwirelessemergencyalerts wwwfccgovguideswirelessemergencyalertswea returning amazon kindle q tip week wwwyoutubecomdisco j biersdorfer,opting outof alertsq turn amber alert phone turn government message well amber alert one recently awakened many new yorkers wee hour urgent bulletin abduction issued national center missing exploited child along public safety official free alert along text message extreme weather threatening situation presidential announcement national emergency part wireless emergency alert system wwwfemagovwirelessemergencyalerts began operate fully last yearthe federal emergency management agency say people opt amber alert alert imminent threat like serious weather alert issued president however turned mandated congressto turn alert iphone tap open setting icon tap notification flick screen government alert amber emergency alert turned samsung new galaxy open messaging app press menu button setting tap emergency alert get screen turn amber weather notificationsthe step turning alert android phone vary system version wireless company check carrier specific instruction type phone receive amber alert unsubscribe addressing text message short code keyword cancel message body sending end quit stop unsubscribe work toothe amber alert emergency warning intended help save life consider factor turning either temporarily permanently federal communication commission also information wireless emergency alert system wwwfccgovguideswirelessemergencyalertsweareturning amazon kindleq want buy kindle fire tablet worried right amazon announce new model stuck old one happens return outdated version people receive full refund kindle bought amazoncom device returned within day delivery long device still new condition original packaging kindles received gift also exchanged within perioddetails returning kindle item amazoncom click help link top page click return refund topic listpeople bought kindle thirdparty retailer amazon directly check store return refund policiestip week web many music service keep speaker humming time attention easily call whole playlist video favorite artist visit youtube music discovery project page wwwyoutubecomdisco type name band artist hit disco button youtube search vast archive matching clip creates video playlistthe resulting playlist include variety material including official artist video digitized television clip karaoke track audio quality varies commercial may interrupt music discovery project search haul hidden gem obscure concert film j biersdorfer
607,Lobsters,mobile,Mobile Development,Fairphone | A seriously cool smartphone. Putting social values first.,http://www.fairphone.com/,fairphone seriously cool smartphone putting social value first,behind scene designing longevity watch video,behind scene designing longevitywhat could buy phone last five year easily repaired made ethically possible question drive design thinkingwatch video
608,Lobsters,mobile,Mobile Development,Ubuntu Edge,http://www.indiegogo.com/projects/ubuntu-edge/x/1929804,ubuntu edge,,
609,Lobsters,mobile,Mobile Development,Why mobile web apps are slow,http://sealedabstract.com/rants/why-mobile-web-apps-are-slow/,mobile web apps slow,mobile web apps slow citation blog post article popular go read one oh make stop breathe hn anymore please stop many opinion fact go quick review previous blog post documented actually slow actually useful standard comparison one three okay j performance compare native performance exactly arbitrary benchmark github claim performance good enough anyone according geekbench april looked like according google possible realtime collaboration mobile device javascript large gap serious work thought modern j nearc performance √¢ hardware angle whole new kind transistor done million unit per quarter speed closer software angle lot hardware writes predict future software improvement javascript improving chrome √¢ nothing terribly important happened cpubound javascript lately update end update safari supposedly faster cool name behind designed performance herb sutter managed language made deliberate design tradeoff optimize programmer productivity even fundamentally tension expense performance efficiency endorsed alex gaynor google reader comment get simpler language j harder hard case lua garbage collector read change whole way think mobile software development saw coming read programming guide really odd proven audience broke applause upon hearing statement really freaking weird applauding return happy going meet eye pulling working garbage collector language totally crazy amirite arc garbage collector similarlynamed garbage collection algorithm spec available widely reported true gc feasible experience lead believe gc mobile animal gc desktop paper turn solved remember nothing else blog post remember chart minimum amount memory required woe betide le required memory suffer orderofmagnitude performance penalty relative explicit memory management explicit memory manager substantially outperform garbage collector ten time longer complete √¢ entire experience right hand chart much memory available io helpfully wrote utility two photo memory photo ram single photograph desktop great camera attached fit pocket latency airplay second guaranteed enough memory apple say get memory update processor package package picture memory need either process shrink bigger die monoandroidwindows mobile flight simulator showcase garbage collection clue check two order magnitude longer device one probably heard buildin native code course avoid issue stack overflow manual tracking object sadly jon perlow microsoft mvp difficult programming task requires lot planning andor rewriting even fool proof even eliminate allocation gameplay winning move play embedded official android documentation actual garbage collection engineer increase exponentially benchmark lot look lot quote reading √¢ get point hard thinking memory lot everybody think memory mobile whether garbage collector ask chromium developer specification several page draft proposal welcome tautology club likely able observe going system memory full stop unbelievably javascript folk really nut javascript least stand today fundamentally opposed thinkaboutmemoryphilosophy absolutely required mobile software development design refuse suppose called rubymotion work weighs opposite problem think solved forking j okay asmjs bug open like completely silent slow relative three frame reference useful approximately correct web developer cc developer java ruby python c developer really long article let raise level discourse appear quantify specifically follow twitter drewcrawford send email io developer hire,unusual number interesting conversation spin previous article documenting mobile web apps slow √¢ sparked discussion online irl √¢ sadly discussion factbased would like going post try bring actual√¢ evidence bear problem instead shouting match thing √¢ see benchmark hear expert even read honesttogod journal paper point √¢ citation blog post going guarantee article convince even absolutely everything totally impossible article guarantee complete comprehensive treatment idea many io developer mobile web apps slow continue slow forseeable future going warn freaking long article weighing nearly word √¢ design √¢ recently come favor article good article popular attempt former attempt practice previously preached incentivize good evidencebased interesting discussion discourage writing witty comment write part topic soundbyte form √¢ yet another bikeshed article looking buzz really web apps suck v article √¢ go read one these√¢ oh make stop√¢ t√¢ breathe√¢ hn too√¢ anymore√¢ please stop√¢ many opinion fact go √¢ hand best tell comprehensive informed reasonable discussion topic happening anywhere may prove stupid idea article attempt talk reasonably topic far spawned unreasonable flamewarfilled bikeshed discussion defense chosen believe problem people discus better simply anything subject matter suppose find trying figure exactly√¢ brand crazy native developer friend continuing write evil native application cusp open web revolution whatever bookmark page make cup coffee clear afternoon find comfy chair ready quick review previous blog post documented based sunspider benchmark state world today mobile web apps slow mean button tell fancypants benchmark like sunspider take hike √¢ mean word processing light photo editing local storage animation want web app arm unless death wish really go read article show benchmark anyway essentially three category criticism benchmark fact j slower native code news everybody learned talked compiled v jit v interpreted language √¢ question whether appreciably slower way actually matter kind software writing benchmark like fail address problem one way yes j slower yes matter keep getting faster one day soon find case longer appreciably slower start investing j write pythonphpruby serverside code idea guy keep going √¢ know server faster mobile device surely pretty comfortable supporting user using an√¢ actually interpreted language guy figure support single user language highperformance jit √¢ hard rather lofty goal refuting three claim article yes j slow way actually matter get appreciably faster near future experience serverside programming adequately prepare think small correctly reason mobile performance real elephant room article subject rarely anyone actually quantify√¢ slow j provide sort of√¢ actually useful standard comparison √¢ slow relative √¢ correct develop article just√¢ one useful equivalency javascript three √¢ going argue traditional hymn wa wa j slow arbitrary case going quantify exactly slow compare wide variety thing reallife programming experience faced platform decision backofthenapkin math whether javascript feasible solving particular problem okay j performance compare native performance exactly good question √¢ answer grabbed arbitrary benchmark benchmark game √¢ found older c program benchmark older since newer one lot intrinsics √¢ benchmarked nitro llvm trusty iphone √¢ code github code running real life equally arbitrary √¢ want better experiment go run one √¢ experiment ran experiment compare llvm nitro exist anyway synthetic benchmark llvm consistently faster nitro wondering much faster cpubound function native code instead nitro j answer faster result roughly consistent benchmark game result √¢ claim generally faster √¢ result seems right ballpark also seems consistent matter arm performance good enough anyone good enough √¢ cpuintensive rendering spreadsheet really √¢ really hard problem arm according geekbench latest mbp latest iphone full factor apart √¢ really hard √¢ live performance want divide√¢ five √¢ woah buddy √¢ desktop performance √¢ playing fastandloose unit dealing order magnitude √¢ close enough okay hard word processing really √¢ like one coprocessor tied behind back well answerable question √¢ may recall google doc realtime collaboration fact launch feature √¢ massive rewrite added in√¢ april √¢ let see browser performance looked like plainly obvious chart iphone competitive web browser around time google doc realtime collaboration √¢ well competitive √¢ congratulation let look another serious javascript application google wave √¢ wave never supported slow notice browser bench faster iphone notice supported browser bench one score excluded slow √¢ iphone bench √¢ like fast enough run wave clear possible realtime collaboration mobile device √¢ possible javascript √¢ performance gap native web apps comparable performance gap firefox large gap serious work thought modern j nearc performance depends on√¢ mean near √¢ c program executes javascript program would nearc speed √¢ c program executes second javascript program ordinary people would probably√¢ nearc speed hardware angle factor okay√¢ ten time faster arm start √¢ lot headroom solution obviously make arm faster competitive get desktop j performance without work whether work kind hinge faith moore law face trying power chip battery √¢ hardware engineer worked major semiconductor company people tell day performance mostly function your√¢ process eg thing measure nanometer √¢ iphone impressive performance due small part process shrink reduction third √¢ apple would shrink process √¢ reference intel bay atom version currently exist √¢ intel invent whole new kind transistor since ordinary kind work scale √¢ think license arm √¢ think handful fabs people even seriously thinking building world controlled intel fact arm seems track process shrink next year watch meanwhile intel track maybe even little √¢ purely hardware level seems much likely chip performance put smartphone long arm chip performance shrunk √¢ update exintel engineer emailed exintel engineer worked mobile microprocessor line later atom worth incredibly biased opinion going easier get phone envelope feature toolbox larger core arm grow performance level designing feature scratch update robotics engineer emailed perfectly right bring ultra major performance boost intel may higher performing mobile cpu year fact mobile cpu currently hitting type limit desktop cpu hit reached increasing clock speed feasible without increasing power lot true next process node although able increase ipc bit maybe faced limit desktop cpu started become dual quad core mobile soc already dual quad easy boost moore law might right right way would require entire mobile ecosystem transition entirely done √¢ done time yearly sale around million unit selling million per quarter√¢ done offtheshelf virtualization environment could emulate old architecture speed meanwhile performance today hypothetical research virtualization system optimized arm code are√¢ closer believe javascript performance going get eventually really hardware path best path √¢ either intel viable iphone chip year likely apple switch unlikely perhaps arm sort next decade √¢ go talk hardware engineer get opinion viability √¢ decade long time chair something that√¢ might pan afraid knowledge hardware side run tell want believe arm close gap next year first step find somebody work arm eg sort person would actually know agree consulted many qualified engineer article declined take position record suggests position good software angle lot competent software engineer stumble √¢ thought process go like gotten faster √¢ continue get faster first part true √¢ javascript gotten a√¢ lot faster √¢ peak javascript √¢ get much faster √¢ well first part improvement javascript history actually hardware sort √¢ jeff atwood writes found performance javascript improved hundredfold web built backbone javascript largely possible crucial moore law performance improvement attribute j speedup hardware generally j hardware performance improvement predict future software improvement √¢ want believe j going get faster far likely way hardware getting faster historical trend say jits though √¢ nitrosfx tracemonkeyionmonkey chakra rest √¢ well kind big deal came big deal might think √¢ released september √¢ dug copy firefox around time get wrong improvement performance nothing sneeze nearly difference arm √¢ said performance chrome chrome flatline nothing terribly important happened since √¢ browser vendor caught slower nobody really improved speed actual cpu code since javascript improving s√¢ chrome mac earliest one still ran dec √¢ s√¢ √¢ spot difference √¢ one √¢ nothing terribly important happened cpubound javascript lately web feel faster probably running faster computer nothing improvement chrome update smart people pointed sunspider good benchmark day declined provide actual number anything interest reasonable conversation ran octane google benchmark old version chrome show improvement opinion magnitude performance gain period much small support claim j close gap reasonable amount time however think fair say overstated case happening cpubound javascript number confirm larger hypothesis gain orderofmagnitude close gap native code reasonable amount time need get across board compete llvm improvement good good end update thing jiting javascript old idea year research literally thousand implementation every conceivable programming language demonstrating good idea √¢ done run idea √¢ folk √¢ show √¢ maybe grow another good idea next year safari supposedly faster true come keep hearing great performance improvement javascript seems every week somebody touting huge speedup benchmark apple claiming staggering speedup jsbench safari faster guy perhaps conveniently apple version safari currently nda nobody able publish independent number safari performance one way let make observation kind claim purely basis publicly available information find interesting first apple public claim jsbench much higher claim traditional benchmark like sunspider jsbench cool name behind including brenden eich creator javascript unlike traditional benchmark way jsbench work writing program factor integer something instead jsbench automatically scrape whatever amazon facebook twitter serve build benchmark writing web browser let honest people use browse facebook see benchmark literally facebook useful hand writing spreadsheet program game image filter application seems traditional benchmark eg integer arithmetic hashing going much predictive seeing fast facebook analytics code run important fact improvement sunspider apple claim necessarily mean anything else improves paper introduces apple preferred benchmark eich et al write following graph clearly show according sunspider performance firefox improved version version yet look performance improvement amazon modest even interestingly last two year gain amazon flattened suggesting optimization work well sun spider little amazon sic paper creator javascript one top architect mozilla openly admits nothing happened performance amazon javascript two year nothing terribly exciting ever happened clue marketing guy oversold thing bit year go argue essentially benchmarking amazon better predictor running amazon benchmarking sunspider therefore good web browser people use visit amazon none help write photo processing application rate tell publicly available information apple claim faster whatever necessarily translate anything useful also tell benchmark refuted apple claim beating chrome would allowed publish let conclude section saying somebody bar chart show web browser faster necessarily mean j whole getting faster bigger problem designed performance herb sutter one big name modern c meme hard kill wait next generation jit static compiler managed language yes fully expect c java compiler keep improving jit ngenlike static compiler erase efficiency difference native code two reason first jit compilation main issue root cause much fundamental managed language made deliberate design tradeoff optimize programmer productivity even fundamentally tension expense performance particular managed language chose incur cost even program need use given feature major example assumptionreliance alwayson defaulton garbage collection virtual machine runtime metadata example instance managed apps built around virtual function default whereas c apps built around inlined function default ounce inlining prevention worth pound devirtualization optimization cure quote endorsed miguel de icaza mono short list people maintain major jit compiler √¢ said pretty accurate statement difference mainstream vms managed language net java javascript designer managed language chosen path safety performance design could talk alex gaynor maintains optimizing jit ruby contributes optimizing jit python curse really highproductivity dynamic language √¢ make creating hash table incredibly easy √¢ incredibly good thing think c programmer probably underuse hash table pain √¢ one one built √¢ two try use one hit pain left right √¢ contrast python ruby javascript people overuse hashtables result people google seems think javascript facing performance wall complex web kind google√¢ specializes struggling platform working a√¢ language tooled inherent performance problem lastly hear horse mouth √¢ one reader pointed comment brendan eich √¢ know guy invented javascript one thing mike highlight get simpler language lua much simpler j mean make simple interpreter run fast enough balanced respect tracejitted code unlike j little difference j lua say matter proper design engineering intrinsic complexity difference degree still cost push hard case hot path certainly take toll j harder hard case lua one example lua without explicit metatable usage nothing like j prototype object chain people actually relevant work view j particular dynamic language general catch c much minority view √¢ straggler also real consensus anything done √¢ question whether language perspective general jits catch answer people working without changing either language apis even bigger problem garbage collector see cpu problem cpubound benchmark cpubound design really half story √¢ half memory √¢ turn memory problem vast whole cpu question tip iceberg fact arguably entire cpu discussion red herring √¢ read change whole way think mobile software development apple curious thing well unless john gruber saw coming √¢ pulled garbage collection osx √¢ seriously go read programming guide √¢ big fat recommended right title come ruby python javascript java c really language since strike as√¢ really odd √¢ probably affect probably write objc mac meh click next link hn √¢ still seems strange √¢ gc around proven √¢ world would deprecate √¢ apple say feel strongly arc right approach memory management decided deprecate garbage collection osx √¢ session platform kickoff part transcript tell audience broke applause upon hearing statement okay is√¢ really freaking weird √¢ mean tell room full developer applauding return pregarbage collection chaos √¢ imagine pin drop matz announced deprecation gc rubyconf √¢ guy happy √¢ weirdo rather write apple fanboys cult this√¢ odd reaction clue in√¢ going meet eye √¢ going bit subject next line inquiry thought process go like √¢ pulling working garbage collector language totally crazy amirite √¢ one simple explanation perhaps arc special apple marketing term fancypants kind garbage collector developer fact an√¢ upgrade rather downgrade √¢ fact belief lot io noobs arc garbage collector people think arc kind garbage collector want beat face following apple slide nothing similarlynamed garbage collection algorithm √¢ gc anything like gc performs nothing like gc power gc break retain cycle sweep anything scan anything √¢ period end story garbage collection myth somehow grew leg lot documentation nda spec available excuse result blogosphere widely reported true √¢ √¢ stop gc feasible experience lead believe apple say arc v gc pressed top wishlist thing could bringing garbage collection io exactly going unfortunately garbage collection suboptimal impact performance garbage build application increase high water mark memory usage collector tends kick undeterministic time lead high cpu usage stutter user experience gc acceptable u mobile platform comparison manual memory management retainrelease harder learn quite frankly bit pain as produce better predictable performance chosen basis memory management strategy real world high performance stutterfree user experience matter user session developer tool kickoff totally crazy amirite √¢ starter probably fly face entire career experiencing performance impact gced language desktop server window mobile android monotouch whole rest seem getting along fine gc let take turn gc mobile animal gc desktop know thinking √¢ python developer n year √¢ √¢ garbage collection totally solved problem paper looking √¢ turn solved remember nothing else blog post remember chart √¢ axis time spent collecting garbage √¢ x axis relative memory footprint √¢ relative √¢ relative minimum amount memory required chart say long time much memory really need fine √¢ woe betide le required memory take word particular garbage collection five time much memory required runtime performance match slightly exceeds explicit memory management however garbage performance degrades substantially must use smaller heap three time much memory run slower average twice much memory run slower garbage collection also susceptible paging physical memory scarce condition garbage collector examine suffer orderofmagnitude performance penalty relative explicit memory management let compare explicit memory management strategy graph show reasonable range available memory enough hold entire application explicit memory manager substantially outperform garbage collector instance pseudojbb running available memory lea allocator completes second amount available memory using genms take ten time longer complete second see similar trend across benchmark suite pronounced case javac lea allocator total execution time second genms total execution time second increase ground truth that√¢ memory constrained environment√¢ garbage collection performance degrades exponentially √¢ write python ruby j run desktop computer possible entire experience right hand chart go whole life without ever experiencing slow garbage collector √¢ spend time left side chart see rest u deal much memory available io hard say exactly √¢ physical memory device vary pretty iphone iphone √¢ lot reserved system still reserved multitasking √¢ really way find try various condition √¢ jan ilavsky helpfully wrote utility seems nobody publishes statistic √¢ change today important normal condition whatever mean fresh boot backtoback get better result since page open safari √¢ literally grabbed device real world condition lying around apartment somewhere run benchmark click see detailed result essentially iphone start getting warned around get killed around √¢ ipad get warned around get killed around √¢ course user listening music running thing background may considerably le memory result start seems like lot enough everyone right practical matter √¢ example iphone snap photo resolution √¢ √¢ megabyte bitmap data per photo √¢ warning two photo memory get killed having√¢ photo ram √¢ oh going write loop iterated album √¢ killed important emphasize practical matter often photo memory multiple place √¢ example taking photo camera screen show camera see photo camera actually took buffer trying fill compressed jpeg data write disk version photo preparing display next screen version photo uploading server √¢ point occur keeping buffer open display photo thumbnail really bad idea introduce buffer going hold smaller photo suitable display next screen buffer resizes photo background slow foreground √¢ discover really need five different size thus begin slow descent madness √¢ uncommon hit memory limit dealing single photograph realworld application take word worst thing far memory footprint cache image memory √¢ image drawn bitmap context displayed screen actually decode image bitmap √¢ bitmap byte per pixel matter big original image √¢ soon decoded bitmap attached image object persist lifetime object √¢ putting image cache ever get displayed holding onto entire bitmap release √¢ never put uiimages cgimages cache unless clear hopefully shortterm reason √¢ session io performance depth even take word √¢ amount memory allocate tip iceberg √¢ honest actual iceberg slide apple √¢ session io app performance memory burning candle end √¢ much harder deal photo usable ram desktop √¢ also lot demand write photoprocessing application desktop great camera attached fit pocket let take another example √¢ ipad driving display probably pixel display desktop resolution ballpark pro cinema √¢ frame show display bitmap √¢ going good memory citizen store roughly frame uncompressed video animation buffer memory time second second system √¢ accidentally buffer second fullscreen animation √¢ app killed √¢ worth pointing latency airplay second kind medium application actually√¢ guaranteed enough memory roughly situation multiple copy photo √¢ example apple say every uiview backed calayer image layer content remain memory long calayer stay hierarchy √¢ mean essentially many intermediate view hierarchy stored memory √¢ also thing like clipping rects backing store √¢ remarkably efficient architecture far cpu time go achieves performance essentially cost gobbling much memory possible √¢ io architected optimized fast mix garbage collection also situation burning candle end √¢ incredibly memoryconstrained environment animation √¢ also huge demand super highquality video animation awful memoryconstrained environment literally form factor consumerclass procinemaresolution display purchased want write software run comparable display convince somebody shell monitor could spend get ipad computer already built get memory update smart people said ok talk lot get faster cpu get memory right happened desktop one problem theory arm memory processor called package package problem getting memory arm actually analogous problem improving cpu end day boil thing packing transistor cpu package memory transistor little easier work uniform quite hard still hard look ifixit picture see moment almost top silicon cpu die memory mean memory need either process shrink bigger die fact normalize process size die get bigger every time memory upgrade silicon imperfect material bigger good piece exponentially expensive also harder keep cool harder fit small device also lot overlap problem making better cpu exactly memory top layer cpu silicon need transistor know face problem pop manufacturer continue use packageonpackage delivery system memory found arm engineer explain yet perhaps one show comment may could move away pop architecture toward separate memory module like computer suspect feasible simple reason breaking memory separate module would almost certainly cheaper manufacture bigger chip process shrink yet every single manufacturer keep process shrink bigger chip rather moving memory module die however smart engineer emailed fill blank exintel engineer pop memory huge boost latency eas routing concern arm guy say full story robotics engineer pop memory enough memory able give enough memory everybody chip memory stacked together manufactured possibility place layer ram volume current hardware cost higher frequency voltage drop stay power limit mobile ram bandwidth continue increase much recently bandwidth limited number line linking soc ram package currently periphery high performing soc used ram bus line middle soc used add ram line due way package stacked next big improvement come single package highly integrated soc memory soc memory engineered together stacked package allowing much smaller denser numerous ram line bandwidth freedom soc design possibly lower ram voltage type design bigger cache may possibility ram may put soc die even higher bandwidth monoandroidwindows mobile really two answer question √¢ first answer see chart √¢ find time much memory need garbage collection actually going pretty fast √¢ example writing text editor might realistically able everything want amount memory iphone crash √¢ might write text editor mono see reasonable performance conclude exercise garbage collector perfectly fine task right yeah xamarin flight simulator showcase √¢ clearly idea garbage collector infeasible larger apps fly face reallife large garbagecollected mobile apps √¢ sort problem overcome developingmaintaining game big issue continues one biggest problem across platform original window phone device pretty slow spend lot time optimising app get descent frame rate optimisation done flight sim code well engine biggest bottleneck garbage collection weakness totally unprompted developer bring garbage collection biggest bottleneck √¢ people showcase complaining would clue maybe xamarin outlier √¢ let check android developer keep mind running galaxy nexus slow device stretch imagination check rendering time able render image couple hundred millisecond desktop taking almost two order magnitude longer device second inferno crazy √¢ time garbage collector would run generate one image another one want process camera image android phone realtime object recognition content based augmented reality probably heard camera preview callback memory issue time java application get preview image system new chunk memory allocated memory chunk get freed garbage collector system freeze especially bad system heavy load object recognition phone hooray eats much cpu power possible browse source code realize wrapper protects u native stuff allocates new byte array time new frame available buildin native code course avoid issue consult stack overflow performance tuning interactive game java android platform hiccup drawing interaction garbage collection usually le one tenth second sometimes large slow ever want tree hash inner loop know need careful even reimplement instead using java collection framework since afford extra garbage collection accepted answer vote worked java mobile best way avoid gc ing object turn shall trigger gc one point another shall kill game perfs simply avoid creating main game loop first place√¢ clean way deal manual tracking object sadly done current wellperforming java game mobile device let check jon perlow facebook gc huge performance problem developing smooth android application facebook one biggest performance problem deal gc pausing ui thread dealing lot bitmap data gc frequent hard avoid single gc often result dropped frame even gc block ui thread millisecond significantly eat budget rendering frame okay let check microsoft mvp normally code complete fine within millisecond thereby maintaining nice even however gc run eats time kept heap nice simple gc run nice fast likely matter keeping simple heap gc run quickly difficult programming task requires lot planning andor rewriting even fool proof sometimes lot stuff heap complex game many asset much simpler assuming limit even eliminate allocation gameplay garbage collection winning move play √¢ weaker form winning move play philosophy embedded official android documentation object creation never free generational garbage collector perthread allocation pool temporary object make allocation cheaper allocating memory always expensive allocating memory allocate object app force periodic garbage collection creating little hiccup user experience concurrent garbage collector introduced android help unnecessary work always avoided thus avoid creating object instance need generally speaking avoid creating shortterm temporary object fewer object created mean lessfrequent garbage collection direct impact user experience still convinced √¢ let ask actual garbage collection engineer writes garbage collector mobile device living know person whose job know stuff however capability device term cpu memory drastically increased game large silverlight application started coming used close memory memory increase number reference many object also increase exponentially scheme explained gc traverse every object reference mark later remove via sweep gc time also increase drastically becomes function net workingset application result large pause case large xna game sl application finally manifest long startup time gc run startup glitch game playanimation still convinced √¢ chrome benchmark measure gc performance √¢ let see a√¢ lot gc pause √¢ granted stress still √¢ really want wait full second render frame √¢ think nut look lot quote reading √¢ get point point memory management is√¢ hard mobile √¢ io formed culture around thing manually trying make compiler easy part √¢ android formed culture around improving garbage collector try hard use practice √¢ either way everybody spends lot time thinking memory management write mobile application √¢ substitute thinking memory √¢ like lot javascript people ruby people python people hear garbage collector understand mean silver bullet garbage collector √¢ mean garbage collector free thinking managing memory √¢ silver bullet mobile device everybody think memory mobile whether garbage collector √¢ way get silver bullet memory management way memory program really need javascript whole design based around worrying memory √¢ ask chromium developer way force chrome j engine garbage√¢ collection √¢ general design ecmascript specification contain word allocation reference memory essentially say entire subject hostdefined √¢ ecma wiki several page draft proposal boil kidding garbage collector must collect storage becomes needed continue correct execution object transitively strongly reachable root eventually collected needed prevent program execution failing due memory exhaustion yes actually thinking specifying garbage collector collect thing collect collect thing need collect √¢ welcome tautology club √¢ perhaps relevant purpose quote however spec much actual memory individual object occupies likely thus never guarantee program may exhaust actual raw memory allotment lower bound expectation precisely observable english philosophy javascript extent philosophy able observe going system memory full stop √¢ so√¢ unbelievably touch real people write mobile application even find word express √¢ mean io world believe garbage collector think android guy nut √¢ suspect android guy think io guy nut manual memory management √¢ know two cutthroat opposition camp agree √¢ javascript folk really nut √¢ absolutely zero chance write reasonable mobile code without worrying going system memory capacity √¢ none putting whole question sunspider benchmark cpubound stuff fully aside arrive conclusion javascript least stand today fundamentally opposed thinkaboutmemoryphilosophy absolutely required mobile software development √¢ long people keep wanting push mobile device video photo application desktop even long mobile device lot le memory work problem intractable √¢ need serious formal memory management guarantee mobile √¢ javascript design refuse provide suppose might say okay j guy desktopland touch mobile developer problem suppose convinced suppose somebody actually touch mobile developer problem forked language something done theory sure solvable put bound problem another group tried fork dynamic language meet need mobile called rubymotion smart people know lot ruby ruby people decided garbage collection fork bad idea hello gc advocate hear thing lot like arc use instead sort grafted language turn work summary lot people experiencing memoryrelated issue result possibly difficulttoidentify problem memory management coming forward talking ben sheldon weighs experiencing memoryrelated type crash like sigsegv sigbus user production skepticism whether problem tractable raised question recent motion meetup laurentwatson responded laurent camera watson irc watson mentioned toughest bug fix laurent discussed tried approach never happy devs smart strong coder take word skepticism whether compiler even solve theory long believed block could simply something handled specifically compiler namely content block could statically analyzed determine block reference variable outside scope variable reasoned compiler could simply retain upon block creation release upon block destruction would tie lifetime variable block complete lifetime case course one problem instanceeval content block may may used way expect ahead time rubymotion also opposite problem leak memory maybe problem nobody really know crash leak cause cause know people report lot anyway best ruby developer world forked language specifically use mobile device designed system crash leak complete set memory error could possibly experience far able anything although undoubtedly trying hard oh reporting personally tried time fix able come good solution would also perserve performance saying forking javascript get reasonable memory performance impossible saying lot evidence suggests problem really hard update rust contributor weighs contributor rust project whose goal zerooverhead memory safety support gc object via box type declaration type one thing struggling recently gc touch everything language want support gc require need carefully design language support zerooverhead nongc pointer nontrivial problem think solved forking j okay asmjs asmjs kind interesting provides javascript model strictly speaking rely garbage collection √¢ theory right web browser right apis could okay question get right browser mozilla obviously sold concept author technology implementation landing later year chrome reaction mixed √¢ obviously competes google pnacl √¢ bug open one hacker like √¢ regard apple camp best tell webkit folk completely silent √¢ ie √¢ get hope anyway really clear one true fixed javascript clearly beat competing proposal √¢ addition really javascript √¢ whole reason viable potentially pry away pesky garbage collector √¢ thus could viable cc frontend manualmemory language √¢ definitely dynamic language know love today slow relative one problem x slow v x slow article nobody ever really state frame reference √¢ web developer slow mean something different highperformance cluster developer mean something different embedded developer etc √¢ trench done benchmark give you√¢ three frame reference both√¢ useful and√¢ approximately correct web developer think iphone nitro benchmark class √¢ get correct frame mind write code √¢ j used sparingly face numerous platformspecific hack make perform √¢ apps costeffective write even though popular browser cc developer think iphone web development c environment run speed desktop counterpart √¢ per benchmark incur performance penalty arm another performance penalty javascript weigh pro con working nonjavascript environment merely slower desktop java ruby python c developer think iphone web development following way √¢ computer run slower expect since arm performance degrades exponentially memory usage go point garbage collector behave platform √¢ also get killed point allocate √¢ nobody give information runtime design √¢ oh people keep asking write highmemory photoprocessing video application environment really long article remember javascript slow mobile app use eg photo editing etc √¢ slower native code comparable slower cc slower serverside javarubypythonc factor program fit degrades exponentially viable path get faster pushing hardware desktoplevel performance √¢ might viable longterm looking like pretty long wait language seem getting faster day people working saying current language apis never fast native code garbage collection exponentially bad memoryconstrained environment √¢ way way worse desktopclass serverclass environment every competent mobile developer whether use gced environment spends great deal time thinking memory performance target device javascript currently exists fundamentally opposed even allowing developer think memory performance target device change mind allowed developer think memory experience suggests technically hard problem asmjs show promise even win using cc similar backwards language frontend rather something dynamic like javascript let raise level discourse doubt receive hundred email quote one bullet point disagree without either reference actual longform evidence really appeal evidence one time wrote word processor fine people never met wrote flight simulator never emailed personally talk performance headache √¢ delete email going make progress mobile web native apps really anything need conversation least√¢ appear plausible basis fact journal quote compiler author whatever √¢ enough hn comment wrote web app one time fine √¢ enough bikeshedding whether facebook right wrong choose native apps knowing would known could known task remains u to√¢ quantify specifically mobile web native ecosystem get better know something √¢ software developer thanks making way end article enjoyed read follow twitter drewcrawford send email subscribe via r leave comment share writing friend take many many hour write research sort article get return kind word reader many article similar depth various stage composition know people enjoy motivates invest time thanks great audience want build app consult company speak event good news io developer hire like post contribute coffee fund write like
611,Lobsters,mobile,Mobile Development,Firefox OS devices officially released!,https://hacks.mozilla.org/2013/07/firefox-os-devices-officially-released/,firefox o device officially released,announced boot gecko sale telef√≥nica coming country open web apps firefox o simulator firefox o simulator introducing payment firefox marketplace payment developer hub building paid app firefox o firefox o http robertnymancom article robert nyman editor emeritus,almost two year ago announced boot gecko mozilla hack discussed aim project work planning today work paid official firefox o device store last week first firefox o phone went store madrid spain sale telef√≥nica phone great example lowcost telephone built open web technology mean gotten started looking build apps content responsive design time chance among early option brand new market coming country telefonica launch spain first firefox o poland colombia venezuela also upcoming launch soon stop though look country coming soon open web apps firefox o run web web browser want offer applike experience get access hardware apis building open web app could perfect option reuse existing skill content package outlined open web apps new possibility detail previous article firefox o simulator toolwise believe firefox o simulator great option quickly test apps version released detail announcement thursday july list highlight include new connect button developer toolbox connected specific app remote style editor enable remote style editing hidden feature shift ctrlcmdr refreshing app clearing persistent data appcache localstorage sessionstorage indexeddb updated dashboard design reduced clutter improved usability touch event integrating gaia touch event simulation interacting simulator using mouse generates real touch event introducing payment part firefox o offering firefox marketplace upload share apps also happy say interested accepting payment app place described payment page part developer hub aimed app developer also written building paid app firefox o two kind payment option firefox marketplace purchase app inapp payment firefox o firefox o available released device hope capability open web developer offer good content experience sound good continuously working making option possibility good technical evangelist editor mozilla hack give talk blog javascript open web robert strong believer open web working since front end development web sweden new york city regularly also blog http robertnymancom love travel meet people article robert nyman editor emeritus
612,Lobsters,mobile,Mobile Development,"AT&T prepping sale of customers' ""anonymous"" location information and Web, app usage data",http://www.fiercewireless.com/story/att-prepping-sale-customers-anonymous-location-information-and-web-app-usag/2013-07-02,prepping sale customer anonymous location information web app usage data,blog post faq letter,nyse said may begin selling anonymous information customer wireless wifi location uverse usage website browsing mobile application usage information business carrier said protect customer privacy providing data aggregate used identify individual carrier also said customer opt program first company sell anonymous information customer location behavior facebook nasdaq fb google nasdaq goog internet company long sold data wireless industry verizon wireless nyse vz launched precision market insight business last year also anonymizes sell customer location usage information company airsage sap recently begun selling aggregated location usage information wireless carrier sale information fall big data movement idc predicts grow nearly billion nonetheless plan notable since appear combine wireless tv wifi usage data nation major carrier fully integrated extensive wireless wireline business verizon wireless jointly owned verizon communication vodafone operates largely independently parent company disclosed plan update privacy policy carrier provided example might sell customer usage location data report retail business show number wireless device near store location time day day week together demographic characteristic user age gender group report combine anonymous uverse tv viewing behavior aggregate information may subscriber create report would help tv network better understand audience viewing program frequently watch watch similar information report device manufacturer combine information device type make model demographic regional location information reflect popularity particular device type various customer segment interestingly said might also sell information individual user although would keep data anonymous example might share anonymous uverse tv viewing information medium research company combine data information provide audience analysis service show certain audience segment watching noted privacy policy provide individual anonymous information business require use provide aggregate report purpose also require business agree attempt identify person using information handle secure manner consistent policy spokeswoman declined provide detail plan sell anonymous customer data including sale would start offering would marketed already earlier year announced new adworks mobile blueprint service track mobile user behavior sale advertiser allowing advertiser target specific type people mobile ad adworks mentioned new privacy policy may provide report advertiser business customer success advertising campaign carrier wrote noting data anonymous user opt program report contain aggregate information number time particular ad viewed viewed whether viewed tv mobile device computer demographic associated viewing audience similar information action add fresh fodder continuing concern american privacy indeed fcc last month ruled wireless carrier must protect information sits subscriber smartphones mobile device dubbed customer proprietary network information cpni carrier long required protect cpni data network recent disclosure national security agency surveillance program particular program dubbed prism collect telephone metadata similar cpni virtually every american phone call added greater resonance debate privacy see blog post see faq see letter subscriber pdf related article sale anonymous wireless user location behavior already big business research tracking mobile user hint business model big data verizon hillier discus data privacy future mobile marketing report nsa nt directly get access verizon wireless tmobile call data
614,Lobsters,mobile,Mobile Development,Bank robbery suspect wants NSA phone records for his defense,"http://www.sun-sentinel.com/news/local/crime/fl-phone-records-fisa-broward-20130612,0,5434900.story",bank robbery suspect want nsa phone record defense,,another man alleged coconspirator nathaniel moss serving life federal prison admitting shot killed brink truck guard alejandro nodarse arencibia final heist oct outside bank america branch miramar parkway
615,Lobsters,mobile,Mobile Development,Voice-operated dashboard technology riskier than simply talking on a cellphone,http://hosted.ap.org/dynamic/stories/U/US_DISTRACTED_DRIVING?SITE=AP,voiceoperated dashboard technology riskier simply talking cellphone,,page found
616,Lobsters,mobile,Mobile Development,iOS 7 - a step in the right direction,https://medium.com/trends-predictions/611cfe1cee05,io step right direction,io step right direction,io step right directionthe design io like maze center maze perfect interface io carefully navigating one winding path getting closer closer center hit dead endclearly route center left choice turn around retrace step seek turning io first step along new path different old one although center reached dead end able proceed along path get closer possible route
618,Lobsters,mobile,Mobile Development,What Apple revealed at WWDC 2013,http://news.cnet.com/8301-13579_3-57588515-37/what-apple-revealed-at-wwdc-2013/,apple revealed wwdc,story part latest coverage apple wwdc annual developer conference worldwide developer conference mac o x maverick o x aka maverick safari map macbook air macbook air line mac pro allnew mac pro io io itunes radio itunes radio itunes radio streamingmusic service,story part wwdc latest coverage apple wwdc annual developer conference playing watch apple unveils new io mac pro wwdc worldwide developer conference monday apple gave world glimpse next product pipeline next version mac operating system leading way read quick recap mac o x maverick year gracing o x catrelated name leopard lion mountain lion company moved shifting californiathemed title future version operating system first new line o x aka maverick named worldfamous surfing competition held near half moon bay calif maverick available today preview developer everyone else fall new operating system feature improved battery life many new application better power management tab finder ability add tag file name searchable addition apple built ability use multiple display maverick giving power user developer filled wwdc capacity screen real estate multitasking capability apple newest version safari announced wwdc today james martincnet safari next new product updated safari apple browser latest safari feature new home screen top site known reading list tool let user keep scrolling end article next story site performance side next safari nitro tiered jit nitro fast start background tab optimization better memory usage map given apple lost relationship google company forced develop mixed result mapping tool bringing map o x newest version tool feature map ability get instant estimated time arrival address calendar event apple new map tool allows user get instant eta address calendar event james martincnet macbook air fan apple macbook air line may happy release several new model available today new air cost display flash drive one model capacity get flash drive new line said offer allday battery life wifi support supposed three time faster mac pro although bulk apple marketing company still support pro user announced allnew mac pro computer although nt say new machine would released say would later year nt reveal pricing apple say mac pro allnew cylinder shape feature intel xeon chip core pcie controller read writes thunderbolt throughput finally support many three display io short apple announced new iphones ipads hotly anticipated new product day certainly io latest version company mobile operating system expected apple unveiled new o new flat design style brainchild longtime apple senior vice president head design jony ive new style abandon traditional io skeuomorphism favor much flatter look feel io feature allnew flat design philosophy james martincnet part io available iphone ipad generation ipad mini generation later ipod touch totally revamped apple said io sdk would available iphone today nt say consumer would get hand much would cost new version io new icon button color scheme well translucency keyboard sense moving device around one major new feature io called control center tool accessed swiping bottom screen offer user instant access brightness volume airplane mode bluetooth disturb flashlight app control center also allow control airplay music playback setting apple said io enables multitasking across apps better battery life ever well offer intelligent scheduling adapts user network condition automatic app update flatness io james martincnet new version safari part io one key feature end eighttab limit another new feature airdrop filesharing tool available iphone ipads ipad mini itunes radio new o also come first time itunes radio apple spotify rdio killer free adfree customer itunes match available united state first country later itunes radio streamingmusic service available iphone ipod touch ipads mac pc well apple tv
619,Lobsters,mobile,Mobile Development,"Creating iOS and Android Apps in Lisp, with mocl",http://wukix.com/dist/mocl_eclm2013.pdf,creating io android apps lisp mocl,,obj length r filter flatedecode stream x r endstream endobj obj endobj obj type page parent r resource r content r mediabox endobj obj procset pdf imageb imagec imagei xobject r endobj obj length r type xobject subtype image width height interpolate true colorspace devicergb smask r bitspercomponent filter flatedecode stream b b b b b b b b b b b b b l v rb urq eœëg g m⁄Ç e g ﬁös j ked k sk p bt v p ·ñ± l d◊òy v n »ápt ku €í –Ω œÜ
620,Lobsters,mobile,Mobile Development,Shareable Web Links that Open iOS Deep Links,http://benroesch.com/2013/05/23/shareable-web-links-that-open-ios-deep-links/,shareable web link open io deep link,app store http bcroesch,building available app store built number deep linking option wrote indepth adding deep link io app deep link wanted able share people around web however sharing link look like ffprophets confusing people nt necessarily clickabletouchable many case make easier share deep link app added quick simple snippet nginx config redirects deep link url open inside app look like location deeplink httpuseragent iphone rewrite deeplink ffprophets permanent rewrite deeplink deeplinkhtml last break share url like http download app visit page iphone try people access url mobile safari device redirect ffprophets open access page computer show deeplinkhtml page informs link need opened mobile device app installed give link download itps found helpful love hear twitter bcroesch
621,Lobsters,mobile,Mobile Development,Venmo Touch Screencasts: Add one touch credit card payments to your app in 15 minutes,https://www.braintreepayments.com/braintrust/venmo-touch-screencasts-add-one-touch-payments-to-your-app-in-15-minutes,venmo touch screencasts add one touch credit card payment app minute,braintree io sdk venmo touch venmo touch add one touch credit card payment io app minute using braintree io sdk venmo touch,braintree io sdk upgraded last month include two great new feature dropin payment form venmo touch demonstrate easy integrate io app look like done created two brand new developerfocused videoswhat venmo touch video demo venmo touch allows user pay apps card saved apps also show payment form bundled venmo touch braintree io sdk includes ui component clientside validation logic prevent user mistyping credit card information make checkout process fast easyvideoadd one touch credit card payment io app minute using braintree io sdk venmo touchwhenever developer integrating venmo touch ask long take add sdk app tell finish afternoon reaction seriously show easy add venmo touch braintree io sdk app recorded live coding screencast creates new app integrates sdk minutesvideo
624,Lobsters,mobile,Mobile Development,"Helios: a Ruby-based, extensible, open-source mobile backend framework for iOS",http://helios.io/,helios rubybased extensible opensource mobile backend framework io,,
625,Lobsters,mobile,Mobile Development,Announcing something new: Zumero (mobile SQLite extension),http://www.ericsink.com/entries/announcing_zumero.html,announcing something new zumero mobile sqlite extension,announcing something new zumero zumero sqlite really zumero oh good grief eric thought geek tell u zumero sqlite platform support zumero store data server server platform zumero open source zumero competitor mobile sync sql thought sql dead zumero compare parsekinveystackmob ilk zumero part sourcegear mobile data really related version control mean sourcegear product vault veracity underway try zumero find http zumerocomgetstarted,something new zumero excited unveil latest endeavor zumero describe zumero first describe sqlite sqlite lightweight surprisingly powerful implementation sql database sqlite standard database software io android window rt installed billion mobile device like computer perhaps mobile device isolated need share data server sqlite synchronization capability zumero solves problem zumero sync sqlite really zumero better database platform mobile mobile apps need talk cloud data lot people building mobile apps use remote procedure call model every user operation requires network request server think replicate sync better model app interact local copy database instead going network synchronization handled entirely background putting network activity background brings two big win developer win networking issue isolated small part app real feature app focus developer attention easier code user win app faster responsive work offline consider typical situation mobile app responds user action filling list box result database query neither developer user want network involved button tap refresh display mobile network consistent enough even perfectlyworking lte connection usually enough latency make app feel sluggish oh good grief eric thought geek tell u zumero client zumero sqlite extension server built nodejs client try hard invisible developer nt want introduce whole new api everybody learn developing zumero nt much different sqlite porting existing sqlite app use zumero usually straightforward sqlite extension us sqlite virtual table zumero table mostly work like regular table except synced zumero server manages central authoritative copy database handle detail synchronization merging change conflict resolution caching logging authentication permission sqlite incredible piece software familiar sqlite give serious look come far keeping word lite name seems inappropriate sqlite fast robust far capable people know everywhere every smart phone tablet sqlite inside even microsoft given notion shrinking sql server decided standardize sqlite recommended database window rt need sync feature real question sqlite rather sqlite people consider anything except sqlite dealing mobile data main answer obvious sqlite nt sync zumero created fill need introducing new mobile database system rather adding painless synchronization feature high quality database already platform support right march zumero client sdk includes support io android winrt planned blackberry might change evidence customer demand also supporting two crossplatform mobile solution apache cordova aka phonegap xamarin made significant progress neither ready initial release client sdk also includes support regular window mac o may seem odd since zumero mobile socalled mobile apps accessed exclusively mobile device may probably want ability also access data web apps desktop application even server even nt need thing sqlite commandline shell handy way perform administrative task zumero server initial setup schema configuring permission analyzing log zumero store data server zumero server plugin architecture designed support variety sql database currently two implementation database backend sqlite postgresql present time still march zumero server available cloudhosted service sqlite backend made available flavor later server platform strictly technical perspective zumero server run fine linux mac window current cloudhosted offering linux running amazon cloud future make server available three way cloud onpremises desktop server development purpose combination platform deployment likely interesting thing probably end something like linux window mac cloud yes yes azure later onpremises yes later yes later nobody want maybe solaris development yes later yes later yes later support commodore right nodejs zumero open source zumero competitor always depends narrowly define competitor one extreme aware anybody exactly extreme everybody anything data mobile competitor name one player would couchbase lite couchbase founder j chris anderson recently great blog entry called mobile sync tune sound lot like one singing zumero would nt outrageous describe zumero saying like couchbase lite except sql sql thought sql dead hardly nosql offering gaining traction sql still far greater market share especially enterprise zumero compare parsekinveystackmob ilk nt really think zumero backend service baa company since focused database part story ignore mobile backend stuff like push notification would reasonable describe zumero saying like parsekinveystackmob except replicateandsync model sql zumero part sourcegear yes sort term market positioning zumero separate share sourcegear branding particular connection sourcegear product financially zumero currently part sourcegear approach similar teamprise sold microsoft corey think zumero new startup incubated inside sourcegear mobile data really related version control genesis zumero happened ipad app veracity liked replicate sync model mobile much decided take databasey part veracity productize platform building kind mobile apps along way technology evolved lot point nt look much like original veracity code started actually somewhat return root sourcegear spent lot first three year mobile development contract work motorola course today mobile device little powerful phone worked back mean sourcegear product vault veracity continuing move forward vault underway aiming release veracity done released sometime next two week try zumero find http zumerocomgetstarted
627,Lobsters,mobile,Mobile Development,Silent Circle releases source code to encrypted phone and text messaging apps,https://github.com/SilentCircle,silent circle release source code encrypted phone text messaging apps,grow team github sign repository wernerdzrtpcpp joedevivochatterbox choptasticsqlbridge erlwarerelx used topic people reload reload,dismiss grow team github github home million developer working together join grow development team manage permission collaborate project sign repository forked wernerdzrtpcpp c implementation zrtp protocol gnu zrtp c c updated nov zina secure messaging protocol mobile device c updated mar silent circle auditevent log collector rust updated feb apns session provider scpf erlang updated dec documentation related silent circle auditevent logging makefile updated dec python library local serverside verification io app store receipt python updated nov javascript mit updated oct c updated oct fork webmachine converted erlang updated sep push notification service erlang updated aug notsobarebones utility test push message apns erlang updated aug silent circle utility library erlang updated aug push notification service erlang api erlang updated jul push notification service erlang support library erlang updated jul gcm push service provider scpf erlang updated jul c updated jun apns simulator written erlang erlang updated may forked joedevivochatterbox server erlang boy guy real chatterbox wadd nt nt think ever going stop story erlang mit updated may erlang utility module apple push service aps apns support erlang updated apr generate fake apns push certificate testing simulation shell updated feb forked choptasticsqlbridge sqlbridge erlang adapter library sql database mysql postgres erlang mit updated jan forked erlang build tool make easy compile test erlang application release erlang updated jan javascript mit updated jan erlang updated dec forked erlwarerelx sane simple release creation erlang erlang updated nov simple google gcm simulator erlang updated nov apple push notification service scpf service erlang updated oct javascript mit updated sep python updated aug document describing performing single signon integration silent circle shell updated jun used topic people organization public member must member see part organization perform action time signed another tab window reload refresh session signed another tab window reload refresh session
628,Lobsters,mobile,Mobile Development,From USR to SVC: Dissecting the 'evasi0n' Kernel Exploit,http://blog.azimuthsecurity.com/2013/02/from-usr-to-svc-dissecting-evasi0n.html,usr svc dissecting kernel exploit,usr svc dissecting kernel exploit jailbreak impressive feat iousbdevicefamily vulnerability page io kernel security presentation bug pc taming kernel heap finding kernel base trustzone enabled arm core read write primitive io kernel security conclusion io jailbreak privilege escalation vulnerability,project zeus informed meaning project zeus time right know meaning project zeus usr svc dissecting kernel exploit jailbreak leverage impressive set vulnerability collectively enable user fully jailbreak io based device user land component impressive feat kernel exploit used evade sandbox restriction well code signing hold equally impressive array sophisticated exploitation technique blog entry detail leveraged kernel vulnerability show go great length overcome security hardening kernel address space randomization kernel address space protection iousbdevicefamily vulnerability kernel vulnerability leveraged lie comappleiokitiousbdevicefamily driver io application may talk driver using iousbdeviceinterface user client allowing access communicate usb device whole typically assisted leveraging functionality iousbdevicelib userland com plugin implement iousbdeviceinterfaceclass interface method exposed iousbdeviceinterface list see page order talk device endpoint called pipe provided application service write read pipe default control pipe abstracted interface class exposed index value user space component lower layer referenced pointer value backing kernel pipe object comappleiokitiousbdevicefamily driver several method accept pipe object pointer user space fail perform sufficient validation check pointer passed nonnull application ability communicate usb device essentially holding comapplesecuritydeviceusb entitlement may interact iousbdeviceinterface directly invoking function ioconnectcallmethod ioconnectcallscalarmethod therefore provide arbitrary pipe object pointer method may result arbitrary code execution memory referenced provided pipe object pointer controlled user space method selector stallpipe used trigger vulnerability assembly output processing function comappleiokitiousbdavicefamily shown unsigned int stallpipe int interface int pipe push lr movw mov sp movtw cmp pipe object pointer null eq popeq pc mov bl stallpipe movs pop pc stallpipe ldr check value pipe object cmp ne bxne lr ldr get object x pipe object ldr get value pipe object mov movs bw int int interface push lr mov sp sub sp sp ldrw get object object x mov ldr get object z object x arg mov arg ldrw get value object arg ldr object z vtable ldrw get function object z vtable movs str sp str sp mov blx call function object z vtable add sp sp pop pc io attacker could typically create fake object usermode pas pointer order make kernel operate user controlled buffer io however apple separated user kernel address space see section kernel address space protection io kernel security presentation therefore render technique ineffective moreover introduction kernel address space layout randomisation kaslr io furthermore complicates kernel exploitation attacker longer easily infer kernel driver module mapped following section look work way around mitigation order gain full control io kernel bug pc taming kernel heap recall vulnerability attacker pas pointer want vulnerable function order exploit vulnerability pointer must reference valid memory also memory attacker control essentially initial step requires memory leak kind well way injecting data kernel memory strategy us initial stage groom heap allocation semicontrolled user well allocation query address leak way high degree predictability determine address data control order make allocation query address call method selector createdata iousbdeviceinterface user client method invokes createmappinintask method request mapping created kernel task produce iomemorymap object whose address returned back user mode map token use object pointer unique identifier user mode component common io osx complicate kernel exploitation many pointer added fixed unknown permutation value thus retaining uniqueness returned user mode still example driver happily convey information iomemorymap object allocated using kalloc result byte allocation fall zone thus attacker able trigger allocation zone using controlled data may potentially able locate kernel memory ensures target kalloc zone defragmented state repeatedly creating iomemorymap object bordering object shown following pseudocode void defragmentheap ioconnectt dataport input output int outputcnt int count maptoken prevmaptoken input outputcnt result ioconnectcallscalarmethod dataport input output outputcnt maptoken result kernsuccess output prevmaptoken maptoken count count sufficiently defragmented start inject user controlled data else count note used opposed code determining object adjacency compensate additional allocation requested zone iomemorymap object allocated calling selector method sufficiently defragmented zone using iomemorymap object creates message holding outofline descriptor machmsgooldescriptort referencing byte user provided data sending message machmsg call kernel creates vmmapcopyt structure ool descriptor held message data size le page pad user provided data essentially produce sizeof vmmapcopydatat byte byte kalloc allocation fall zone machportallocate machtaskself machportrightreceive myport msgheadermsghremoteport myport msgheadermsghlocalport machportnull msgheadermsghbits machmsghbits machmsgtypemakesend machmsghbitscomplex msgheadermsghsize sizeof msg msgbodymsghdescriptorcount msgbodymsghdescriptorcount msgdesc address layout msgdesc size msgdesc type machmsgooldescriptor machmsg msgheader machsendmsg msgheadermsghsize point fakepipeobj ool descriptor data fakepipeobj maptoken vmmapcopyt allocation stay memory destination port receives message another machmsg call therefore allow force persistent allocation zone full control last byte turn allows reference user controlled data leveraging pointer value iomemorymap object allocated previously line depicts heap layout zone process try obtain repeat time vmmapcopyt aaaa vmmapcopyt aaaa iomemorymap iomemorymap repeat time order control pc eventually achieve arbitrary code execution creates specific ool descriptor data layout fact whenever need call different function vmmapcopyt allocation freed receiving message destination port new message sent updated ool descriptor data reallocating freed allocation important goal preparing data object dereferences triggered stallpipe function comappleiokitiousbdevicefamily land last byte vmmapcopyt allocation given zone properly defragmented using iomemorymap object set address pipe object passed selector last iomemorymap object pointing start user controlled data vmmapcopyt allocation prep buffer ool descriptor shown code allows invoke arbitrary function fully control value second third argument leaving first argument semi controlled state due use object functional viable pointer describe implication primitive section void callfunctionwithargs ioconnectt dataport void function int int int layout input layout fakepipeobj layout fakepipeobj layout second arg layout fakepipeobj pointer second arg layout fakepipeobj layout function function call layout third argument layout layout active checked driver layout receive send new message updated layout prepareheaplayout dataport layout input unsigned int fakepipeobj ioconnectcallscalarmethod dataport input finding kernel base control program counter pc proceeds learning base kernel since kernel slid boot offering possible location kernel mapped however spite randomization kernel address space fully randomized partly due arm vector table located known fixed address classic model used precortex chip well cortexar chip vector table initially held address runtime relocated setting v bit high exception vector control register although recent trustzone enabled arm core cortexa n series allow vector table relocated arbitrary address iosbased device stay true old model following set handler defined arm vector table offset handler reset undefined instruction supervisor call svc prefetch abort data abort reserved interrupt irq fast interrupt fiq exception occurs processor simply begin execute specific offset following dump show handler jump relevant code arm vector page gdb add pc pc add pc pc add pc pc add pc pc add pc pc add pc pc add pc pc mov pc order learn address selector method call controlled function pointer generates exception invoking data abort exception handler fehdataabt directly separate thread order catch exception call threadsetexceptionports set exceptionstateidentity handler target thread cause exception dispatched catchexceptionraisestateidentity function function summarized follows kernreturnt catchexceptionraisestateidentity machportt exceptionport machportt thread machportt task exceptiontypet exception exceptiondatat code machmsgtypenumbert codecount int flavor threadstatet instate machmsgtypenumbert instatecount threadstatet outstate machmsgtypenumbert outstatecount dword globalreadbuf globalreadaddrcur globalreadaddr instate globalexceptionpc instate pc globalreadaddrcur bzero outstate sizeof outstate outstate sp customstack customstacksize outstate cpsr globalreadaddrcur globalreadaddrend outstate pc callexitthread bcontinue false else outstate global outstate pc triggerexceptionwithglobal outstatecount armthreadstatecount return function instate pc saved globalexceptionpc allows leak address comappleiokitiousbdevicefamily data abort handler called pointer value used compute base address kernel well base address comappleiokitiousbdevicefamily driver module leveraging osbundlemachoheaders data requested oskextcopyloadedkextinfo specifically retrieving unslid kernel text segment address unslid comappleiokitiousbdevicefamily text section address kernel slide computed follows slide globalexceptionpc iousbtextsectionaddrunslid kernelbase kerneltextsegmentaddrunslid slide note also additional code catchexceptionraisestateidentity also allows leak byte chosen address globalreadaddrcur triggered exception performed preping heap readaddrcur dereferenced value put see looking triggerexception function called whenever us technique void triggerexception ioconnectt dataport void function int int unused input int layout layout fakepipeobj layout fakepipeobj layout layout read address layout fakepipeobj layout function function call layout unused third arg layout layout must layout prepareheaplayout dataport layout input unsigned int fakepipeobj ioconnectcallscalarmethod dataport input function called wrapper function triggerexceptionwithglobal invoked catchexceptionraisestateidentity void triggerexceptionwithglobal globaldata global triggerexception globaldataport globalreadaddrcur read write primitive kernel slide known ability leak arbitrary memory using exception technique first step find reliable way leaking memory major drawback leaking data using exception mechanism kalloc zone need preped byte memory one want leak may potentially introduce error nothing preventing system allocating block zone time message received block freed new message sent reallocating block thus attempt find reliably way leaking memory locating memmove function within kernel module done first leaking first two page kernel text section following branch instruction leaking page preceding branch destination memmove signature found work well one first call kernel binary memset located close wanted memmove function found memmove function memory next step return data buffer read usermode recall heap grooming section first argument passed function get called leveraging vulnerability point data portion vmmapcopyt allocation passed data ool descriptor thus long length small enough fit buffer byte le memmove called directly wanted source address leak arbitrary memory code invokes memmove write content held source address back vmmapcopyt data buffer receives message copy data ool descriptor see buffer content changed int kernelreadsmallbuffer ioconnectt dataport int memmoveoffset void src void dst sizet len int layout input layout fakepipeobj layout fakepipeobj layout src second arg layout fakepipeobj layout fakepipeobj first argument layout layout kernelbase memmoveoffset function call layout length third argument layout layout required layout prepareheaplayout dataport layout input unsigned int fakepipeobj ioconnectcallscalarmethod dataport input machmsg msgrecv machrcvmsg myport machmsg msgsend machsendmsg msgsendbaseheadermsghsize memcmp msgrecvdesc address layout memcpy dst msgrecvdesc address length requested buffer larger byte take different approach data easily fitted byte ool descriptor buffer copy start byte get around limitation corrupts vmmapcopyt structure preceding ool descriptor data memory make kernel believe manages different buffer different size technique primitive arbitrary memory disclosure presented talk azimuth security io kernel security hack box breakpoint last year essentially allows attacker ability corrupt vmmapcopyt structure leak arbitrary memory arbitrary length without side effect ie need repair structure diagram depicts typical layout vmmapcopyt structure data appended data pointer kdata referenced data structure never freed attacker modify size kdata order message return indicated memory step take corrupting vmmapcopyt structure memory bit involved basically boil positioning crafted vmmapcopyt structure one ool descriptor buffer invoking memmove copy fake structure real one one adjacent vmmapcopyt buffer vmmapcopyt structure memory corrupted message received causing kernel return data specified back allocated region int kernelreadbigbuffer ioconnectt dataport int memmoveoffset int source void ouput sizet length int layout input mymessaget msgsend mymessaget msgrecv vmmapcopyt copy init msgsend copytype vmmapcopykernelbuffer copysize length copycpykdata source layout fakepipeobj layout fakepipeobj layout fakepipeobj second arg layout fakepipeobj decides second arg layout fakepipeobj first arg layout layout kernelregion memmoveoffset function call layout third arg layout layout layout returndataindex msgsenddesc address copy crafted vmmapcopyt structure else msgsenddesc address layout fake pipeobj msgsenddesc size msgsenddesc type machmsgooldescriptor machmsg msgrecvbaseheader machrcvmsg myport machmsg msgsendbaseheader machsendmsg msgsendbaseheadermsghsize input unsigned int fakepipeobj corrupt vmmapcopyt structure read arbitrary memory ioconnectcallscalarmethod dataport input read back memory set vmmapcopyt structure machmsg msgrecvbaseheader machrcvmsg myport machmsg msgsendbaseheader machsendmsg msgsendbaseheadermsghsize copy leaked data ool descriptor set destination pointer memmove operation arbitrary value due requirement needing control vtable pointer location call wanted function another technique need used writing arbitrary memory solve problem simply search str bx lr gadget memory us write four byte time gadget found proceeds patch needed location memory sbevaluate taskforpid routine although code page initially nonwritable find physical memory map kernel kernelpmap patch relevant page table entry directly conclusion introduction kaslr userkernel address space separation apple significantly raised bar kernel exploitation io however jailbreak demonstrates reliable exploitation still achieved right primitive available attack partly made possible using information leak apple best interest review driver io make sure nt leak valuable kernel address information user mode label io jailbreak privilege escalation vulnerability
631,Lobsters,mobile,Mobile Development,Firefox OS Developer Preview Devices Announced,http://www.geeksphone.com/,firefox o developer preview device announced,plesk,web server default page page generated plesk leading hosting automation software see page web site address following create domain set web hosting using plesk
632,Lobsters,mobile,Mobile Development,Circumventing Windows RT‚Äôs Code Integrity Mechanism,https://surfsec.wordpress.com/2013/01/06/circumventing-windows-rts-code-integrity-mechanism/,circumventing window rt code integrity mechanism,finding right spot prerequisite exploitation conclusion microsoft please consider making code signing optional thereby increasing value window rt device drawback source tech blog defeating window driver signature enforcement csrss thread desktop visual studio remote tool using complete window api store apps mamaich xdadevelopers discussion xdadevelopers changelog like,clrokr clrokr jan taken longer expected finally happened unsigned desktop application run window rt ironically vulnerability window kernel existed time got ported arm like rest window made possible msft artificial incompatibility work window rt way reduced functionality clean port good one deep kernel hashed signed data section protected uefi secure boot lie byte represents minimum signing level finding right spot minimum signing level determines good executable signature scale like unsigned authenticode microsoft window default value machine course run anything like computer arm machine default mean even sign apps using authenticode certificate surface window rt device moment run user setting hardcoded global value kernel changed permanently device uefi secure boot enabled however changed memory finding byte kernel take exported symbol even symbol database msft found using windbg machine running window pro creating process watching system behaves signature check happen way cidll back window window rt similar locating arm kernel hard ldr byte image base ldrb cmp bhi lochighsigreq bw loclowsigreq many place find byte accessed none exported symbol prerequisite ago read article window kernel assumes data passed certain process always wellformed vulnerability exists window rt exploitation bit harder window unsigned binary run first place store apps security context need attach process microsoft decided provide something important made whole endeavour lot easier remote debugger run administrator attach user csrss process manipulate memory csrss contains lot call vulnerable ntusersetinformationthread function including use right parameter exploit one winsrvdll movs add sp movs mov bl ntusersetinformationthread csrss thread executes code using breakpoint change data structure pointed ntusersetinformationthread call happens exploit vulnerability sadly impractical exploit subtracts specified address need subtract unaligned access arm remember byte offset need use also need linear address kernel image resides find calling device done store app run unsigned ntquerysysteminformation information class want know use ntquerysysteminformation store app read give u list loaded driver image base effectively bypassing aslr case although aslr annoying situation exploitation using remote debugger msft armasm used halfempty code page winsrvdll image base store small payload push mov ldr myaddr locloopbegin movs add sp org add str movs mvn mov svc sub cmp bne locloopbegin pop mov myaddr dcd kernel base address set breakpoint directly legitimate ntusersetinformationthread call terminalserverrequestthread pressing volume button trigger get interesting redirect instruction pointer payload memory set breakpoint mov instruction end press set instruction back first breakpoint remove press congratulation window rt device unlocked conclusion window rt clean port window thing msft enforces code integrity artificially separate platform stop pirate modifying store apps license check store apps thing actually run unsigned fact method work window well show similar system even enforce code integrity window see window rt feel like decision ban traditional desktop application technical one bad marketing decision window rt need ecosystem strengthen position productivity tool enough consumption tablet already microsoft please consider making code signing optional thereby increasing value window rt device drawback sometimes trigger bugcheck control byte kernel base sometimes zero causing bugcheck method practical user especially tablet buyer le likely know enough computer pc user source tech blog defeating window driver signature enforcement csrss thread desktop visual studio remote tool using complete window api store apps mamaich xdadevelopers also reading discussion xdadevelopers changelog jan added offset payload important article mention also added link discussion xdadevelopers reading like like loading
635,Lobsters,mobile,Mobile Development,Performance Calendar ¬ª Make your mobile pages render in under one second,http://calendar.perfplanet.com/2012/make-your-mobile-pages-render-in-under-one-second/,performance calendar make mobile page render one second,second load mobile user starting become disengaged mobile network latency substantially higher round trip time bandwidth block rendering web page screen source delay rendering external javascript cs making mobile page fast current state mobile web http wwwyummlycom else block initial render web page rendering one second summary,past year made great stride understanding optimizing mobile web performance however part mobile web browsing continues slow google analytics data show average web page take second load mobile know user thought process typically interrupted waiting one second resulting user starting become disengaged minimum fold content web page render le one second clearly still got lot work focus attention optimizing mobile web performance know mobile network highly variable latency bandwidth characteristic general mobile network latency substantially higher desktop connection also know modern network round trip time bandwidth dominating factor page load time given make mobile web fast attention focused minimizing number blocking round trip incurred web page render content device screen block rendering web page screen first let look sequence event happens time user initiate page navigation time browser render page screen round trip may incurred dns resolution tcp connection request sent server response streamed back unfortunately much developer avoid round trip repeat visitor longer dns ttl help tcp connection requestresponse overhead incurred every new navigation page assuming warm tcp connection ready reused client initial round trip incurred mobile device begin parsing html response browser paint content screen yet content html painted screen browser must construct render tree determine element dom appear screen render tree constructed dom tree must constructed dom tree constructed combination parsing html possibly javascript execution thing block parsing html dom tree construction render tree construction time parsing dom tree render tree construction fast however antipatterns cause process get blocked network source delay rendering external javascript cs significant source delay html parsing external javascript browser encounter nonasync external script html parsing must halt parsing subsequent html javascript downloaded parsed executed incurs additional round trip especially expensive mobile script loaded hostname hostname html served additional round trip may incurred dns resolution tcp connection addition render tree construction get blocked stylesheets external javascript introduces delay dom tree construction external stylesheets introduce delay render tree construction short external javascript cs loaded early document eg head performance killer especially expensive mobile due higher round trip time associated mobile network making mobile page fast fast mobile web page must include content needed render fold region initial html payload without blocking external javascript cs resource ideally content needed render fold region first network postgzipcompression size pregzip larger since size initial congestion window modern linux kernel mean simply inlining javascript cs used loaded externally instead javascript cs needed render fold region inlined javascript cs needed add additional functionality page loaded asynchronously instance page like following html head link rel stylesheet href mycss script src myjs script head body div class main content div div class leftnav perhaps left nav bar div body html need identify part myjs mycss needed render initial content inline part delay async load remaining javascript cs needed page may end looking something like html head style main leftnav style needed initial render style script script needed initial render ideally j needed initial render script head body div class main content div div class leftnav perhaps left nav bar div link rel stylesheet href myleftovercss script src myleftoverjs script body html current state mobile web brief survey mobile web page show nearly page include blocking external javascript andor cs fold content displayed exception include google map google search yahoo news site like http wwwyummlycom kayak unfortunately site inline javascript cs needed initial render unnecessarily delay time take render page interestingly browsing mobile web javascript disabled reveals even though page load blocking external javascript head page actually need javascript render initial content page would benefit delay async loading javascript get javascript critical path initial render page else block initial render web page blocking external javascript cs common source delay web however common source delay mobile developer aware one source http redirects main html document redirects incur additional round trip redirect navigates different hostname eg wwwexamplecom mexamplecom add even greater delay due dns resolution tcp connection time second source delay server backend time spent generating html response time spent generating initial html response block rendering screen server backend time kept minimum rendering one second estimate network round trip time compute minimum estimated time user initiate web page navigation page render fold content screen assuming blocking external javascript cs incur three round trip dns tcp requestresponse total plus backend time brings u long renderblocking javascript cs inlined size initial html payload kept minimum eg compressed time take parse render well bringing u one second target summary summary make mobile web page render one second keep server backend time generate html minimum avoid http redirects main html resource avoid loading blocking external javascript cs initial render inline javascript cs needed initial render delay async load javascript cs needed initial render keep html payload needed render initial content compressed looking improve performance mobile web page give optimization try
636,Lobsters,mobile,Mobile Development,Thoughts on default apps on iOS,http://thomasst.ch/defaultapps/,thought default apps io,thought default apps io map calling messaging browser mail music reference http enwikipediaorgwikieuropeanunionmicrosoftcompetitioncase comment say say say leave comment back homepage,thought default apps io computer set default browser mail app ca nt iphone thanks great variety mobile apps think default app integration mobile device even important computer particular like see map release io many people looking alternative map apps default map app open use siri get direction open url look like map integration even deeper application us map favorite mapping service used needed developer could specify need map street view capability system could choose appropriate map calling people use builtin calling app user might want use google voice ca nt io pas call google voice app nt copy paste number messaging send text message siri share picture might want route favorite messaging app lot people use apps whatsapp google voice communicate friend browser point using chrome mercury phone link always open safari especially important since way add functionality safari using extension mail alternative mail apps exists nt integrate well system apple provide way developer replace default mail share sheet instance gmail user able use gmail app seamlessly music whenever press play button headphone music app start playing instead launching spotify left stop switch favorite music app inconveniece every single time please apple nt force use apps eu nt let microsoft offer window medium player also forced microsoft every user choose default browser fine forced use apple apps iphone think eu went way far trying get microsoft release window without medium player without web browser think missing ability choose default apps mobile device far inconvenient end user reference http enwikipediaorgwikieuropeanunionmicrosoftcompetitioncase comment immigration banking nodule currency covert say flagged non delivering currency adjudication sedimented security natural origin land currency first exposed highest height infrared line regime converting trading democracy expenditure used accepted inflation capicolas returning diffrent format personal incentive growth lost deprecated depreciation excess immeadiate stopgain insurance insurgenceyour company established country trusted antimigrated post partim visa granted citizen rounded deported loss gained u accounted upmost penny inflated maximum appreciation allowable currincies choice law abiding legal standard regulating asserting statuants agreement sedimented u virtuous dividendsfinancial gained monetary bond reciprocating definately lesser equating worth penny entirety go u dollar coinbasevickie r thomasyou win kashif mahmood say really nice post href http trustemocomyoutubemoneycalculator trustemocom href http forexpopscomonlinetradingacademyreviews online trading academy review cool nice post admin href http zonginternetpackagespkzongpackagesinpakistansms zong sm package hrefhttp birthdaycakesnamecomwritebirthdaycakesimageswithnameeditoptionandphotos birthday cake name tubbo say remember last year seen actual replacement safari mail term phone app never going see replacement certainly requirement carrier call routed pay minute thing message carrier going want phone network let people easily send free text sm plan huge profit marginsone thing agree inability change default music app even worse get car bluetooth receiver pair phone almost always start song music app even playing soundcloud spotify moment annoying definitely encouragement apple use itunes app store buying browsing music considering itunes store giant advertisement iphone ipod nt think would hurt much allowed u choose default music app leave comment back homepage
637,Lobsters,mobile,Mobile Development,Fastbook: the core Facebook experience rebuilt in HTML5,http://www.sencha.com/blog/the-making-of-fastbook-an-html5-love-story,fastbook core facebook experience rebuilt,ready facebook mobile application team problem fastbook senchacon closer look native facebook application reimplementing news feed web worker bonus point http graphfacebookcomgraphql try fastbook,started became sencha made bet web bet modern application development need anything except browser great set framework great set tool three weapon hand knew developer could build application would delight user advent upped game gave developer even tool let treat browser application development platform page rendering engine developer sprang opportunity unleashed torrent apps desktop mobile leveraged new capability build amazing application using web standard mark zuckerberg said ready took little offense comment thought really reason facebook mobile application slow knew browser modern smart phone capable kind rich capability offered saw latest generation mobile device running least io android push ever increasing performance implementation score perhaps importantly seen customer building amazing thing creating using mark zuckerberg said ready took little offense comment suspicion facebook mobile application team problem matched common pattern sencha build framework tool application developer pretty deep experience development team taking app project team problem usually stem fact take website development approach building app often use right tool architecture application development suspected facebook app way app performed slow loading choppy user experience news feed low framerate exhibited usual symptom event knew fact ready wanted prove took upon rebuild challenging part facebook mobile application spare time today like introduce sencha fastbook technology proof concept show fast demonstrates readily used handle toughest app challenge learn latest fastbook tech behind senchacon register today fourminute video give quick overview sencha fastbook show sidebyside comparison well app performs native io native android facebook apps version respectively latest available made video december rest post get technical detail built fastbook closer look native facebook application started process became fastbook trying understand zuckerberg claim best place take deep look latest native facebook app io connected iphone web debugging proxy started look http traffic application pushed network biggest shock much application still raw html page news feed moved native profile page many application uis simply http get request mfacebookcom today native facebook application hybrid web native application content rendered mfacebookcom displayed uiwebview native objective c component mixed together reimplementing news feed looked native facebook application worked clear u hardest part experience build news feed dealing billion content creator posting unlimited amount content completely unpredictable manner tough problem solve even seasoned developer regardless technology use really wanted ensure smooth experience news feed deliver reimplemented make possible added new feature enhancement core current sencha touch framework started implementation infinite list component handle item unknown size small set dom node actually created fill actual visible screen area constantly recycled render next previous data ondemand result memory footprint kept minimal regardless amount data store making work easy part making fast complexity variety item news feed story real challenge bottleneck lie within core process browser perform layout compositing experience building framework taught u small demo component might work well often performs poorly put much larger app app grows dom tree grows dom tree grows take longer browser calculate layout performance degrades moreover number visible layer increase compositing performance layer also degrades dramatically needed solution make web apps robust large number dom node sidebyside comparison native facebook app sencha fastbook app fastbook app first make use brand new sandbox container programmatically detaches complex view render iframes thus partitioning dom tree special container need extra handling application level seamless developer ie component added container sandboxed automatically come cost event positioning styling javascript code proxied parent window child sandbox complicated without robust properly architected framework difficult implement sandboxing allows layout isolated therefore keep primary dom tree light possible bring balance force sandbox container must used wisely fastbook news feed timeline story view individually sandboxed since dom element reused render data ondemand high frequency reflows inevitable key make process cheap possible sandboxing enables news feed perform standalone actually still part much bigger dom tree sandboxing enables news feed perform standalone actually still part much bigger dom tree next added deeper integration taskqueue feature recently introduced sencha touch taskqueue prevents interleaving read write request dom eliminating unnecessary layout combined new sandboxing technique significantly reduces costly layout complex view timeline news feed added animationqueue new class responsible animation event well scheduling heavy task later execution cpu idle time act framework traffic cop prioritizing different operation help ensure application stay responsive app animating suspends lower priority function app idle animationqueue executes suspended task example scrolling news feed high speed image loading rendering suspended app idle order increase scrolling performance additionally heavy task released gradually nonblocking manner highspeed timer ensures touch event always chance handled soon possible hand class functionality want suspend getting data feed list help ensure slow scrolling use web worker allow u move xhrrpc communication away ui thread saving network request cost json encodingdecoding using web worker make great use today multicore device major point bring fastbook life allows perform well pure openstandards based web technology exciting u able show leverage feature build app like bonus point one interesting thing found investigating network performance native io facebook app api call return huge amount raw data client typical example api call made http graphfacebookcomgraphql render news feed item average gzipped json data transferred every item much needed render actual view demonstrate could done optimize network transfer put proxy server place clean parse raw data returned facebook fql api result fastbook transfer far le data native app render view little render item news feed proxy also allows u offload mundane task content formatting filtering serverside also may notice difference scrolling deceleration time native io app fastbook native app scrolling stop decided increase friction reduce animation duration make content ready read faster also provides extra idle time app buffer item user still reading existing content try fastbook replacement facebook application technology demo show developer take right approach use right framework tool wondering ready try fastbook modern smartphone recommend least io android see treat browser application platform leverage feature even sophisticated application made
638,Lobsters,mobile,Mobile Development,Firefox OS Simulator 1.0 is here!,https://hacks.mozilla.org/2012/12/firefox-os-simulator-1-0-is-here/,firefox o simulator,introduced firefox o simulator firefox o installing install firefox o simulator addonsmozillaorg screencast showing firefox o simulator action video youtube getting help file github devwebapps mailing list openwebapps ircmozillaorg http robertnymancom article robert nyman editor emeritus,three week back introduced firefox o simulator tool allows web developer try apps firefox o comfort current windowsmaclinux computer seen number comment people used simulator easy way get peek firefox o today fine since last blog post team squashing bug get simulator ready use linux user particular happy know current release run many system today release hope see many user installing leaving preview tag simulator simulator new firefox o still development perfect time create apps work firefox o android web large apps ready big launch install firefox o simulator addonsmozillaorg today screencast showing firefox o simulator action video opted video youtube get otherwise fallback flash getting help spot bug please file github got question ask u devwebapps mailing list openwebapps ircmozillaorg technical evangelist editor mozilla hack give talk blog javascript open web robert strong believer open web working since front end development web sweden new york city regularly also blog http robertnymancom love travel meet people article robert nyman editor emeritus
640,Lobsters,mobile,Mobile Development,fxosstub ‚Äì a minimalist‚Äôs working example of the design guide rules for Firefox OS,https://hacks.mozilla.org/2012/12/fxosstub-a-minimalists-working-example-of-the-design-guide-rules-for-firefox-os/,fxosstub minimalist working example design guide rule firefox o,fxosstub firefox o trip fxosstub mortarappstub first hour firefox o newbie note firefox o simulator veteran note nightly next day work quite well warsaw mozilla camp pattern custom element next firefox identity indexhtml style j installjs fxosstub fxosstub article pierre,post written pierre richard principal jaxo inc know experience practice importance first even first discovering learning new concept period developer take gonogo decision mostly based apparent complexity see gain expertise given domain tendency forget obvious basic new developer newbie need help expert focusing topic largely irrelevant newbie wanting get essential getting started guide never written late forgot like newbie document fxosstub written firefox o newbie git clone http githubcomjaxofxosstub firefox o trip started scratch studying firefox o week ago first minute frustrating jaxo inc cofounder joe latone motivated faced understood many innovation past confident knew day would able overcome difficulty ie developer ego enjoy respect mozilla community thought could give penny firefox o community learning new work decided gain profit inexperience playing janus figure keeping one face newbie long could switching veteran face needed firefox o hello world sample fxosstub derives intended people minimum knowledge need know following basic ecmascript html cs versus j object jquery requirejs node volo etc fxosstub versus mortarappstub first hour firefox o remark conscientiously jotted first minute discovered firefox o newbie note fxos application big blue install button wrong course role install button afraid press use force read code need learn requirejs strange syntaxlook function whats ala work midnovember evolved firefox o simulator seemingly random directory structure frustrating www tool newbie may give point ask google search gaiachrono mozillaball ah better veteran note simplify reduce hello world minimum example buried mozillaorgprofile application zipped ah ha way install mistake launchpath install boottogecko ok let smell like android lucid precise adbget install use nightly wasted day finish later long build really necessary next day written several apps google app engine gae good candidate use build application firefox o restful xmlhttprequest jquery interface google apis one gae application genetick decided install firefox o create manifestwebapp war directory need fix forget icon get cryptic message remove launchpath get rid cache line well seize opportunity make install code selfcontained standard install j object private setinstallbutton j method exported work quite well newbie start following test opinion make much obvious newbie firefox o deal mobile raise enthusiasm wow preexisting application look true mobile one yes veteran say fxosmobile might able make standalone need internet connection note show fxosdesktop problem ubuntu dashboard proper look feel newbie argues fix newbie love newlook design make feel gain knowledge ownership application googling newbie find warsaw mozilla camp well gem pattern custom element get frustrated icon camp advertised place go icon dug sample different size different naming scheme etc sigh script obscure seems styler added rule set defined rule new nullifying previous role type id preference worse exploiting order rule happens implemented html side clear pattern giving life design concept ie nav section menu tag use next veteran decided provide newbie working example design guide rule much say except tedious work select best icon sample use gimp resize properly simplify cs rule remove useless one check several combination button make sure font color pantones obey firefox identity rule began twittershare application worst application regarding look n feel structure although could better terminology also one closer vanilla application newbie point view ended day later ffoxstub consisting simple indexhtml style directory cs standard iconic image j directory containing installjs newbie able adapt gae context firefox o mobile device step took hour starting stub newbie start get involved firefox o community trust approach feel power soon newbie expert fxosstub simplistic minimalist pattern get newbie started building application firefox o mobile must stay ring bell ariadne string labyrinth enough wake enthusiasm legion developer one day another evolve wonderful world requirejs volo rest start target widest audience first fxosstub absolutely nothing except show screen suitable obtaining familiar layout mobile application aujus firefox top install button body section bottom normalized icon body section text virtual progress bar supposed selfadapt adequate size keeping text readable button fingerreachable fxosstub fill gap used building regular webpage laptopdesktop display required mobile touch screen reduced size principal cofounder jaxo inc pierre g richard year software engineering product development experience shipped product ibm startup generating software sale pierre one world leading expert algorithm imaging technique information processing barcodes qr code data matrix markup language xml xsl authored industry best software area extensive experience today mobile platform android io recent interest descriptive technique interpreter javascript order unify programming application system device example firefox o pierre graduate french grande ecole ecole sup√©rieure delectricit√© spent several year research staff member ibm watson research center held executive position chief scientist vp technology several hightech startup article pierre
641,Lobsters,mobile,Mobile Development,The Magazines,http://patrickbgibson.com/post/37610752007/the-magazines,magazine,patrick b gibson happy,patrick b gibson happy patrick born raised southwest ontario life pacific northwest wife maja
642,Lobsters,mobile,Mobile Development,#inspect 2013 - First RubyMotion Conference,http://www.rubymotion.com/conference/,inspect first rubymotion conference,inspect july paris france inspect may san francisco california inspect march brussels belgium,inspect july paris france third edition rubymotion inspect held paris france ecole private engineering school revolutionary teaching method hosted u several student attended talk attendee speaker made conference onetrack event croissant pastry served breakfast delicious cheese among french food served lunch brought androidpowered beer tap closing party inspect may san francisco california second edition rubymotion inspect happened sunny san francisco california welcomed everyone fort mason former u army post located marina district protected national historic landmark attendee speaker came conference onetrack event californianstyle breakfast lunch served ended event great party featuring music local beer san francisco inspect march brussels belgium inaugural edition rubymotion inspect held brussels belgium special edition picked awesome venue brussels grand place unesco site heritage attendee speaker made conference onetrack event pastry served breakfast belgian food served lunch concluded event awesome party featuring huge selection belgian beer
643,Lobsters,mobile,Mobile Development,Responsive background images with fixed or fluid aspect ratios,http://voormedia.com/blog/2012/11/responsive-background-images-with-fixed-or-fluid-aspect-ratios,responsive background image fixed fluid aspect ratio,fixed aspect ratio list apart article shiv try browser adding background image try browser fluid aspect ratio try browser use sc calculation like sc summary,easiest way scale background image responsive layout use old technique enhance fluidly change aspect ratio background imagesresponsive layout make possible dynamically scale width website fit small mobile device well larger desktop computer img element percentual width height automatically adjusted aspect ratio remains resizedif want accomplish background image must figure maintain aspect ratio html elementfixed aspect ratiothe trick use maintain aspect ratio apply vertical padding set padding percentage based width element technique originally described embedded video older list apart article work well element suppose want image pixel want create element maintains aspect ratio width change code example use px example work equally well em unit also use figure element sure use shiv similar solution make work older browser div class column figure class fixedratio figure div divcolumn maxwidth figurefixedratio paddingtop try browseradding background imagethe element scale maintains aspect ratio add background image automatically scale together element accomplish add backgroundsize covera drawback scaling background image cover entire element supported internet explorer get acceptable result version also center image backgroundposition attribute must ensure image least wide maxwidth element way element never larger image element smaller image cropped version internet explorer used desktop wo nt noticed many people div class column figure class fixedratio figure div divcolumn background image must wide maxwidth figurefixedratio paddingtop backgroundimage url http voormediacomexamplesnorthsearegattajpg backgroundsize cover mozbackgroundsize cover firefox backgroundposition center internet explorer try browserfluid aspect ratiowe take step suppose widescreen image look great desktop computer mobile device nt want use aspect ratio image become small also nt want use exact height image becomes tall instead height decrease gradually width reduced call fluid aspect ratio effect accomplished decreasing percentual padding setting height element suppose large image pixel decide image pixel high width decreased pixel need calculate height paddingtop attribute diagram show relationship two dimension slope line corresponds paddingtop attribute start height corresponds height attribute represents height element would width zerowe implement fluid aspect ratio adjusting example calculated value div class column figure class fluidratio figure div divcolumn background image must wide maxwidth figurefluidratio paddingtop slope height start height backgroundimage url http voormediacomexamplesamsterdamjpg backgroundsize cover mozbackgroundsize cover firefox backgroundposition center internet explorer try browseruse sc calculationsit possible calculate correct paddingtop height attribute manually course also play around look right future proof option use cs preprocessor like sc automatically calculate value example implementation generates cs shown calculate fluid ratio based two dimension widthheight mixin fluidratio largesize smallsize widthlarge nth largesize widthsmall nth smallsize heightlarge nth largesize heightsmall nth smallsize slope heightlarge heightsmall widthlarge widthsmall height heightsmall widthsmall slope paddingtop slope height height backgroundsize cover mozbackgroundsize cover firefox backgroundposition center internet explorer figurefluidratio element fluid ratio include fluidratio backgroundimage url http voormediacomexamplesamsterdamjpg summaryit possible make html element scale height proportional width element percentual paddingtop attribute scaled based width make background image scale modern browser add backgroundsize coverto make aspect ratio change gradually resizing also set height attribute based two size different aspect ratio correct height vertical padding calculated
644,Lobsters,mobile,Mobile Development,mozilla/r2d2b2g ¬∑ GitHub - Try out FirefoxOS,https://github.com/mozilla/r2d2b2g,github try firefoxos,note project longer maintained repo merged main gecko firefox repo firefox desktop addon,note project longer maintained repo merged main gecko firefox repo experimental prototype test environment firefox o form firefox desktop addon hack clone repository git submodule init git submodule update make build make run caution need plentiful disk patience submodules build process require copious space time
645,Lobsters,mobile,Mobile Development,Chrome Canary for Developers,http://paulirish.com/2012/chrome-canary-for-developers/,chrome canary developer,running fresh build give great goody look forward canary run side side run sidebyside chrome install recommend running chrome stable canary file bug week canary user package track dev channel chromium downloadchromiumappspotcom protip set canary default browser chrome ensures stability canary build live edge philiproberts,frontend web development already use chrome development browser encourage use chrome canary new chrome canary build available daily cut pst take best last revision specific running fresh build give great goody look forward chrome devtools feature feature web platform large experimental feature go visit flag right exciting stuff like web component shadow dom webrtc peer connection canary run side side reason canary great run sidebyside chrome install fact url canary download page sxs recommend running chrome stable canary chrome developer relation team never need update browser watch new stuff coming file bug break still see user see week canary user fun fact feature land canary short week trip shipping million chrome user stable long everything schedule feature need bake little longer dev channel making way given smart move dev team watch feature sometimes bug trickle time adapt new stable chrome ready user within day canary available mac window sadly linux luckily package track dev channel chromium keep date weekly basis pseudocanary need oneoff build freshest chromium available go downloadchromiumappspotcom detect o serve build le hour old hotchachacha protip set canary default browser canary setting let edge release read chrome ensures stability canary build open safari preference canary listed default web browser choice choose want new link open another small tip sometimes chrome extension affect page inspection behavior weird way jump incognito extension run get clean look live edge running canary regularly rock edge version browser oh right call action added cta thanks philiproberts suggestion accurate data whenhow cut canary build
646,Lobsters,mobile,Mobile Development,Test your responsive design implementation with The Responsinator,http://www.responsinator.com/?url=foundation.zurb.com,test responsive design implementation responsinator,,
647,Lobsters,mobile,Mobile Development,Technical Retrospective on the UX of a Rails Rumble Project,http://bendyworks.com/geekville/lab_projects/2012/10/omg-rails-rumble,technical retrospective ux rail rumble project,omg rail rumble rail rumble omg got ta see tag google chrome frame cleartype ilk modernizr misbehaving browser sc sc handy tool error page pefrect found general error humanstxt humanstxt humanstxt legal thing policy toc following uservoice conclusion vote reference boilerplate,omg rail rumble last weekend three bendyworkers swinkperson swinkee participated rail rumble competition build web application hour rather hacking backend like usually ended almost exclusively forging frontend came appreciate sheer immensity task required polish website shine short turn ux hard pretty happy result behold omg got ta see head tag oh head tag lot go head tag aside obvious title cs tag found finessing content head tag exactly bidding slightly edited glory head meta meta contentieedge httpequiv xuacompatible meta contenton httpequivcleartype title omg title meta contenttrue namehandheldfriendly meta namemobileoptimized meta contentwidthdevicewidth nameviewport meta content namedescription link href assetsapplication hash cs medium rel stylesheet type textcss link hrefhttps relstylesheet typetextcss link relappletouchicon link relappletouchicon link relappletouchicon script srcassetsmodernizrjs script meta content authenticitytoken name csrfparam meta content elided name csrftoken head go one time skipping obvious one even though sending charset contenttype http header driving home sometimes browser want listen reason meta contentieedge httpequiv xuacompatible needing use internet explorer wanting better web experience install google chrome frame extension tag make sure chrome frame turned meta contenton httpequivcleartype request mobile internet explorer turn cleartype technology meta contenttrue namehandheldfriendly handheldfriendly tag let palm blackberrywielding friend better experience meta namemobileoptimized one microsoft pocketpc meta contentwidthdevicewidth nameviewport one actually quite important mobile device day tell mobile browser render page simply width screen without smart zooming smart zooming amazing site yet mobileoptimized since omg got ta see designed primarily mobile screen want opt functionality link href assetsapplication hash cs medium rel stylesheet type textcss including call hash reality actually hexadecimal number represents hash cs file automatically generated incorporated rail help browser recognize need ask server newer version style increasing responsiveness link relappletouchicon ilk one important u envision omg got ta see used almost exclusively mobile platform especially situation user want quickly enter data put phone away including link tag provide custom icon user choose save bookmark onto homescreen script srcassetsmodernizrjs script modernizr simply put swiss army knife determining browser capability also add shim ahem misbehaving browser see head element provides baseline vast amount experience sc leveraging sc able make modular design responded differently sized screen differently abled browser example wrote base design targeted screen increase size screen horizontally vertically design change sometimes subtle time dramatic simple example horizontal change footer whereas front page exemplifies vertical responsiveness see responsive sc affect home page handy tool sc also let u easily use browser extension browser hack thing like inlineblock rounded corner sticky footer error page come never expect user see error page right mean code pefrect know always true say ever show due event beyond control case made sure provide found general error page humanstxt seen humanstxt people machine something get behind made humanstxt page legal thing collecting data omg got ta see give appreciate reciprocate trust remixed rail rumble privacy policy policy heroku term service toc might seem like fact might seem scary tweaked two document make sure user protected u intend anything nefarious data wanted put writing intention benefit following know plenty feature people want added omg got ta see course implement anything judging uservoice site setup hit ground running popular request please add feature request surely including bug report conclusion put lot love omg got ta see tool random occasion use number time already find perfect solution ignorance also appreciate vote rumble reference prop prop due head tag included great folk behind boilerplate suggested
648,Lobsters,mobile,Mobile Development,Would you like a Mobile App with That?,http://schneems.com/post/33781154129/would-you-like-a-mobile-app-with-that,would like mobile app,opro introduction oauth rail app clone one mine devise write adapter opro custom auth boot configure first client app rate limiting built documentation http iphone app http githubcomoprooprorailsdemo afnetworking mattt heroku big nerd ranch io programming io course code school http oprodemoherokuappcom rail app http oprodemoherokuappcom app way http http note http note remember cloud herokucom heroku toolbelt http note http ssl ssl http addon page finishing opro iphone app doc opro developer doc schneems heroku rail class university texas schneems raise hell better programming exception,android iphone user everywhere made abundantly clear mobile apps future come mobile nothing beat native experience native apps mean need api api need authentication happy introduce solution mobile rail backed authentication need opro opro pronounced ohpro rail engine adding oauth provider rail app oauth web authenticates service ever signed twitter connected facebook used oauth new concept check introduction oauth otherwise put programming cap cause going build first rail api backed iphone app rail app assume got rail app already burning hole pocket easily clone one mine rail app going need user model authenticate also need authentication user model opro builtin devise integration using something else easily write adapter got working app need install opro start adding code gemfile gem opro run bundle install rail g opro install put file initializersoprorb generate migration add mountoprooauth route using devise make sure authstrategy inside initializer set devise otherwise need configure custom auth adapter configauthstrategy devise next need migrate database almost done rake db migrate give u table store oauth client app credential table store access token user need configure controller allow oauth adding allowoauth controller userscontroller go ahead add give client api access ability hit action controller class userscontroller applicationcontroller allowoauth end allowoauth method accepts argument beforefilter boot configure first client app got opro set need generate client app auth token secret main rail app keep track client used whitelisting blacklisting rate limiting go ahead start local server rail server server running port view built documentation wish need visit http generate client app fill name app first api app hit enter redirected page secret token record purpose example use credential name first api app client id secret got working rail app acting oauth provider time get party started make first rail backed iphone app iphone app never coded objective c get nervous already got app start see app go http githubcomoprooprorailsdemo first need clone locally go project directory inside rail app clone repository git clone git githubcom oprooprogit move directory run cd oproiphonedemo gem install cocoapods pod install open oprodemoxcworkspace using cocoapods much like bundler install external dependency iphone app app relies excellent afnetworking written mattt heroku run xcode open make sure target application set oprodemo hit run cmdr see screen like see screen may need update xcode install io developer library change target try checking debug log output error new io programming recommend big nerd ranch io programming starting point io course code school look promising iphone demo app us rail backed opro app hosting heroku http oprodemoherokuappcom previously generated credential see open oproapiclienth define oclientbaseurlstring http oprodemoherokuappcom define oclientid define oclientsecret make sure demo work default rail app heroku pressing create random user button hit endpoint http oprodemoherokuappcom save new user database return randomly generated email password mobile app log functionality something would want app useful oauth demo server responds iphone simulator email password field filledin log button active press send email password server along client id client secret everything successful server return access token use behalf user taken new screen email twitter zip try modifying one field submitting form changing data rail server authenticated user request make access token mean acting behalf user see field update look client log see find error got working iphone app time repurpose site app way verified iphone demo app work demo heroku going modify work local rail app first make sure local rail app running rail server grab credential wrote earlier signing client application server okay go http select app write secret id purpose use name first api app client id secret remember credential different inside oproapiclienth replace http oprodemoherokuappcom http replace oclientid oclientsecret client secret using example value would define oclientbaseurlstring http define oclientid define oclientsecret note id secret different try use credential work local server different got credential iphone app rebuild pressing run hitting cmdr app build check output xcode everything worked see screen clicking create random user button work take look local rail server log verify receiving request iphone simulator receive error log using random button since create random user log need create user database using devise visit http enter email password remember email password remember sign form always make new user console rail console password password email email examplecom usercreate email email password password passwordconfirmation password userlastemail email true got user database email password enter email password field xcode entered field see log button become active pull rail server log click log button iphone simulator see request come email gave password filtered request went well see status response server iphone simulator show user edit page using demo app provided change field hit enter see request along value set hit local server note iphone app expects json response rail server user update action might need add respondto block running app zip twitter field user table get error hit enter case open edituserviewcontrollerm updateuser method see creating dictionary similar hash ruby email twitter zip field mutableuserparameters setvalue useremailfieldtext forkey email mutableuserparameters setvalue usertwitterfieldtext forkey twitter mutableuserparameters setvalue userzipfieldtext forkey zip want send twitter zip field take sending email field mutableuserparameters setvalue useremailfieldtext forkey email save rerun iphone app reenter credential try modifying email address user change schneems examplecom hit enter see new email come request server everything work also able see change database rail console userwhere email schneems examplecom congrats made first working api backed rail app using oauth still problem remember check rail log iphone simulator log log rail might use put something happened objectivec would use nslog something happened quite done demo yet might authenticated local app want every time let make sure iphone app remembers u power phone remember getting access token much good remember going see store iphone use authenticate later go ahead stop iphone simulator restart pressing run hitting cmdr come back online notice log button already active try hitting right happens see update user screen email put last time app remember open oproapiclientm take look setauthorizationwithtoken trust awhile method name look bad see storing accesstoken refreshtoken nsuserdefaults standarduserdefaults setobject accesstoken forkey kaccesstoken nsuserdefaults standarduserdefaults setobject refreshtoken forkey krefreshtoken telling iphone app store value disk even app killed restarted later pull value disk initialize api client initwithbaseurl method nsstring accesstoken nsuserdefaults standarduserdefaults objectforkey kaccesstoken nsstring refreshtoken nsuserdefaults standarduserdefaults objectforkey krefreshtoken self setauthorizationwithtoken accesstoken refreshtoken refreshtoken left write logic controller make button available user authenticated previously done oprodemoviewcontrollerm make log button clickable user previously authenticated oproapiclient sharedclient isauthenticated getaccesstokenbutton setenabled yes getaccesstokenbutton sethighlighted yes getusercredentialsbutton sethighlighted got app hit rail app act authenticated user might first app stop rip oproapiclienth oproapiclientm put custom app could modify one meet need starting point declare victory new found api client rail app let deploy production cloud got client working put app heroku anyone hit api without needing access localhost account need sign herokucom done install heroku toolbelt provision app directory rail project run heroku login heroku create creating done stack cedar http git herokucom note url app name different got heroku app provisioned need commit file git deploy run git add git commit deploy heroku git push heroku master successful push see app compiling several step bundle install rake asset precompile run done need migrate database heroku run rake db migrate hit app make sure working right visit url given earlier http problem check log running heroku log tail got app running cloud let add ssl ssl protect app people snooping credential allow encrypted communication using http iphone rail app ssl addon add heroku app provision addon go addon page run command line heroku addons add ssl endpoint app safely running heroku point iphone app production server oproapiclienth forget use http instead simply http create new oauth client app visiting website oauthnew want add id secret oproapiclienth well save user postgres database heroku make sure hitting right url always check server log heroku heroku log tail got site running heroku iphone client properly configured use iphone app production rail app pretty cool huh finishing today turned rail app oauth powered api made first native iphone app deployed server production bad afternoon work got basic learn authorization iphone app work visiting opro iphone app doc read configuration available visit opro developer doc run inaccuracy want say hi show opro powered app always find twitter schneems may oauth richard work heroku ruby team teach rail class university texas like apis much chat twitter schneems enjoyed article might also enjoy raise hell better programming exception
650,Lobsters,mobile,Mobile Development,"RAZR i, believe: does Intel's first real smartphone measure up?",http://www.theverge.com/2012/10/4/3447984/motorola-razr-i-review-intel-smartphone,razr believe intel first real smartphone measure,updated take advantage processor number motorola razr razr processor graphic ram internal storage connectivity camera o battery capacity quadrant score glbenchmark egypt score sunspider score verge battery test,looking define best smartphone natural instinct processor nerd head directly synthetic benchmark application course foolish dictate phone value purely number difference two model benchmark great tool highlight pro con quadrant glbenchmark de facto standard android benchmark offering battery test tax processor graphic capability storage ram mean perfect metric however final score quadrant affected screen resolution whatever code already running device different processor architecture could also make inaccurate comparison razr scored significantly higher test performance gap nt noticeable everyday use pair handled game tested ease benchmark show gap performance nt apparent everyday useour final benchmark test sunspider browserbased test race execute predetermined set javascript code interest fairness ran test chrome android rather using razr preinstalled browser application although razr battle huge margin intel always good browser chrome updated take advantage processor result nt surprising also checked battery life phone another area strength intel standard battery test cycle website video screen set percent brightness razr lasted seven hour minute razr lasted full eight hour minute phone truly differ however standby time razr managed last hour regular use including pushing email two separate account percent battery remaining contrast razr get full day normal usage much strong battery life compared many android device test experience clear intel chip far frugal power dualcore snapdragon number motorola razr razr processorrazr arm dualcore snapdragon razr singlecore saltwell graphicsrazr adreno powervr sgx internal microsdhc slot connectivityrazr lte hspda hspda still video osandroid upgrade android promised battery quadrant scorerazr glbenchmark egypt scorerazr sunspider scorerazr verge battery testrazr
651,Lobsters,mobile,Mobile Development,Tracking iOS Web App Usage - Ravelrumba by Rob Flaherty,http://www.ravelrumba.com/blog/tracking-ios-web-app-usage/,tracking io web app usage ravelrumba rob flaherty,tracking io web app usage chunk work,october rob flaherty tracking io web app usage via handful meta tag link tag web apps io launched home screen run fullscreen mode enable nativelike experience user turning website app home screen web app difficult require chunk work including designing home screen icon designing startup screen image preventing link opening mobile safari exiting app prompting user add app home screen going go trouble nice data many people actually using thing fortunately easy course track visit pageviews standard google analytics implementation appspecific behavior track little bit javascript going show example track home screen web app activity using google analytics custom variable depending exactly want track may consider using google analytics event instead data directly tied pageviews visit think custom variable cleaner choice remember custom variable definition must followed trackpageview trackevent request far code placement concerned would place following example initial google analytics set snippet trackpageview function call also note example us custom variable slot want replace slot value track home screen launch set custom variable every time detect visit occurs web app mode allow segment home screen web app traffic compare traffic arriving browser navigatorstandalone gaqpush setcustomvar custom variable slot use mobile web app custom variable name home screen launch custom variable value set scope sessionlevel track device orientation keep track whether app viewed portrait landscape mode note example custom variable defined page level session level previous example navigatorstandalone var currentorientation windowinnerheight windowinnerwidth portrait landscape gaqpush setcustomvar custom variable slot use mobile web app orientation custom variable name currentorientation portrait landscape set scope pagelevel track time since last launch keep track many day passed since last time app opened logging timestamp local storage comparing date whenever app launched might way get data looking returning visitor stats standard google analytics view sure though javascript fun navigatorstandalone local storage detection var storage function var uid new date storage result try storage windowlocalstorage setitem uid uid result storagegetitem uid uid storageremoveitem uid return result storage catch e device support local storage storage var lastlaunch storagewebapplastlaunch app launched first time lastlaunch first launch else calculate day since last recorded launch lastlaunch mathfloor new date storagewebapplastlaunch storagesetitem webapplastlaunch new date gaqpush setcustomvar custom variable slot use last launch custom variable name lastlaunch first launch number day since last launch set scope sessionlevel else first idea popped head anything else would interesting track comment ping currently closed
652,Lobsters,mobile,Mobile Development,A browser benchmark that has your back: RoboHornet,http://paulirish.com/2012/a-browser-benchmark-that-has-your-back-robohornet/,browser benchmark back robohornet,robohornet today crossvendor collection developer led google opensourcing robohornet put committee javascript expert vote robohornet suite browser vendor compete robohornet score optimizing slow behavior developer prioritize vote review incoming test robohornet represents project still alpha benchmarkjs jsperf robohornet github project read involved full review robohornet hardware,past browser focus speed great u user seen huge dramatic performance boost benchmark like sunspider kraken octane benchmark often crafted javascript vm engineer test raw javascript performance rarely bottleneck apps day performance bottleneck oftentimes dom canvas api method svg priority see browser vendor competing raw j hacking way around avoid actual performance pain point wanted solve robohornet today crossvendor collection developer led google opensourcing robohornet project lead alex komoroske put living dynamic benchmark aim use collective effort web development community ultimately get browser vendor fix realworld performance pain look robohornet hopefully flip situation head web app developer identify isolate specific pain point app issue reduced solid benchmark propose committee javascript expert jsperf yui google facebook others everyone vote issue make top voted item long committee think good head benchmark robohornet suite better represents web app developer community biggest priority performance browser vendor compete robohornet score optimizing slow behavior developer prioritize everybody win yay ice cream everyone current item robohornet test capture major pain point jquery google apps google map ember handlebar cappuccino adding row existing table adding column existing table descendant selector different dom depth converting canvas data uri clearing canvas table render speed innerhtml scrolling speed using scrolltop resizing column table resizing svgs gettersetters referencing argument array scrolling lot animated gifs affect forcing reflow calling offsetheight replacing number dom node using range api localstorage write performance localstorage read performance vote review incoming test issue tracker robohornet represents project still alpha love get involvement better represent everyone using benchmarkjs internally experience jsperf proven trustworthy reliable benchmark harness please take look site watch robohornet github project read involved submit performance pain point apps run go check full review robohornet hardware
654,Lobsters,mobile,Mobile Development,Perf Feedback - What's slowing down Mobile Facebook,http://lists.w3.org/Archives/Public/public-coremob/2012Sep/0021.html,perf feedback slowing mobile facebook,http wwwfacebookcomnotesfacebookengineeringunderthehoodrebuildi http hypermail,hi following recent announcement facebook made rebuilding io app using native technology lot request provide detailed feedback performance issue encountered building mobile web comment welcomed tooling developer apis lack tooling mobile browser make difficult dig find real issue hence tooling rather lackthereof key issue biggest issue facing memory related given size content uncommon application exhaust hardware capability device causing crash unfortunately difficult u understand exactly causing issue gpu buffer exhaustion reaching resource limit something else hard say missing mainly dev tool device andor easily accessible remotely thing want know develop memory lane heap size object count gc cycle gpu buffer size resource limit much useful outside development phase however eg linkedin us ua string sniffing determine many picture kept memory hitting device limit api device memory resource would much appropriate albeit fingerprintable way fps ability measure fps hardware level essential testing would also useful determine whether use infinite scrolling pagination example fingerprinting caveat scrolling performance already started sharing webperf wg continue bringing relevant wg upcoming week one important issue typically problem newsfeed timeline use infinite scrolling content prefetched user scroll app appended end containing large amount content text image currently scrolling using j option fast enough implementation issue qoi issue inconsistent framerates ui thread lag stuttering gpu buffer exhaustion due size content number image native momentum scrolling different feel across operating system j implementation end tailored one o feel wrong one uncanny valley perf issue touch event android device latency enough event make j implementation scrolling brittle requirement scrolling must fast smooth really important engagement must trigger given set event content prefetched computed appended user scroll towards bottom loaded content must allow io computation background without affecting smoothness must allow appending fresh content main content scrolling without affecting smoothness must reliably handle scrolling though lot content including lot image must possible capture touch event scrolling new api suggestion standardized way enable momentum scrolling across browser onscroll event triggered scrolling structured cloning rootless document fragment building doc fragment worker moving back main thread appended simple way implement pull refresh via dedicated offboundscroll event gpu currently gpu blackbox understand vendor would like keep truth however developer rely trick force given content hardware accelerated basically blackbox clunky api add thing given size gpu buffer relative size content consumed device nowadays doubt well get place managing gpu left strictly browser reasonable amount time think value least discussing pro con providing form api gpu possible better touch tracking support especially android smoother animation always asset better caching appcache soooooo busted stopped using best tobie http wwwfacebookcomnotesfacebookengineeringunderthehoodrebuildi http http http http http etherpadmozillaorgappcachelondon received saturday september utc archive generated hypermail friday january utc
655,Lobsters,mobile,Mobile Development,If you want to have Google maps instead of Apple maps in your app - mladjan/GoogleMapsOverlayiOS,https://github.com/mladjan/GoogleMapsOverlayiOS,want google map instead apple map app mladjangooglemapsoverlayios,googlemapsoverlayios http http wikiopenstreetmaporgwikiosminmapkit http githubcommladjangooglemapsoverlayios http wikiopenstreetmaporgwikiosminmapkit,googlemapsoverlayios solution approved apple want google map instead apple map app simple solution already saw apple made map solution implemented great unfortunately serbia unusable heard lot people country like uk map good enough city huge problem people already app appstore based google map google map api example geocoding api must used google map google map tos img src http alt taksiko google v apple map found solution implementing open street map overlay mkmapview http wikiopenstreetmaporgwikiosminmapkit downloading osm tile showing overlay made change use google map tile posted demo github http githubcommladjangooglemapsoverlayios implementation use http wikiopenstreetmaporgwikiosminmapkit thanks nutiteq team providing source code osm
656,Lobsters,mobile,Mobile Development,There is something magical about Firefox OS,http://rawkes.com/articles/there-is-something-magical-about-firefox-os,something magical firefox o,firefox o mozilla developer network javascript apis necessary create phonelike experience open web apps initiative persona firefox o page mdn firefox o closing gap mobile market iphone cost equivalent might want publicly brandish phone price small car bonnie cha providing alternative open platform steve lohr thomas claburn clark hackable dream developer perfect timing blown mind plenty challenge biolab disaster beyond mobile phone port firefox o raspberry pi one pandaboard run firefox o via desktop client,past year half spending time working mozilla latest project firefox o time fallen love project stand way never experienced technology platform firefox o screenshots let perfectly clear firefox o start something huge revolution waiting breath fresh air culmination bleedingedge technology magical going change everything firefox o wondering earth let bring speed firefox o new mobile operating system developed mozilla boot gecko project us linux kernel boot geckobased runtime engine let user run application developed entirely using html javascript open web application apis mozilla developer network short firefox o taking technology behind web like javascript using produce entire mobile operating system let sink moment mobile o powered javascript slightlycustomised version gecko engine behind firefox created introduces new javascript apis necessary create phonelike experience includes thing like webtelephony make phone call websms send text message vibration api well vibrate thing video firefox o much latest web technology used crazy way awesome also combination many project mozilla single vision web platform project include open web apps initiative persona solution identity logins web formally known browserid absolutely fascinating see many different project mozilla coalesce single coherent vision leave description entry nt explaining project fine detail though information found firefox o page mdn definitely recommend checking firefox o might thinking sound great use javascript build phone right really important question ask good news plenty reason good idea besides making web developer weak knee two major reason firefox o fill gap mobile market provides alternative current proprietary restrictive mobile landscape closing gap mobile market surprise anyone smartphones often ridiculously expensive even area world perceived high level income thought expensive country disposable income afford consider moment iphone cost equivalent developing market like brazil expensive phone uk inflated price brazil mainly high level import tax apple apparently working avoid future building local production line country regardless point key issue expensive highend device nt always option area world let alone fact society might want publicly brandish phone price small car want smartphone experience without shelling stupid amount money could turn cheap android device tend run poorly fortunately firefox o come goal firefox o nt compete highend device offer entry midlevel smartphones feature phone price bonnie cha firefox o fit gap market perfectly offer smartphone experience cheap lowend hardware comparable android experience midrange hardware joke example currently testing javascript game firefox o device cost arguably lowend device may expect run pretty poorly run much faster game running android browser firefox chrome device run fast faster game running android browser much better device cost time much huge performance improvement browser android identical device lack stuff going gecko hardware meaning thing like javascript run full pelt much javascript slow javascript performance cheap hardware one reason convinced firefox o beginning something huge point mozilla nt necessarily launching device one currently using development testing providing alternative open platform second reason firefox o attempt provide open alternative mobile platform stand try influence big proprietary mobile player change thing mozilla mission since outset first software project later foundation company provide open technology challenge dominant corporate product steve lohr mozilla attempting replicate success firefox stormed browser market showed user alternative one let control use web time mobile web threatened microsoft apple google leading smartphone platform native apps lockeddown platform proprietary software store capricious developer rule apple google making web technology le relevant thomas claburn mobile one main area need improving application excitement around mobile apps seem step backward one respect tie user particular operating system device support web contrast evolved content experienced much way hardware mozilla maker firefox web browser determined make thing true smartphones clark firefox o aim use native everywhereness web provide platform allows application enjoyed mobile device desktop computer tablet anywhere else access browser would nt want able pick angry bird game desktop left phone certainly would hackable dream developer one final extra reason firefox o needed nt really comparable hackable mobile platform moment sort customise android easy firefox o constructed using html javascript cs mean need basic web development skill reach completely change device experience could literally change one line cs completely change way icon homescreen look rewrite core javascript file handle phonecalls truly platform developer excited seeing take beyond mozilla vision perfect timing something fully aware yearandahalf mozilla fortunate beginning firefox o project remember right announced boot gecko internally first week job thing exciting back boy become even exciting time firefox o literally number thing working moment honestly love actually feel privileged part wondered many time felt work mozilla initial launch firefox excitement passion nervousness inability explain quite amazing people care honest nt think many people truly understand happening firefox o really matter long launched little like firefox suppose happy mozilla interesting point life blown mind people get right developer handson demo device occasionally come mozillians event much enjoy watching expression go various stage emotion playing start mild confusion sort given android device look following confusion sudden realisation nt android built using javascript short excitement start sort holy shit mindblowing moment longer deep concentration exploring every corner device asking lot question last stage slight reluctance ask device back final nt half bad impressed hand think made make thing sound rosy amazing honestly get exact reaction many people show device actually quite funny come realise see others play firefox o device convinced real gamechanger seems blow mind left right centre barely explanation needed plenty challenge would nt fair talk greatness firefox o thing working without covering challenge need solve one side general issue like manage apps ecosystem open unrestrictive possible device fragmentation like android issue important ultimately uninteresting however interested challenge game mobile device perceived real performance issue developer often complain mean issue specific firefox o android io bad right purely focussed firefox o improve thing stand majority preexisting game mobile either run really poorly sort alright time game nt run stable framerate either make experience enjoyable interesting lot issue nt necessarily seem device javascript intense game like biolab disaster perform stunningly even lowend device testing talking definitely clear although device platform sometimes blame often would like make lot learn game perform well lowend device see technique using best educate developer looking target mobile device truly believe quite intense game run well mobile device even lowend one confident people already making game today thing trust eye get beyond mobile phone excites firefox o nothing mobile device launching next year instead future hold touched earlier talking firefox o hackable dream others could take extend beyond mozilla vision video great news already happening today already port firefox o raspberry pi well one pandaboard nt perfect awesome tried hard avoid word happened firefox o even reached first release also ability run firefox o via desktop client mac window linux giving hardware access get device desktop client allows benefit feature o like apps running separate process fairly easy set imagine day nottodistant future gamepad api landed gecko accessed via firefox o desktop client cool well giant stretch imagination see desktop client run device connected tv o customised use gamepad input instead mouse touch javascript remember beginning game console actually something keen explore free time outside mozilla point coming point time device powered technology would normally use build website could world full device powered technology access communicate apis desperate see world look like
657,Lobsters,mobile,Mobile Development,New From Parse - Cloud Code,http://blog.parse.com/2012/09/11/welcoming-cloud-code-to-the-parse-family/,new parse cloud code,graphql available available security issue,glad announce parse server support graphql graphql opensource data query manipulation language help developer build fast stable apps us type ensure apps ask possible provide clear helpful error parse server easiest way instantly create graphql api amongst core team recently discussed adopting governance model make parse community transparent make decision making process clear make easier contribute project tom fox march parse platform changed lot past month departure one core contributor arrival new contributor also look back success last year work coming month florent vilmart august summer really busy dusted j sdk stripping large part legacy parsepromises backbone style callback definitely ben friedman january like take moment say thank everyone community beyond great year providing parse without everyone help ben friedman december version parse php sdk available use jump includes quite new feature among relative time query aggregate query index management ben friedman october hacktoberfest underway encourage take time sign hacktoberfest start contributing parseserver open source project github find detail signup oh mention free tshirts ben friedman september version parse php sdk available use jump includes support hhvm full text query support ben friedman july security issue recently disclosed nodejs affect version node starting line way stand security update released week ago currently available active release line including highly recommend update implementation patch issue assuming already
659,Lobsters,mobile,Mobile Development,Chinese clone maker wants to sue Apple over iPhone 5 design,http://www.neowin.net/news/chinese-clone-maker-wants-to-sue-apple-over-iphone-5-design,chinese clone maker want sue apple iphone design,shameless androidbased ripoff gizmodo gizchina,goophone chinese company behind android phone designed resemble leaked iphone part planning sue apple finalized device actually end looking like phone goophone released shameless androidbased ripoff leaked iphone prototype goophone chinese market last week mind mean went market design apple iphone actually end looking like leak seen far apple copying talk twisted logic china interesting see suit actually go anywhere even come depends whether iphone whatever apple decides call actually resembles leak seen far whether goophone willing go crazy plan whatever happens going hilarious watch copyright battle get crazier via gizmodo source gizchina image via goophone
662,Lobsters,mobile,Mobile Development,Stop Using The Cup of Coffee vs. $0.99 App Analogy,http://www.joshlehman.com/thoughts/stop-using-the-cup-of-coffee-vs-0-99-cent-app-analogy/,stop using cup coffee v app analogy,joke fact starbucks coffee trustable experience fact app total gamble fact starbucks free alternative fact free apps often great alternative fact starbucks craftsmanship full display fact app craftsmanship hidden away hope paid app,seen joke u app development love talk ridiculous people drop every day cup coffee waste cent hot new app hope learned something comparison work seen typical customer behavior change world mobile apps grown argument worked reality argument far compelling fact starbucks coffee trustable experience know like cup coffee fully meet expectation spend expect change life expect even last beyond last drop trip bathroom later experience fully trust pretty much time gamble ask like drop cup new instant refresher juice good chance pas maybe ask free sample see instant refresher juice good starbucks coffee short know getting getting experience every time hit drive thru fact app total gamble contrast app mr developer know adam pitching digital instant refresher juice form new app return going get questionable best already game phone good need another one play experience going get adding one game trustable assured nothing last week bought game cent terrible played second could shoving straight toilet know app good sir total gamble sure gamble fact matter price might place fact starbucks free alternative walk counter local coffee shop asked would like cup free coffee would like select paid option starbucks gave free coffee every day would milelong line drive thru free coffee anywhere close good paid stuff people would abandon paid en masse would pay maybe felt bad freeloader others would pay preferred option available paid column v free imagine free selection starbucks nearly large larger paid selection welcome app store fact free apps often great alternative people building fantastic free apps finding new creative way make money apps people even care make business app enjoy process building releasing something cool mass akin starbucks offering free line excellent coffee product maybe advertising cup starbucks would expect launch coffee shop across street make killing selling paid coffee nope going success app store whether paid app free app must understand reality even importantly must understand make money free fact starbucks craftsmanship full display behind bar local starbucks gleaming canister coffee bean wide variety flavoring expensivelooking brewing machine could never espressomaker big kitchen contribute feeling get buy cup coffee feeling say lot work went magical liquid pickmeup importantly lot went easily recreate think starbucks able sell coffee bean yet cannibalize business know know experience easily replicated fact app craftsmanship hidden away great software mask complexity work like magic customer likely make note craftsmanship involved app mainly bulk craftsmanship lie deep visual layer often heard people say could made app thought first simple believe successful telling statement general public understand complexity time take build something great typically understand really created may see app truly experience replicated elsewhere going back free point may hesitation drop cent suspect free alternative might exist good better one proven way push craftsmanship surface focus solid app design one thing visually highlight effort put app code level may much effort create task master app ugly veneer would give nice paint job paint job user see one minor point app crash like serving starbucks dirty cup game already suffer tough craftsmanship sell app crash even fringe case tough solve user assume built thing day trying rip hope paid app sure starbucks build app experience unique feel easily replicated provide something user see valuable daily life package show craftsmanship find creative way profit free version starbucks yet quit complaining money wasted cup coffee four five thing easy amidst growing sea app developer new idea must find way stand amongst crowd long keep focus building something great avoid counting app store revenue hatch fine thirsty post sponsored starbucks author clearly failed follow advice hunting way make money free article negotiating starbucks story sponsorship oops
663,Lobsters,mobile,Mobile Development,App Store Failure and Personal Responsibility,http://prog21.dadgum.com/146.html,app store failure personal responsibility,app store failure personal responsibility wrote adobe illustrator objectivec exporter permalink previously,app store failure personal responsibility wrote iphone app nt make money growing literary genre sympathize author really building kind nontrivial commercial application take immense amount work combine coding writing interaction design graphic art spend thousand hour project sell copy cent apiece well disheartening say leastdismissing failure losing app store lottery meaning success failure control dodge important question writing selling indie game mid went experience releasing game world euphoria followed despair confusion endless theorizing nt smash hit knew deserved failed iphone app article sound like something would written course iphone apple app store nt even exist feeling reaction exactly samewhat learned experience may sound obvious precisely difficult lesson learn slogged massive effort take design release product nt bearing whether anyone actually want madesee told sound obvious nt make easier deal getting something door price entry guarantee success nt go planned accept reason beautiful creation nt striking chord people involves coming face face issue nt fun think bedroom codershave ever watched complete stranger use app interpreting tutorial correctly working way expected game difficulty nonfrustrating maybe designed polished twenty level realizing handful player get past level oneit harder judge overall quality cousin might draw icon free give impression highend polish graphic help screen wall text using readable font avoiding improvement much work developer mike swanson wrote adobe illustrator objectivec exporter image would stay sharp scaledit also worth taking step back looking overall marketplace maybe love developing retro platformers overall level interest retro platformers enough enthusiasm support dozen game market saturation capping sale written snazzy todo list app make better todo list folk browsing app store pick quickly would wonderful position developing software blindly sending world making fortune happen nt better take responsibility failure dig deeper rather throwing hand blaming systempermalink august
664,Lobsters,mobile,Mobile Development,libimobiledevice - Teaching Penguins to talk to fruits,http://www.libimobiledevice.org/,libimobiledevice teaching penguin talk fruit,,include libimobiledevicelibimobiledeviceh unique device identifier static char udid null device handle idevicet device null try connect first usb device idevicenewwithoptions device null idevicelookupusbmux ideviceesuccess printf error device found return retrieve udid connected device idevicegetudid device udid ideviceesuccess printf error unable get device udid idevicefree device return output device identifier printf connected udid udid cleanup idevicefree device free udid include libimobiledevicelockdownh lockdown service handle lockdowndclientt lockdown null handshake lockdownd lockdowndclientnewwithhandshake device lockdown myapp use plist format plistt node null result char value null retrieve devicecolor setting value device lockdowndgetvalue lockdown null devicecolor node lockdownesuccess lockdowndclientfree lockdown idevicefree device printf error unable retrieve setting key devicecolor device return get string value node plistgetstringval node value output device color value printf value devicecolor value cleanup free value lockdowndclientfree lockdown ideviceinfo k productversion ideviceinfo basebandcertid xxxxxxxxxx basebandkeyhashinformation akeystatus skeyhash xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx skeystatus basebandserialnumber xxxxxxxx basebandversion boardid buildversion chipid deviceclass iphone devicecolor devicename iphone plus dieid xxxxxxxxxxxxxxx hardwaremodel hassidp true partitiontype guidpartitionscheme productname iphone o producttype productversion productionsoc true protocolversion telephonycapability true uniquechipid xxxxxxxxxxxxxxx uniquedeviceid xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx wifiaddress xx xx xx xx xx xx ideviceactivation state activationstate activated idevicediagnostics restart restarting device
665,Lobsters,mobile,Mobile Development,Algorithm Aims To Predict Crime By Tracking Mobile Phones - Forbes,http://www.forbes.com/sites/parmyolson/2012/08/06/algorithm-aims-to-predict-crime-by-tracking-mobile-phones/,algorithm aim predict crime tracking mobile phone forbes,lending writing diagnosing shopped tech company tested santa cruz published birmingham nokia mobile switzerland recently questioned follow twitter parmy,mirco musolesi say algorithm best predict cell phone user going tracking friend image credit afpgetty image via daylife algorithm everywhere lending u money writing news potentially diagnosing illness year researcher also exploring use fighting crime typically sifting wealth statistical data criminal event certain location previous year using data extrapolate crime might happen area method like shopped tech company like predpol tested police la santa cruz elsewhere researcher mirco musolesi coming emerging trend another angle rather predict criminal event happen particularly susceptible street working predicting would happen method little controversial would nt rely old crime data tracking potential criminal movement via mobile phone idea borne musolesi research call mobility pattern recently published part research university birmingham uk recently nokia mobile data challenge predicting movement volunteer working town switzerland used gps data telephone number texting calling history algorithm time able predict volunteer heading within square meter crucially algorithm precise also tracked movement data volunteer friend algorithm simply tracking volunteer could predict future gps coordinate within roughly square meter prediction took account additional information single friend error rate improved several order magnitude though lot criminal lack common sense act spontaneously probably smart enough tighten privacy setting smart phone turning location tracking apps disabling gps musolesi say nt stop algorithm tracking potential lawbreaker metric also applied using cell tower information something even criminal ca nt hide geographic location cell tower might precise gps data assuming network operator could provide information unlikely without court order authority could track someone movement triangulating data nearest base station finegrain network identify street block house musolesi say key look pattern movement intervene algorithm suggests future movement unusual area musolesi point authority already get suspect position really need matter mining data person predict might go future exactly cosmic bathswimming woodenball etching scenario proposed movie minority report suggest way police could better prepare algorithm way extracting new information data police already obtain say musolesi hoping work law enforcement agency test well algorithm predicts future location crime suggests using anonymous data people bail united kingdom electronically tagged facebook already us algorithm identify shifty user instance look older male frequently chat young girl use word like sex date recently police united state arrested man began chatting girl arranged meet facebook tipped cop moved would automated predicting potential criminal location play offline world evgeny morozov author net delusion recently questioned whether see racial profiling stereotyping problematically sidelining need probable cause since crimepredicting algorithm used today rely data reported crime police follow might miss disturbance often nt get reported think domestic violence rape burglary even absence report police still develop way knowing something odd happening neighborhood morozov note predictive policing hand might replace tacit knowledge naive belief comprehensive power statistic musolesi admits also major privacy concern proposing suggests experimentation anyway expects start research attractive advertiser police imagine local starbucks using technology predict go coffee break sending special offer heading door researcher planning test algorithm larger data set soon getting nokia checking type volunteer ensure work want work towards building platform api developer build apps exploit could ultimately webbased service send list last location return predictive location three hour suggests adding aiming release api next year privacy concern aside worth considering plenty criminal managing stay one step ahead law might end using service like musolesi follow twitter parmy
666,Lobsters,mobile,Mobile Development,Click Fraud Fun: More Mobile Madness,http://click-fraud-fun.blogspot.com/2012/07/more-mobile-madness.html,click fraud fun mobile madness,nt anyone said anything,nt read previous post check background information also subsequently added verizon tmobile list telco allowing private information flow past proxy carrier case pushing msisdn header give away end user phone number possible user mobile giving away however definitely feel like carrier make effort protect user coming proxy example request tmobile acceptlanguage enus xwapprofile http useragent linux u android enus buildfroyo khtml like gecko mobile accept acceptcharset xnokiamsisdn xnokiasgsnipaddress msisdn xvia harmony proxy connection keepalive found instance folk number disclosed fashion exclusively verizon tmobile nt anyone said anything obviously analytics company click fraud company deep analysis must seen new startup small comparatively traffic number seeing small sample beta testing customer site picking would surprised one noticed tough part situation good portion analytics click fraud detection able isolate visitor end http stream advantageous uniquely identifying information flowing make job click fraud detection company lot easier could see user phone number hopefully one heavily relying type information create visitor profile algorithm going severely bitched mobile company user get wind precisely need better job approach problem feel approach different let hope mobile carrier others paying attention fix issue lookout future
668,Lobsters,mobile,Mobile Development,Apple Wins Patent for NFC-Enabled 'iTravel' Transportation Ticketing App,http://www.macrumors.com/2012/07/10/apple-wins-patent-for-nfc-enabled-itravel-transportation-ticketing-app/,apple win patent nfcenabled itravel transportation ticketing app,digital wallet app rumor intentionally moving slowly new apple patent noted,apple announcing new passbook digital wallet app io last month speculation regarding inclusion near field communication nfc mobile payment capability future io device begun increase speculation come amid rumor iphone prototype nfc although apple said intentionally moving slowly mobile payment front passbook revealed today granting new apple patent nfcenabled transportation ticketing take additional significance noted unwired view disclosed itravel application would handle broad array function assist travel logistics main focus patent would use next iphone nfc chip airport checkin includes loading id info picture retinal scan fingerprint data modern passport embedded radio frequency identification tag collecting ticket information reservation confirmation emailsnotifications extracting reservation image via optical character recognition software barcodereading software qrcodereading software providing necessary information nfc equipped checkin counter receiving boarding pas luggage info exchange using stored id pas airport security etc apple itravel patent application known time filed september published public viewing april patent granted u patent trademark office apple broader protection choose launch application unusual apple thoroughly document actual io application concept yet see light day patent application unclear exactly apple chosen nfc technology bit slower establish originally hoped perhaps apple thought would able move faster idea alternatively apple may already discarded specific implementation passbook making appearance later year nfc perhaps also included apple itravel concept may still find way io device form
669,Lobsters,mobile,Mobile Development,The Dreams of the MeeGo Diaspora,http://bergie.iki.fi/blog/meego-diaspora/,dream meego diaspora,maemo texrat excellent piece today news new hope linux computer every pocket blogging internetconnected psion pda routinely publishing travel journal glimpse tablet future nokia internet tablet nokia waiting desk south africa linuxpowered device realworld hitchhiker guide galaxy wikipedia getting morning news pulse via plazes interact free software community brought voip instant messaging brought mobile map maemo mapper would go openstreetmap proved useful poznan midgard developer meeting maemo google talk watch movie tablet midgard system selected community infrastructure midgard cm nemein project history midgard maemomidgard feasibility study fan maemo niels ferenc reggie social news aggregation karma brainstorming maemo downloads maemo becomes mainstream sixth place amazon sale ranking plazes social network blogging devicescape wrote experience couchdb nosql database device robot driven device universal communicator nokia universal communicator vodka internet tablet started replace laptop universal communicator latest internet communication software update rhapsody using maemo tablet mozilla fennec browser firefox o desktop summit geoclue summer code nokia map travel guide sort logistics public transport much push idea forward maemo project google soc project mentored porting geoclue maemo nokia decided go proprietary result geoclue gnome mobile jussi got job field one device market geoclue meego google mobile map making step nokia fully open hackable one offline copy wikipedia qaiku frankencamera driver maemo downloads maemo downloads quality assurance gsoc mentor summit maemo downloads completely open crowdsourced way serving million downloads popular apps ported meego open collaboration service enter meego london meego infrastructure would meego need common user identity harmattan widelypraised understanding meego linux foundation governance model empire strike back mobile linux winter meego webos dead tizen meego based product plan postpc era patent war win big humble symbian device app store new record label disintermediation artist label universal runtimes mobile app gold rush developer losing money anticompetitive restriction universal runtime already back return meego future openness mobile openmoko mer mer back open mobile linux track tablet powered free software jolla jollamobile twitter account maemo forum tech blog community infrastructure first press release mer project carsten munk explains meegon,much written emerging postpc era new possibility brings limitation imposes developer creativity planning record experience mobile revolution lense maemo mobile linux ecosystem much spirit texrat excellent piece today news made even urgent new hope linux computer every pocket starter ought said newcomer mobile internet back already blogging internetconnected psion pda early routinely publishing travel journal way even psion experience maemo something special glimpse tablet future real mobile story started nokia internet tablet maemo nokia web browser device waiting desk returned south africa nice small linuxpowered internet appliance able utilize either wlan connection mobile phone connection via bluetooth device compact lightweight enough basically carried time also screen good enough reading almost website two factor serve make web r feed ubiquitously available opening interesting possibility wonder felt realworld hitchhiker guide galaxy however douglas adam probably mind would really possible today joke written back reality internet wikipedia quite much hitchhiker guide galaxy electronic device answer question anywhere anytime scifi anylonger nokia internet many thing people associate ipad already common u old internet tablet time getting morning news google reader like pulse android tablet sharing location friend via plazes like people foursquare difference back tablet bit exclusive club linux enthusiast early stage maemo important learning experience big mobile player could interact free software community everything went perfectly quickly gained active community developer around next software update device brought voip instant messaging device community brought mobile map later maemo mapper would go legit option openstreetmap instant messaging capability proved useful quickly spent last two day driving helsinki poznan poland midgard developer meeting proved good field test maemo needed instruct people back home project detail using google talk medium capability also made possible watch movie tablet point regular community member using tablet various purpose even writing simple piece software late involvement community deepened extensively midgard system selected running much community infrastructure conducted study migratingintegrating existing service maemoorg midgard cm framework based study decided go ahead setup new environment nemein participating project midgard expert organization interested history midgard may find maemomidgard feasibility study worth read u great fit many midgard developer already fan maemo nokia plan run community infrastructure open manner meant code made open source possible contributed midgard upstream project joined excellent people like niels ferenc reggie running community infrastructure ever since time would introduce useful new service like social news aggregation karma brainstorming hugely succesful maemo downloads talk later maemo becomes mainstream clearly hacker device soon followed cool retro design know actual sale number advertised quite actively held sixth place amazon sale ranking computer tablet really got creativity flowing quickly brought locationawareness plazes social network others community made blogging possible devicescape brought another feature wifi autologins pas annoying captive portal many public access point io device automatically pop authentication dialog situation weird even common feature mobile os later gave old mother wrote experience internet tablet present almost imperceptibly life dawn till dusk wake u morning tell news evening small stylish mix well environment utility include eg browser surfing net skype phone call several radio smallness allows enjoyed together separately often happens personal computer several time day look weather information tv programme guide also use looking dog need home important project moment sound quite ipadesque since internet tablet still new thing lot experiment happening ported couchdb nosql database device uncommon see robot driven device universal communicator nokia entered picture late bringing hardware keyboard maemo land would device dubbed universal communicator would use primary computer travel talking vodka time instead latest internet tablet nokia device week really started replace laptop many situation idea universal communicator mobile device used connect various communication network including telephone instant messaging social network latest internet communication software update fit description quite well one seeing future potential internet tablet around time company like rhapsody started experimenting mobile strategy using maemo tablet testbeds mozilla also finding mobile story fennec browser development would later result highly promising firefox o effort maemo user getting preview future even communication feature key still fondly remember video call internet cafe amsterdam girlfriend phone stolen gran canaria desktop geoclue summer code another big feature gps suddenly would nokia map everywhere time interested locationbased service knowing device could act travel guide help sort logistics guide people public transport much soon appeared opportunity push idea forward mentor maemo project google soc project mentored jussi kukkonen work porting geoclue maemo end nokia decided go proprietary positioning framework result soc project got geoclue gnome mobile jussi got job field via gnome mobile stack geoclue already least one device market interest geoclue grew would spend next couple year traveling conference give talk eventually geoclue would adopted major linux distribution meego ambitious idea would emerge later service like google location awareness enabled tablet interesting thing like mobile map making step big shift maemo land release nokia beloved tablet become smartphone kind smartphone fully open hackable one maemo computer platform happens fit pocket omap linux kernel xorg server gstreamer telepathy tracker gtk qt also available many telephony stack also sm also work mean maemo transformed smartphone platform landscape mode default amazing display full qwerty hardware keyboard mozilla based browser providing www used get expanding concept feature computer always supposed freedom concern need unlock jailbreak maemo installing application getting root access decide trust end device nokia also trust open source community general maemo community particularly helping getting casual user experience path might new successful entry point new wave open source user developer brought rift maemo community older internet tablet upgradeable latest software also amazing device would alwaysconnected device pocket desktopgrade browser full linux system next couple year would device would carry everywhere almost everything full offline copy wikipedia guide talked qaiku social network working back importantly great camera frankencamera driver phone would often take much better picture real camera would say depth one despite advance smartphone hardware software since still know many people consider using phone smartphone could actually make maemo downloads time maemo downloads really got chance shine excellent smartphone rather lacking official application offering community stepped started producing wide range interesting apps device one innovative aspect downloads service quality assurance session application qa last weekend gsoc mentor summit explained maemo downloads approval process work completely open crowdsourced way differs many distribution approval new package involves obscure decision secret handshake service became quite popular february able celebrate serving million downloads far end today total download count stand million popular apps standing around million bad one device since maemo downloads service also ported meego slick ondevice installer client powered open collaboration service enter meego february returning early flight london landed helsinki ominous sm waiting phone get online wake traveling nokia intel announced joining force form meego new mobile operating system time nobody sure would happen would shut maemo migrate everybody meego infrastructure infrastructure would meego need would common user identity eventually much question would get sorted meego would largely run infrastructure several good part like social news downloads copied one effect meego transition conference became grandiose suddenly holding presentation football stadium major hotel conference party whole brewery booked conference handout getting better well people getting tablet meego netbooks develop going joke next year get meegopowered car time meego wider focus meant suddenly talking adapting software different environment big tablet smartphones invehicle infotainment system even deployed meego interactive information display major part meego nokia ongoing harmattan work would eventually produce widelypraised slick alltouch smartphone flawed doomed understand care overriding experience using phone one delight desire yes get bamboozled freeze finding avalanche awesome new apps downside fade comparison abundance positive harmattan ui fresh slick natural anything smartphone world yet introduced physical design unmatched even shiny new iphone feel luxurious hand started comparing nokia latest handset supercar parallel run deep like italy finest mechanical produce found many shop tendency break inspires emotional rather pragmatical response added underdog charm knowing discarded maker deemed unworthy carry nokia crown much time meego widely misunderstood android without java sought set record straight understanding meego post june meego much handset tablet attempt creating standardized industrial linux distribution used anywhere invehicle infotainment device tv indeed handset true open collaborative environment managed linux foundation governance model ensure meego stay vendorneutral platform anybody build product top empire strike back mobile linux winter late summer meego webos dead meego nokia entered world redmond webos largely hp decide wanted grew tizen launched ash meego essentially similar plan ambition every instance nokia qt replaced samsung efl obviously causing yet another costly rewrite imagine industrial vendor like car manufacturer felt longadvanced meego based product plan rug suddenly pulled however jury still whether tizen succeed ever since open mobile ecosystem killed appalled direction postpc era taking u patent war lockeddown app store world mobile software becoming power play win big everybody else loses largely reason carry humble symbian device instead current breed smartphones existing mobile ecosystem either dystopic turmoil get involved app store new record label much software disintermediation making world run smoothly removal middleman interesting software developer driving world full middleman world suddenly ask permission something new world everything must go rule regulation app store without oversight developer suddenly abused stage artist label take risk effort building software user middleman invalidate hard work arbitrarily making impossible ecosystem run app even accept software take hefty cut proceeds make sense independent developer universal runtimes many u started programming career free world whether building software linux window mac web could largely anything could publish software free license charge license fee provide rental service limiting factor would whether potential user liked software fever mobile app gold rush made many throw away freedom developer losing money process seems hardly worth desktop mobile locked behind anticompetitive restriction often justified name security many developer drawn last open frontier web addressed detail universal runtime ycombinator paul graham said well already back play know know bet webbased application one break without breaking browsing web may way deliver software one work continue work long time webbased application cheap develop easy even smallest startup deliver lot work particularly stressful kind make odds better startup return meego supporter free software last year looking quite grim desktop becoming irrelevant mobile becoming closed instead quietly giving saw opportunity fight back build something new future openness mobile wrote take matter hand precedent much early linux activity came effort community initiative corporate interest openmoko mer latter attempt make fully open version nokia maemo environment suspended meego promised bring benefit well mer back fosdem last winter helped organize open mobile linux track goal bringing together people involved building open version postpc future thought happened meego webos would little interest instead track lively even turn people away remain within limit fire safety regulation common view seems future shared android io bold attempt tablet powered free software course today big announcement jolla hearing rumor something happening postmeego space today seems finally time make thing public jollamobile twitter account went live following announcement expected brought lot notice twitter well maemo forum tech blog much jolla plan still secret kind community infrastructure maemo used sure area become clear time progress jolla first press release nokia created something wonderful world best smartphone product deserves continued together bright gifted people contributing meego success story together international investor partner jolla ltd design develop sell new meego based smartphones jolla team consists substantial number meego core engineer director aggressively hiring top meego talent contribute next generation smartphone production indeed appears jolla learned many lesson earlier stage meego story instead reinventing wheel working together many existing player including mer project carsten munk explains record jollamobile mer mer jollamobile jollamobile us contributes mer mer mobile core without uis hardware adaptation usable used many different company many different contributor work know world mobile difficult one many failed effort history thing going jolla excellent technical base linux mer qt battlescarred people able produce excellent nokia phone hopefully existing maemo community wish luck endeavor look forward day proudly show meegon writing story stormy berlin weekend wearing mer project tshirt watching twitter feed fill supportive comment jolla mer exciting time
