ID,Source,Tag_Code,Tag_Name,Title,Url,ProcessdedTitle,WeightedContent,Content
1,Lobsters,ipv6,IPv6,Examining IPv6 Performance,https://labs.ripe.net/Members/gih/examining-ipv6-performance,examining performance,performance measuring performance measurement result connection robustness relative round trip time rfc conclusion apnic blog ripe,every often hear claim service support technical issue cost business issue simply service operator view offer inferior level service compared offering service would exposing client inferior level performance service really case inferior cousin term service performance let try answer question using measurement article like report result large scale measurement performance looking relativity performance performance networking term performance many aspect often might characterise network performance carrying capacity endtoend delay level delay variation jitter parameter could affect application performance large scale data transfer affected carrying capacity endtoend delay raw encoding voice video stream could sensitive jitter endtoend delay looking relative performance two ip protocol many performance concept fall scope two session running endpoint using endtoend transport protocol using application end performing transaction much time vary ip protocol using two session much observe performance constant across transaction case vary vary ip protocol appear two aspect performance vary two protocol impact end result first reliability protocol connection attempt successful observe higher connection failure rate one protocol middleware deployed network path dropping ip packet based ip protocol second round trip time even though two endpoint involved network path used one protocol may vary used routing world routing protocol often operates perprotocol basis even peering transit arrangement used provider may differ protocol result divergent path across network also subtle issue packet handling within router depending header option ip packet depending type router ip packet one protocol switched via optimised pathway packet protocol switched via slower path result situation packet one protocol may require time traverse network longer transmission time two endpoint greater impact performance network transaction lead observation purpose comparing performance two version ip would like look relative level reliability connection establishment relative round trip time across series experiment factor held constant changing ip protocol impact anticipated performance network transaction measuring performance measurement based data collected end user measurement measurement technique us advertisement distribution network load measurement script user browser script fetch three invisible pixel one using url accessible using second third accessible using either protocol pixel loaded experiment server full packet log recorded server actual measurement performed server end user side endpoint connection failure challenging measure server task aspect attempting measure something fact exist however using tcp measurement one aspect connection failure visible server tcp us threeway handshake start session normally look like figure server receives opening tcp packet tcp syn flag set server respond tcp packet syn ack flag set connection complete server receives ack packet figure tcp handshake one visible form failure hung connection server see responds opening syn fails receive ack complete connection measure protocol relative ratio hung connection percentage connection attempt fail complete number different considering connection complete picture connection failure may even see initial syn attempted connection useful comparative metric allows u directly compare one aspect connection robustness second measurable quantity endtoend delay measured round trip time tcp provides constant record round trip time measurement looking server time data sent time data acknowledged however data noisy element delayed acks tcp protocol client side issue internal job scheduling host operating system browser similar serverside issue one way avoid much added noise component underlying signal round trip delay look time taken complete tcp connection reception initial syn ensuing ack tcp connection operation normally performed within operating system kernel function le prone imposed jitter external factor offer u one clearer way view endtoend round trip delay let compare using metric connection failure relative rtt measurement result experiment initially performed performed second time giving u mean see whether situation moved past year connection robustness figure show daily connection failure rate across comparing striking bad establishing connection consistent record connection attempt failing complete comparison failure rate figure connection failure rate protocol failure rate dropped across period figure isolated spike appear form port scan figure connection failure rate failure picture becomes clearer address used attempt connection sorted teredo prefix prefix unicast address prefix breakdown connection failure rate address type shown figure figure connection failure rate teredo highly unreliable time showing daily connection failure rate consistently greater teredo connection attempt teredo relatively complex operation objective establish usable nat state count resultant failure rate illustrates proposition teredo perhaps liability positive contribution failure rate end admittedly better teredo absolute term still unacceptable unicast show better failure rate connection attempt absolute term failure rate still somewhat unacceptable certainly far worse comparable failure rate le changed intervening year data analysis repeated looking connection failure comparable data overall connection failure shown figure figure connection failure rate protocol data complete entire period packet capture data period september october also visible discontinuity data september july august period measurement platform used combination advertisement scripted using adobe flash advertisement platform ceased support flash september change profile changed relativity system used measurement connection failure rate show steady decline year figure connection failure rate mid november figure connection failure rate day four year ago poor connection performance largely due prominence use teredo excessive connection failure rate helped widespread use better intervening four year teredo disappeared due largely combination successive release window system effectively deprecating teredo withdrawing microsoftoperated teredo relay service teredo affectively disappeared poor ability complete connection changed greatly either connection failure still connection figure connection failure rate day discount connection failure resulting profile average connection failure rate connection far better seen still room improvement comparable number infrastructure heading perhaps two lesson draw measurement first general ip tunnel best idea whether inside even generic ipinip lisp ip tunnel increase fragility resultant service environment need tunnel better avoid second lesson large amount largely forgotten unattended device network causing issue appears seeing unicast failure network equipment working sync end client base likely many failure case endpoint assume connectivity emit packet filter network configured block incoming packet relative round trip time second aspect relative protocol performance examined relative network path delay look endpoint using compare relative round trip time rtt experiment server back looking instance network delay diverges two protocol delay experienced one protocol notably different delay along path informally answer question faster slower way delay measured take initial tcp syn handshake figure measure elapsed time reception opening syn ensuing ack measurement script used experiment asks endpoint fetch set url including url set us common unique dns name component allowing association common unique name component source address endpoint given syn rtt measurement every endpoint possible associate appropriate pair measurement endpoint difference two measurement rtt two endpoint figure number reason two rtt value might differ could network path may differ two protocol going case connection us involves third party tunnel relay even conventional unicast routed distinct protocol different network path unusual even two path precisely rtt measurement may differ slightly older router passed packet optimised switching path packet switched passing packet slower software based processing far le prevalent today may still case instance another factor transient queuing delay seen standard ping measurement lightly loaded network amount time packet spends queue may vary successive ping test measurement tcp syn time analogous ping measurement using tcp rather icmp try compensate small extent queueinduced jitter experiment us lowest rtt seen multiple tcp connection two endpoint address figure tcp syn rtt measurement relative rtt measurement conducted march result shown figure point right centre line faster left faster pair differentiated whether address show teredo address address unicast address unicast measurement clustered around midpoint smaller number sample time slower equivalent tunnelling predominately slower though surprising number case tunnelled measurement faster figure relative rtt measurement march measurement performed november result measurement shown figure figure relative rtt measurement november due small number measurement point teredo shown figure figure show slower case unicast hand even seen faster one half time distribution time measurement shown cumulative distribution plot relative time difference figure figure cfd relative time difference november using measurement granularity evident rtt within rtt measurement slower measurement faster also time case show time rtt measurement slower paired measurement look centre point detail using finer level measurement granularity figure show midpoint using granularity measurement figure cfd relative time difference november granularity unicast rtt faster time faster time similarly unicast rtt slower time slower time clear message suboptimal way access message rfc published may stop good advice indeed prevalent today world one last graph figure show relative level use dual stack equipped device still lot good news declining relative importance volume unicast increase year seen decline midnovember perhaps problem disappear relevance coming month figure relative proportion conclusion conclude relative performance measurement measurement show large set individual comparison path two dual stack endpoint compared two protocol measured tcp syn round trip time roughly equivalent measurement within time connection performance roughly equivalent connection established probability establishing connection current connection failure rate connection seen connection attempt equivalent connection failure rate unicast nine time higher connection attempt still scope improvement note article first published apnic blog also presented ripe
2,Lobsters,ipv6,IPv6,Apple and IPv6 - Happy Eyeballs,https://www.ietf.org/mail-archive/web/v6ops/current/msg22455.html,apple happy eyeball,apple happy eyeball,apple happy eyeball hi everyone today apple released first public seed io o x el capitan seed third developer seed released yesterday include improved version happy eyeball based testing make happy eyeball implementation go roughly io yosemite io el capitan beta previous implementation four year ago designed select connection lowest latency matter agree internet changed since report indicate biasing towards beneficial customer mainstream instead exception le broken tunnel carriergrade nats increasing number throughput may even better average updated implementation performs following query dns resolver aaaa dns record cache request sent back back wire aaaa first first reply get aaaa send syn immediately first reply get expecting aaaa start timer timer fire send syn get aaaa window move address selection list ip address either dns cache receiving close together perform address selection algorithm sort algorithm us historical rtt data prefer address lower latency leeway historical rtt two compared address within use pick best one list sorted send syn first address start timer based average variance historical tcp rtt roughly speaking start second address around time send syn retransmission first address first address reply synack win race cancel tcp connection attempt behavior prof successful beta period expect traffic apple product future note however describes current beta detail subject change please test mean love see test result receive feedback would like personally thank jason fesler paul saab help investigating issue testing thanks david schinazi coreos networking engineer
3,Lobsters,ipv6,IPv6,The IPv6 mess (2003),http://cr.yp.to/djbdns/ipv6mess.html,mess,j bernstein internet publication djbdns mess address crunch basic interoperability issue teaching computer talk address mess part one incompatibility another way understand cost analogy transition mx record mess part two incoherence mess part three distraction,j bernstein internet publication djbdns mess address crunch computer internet talk version internet protocol computer internet public address similar phone number example target packet data identified public address problem billion public address many address already allocated happens run public address partial solution computer really need internet company computer browsing web nt need put computer internet single computer internet proxy retrieves data web server behalf computer forward telephoneoverip call computer etc people agree however proxy merely delay inevitable longterm solution version internet protocol many address improvement survive without really important expansion address space basic interoperability issue suppose someone sell public address put computer address find ca nt reach cnn server google server company web server react example called interoperability failure right many fact internet server ca nt talk client public address change using public address instead public address disaster client similarly many fact internet client ca nt talk server public address change using public address instead public address disaster server conclusion client safely deployed public address practically every server learn talk client server safely deployed public address practically every client learn talk server public address inherently lower cost public address many cost advantage wo nt matter long public address noticeably le useful address right public address practically useless response page one commentator said set public address address could talk various public address site nt mean address useful entire internet reachable small part internet reachable sysadmin could eliminate public address ca nt eliminate public address example web page public address magic moment moment people start relying public address replacement public address moment internet longer threatened address crunch teaching computer talk address reach magic moment teach every server internet talk client public address teach every client internet talk server public address answer go every place address appear allow address place several illustrative example public address appear ip packet sent network tcp packet udp packet extend format ip packet allow address change operating system handle new format public address appear address configuration file operating system corresponding part memory inside operating system extend file memory format allow address change operating system accordingly public address appear routing configuration file operating system corresponding part memory inside operating system extend file memory format allow address change operating system accordingly public address server appear server configuration file corresponding part memory inside server program operating system listen address function extend file memory format allow address change server operating system accordingly public address server appear address record record dns packet dns software configuration file extend addressrecord format dns protocol extend addressrecord format dns software configuration file change dns software accordingly unfortunately instead simply allowing record people introduced new aaaa record dns protocol creating several unnecessary complication dns software public address server appear memory inside client application browser send packetmake connection function operating system extend memory format allow address change client operating system accordingly public address client appear authorized client configuration file server corresponding part memory inside server program connecting function operating system extend file memory format allow address change server operating system accordingly quite place address appear example routing protocol ftp protocol etc need extended software upgrade done practically every internet computer reached magic moment people start relying public address replacement public address example client public address let say address connect google web server client sends udp packet com dns server asking address wwwgooglecom client software intermediate computer server software upgraded handle client extended address dns server sends packet back client saying try asking googlecom dns server client sends packet googlecom dns server asking address wwwgooglecom dns server sends packet back client saying wwwgooglecom client sends http request google web server google web server responds similarly server public address able receive connection client mess part one incompatibility unfortunately straightforward transition plan described work current specification designer made fundamental conceptual mistake designed address space alternative address space rather extension address space word current specification nt allow public address send packet public address also nt allow public address send packet public address public address exchange packet specification could defined functionally equivalent public address public address embedding address space address space nt rfc proponent say rfc local option part architecture particular say client supposed send packet address using rfc address might sound like small mistake working move everything care problem mistake gigantic effect cost making work first place look google example client public address exchanging packet server public address unfortunately current specification nt work server administrator must acquire public address announce address dns alongside public address configure server respond address alongside public address else client fail one commentator responds equivalent dhcp ca nt imagine think contradicts anything saying short mistake design making work mean much upgrading software every administrator server public address reason every administrator client public address go extra effort acquire enable public address example difference google nt published address wwwgooglecom exactly google reward spending time setting useless address perfectly functional machine contrast software year current specification make magic moment happen convince thousand network programmer something immediate benefit also convince million computer administrator something immediate benefit incredibly bad way handle transition one commentator characterizes page saying take massive amount work convert application completely missing point even programming done public address still would nt useful would nt able talk internet administrator internet would nt bothered setting public address another way understand cost excerpt message sent ngtrans mailing list like connect office computer network make service web server example mail server available client around world control operating system application ready willing make various change code however refuse provide information program beyond already address refuse work outside changing program going ask isp address example going touch dns data big question achieve taking advantage without violating might think strange willing write code maybe quite bit code willing send message isp make trivial configuration change nt backwards answer actually talking huge number site nothing special site situation repeated n site code written trivial request trivial configuration change repeated n time see reason user suffer cost manual configuration behalf user object transition plan impose cost maybe put much time nt care five minute spent acquiring connection configuring software look easy say well looking much larger group user nt putting even five second better thing configuration nt automatic wo nt happen analogy transition mx record long time ago smtp client found smtp server looking record people decided introduce mx record extra flexibility right client find smtp server web server etc looking record making connection people decided introduce aaaa record connection people thought every server internet forced set mx record could start deploying client used mx record ca nt talk record people think every server internet forced set new address publish aaaa record start deploying client use aaaa record ca nt talk record much le expensive transition plan one adopted client continue using record mx record effectively embedding record mx space allowed existing server talk mx client without effort part server administrator much le expensive transition plan one adopted client continue using record using embedding address space allows existing server talk client without effort part server administrator deployment mx client depended vitally client fall back record absence mx record approach pestering every dns administrator internet set mx record would miserable failure deployment client depends vitally client fall back record talk server address absence aaaa record approach pestering every computer administrator internet set address aaaa record miserable failure many people nt understand importance embedding example rfc characterizes benefit doubt rather essential part protocol definition many people nt understand importance embedding example keith moore characterizes guess rather essential part protocol definition looking oldclientnewserver instead newclientoldserver transition period old client connecting record new client also understood mx server reachable record old client gone looking oldclientnewserver instead newclientoldserver transition period old client connect address new client connect address address server reachable address old client gone mess part two incoherence get worse designer nt transition plan taken helpful step typically declare success support real problem making public address work well public address still nt solved consider example junichiro itojun hagino recommends mail server public address set public address nt make sense recommendation rather requirement mail server nt server client talking address going reach magic moment answer wo nt seem assume single grand unified plan would suit everybody need pekko savola wrote nt think reasonable assumption said every computer internet need software francois dupont said please serious people clue manage transition next several month exploring transition scenario working overall architecture transition margaret wasserman wrote architecture never materialized randy bush shut ngtrans working group time ngtrans declare victory combined network longer future today wake folk combined network bad joke without coherent transition plan credibility certainly going waste time implementing halfbaked plan want see plan implemented universally deployed produce magic moment many year ago osi proponent convinced osi network wave future created sort osi software sort amazing technical feature never seemed understand vast majority internet user nt sign sad mess part three distraction get even worse designer putting energy pointless effort wo nt bring u closer magic moment wo nt help magic moment example people make quite fuss replacing mechanism computer nt internet talk local proxy wake folk nt problem need solve use private address talk proxy address crunch involves public address fix need public address talk site another example people focus building optional connection internet big new network see discussion computer might talk computer looking one plan wake folk nobody join network ca nt talk google cnn etc need practically every computer internet talk network wrote response keith moore keith one network aolcom cnncom csutkedu incredible number site normal people call network internet insist connected internet exchange email web page internet site universe imagining site split across two global network trouble talking ancient historical mistake never repeated kind idiot would first disconnect site original internet favor new internet nt cut keith want succeed global network figure make address useful address plan keith way make address work teach every internet computer talk address option sysadmin might configure something automatically enabled part regular softwarehardware upgrade done overnight course crux transition remain astonished wg nt settle detail year ago
4,Lobsters,ipv6,IPv6,The network nightmare that ate my week,http://blog.bimajority.org/2014/09/05/the-network-nightmare-that-ate-my-week/,network nightmare ate week,first issue juniper network second issue technical detail vast majority mld rfc handle neighbor discovery multicast group tig like,hour ago sent following dear colleague email lightly edited remove private detail user work trying week whose work disrupted week unplanned network outage deepest apology writing explain know far cause problem done resolve action still remain taken course summer suffering variety difficulttoidentify network problem network switch observed using far cpu historically case variety packet storm appear caused forwarding loop despite fact run protocol designed prevent loop taking place variety unexplained switch crash first issue starting early wednesday morning switch serf server room began crash unexpectedly way contrary design requires human physically powercycle order restore service switch crash affected variety research group system well central afs server newest set openstack hypervisors initially thought consequence power failure experienced tuesday evening vendor juniper network suggested reinstallation procedure member node switch recover possible corruption flash medium switch member node boot unfortunately resolve problem although put recurrence hour thursday morning engineer juniper came stata help u determine cause crash come resolution assisted five juniper engineer advanced technical assistance center via teleconference took rest day thursday come action plan resolve issue although still without identifiable root cause failing switch node unresponsive console well network none obvious fix tried effect switch log reboot stopped crash eventually decided upgrade one switch latest version juniper firmware platform simultaneously make several configuration change reduce use code path le well tested combination explain next appears resolved issue particular switch monitoring switch weekend make sure remains stable juniper dispatched replacement hardware three member node switch case prof necessary point believe problem caused software hardware failure thus association power outage red herring second issue summer experiencing variety issue core switch continued experience issue even upgrading firmware recommended juniper emergency unscheduled basis two monday ago serious issue appear bridge loop occasionally created saturate cpu core switch thereby preventing running necessary protocol processing believe official confirmation yet result priority inversion relative flooding broadcast multicast traffic network process implement spanningtree protocol construct loopfree topology deactivating redundant link unable run cause access switch think uplink longer connected spanningtree bridge cause sorceror apprentice packet amplification multicasts forwarded core link simultaneously add overload core switch sometimes core switch would recover condition without human intervention several time forced physically powercycle one break loop trying develop configuration change make le likely future changing assumption spanningtree protocol limit possibility bridge loop forming first place work yet done mean time made change network reduce cpu load core switch make le likely spanningtree process get starved first place principal change made regard disable csail network come conclusion much design implementation botched protocol designer vendor others simply unsafe run production network except limited geographical circumstance tight central administration host technical detail fundamental design problem related function shared network like ethernet separate protocol arp used host find mac address station network host want send packet sends broadcast frame asking ip address intended recipient network sends reply say hey mac address case missed ab intended recipient network sender keep broadcasting periodically either get response give separate protocol called neighbor discovery us packet broadcast soliciation packet must sent multicast address rather use standard host multicast address neighbor discovery protocol instead specifies every host must join another multicast group one billion distinct solicited node multicast group chosen function system address neighbor discovery packet sent group rather broadcast mean vast majority multicast group use anywhere universe single member theory worse sending arp broadcast practice much worse system must also implement multicast listener discovery protocol station network report requested multicast group member send report group mean flooding report throughout network network switch way knowing ethernet multicast address desired port furthermore mld packet required protocol transmitted router alert option cause router bounce packet hardware forwarding software meaning flooding arp broadcast fastpathed usually implemented silicon mld listener report multicasts must slowpathed since still implemented large network like campus network building mld processing generally poorly tested optimized network vendor core switch send mld allgroups query every second direct end host splay response interval recommended mld rfc theory could implement mld snooping across network reduce overhead flooding mld listener report packet however new raw code least juniper operating system well exercised anywhere aware even tried would require least two entry multicast zone every switch tcam hardware forwarding table every host every network csail handle neighbor discovery multicast group switch entire tcam space dedicated multicast entry would barely enough support csail one major issue privacy address privacy address incredible botch added year ago simulate good old day dialup internet machine changed ip address time normal usage every host generates address listening broadcast router telling network prefix first bit address use appending fixed function network interface card mac address privacy address host simply generates pseudorandom number pretend mac address applies function host also maintain traditional address used incoming connection random address used outgoing packet worse random address changed regularly typically daily old random address kept around fairly long time order week case host network want call back new address generated thus typical machine say ubuntu workstation default configuration end claiming eight address one time mean nine multicast group mean tcam entry exhausted ubuntu workstation generally issue portable machine like laptop forget old random address whenever prefix change happens whenever disconnected one network connected another serious issue workstation course server connected fulltime single network random address also problematic network administrator mean unable trace back problem machine owner removed even briefly network interim used ubuntu example hardly worst offender seen window machine address recall mean every second transmitting multicast packet per second flooded network problem caused broken intel nic driver window attempt offload processing nic workstation standby mode support wakeonlan get updated driver intel fix problem window update still distributing broken driver seen machine merely flood network copy single mld listener report sometimes hundred packet le second first learned back july started observe cpu overload switch serve area turned one public window machine outside tig office knew look saw many machine thing pretty much new dell workstation running window bug unless intel ethernet driver updated reason making broadly available reliable way ensuring privacy address disabled client already disabled csail ubuntu course many client control centrally probably move towards supporting stateless autoconfiguration rely assign stable traceable address client way away able implement time finally got home last night around awake nearly hour never see another dawn office soon update stéphane bortzmeyer first point rfc address issue privacy address let implementation come soon correction actually solicited node multicast group billion posted originally said email realized wrong miscorrected posted like like loading related
5,Lobsters,ipv6,IPv6,100% of Comcast's network is now IPv6 dual stack,http://corporate.comcast.com/comcast-voices/comcast-reaches-key-milestone-in-launch-of-ipv6-broadband-network,comcast network dual stack,world largest native broadband deployment published last week internet society nbccom nbcsportscom universalstudioscom,heel second anniversary world launch comcast already recognized world largest native broadband deployment pleased announce percent comcast broadband network fully deployed support dual stack connectivity addition according july launch measurement published last week internet society comcast surpassed percent deployment deployment critical step supporting growing need internet resource engineered brought fruition year ago continue dwindle due explosion device hooked global network deployment also necessary step internet thing device leverage broadband infrastructure order think function continues rise next generation network technology like segment routing service function chaining begin take shape significant achievement comcast also proud continued commitment seamless ubiquitous deployment comcast effort pioneering past year driving force across entire internet ecosystem leading faster innovation competition comcast deployment continues expand penetration expected reach nearly percent end beyond plan include support additional residential device well launch capability business internet customer addition comcast continues leverage across entire product service portfolio support planned xfinity platform xfinity voice trial slated later year content front comcast also pleased announce recently launched support several nbcuniversal digital property including nbccom nbcsportscom universalstudioscom also pleased announce achieved significant traffic milestone recently crossed internet facing native traffic reaching goal would possible without effort content partner like google enabled youtube streaming dual stack enabled default increased support across content consumer electronic critical ensure success transition across internet ecosystem
6,Lobsters,ipv6,IPv6,Need to move to IPv6 highlighted as Microsoft runs out of US address space,http://www.networkworld.com/article/2363543/ipv6/need-to-move-to-ipv6-highlighted-as-microsoft-runs-out-of-us-address-space.html,need move highlighted microsoft run u address space,also network world could open network zeroday attack bestworst apple iphoneys iphone edition blog post earlier week faq manual website facebook linkedin,microsoft forced start using global stock address keep azure cloud service afloat u highlighting growing importance making shift ip version nt mention blog post use protocol would make address problem disappear newer version internet protocol add almost inexhaustible number address thanks long address field compared bit used version since every connected device internet need ip address increasing pressure move noncomputer device come online socalled internet thing also network world could open network zeroday attack bestworst apple iphoneys iphone edition address space fully assigned u meaning additional address available microsoft said blog post earlier week requires company use address space available globally new service saidmicrosoft make clear ip address registration origin equate physical location example address registered brazil allocated device service physically located virginia azure user install new server still hosted u data remain stateside microsoft saidsmaller company already keep business going likely see future according jörgen eriksson project manager se organization charge swedish top domainthe adoption foreign ip address give breathing room also drawback become difficult use geolocation service rely ip address geolocation ad revenue powerful driving force may help speed implementation eriksson saidmoving may stimulate competition among isps new competitor able get address need easilyas rirs regional internet registry started run version address need implement become acute rir job manage distribute register ip address within respective regionsin april arin american registry internet number said million address extra frugal may circumstance longer fulfill qualifying request due lack inventoryon wednesday lacnic latin america caribbean network information center announced considered exhausted service region organization continue distribute address also greatly reduced rateto get around shortage market address created company even make acquisition get hand address according axel pawlik managing director ripe ncc réseaux ip européens network coordination centre long run rolling sensible solution saidmicrosoft say like vendor committed rollout foundational work enable azure well underway according faq however unable share date support generally available time saidthey key handling transition smoothly possible planning seem happening consistency people distracted trying make money looking next week priority point next week priority problem pawlik saidthere wealth material online people want learn protocol ripe posted manual website network architect network manager need help implementing organizationssend news tip comment mikaelricknas idgcom join network world community facebook linkedin comment topic top mind
7,Lobsters,ipv6,IPv6,Eliminating the last reasons to not enable IPv6,http://blog.cloudflare.com/eliminating-the-last-reasons-to-not-enable-ipv6,eliminating last reason enable,gateway u introducing pseudo class e take five minute sign addendum nitty gritty detail ngxopenresty always hiring,today june last two year date celebrated world day cloudflare offered full support well gateway since preparation year day scanned world largest website order figure many available good news bad news good news gateway widely used order enable web fact site support via cloudflare bad news cloudflare google facebook big people shown adopted without performance penalty still world largest website available disappointingly spite cloudflare offering free half customer turned gateway silver lining get current customer enable gateway nearly reach milestone world largest site available goal mind set find solve last stumbling block customer enabling u cloudflare make supporting website ridiculously easy backend support visitor arriving connection transported via protocol endtoend backend support cloudflare accept visitor seamlessly make request server defaulting gateway new customer several month existing customer enable single click made easy stopping site nt yet enabled answer usually legacy software assumes world often software handle session stop fraud abuse example popular sometimes controversial website cloudflare customer notoriously mischievous audience sometimes user try spam service keep spammer bay us algorithm look suspicious behavior unfortunately algorithm use visitor ip address one parameter assume ip format long term solution course platform like rewrite software accommodate take time wanted provide stopgap solution would allow cloudflare customer enable quickly worked upgrade software fully support introducing pseudo accommodate software assumes world today enabling new cloudflare option pseudo option whenever connection established add http header request pseudo address using class e ip space address class e address space reserved experimental actual traffic originate point class e space designated specific use adjust schema pseudo header class e space give u possible unique address much smaller undecillion possible address larger number ip seen largest website pseudo service us hashing algorithm applied top bit connecting address order map visitor one class e ip hashing algorithm always produce output input address always result pseudo address two option pseudo service u automatically add header parsed software needed u overwrite existing cfconnectingip xforwardedfor header pseudo address advantage overwrite option case wo nt require software change choose overwrite option append new header order ensure still find actual connecting ip address debugging pseudo service like gateway available customer even free plan hope eliminate one last reason holdout already cloudflare customer login account make sure enabled cloudflare setting page find toggle pseudo well yet cloudflare customer take five minute sign world still time get site network join modern web world day come end way today available addendum nitty gritty detail technical audience nitty gritty detail implemented pseudo chose use hashing algorithm risk used cryptography faster many alternative acceptable uniformity hash space note risk collision ie two address map pseudo address however abusefraud system take account already order deal nats instance multiple people may share single ip cloudflare use modified version nginx wrote request processing code lua relying ngxopenresty app server lua code proofofconcept prototype hashing algorithm function grab bottom bit hash suppress leading zero regexp always match local hash local mod ngxrematch hash joi normalize first byte fit class e space done using subtraction lua nt builtin bitwise operator local tonumber mod end return stringformat tonumber mod tonumber mod tonumber mod end since every request need pas hashing algorithm wanted make fast possible set work optimizing lua prototype speed result function grab bottom bit hash local local byte normalize first byte fit class e space bitbor bitband return stringformat end p writing lua code like look fun always hiring
9,Lobsters,ipv6,IPv6,"Goodbye, IPv4! IANA Starts Allocating Final Address Blocks",http://www.internetsociety.org/deploy360/blog/2014/05/goodbye-ipv4-iana-starts-allocating-final-address-blocks/,goodbye iana start allocating final address block,announcement tuesday announcement state iana allocated final address block free pool global policy post exhaustion allocation mechanism iana really check start page great example moving network application seeking case study world launch please let u know update list statistic site world launch measurement update excellent discussion thread currently underway hacker news update number resource organization nro statement,address exhaustion got real announcement tuesday internet corporation assigned name number icann indicated starting process allocating final available block address regional internet registry rirs iana recovered address pool icann operator iana announcement state icann announced today begun process allocating remaining block internet protocol version address five regional internet registry rir activation procedure triggered latin america caribbean network information centre lacnic supply address dropped million move signal global supply address reaching critical level device come online demand ip address rise incapable supplying enough address facilitate expansion icann encourages network operator around globe adopt allows rapid growth internet folk talking many year address running happening note back february iana allocated final address block free pool address iana worked five rirs recover unused address block establish recovered address pool agreement allocation would start pool first rir hit last block address lacnic recently recovered pool allocated rirs simply address iana give yes enough address overall system right running address today basically toplevel final allocation occur next month part global policy post exhaustion allocation mechanism iana increasingly hard network operator get address new customer new network yet planning transition really need get going want grow network simplest easiest path make move check start page learn get going great example moving network application seeking case study upcoming celebration anniversary world launch great story love help share story others learn please let u know update interested learning adoption going check list statistic site particular look world launch measurement month verizon wireless crossed first time update excellent discussion thread currently underway hacker news article update number resource organization nro statement website
11,Lobsters,ipv6,IPv6,internetworking with TCP/IP (MOOC),http://openhpi.de/course/internetworking2014,internetworking tcpip mooc,hasso plattner institute digital engineering ggmbh hpi internet technology system hpi school design thinking interdisciplinary centre security reliability trust snt hpistanford design thinking research program hpi future soc lab book lockkeeper teletask eccc electronic colloquium computational complexity ecdtr electronic colloquium design thinking research itgipfelblog teletask,professor dr christoph meinel univ prof dr sc nat dr rer nat scientific director ceo hasso plattner institute digital engineering ggmbh hpi full professor computer science hold chair hpi internet technology system area research focus future internet technology particular information security web semantic web social service web well innovative internet application especially domain elearning teleteaching telemedicine besides scientifically active field innovation research design thinking earlier research work concentrated theoretical foundation computer science area computational complexity design efficient obddbased algorithm data structure christoph meinel teach bachelor master course itsystems engineering hpi school design thinking honorary professor computer science school beijing university technology visiting professor shanghai university china senior research fellow interdisciplinary centre security reliability trust snt university luxembourg since together larry leifer stanford university program director hpistanford design thinking research program since chair steering committee hpi future soc lab christoph meinel authorcoauthor book anthology well editor various conference proceeding paper published highprofile scientific journal international conference highsecurity solution lockkeeper internationally patented licensed siemens ag teletask system provides innovative mobile system recording internet broadcasting lecture presentation used many university allover world virtual telelab internet security provides possibility get handson experience practical issue internet information security recently developed teleboard support remote work creative team christoph meinel member acatech german academy science engineering chairman german council advisory board utd meraka south africa member sap security advisory board hosted together hasso plattner first german national itsummit german federal chancellor dr angela merkel founder ceo research lab institute telematics trier christoph meinel chief editor scientific electronic journal eccc electronic colloquium computational complexity ecdtr electronic colloquium design thinking research itgipfelblog teletask archive
12,Lobsters,ipv6,IPv6,Comcast's Xfinity Internet Now the World’s Largest Native IPv6 Deployment,http://corporate.comcast.com/comcast-voices/comcasts-xfinity-internet-now-the-worlds-largest-native-ipv6-deployment,comcast xfinity internet world largest native deployment,comcast world launch measurement measure third arris http,past year shared update effort especially milestone enhance quality service today comcast xfinity internet native deployment grown become world largest deployment measured internet society world launch measurement internet society isoc measure deployment using several data source including data google facebook yahoo akamai measurement percentage network equipment enabled native importantly number people actively using native day day basis three month deployment grown third first critical factor growth launch support arris touchstone telephony wireless gateway modem brought four million customer additionally comcast working closely cisco system ready cable modem termination system cmts contributed expanded deployment support across comcast broadband network thus milestone one comcast one cable industry supplier internet general today growing comcast xfinity internet customer actively provisioned native dual stack broadband internet service native support deployed broadband network goal early information comcast effort please visit http
14,Lobsters,ipv6,IPv6,"Happy IPv6 Day: Usage On the Rise, Attacks Too",http://blog.cloudflare.com/ipv6-day-usage-attacks-rise,happy day usage rise attack,growth largest provider web free gateway attack spamhaus signing cloudflare,june known world day thought good time look trend usage across cloudflare network two big theme seen usage growing steadily current pace still going living many year come majority traffic come legitimate user mobile network attacker beginning launch attack protocol growth cloudflare supported network last year half become one largest provider web offer free gateway allows website available even site origin network nt yet support protocol last year enabled customer cloudflare default today enabled million customer website since beginning connection percentage cloudflare total traffic fluctuate daily minimum january maximum june look overall trend connection network grown since start year digging connection coming appears majority growth mobile network provider increasingly traffic mobile device web passed saw significant drop connection midmarch earlyapril appears large mobile operator appears disabled reenabled connectivity network overall increase usage encouraging trend unfortunately indicates going living time come current growth rate assuming adoption linear take almost year connection surpass connection last connection wo nt retired may thing bit optimistic adoption turn exponential rather linear case connection surpass year month long thereafter extinguish entirely january guess reality somewhere linear exponential case regardless adoption curve look like cloudflare user covered anticipate operating dualstack network support customer fully retired whether take year attack majority connection today coming legitimate user mobile network last two month seen marked increase number web attack largely ddos attack attack typically layer eg syn flood well layer eg application layer attack date ddos attack relatively modest largest seen date generated approximately gigabit per second traffic accompanied much larger traditional ddos novelty attack nt cause significant harm cloudflare system designed cloudflare anticipating transition defense assume world speculate however attacker may targeting way bypassing older protection base protection largely blocklists make strict blocklist perip basis much challenging since number address available attacker significantly larger challenge large blocklist operator like spamhaus currently thinking present challenge attack filtering strategy also present opportunity example since reduces need nats provides user address routable way end device believe time provide ability build significantly accurate allowlists continue monitor overall growth rate well interesting trend attack meantime better way celebrate world day signing cloudflare ensuring site automatically available increasing percentage user accessing free take minute join modern web
16,Lobsters,ipv6,IPv6,New RA Flood Attack,http://samsclass.info/ipv6/proj/RA_flood2.htm,new ra flood attack,new ra flood attack killing maverick killing lion window survives older content killing mac o x window server microsoft readiness update wireless injuring ipad killing mac o x reliably better switch wireless freezing ipad mini baythreat talk killing mac o x crossover cable killing mac o x wireless lan notifying apple attack kill macbook air ipads freezing android phone attack google notified killing microsoft surface attack killing microsoft surface wireless attack http pastebincomaxuxbxxk google notified freezing android phone attack attack kill macbook air ipads notifying apple killing mac o x wireless lan killing mac o x crossover cable data breach password hash new ra flood attack part part part wireless freezing ipad mini killing mac o x reliably better switch wireless attack ipad microsoft readiness update http killing mac o x server work packet capture raspcap reference http http http,new ra flood attack killing maverick killing lion window survives older content killing mac o x window server microsoft readiness update wireless injuring ipad killing mac o x reliably better switch wireless freezing ipad mini baythreat talk killing mac o x crossover cable killing mac o x wireless lan notifying apple attack kill macbook air ipads freezing android phone attack google notified killing microsoft surface attack killing microsoft surface wireless attack attack realistic practical although somewhat sloppy concept attacker macbook air running backtrack vmware wpaencrypted network target microsoft surface although mac immune attack condition attack kill mac kill surface get attack script http pastebincomaxuxbxxk use first download compile good nt attack device without proper authorization google notified sent message security androidcom hello studying vulnerability year large problem window mac linux recent release changed new ra flood tool freeze android device shown video http think aware might good block excessive ra packet firewall implement countermeasure sam bowne city college san francisco freezing android phone attack slightly modified version attack used android phone also kill mac ipad ghz wireless network attack kill macbook air ipads improved router advertisement flood attack first simulates ten normal router sends new ra flood make much effective apple device tried video show kill four device via wireless network notifying apple new version attack powerful enough decided formally notify apple nt expect care much microsoft certainly nt think important window much vulnerable wanted make sure knew sent message productsecurity applecom hello studying vulnerability year large problem window mac recent release changed bring mac second shown video http think aware might good block excessive ra packet firewall sam bowne city college san francisco killing mac o x wireless lan even exciting wireless attack powerful enough kill mac video six simulated router sending router advertisement target one ra per second seventh process sends flood ra mac dy second killing mac o x crossover cable major advance attack essential ingredient router network fast flood six simulated router one process running flood mac o x dy second reliably even simple network consisting crossover cable make attack much practical one demonstrated baythreat required expensive bulky switch separate router data breach password hash new ra flood attack talk gave baythreat first discus issue gave live demo attack killing mac o x window worked thanks k yang set extremely helpful designing performing attack attack start part video part part part wireless freezing ipad mini ipad mini vulnerable ipad ipad shown video adding second ipad wireless lan reduces attack effect greatly interesting opposite see wired network adding router lan necessary kill mac o x reliably killing mac o x reliably better switch used businessclass gigabit switch vyatta router lan gigabit adapter mac o x kill mac o x reliably showing crash ethernet adapter stop configuring address followed whole o freezing wireless attack ipad finally got wireless version attack working nt powerful enough kill device tested reliably make ipad run slowly apps crash whole o crash sometimes device tested window ipad macbook air slowed attack remained usable ipad resistant attack consume cpu making significant difference performance posted microsoft readiness update microsoft readiness update greatly alleviates vulnerability http however available win win server addition provides partial protection patched machine freeze totally attack recovers quickly stop possible better ubuntu linux completely shrug attack adding new address showing deleterious effect video showing attack killing window server mac o x video showing extent microsoft readiness update protects window server also show attack effect window xp ubuntu linux detail earlier test using virtual machine killing mac o x server tested new attack marc hause much powerful kill mac o x server second shown video work captured packet previous weaker attack tool us normal ra option mtu prefix information source linklayer address captured packet newer attack shown two image big fit one normal ra option route information section prefix information section source linklayer address packet burden recipient lot think microsoft apple need pay attention time one crash mac make server restart make suspect could exploited perhaps remote code execution attack packet capture pcap file one new ra one old type raspcap reference previous page old attack mitigation recommendation http marc hause slide presenting version http stepbystep instruction testing older tool http first posted sam bowne page reorganized content section new video added baythreat video added pm attack mac o x simulated router added pm apple notified ipads video added pm android attack google notification added pm microsoft surface attack added maverick win added
17,Lobsters,ipv6,IPv6,Examining IPv6 Performance,https://labs.ripe.net/Members/gih/examining-ipv6-performance,examining performance,performance measuring performance measurement result connection robustness relative round trip time rfc conclusion apnic blog ripe,every often hear claim service support technical issue cost business issue simply service operator view offer inferior level service compared offering service would exposing client inferior level performance service really case inferior cousin term service performance let try answer question using measurement article like report result large scale measurement performance looking relativity performance performance networking term performance many aspect often might characterise network performance carrying capacity endtoend delay level delay variation jitter parameter could affect application performance large scale data transfer affected carrying capacity endtoend delay raw encoding voice video stream could sensitive jitter endtoend delay looking relative performance two ip protocol many performance concept fall scope two session running endpoint using endtoend transport protocol using application end performing transaction much time vary ip protocol using two session much observe performance constant across transaction case vary vary ip protocol appear two aspect performance vary two protocol impact end result first reliability protocol connection attempt successful observe higher connection failure rate one protocol middleware deployed network path dropping ip packet based ip protocol second round trip time even though two endpoint involved network path used one protocol may vary used routing world routing protocol often operates perprotocol basis even peering transit arrangement used provider may differ protocol result divergent path across network also subtle issue packet handling within router depending header option ip packet depending type router ip packet one protocol switched via optimised pathway packet protocol switched via slower path result situation packet one protocol may require time traverse network longer transmission time two endpoint greater impact performance network transaction lead observation purpose comparing performance two version ip would like look relative level reliability connection establishment relative round trip time across series experiment factor held constant changing ip protocol impact anticipated performance network transaction measuring performance measurement based data collected end user measurement measurement technique us advertisement distribution network load measurement script user browser script fetch three invisible pixel one using url accessible using second third accessible using either protocol pixel loaded experiment server full packet log recorded server actual measurement performed server end user side endpoint connection failure challenging measure server task aspect attempting measure something fact exist however using tcp measurement one aspect connection failure visible server tcp us threeway handshake start session normally look like figure server receives opening tcp packet tcp syn flag set server respond tcp packet syn ack flag set connection complete server receives ack packet figure tcp handshake one visible form failure hung connection server see responds opening syn fails receive ack complete connection measure protocol relative ratio hung connection percentage connection attempt fail complete number different considering connection complete picture connection failure may even see initial syn attempted connection useful comparative metric allows u directly compare one aspect connection robustness second measurable quantity endtoend delay measured round trip time tcp provides constant record round trip time measurement looking server time data sent time data acknowledged however data noisy element delayed acks tcp protocol client side issue internal job scheduling host operating system browser similar serverside issue one way avoid much added noise component underlying signal round trip delay look time taken complete tcp connection reception initial syn ensuing ack tcp connection operation normally performed within operating system kernel function le prone imposed jitter external factor offer u one clearer way view endtoend round trip delay let compare using metric connection failure relative rtt measurement result experiment initially performed performed second time giving u mean see whether situation moved past year connection robustness figure show daily connection failure rate across comparing striking bad establishing connection consistent record connection attempt failing complete comparison failure rate figure connection failure rate protocol failure rate dropped across period figure isolated spike appear form port scan figure connection failure rate failure picture becomes clearer address used attempt connection sorted teredo prefix prefix unicast address prefix breakdown connection failure rate address type shown figure figure connection failure rate teredo highly unreliable time showing daily connection failure rate consistently greater teredo connection attempt teredo relatively complex operation objective establish usable nat state count resultant failure rate illustrates proposition teredo perhaps liability positive contribution failure rate end admittedly better teredo absolute term still unacceptable unicast show better failure rate connection attempt absolute term failure rate still somewhat unacceptable certainly far worse comparable failure rate le changed intervening year data analysis repeated looking connection failure comparable data overall connection failure shown figure figure connection failure rate protocol data complete entire period packet capture data period september october also visible discontinuity data september july august period measurement platform used combination advertisement scripted using adobe flash advertisement platform ceased support flash september change profile changed relativity system used measurement connection failure rate show steady decline year figure connection failure rate mid november figure connection failure rate day four year ago poor connection performance largely due prominence use teredo excessive connection failure rate helped widespread use better intervening four year teredo disappeared due largely combination successive release window system effectively deprecating teredo withdrawing microsoftoperated teredo relay service teredo affectively disappeared poor ability complete connection changed greatly either connection failure still connection figure connection failure rate day discount connection failure resulting profile average connection failure rate connection far better seen still room improvement comparable number infrastructure heading perhaps two lesson draw measurement first general ip tunnel best idea whether inside even generic ipinip lisp ip tunnel increase fragility resultant service environment need tunnel better avoid second lesson large amount largely forgotten unattended device network causing issue appears seeing unicast failure network equipment working sync end client base likely many failure case endpoint assume connectivity emit packet filter network configured block incoming packet relative round trip time second aspect relative protocol performance examined relative network path delay look endpoint using compare relative round trip time rtt experiment server back looking instance network delay diverges two protocol delay experienced one protocol notably different delay along path informally answer question faster slower way delay measured take initial tcp syn handshake figure measure elapsed time reception opening syn ensuing ack measurement script used experiment asks endpoint fetch set url including url set us common unique dns name component allowing association common unique name component source address endpoint given syn rtt measurement every endpoint possible associate appropriate pair measurement endpoint difference two measurement rtt two endpoint figure number reason two rtt value might differ could network path may differ two protocol going case connection us involves third party tunnel relay even conventional unicast routed distinct protocol different network path unusual even two path precisely rtt measurement may differ slightly older router passed packet optimised switching path packet switched passing packet slower software based processing far le prevalent today may still case instance another factor transient queuing delay seen standard ping measurement lightly loaded network amount time packet spends queue may vary successive ping test measurement tcp syn time analogous ping measurement using tcp rather icmp try compensate small extent queueinduced jitter experiment us lowest rtt seen multiple tcp connection two endpoint address figure tcp syn rtt measurement relative rtt measurement conducted march result shown figure point right centre line faster left faster pair differentiated whether address show teredo address address unicast address unicast measurement clustered around midpoint smaller number sample time slower equivalent tunnelling predominately slower though surprising number case tunnelled measurement faster figure relative rtt measurement march measurement performed november result measurement shown figure figure relative rtt measurement november due small number measurement point teredo shown figure figure show slower case unicast hand even seen faster one half time distribution time measurement shown cumulative distribution plot relative time difference figure figure cfd relative time difference november using measurement granularity evident rtt within rtt measurement slower measurement faster also time case show time rtt measurement slower paired measurement look centre point detail using finer level measurement granularity figure show midpoint using granularity measurement figure cfd relative time difference november granularity unicast rtt faster time faster time similarly unicast rtt slower time slower time clear message suboptimal way access message rfc published may stop good advice indeed prevalent today world one last graph figure show relative level use dual stack equipped device still lot good news declining relative importance volume unicast increase year seen decline midnovember perhaps problem disappear relevance coming month figure relative proportion conclusion conclude relative performance measurement measurement show large set individual comparison path two dual stack endpoint compared two protocol measured tcp syn round trip time roughly equivalent measurement within time connection performance roughly equivalent connection established probability establishing connection current connection failure rate connection seen connection attempt equivalent connection failure rate unicast nine time higher connection attempt still scope improvement note article first published apnic blog also presented ripe
18,Lobsters,ipv6,IPv6,Apple and IPv6 - Happy Eyeballs,https://www.ietf.org/mail-archive/web/v6ops/current/msg22455.html,apple happy eyeball,apple happy eyeball,apple happy eyeball hi everyone today apple released first public seed io o x el capitan seed third developer seed released yesterday include improved version happy eyeball based testing make happy eyeball implementation go roughly io yosemite io el capitan beta previous implementation four year ago designed select connection lowest latency matter agree internet changed since report indicate biasing towards beneficial customer mainstream instead exception le broken tunnel carriergrade nats increasing number throughput may even better average updated implementation performs following query dns resolver aaaa dns record cache request sent back back wire aaaa first first reply get aaaa send syn immediately first reply get expecting aaaa start timer timer fire send syn get aaaa window move address selection list ip address either dns cache receiving close together perform address selection algorithm sort algorithm us historical rtt data prefer address lower latency leeway historical rtt two compared address within use pick best one list sorted send syn first address start timer based average variance historical tcp rtt roughly speaking start second address around time send syn retransmission first address first address reply synack win race cancel tcp connection attempt behavior prof successful beta period expect traffic apple product future note however describes current beta detail subject change please test mean love see test result receive feedback would like personally thank jason fesler paul saab help investigating issue testing thanks david schinazi coreos networking engineer
19,Lobsters,ipv6,IPv6,The IPv6 mess (2003),http://cr.yp.to/djbdns/ipv6mess.html,mess,j bernstein internet publication djbdns mess address crunch basic interoperability issue teaching computer talk address mess part one incompatibility another way understand cost analogy transition mx record mess part two incoherence mess part three distraction,j bernstein internet publication djbdns mess address crunch computer internet talk version internet protocol computer internet public address similar phone number example target packet data identified public address problem billion public address many address already allocated happens run public address partial solution computer really need internet company computer browsing web nt need put computer internet single computer internet proxy retrieves data web server behalf computer forward telephoneoverip call computer etc people agree however proxy merely delay inevitable longterm solution version internet protocol many address improvement survive without really important expansion address space basic interoperability issue suppose someone sell public address put computer address find ca nt reach cnn server google server company web server react example called interoperability failure right many fact internet server ca nt talk client public address change using public address instead public address disaster client similarly many fact internet client ca nt talk server public address change using public address instead public address disaster server conclusion client safely deployed public address practically every server learn talk client server safely deployed public address practically every client learn talk server public address inherently lower cost public address many cost advantage wo nt matter long public address noticeably le useful address right public address practically useless response page one commentator said set public address address could talk various public address site nt mean address useful entire internet reachable small part internet reachable sysadmin could eliminate public address ca nt eliminate public address example web page public address magic moment moment people start relying public address replacement public address moment internet longer threatened address crunch teaching computer talk address reach magic moment teach every server internet talk client public address teach every client internet talk server public address answer go every place address appear allow address place several illustrative example public address appear ip packet sent network tcp packet udp packet extend format ip packet allow address change operating system handle new format public address appear address configuration file operating system corresponding part memory inside operating system extend file memory format allow address change operating system accordingly public address appear routing configuration file operating system corresponding part memory inside operating system extend file memory format allow address change operating system accordingly public address server appear server configuration file corresponding part memory inside server program operating system listen address function extend file memory format allow address change server operating system accordingly public address server appear address record record dns packet dns software configuration file extend addressrecord format dns protocol extend addressrecord format dns software configuration file change dns software accordingly unfortunately instead simply allowing record people introduced new aaaa record dns protocol creating several unnecessary complication dns software public address server appear memory inside client application browser send packetmake connection function operating system extend memory format allow address change client operating system accordingly public address client appear authorized client configuration file server corresponding part memory inside server program connecting function operating system extend file memory format allow address change server operating system accordingly quite place address appear example routing protocol ftp protocol etc need extended software upgrade done practically every internet computer reached magic moment people start relying public address replacement public address example client public address let say address connect google web server client sends udp packet com dns server asking address wwwgooglecom client software intermediate computer server software upgraded handle client extended address dns server sends packet back client saying try asking googlecom dns server client sends packet googlecom dns server asking address wwwgooglecom dns server sends packet back client saying wwwgooglecom client sends http request google web server google web server responds similarly server public address able receive connection client mess part one incompatibility unfortunately straightforward transition plan described work current specification designer made fundamental conceptual mistake designed address space alternative address space rather extension address space word current specification nt allow public address send packet public address also nt allow public address send packet public address public address exchange packet specification could defined functionally equivalent public address public address embedding address space address space nt rfc proponent say rfc local option part architecture particular say client supposed send packet address using rfc address might sound like small mistake working move everything care problem mistake gigantic effect cost making work first place look google example client public address exchanging packet server public address unfortunately current specification nt work server administrator must acquire public address announce address dns alongside public address configure server respond address alongside public address else client fail one commentator responds equivalent dhcp ca nt imagine think contradicts anything saying short mistake design making work mean much upgrading software every administrator server public address reason every administrator client public address go extra effort acquire enable public address example difference google nt published address wwwgooglecom exactly google reward spending time setting useless address perfectly functional machine contrast software year current specification make magic moment happen convince thousand network programmer something immediate benefit also convince million computer administrator something immediate benefit incredibly bad way handle transition one commentator characterizes page saying take massive amount work convert application completely missing point even programming done public address still would nt useful would nt able talk internet administrator internet would nt bothered setting public address another way understand cost excerpt message sent ngtrans mailing list like connect office computer network make service web server example mail server available client around world control operating system application ready willing make various change code however refuse provide information program beyond already address refuse work outside changing program going ask isp address example going touch dns data big question achieve taking advantage without violating might think strange willing write code maybe quite bit code willing send message isp make trivial configuration change nt backwards answer actually talking huge number site nothing special site situation repeated n site code written trivial request trivial configuration change repeated n time see reason user suffer cost manual configuration behalf user object transition plan impose cost maybe put much time nt care five minute spent acquiring connection configuring software look easy say well looking much larger group user nt putting even five second better thing configuration nt automatic wo nt happen analogy transition mx record long time ago smtp client found smtp server looking record people decided introduce mx record extra flexibility right client find smtp server web server etc looking record making connection people decided introduce aaaa record connection people thought every server internet forced set mx record could start deploying client used mx record ca nt talk record people think every server internet forced set new address publish aaaa record start deploying client use aaaa record ca nt talk record much le expensive transition plan one adopted client continue using record mx record effectively embedding record mx space allowed existing server talk mx client without effort part server administrator much le expensive transition plan one adopted client continue using record using embedding address space allows existing server talk client without effort part server administrator deployment mx client depended vitally client fall back record absence mx record approach pestering every dns administrator internet set mx record would miserable failure deployment client depends vitally client fall back record talk server address absence aaaa record approach pestering every computer administrator internet set address aaaa record miserable failure many people nt understand importance embedding example rfc characterizes benefit doubt rather essential part protocol definition many people nt understand importance embedding example keith moore characterizes guess rather essential part protocol definition looking oldclientnewserver instead newclientoldserver transition period old client connecting record new client also understood mx server reachable record old client gone looking oldclientnewserver instead newclientoldserver transition period old client connect address new client connect address address server reachable address old client gone mess part two incoherence get worse designer nt transition plan taken helpful step typically declare success support real problem making public address work well public address still nt solved consider example junichiro itojun hagino recommends mail server public address set public address nt make sense recommendation rather requirement mail server nt server client talking address going reach magic moment answer wo nt seem assume single grand unified plan would suit everybody need pekko savola wrote nt think reasonable assumption said every computer internet need software francois dupont said please serious people clue manage transition next several month exploring transition scenario working overall architecture transition margaret wasserman wrote architecture never materialized randy bush shut ngtrans working group time ngtrans declare victory combined network longer future today wake folk combined network bad joke without coherent transition plan credibility certainly going waste time implementing halfbaked plan want see plan implemented universally deployed produce magic moment many year ago osi proponent convinced osi network wave future created sort osi software sort amazing technical feature never seemed understand vast majority internet user nt sign sad mess part three distraction get even worse designer putting energy pointless effort wo nt bring u closer magic moment wo nt help magic moment example people make quite fuss replacing mechanism computer nt internet talk local proxy wake folk nt problem need solve use private address talk proxy address crunch involves public address fix need public address talk site another example people focus building optional connection internet big new network see discussion computer might talk computer looking one plan wake folk nobody join network ca nt talk google cnn etc need practically every computer internet talk network wrote response keith moore keith one network aolcom cnncom csutkedu incredible number site normal people call network internet insist connected internet exchange email web page internet site universe imagining site split across two global network trouble talking ancient historical mistake never repeated kind idiot would first disconnect site original internet favor new internet nt cut keith want succeed global network figure make address useful address plan keith way make address work teach every internet computer talk address option sysadmin might configure something automatically enabled part regular softwarehardware upgrade done overnight course crux transition remain astonished wg nt settle detail year ago
20,Lobsters,ipv6,IPv6,The network nightmare that ate my week,http://blog.bimajority.org/2014/09/05/the-network-nightmare-that-ate-my-week/,network nightmare ate week,first issue juniper network second issue technical detail vast majority mld rfc handle neighbor discovery multicast group tig like,hour ago sent following dear colleague email lightly edited remove private detail user work trying week whose work disrupted week unplanned network outage deepest apology writing explain know far cause problem done resolve action still remain taken course summer suffering variety difficulttoidentify network problem network switch observed using far cpu historically case variety packet storm appear caused forwarding loop despite fact run protocol designed prevent loop taking place variety unexplained switch crash first issue starting early wednesday morning switch serf server room began crash unexpectedly way contrary design requires human physically powercycle order restore service switch crash affected variety research group system well central afs server newest set openstack hypervisors initially thought consequence power failure experienced tuesday evening vendor juniper network suggested reinstallation procedure member node switch recover possible corruption flash medium switch member node boot unfortunately resolve problem although put recurrence hour thursday morning engineer juniper came stata help u determine cause crash come resolution assisted five juniper engineer advanced technical assistance center via teleconference took rest day thursday come action plan resolve issue although still without identifiable root cause failing switch node unresponsive console well network none obvious fix tried effect switch log reboot stopped crash eventually decided upgrade one switch latest version juniper firmware platform simultaneously make several configuration change reduce use code path le well tested combination explain next appears resolved issue particular switch monitoring switch weekend make sure remains stable juniper dispatched replacement hardware three member node switch case prof necessary point believe problem caused software hardware failure thus association power outage red herring second issue summer experiencing variety issue core switch continued experience issue even upgrading firmware recommended juniper emergency unscheduled basis two monday ago serious issue appear bridge loop occasionally created saturate cpu core switch thereby preventing running necessary protocol processing believe official confirmation yet result priority inversion relative flooding broadcast multicast traffic network process implement spanningtree protocol construct loopfree topology deactivating redundant link unable run cause access switch think uplink longer connected spanningtree bridge cause sorceror apprentice packet amplification multicasts forwarded core link simultaneously add overload core switch sometimes core switch would recover condition without human intervention several time forced physically powercycle one break loop trying develop configuration change make le likely future changing assumption spanningtree protocol limit possibility bridge loop forming first place work yet done mean time made change network reduce cpu load core switch make le likely spanningtree process get starved first place principal change made regard disable csail network come conclusion much design implementation botched protocol designer vendor others simply unsafe run production network except limited geographical circumstance tight central administration host technical detail fundamental design problem related function shared network like ethernet separate protocol arp used host find mac address station network host want send packet sends broadcast frame asking ip address intended recipient network sends reply say hey mac address case missed ab intended recipient network sender keep broadcasting periodically either get response give separate protocol called neighbor discovery us packet broadcast soliciation packet must sent multicast address rather use standard host multicast address neighbor discovery protocol instead specifies every host must join another multicast group one billion distinct solicited node multicast group chosen function system address neighbor discovery packet sent group rather broadcast mean vast majority multicast group use anywhere universe single member theory worse sending arp broadcast practice much worse system must also implement multicast listener discovery protocol station network report requested multicast group member send report group mean flooding report throughout network network switch way knowing ethernet multicast address desired port furthermore mld packet required protocol transmitted router alert option cause router bounce packet hardware forwarding software meaning flooding arp broadcast fastpathed usually implemented silicon mld listener report multicasts must slowpathed since still implemented large network like campus network building mld processing generally poorly tested optimized network vendor core switch send mld allgroups query every second direct end host splay response interval recommended mld rfc theory could implement mld snooping across network reduce overhead flooding mld listener report packet however new raw code least juniper operating system well exercised anywhere aware even tried would require least two entry multicast zone every switch tcam hardware forwarding table every host every network csail handle neighbor discovery multicast group switch entire tcam space dedicated multicast entry would barely enough support csail one major issue privacy address privacy address incredible botch added year ago simulate good old day dialup internet machine changed ip address time normal usage every host generates address listening broadcast router telling network prefix first bit address use appending fixed function network interface card mac address privacy address host simply generates pseudorandom number pretend mac address applies function host also maintain traditional address used incoming connection random address used outgoing packet worse random address changed regularly typically daily old random address kept around fairly long time order week case host network want call back new address generated thus typical machine say ubuntu workstation default configuration end claiming eight address one time mean nine multicast group mean tcam entry exhausted ubuntu workstation generally issue portable machine like laptop forget old random address whenever prefix change happens whenever disconnected one network connected another serious issue workstation course server connected fulltime single network random address also problematic network administrator mean unable trace back problem machine owner removed even briefly network interim used ubuntu example hardly worst offender seen window machine address recall mean every second transmitting multicast packet per second flooded network problem caused broken intel nic driver window attempt offload processing nic workstation standby mode support wakeonlan get updated driver intel fix problem window update still distributing broken driver seen machine merely flood network copy single mld listener report sometimes hundred packet le second first learned back july started observe cpu overload switch serve area turned one public window machine outside tig office knew look saw many machine thing pretty much new dell workstation running window bug unless intel ethernet driver updated reason making broadly available reliable way ensuring privacy address disabled client already disabled csail ubuntu course many client control centrally probably move towards supporting stateless autoconfiguration rely assign stable traceable address client way away able implement time finally got home last night around awake nearly hour never see another dawn office soon update stéphane bortzmeyer first point rfc address issue privacy address let implementation come soon correction actually solicited node multicast group billion posted originally said email realized wrong miscorrected posted like like loading related
21,Lobsters,ipv6,IPv6,100% of Comcast's network is now IPv6 dual stack,http://corporate.comcast.com/comcast-voices/comcast-reaches-key-milestone-in-launch-of-ipv6-broadband-network,comcast network dual stack,world largest native broadband deployment published last week internet society nbccom nbcsportscom universalstudioscom,heel second anniversary world launch comcast already recognized world largest native broadband deployment pleased announce percent comcast broadband network fully deployed support dual stack connectivity addition according july launch measurement published last week internet society comcast surpassed percent deployment deployment critical step supporting growing need internet resource engineered brought fruition year ago continue dwindle due explosion device hooked global network deployment also necessary step internet thing device leverage broadband infrastructure order think function continues rise next generation network technology like segment routing service function chaining begin take shape significant achievement comcast also proud continued commitment seamless ubiquitous deployment comcast effort pioneering past year driving force across entire internet ecosystem leading faster innovation competition comcast deployment continues expand penetration expected reach nearly percent end beyond plan include support additional residential device well launch capability business internet customer addition comcast continues leverage across entire product service portfolio support planned xfinity platform xfinity voice trial slated later year content front comcast also pleased announce recently launched support several nbcuniversal digital property including nbccom nbcsportscom universalstudioscom also pleased announce achieved significant traffic milestone recently crossed internet facing native traffic reaching goal would possible without effort content partner like google enabled youtube streaming dual stack enabled default increased support across content consumer electronic critical ensure success transition across internet ecosystem
22,Lobsters,ipv6,IPv6,Need to move to IPv6 highlighted as Microsoft runs out of US address space,http://www.networkworld.com/article/2363543/ipv6/need-to-move-to-ipv6-highlighted-as-microsoft-runs-out-of-us-address-space.html,need move highlighted microsoft run u address space,also network world could open network zeroday attack bestworst apple iphoneys iphone edition blog post earlier week faq manual website facebook linkedin,microsoft forced start using global stock address keep azure cloud service afloat u highlighting growing importance making shift ip version nt mention blog post use protocol would make address problem disappear newer version internet protocol add almost inexhaustible number address thanks long address field compared bit used version since every connected device internet need ip address increasing pressure move noncomputer device come online socalled internet thing also network world could open network zeroday attack bestworst apple iphoneys iphone edition address space fully assigned u meaning additional address available microsoft said blog post earlier week requires company use address space available globally new service saidmicrosoft make clear ip address registration origin equate physical location example address registered brazil allocated device service physically located virginia azure user install new server still hosted u data remain stateside microsoft saidsmaller company already keep business going likely see future according jörgen eriksson project manager se organization charge swedish top domainthe adoption foreign ip address give breathing room also drawback become difficult use geolocation service rely ip address geolocation ad revenue powerful driving force may help speed implementation eriksson saidmoving may stimulate competition among isps new competitor able get address need easilyas rirs regional internet registry started run version address need implement become acute rir job manage distribute register ip address within respective regionsin april arin american registry internet number said million address extra frugal may circumstance longer fulfill qualifying request due lack inventoryon wednesday lacnic latin america caribbean network information center announced considered exhausted service region organization continue distribute address also greatly reduced rateto get around shortage market address created company even make acquisition get hand address according axel pawlik managing director ripe ncc réseaux ip européens network coordination centre long run rolling sensible solution saidmicrosoft say like vendor committed rollout foundational work enable azure well underway according faq however unable share date support generally available time saidthey key handling transition smoothly possible planning seem happening consistency people distracted trying make money looking next week priority point next week priority problem pawlik saidthere wealth material online people want learn protocol ripe posted manual website network architect network manager need help implementing organizationssend news tip comment mikaelricknas idgcom join network world community facebook linkedin comment topic top mind
23,Lobsters,ipv6,IPv6,Eliminating the last reasons to not enable IPv6,http://blog.cloudflare.com/eliminating-the-last-reasons-to-not-enable-ipv6,eliminating last reason enable,gateway u introducing pseudo class e take five minute sign addendum nitty gritty detail ngxopenresty always hiring,today june last two year date celebrated world day cloudflare offered full support well gateway since preparation year day scanned world largest website order figure many available good news bad news good news gateway widely used order enable web fact site support via cloudflare bad news cloudflare google facebook big people shown adopted without performance penalty still world largest website available disappointingly spite cloudflare offering free half customer turned gateway silver lining get current customer enable gateway nearly reach milestone world largest site available goal mind set find solve last stumbling block customer enabling u cloudflare make supporting website ridiculously easy backend support visitor arriving connection transported via protocol endtoend backend support cloudflare accept visitor seamlessly make request server defaulting gateway new customer several month existing customer enable single click made easy stopping site nt yet enabled answer usually legacy software assumes world often software handle session stop fraud abuse example popular sometimes controversial website cloudflare customer notoriously mischievous audience sometimes user try spam service keep spammer bay us algorithm look suspicious behavior unfortunately algorithm use visitor ip address one parameter assume ip format long term solution course platform like rewrite software accommodate take time wanted provide stopgap solution would allow cloudflare customer enable quickly worked upgrade software fully support introducing pseudo accommodate software assumes world today enabling new cloudflare option pseudo option whenever connection established add http header request pseudo address using class e ip space address class e address space reserved experimental actual traffic originate point class e space designated specific use adjust schema pseudo header class e space give u possible unique address much smaller undecillion possible address larger number ip seen largest website pseudo service us hashing algorithm applied top bit connecting address order map visitor one class e ip hashing algorithm always produce output input address always result pseudo address two option pseudo service u automatically add header parsed software needed u overwrite existing cfconnectingip xforwardedfor header pseudo address advantage overwrite option case wo nt require software change choose overwrite option append new header order ensure still find actual connecting ip address debugging pseudo service like gateway available customer even free plan hope eliminate one last reason holdout already cloudflare customer login account make sure enabled cloudflare setting page find toggle pseudo well yet cloudflare customer take five minute sign world still time get site network join modern web world day come end way today available addendum nitty gritty detail technical audience nitty gritty detail implemented pseudo chose use hashing algorithm risk used cryptography faster many alternative acceptable uniformity hash space note risk collision ie two address map pseudo address however abusefraud system take account already order deal nats instance multiple people may share single ip cloudflare use modified version nginx wrote request processing code lua relying ngxopenresty app server lua code proofofconcept prototype hashing algorithm function grab bottom bit hash suppress leading zero regexp always match local hash local mod ngxrematch hash joi normalize first byte fit class e space done using subtraction lua nt builtin bitwise operator local tonumber mod end return stringformat tonumber mod tonumber mod tonumber mod end since every request need pas hashing algorithm wanted make fast possible set work optimizing lua prototype speed result function grab bottom bit hash local local byte normalize first byte fit class e space bitbor bitband return stringformat end p writing lua code like look fun always hiring
25,Lobsters,ipv6,IPv6,"Goodbye, IPv4! IANA Starts Allocating Final Address Blocks",http://www.internetsociety.org/deploy360/blog/2014/05/goodbye-ipv4-iana-starts-allocating-final-address-blocks/,goodbye iana start allocating final address block,announcement tuesday announcement state iana allocated final address block free pool global policy post exhaustion allocation mechanism iana really check start page great example moving network application seeking case study world launch please let u know update list statistic site world launch measurement update excellent discussion thread currently underway hacker news update number resource organization nro statement,address exhaustion got real announcement tuesday internet corporation assigned name number icann indicated starting process allocating final available block address regional internet registry rirs iana recovered address pool icann operator iana announcement state icann announced today begun process allocating remaining block internet protocol version address five regional internet registry rir activation procedure triggered latin america caribbean network information centre lacnic supply address dropped million move signal global supply address reaching critical level device come online demand ip address rise incapable supplying enough address facilitate expansion icann encourages network operator around globe adopt allows rapid growth internet folk talking many year address running happening note back february iana allocated final address block free pool address iana worked five rirs recover unused address block establish recovered address pool agreement allocation would start pool first rir hit last block address lacnic recently recovered pool allocated rirs simply address iana give yes enough address overall system right running address today basically toplevel final allocation occur next month part global policy post exhaustion allocation mechanism iana increasingly hard network operator get address new customer new network yet planning transition really need get going want grow network simplest easiest path make move check start page learn get going great example moving network application seeking case study upcoming celebration anniversary world launch great story love help share story others learn please let u know update interested learning adoption going check list statistic site particular look world launch measurement month verizon wireless crossed first time update excellent discussion thread currently underway hacker news article update number resource organization nro statement website
27,Lobsters,ipv6,IPv6,internetworking with TCP/IP (MOOC),http://openhpi.de/course/internetworking2014,internetworking tcpip mooc,hasso plattner institute digital engineering ggmbh hpi internet technology system hpi school design thinking interdisciplinary centre security reliability trust snt hpistanford design thinking research program hpi future soc lab book lockkeeper teletask eccc electronic colloquium computational complexity ecdtr electronic colloquium design thinking research itgipfelblog teletask,professor dr christoph meinel univ prof dr sc nat dr rer nat scientific director ceo hasso plattner institute digital engineering ggmbh hpi full professor computer science hold chair hpi internet technology system area research focus future internet technology particular information security web semantic web social service web well innovative internet application especially domain elearning teleteaching telemedicine besides scientifically active field innovation research design thinking earlier research work concentrated theoretical foundation computer science area computational complexity design efficient obddbased algorithm data structure christoph meinel teach bachelor master course itsystems engineering hpi school design thinking honorary professor computer science school beijing university technology visiting professor shanghai university china senior research fellow interdisciplinary centre security reliability trust snt university luxembourg since together larry leifer stanford university program director hpistanford design thinking research program since chair steering committee hpi future soc lab christoph meinel authorcoauthor book anthology well editor various conference proceeding paper published highprofile scientific journal international conference highsecurity solution lockkeeper internationally patented licensed siemens ag teletask system provides innovative mobile system recording internet broadcasting lecture presentation used many university allover world virtual telelab internet security provides possibility get handson experience practical issue internet information security recently developed teleboard support remote work creative team christoph meinel member acatech german academy science engineering chairman german council advisory board utd meraka south africa member sap security advisory board hosted together hasso plattner first german national itsummit german federal chancellor dr angela merkel founder ceo research lab institute telematics trier christoph meinel chief editor scientific electronic journal eccc electronic colloquium computational complexity ecdtr electronic colloquium design thinking research itgipfelblog teletask archive
28,Lobsters,ipv6,IPv6,Comcast's Xfinity Internet Now the World’s Largest Native IPv6 Deployment,http://corporate.comcast.com/comcast-voices/comcasts-xfinity-internet-now-the-worlds-largest-native-ipv6-deployment,comcast xfinity internet world largest native deployment,comcast world launch measurement measure third arris http,past year shared update effort especially milestone enhance quality service today comcast xfinity internet native deployment grown become world largest deployment measured internet society world launch measurement internet society isoc measure deployment using several data source including data google facebook yahoo akamai measurement percentage network equipment enabled native importantly number people actively using native day day basis three month deployment grown third first critical factor growth launch support arris touchstone telephony wireless gateway modem brought four million customer additionally comcast working closely cisco system ready cable modem termination system cmts contributed expanded deployment support across comcast broadband network thus milestone one comcast one cable industry supplier internet general today growing comcast xfinity internet customer actively provisioned native dual stack broadband internet service native support deployed broadband network goal early information comcast effort please visit http
30,Lobsters,ipv6,IPv6,"Happy IPv6 Day: Usage On the Rise, Attacks Too",http://blog.cloudflare.com/ipv6-day-usage-attacks-rise,happy day usage rise attack,growth largest provider web free gateway attack spamhaus signing cloudflare,june known world day thought good time look trend usage across cloudflare network two big theme seen usage growing steadily current pace still going living many year come majority traffic come legitimate user mobile network attacker beginning launch attack protocol growth cloudflare supported network last year half become one largest provider web offer free gateway allows website available even site origin network nt yet support protocol last year enabled customer cloudflare default today enabled million customer website since beginning connection percentage cloudflare total traffic fluctuate daily minimum january maximum june look overall trend connection network grown since start year digging connection coming appears majority growth mobile network provider increasingly traffic mobile device web passed saw significant drop connection midmarch earlyapril appears large mobile operator appears disabled reenabled connectivity network overall increase usage encouraging trend unfortunately indicates going living time come current growth rate assuming adoption linear take almost year connection surpass connection last connection wo nt retired may thing bit optimistic adoption turn exponential rather linear case connection surpass year month long thereafter extinguish entirely january guess reality somewhere linear exponential case regardless adoption curve look like cloudflare user covered anticipate operating dualstack network support customer fully retired whether take year attack majority connection today coming legitimate user mobile network last two month seen marked increase number web attack largely ddos attack attack typically layer eg syn flood well layer eg application layer attack date ddos attack relatively modest largest seen date generated approximately gigabit per second traffic accompanied much larger traditional ddos novelty attack nt cause significant harm cloudflare system designed cloudflare anticipating transition defense assume world speculate however attacker may targeting way bypassing older protection base protection largely blocklists make strict blocklist perip basis much challenging since number address available attacker significantly larger challenge large blocklist operator like spamhaus currently thinking present challenge attack filtering strategy also present opportunity example since reduces need nats provides user address routable way end device believe time provide ability build significantly accurate allowlists continue monitor overall growth rate well interesting trend attack meantime better way celebrate world day signing cloudflare ensuring site automatically available increasing percentage user accessing free take minute join modern web
32,Lobsters,ipv6,IPv6,New RA Flood Attack,http://samsclass.info/ipv6/proj/RA_flood2.htm,new ra flood attack,new ra flood attack killing maverick killing lion window survives older content killing mac o x window server microsoft readiness update wireless injuring ipad killing mac o x reliably better switch wireless freezing ipad mini baythreat talk killing mac o x crossover cable killing mac o x wireless lan notifying apple attack kill macbook air ipads freezing android phone attack google notified killing microsoft surface attack killing microsoft surface wireless attack http pastebincomaxuxbxxk google notified freezing android phone attack attack kill macbook air ipads notifying apple killing mac o x wireless lan killing mac o x crossover cable data breach password hash new ra flood attack part part part wireless freezing ipad mini killing mac o x reliably better switch wireless attack ipad microsoft readiness update http killing mac o x server work packet capture raspcap reference http http http,new ra flood attack killing maverick killing lion window survives older content killing mac o x window server microsoft readiness update wireless injuring ipad killing mac o x reliably better switch wireless freezing ipad mini baythreat talk killing mac o x crossover cable killing mac o x wireless lan notifying apple attack kill macbook air ipads freezing android phone attack google notified killing microsoft surface attack killing microsoft surface wireless attack attack realistic practical although somewhat sloppy concept attacker macbook air running backtrack vmware wpaencrypted network target microsoft surface although mac immune attack condition attack kill mac kill surface get attack script http pastebincomaxuxbxxk use first download compile good nt attack device without proper authorization google notified sent message security androidcom hello studying vulnerability year large problem window mac linux recent release changed new ra flood tool freeze android device shown video http think aware might good block excessive ra packet firewall implement countermeasure sam bowne city college san francisco freezing android phone attack slightly modified version attack used android phone also kill mac ipad ghz wireless network attack kill macbook air ipads improved router advertisement flood attack first simulates ten normal router sends new ra flood make much effective apple device tried video show kill four device via wireless network notifying apple new version attack powerful enough decided formally notify apple nt expect care much microsoft certainly nt think important window much vulnerable wanted make sure knew sent message productsecurity applecom hello studying vulnerability year large problem window mac recent release changed bring mac second shown video http think aware might good block excessive ra packet firewall sam bowne city college san francisco killing mac o x wireless lan even exciting wireless attack powerful enough kill mac video six simulated router sending router advertisement target one ra per second seventh process sends flood ra mac dy second killing mac o x crossover cable major advance attack essential ingredient router network fast flood six simulated router one process running flood mac o x dy second reliably even simple network consisting crossover cable make attack much practical one demonstrated baythreat required expensive bulky switch separate router data breach password hash new ra flood attack talk gave baythreat first discus issue gave live demo attack killing mac o x window worked thanks k yang set extremely helpful designing performing attack attack start part video part part part wireless freezing ipad mini ipad mini vulnerable ipad ipad shown video adding second ipad wireless lan reduces attack effect greatly interesting opposite see wired network adding router lan necessary kill mac o x reliably killing mac o x reliably better switch used businessclass gigabit switch vyatta router lan gigabit adapter mac o x kill mac o x reliably showing crash ethernet adapter stop configuring address followed whole o freezing wireless attack ipad finally got wireless version attack working nt powerful enough kill device tested reliably make ipad run slowly apps crash whole o crash sometimes device tested window ipad macbook air slowed attack remained usable ipad resistant attack consume cpu making significant difference performance posted microsoft readiness update microsoft readiness update greatly alleviates vulnerability http however available win win server addition provides partial protection patched machine freeze totally attack recovers quickly stop possible better ubuntu linux completely shrug attack adding new address showing deleterious effect video showing attack killing window server mac o x video showing extent microsoft readiness update protects window server also show attack effect window xp ubuntu linux detail earlier test using virtual machine killing mac o x server tested new attack marc hause much powerful kill mac o x server second shown video work captured packet previous weaker attack tool us normal ra option mtu prefix information source linklayer address captured packet newer attack shown two image big fit one normal ra option route information section prefix information section source linklayer address packet burden recipient lot think microsoft apple need pay attention time one crash mac make server restart make suspect could exploited perhaps remote code execution attack packet capture pcap file one new ra one old type raspcap reference previous page old attack mitigation recommendation http marc hause slide presenting version http stepbystep instruction testing older tool http first posted sam bowne page reorganized content section new video added baythreat video added pm attack mac o x simulated router added pm apple notified ipads video added pm android attack google notification added pm microsoft surface attack added maverick win added
