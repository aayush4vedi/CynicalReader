Topic,Title,Content
ComputerScience,compiler operating system third advance application support,compiler operating system tsias third advance application support compiler support high level application definition programming language operating system support high level interface resource used application execution task system item architecture tsia provides application transparent reliable distributed heterogeneous adaptive dynamic realtime interactive parallel secure execution addition supporting application execution tsia also support application definition runtime support definition complementary compiletime support compiler example allows language similar fortran c deliver feature promised functional computing many tsias exist previously recognized served particular type application existing tsias project demonstrate tsias feasible application next paradigm application support tsia simplifies unifies existing computing practice research solving many outstanding problem tsia open many many new opportunity computing
ComputerScience,draft task system item architecture tsia,execution task independent task application executes term task application definition free detail execution many project demonstrated task system t provide application parallel distributed heterogeneous adaptive dynamic realtime interactive reliable secure execution task consists item thus application defined term item item architecture ia support array routine structure item thus allowing structured application definition taking property many project support extend currying application defined type conditional item stream definition element task system item architecture tsia thus promise unprecedented level support application execution definition
ComputerScience,using propagation solving complex arithmetic constraint,solving system nonlinear inequality important problem conventional numerical analysis satisfactory method boxconsistency algorithm one compute cover solution set arbitrarily close approximation difficulty use propagation complex arithmetic expression box consistency computed interval arithmetic paper present theorem support simple modification propagation allows complex arithmetic expression handled efficiently version box consistency obtained way stronger interval arithmetic used
ComputerScience,fast data moving beyond big data mapreduce,big data may solution many looking latest rise big data method system partly due new ability technique provide partly simplicity software design partly buzzword value investor client said popularity measure suitability big data approach might best solution even applicable one many common problem namely time dependent problem whose solution may bound cached manner benefit greatly moving partly stateless flow oriented function data model paper present model substitute traditional mapshufflereduce model
ComputerScience,brittle system analysis,goal paper define analyze system exhibit brittle behavior behavior characterized sudden steep decline performance system approach limit tolerance due input parameter exceed specified input environmental condition exceed specified operating boundary analogy made brittle commmunication system particular material science
ComputerScience,example clifford algebra calculation ginac,example clifford algebra calculation us ginac http wwwginacde library includes support generic clifford algebra starting symbolic numeric calculation possible blended function ginac calculation made paper described feature ginac already available pyginac http sourceforgenetprojectspyginac due course propagate software like gnu octave http wwwoctaveorg gtybalt http wwwfisunipritstefanwgtybalthtml use ginac library backend
ComputerScience,euretile summary first three year activity european reference tiled experiment,summary first three year activity euretile project euretile investigates implement braininspired faulttolerant foundational innovation system architecture massively parallel tiled computer architecture corresponding programming paradigm execution target manytile hw platform manytile simulator set sw process hw tile mapping candidate generated holistic sw toolchain using combination analytic bioinspired method hardware dependent software generated providing o service maximum efficiencyminimal overhead manytile simulator collect profiling data closing loop sw tool chain finegrain parallelism inside process exploited optimized intratile compilation technique project focus level elementary tile elementary hw tile multiprocessor includes fault tolerant distributed network processor intertile communication asip accelerator furthermore euretile investigates implement innovation equipping elementary hw tile highbandwidth lowlatency brainlike intertile communication emulating level connection hierarchy namely neural column cortical area cortex develops dedicated cortical simulation benchmark dpsnnstdp distributed polychronous spiking neural net synaptic spiking time dependent plasticity euretile leverage multitile hw paradigm sw toolchain developed fetaca shape integrated project
ComputerScience,unix kiss case study,paper show initial philosophy used designing developing unix early time forgotten due fast practice question leitmotif microkernels though design adherent kiss principle number context switch higher monolithic counterpart running test suite verify result standard statistical validation test advocate wiser distribution shared library statistically analyzing weight shared object typical unix system showing majority shared library exist common space real evidence need finally examine unix heritage historical point view noticing habit swiftly replaced intent original author moving focus earliest purpose avoiding complication keeping system simple use maintain
ComputerScience,survey unix init scheme,modern operating system init initialization program launched kernel boot time run daemon typically pid init responsible spawning process scavenging zombie also responsible reboot shutdown operation document describes existing solution implement init process andor init script unixlike system solution range legacy stillinuse bsd systemv scheme recent promising scheme ubuntu apple sun independent developer goal highlight focus compare set feature
ComputerScience,dbos proposal datacentric operating system,current operating system complex system designed today computing environment make difficult meet scalability heterogeneity availability security challenge current cloud parallel computing environment address problem propose radically new o design based datacentric architecture operating system state represented uniformly database table operation state made via query otherwise stateless task design make easy scale evolve o without wholesystem refactoring inspect debug system state upgrade component without downtime manage decision using machine learning implement sophisticated security feature discus database o dbos improve programmability performance many today important application propose plan development dbos proof concept
ComputerScience,hard stuff first scheduling dependent computation dataanalytics cluster,present scheduler improves cluster utilization job completion time packing task multiresource requirement interdependency problem algorithmically hard achieve nearoptimality job dag appear production cluster large enterprise benchmark tpcds key insight carefully handling longrunning task toughtopack resource need produce goodenough schedule however subset task treat carefully clear intractable discover hence offer search procedure evaluates various possibility output preferred schedule order task online component enforces schedule order desired various job running cluster addition pack task overbooks fungible resource guarantee bounded unfairness variety desirable fairness scheme relative stateofthe art scheduler speed job
ComputerScience,proceeding fifth workshop development computational model computational model nature,special theme dcm colocated icalp concerned computational model nature particular emphasis computational model derived physic biology intention bring together different approach community strong foundational background proffered icalp attendee create inspirational crossboundary exchange lead innovative research specifically dcm sought contribution quantum computation information probabilistic model chemical biological bioinspired one including spatial model growth model model selfassembly contribution putting test logical algorithmic aspect computing eg continuous computing dynamical system solid state computing model also much welcomed
ComputerScience,acceleratorlevel parallelism,slowing technology scaling known way improve computer system performance energy constraint employ hardware accelerator already today many chip mobile edge cloud computing concurrently employ multiple accelerator call acceleratorlevel parallelism alp needed benefit alp spread computer system broadly herein charge community develop better best practice targeting accelerator managing accelerator concurrency choreographing interaccelerator communication productively programming accelerator
ComputerScience,tabularosa tabular operating system architecture massively parallel heterogeneous compute engine,rise computing hardware choice driving reevaluation operating system traditional role operating system controlling execution hardware evolving toward model whereby controlling processor distinct compute engine performing computation context operating system viewed software broker track resource compute engine akin database management system explore idea using database operating system role work defines key operating system function term rigorous mathematical semantics associative array algebra directly translatable database operation operation posse number mathematical property ideal parallel operating system guaranteeing correctness wide range parallel operation resulting operating system equation provide mathematical specification tabular operating system architecture tabularosa implemented platform simulation forking tabularrosa performed using associative array implementation compared linux core supercomputer using forkers managing process simulation show tabularosa potential perform operating system function massively parallel scale tabularosa simulation show higher performance compared linux managing process fully searchable table
ComputerScience,developing cybersecurity education awareness programme small mediumsized enterprise smes,purpose essential component organisation cybersecurity strategy building awareness education online threat protect corporate data service research article focus topic proposes highlevel programme cybersecurity education awareness used targeting smalltomediumsized enterprisesbusinesses smessmbs citylevel ground programme existing research well unique insight ongoing citybased project similar aim finding find whilst literature informative guiding education awareness programme may always reach realworld programme hand existing programme one explored great potential also room improvement knowledge area combined benefit academic practitioner community originalityvalue study contributes current research outline highlevel programme cybersecurity education awareness targeting smessmbs research engage reflection literature space present insight advance challenge faced ongoing programme analysis allow u craft proposal core programme assist improving security education awareness training target smessmbs
ComputerScience,aneka software platform netbased cloud computing,aneka platform deploying cloud developing application top provides runtime environment set apis allow developer build net application leverage computation either public private cloud one key feature aneka ability supporting multiple programming model way expressing execution logic application using specific abstraction accomplished creating customizable extensible service oriented runtime environment represented collection software container connected together leveraging architecture advanced service including resource reservation persistence storage management security performance monitoring implemented top infrastructure different programming model plugged provide support different scenario demonstrated engineering life science industry application
ComputerScience,increased security open source,paper discus impact open source security transparency software system focus technical aspect issue combining extending argument developed year stress discussion problem applies software general purpose computing system embedded system software usually easily patched upgraded different consideration may apply
ComputerScience,performance impact lockfree algorithm multicore communication apis,data race condition multitasking software application prevented serializing access shared memory resource ensuring data consistency deterministic behavior traditionally task acquire release lock synchronize operation shared memory unfortunately lock management add significant processing overhead especially multicore deployment task different core convoy queue waiting acquire lock implementing one lock introduces risk deadlock using spinlocks constrains core task run better alternative eliminate lock validate realtime property met directly considered many embedded application removing lock nontrivial packaging lockfree algorithm developer reduces possibility concurrency defect paper detail multicore communication api implementation enhanced support lockfree messaging impact data exchange latency task throughput latency compared window linux lockbased lockfree implementation data exchange message packet scalar model lockfree exchange predicts performance system architecture level provides stop criterion refactoring result show migration single multicore hardware architecture degrades lockbased performance increase lockfree performance
ComputerScience,tiramisu polyhedral compiler expressing fast portable code,paper introduces tiramisu polyhedral framework designed generate high performance code multiple platform including multicores gpus distributed machine tiramisu introduces scheduling language novel extension explicitly manage complexity arise targeting system framework designed area image processing stencil linear algebra deep learning tiramisu two main feature relies flexible representation based polyhedral model rich scheduling language allowing finegrained control optimization tiramisu us fourlevel intermediate representation allows full separation algorithm loop transformation data layout communication separation simplifies targeting multiple hardware architecture algorithm evaluate tiramisu writing set image processing deep learning linear algebra benchmark compare stateoftheart compiler handtuned library show tiramisu match outperforms existing compiler library different hardware architecture including multicore cpu gpus distributed machine
ComputerScience,scalable streamoriented framework cluster application,paper present streamoriented architecture structuring cluster application cluster run application based architecture scale tenth thousand node significantly le performance loss reliability problem architecture exploit stream nature data flow reduces congestion load balancing hide latency behind data push transparently handle node failure ongoing work developing implementation architecture able run simple data mining application cluster simulator
ComputerScience,introduction timeconstrained automaton,present timeconstrained automaton tca model hard realtime computation agent behavior modeled automaton constrained time interval tca action multiple start time deadline aperiodic selected dynamically following graph timeconstrained automaton allows expressing much precise time constraint classical periodic sporadic model preserving ease scheduling analysis provide property model well scheduling semantics show tca automatically derived sourcecode optimally scheduled single processor using variant edf explain time constraint used guarantee communication determinism construction study possible agent interaction happen
ComputerScience,secure machine efficient secure execution untrusted platform,work present secure machine sem short cpu architecture extension secure computing sem us small amount inchip additional hardware monitor key communication channel inside cpu chip act required sem provides confidentiality integrity secure program without trusting platform software offchip hardware sem support existing binary single multithreaded application running single multicore multicpu performance reduction caused percent due memory encryption layer commonly used many secure architecture also developed semprepare software tool automatically instrument existing application binary additional instruction securely executed architecture without requiring programming effort availability desired program source code enable secure data sharing shared memory environment developed secure distributed shared memory sdsm efficient time memory algorithm allowing thousand compute node share data securely running untrusted computing environment sdsm show negligible reduction performance requires negligible hardware resource developed distributed memory integrity tree method enhancing single node integrity tree preserving integrity distributed application running untrusted computing environment show method applicable existing single node integrity tree merkle tree bonsai merkle tree intel sgx memory integrity engine building block may used together form practical secure system used conjunction secure system
ComputerScience,computerassisted program reasoning based relational semantics program,present approach program reasoning insert program verification condition additional layer denotation program expressed declarative form program first translated denotation subsequently verification condition generated however even independently verification attempt one may investigate denotation get insight semantic essence program particular see whether denotation indeed give reason believe program expected behavior error program metainformation may thus detected fixed prior actually performing formal verification concretely following relational approach program semantics model effect program binary relation program state formal calculus devised derive program logic formula describes relation subject inspection manipulation implemented idea comprehensive form risc programexplorer new program reasoning environment educational purpose encompasses previously developed risc proofnavigator interactive proving assistant
ComputerScience,metric skyline processing pmtree,task similarity search multimedia database usually accomplished range k nearest neighbor query however expressing power singleexample query fails user delicate query intent available single example recently wellknown skyline operator reused metric similarity search multiexample query type applied multidimensional database ie multiattribute table traditional skyline operator selects database object dominated object metric skyline query adopts skyline operator multiple attribute represented distance similarity multiple query example hence view metric skyline set representative database object similar example possible simultaneously semantically distinct paper propose technique processing metric skyline query use pmtree show technique significantly outperforms original mtree based implementation time space cost experiment also evaluate partial metric skyline processing controlled number skyline object retrieved
ComputerScience,proceeding fourth international workshop testing analysis verification web software,volume contains paper presented fourth international workshop testing analysis verification software associated ieeeacm international conference automated software engineering ase collection paper includes research formal specification modelchecking testing debugging web software
ComputerScience,safius secure accountable filesystem untrusted storage,describe safius secure accountable file system resides untrusted storage safius provides strong security guarantee like confidentiality integrity prevention rollback attack accountability safius also enables readwrite sharing data provides standard unixlike interface application achieve accountability good performance us asynchronous signature reduce space required storing signature novel signature pruning mechanism used safius implemented gnulinux based system modifying opengfs preliminary performance study show safius tolerable overhead providing secure storage overhead opengfs data intensive workload due overhead performing encryptiondecryption software comparable better case opengfs metadata intensive workload
ComputerScience,global communication multiprocessor simulation flame,paper investigate performance global communication particular parallel code code simulates dynamic expansion premixed spherical flame using asymptotic model sivashinsky type spectral numerical algorithm result code heavily relies global alltoall interprocessor communication implementing transposition distributed data array numerical solution problem stored global data interdependence make interprocessor connectivity hpc system important floatingpoint power processor system built experiment show efficient numerical simulation particular model global data interdependence modern hpc system possible prospect performance sophisticated model flame dynamic analysed well
ComputerScience,vectorization tersoff multibody potential exercise performance portability,molecular dynamic simulation indispensable research tool computational chemistry material science consume significant portion supercomputing cycle around world focus multibody potential aim achieving performance portability compared wellstudied pair potential multibody potential deliver increased simulation accuracy complex effective compiler optimization achieving crossplatform performance remains open question abstracting target architecture computing precision develop vectorization scheme applicable cpu accelerator present result tersoff potential within molecular dynamic code lammps several architecture demonstrating efficiency gain computational kernel also largescale simulation cluster intel xeon phi optimized solver time faster pure mpi reference
ComputerScience,fundamental concept cyclus nuclear fuel cycle simulation framework,nuclear power expands technical economic political environmental analysis nuclear fuel cycle simulator increase importance date however current tool often fleetbased rather discrete restrictively licensed rather open source choice present challenge modeling fidelity generality efficiency robustness scientific transparency cyclus nuclear fuel cycle simulator framework modeling ecosystem incorporate modern insight simulation science software architecture solve problem challenge nuclear fuel cycle analysis better addressed summary cyclus fuel cycle simulator framework modeling ecosystem presented additionally implementation discussed context motivating challenge nuclear fuel cycle simulation finally current capability cyclus demonstrated open closed fuel cycle
ComputerScience,performance evaluation multiple tcp connection iscsi,scaling data storage significant concern enterprise system storage area network sans deployed mean scale enterprise storage sans based fibre channel used extensively last decade iscsi fast becoming serious contender due reduced cost unified infrastructure work examines performance iscsi multiple tcp connection multiple tcp connection often used realize higher bandwidth may fairness bandwidth distributed propose mechanism share congestion information across multiple flow fairtcp improved performance result show fairtcp significantly improves performance io intensive workload
ComputerScience,profiling improving dutycycling performance linuxbased iot device,minimizing energy consumption linuxbased device essential step towards wide deployment various iot scenario energy saving method dutycycling aim address constraint limiting amount time device powered work study improve amount time linuxbased iot device powered accomplish task analyze process system boot shutdown two platform raspberry pi raspberry pi zero wireless enhance dutycycling performance identifying disabling timeconsuming unnecessary unit initialized userspace also study whether sd card speed sd card capacity utilization affect boot duration energy consumption addition propose pallex parallel execution framework built top systemd init system run user application concurrently userspace initialization validate performance impact pallex applied various iot application scenario capturing image ii capturing encrypting image iii capturing classifying image using knearest neighbor algorithm iv capturing image sending cloud server result show system lifetime increased application scenario respectively
ComputerScience,fly orchestration unikernels tuning performance evaluation virtual infrastructure manager,network operator facing significant challenge meeting demand bandwidth agile infrastructure innovative service keeping cost low network function virtualization nfv cloud computing emerging key trend network architecture providing flexibility fast instantiation time support commercial shelf hardware significant cost saving nfv leverage cloud computing principle move dataplane network function expensive closed proprietary hardware socalled virtual network function vnfs paper deal management virtual computing resource unikernels execution vnfs functionality performed virtual infrastructure manager vim nfv management orchestration mano reference architecture discus instantiation process virtual resource propose generic reference model starting analysis three open source vim namely openstack nomad openvim improve aforementioned vim introducing support specialpurpose unikernels aiming reducing duration instantiation process evaluate performance aspect vim considering stock tuned version vim extension performance evaluation tool available liberal open source licence
ComputerScience,efficient synchronization primitive gpus,paper revisit design synchronization primitive specifically barrier mutexes semaphore apply gpu previous implementation insufficient due discrepancy hardware programming model gpu cpu create new implementation cuda analyze performance spinning gpu well method sleeping gpu running set memorysystem benchmark two common gpus use tesla fermiclass gpus nvidia result define higherlevel principle valid generic manycore processor important limit number atomic access required synchronization operation atomic access slower regular memory access use result benchmark critique existing synchronization algorithm guide new implementation define abstraction gpus classify gpu based behavior memory system use abstraction create suitable implementation primitive specifically targeting gpu analyze performance algorithm tesla fermi predict performance future gpus based characteristic abstraction also examine role spin waiting sleep waiting primitive performance varies based machine abstraction give set guideline strategy useful based characteristic gpu expected contention
ComputerScience,towards pythonbased domainspecific language selfreconfigurable modular robotics research,paper explores role operating system highlevel language development software domainspecific language dsl selfreconfigurable robotics review current trend selfreconfigurable robotics describe development software system atron ii utilizes linux python significantly improve software abstraction portability providing basic feature could prove useful using python either standalone via dsl selfreconfigurable robot system feature include transparent socket communication module identification easy software transfer reliable moduletomodule communication end result software platform modular robot appropriate build existing work operating system virtual machine middleware highlevel language
ComputerScience,proceeding workshop membrane computing biologically inspired process calculus mecbic,volume represents proceeding workshop membrane computing biologically inspired process calculus mecbic held together international conference membrane computing august fontainebleau france
ComputerScience,story telebrain multiperformer telematic platform performatization,paper present telebrain browserbased performatization platform invented organizing realtime telematic performance performatization human performance algorithm computer human performatize cooperatively humancomputer interaction hci becomes location computation novel mode machinehuman communication necessary organizing performatizations telebrain designed facilitate machinehuman language capitalizing ubiquity crossplatform compatibility internet telebrain opensource web application supporting perpl performer programming language humaninterpreted configurable language multimedia instruction used program performer telebrain facilitates variety performance discipline music theater dance computational performance networked scoring image audio prompted improvisation realspace multiplayer gaming collaborative transdisciplinary karaoke quantum squaredancing http telebrainorg
ComputerScience,executable set theory arithmetic encoding prolog,paper organized selfcontained literate prolog program implement element executable finite set theory focus combinatorial generation arithmetic encoding complete prolog code available http first ranking unranking function mathematically elegant data type universe hereditarily finite set urelements provided resulting arithmetic encoding powersets hypergraphs ordinal choice function implementing digraph representation hereditarily finite set define em decoration function recover wellfounded set encoding associated acyclic digraph conclude encoding arbitrary digraph discus concept duality induced set membership relation process uncover surprising possibility internally sharing isomorphic object independently language level type meaning
ComputerScience,basic gesture motion format virtual reality multisensory application,question encoding movement produced human gesture may become central coming year given growing importance movement data exchange heterogeneous system application musical application motion control virtual reality interaction etc past year various format proposed encoding movement especially gesture though format different degree designed context quite specific application character animation motion capture musical gesture biomechanical concern article introduce new file format called gm gesture motion signal aim lowlevel generic defining minimal feature format carrying movementgesture information need rather gathering information generally given existing format article argues given growing presence virtual reality situation gesture signal must encoded specific format needed proposed format feature inner property signal dimensionality structural feature type variable spatial temporal property article first review various situation multisensory virtual object gesture control intervene proposed format deduced mean encode versatile variable gestural animated scene
ComputerScience,formal proof schur conjugate function,main goal work formally prove correctness key command schur software interactive program calculating character lie group symmetric function core computation relies enumeration manipulation combinatorial structure first proof concept present formal proof conjugate function written c function computes conjugate integer partition formally prove program use framac software allows u annotate c function generate proof obligation proved using several automated theorem provers paper also draw methodology discussing formally prove kind program
ComputerScience,mpix taskbased parallelization dynamic load balance finite element assembly,main computing task finite element code fe solving partial differential equation pde algebraic system assembly iterative solver work focus first task context hybrid mpix paradigm although describe algorithm fe context similar strategy straightforwardly applied discretization method like finite volume method matrix assembly consists loop element mpi partition compute element matrix righthand side assembly local system mpi partition mpix hybrid parallelism context x consisted traditionally loop parallelism using openmp several strategy proposed literature implement loop parallelism like coloring substructuring technique circumvent race condition appears assembling element system local system main drawback first technique decrease ipc due bad spatial locality second technique avoids issue requires extensive change implementation cumbersome several element loop treated propose alternative based task parallelism element loop using extension openmp programming model taskification assembly solves aforementioned problem addition dynamic load balance applied using dlb library especially efficient presence hybrid mesh relative cost different element impossible estimate priori paper present proposed methodology implementation validation solution large computational mechanic problem core
ComputerScience,making fpgas accessible scientist engineer domain expert software programmer labview,paper present graphical programming framework labview associated language library well programming technique pattern found useful making fpgas accessible scientist engineer domain expert software programmer
ComputerScience,theory practice,author argues silicon valley important powerful part computer science work simultaneously theoretical practical particularly considers intersection theory algorithm practical software development combine example development tex typesetting system clever joke criticism encouragement
ComputerScience,revolution yet happen,information physical object including human building process organization online trend desirable inevitable cyberspace provide basis wonderful new way inform entertain educate people information corresponding system streamline commerce also provide new level personal service health care automation significant benefit breakthrough ability remotely communicate one another using sens acm transistor born time stored program computer revolutionary idea transistor curiosity idea evolved rapidly mid integrated circuit appeared allowing mass fabrication transistor silicon substrate allowed lowcost massproduced computer technology enabled extraordinary increase processing speed memory coupled extraordinary price decline form processing memory easily cheaply rapidly fabricated human brain peter cohrane estimate brain processing power around millionmillion operation per second one petaops memory terabyte current trend continue computer could capability computer could body personal assistant able recall everything one read hears see
ComputerScience,next dozen informationtechnology research goal,charles babbage vision computing largely realized verge realizing vannevar bush memex distance passing turing test three vision associated problem provided longrange research goal many u example scalability problem motivated several decade talk defines set fundamental research problem broaden babbage bush turing vision extend babbage computational goal include highlysecure highlyavailable selfprogramming selfmanaging selfreplicating system extend bush memex vision include system automatically organizes index digest evaluates summarizes information well human might another group problem extends turing vision intelligent machine include prosthetic vision speech hearing sens problem simply stated orthogonal others though share common core technology
ComputerScience,question materialist philosophy implying equivalence computer human cognition,issue related materialist philosophy explored concern implied equivalence computer running software human observer one issue explored concern measurement process quantum mechanic another issue explored concern nature experience revealed existence dream difficulty stemming materialist philosophy regard issue pointed example gedankenexperiment involving called negative observation discussed illustrates difficulty materialist assumption quantum mechanic based exploration difficulty specification outlined briefly would provide mean demonstrate equivalence computer running software human experience given materialist assumption
ComputerScience,one revolution make free scientific publishing,computer scientist position create new free highquality journal would take
ComputerScience,enum collision telephony dns policy,enum mark either convergence collision public telephone network internet enum innovation domain name system dns start numerical domain name used query dns name server server respond address information found dns record telephone number email address fax number sip address information concept use single number order obtain plethora contact information convention internet engineering task force ietf enum working group determined enum number would numerical string telephone number addition assignee enum number would assignee telephone number enum could work numerical string fact domain name ietf already working using number enum abridged
ComputerScience,edsger wybe dijkstra portrait genius,discus scientific contribution edsger wybe dijkstra opinion legacy
ComputerScience,classical nonextensive information theory,work firstly review result classical information theory next try generalize result using tsallis entropy present preliminary result discus aim field
ComputerScience,prehistory quantum computation,main idea behind development theory technology quantum computation formulated late early two physicist west mathematician former soviet union generally known west subject root russian technical literature author hope present impartial synthesis possible early history thought subject role reversible irreversible computational process examined briefly relates origin quantum computing socalled information paradox physic
ComputerScience,first thought stability asynchronous system,noninitialized nondeterministic asynchronous system inputoutput sense multivalued function mdimensional signal set ndimensional signal concept inspired modeling asynchronous circuit purpose state problem stability
ComputerScience,equation ideal latch,latch simple circuit feedback digital electrical engineering included work c element muller r latch clocked r latch latch also circuit containing two interconnected latch edge triggered r flipflop flipflop jk flipflop flipflop purpose study model equation previous circuit considered ideal ie noninertial technique analysis pseudoboolean differential calculus
ComputerScience,real time model asynchronous circuit delay theory,chapter book introduces delay theory whose purpose modeling asynchronous circuit digital electrical engineering ordinary differential pseudoboolean equation
ComputerScience,method scaling large member base,technical challenge scaling website large growing member base like social networking site numerous one challenge evenly distribute growing member base across available resource paper explore various method address issue technique used paper generalized applied various problem need distribute data evenly amongst finite amount resource
ComputerScience,ten incredibly dangerous software idea,rough draft synopsis book presently preparation book provides systematic critique software industry critique accomplished using classical method practical design science
ComputerScience,intersection union asynchronous system,asynchronous system f model asynchronous circuit digital electrical engineering multivalued function associate input u mathbf r set state xin f u x mathbf r n intersection system allows adding supplementary condition modeling union system allows considering validity one two system modeling example testing asynchronous circuit circuit supposed good bad purpose paper analyzing intersection union initialfinal state initialfinal time initialfinal state function subsystem dual system inverse system cartesian product system parallel connection serial connection system
ComputerScience,recruitment preparation retention case study computing culture university illinois urbanachampaign,computer science seeing decline enrollment level education including undergraduate graduate study paper report result study conducted university illinois urbanachampaign evaluated student attitude regarding three area contribute improved enrollment department computer science recruitment preparation retention result study saw two theme first department tight research focus appears draw significant attention activity teaching service communitybuilding activity necessary department excellence yet demonstrated second theme one partial solution better promote activity already employed department student faculty based result make recommendation improvement enhancement based current state practice peer institution
ComputerScience,mimo detection employing markov chain monte carlo,propose softoutput detection scheme multipleinputmultipleoutput mimo system detector employ markov chain monte carlo method compute bit reliability signal received thus suited coded mimo system offer good tradeoff achievable performance algorithmic complexity
ComputerScience,stop subversive spreadsheet,paper document formation european spreadsheet risk interest group eusprig wwweusprigorg outline research undertaken reported upon interested party eusprig publication
ComputerScience,equation ideal latch,latch simple circuit feedback digital electrical engineering included work c element muller r latch clocked r latch latch also circuit containing two interconnected latch edge triggered r flipflop flipflop jk flipflop flipflop purpose study model equation previous circuit considered ideal ie noninertial technique analysis pseudoboolean differential calculus
ComputerScience,nonanticipation asynchronous system,asynchronous system model asynchronous circuit digital electrical engineering nonanticipation one important property system theory present purpose introduce several concept nonanticipation asynchronous system
ComputerScience,design implementation master science information computer science inventory retrospect last four year,master science computer information science mics international accredited master program initiated started september mics researchoriented academic study semester continuation bachelor towards phd completely taught english supported lecturer coming ten different country report compass description underlying architecture describes implementation detail give presentation diverse experience result program designed implemented right creation university significance program moreover selfdiscovery computer science department finally led creation today research institute research ax
ComputerScience,modeling time computing taxonomy comparative survey,increasing relevance area realtime embedded system pervasive computing hybrid system control biological social system modeling bringing growing attention temporal aspect computing computer science domain also traditional field engineering article survey various approach formal modeling analysis temporal feature computerbased system level detail suitable also nonspecialists provides unifying framework rather comprehensive list formalism paper first lay key dimension along various formalism evaluated compared significant sample formalism time modeling computing presented discussed according dimension adopted perspective extent historical going traditional model formalism modern one
ComputerScience,free open source software development,development organization international nongovernmental organization emphasizing high potential free open source software le developed country cost reduction le vendor dependency increased potential local capacity development main argument spite advantage free open source software widely adopted african continent book author explore ground expectation based come evidence support expectation past year several project initiated good result achieved time many challenge encountered lesson drawn experience experience contain enough evidence support high expectation several project achievement considered final part book future free open source software development explored special attention given african continent since challenge highest role free open source software development need position explore potential threat book aim professional engaged design implementation ict development project want improve understanding role free open source software play
ComputerScience,dialogue concerning two world system infocomputational v mechanistic,dialogue develops argument adopting new world system infocomputationalist naturalism poised replace traditional mechanistic world system try figure infocomputational paradigm would mean particular pancomputationalism make step towards developing notion computing necessary especially relation traditional notion investigate whether pancomputationalism possibly provide basic causal structure world whether overall research programme appears productive whether revigorate computationalism philosophy mind
ComputerScience,removing barrier interdisciplinary research,significant amount highimpact contemporary scientific research occurs biology computer science engineering chemistry converge although programme put place support work complex dynamic interdisciplinarity still poorly understood paper interrogate nature interdisciplinary research might measure success identify potential barrier implementation suggest possible mechanism removing impediment
ComputerScience,serial connection regular asynchronous system,asynchronous system f multivalued function representing nondeterministic model asynchronous circuit digital electrical engineering real time map admissible input function u rrightarrow set f u possible state xinf u x rrightarrow f defined making use generator function phi n time rightarrow n system called regular usual definition serial connection system composition multivalued function bring regular system regular system thus first issue study modify acceptable manner definition serial connection way match regularity intention expressed first time without proving regularity serial connection system previous work present purpose restate certain correction prove result
ComputerScience,infocomputationalism philosophical aspect research information science,historical development lead decay natural philosophy century included knowledge physical world growing multitude specialized science focus indepth enquiry disentangled broad context lead problem loss common worldview impossibility communication specialist research field different language developed isolation need new unifying framework becoming increasingly apparent information technology enabling intensifying communication different research field knowledge community time natural science also human knowledge integrated global network internet diverse knowledge language community infocomputationalism icon synthesis pancomputationalism paninformationalism present unifying framework understanding natural phenomenon including living being cognition way processing information producing knowledge within icon physical universe understood network computational process informational structure
ComputerScience,alan turing legacy infocomputational philosophy nature,alan turing pioneering work computability idea morphological computing support andrew hodges view turing natural philosopher turing natural philosophy differs importantly galileo view book nature written language mathematics assayer computing language nature computation produce real time physical behavior article present framework natural infocomputationalism contemporary natural philosophy build legacy turing computationalism infocomputationalism synthesis informational structural realism view nature web informational structure natural computationalism view nature physically computes time development present framework development unified approach nature common interpretation inanimate nature well living organism social network computing understood information processing drive change different level organization information modeled morphological computing data set pertinent informational structure use infocomputational conceptualization model tool make possible first time history study complex selforganizing adaptive system including basic characteristic function living system intelligence cognition
ComputerScience,nanoinfobio casestudy interdisciplinary research,significant amount highimpact contemporary scientific research occurs biology computer science engineering chemistry converge although programme put place support work complex dynamic interdisciplinarity still poorly understood paper highlight potential barrier effective research across discipline suggest using case study possible mechanism removing impediment
ComputerScience,writing publishing scientific article computer science,year teaching advising student coordinating scientific research activity project computer science observed difficulty student write scientific paper present result research practice addition repeatedly doubt publishing process article propose conceptual framework support writing publishing scientific paper computer science providing kind guide computer science student effectively present result research practice particularly experimental research
ComputerScience,motivation design ubiquity discussion research ethic computer science,modern society permeated computer software control latent longterm immediate effect reach far beyond actual user system place researcher computer science software engineering critical position influence responsibility field computer system vital research tool discipline essay present several key ethical concern responsibility relating research computing goal promote awareness discussion ethical issue among computer science researcher hypothetical case study provided along question reflection discussion
ComputerScience,making sense evolution scientific domain visual analytic study sloan digital sky survey research,introduce new visual analytic approach study scientific discovery knowledge diffusion approach enhances contemporary cocitation network analysis enabling analyst identify cocitation cluster cited reference intuitively synthesize thematic context cluster cited trace research focus evolves time new approach integrates streamlines previously isolated technique spectral clustering feature selection algorithm integrative procedure expected empower strengthen analytical sense making capability scientist learner researcher understand dynamic evolution scientific domain wide range scientific field science study science policy evaluation planning demonstrate potential approach visual analysis evolution astronomical research associated sloan digital sky survey sd using bibliographic data addition also demonstrate approach consistently applied set heterogeneous data source eprints arxiv publication ad nsf award related topic sd
ComputerScience,philosophical solution p np p equal np,p np problem philosophically solved showing p equal np random access unit multiply mram model shown mram model empirically best model computation hardness p np problem shown scientific rather mathematical problem assumption involved current definition p np problem problem involving non deterministic turing machine ndtms axiomatic automaton theory criticized problem also shown neither problem pure applied mathematics detail mram model well known hartmanis simon construction show code simulate ndtms mram machine described since computation power mrams ndtms p equal np paper show justification ndtm p np problem using letter kurt godel john von neumann incorrect showing von neumann explicitly rejected automaton model computation hardness used computer architecture modeling computation exactly mram model paper argues deolalikar scientific solution showing p equal np assumption statistical physic used need revisited
ComputerScience,typology computation computational model,need much better understanding information processing computation primary form future progress new computational device capable dealing problem big data internet thing semantic web cognitive robotics neuroinformatics depends adequate model computation article first present current state art systematization existing model mechanism outline basic structural framework computation argue defining computation information processing given information without physical representation dynamic information fundamental level physical intrinsic natural computation special case intrinsic computation used designed computation computing machinery intrinsic natural computation occurs variety level physical process containing level computation living organism including highly intelligent animal well designed computational device present article offer typology current model computation indicates future path advancement field development new computational model learning nature better compute using different mechanism intrinsic computation
ComputerScience,le connaissances de la toile,manage knowledge web
ComputerScience,bouncing tower move faster hanoi tower still require exponential time,problem hanoi tower classic exercise recursive programming solution simple recursive definition complexity matching lower bound solution simple recursive function solution easy student memorize regurgitate exam without truly understanding describe minor change rule hanoi tower yield various increase complexity solution require deeper analysis classical hanoi tower problem still yielding exponential solution particular analyze problem fo bouncing tower changing insertion extraction position top middle tower result surprising increase complexity solution tower n disk optimally moved sqrt n move n even ie le hanoi tower height via recursive function equivalently one recursion function state
ComputerScience,life mind everything,incompleteness theorem godel turing chaitin algorithmic information theory profound epistemological implication incompleteness limit ability ever understand every observable phenomenon universe incompleteness limit ability evolutionary process finding optimal solution incompleteness limit detectability machine consciousness effort convey thought result somewhat entertaining manner
ComputerScience,le droit du numérique une histoire à préserver,although history informatics recent field pose unusual problem respect preservation problem amplified legal issue digital law subject matter whose history also worth presenting computer science museum purpose paper present quick overview evolution law regarding digital matter historical perspective well respect preservation presentation work
ComputerScience,computing nature network network concurrent information process,text present research field naturalunconventional computing appears book computing nature article discussed consist selection work symposium natural computing aisbiacap british society study artificial intelligence simulation behaviour international association computing philosophy world congress held university birmingham celebrating turing centenary computing nature nature considered totality physical existence universe physical mean phenomenon object process possible detect either directly sens via instrument historically many way describing universe cosmic egg cosmic tree theistic universe mechanistic universe particularly prominent contemporary approach computational universe discussed article
ComputerScience,grasping complexity,century complexity come face science changed surprisingly start asking essence change critically analyse answer result mostly discouraging answer related property focus scientific research already century like nonlinearity paper preface special issue grasping complexity journal computer mathematics application analyse change era science reason main change scientific activity give brief review paper issue
ComputerScience,level abstraction apparent contradictory philosophical legacy turing shannon,recent article luciano floridi explains view turing legacy connection philosophy information briefly survey one turing contribution philosophy information computation including similarity shannon methodological approach information communication showing crucial methodological strategy understanding key aspect concept floridi concept level abstraction related novel methodology turing imitation game tackling question machine intelligence turing main contribution philosophy information run contrary indeed seminal concept computation universality strongly suggests deletion fundamental difference among seemingly different level description might reconcile apparently contradictory contribution argue turing contribution prompt u plot direction philosophy information computation one closely parallel important development computer science one understands profound implication work turing shannon others
ComputerScience,dialogue concerning two chief world view,galileo galilei wrote book called textit dialogue concerning two chief world system compared new copernican model universe old ptolemaic model book took form dialogue three philosopher salviati proponent copernican model simplicio proponent ptolemaic model sagredo initially openminded neutral paper going use galileo idea present dialogue three modern philosopher mr spock proponent view mathsf p neq mathsf np professor simpson proponent view mathsf p mathsf np judge wapner initially openminded neutral
ComputerScience,research method computer science challenge issue,research method essential part conducting research project although theorized summarized based best practice every field science requires adaptation overall approach perform research activity addition specific research need particular adjustment generalized approach specializing suit project hand however unlike wellestablished science discipline computing research supported welldefined globally accepted method infancy ambiguity definition one hand extensive coverage overlap field hand article discus research method science engineering general computing particular show despite several special parameter make research computing rather unique still follows step scientific research would article also show particularity researcher need consider conduct research field
ComputerScience,kalman filtering distributed time series,paper aim introduce application kalman filtering theory rather unconventional recent experiment shown many natural phenomenon especially ecology meteorology could monitored predicted accurately accounting evolution geographical area thus signal provide gathered together collection distributed time series despite common sense time series le correlated instead processing time series independently collection constitute set measurable state provided open system modeling predicting system state take benefit family kalman filtering algorithm article describes adaptation basic kalman filter context distributed signal collection completes application coming meteorology
ComputerScience,path unconventional computing causality complexity,describe path unconventionality exploration theoretical applied aspect computation towards revealing algorithmic reprogrammable property capability world particular related application algorithmic complexity reshaping molecular biology tackling challenge causality science
ComputerScience,read research compendium,researcher spend great deal time reading research paper keshav provides threepass method researcher improve reading skill article extends keshav method reading research compendium research compendia increasingly used form publication package research paper text figure also data software better reproducibility introduce existing convention research compendia suggest utilise shared property structured reading process unlike original article build upon long history intends provide guidance outset emerging practice
ComputerScience,man computer face anniversary ivan edward sutherland,article present main milestone science technology biography ivan edward sutherland influence family school development research competency shown littleknown biographical fact explaining evolution scientific interest presented dynamic objectoriented graphic system system virtual reality asynchronous circuit
ComputerScience,big data end scientific method,argue boldest claim big data need revision toningdown view basic lesson learned science complex system point extravagant claim big data properly discarded synergistic merging bd big theory offer considerable potential spawn new scientific paradigm capable overcoming major barrier confronted modern scientific method originating galileo obstacle due presence nonlinearity nonlocality hyperdimensions one encounter frequently multiscale modelling
ComputerScience,helmut jürgensen former student game informatics research,personal reflection given student helmut j urgensen attempt address hypothesis informatics follows trendlike behaviour use content analysis university job advertisement via simulation technique area quantitative economics
ComputerScience,solving black box problem normative framework explainable artificial intelligence,many computing system programmed using machine learning opaque difficult know work explainable artificial intelligence research program aim develop analytic technique render opaque computing system transparent lack normative framework evaluate technique explanatory success aim present discussion develop framework paying particular attention different stakeholder distinct explanatory requirement building analysis opacity philosophy science framework modeled david marr influential account explanation cognitive science thus framework distinguishes different question might asked opaque computing system specifies general way question answered applying normative framework current technique input heatmapping featuredetector identification diagnostic classification possible determine whether extent black box problem solved
ComputerScience,retracing assessing cep project,last decade witnessed renewed interest development italian computer industry role fifty pioneer rome milan ivrea pisa aim paper retrace step cep project carried university pisa collaboration olivetti reassessing document preserved university archive project seminal enterprise italy among accomplishment delivered first italian computer mix public sector funding industrial foretelling witnessed project one leading example italy best practice success paved way birth computer science country industry well scientific discipline
ComputerScience,template suggestion writing easytoread research article,number research paper written growing least linearly exponentially recent year proportion amount time reader allocates per paper decreasing accessible paper appreciated large audience hardtoread paper may remain obscure long time regardless scientific merit unfortunately still insufficient emphasis good written oral communication skill technical discipline especially engineering academic realised year keep telling student thing write paper report presentation thesis article contains suggestion serf limited template organising research article adopted practical personal approach nt claim formal contribution scientific communication literature however hope article make life bit easier also help graduate student academic supervisor
ComputerScience,need modern computing paradigm science applied computing,hundred year ago classic physic full power unexplained phenomenon however led revolution development modern physic today computing similar position computing sound success story exponentially growing utilization growing number difficulty unexpected issue moving towards extreme utilization condition physic studying nature extreme condition lead understanding relativistic quantal behavior quite similarly computing phenomenon acquired connection extreme computing condition understood based classic computing paradigm paper draw attention extreme condition qualitatively different behavior may encountered physic computing pinpointing certain formerly unnoticed neglected aspect enable explain new phenomenon well enhance computing feature moreover idea modern computing paradigm implementation proposed
ComputerScience,oprema relay computer carl zeiss jena,oprema optikrechenmaschine computer optical calculation relay computer whose development initiated herbert kortum designed built team leadership wilhelm kaemmerer carl zeiss jena czj basic experiment design construction done partly concurrently remarkably short time month shortly electronic g heinz billing goettingen universal computer germany gdr oprema consisted two identical machine one machine consisted relay selenium rectifier km cable main reason construction oprema computational need czj leading company optic precision mechanic gdr lifetime oprema applied czj number institute company gdr paper present new detail oprema project arithmetic operation implemented oprema additionally cover briefly life two protagonist w kaemmerer h kortum draw comparison early project namely colossus asccmark eniac finally discus question whether kortum german computer pioneer
ComputerScience,artificial intelligence chaos prediction understanding science,machine learning deep learning technique contributing much advancement science powerful predictive capability appear numerous discipline including chaotic dynamic miss understanding main thesis prediction understanding two different important idea guide u progress science furthermore emphasized important role played nonlinear dynamical system process understanding path future science marked constructive dialogue big data big theory without understand
ComputerScience,kolmogorov legacy algorithmic theory informatics kolmogorov programmable technology,survey explore andrei nikolayevich kolmogorov seminal work one many facet influence computer science especially viewpoint herein call algorithmic theory informatics computer file reduce size add new symbol equation state like second newton law physic exist computer science leibniz principle identification indistinguishability formalized computer coordinate distance dimension traditional mathematical approach work computer process finite binary sequence ie sequence natural question arises continue today done many year approach computer science problem using classical mathematical apparatus mathematical modeling first drew attention question gave insightful answer kolmogorov kolmogorov empirical postulate existence program translates natural number binary record record number formulated represents hint kolmogorov approach computer science following idea interpret kolmogorov algorithm kolmogorov machine kolmogorov complexity context modern information technology showing essentially represent fundamental element algorithmic theory informatics kolmogorov programmable technology new komputer mathematics ie mathematics computer
ComputerScience,optimizing placement heap memory object energyconstrained hybrid memory system,main memory dram significantly impact power energy utilization overall server system nonvolatile memory nvm device phase change memory spintransfer torque ram suitable candidate main memory reduce energy consumption unlike dram nvms access latency higher dram nvm writes energy sensitive dram write operation thus hybrid main memory system hmms employing dram nvm proposed reduce overall energy depletion main memory optimizing performance nvm paper proposes emap optimal heap memory object placement planner hmms emap considers objectlevel access pattern energy consumption application level provides ideal placement strategy object augment performance energy utilization emap equipped two module emplan emdyn specifically emplan static placement planner provides one time placement policy memory object meet energy budget emdyn runtime placement planner consider change energy limiting constraint runtime shuffle memory object taking account access pattern well migration cost term energy performance evaluation show proposed solution satisfies energy limiting constraint performance compare methodology stateoftheart memory object classification allocation moca framework extensive evaluation show proposed solution emplan meet energy constraint time le costly reducing energy consumption performance emdyn also satisfies performance energy requirement considering migration cost term time energy
ComputerScience,supporting knowledge expertise finding within australia defence science technology organisation,paper report work aimed supporting knowledge expertise finding within large research development r organisation paper first discus nature knowledge important r organisation present prototype information system developed support knowledge expertise finding paper discus trial system within r organisation implication limitation trial discus future research question
ComputerScience,rankaware dynamic migration adaptive demotion dram power management,modern dram architecture allow number lowpower state individual memory rank advanced power management many previous study taken advantage demotion lowpower state energy saving however demotion scheme statically performed limited number preselected lowpower state suboptimal different workload memory architecture even worse idle period often short effective power state transition especially memory intensive application wrong decision power state transition incur significant energy delay penalty paper propose novel memory system design named ramzzz rankaware energy saving optimization including dynamic page migration adaptive demotion specifically group page similar access locality rank dynamic page migration rank hotness hot rank kept busy high utilization cold rank lengthy idle period power state transition develop adaptive state demotion considering lowpower state rank prediction model estimate powerdown timeout among state experimentally compare algorithm energy saving policy cycleaccurate simulation experiment benchmark workload show ramzzz achieves significant improvement energy consumption energy saving technique
ComputerScience,hardware time manager implementation xenomai realtime kernel embedded linux,nowadays use embedded operating system different embedded project subject tremendous growth embedded linux becoming one popular eos due modularity efficiency reliability cost one way make hard realtime include realtime kernel like xenomai one key characteristic realtime operating system rtos ability meet execution time deadline deterministically precise flexible time management better handle efficiently determinism different embedded application rtos time precision characterized specific periodic interrupt service controlled software time manager smaller period interrupt better precision rtos overload cpu though reduces overall efficiency rtos paper propose drastically reduce overhead migrating time management service xenomai configurable hardware component relieve cpu hardware component implemented field programmable gate array coupled cpu work achieved master degree project student could apprehend many field embedded system rtos programming hardware design performance evaluation etc
ComputerScience,deterministic memory abstraction supporting multicore system architecture,poor time predictability multicore processor longstanding challenge realtime system community paper make case fundamental problem prevents efficient predictable realtime computing multicore lack proper memory abstraction express memory criticality cut across various layer system application o hardware therefore propose new holistic resource management approach driven new memory abstraction call deterministic memory key characteristic deterministic memory platform o hardware guarantee small tightly bounded worstcase memory access timing contrast call conventional memory abstraction besteffort memory highly pessimistic worstcase bound achieved propose utilize abstraction achieve high time predictability without significantly sacrificing performance present deterministic memoryaware o architecture design including oslevel page allocator hardwarelevel cache dram controller design implement proposed o architecture extension linux simulator evaluation result using set synthetic realworld benchmark demonstrate feasibility effectiveness approach
ComputerScience,preliminary evaluation hypervisorbased virtualization mechanism intel optane dc persistent memory module,nonvolatile memory nvm technology accessible manner dram considered indispensable expanding main memory capacity intel optane dcpmm longawaited product drastically increase main memory capacity however substantial performance gap exists dram dcpmm experiment readwrite latency dcpmm higher dram respectively readwrite bandwidth dram performance gap main memory present new challenge researcher need new system software technology supporting emerging hybrid memory architecture paper present raminate hypervisorbased virtualization mechanism hybrid memory system key technology address performance gap main memory system provides great flexibility memory management maximizes performance virtual machine vms dynamically optimizing memory mapping experiment confirmed even though vm dram ram performance degradation vm drastically alleviated memory mapping optimization elapsed time finish build linux kernel vm second increase dram case ie second optimization mechanism disabled elapsed time increased second ie increase dram case
ComputerScience,mitosis transparently selfreplicating pagetables largememory machine,multisocket machine tb physical memory becoming prevalent application running multisocket machine suffer nonuniform bandwidth latency accessing physical memory decade research focused data allocation placement policy numa setting study question place pagetables amongst socket make case explicit pagetable allocation policy show pagetable placement becoming crucial overall performance propose mitosis mitigate numa effect pagetable walk transparently replicating migrating pagetables across socket without application change reduces frequency access remote numa node performing pagetable walk mitosis us two component mechanism enable efficient pagetable replication migration ii policy process efficiently manage control pagetable replication migration implement mitosis linux evaluate benefit real hardware mitosis improves performance largescale multisocket workload replicating pagetables across socket moreover improves performance case o migrates process across socket enabling crosssocket pagetable migration
ComputerScience,analytic definition curve surface parabolic blending,procedure interpolating specified point curve surface described method guarantee slope continuity junction surface panel divided p x q contiguous patch completely specified coordinate x point individual patch however depends parametrically coordinate point allowing shape flexibility global conformity
ComputerScience,modeldriven approach new generation adaptive library,efficient highperformance library often expose multiple tunable parameter provide highly optimized routine range simple loop unroll factor vector size way algorithmic change given implementation suitable certain device exploiting hardware characteristic local memory vector unit traditionally parameter algorithmic choice tuned hardcoded specific architecture certain characteristic input however emerging application often datadriven thus traditional approach effective across wide range input architecture used practice paper present new adaptive framework datadriven application us predictive model select optimal algorithmic parameter training synthetic real datasets demonstrate effectiveness blas library specifically matrix multiplication routine present experimental result two gpu architecture show significant performance gain highend nvidia pascal gpu embedded arm mali gpu compared traditionally optimized library
ComputerScience,highly parallel sparse matrixmatrix multiplication,generalized sparse matrixmatrix multiplication key primitive many high performance graph algorithm well linear solver multigrid present first parallel algorithm achieve increasing speedup unbounded number processor algorithm based twodimensional block distribution sparse matrix serial section use novel hypersparse kernel scalability give stateoftheart mpi implementation one algorithm experiment show scaling thousand processor variety test scenario
ComputerScience,architectureaware configuration scheduling matrix multiplication asymmetric multicore processor,asymmetric multicore processor amp recently emerged appealing technology severely energyconstrained environment especially mobile appliance heterogeneity application mainstream addition given growing interest lowpower high performance computing type architecture also investigated mean improve throughputperwatt complex scientific application paper design embed several architectureaware optimization multithreaded general matrix multiplication gemm key operation blas order obtain high performance implementation arm biglittle amp solution based reference implementation gemm blis library integrates cacheaware configuration well asymmetric static dynamic scheduling strategy carefully tune distribute operation microkernels among big little core target processor experimental result samsung exynos systemonchip arm cluster implement biglittle model expose cacheaware version gemm asymmetric scheduling attain important gain performance respect architectureoblivious counterpart exploiting resource amp deliver considerable energy efficiency
ComputerScience,parallel sparse matrixmatrix multiplication indexing implementation experiment,generalized sparse matrixmatrix multiplication spgemm key primitive many high performance graph algorithm well linear solver algebraic multigrid show spgemm also yield efficient algorithm general sparsematrix indexing distributed memory provided underlying spgemm implementation sufficiently flexible scalable demonstrate parallel spgemm method use twodimensional block data distribution serial hypersparse kernel indeed highly flexible scalable memoryefficient general case algorithm first yield increasing speedup unbounded number processor experiment show scaling thousand processor variety test scenario
ComputerScience,sparse matrixvector multiplication gpgpu cluster new storage format scalable implementation,sparse matrixvector multiplication spmvm dominant operation many sparse solver investigate performance property spmvm matrix various sparsity pattern nvidia fermi class gpgpus new padded jagged diagonal storage pjds format proposed may substantially reduce memory overhead intrinsic widespread ellpackr scheme test scenario pjds format cut overall spmvm memory footprint gpgpu achieves ellpackr performance using suitable performance model identify performance bottleneck node level invalidate type matrix structure efficient multigpgpu parallelization appropriate sparsity pattern extend previous work distributedmemory parallel spmvm demonstrate scalable hybrid mpigpgpu code achieving efficient overlap communication computation
ComputerScience,reducing communication algebraic multigrid multistep node aware communication,algebraic multigrid amg often viewed scalable mathcal n solver sparse linear system yet parallel amg lack scalability due increasingly large cost associated communication initial construction multigrid hierarchy well iterative solve phase work introduces parallel implementation amg reduce cost communication yielding increase scalability standard interprocess communication consists sending data regardless send receive process location performance test show notable difference cost intra internode communication motivating restructuring communication case communication schedule take advantage le costly intranode communication reducing number size internode message nodecentric communication extends range component setup solve phase amg yielding increase weak strong scalability entire method
ComputerScience,blockchain go green analysis blockchain lowpower node,motivated massive energy usage blockchain one hand significant performance improvement lowpower wimpy system hand perform indepth timeenergy analysis blockchain system lowpower node comparison highperformance node use three lowpower system represent wide range performancepower spectrum covering arm architecture show lowend wimpy node struggling run fullfledged blockchains mainly due small lowbandwidth memory hand wimpy system balanced performancetopower ratio achieve reasonable performance saving significant amount energy example jetson node achieve around throughput parity hyperledger respectively using le energy compared traditional brawny server intel xeon cpu
ComputerScience,proceeding first workshop ctp component educational software,workshop received thirteen submission twelve accepted presented workshop postconference proceeding nine submission received accepted submission within scope following point announced call paper ctpbased software tool education ctp technology combined novel interface drag drop etc technology access itp knowledge relevant certain step problem solving usability consideration representing itp knowledge combination deduction computation formal problem specification effectiveness atp checking user input format deductive content proof document geometric construction etc formal domain model elearning mathematics application
ComputerScience,internetenabled technology support evolutionary design,paper discus systematic use product feedback information support lifecycle design approach provides guideline developing design product system level design activity surveyed light product life cycle design information flow interpreted semiotic perspective natural evolution design considered notion design expectation introduced importance evaluation expectation dynamic environment argued possible strategy reconciliation expectation environmental factor described internetenabled technology proposed monitor product functionality usage operational environment supply designer relevant information pilot study assessing design expectation refrigerator outlined conclusion drawn
ComputerScience,computerassisted interactive documentary performance art illimitable space,major component research described thesis computer graphic specifically realistic physicsbased softbody simulation haptic responsive environment minor component include advanced humancomputer interaction environment nonlinear documentary storytelling theatre performance journey research unusual requires researcher solid knowledge background multiple discipline also creative sensitive order combine possible area new research direction focus advanced computer graphic emerges experimental cinematic work theatrical artistic practice development content installation completed prove evaluate described concept convincing summarize resulting work involves artistic creativity solving combining technological hurdle motion tracking pattern recognition force feedback control etc available documentary footage film video image text via variety device programming installing needed interface work realtime thus contribution knowledge advancement solving interfacing problem realtime aspect interaction us film industry fashion industry new age interactive theatre computer game webbased technology service entertainment education also includes building experience integrate kinect hapticbased interaction artistic scenery rendering form control research work connects research discipline seemingly disjoint field research computer graphic documentary film interactive medium theatre performance together
ComputerScience,graphmaps browsing large graph interactive map,algorithm laying large graph seen significant progress past decade however browsing large graph remains challenge rendering thousand graphical element often result cluttered image navigating element naively cause disorientation address challenge propose method called graphmaps mimicking browsing experience online geographic map graphmaps creates sequence layer layer refines previous one graph browsing graphmaps chooses layer corresponding zoom level render entity layer intersect current viewport result regardless graph size number entity rendered view exceed predefined threshold yet graph element explored standard zoom pan operation graphmaps preprocesses graph way browsing geometry entity stable viewer responsive case study indicate graphmaps useful gaining overview large graph also exploring graph finer level detail
ComputerScience,staging humancomputer dialog application futamura projection,demonstrate application futamura projection humancomputer interaction particularly staging humancomputer dialog specifically providing staging analog classical futamura projection demonstrate futamura projection applied staging humancomputer dialog addition execution program
ComputerScience,dslbased design space exploration temporal spatial parallelism custom stream computing,stream computation one approach suitable fpgabased custom computing due high throughput capability brought pipelining regular memory access increase performance iterative stream computation exploit temporal spatial parallelism deepening duplicating pipeline respectively however performance constrained several factor including available hardware resource fpga external memory bandwidth utilization pipeline stage therefore need find best mix different parallelism achieve highest performance per power paper present domainspecific language dsl based design space exploration temporally andor spatially parallel stream computation fpga define dsl easily design hierarchical structure parallel stream computation abstract description computation iterative stream computation fluid dynamic simulation design hardware structure different mix temporal spatial parallelism measuring performance power consumption find best among
ComputerScience,trusttech based method optimization learning,many problem arise machine learning domain deal nonlinearity quite often demand user obtain global optimal solution rather local optimal one optimization problem inherent machine learning algorithm hence many method machine learning inherited optimization literature popularly known initialization problem ideal set parameter required significantly depend given initialization value recently developed trusttech transformation stabilityretaining equilibrium characterization methodology systematically explores subspace parameter obtain complete set local optimal solution thesis work propose trusttech based method solving several optimization machine learning problem two stage namely local stage neighborhoodsearch stage repeated alternatively solution space achieve improvement quality solution method tested synthetic real datasets advantage using novel framework clearly manifested framework reduces sensitivity initialization also allows flexibility practitioner use various global local method work well particular problem interest hierarchical stochastic algorithm like evolutionary algorithm smoothing algorithm also studied framework combining method trusttech proposed evaluated several test system
ComputerScience,effectiveness anonymization doubleblind review,doubleblind review relies author ability willingness effectively anonymize submission explore anonymization effectiveness ase oopsla pldi asking reviewer guess author identity find review contain correct guess reviewer selfidentify expert paper topic likely attempt guess likely guess correctly present finding summarize pc chair comment administering doubleblind review discus advantage disadvantage revealing author identity part way process conclude advocating continued use doubleblind review
ComputerScience,semiclassical quantum computation solution count infinity problem brief discussion,paper briefly define distance vector routing algorithm advantage possible drawback possible drawback currently widely used method split horizon poisoned reverse defined compared count infinity problem specified classified halting problem proposition stating entangled state used quantum computation used handle problem examined several solution problem using entangled state proposed brief introduction entangled state presented
ComputerScience,parallel computing environment method power distribution system simulation,development costeffective highperformance parallel computing multiprocessor supercomputer make attractive port excessively time consuming simulation software personal computer pc super computes power distribution system simulator pd take bottomup approach simulates load appliance level detailed thermal model appliance used approach work well small power distribution system consisting thousand appliance number appliance increase simulation us pc memory runtime increase point approach longer feasible model practical large power distribution system paper present effort made port pcbased power distribution system simulator sharedmemory supercomputer paper offer overview parallel computing environment description modification made pd model performance pd running standalone pc supercomputer compared future research direction utilizing parallel computing power distribution system simulation also addressed
ComputerScience,proceeding first workshop resource awareness adaptivity multicore computing racing,volume contains paper accepted workshop resource awareness adaptivity multicore computing racing held paderborn germany may racing colocated ieee european test symposium ets
ComputerScience,study energy locality effect using spacefilling curve,cost energy becoming increasingly important driver operating cost hpc system adding yet another facet challenge producing efficient code paper investigate energy implication trading computation locality using hilbert morton spacefilling curve dense matrixmatrix multiplication advantage curve exhibit inherent tiling effect without requiring specific architecture tuning accessing matrix order determined spacefilling curve trade computation locality index computation overhead morton curve found balanced locality energy efficiency overhead hilbert curve outweighs improvement test system
ComputerScience,imagespace environment image ontology management,researcher realized ontology play critical role development semantic web next generation web content consumable human also software agent development tool support ontology management including creation visualization annotation database storage retrieval thus extremely important developed imagespace image ontology creation annotation tool feature full support standard web ontology language damloil image ontology creation visualization image annotation display one integrated framework ontology consistency assurance storing ontology annotation relational database expected availability tool greatly facilitate creation image repository island semantic web
ComputerScience,ontoelan ontologybased linguistic multimedia annotator,despite scientific political practical value comprehensive information human language variety complexity readily obtainable searchable one reason many language data collected audio video recording imposes challenge document indexing retrieval annotation multimedia data provides opportunity making semantics explicit facilitates searching multimedia document developed ontoelan ontologybased linguistic multimedia annotator feature support loading displaying ontology specified owl creation language profile allows user choose subset term ontology conveniently rename needed creation ontological tier annotated profile term therefore corresponding ontological term saving annotation xml format multimedia ontology class instance linked class instance ontology used ontological tier best knowledge ontoelan first audiovideo annotation tool linguistic domain provides support ontologybased annotation
ComputerScience,verification treebased hierarchical readcopy update linux kernel,readcopy update rcu scalable highperformance linuxkernel synchronization mechanism run lowoverhead reader concurrently updaters productionquality rcu implementation multicore system decidedly nontrivial giving ubiquity linux rare millionyear bug occur several time per day across installed base stringent validation rcu complex behavior thus critically important exhaustive testing infeasible due exponential number possible execution suggests use formal verification previous verification effort rcu either focus simple implementation use modeling language latter requiring errorprone manual translation must repeated frequently due regular change linux kernel rcu implementation paper first describe implementation tree rcu linux kernel discus construct model directly tree rcu source code c use cbmc model checker verify safety liveness property best knowledge first verification significant part rcu source code important step towards integration formal verification linux kernel regression test suite
ComputerScience,mapping bid behavior conference referee,peerreview process present form repeatedly criticized many critique ranging publication delay referee bias paper focus specifically issue submitted manuscript distributed qualified referee unqualified referee without proper knowledge manuscript domain may reject perfectly valid study potentially damaging unknowingly accept faulty fraudulent result paper referee competence analyzed respect referee bid data collected joint conference digital library jcdl analysis referee bid behavior provides validation intuition referee bidding conference submission regard subject domain submission unfortunately relationship strong therefore suggests exists factor beyond subject domain may influencing referee bid particular submission
ComputerScience,hot potato case challenge multiplayer pervasive game based ad hoc mobile sensor network experimental evaluation prototype game,work discus multiplayer pervasive game rely use ad hoc mobile sensor network unique feature game player interact surrounding environment using movement presence mean performing gamerelated action utilizing sensor device discus fundamental issue challenge related type game scenario associated also present evaluate example game called hot potato developed using sun spot hardware platform provide set experimental result evaluate implementation also identify issue arise pervasive game utilize sensor network node show great potential type game
ComputerScience,distributed software architecture collaborative teleoperation based vr platform web application interoperability,augmented reality virtual reality provide human operator ho real help complete complex task robot teleoperation cooperative teleassistance using appropriate augmentation ho interact faster safer easier remote real world paper present extension existing distributed software network architecture collaborative teleoperation based networked humanscaled mixed reality mobile platform first teleoperation system composed vr application web application however system used together impossible control distant robot simultaneously goal update teleoperation system permit heterogeneous collaborative teleoperation platform important feature interface based different mobile platform control one many robot
ComputerScience,citation advantage open access article likely explained quality differential medium effect,study article published proceeding national academy science gunther eysenbach discovered significant citation advantage article made freelyavailable upon publication eysenbach author attempted control confounding factor may explained citation differential study unable control characteristic article may led author pay additional page charge immediate oa status oa article published pnas twice likely featured front cover journal v nearly twice likely picked medium v cited reached average nearly twice many news outlet subscriptionbased article v citation advantage open access article pnas may likely explained quality differential amplification medium effect
ComputerScience,preliminary review influential work datadriven discovery,gordon betty moore foundation ran investigator competition part datadriven discovery initiative received application applicant opportunity list five influential work general field big data scientific discovery collected nearly reference work cited least six time paper contains preliminary finding
ComputerScience,recomputation manifesto,replication scientific experiment critical advance science unfortunately discipline computer science never treated replication seriously even though computer good thing experiment rarely replicated rarely even replicable meaningful way scientist encouraged make source code available small step even happy event source code built run successfully running code long way away able replicate experiment code used propose discipline computer science must embrace replication experiment standard practice propose credible technique make experiment truly replicable provide copy virtual machine experiment validated run propose tool repository made available make happen propose one make happen
ComputerScience,goto ranking considered helpful,ranking fact life whether one like exist influential within academia computer science particular ranking capture attention also widely influence people limited understanding computing science research including prospective student university administrator policymakers short ranking matter position paper advocate adoption goto ranking ranking use good data open transparent objective rejection ranking meet criterion
ComputerScience,accelerated nearest neighbor search quick adc,efficient nearest neighbor nn search highdimensional space foundation many multimedia retrieval system offer low response time product quantization pq popular solution pq compress highdimensional vector short code using several subquantizers enables inram storage large database allows fast answer nn query without accessing ssd hdd key feature pq compute distance short code highdimensional vector using cacheresident lookup table efficiency technique named asymmetric distance computation adc remains limited performs many cache access paper introduce quick adc novel technique achieves time speedup adc exploiting single instruction multiple data simd unit available current cpu efficiently exploiting simd requires algorithmic change adc procedure namely quick adc relies two key modification adc use subquantizers instead standard subquantizers ii quantization floatingpoint distance allows quick adc exceed performance stateoftheart system eg achieves recall m billion sift descriptor code
ComputerScience,exploiting modern hardware highdimensional nearest neighbor search,many multimedia information retrieval machine learning problem require efficient highdimensional nearest neighbor search technique instance multimedia object image music video represented highdimensional feature vector finding two similar multimedia object come finding two object similar feature vector current context mass use social network large scale multimedia database large scale machine learning application common calling efficient nearest neighbor search approach thesis build product quantization efficient nearest neighbor search technique compress highdimensional vector short code make possible store large database entirely ram enabling low response time propose several contribution exploit capability modern cpu especially simd cache hierarchy decrease response time offered product quantization
ComputerScience,efficient video indexing web system leverage user interaction video player,paper propose userbased video indexing method automatically generates thumbnail important scene online video stream analyzing user interaction web video player test bench verify idea extended youtube video player videoskip system addition videoskip us webdatabase google application engine keep record important parameter timing basic user action play pause skip moreover implemented algorithm selects representative thumbnail finally populated system data experiment nine user found videoskip system index video content leveraging implicit user interaction pause thirty second skip early finding point toward improvement web video player thumbnail generation technique videskip system could compliment contentbased algorithm order achieve efficient videoindexing difficult video lecture sport
ComputerScience,transmission line inspires new distributed algorithm solve linear system circuit,transmission line wire always troublesome integrated circuit designer could helpful parallel computing researcher paper proposes virtual transmission method vtm new distributed stationary iterative algorithm solve linear system extracted circuit tear circuit virtual transmission line achieve distributed computing symmetric positive definite spd linear system vtm proved convergent unsymmetrical linear system numerical experiment show vtm possible achieve better convergence property traditional stationary algorithm vtm could accelerated preconditioning technique convergence speed vtm fast preconditioner properly chosen
ComputerScience,barrier towards noreference metric application compressed video quality analysis example noreference metric niqe,paper analysis application noreference metric niqe task videocodec comparison number issue metric behaviour video detected described metric outlying score black solidcoloured frame proposed averaging technique metric quality score helped improve result case also niqe lowquality score video detailed texture higher score video lower bitrates due blurring texture compression although niqe showed natural result many tested video universal currently used videocodec comparison
ComputerScience,tree cast shadow telling time,physical process computation use externalize thought computation performance one fixed process within contingent environment reformulate churchturing thesis applies program rather computability suitably formulated agentbased computing open multiscalar environment represents current consensus view interact world nt know formulate multiscalar environment
ComputerScience,computational solution today navy,new method employed meet navy changing softwaredevelopment environment
ComputerScience,learning style similarity searching infographics,infographics complex graphic design integrating text image chart sketch despite increasing popularity infographics rapid growth online design portfolio little research investigates take advantage design resource paper present method measuring style similarity infographics based human perception data collected crowdsourced experiment use computer vision machine learning algorithm learn style similarity metric infographic design evaluate different visual feature learning algorithm find combination color histogram histogramsofgradients hog feature effective characterizing style infographics demonstrate similarity metric preliminary image retrieval test
ComputerScience,user data sharing framework blockchainbased incentive solution,currently universal method track shared purpose verifiable way create individual incentive data owner platform allows data owner control delete get reward sharing data would important enabler user datasharing propose usable blockchain smart contractsbased framework allows user store research data locally share without losing control ownership created smart contract building automatic verification condition data access also naturally support building verifiable record provenance incentive user share data accountability access paper present review existing work research data sharing proposed blockchainbased framework evaluation framework measuring transaction cost smart contract deployment result show node responded quickly tested case befitting transaction cost
ComputerScience,towards intelligent tutor mathematical proof,computersupported learning increasingly important form study since allows independent learning individualized instruction paper discus novel approach developing intelligent tutoring system teaching textbookstyle mathematical proof characterize particularity domain discus common design model approach motivated phenomenon found corpus tutorial dialog collected wizardofoz experiment show intelligent tutor textbookstyle mathematical proof built top adapted assertionlevel proof assistant reusing representation proof search strategy originally developed automated interactive theorem proving resulting prototype successfully evaluated corpus tutorial dialog yield good result
ComputerScience,applying topological persistence convolutional neural network music audio signal,recent year witnessed increased interest application persistent homology topological tool data analysis machine learning problem persistent homology known ability numerically characterize shape space induced feature function hand deep neural network shown effective various task best knowledge however existing neural network model seldom exploit shape information paper investigate way use persistent homology framework deep neural network specifically propose embed socalled persistence landscape rather new topological summary data convolutional neural network cnn dealing audio signal evaluation automatic music tagging multilabel classification task show resulting persistent convolutional neural network pcnn model perform significantly better stateoftheart model prediction accuracy also discus intuition behind design proposed model offer insight feature learns
ComputerScience,scalability vm provisioning system,virtual machine virtualized hardware around half century commoditization platform rapidly growing hardware capability led recent exponential growth use virtualization enterprise high performance computing hpc startup time virtualized environment key performance metric high performance computing runtime individual task typically much shorter lifetime virtualized service enterprise context paper methodology accurately measuring startup performance hpc system described startup performance overhead three mature widely deployed cloud management framework openstack opennebula eucalyptus measured determine suitability workload typically seen hpc environment performance difference observed fastest eucalyptus slowest opennebula framework time difference primarily due delay waiting networking cloudinit portion startup methodology measurement presented facilitate optimization startup across variety virtualization environment
ComputerScience,domain specific approach heterogeneous computing availability accessibility,advocate domain specific software development methodology heterogeneous computing platform multicore cpu gpus fpgas argue three specific benefit realised adopting approach portable efficient implementation across heterogeneous platform domain specific metric quality characterise platform form software developer understand automatic optimal partitioning across available computing resource three benefit allow development methodology software developer describe computational problem single easy understand form modeling procedure available resource select would like trade various domain specific metric work forward financial framework demonstrates methodology practise able execute range computational finance option pricing task efficiently upon wide range cpu gpu fpga computing platform also create accurate financial domain metric model walltime latency statistical confidence furthermore believe support automatic optimal partitioning using execution modelling capability
ComputerScience,component based programming scientific computing viable approach,computational scientist facing new era old way developing reusing code left behind daring step made towards new horizon present work analyzes need drive change factor contribute inertia community slow transition status perspective present attempt principle practical technical problem addressed short long run
ComputerScience,modeling term graph structure constraint two illustration,talk workshop aim demonstrate usefulness graph technique tackling problem studied predominantly problem term level increasing sharing functional program addressing question milner process semantics regular expression situation approach based modeling term graph structure constraint turned fruitful extended abstract describe underlying problem give reference provide example indicate chosen approach compare initial situation well result obtained result developed present
ComputerScience,smartwatch game encouraging privacyprotective behaviour longitudinal study,public claim concern privacy frequently appear overlook disparity concern behaviour known privacy paradox issue particularly prevalent wearable device product store personal data text message contact detail however owner rarely use protective feature educational game effective encouraging change behaviour therefore developed first privacy game android wear o watch participant used smartwatches two month allowing highlevel setting monitored five individual randomly assigned treatment group played dynamicallycustomised privacythemed game minimise confounding variable five received app lacking privacy topic treatment group improved protection usage screen lock significantly increasing p contrast control group continued never restrict setting posttest phase evaluated behavioural rationale semistructured interview privacy concern became nuanced treatment group opinion aligning behaviour action appeared influenced primarily three factor convenience privacy salience data sensitivity first smartwatch game encourage privacyprotective behaviour
ComputerScience,evaluation local shape descriptor shape retrieval,usage model increase importance developing accurate shape retrieval algorithm common approach calculate shape descriptor object compared determine two object similarity however descriptor often evaluated independently different datasets making difficult compare using shrec shape retrieval contest nonrigid watertight mesh dataset systematically evaluate collection local shape descriptor apply descriptor bagofwords paradigm ass effect varying dictionary size number sample point addition several salient point detection method used choose sample point method compared random selection finally information two local descriptor combined two way change performance investigated paper present result experiment
ComputerScience,intel cilk plus complex parallel algorithm enormous fast fourier transform efft library,paper demonstrate methodology parallelizing computation large onedimensional discrete fast fourier transforms dffts multicore intel xeon processor dffts based recursive cooleytukey method control cache utilization memory bandwidth vector hardware usage time scale across multiple thread compute node method build singlethreaded intel math kernel library mkl implementation dfft us intel cilk plus framework thread parallelism demonstrate ability intel cilk plus handle parallel recursion nested loopcentric parallelism without tuning code number core cache metric result work library called efft performs dfts size n faster corresponding intel mkl parallel dft implementation faster fftw code efft available free download license work provides new efficient dfft implementation time demonstrates educational example computer science problem complex parallel pattern optimized high performance using intel cilk plus framework
ComputerScience,compact formula sparse elimination,become standard approach use theory sparse toric elimination based newton polytope polynomial order reveal exploit structure algebraic system talk survey compact formula including older recent result sparse elimination start root bound juxtapose two recent formula generating function mb e zout bound closedform expression mixed volume mean matrix permanent sparse resultant bevy result established determinantal rational formula large class system starting macaulay discriminant closely related resultant admits compact formula except simple case offer new determinantal formula discriminant sparse multilinear system arising computing nash equilibrium introduce alternative notion compact formula namely newton polytope unknown polynomial possible compute efficiently sparse resultant discriminants well implicit equation parameterized variety lead u consider implicit matrix representation geometric object
ComputerScience,towards formal specification verification maple program,paper present ongoing work initial result formal specification verification minimaple substantial subset maple slight extension program main goal work find behavioral error program wrt specification static analysis task complex widely used computer algebra language like maple fundamentally different classical language support nonstandard type object symbol unevaluated expression polynomial require abstract computer algebraic concept object ring ordering etc starting point defined formalized syntax semantics type system specification language minimaple
ComputerScience,feature extraction without learning analog spatial pooler memristivecmos circuit design hierarchical temporal memory,hierarchical temporal memory htm neuromorphic algorithm emulates sparsity hierarchy modularity resembling working principle neocortex feature encoding important step create sparse binary pattern sparsity introduced binary weight random weight assignment initialization stage htm propose alternative deterministic method htm initialization stage connects htm weight input data preserve natural sparsity input information introduce hardware implementation deterministic approach compare traditional htm existing hardware implementation test proposed approach face recognition problem show outperforms conventional htm approach
ComputerScience,neuromemristive circuit edge computing review,volume veracity variability velocity data produced everincreasing network sensor connected internet pose challenge power management scalability sustainability cloud computing infrastructure increasing data processing capability edge computing device lower power requirement reduce several overhead cloud computing solution paper provides review neuromorphic cmosmemristive architecture integrated edge computing device discus neuromorphic architecture useful edge device show advantage drawback open problem field neuromemristive circuit edge computing
ComputerScience,orthogonal voronoi diagram treemap,paper propose novel space partitioning strategy implicit hierarchy visualization new plot tidy layout similar treemap also flexible data change similar voronoi treemap achieve define new distance function neighborhood relationship site space divided axisaligned segment sweeplineskyline based heuristic algorithm proposed allocate partitioned space form orthogonal voronoi diagram orthogonal rectangle best knowledge first time use sweeplinebased strategy voronoi treemap moreover design novel strategy initialize diagram status modify status update procedure generation plot effective efficient show proposed algorithm nlog n complexity stateoftheart voronoi treemap end show via experiment artificial dataset realworld dataset performance algorithm term computation time converge rate aspect ratio finally discus pro con method make conclusion
ComputerScience,emergence explained,emergence macrolevel effect microlevel cause heart conflict reductionism functionalism autonomous higher level law nature functionalist claim everything reduced fundamental force physic reductionist position cut debate applying computer science lens way view nature conclude functionalism call special science science physic indeed study autonomous law furthermore law pertain real higher level entity b interaction among higherlevel entity epiphenomenal always reduced primitive physical force word epiphenomenon identify emergent phenomenon real higherlevel work proposed perspective provides framework understanding many thorny issue including nature entity stigmergy evolution complexity phase transition supervenience downward entailment also discus practical consideration pertaining system system limitation modeling
ComputerScience,evaluating modern gpu interconnect pcie nvlink nvsli nvswitch gpudirect,high performance multigpu computing becomes inevitable trend due everincreasing demand computation capability emerging domain deep learning big data planetscale simulation however lack deep understanding modern gpus connected real impact stateoftheart interconnect technology multigpu application performance become hurdle paper fill gap conducting thorough evaluation five latest type modern gpu interconnects pcie nvlinksli nvswitch six highend server hpc platform nvidia olcf summitdev summit supercomputer well slilinked system two nvidia turing gpus based empirical evaluation observed four new type gpu communication network numa effect three triggered nvlink topology connectivity routing one caused pcie chipset design issue observation indicate application running multigpu node choosing right gpu combination impose considerable impact gpu communication efficiency well application overall performance evaluation leveraged building practical multigpu performance model vital gpu task allocation scheduling migration shared environment eg ai cloud hpc center well communicationoriented performance tuning
ComputerScience,optimal cacheoblivious mesh layout,mesh graph divide physical space regularlyshaped region mesh computation form basis many application eg finiteelement method image rendering collision detection one important mesh primitive called mesh update mesh vertex store value repeatedly update value based value stored neighboring vertex performance mesh update depends layout mesh memory paper show find memory layout guarantee mesh update asymptotically optimal memory performance set memory parameter memory layout called cacheoblivious formally dimensional mesh g block size b cache size momega bd mesh update g us memory transfer paper also show meshupdate performance degrades smaller cache mo bd paper give two algorithm finding cacheoblivious mesh layout first layout algorithm run time expectation high probability ram us gm b memory transfer expectation gb gm logg memory transfer high probability cacheoblivious diskaccess machine dam model layout obtained finding fully balanced decomposition tree g performing inorder traversal leaf tree second algorithm run faster almost loggloglogg factor three memory model expectation high probability layout obtained finding relaxbalanced decomposition tree g performing inorder traversal leaf tree
ComputerScience,genesis software envrionment update,new version genesis software environment musical creation mean massinteraction physic network modeling designed developed scratch hindsight year working using previous version take opportunity birth provide article analysis peculiarity genesis aiming highlighting core software paradigm update feature new version compared last
ComputerScience,reverse engineering citadel botnet,citadel advanced informationstealing malware target financial information malware pose real threat confidentiality integrity personal business data joint operation recently conducted fbi microsoft digital crime unit order take citadel commandandcontrol server operation caused disruption botnet stopped completely due complex structure advanced antireverse engineering technique citadel malware analysis process challenging timeconsuming allows cyber criminal carry attack analysis still progress paper present result citadel reverse engineering provide additional insight functionality inner working open source component malware order accelerate reverse engineering process propose clonebased analysis methodology citadel offspring previously analyzed malware called zeus thus using former reference measure quantify similarity difference new variant two type code analysis technique provided methodology namely assembly source code matching binary clone detection methodology help reduce number function requiring manual analysis analysis result prove approach promising citadel malware analysis furthermore approach applicable similar malware analysis scenario
ComputerScience,proviola tool proof reanimation,improve existing model interaction proof assistant pa particular storage replay proof troduce three related concept proof movie consisting frame record user input corresponding pa response camera film user interactive session pa movie proviola replay movie framebyframe third party paper describe movie data structure discus proto type implementation camera proviola based proofweb system proofweb uncouples interaction pa via web interface client actual pa resides server camera film movie listening proofweb communication first reason developing movie uncouple reviewing formal proof pa used develop movie concept enables user discus small code fragment without need install pa load whole library advantage include possibility develop separate com mentary track discus explain pa interaction assert combined cameraproviola provides generic layer client user server pa finally claim movie right type data stored encyclopedia formalized mathematics based experience filming coq standard library
ComputerScience,small museum develop compelling educational accessible web resource case accademia carrara,due lack budget competence personnel time small museum often unable develop compelling educational accessible web resource permanent collection temporary exhibition attempt prove investing type resource fruitful even small institution illustrate case accademia carrara museum bergamo northern italy current temporary exhibition cezanne renoir masterpiece paul guillaume collection developed series multimedia application including accessible website rich content educational material wwwcezannerenoirit
ComputerScience,knowledge scientist unlocking datadriven organization,organization across sector increasingly undergoing deep transformation restructuring towards datadriven operation central role data highlight need reliable clean data unreliable erroneous incomplete data lead critical bottleneck processing pipeline ultimately service failure disastrous competitive performance organization given central importance organization recognize react need reliable data advantage coming decade argue technology reliable data driven distinct concern expertise complement data scientist data engineer organization identify central importance meaningful explainable reproducible maintainable data forefront democratization reliable data call new role must developed fill critical need knowledge scientist organizational structure tool methodology technique support make possible work knowledge scientist still infancy organization use data increasingly rely data time empower people central transformation
ComputerScience,proceeding ninth international workshop reduction strategy rewriting programming,volume contains selected paper presented international workshop reduction strategy rewriting programming held brasilia june associated rta international conference rewriting technique application rdp federated conference rewriting deduction programming reduction strategy define sub expression selected evaluation rule applied choice affect fundamental property reduction completeness laziness efficiency general wrs workshop promote research collaboration area reduction strategy application specification programming theorem proving software engineering etc
ComputerScience,generalized homogeneous polynomial efficient templatebased nonlinear invariant synthesis,templatebased method one successful approach algebraic invariant synthesis method algorithm designates template polynomial p program variable generates constraint invariant solves generated constraint however approach often suffers increasing template size degree template polynomial high propose technique make templatebased method efficient technique based following finding algebraic invariant exists specific algebraic invariant call generalized homogeneous algebraic invariant often smaller finding justifies using smaller template corresponds generalized homogeneous algebraic invariant concretely state finding formally based abstract semantics imperative program proposed cachera et al modify templatebased invariant synthesis generates generalized homogeneous algebraic invariant modification proved sound furthermore also empirically demonstrate merit restriction generalized homogeneous algebraic invariant implementation outperforms cachera et al program require higherdegree template
ComputerScience,deeply integrating code support isabellepide,present framework c code syntax deeply integrated isabellepide development environment framework provides abstract interface verification backends pluggedin independently thus various technique deductive program verification whitebox testing applied source part integrated pide document model semantic backends free choose supported c fragment semantics particular differ chosen memory model specification mechanism framing condition framework support semantic annotation c source form comment annotation serve locally control backend setting express term focus annotation refers logical syntactic context available semantic annotation evaluated consequence formula annotation refer hol c variable approach demonstrates degree maturity expressive power isabellepide subsystem achieved recent year integration technique employ lex yacc style grammar ensure efficient deterministic parsing present two case study integration known semantic backends order validate design decision backend interface
ComputerScience,deciding regularity set instance set term regular constraint exptimecomplete,finitestate tree automaton well studied formalism representing term language paper study problem determining regularity set instance finite set term variable variable restricted instantiation regular set given tree automaton problem recently proved decidable unknown complexity exact complexity problem determined proving exptimecompleteness main contribution new exponential time algorithm performs various exponential transformation involved term tree automaton decides regularity analyzing formula inequality height predicate
ComputerScience,proceeding joint international workshop linearity trend linear logic application,volume contains selection paper presented linearitytlla joint linearity tlla workshop part floc held july oxford linearity key feature several line research theoretical practical approach computer science theoretical side much work stemming linear logic dealing proof technology complexity class recently quantum computation practical side work program analysis expressive operational semantics programming language linear programming language program transformation update analysis efficient implementation technique linear logic theoretical tool analyse use resource logic computation also corpus tool approach methodology proof net exponential decomposition geometry interaction coherent space relational model etc originally developed study linear logic syntax semantics nowadays applied several field
ComputerScience,efficient graph rewriting,graph transformation rulebased modification graph discipline dating back declarative nature graph rewriting rule come cost general match lefthand graph fixed rule within host graph requires polynomial time improve matching performance orr proposed equip rule host graph distinguished root node model implemented plump bak unfortunately invertible address problem defining rootedness using partial function onto twopoint set rather pointing graph root node show new result graph class tree recognised rooted gt system linear time given input graph bounded degree finally define new notion confluence modulo garbage nongarbage critical pair showing sufficient require strong joinability nongarbage critical pair establish confluence modulo garbage
ComputerScience,secure secret cooperation robotic swarm using merkle tree,swarm robotics system becoming important component academic research realworld application however order reach widespread adoption new model ensure secure cooperation system need developed work proposes novel model encapsulate cooperative robotic mission merkle tree proposed model swarm operator provide blueprint swarm mission without disclosing raw data word data verification separated data propose system robot swarm prove integrity peer exchanging cryptographic proof work analyzes test proposed approach two different robotic mission foraging robot modify environment maze formation robot become part environment mission robot able cooperate carry sequential operation correct order without explicit knowledge mission highlevel goal objective performance communication cost information diversity requirement proposed approach analyzed finally conclusion drawn future work direction suggested
ComputerScience,physic diagram revealing scientific basis graphical representation design,data omnipresent modern digital world significant number people need make sense data part everyday social professional life therefore together rise data design graphical representation gained importance attention yet although large body procedural knowledge effective visualization exists quality representation often reported poor proposedly guideline scattered unstructured sometimes perceived contradictive therefore paper describes literature research addressing problem research resulted collection structuring guideline underlying proposition well derivation foundational principle graphical representation design called physic diagram illustrated concrete practical example throughout paper
ComputerScience,haptic assembly prototyping expository review,important application haptic technology digital product development virtual prototyping vp part deal interactive planning simulation verification assemblyrelated activity collectively called virtual assembly va spite numerous research development effort last two decade industrial adoption hapticassisted vpva slower expected putting hardware limitation aside main roadblock faced software development traced lack effective efficient computational model haptic feedback model must accommodate inherent geometric complexity faced assembling object arbitrary shape conform computation time limitation imposed notorious frame rate requirement namely khz haptic feedback compared manageable hz graphic rendering simultaneous fulfillment competing objective far trivial survey present conceptual computational challenge opportunity well promising future direction hapticassisted vpva focus haptic assembly geometric modeling spatial reasoning perspective main focus revisiting definition classification different method used handle constrained multibody simulation realtime ranging physicsbased geometrybased hybrid unified approach using variety auxiliary computational device specify impose solve assembly constraint particular attention given newly developed analytic method inherited motion planning protein docking shown great promise alternative paradigm popular combinatorial method
ComputerScience,design implementation scalable dl benchmarking platform,current deep learning dl landscape fastpaced rife nonuniform model hardwaresoftware hwsw stack lack dl benchmarking platform facilitate evaluation comparison dl innovation model framework library hardware due lack benchmarking platform current practice evaluating benefit proposed dl innovation arduous errorprone stifling adoption innovation work first identify design feature desirable within dl benchmarking platform feature include performing evaluation consistent reproducible scalable manner framework hardware agnostic supporting realworld benchmarking workload providing indepth model execution inspection across hwsw stack level etc propose mlmodelscope dl benchmarking platform design realizes objective mlmodelscope proposes specification define dl model evaluation technique provision evaluation workflow using userspecified hwsw stack mlmodelscope defines abstraction framework support board range dl model evaluation scenario implement mlmodelscope opensource project support major framework hardware architecture mlmodelscope evaluation automated analysis workflow performed casestudy analysis model across system show model hardware framework selection affect model accuracy performance different benchmarking scenario demonstrated mlmodelscope tracing capability give holistic view model execution help pinpoint bottleneck
ComputerScience,realizing uncertaintyaware timing stack embedded operating system,time awareness critical broad range emerging application cyberphysical system internet thing running commodity platform operating system traditionally time synchronized across device besteffort background service whose performance neither observable controllable thus consuming system resource independently application need allowing application o service adapt change uncertainty system time advocate rethinking time managed system stack paper propose new clock model characterizes various source timing uncertainty true time present kalman filter based time synchronization protocol adapts uncertainty exposed clock model realization uncertaintyaware clock model synchronization protocol based standard embedded linux platform
ComputerScience,semantic visualization navigation textual corpus,paper give survey related work information visualization domain study real integration cartography paradigm actual information search system based study propose semantic visualization navigation approach offer user three search mode precise search connotative search thematic search objective propose user information search system new interaction paradigm support semantic aspect considered information space guide user search assisting locate interest center improve serendipity
ComputerScience,complexity algorithm euler characteristic simplicial complex,consider problem computing euler characteristic abstract simplicial complex given vertex facet show problem pcomplete present two new practical algorithm computing euler characteristic two new algorithm derived using combinatorial commutative algebra also give second description requires algebra present experiment showing two new algorithm implemented faster previous euler characteristic implementation large margin
ComputerScience,virtual machine support manycore architecture decoupling abstract concrete concurrency model,upcoming manycore architecture require software developer exploit concurrency utilize available computational power today highlevel language virtual machine vms cornerstone software development provide sufficient abstraction concurrency concept analyze concrete abstract concurrency model identify challenge impose vms provide sufficient concurrency support vms propose integrate concurrency operation vm instruction set since always vms optimized special purpose goal develop methodology design instruction set concurrency support therefore also propose list tradeoff investigated advise design instruction set first experiment implemented one instruction set extension shared memory one nonshared memory concurrency experimental result derived list requirement fullgrown experimental environment research
ComputerScience,paretooptimization framework automated networkonchip design,advent multicore processor networkonchip design key addressing network performance bandwidth power consumption communication delay dealing onchip communication increasing number processor core number core increase network design becomes complex therefore critical need soliciting computer aid determining network configuration afford optimal performance given resource design constraint propose paretooptimization framework explores space possible network configuration determine optimal network latency power consumption corresponding link allocation given number router average network latency power consumption example performance objective displayed form paretooptimal front thus offering design tool also enabling tradeoff study
ComputerScience,gap generator automatic polynomial solver,minimal problem computer vision raise demand generating efficient automatic solver polynomial equation system given polynomial system repeated different coefficient instance traditional gr obner basis normal form based solution inefficient fortunately gr obner basis polynomial system different coefficient found share consistent inner structure precomputing structure offline gr obner basis well polynomial system solution solved automatically efficiently online past decade several tool released generate automatic solver general minimal problem recent tool autogen larsson et al representative tool stateoftheart performance solver efficiency gap wrap improves autogen userfriendly interface functionality better stability demonstrate report main approach enhancement feature gap short tutorial software also included
ComputerScience,flare native compilation heterogeneous workload apache spark,need modern data analytics combine relational procedural mapreducestyle functional processing widely recognized stateoftheart system like spark added sql frontends relational query optimization promise increase expressiveness performance good extension extracting high performance modern hardware platform spark made impressive progress show relational workload still significant gap compared bestofbreed query engine stepping outside relational world query optimization technique ineffective large part computation treated userdefined function udfs present flare new backend spark brings performance closer best sql engine without giving added expressiveness spark demonstrate order magnitude speedup relational workload tpch well range machine learning kernel combine relational iterative functional processing flare achieves result compilation native code replacing part spark runtime system extending scope optimization code generation large class udfs
ComputerScience,particle computation complexity algorithm logic,investigate algorithmic control large swarm mobile particle robot sensor building material move workspace using global input signal gravity magnetic field show maze obstacle environment used create complex system provide wide range result wide range question subdivided external algorithmic problem particle configuration serve input computation performed elsewhere internal logic problem particle configuration used carrying computation external algorithm give negative positive result given set stationary obstacle prove nphard decide whether given initial configuration unitsized particle transformed desired target configuration moreover show finding control sequence minimum length pspacecomplete also work inverse problem providing constructive algorithm design workspace efficiently implement arbitrary permutation different configuration internal logic investigate arbitrary computation implemented demonstrate encode dualrail logic build universal logic gate concurrently evaluates nand operation using many gate appropriate interconnects evaluate logical expression however establish simulating full range complex interaction present arbitrary digital circuit encounter fundamental difficulty fanout gate generated resolve missing component help particle create fanout gate produce multiple copy input using gate provide rule replicating arbitrary digital circuit
ComputerScience,ksynchronizability system,paper work notion ksynchronizability system ksynchronizable execution reordering causally independent action divided succession kbounded interaction phase show two result mailbox peertopeer automaton first reachability problem decidable ksynchronizable system second membership problem whether given system ksynchronizable decidable well proof fix several important issue previous attempt prove two result mailbox automaton
ComputerScience,taskbased augmented contour tree fibonacci heap,paper present new algorithm fast shared memory multicore computation augmented contour tree triangulation contrast existing parallel algorithm technique computes augmented tree enabling full extent contour tree based application including data segmentation approach completely revisits traditional sequential contour tree algorithm reformulate step computation set independent local task includes new computation procedure based fibonacci heap join split tree two intermediate data structure used compute contour tree whose construction efficiently carried concurrently thanks dynamic scheduling task parallelism also introduce new parallel algorithm combination two tree output global contour tree overall result superior time performance practice sequential parallel thanks openmp task runtime report performance number compare approach reference sequential multithreaded implementation computation augmented merge contour tree experiment demonstrate runtime efficiency approach scalability common workstation demonstrate utility approach data segmentation application
ComputerScience,runtimeflexible multidimensional array view,multidimensional array among fundamental useful data structure c excellent template library exist array whose dimension fixed runtime array whose dimension change runtime implemented c however generic objectoriented c implementation runtimeflexible array far missing article discus new implementation called marray package class template fill gap marray based view underlying concept concept brings flexibility known script language r matlab c marray free commercial noncommercial use publicly available wwwandresscmarray
ComputerScience,proceeding workshop model formal analysis real system,volume contains proceeding mar first workshop model formal analysis real system held november suva fiji affiliated workshop lpar international conference logic programming artificial intelligence reasoning workshop emphasis modelling verification aim discussing lesson learned making formal method verification analysis realistic system example formalism chosen abstraction made important characteristic system modelled complication modelling system measure taken guarantee accuracy model invited paper present full model real system may lay basis future comparison analysis aim workshop present different modelling approach discus pro con alternative formal description system presented workshop encouraged foster development improved specification formalism
ComputerScience,modular architecture transparent computation recurrent neural network,computation classically studied term automaton formal language algorithm yet relation neural dynamic symbolic representation operation still unclear traditional eliminative connectionism therefore suggest unique perspective central issue would like refer transparent connectionism proposing account symbolic computation implemented neural substrate study first introduce new model dynamic symbolic space versatile shift showing support realtime simulation range automaton show goedelization versatile shift defines nonlinear dynamical automaton dynamical system evolving vectorial space finally present mapping nonlinear dynamical automaton recurrent artificial neural network mapping defines architecture characterized granular modularity data symbolic operation control distinguishable activation space also spatially localizable network maintaining distributed encoding symbolic representation resulting network simulate automaton realtime programmed directly absence network training discus unique characteristic architecture consequence present two example design central pattern generator finitestate locomotive controller ii creation network simulating system interactive automaton support parsing gardenpath sentence investigated psycholinguistics experiment
ComputerScience,flash randomized algorithm accelerated cpugpu ultrahigh dimensional similarity search,present flash textbf f ast textbf l sh textbf lgorithm textbf imilarity search accelerated textbf h pc similarity search system ultrahigh dimensional datasets single machine require similarity computation tailored highperformance computing platform leveraging lsh style randomized indexing procedure combining several principled technique reservoir sampling recent advance onepass minwise hashing count based estimation reduce computational parallelization cost similarity search retaining sound theoretical guarantee evaluate flash several real highdimensional datasets different domain including text malicious url clickthrough prediction social network etc experiment shed new light difficulty associated datasets several million dimension current stateoftheart implementation either fail presented scale order magnitude slower flash flash capable computing approximate knn graph scratch full webspam dataset billion nonzeros le second computing full knn graph le second webspam dataset using bruteforce require least teraflop provide cpu gpu implementation flash replicability result
ComputerScience,streaming billion hypersparse network update per second,dynamic distributed dimensional data model library implement associative array variety language python julia matlaboctave provides lightweight inmemory database implementation hypersparse array ideal analyzing many type network data relies associative array combine property spreadsheet database matrix graph network providing rigorous mathematical guarantee linearity streaming update associative array put enormous pressure memory hierarchy work describes design performance optimization implementation hierarchical associative array reduces memory pressure dramatically increase update rate associative array parameter hierarchical associative array rely controlling number entry level hierarchy update cascaded parameter easily tunable achieve optimal performance variety application hierarchical array achieve update per second single instance scaling instance hierarchical associative array server node mit supercloud achieved sustained update rate update per second capability allows mit supercloud analyze extremely large streaming network data set
ComputerScience,multiagent system groundwater depletion using game theory,groundwater one vital common pool resource throughout world half groundwater used grow crop research model groundwater depletion pattern within multiagent system framework irrigators modeled agent multiagent system irrigation strategy adopted agent investigated using game theory set five irrigators growing three crop corn sorghum wheat considered study allow groundwater flow agent assumed located adjoining farm land irrigators modeled selfish agent strategize irrigation pattern order maximize utility ie difference total revenue obtained crop sale cost incurred including groundwater extraction cost due groundwater flow incentive conserve groundwater lead unsustainable depletion resource nash equilibrium irrigator increase utility unilaterally changing strategy parameter research representative kansa recorded environmental economic data region along dssat software used obtain futuristic projection one emergent phenomenon simulation adoption crop rotation pattern irrigators conserve groundwater irrigators grow corn profitable yet water intensive crop one year next conserve water growing sorghum instead another emergent outcome research viability lemas irrigators subject lemalevel limit groundwater use slight increase aggregate utility lema
ComputerScience,buy coffee bitcoin realworld deployment bitcoin point sale terminal,paper discus existing approach bitcoin payment suitable small business smallvalue transaction develop evaluation framework utilizing security usability deployability criterion examine several existing system tool following requirement engineering approach designed implemented new point sale po system satisfies optimal set criterion within evaluation framework open source system aunja po deployed real world cafe since october
ComputerScience,rbiocloud lightweight framework bioconductor rbased job cloud,largescale ad hoc analytics genomic data popular using rprogramming language supported software package provided bioconductor recently analytical job benefitting ondemand computing storage scalability low maintenance cost offered cloud biologist bioinformaticists take analytical job execute personal workstation remains challenging seamlessly execute job cloud infrastructure without extensive knowledge cloud dashboard analytical job minimum effort executed cloud also resource data required job managed explored paper opensource lightweight framework executing rscripts using bioconductor package referred rbiocloud designed developed rbiocloud offer set simple commandline tool managing cloud resource data execution job three biological test case validate feasibility rbiocloud framework publicly available http wwwrbiocloudcom
ComputerScience,accelerating geometric multigrid preconditioning halfprecision arithmetic gpus,hardware support halfprecision arithmetic nvidia gpus highperformance computing application benefit lower precision appropriate spot speed overall execution time paper investigate mixedprecision geometric multigrid method solve large sparse system equation stemming discretization elliptic pdes final solution always computed highprecision accuracy iterative refinement approach multigrid preconditioning lower precision residuum scaling employed compare baseline poisson equation purely multigrid preconditioning employment combination within mesh hierarchy iteration count almost affected using lower accuracy solver runtime considerably decreased due reduced memory transfer speedup gained overall solver investigate performance selected kernel hierarchical roofline model
ComputerScience,persistent buffer tree ioefficient index temporal data,variety application need keep track development data set time maintaining querying multi version data ioefficiently external memory data structure required paper present probabilistic selfbalancing persistent data structure external memory called persistent buffer tree support insertion update deletion data item present version range query version past present persistent buffer tree iooptimal sense expected amortized io performance bound asymptotically deterministic amortized bound single version buffer tree worst case
ComputerScience,naughton wisconsin bibliography brief guide,nearly three decade university wisconsin jeff naughton left indelible mark computer science global leader database research field deepening core pushing boundary many naughton idea translated directly practice commercial opensource system software come go end idea impact idea written paper naughton prolific scholar last thirty year publication bibliography covering wide range topic document attempt enumerate even summarize wealth idea naughton published course academic career task daunting instead best short note aim serve rough map territory something help researcher navigate wide space naughton work
ComputerScience,blockchain new framework robotic swarm system,swarm robot revolutionize many industrial application targeted material delivery precision farming however several heterogeneous characteristic make ideal certain future application robot autonomy decentralized control collective emergent behavior etc hinder evolution technology academic institution realworld problem blockchain emerging technology originated bitcoin field demonstrates combining peertopeer network cryptographic algorithm group agent reach agreement particular state affair record agreement without need controlling authority combination blockchain distributed system robotic swarm system provide necessary capability make robotic swarm operation secure autonomous flexible even profitable work explains blockchain technology provide innovative solution four emergent issue swarm robotics research field new security decision making behavior differentiation business model swarm robotic system described providing case scenario example finally limitation possible future problem arise combination two technology described
ComputerScience,algebraic programming style numerical software optimization,abstract mathematical theory partial differential equation pdes formulated term manifold scalar field tensor like algebraic structure hardly recognizable actual pde solver general aim sophus programming style bridge gap theory practice domain pde solver main ingredient library abstract datatypes corresponding algebraic structure used mathematical theory algebraic expression style similar expression style used mathematical theory emphasis abstract datatypes sophus naturally combined objectoriented language language supporting abstract datatypes resulting source code pattern beyond scope current compiler optimization sufficiently specific dedicated sourcetosource optimizer limited domainspecific character sophus key success kind optimization tested computationally intensive sophus style code promising result general approach may useful style application domain well
ComputerScience,towards classification lindenmayer system,paper attempt classify lindenmayer system based property set rule kind string rule generate classification referred parametrization lspace lspace phase space possible ldevelopments represented space infinite halting algorithm lgrammars also subjected hard condition grammar development possible state lsystem wellknown example space normal grammar space normal grammar parametrized regular contextfree contextsensitive unrestricted proper containment relation holding among see chomsky theorem contend lspace rich landscape grammar cluster kind mutually translatable
ComputerScience,modeling musical context,present semantic vector space model capturing complex polyphonic musical context model based skipgram representation negative sampling used model slice music dataset beethoven piano sonata visualization reduced vector space using tdistributed stochastic neighbor embedding show resulting embedded vector space capture tonal relationship even without explicit information musical content slice secondly excerpt moonlight sonata beethoven altered replacing slice based context similarity resulting music show selected slice based similar context also relatively short tonal distance original slice
ComputerScience,exposing customizable decentralized cryptoeconomy data type,purposely modular protocol enables customization several protocol property including consensus property implemented blockchain type root used virtual machine opcodes among others module enable implementing party control behavior economy minimal amount effort sacrifice participant cryptoeconomic quality work also demonstrates simplification developer experience abstracting away technological detail except basic crudbased operation using various programming language demonstrate mechanism design approach taken formalize process deploying population blockchain economy scale framework shown includes adequate tooling simulation development deployment maintenance analyticbased decision making lastly introduce expressive programming language purpose creating interacting cryptoeconomy designed implementing developer
ComputerScience,complexity equilibrium diffusion game social network,paper consider competitive diffusion game study existence purestrategy nash equilibrium defined general undirected network first determine set purestrategy nash equilibrium two special wellknown class network namely lattice hypercube characterizing utility player term graphical distance initial seed placement node network show general network decision process existence purestrategy nash equilibrium nphard problem following provide necessary condition given profile nash equilibrium furthermore study player utility competitive diffusion game erdosrenyi random graph show size network grows utility player highly concentrated around expectation bounded threshold based parameter network finally obtain lower bound maximum social welfare game two player study submodularity player utility
ComputerScience,multimodelbased access control construction project,execution large scale construction project performed virtual organization vo relatively complex technical model exchanged vo member linking trade transfer model socalled multimodel container format developed considering different skill task involved partner necessary know model every technical detailing furthermore model size lead delay communication paper approach presented defining model cutout according current project context dynamic dependency project context well static dependency organizational structure mapped contextsensitive rule result approach dynamic filtering multimodels obtained ensures together filtering service involved vo member get simplified view complex multimodels well sufficient permission depending task
ComputerScience,automated training maintenance kinect,paper worked reducing burden mechanic involving complex automobile maintenance activity performed centralised workshop presented system prototype combine augmented reality kinect use kinect high quality sensor available considerably low cost thus reducing overall expenditure system design system operated either speech mode gesture mode system controlled various audio command user opts speech mode controlling also done using set gesture gesture mode gesture recognition task performed kinect system system bundled rgb depth camera process skeletal data keeping track different body joint recognizing gesture done verifying user movement checking predefined condition augmented reality module capture realtime image data stream high resolution camera module generates model superimposed real time data
ComputerScience,developing augmented reality tourism app usercentred design extended version,augmented reality ar bridge gap physical virtual world overlaying graphic natural environment user immerse tailored environment offer great benefit mobile tourism point interest poi annotated smartphone screen variety apps currently exist usability issue discourage user embracing ar interface become cluttered icon poi occlusion posing challenge paper use usercentred design ucd develop ar tourism app solicit requirement synthesis domain analysis tourist observation semistructured interview whereas previous usercentred work designed mockups iteratively develop full android app includes overhead map route navigation addition detailed ar browser final product evaluated user participate tourism task uk city user regard system usable intuitive suggest addition customisation finish critically analysing challenge usercentred methodology
ComputerScience,treebased arithmetic compressed representation giant number,arithmetic completely different way radically different data structure could approach provide practical benefit like operation giant number average performance similar traditional bitstring representation answering question positively tree based representation described paper come extra benefit compress giant number instance largest known prime number well related perfect number represented tree small size also applies fermat number important computation like exponentiation two become constant time operation time succinct representation sparse set multisets sequence become possible bijections treerepresented natural number
ComputerScience,multiserver scheduling framework resource allocation wireless multicarrier network,multiuser resource allocation recently recognized effective methodology enhancing power spectrum efficiency ofdm orthogonal frequency division multiplexing system however directly applicable current packetswitched network existing packetscheduling scheme based singleserver model serve multiple user time ii conventional separate design mac medium access control packet scheduling phy physical resource allocation yield inefficient resource utilization paper propose crosslayer resource allocation algorithm based novel multiserver scheduling framework achieve overall high system power efficiency packetswitched ofdm network contribution four fold propose analyze mpgps multiserver packetized general processor sharing service discipline serf multiple user time facilitates multiuser resource allocation ii present mpgpsbased joint macphy resource allocation scheme incorporates packet scheduling subcarrier allocation power allocation integrated framework iii investigating fundamental tradeoff multiuserdiversity queueing performance present ampgps adaptive mpgps service discipline strike balance power efficiency queueing performance iv extend mpgps ompgps opportunistic mpgps service discipline enhance resource utilization efficiency
ComputerScience,securityaware synthesis using delayedaction game,stochastic multiplayer game smgs gained attention field strategy synthesis multiagent reactive system however standard smgs limited modeling system agent full knowledge state game paper introduce delayedaction game dag formalism simulates hiddeninformation game higs smgs hidden information captured delaying player action elimination private variable enables usage smg offtheshelf model checker implement higs furthermore demonstrate dag decomposed subgames independently explored utilizing parallel computation reduce model checking time alleviating state space explosion problem smgs notorious addition propose dagbased framework strategy synthesis analysis finally demonstrate applicability dagbased synthesis framework case study humanontheloop unmannedaerial vehicle system stealthy attack proposed framework used formally model analyze synthesize securityaware strategy system
ComputerScience,lawn unbound low latency timer data structure large scale high throughput system,demand realtime application rise among general public importance enabling largescale unbound algorithm solve conventional problem low latency critical product viability timer algorithm prevalent core mechanism behind operating system network protocol implementation stream processing several database capability paper present fieldtested algorithm low latency unbound range timer structure based upon well excepted timing wheel algorithm using set queue hashed ttl algorithm allows simpler implementation minimal overhead overflow performance degradation comparison current state algorithm typical use case
ComputerScience,anthropological account vim text editor feature tweak year usage,vim text editor rich capability thus complex article description vim set consideration usage design result ten year experience using vim writing editing various type document eg python c javascript chuck program latex markdown html rdf make markup file ttm binary file commonplace vim user developer community say take ten year master start mastering text editor find experienced user different view vim use different set feature therefore document expose understanding order confront usage vim user another goal make available reference document new user grasp sound overview reading discussion might generate also useful user degree experience including compendium command namespaces tweak upon feedback maturing vim usage document might enhanced expanded
ComputerScience,review situation awareness assessment approach aviation environment,situation awareness sa important constituent human information processing essential pilot decisionmaking process acquiring maintaining appropriate level sa critical aviation environment affect decision action taking place flight air traffic control paper provides overview recent measurement model approach establishing enhancing sa aviation environment many aspect sa examined including classification sa technique six category different theoretical sa model individual shared team distributed system level quantitative qualitative perspective pertaining sa method issue sa unmanned vehicle also addressed furthermore future research direction regarding sa assessment approach raised deal shortcoming existing stateoftheart method literature
ComputerScience,democratize internet thing device participatory design research,global introduction affordable internet thing iot device offer opportunity empower large variety user different need however many offtheshelf digital product still widely adopted people hesitant technology user older adult notwithstanding design userinteraction device recognized userfriendly view potential iotbased device reduce obstacle cohort low digital literacy technology anxiety enable equal participant digitalized world article show method result achieved communitystakeholder workshop developed participatory design methodology aiming brainstorming problem scenario focus group structured survey research activity focused understanding factor increase usability offtheshelf iot device hesitant user identify strategy improving digital literacy reducing technology anxiety notable result series feedback item pointing importance creating learning resource support individual different ability age gender expression better adopt offtheshelf iotbased solution
ComputerScience,horseback riding changing world ux competence journey,paper explore notion competence ux based perspective practitioner result exploration observed four domain conceptualize plan source competence describes way ux practitioner develop competence based plane present idea competence journey journey whose furthest stage implies urge towards transforming society ux practice
ComputerScience,miniconf virtual conference framework,miniconf framework hosting virtual academic conference motivated sudden inability event hosted globally framework designed global asynchronous interactive promote browsing discovery developed system sustainable maintainable particular ensuring opensource easy setup scalable minimal hardware technical report discus design decision provide technical detail show example case study deployment
ComputerScience,model social network formation efficiency stability dynamic,introduce simple network formation model social network agent node connecting another agent building directed edge accepting connection another agent cost reaching reached agent via short directed path benefit effect agent want reach others quickly without cost directly connecting every one prove asynchronous edge dynamic always converge stable network fact nontrivial range parameter convergence fast moreover set fixed point dynamic form nontrivial class network static game give class efficient network nontrivial parameter range study stability close several problem leave many interesting one open
ComputerScience,scalability computing robotics,efficient engineered system require scalability scalable system increasing performance increasing system size ideal case increase performance eg speedup corresponds number unit added system however multiple unit work task coordination among unit required coordination introduce overhead impact system performance coordination cost lead sublinear improvement even diminishing performance increasing system size however also system implement efficient coordination exploit collaboration unit attain superlinear improvement modeling scalability dynamic key understanding efficient system known law scalability amdahl law gustafson law gunther universal scalability law minimalistic phenomenological model explain rich variety system behavior concise equation useful gain general insight phenomenological nature model may limit understanding underlying dynamic detached first principle could explain coordination overhead among unit decentralized system approach propose general model based generic interaction unit able describe specific case general pattern scalability included previously reported law proposed general model scalability built first principle least microscopic description interaction unit therefore potential contribute better understanding system behavior scalability show model applied diverse set system parallel supercomputer robot swarm wireless sensor network creating unified view interdisciplinary design scalability
ComputerScience,reflection structure process web data,web community introduced set standard technology representing querying manipulating globally distributed data structure known web data proponent web data envision much world data interrelated openly accessible general public vision analogous many way web document common knowledge instead making document medium openly accessible focus making data openly accessible providing data public use stimulated interest movement dubbed open data open data analogous many way open source movement however instead focusing software open data focused legal licensing issue around publicly exposed data together various technological legal tool laying groundwork future globalscale data management web today early form web data host variety data set include encyclopedic fact drug protein data metadata music book scholarly article social network representation geospatial information many type information size diversity web data demonstration flexibility underlying standard overall feasibility project whole purpose article provide review technological underpinnings web data well hurdle need overcome web data emerge defacto medium data representation distribution ultimately processing
ComputerScience,design implementation deployment system transparently compress hundred petabyte image file filestorage service,report design implementation deployment lepton faulttolerant system losslessly compress jpeg image original size average lepton replaces lowest layer baseline jpeg compressiona huffman codewith parallelized arithmetic code exact byte original jpeg file recovered quickly lepton match compression efficiency best prior work decoding nine time faster streaming manner lepton released opensource software deployed year dropbox filestorage backend february compressed pib user jpeg file saving pib
ComputerScience,partially observable game secure autonomy,technology development effort autonomy cyberdefense evolving independently past decade paper report ongoing effort integrate two presently distinct area single framework end propose twoplayer partially observable stochastic game formalism capture highlevel autonomous mission planning uncertainty adversarial decision making subject imperfect information show synthesizing suboptimal strategy game possible finitememory assumption autonomous decision maker cyberadversary describe experimental testbed evaluate efficacy proposed framework
ComputerScience,performance measurement supercomputing cloud storage solution,increasing amount data varied source particularly field machine learning graph analytics causing storage requirement grow rapidly variety technology exist storing sharing data ranging parallel file system used supercomputer distributed block storage system found cloud relatively comparative measurement exist inform decision storage system best suited particular task work provides measurement two popular storage technology lustre amazon lustre opensource high performance parallel file system used many largest supercomputer world amazon simple storage service part amazon web service offering offer scalable distributed option store retrieve data anywhere internet parallel processing essential achieving high performance modern storage system performance test used span gamut parallel io scenario ranging singleclient singlenode amazon lustre performance largescale multiclient test designed demonstrate capability modern storage appliance heavy load result show parallel io used correctly ie many simultaneous read write process full network bandwidth performance achievable ranged gigabit gige connection terabit using lustre port gige switch result demonstrate wellsuited sharing vast quantity data internet lustre wellsuited processing large quantity data locally
ComputerScience,proof theory work complexity analysis term rewrite system,thesis concerned investigation complexity term rewriting system moreover majority presented work deal automation complexity analysis aim introduction present main idea easily accessible fashion make result presented accessible general public necessarily technical point stated oversimplified way
ComputerScience,formalism supporting development verifiably safe medical guideline statecharts,improving effectiveness safety patient care ultimate objective medical cyberphysical system many medical best practice guideline exist existing guideline handbook difficult medical staff remember apply clinically furthermore although guideline gone clinical validation validation medical professional alone provide guarantee safety medical cyberphysical system hence formal verification also needed paper present formal semantics framework developed support development verifiably safe medical guideline framework allows computer scientist work together medical professional transform medical best practice guideline executable statechart model yakindu particular medical functionality property quickly prototyped validated existing formal verification technology uppaal timed automaton particular integrated framework provide formal verification capability verify safety property however component usedbuilt framework opensource yakindu statecharts well transformation rule statecharts timed automaton builtin semantics ambiguity becomes unavoidable unless formal semantics defined framework paper present
ComputerScience,benchmarking opencl openacc openmp cuda programming productivity performance energy consumption,many modern parallel computing system heterogeneous node level node may comprise general purpose cpu accelerator gpu intel xeon phi provide high performance suitable energyconsumption characteristic however exploiting available performance heterogeneous architecture may challenging various parallel programming framework openmp opencl openacc cuda selecting one suitable target context straightforward paper study empirically characteristic openmp openacc opencl cuda respect programming productivity performance energy evaluate programming productivity use homegrown tool codestat enables u determine percentage code line required parallelize code using specific framework use tool xmeterpu evaluate energy consumption performance experiment conducted using industrystandard spec benchmark suite rodinia benchmark suite accelerated computing heterogeneous system combine intel xeon processor gpu accelerator intel xeon phi coprocessor
ComputerScience,dreamt embodied motivational conversational storytelling,storytelling fundamental language including culture conversation communication broadest sens thus emerges essential component intelligent system including system natural language primary focus usually think story involved paper explore emergence storytelling requirement embodied conversational agent including role educational health intervention well generalpurpose computer interface people disability constraint prevent use traditional keyboard speech interface present characterization storytelling inventive fleshing detail according particular personal perspective propose dreamt model focus attention different layer need present characterdriven storytelling system aspect dreamt model arisen explored aspect implemented research system currently primitive relatively unintegrated level however experience lead u formalize elaborate dreamt model mnemonically follows descriptiondialoguedefinitiondenotation realizationrepresentationrole explanationeducationentertainment actualizationactivation motivationmodelling topicalizationtransformation
ComputerScience,selfassembly geometric tile,work propose generalization winfree abstract tile assembly model atam tile type assigned rigid shape geometry along tile face examine number distinct tile type needed assemble shape within model temperature required efficient assembly problem designing compact geometric face meet given compatibility specification result show dramatic decrease number tile type needed assemble n time n square theta sqrt log n temperature simple model meet lower bound kolmogorov complexity loglog n model tile aggregate must move together obstacle free path within plane stand contrast theta log n loglog n tile type temperature needed basic atam also provide general method simulating large computationally universal class temperature atam system geometric tile temperature finally consider problem computing set compact geometric face tile system implement given set compatibility specification show number bound complexity geometry size needed various class compatibility specification many directly apply tile assembly result achieve nontrivial reduction geometry size
ComputerScience,ultraefficient memristorbased dnn framework structured weight pruning quantization using admm,high computation memory storage large deep neural network dnns model pose intensive challenge conventional vonneumann architecture incurring substantial data movement memory hierarchy memristor crossbar array emerged promising solution mitigate challenge enable lowpower acceleration dnns memristorbased weight pruning weight quantization seperately investigated proven effectiveness reducing area power consumption compared original dnn model however systematic investigation memristorbased neuromorphic computing nc system considering weight pruning weight quantization paper propose unified systematic memristorbased framework considering structured weight pruning weight quantization incorporating alternating direction method multiplier admm dnns training consider hardware constraint crossbar block pruning conductance range mismatch weight value real device achieve high accuracy low power small area footprint framework mainly integrated three step ie memristorbased admm regularized optimization masked mapping retraining experimental result show proposed framework achieves weight compression ratio power area reduction network accuracy loss compared original dnn model share model link http
ComputerScience,mtjbased hardware synapse design quantized deep neural network,quantized neural network qnns actively researched solution computational complexity memory intensity deep neural network sparked effort develop algorithm support inference training quantized weight activation value without sacrificing accuracy recent example gxnor framework stochastic training ternary binary neural network paper introduce novel hardware synapse circuit us magnetic tunnel junction mtj device support gxnor training solution enables processing near memory pnm qnns therefore reduce data movement memory simulated mtjbased stochastic training tnn mnist svhn datasets achieved accuracy respectively
ComputerScience,business selling electronic document,music industry huge trouble adapting new technology many pointed copying music essentially free socially accepted becomes increasingly tempting user infringe copyright copy music one person another answer music industry outlaw majority citizen article describes music industry reinvent adapt world network ubiquitous exchanging information essentially free relies adapting price demand lower cost electronic document dramatic way
ComputerScience,competitive allocation mixed manna,study fair division problem allocating mixed manna additively separable piecewise linear concave splc utility mixed manna contains good everyone like bad everyone dislike well item like others dislike seminal work bogomolnaia et al argue allocating mixed manna genuinely complicated good bad manna competitive equilibrium best mechanism also provide existence equilibrium establish peculiar property eg nonconvex disconnected set equilibrium even linear utility leave problem computing equilibrium open problem remained unresolved even bad manna linear utility main result simplexlike algorithm based lemke scheme computing competitive allocation mixed manna splc utility strict generalization linear experimental result randomly generated instance suggest algorithm fast practice problem known ppadhard case good manna also show similar result case bad manna given ppadhardness result designing algorithm nonbruteforce nonenumerative option known eg classic lemkehowson algorithm computing nash equilibrium game still one widely used algorithm practice algorithm also yield several new structural property simple corollary obtain constructive proof existence far general setting membership problem ppad rationalvalued solution odd number solution property last property also settle conjecture bogomolnaia et al affirmative
ComputerScience,topic modeling hàn diăn ancient classic,ancient chinese text present area enormous challenge opportunity humanity scholar interested exploiting computational method assist development new insight interpretation culturally significant material paper describe collaborative effort indiana university xian jiaotong university support exploration interpretation digital corpus ancient chinese document refer handian ancient classic corpus h diu n gu u j ie han canon chinese classic contains classic ancient chinese philosophy document historical biographical significance literary work begin describing digital humanity context joint project advance humanity computing made project feasible describe corpus introduce application probabilistic topic modeling corpus attention particular challenge posed modeling ancient chinese document give specific example software developed used aid discovery interpretation theme corpus outline advanced form computeraided interpretation also made possible programming interface provided system general implication method understanding nature meaning text
ComputerScience,leopard generic platform implementation higherorder reasoner,leopard support implementation knowledge representation reasoning tool higherorder logic combine sophisticated data structure layer polymorphically typed lambda calculus nameless spine notation explicit substitution perfect term sharing ambitious multiagent blackboard architecture supporting prover parallelism term clause search level feature leopard include parser tptp dialect command line interpreter generic mean integration external reasoner
ComputerScience,streaming insertssecond using hierarchical hypersparse graphblas matrix,suitesparse graphblas clibrary implement high performance hypersparse matrix binding variety language python julia matlaboctave graphblas provides lightweight inmemory database implementation hypersparse matrix ideal analyzing many type network data providing rigorous mathematical guarantee linearity streaming update hypersparse matrix put enormous pressure memory hierarchy work benchmark implementation hierarchical hypersparse matrix reduces memory pressure dramatically increase update rate hypersparse matrix parameter hierarchical hypersparse matrix rely controlling number entry level hierarchy update cascaded parameter easily tunable achieve optimal performance variety application hierarchical hypersparse matrix achieve update per second single instance scaling instance hierarchical hypersparse matrix array server node mit supercloud achieved sustained update rate update per second capability allows mit supercloud analyze extremely large streaming network data set
ComputerScience,bestconfig tapping performance potential system via automatic configuration tuning,ever increasing number configuration parameter provided system user many user used one configuration setting across different workload leaving untapped performance potential system good configuration setting greatly improve performance deployed system certain workload ten hundred parameter becomes highly costly task decide configuration setting lead best performance task requires strong expertise system application user commonly lack expertise help user tap performance potential system present bestconfig system automatically finding best configuration setting within resource limit deployed system given application workload bestconfig designed extensible architecture automate configuration tuning general system tune system configuration within resource limit propose divideanddiverge sampling method recursive boundandsearch algorithm bestconfig improve throughput tomcat cassandra mysql reduce running time hive join job spark join job solely configuration adjustment
ComputerScience,heax architecture computing encrypted data,rapid increase cloud computing concern surrounding data privacy security confidentiality also increased significantly cloud provider susceptible internal external hack also scenario data owner outsource computation due privacy law gdpr hipaa ccpa fully homomorphic encryption fhe groundbreaking invention cryptography unlike traditional cryptosystems enables computation encrypted data without ever decrypting however critical obstacle deploying fhe largescale enormous computation overhead paper present heax novel hardware architecture fhe achieves unprecedented performance improvement heax leverage multiple level parallelism ranging ciphertextlevel finegrained modular arithmetic level first contribution new highlyparallelizable architecture numbertheoretic transform ntt independent interest ntt frequently used many latticebased cryptography system building top ntt engine design novel architecture computation homomorphically encrypted data also introduce several technique enable endtoend fully pipelined design well reducing onchip memory consumption implementation reconfigurable hardware demonstrates performance improvement wide range fhe parameter
ComputerScience,consumer bci automated music evaluation within popular ondemand music streaming service taking listener brainwave extreme,investigated possibility using machinelearning scheme conjunction commercial wearable eegdevices translating listener subjective experience music score used automated annotation music popular ondemand streaming service based established neuroscientifically sound concept brainwave frequency band activation asymmetry index crossfrequencycoupling cfc introduce brain computer interface bci system automatically assigns rating score listened song research operated two distinct stage generic feature engineering stage feature signalanalytics ranked selected based ability associate music induced perturbation brainwave listener appraisal music ii personalization stage efficiency ex treme learning machine elm exploited translate derived pat tern listener score encouraging experimental result pragmatic use system presented
ComputerScience,survey current datasets vision language research,integrating vision language long dream work artificial intelligence ai past two year witnessed explosion work brings together vision language image video beyond available corpus played crucial role advancing area research paper propose set quality metric evaluating analyzing vision language datasets categorize accordingly analysis show recent datasets using complex language abstract concept however different strength weakness
ComputerScience,fresh look reliability longterm digital storage,many emerging web service email photo sharing web site archive need preserve large amount quicklyaccessible data indefinitely future paper make case application demand large scale storage system long time horizon require u reevaluate traditional storage system design examine threat longlived data endtoend perspective taking account hardware software fault also fault due human organization present simple model longterm storage failure help u reason various strategy addressing threat costeffective manner using model show important strategy increasing reliability longterm storage detecting latent fault quickly automating fault repair make faster cheaper increasing independence data replica
ComputerScience,communication model adaptive service provisioning hybrid wireless network,mobile entity wireless link able form mobile adhoc network infrastructureless network administrated however selforganizing principle applied deal upcoming problem eg information dissemination kind problem easy tackle requiring complex algorithm moreover usefulness pure adhoc network arguably limited hence enthusiasm mobile adhoc network could eliminate need fixed infrastructure damped goal overcome limitation pure adhoc network augmenting instant internet access eg via integration umts respectively gsm link however raise multiple question technical well organizational level motivated characteristic smallworld network describe efficient network even without central organized design paper proposes combine mobile adhoc network infrastructured network form hybrid wireless network one main objective investigate approach reduce cost permanent backbone link providing way benefit useful information internet connectivity service provider purpose bridging different type network adequate middleware service focus investigation paper show first step forward middleware introducing injection communication paradigm principal concept
ComputerScience,symbolic representation algorithmic game semantics,paper revisit regularlanguage representation game semantics secondorder recursion free idealized algol infinite data type using symbolic value instead concrete one generalize standard notion regularlanguage automaton representation corresponding symbolic representation way term infinite data type integer expressed finite symbolicautomata although standard automaton interpretation infinite moreover significant reduction state space game semantics model obtained enables efficient verification term illustrated several example
ComputerScience,virtualthreading advanced general purpose processor architecture,paper describes new computer architecture main feature claimed russian federation patent u patent application architecture intended effective support general purpose parallel computing gppc essence extremely frequent switching thread state activity state viewed paper algorithmic latency emphasize impact architectural latency algorithmic latency upon gppc introduced new notion generalized latency defined quantitative measure generalized latency tolerance glt shown well suited gppc implementation architecture high level glt described architecture called virtualthreaded machine architecture originates processor virtualization direction activity virtualization orthogonal wellknown direction memory virtualization key element architecture distributed fine grain representation architectural register file element hardware swapped level microarchitectural memory prioritized fine grain direct hardware multiprogramming access controlled virtual addressing hardware driven semaphore composition feature let introduce new style operating system o programming free interruption applied programming rare using o service
ComputerScience,necessity hardware qos support server consolidation cloud computing,chip multiprocessor cmps ubiquitous today computing field although provide noticeable benefit term performance cost power efficiency also introduce new issue paper analyze interference virtual private server running core significant component performance unpredictability threaten attainment cloud computing even virtualization used sharing onchip section memory hierarchy different core make performance isolation strongly dependent running elsewhere system show three actual computing system based sun ultrasparc sun ultrasparc intel xeon processor stateoftheart virtualization technique unable guarantee performance isolation representative workload especially conceived near worstcase scenario possible reduce performance achieved solaris zone consolidated server suite benchmark sun fire sun enterprise performance drop observed xen consolidated server running hp proliant almost system study offchip bandwidth shown critical resource
ComputerScience,preemptive thread block scheduling online structural runtime prediction concurrent gpgpu kernel,recent nvidia graphic processing unit gpus execute multiple kernel concurrently gpus thread block scheduler tb us fifo policy schedule thread block show fifo leaf performance chance resulting significant loss performance fairness improve performance fairness propose use preemptive shortest remaining time first srtf policy instead although srtf requires estimate runtime gpu kernel show estimate runtime easily obtained using online profiling exploiting simple observation gpu kernel grid structure specifically propose novel structural runtime predictor using simple staircase model gpu kernel execution show runtime kernel predicted profiling first thread block evaluate online predictor based model benchmark ercbench find estimate actual runtime reasonably well execution single thread block next design thread block scheduler concurrent kernelaware us predictor implement srtf policy evaluate twoprogram workload ercbench srtf improves stp antt fifo compared mpmax stateoftheart resource allocation policy concurrent kernel srtf improves stp antt improve fairness also propose srtfadaptive control resource usage concurrently executing kernel maximize fairness srtfadaptive improves stp antt fairness compared fifo overall implementation srtf achieves system throughput within shortest job first sjf oracle optimal scheduling policy bridging gap fifo sjf
ComputerScience,improving performance endurance persistent memory looseordering consistency,persistent memory provides highperformance data persistence main memory memory writes need performed strict order satisfy storage consistency requirement enable correct recovery system crash unfortunately adhering strict order significantly degrades system performance persistent memory endurance paper introduces new mechanism looseordering consistency loc satisfies ordering requirement significantly lower performance endurance loss loc consists two key technique first eager commit eliminates need perform persistent commit record write within transaction ensuring determine status committed transaction recovery storing necessary metadata information statically block data written memory second speculative persistence relaxes write ordering transaction allowing writes speculatively written persistent memory speculative write made visible software associated transaction commits enable mechanism support tracking committed transaction id multiversioning cpu cache evaluation show loc reduces average performance overhead memory persistence memory write traffic overhead variety workload
ComputerScience,virtualization architecture nocbased reconfigurable system,propose virtualization architecture nocbased reconfigurable system motivation work develop serviceoriented architecture includes partial reconfigurable region service prraas processing element service peaas software application according requirement software application new pe created ondemand configuring logic resource prrs fpga configured pe also virtualized support multiple application task time result twolevel virtualization mechanism including gatelevel virtualization pelevel virtualization enables soc dynamically adapted changing application requirement therefore software application performed system performance enhanced
ComputerScience,practical data compression modern memory hierarchy,thesis describe new practical approach integrating hardwarebased data compression within memory hierarchy including onchip cache main memory onchip offchip interconnects new approach fast simple effective saving storage space key insight approach access time including decompression latency critical modern memory hierarchy combining inexpensive hardware support modest o support holistic approach compression achieves substantial improvement performance energy efficiency across memory hierarchy using new approach make several major contribution thesis first propose new compression algorithm basedeltaimmediate compression bdi achieves high compression ratio low compressiondecompression latency bdi exploit existing low dynamic range value present many cache line compress smaller size using basedelta encoding second observe compressed size cache block indicative reuse use observation develop new cache insertion policy compressed cache sizebased insertion policy sip us size compressed block one metric predict potential future reuse third propose new main memory compression framework linearly compressed page lcp significantly reduces complexity power cost supporting main memory compression demonstrate compression algorithm adapted fit requirement lcp lcp efficiently integrated existing cache compression design avoiding extra compressiondecompression
ComputerScience,nearmemory address translation,memory logic integration chip becoming increasingly cost effective creating opportunity offload dataintensive functionality processing unit placed inside memory chip introduction memoryside processing unit mpus conventional system face virtual memory first big showstopper without efficient hardware support address translation mpus highly limited applicability unfortunately conventional translation mechanism fall short providing fast translation contemporary memory exceed reach tlbs making expensive page walk common paper first show historically important flexibility map virtual page page frame unnecessary today server find limiting associativity virtualtophysical mapping incurs penalty break translatethenfetch serialization combined careful data placement mpu memory allowing translation data fetch proceed independently parallel propose distributed inverted page table dipta nearmemory structure smallest memory partition keep translation information data share ensuring translation completes together data fetch dipta completely eliminates performance overhead translation achieving speedup conventional translation using page respectively
ComputerScience,adapting dmtcp plugin model checkpointing hardware emulation,checkpointrestart mature technology allows user save later restore state running process new plugin model upcoming version dmtcp distributed multithreaded checkpointing described plugin model allows target application disconnect hardware emulator checkpoint time reconnect possibly different hardware emulator time restart dmtcp plugin model important allowing three distinct party seamlessly interoperate three party eda designer concerned formal verification circuit design dmtcp developer concerned providing transparent checkpointing circuit emulation hardware emulator vendor provides plugin library responds checkpoint restart event new plugin model example processlevel virtualization virtualization external abstraction within process capability motivated scenario testing circuit model help hardware emulator plugin model enables threeway collaboration allowing circuit designer emulator vendor contribute separate proprietary plugins sharing open source software framework dmtcp developer provides flexible platform different fault injection model based plugins designed within dmtcp checkpointing framework initialization one restarts checkpointed state control desired plugin restart save time spent simulating initialization phase enabling fault injection exactly region interest upon restart one inject fault otherwise modify remainder simulation work concludes brief survey checkpointing processlevel virtualization
ComputerScience,formalizing memory access interrupt,hardwaresoftware boundary modern heterogeneous multicore computer increasingly complex diverse across different platform single memory access core dma engine traverse multiple hardware translation caching step destination memory cell register often appears different physical address different core interrupt pas complex topology interrupt controller remappers delivery one core specific constraint configuration system software must correctly understand specific hardware hand also configure appropriately runtime propose formal model address space resource system allows u express verify invariant system runtime configuration illustrate motivate several real platform encountered process o implementation
ComputerScience,memo revisiting hybrid memory management modern operating system,emerging hybrid dramnvm architecture challenging existing memory management mechanism operating system paper introduce memo schedule memory resource entire memory hierarchy including cache channel main memory comprising dram nvm simultaneously powered newly designed kernellevel monitoring module page migration engine memo dynamically optimize data placement memory hierarchy term online memory pattern current resource utilization feature memory medium experimental result show memo achieve high memory utilization contributing system throughput qos average moreover memo reduce nvm side memory latency energy consumption benefit nvm lifetime significantly improvement average
ComputerScience,mosaic applicationtransparent hardwaresoftware cooperative memory manager gpus,modern gpus face tradeoff page size used memory management affect address translation demand paging support multiple page size help relax page size tradeoff address translation demand paging optimization work together synergistically however existing page coalescing splintering policy require costly base page migration undermine benefit multiple page size provide paper observe gpgpu application present opportunity support multiple page size without costly data migration application perform memory allocation en masse ie allocate large number base page show en masse allocation allows u create intelligent memory allocation policy ensure base page contiguous virtual memory allocated contiguous physical memory page result coalescing splintering operation longer need migrate base page introduce mosaic gpu memory manager provides applicationtransparent support multiple page size mosaic us base page transfer data system io bus allocates physical memory way preserve base page contiguity ensures large page frame contains page single memory protection domain mechanism allows tlb use large page reducing address translation overhead data transfer mechanism enables gpu transfer base page needed application system io bus keeping demand paging overhead low
ComputerScience,denialofservice attack shared cache multicore analysis prevention,paper investigate feasibility denialofservice do attack shared cache multicore platform carefully engineered attacker task able cause execution time increase victim task running dedicated core popular embedded multicore platform regardless whether partition shared cache based careful experimentation real simulated multicore platform identify internal hardware structure nonblocking cache namely cache writeback buffer potential target shared cache do attack propose oslevel solution prevent do attack extending stateoftheart memory bandwidth regulation mechanism implement proposed mechanism linux real multicore platform show effectiveness protecting cache do attack
ComputerScience,survey tiering caching highperformance storage system,although every individual invented storage technology made big step towards perfection none spotless different data store essential performance availability recovery requirement met together single economically affordable medium yet one influential factor price always tradeoff desired set storage choice cost address issue network various type storing medium used deliver high performance expensive device solid state drive nonvolatile memory along high capacity inexpensive one like hard disk drive software caching tiering longestablished concept handling file operation moving data automatically within storage network manage data backup lowcost medium intelligently moving data around different device based need key insight matter survey discus recent piece research done improve highperformance storage system caching tiering technique
ComputerScience,hts hardware task scheduler heterogeneous system,moore scaling era come end application specific hardware accelerator appear attractive way improve performance power efficiency computing system massively heterogeneous system large number hardware accelerator along multiple general purpose cpu promising direction pose several challenge term runtime scheduling task accelerator design granularity accelerator paper address challenge developing example heterogeneous system enable multiple application share available accelerator propose design accelerator lower abstraction enable application broken task mapped several accelerator observe several reallife workload broken common primitive shared across many workload finally propose design hardware task scheduler inspired hardware scheduler outoforder superscalar processor efficiently utilize accelerator system scheduling task outoforder even speculatively evaluate proposed system reallife synthetic benchmark based digital signal processing dsp application compared executing benchmark system sequential scheduling proposed scheduler achieves improvement performance
ComputerScience,tvarak softwaremanaged hardware offload dax nvm storage redundancy,tvarak efficiently implement systemlevel redundancy directaccess dax nvm storage production storage system complement devicelevel ecc cover medium error systemchecksums crossdevice parity systemlevel redundancy enables detection recovery data corruption due device firmware bug eg reading data wrong physical location direct access nvm penalizes softwareonly implementation systemlevel redundancy forcing choice lack data protection significant performance penalty offloading update verification systemlevel redundancy tvarak hardware controller colocated lastlevel cache enables efficient protection data bug memory controller nvm dimm firmware simulationbased evaluation seven dataintensive application show tvarak performance energy efficiency example tvarak reduces redis setonly performance compared reduction stateoftheart softwareonly approach
ComputerScience,sparta divide conquer approach address translation accelerator,virtual memory vm critical usability programmability hardware accelerator unfortunately implementing accelerator vm efficiently challenging area power constraint make difficult employ large multilevel tlbs used generalpurpose cpu recent research proposal advocate number restriction virtualtophysical address mapping order reduce tlb size increase reach however restriction unattractive forgo many original benefit traditional vm demand paging copyonwrite propose sparta divide conquer approach address translation sparta split address translation acceleratorside memoryside part acceleratorside translation hardware consists tiny tlb covering accelerator cache hierarchy translation main memory access performed shared memoryside tlbs performing translation memory access memory side allows sparta overlap data fetch translation avoids replication tlb entry data shared among accelerator improve performance efficiency memoryside translation sparta logically partition memory space delegating translation small efficient perpartition translation hardware evaluation indextraversal accelerator show sparta virtually eliminates translation overhead reducing average improving performance time sparta requires minimal acceleratorside translation hardware reduces total number tlb entry system gracefully scale memory size preserve key vm functionality
ComputerScience,softwear softwareonly inmemory wearleveling nonvolatile main memory,several emerging technology byteaddressable nonvolatile memory nvm considered replace dram main memory computer system last year disadvantage lower write endurance compared dram nvm technology like phasechange memory pcm ferroelectric ram feram addressed literature solution inmemory wearleveling technique proposed aim balance wearlevel memory cell achieve increased memory lifetime generally apply advanced agingaware wearleveling technique proposed literature additional special hardware introduced memory system provide necessary information cell age thus enable agingaware wearleveling decision paper proposes softwareonly agingaware wearleveling based common cpu feature rely additional hardware support memory subsystem specifically exploit memory management unit mmu performance counter interrupt approximate memory write count aging indicator although softwareonly approach may lead slightly worse wearleveling applicable commonly available hardware achieve pagelevel coarsegrained wearleveling approximating current cell age statistical sampling performing physical memory remapping mmu method result nonuniform memory usage pattern within memory page hence propose finegrained wearleveling stack region c c compiled software applying wearleveling technique achieve ideal memory lifetime lifetime improvement factor compared lifetime without wearleveling
ComputerScience,hardware memory management future mobile hybrid memory system,current mobile application rapidly growing memory footprint posing great challenge memory system design insufficient dram main memory incur frequent data swap memory storage process hurt performance consumes energy deteriorates write endurance typical flash storage device alternately larger dram higher leakage power drain battery faster dram scaling trend make growth dramin mobile space prohibitive due cost emerging nonvolatile memory nvm potential alleviate issue due higher capacity per cost dram minimal static power recently wide spectrum nvm technology including phasechange memory pcm memristor xpoint emerged despite mentioned advantage nvm longer access latency compared dramand nvm writes incur higher latency wear cost therefore integration new memory technology memory hierarchy requires fundamental rearchitecting traditional system design work propose hardwareaccelerated memory manager hmmu address type memory flat space address space design set data placement data migration policy within memory manager may exploit advantage memory technology augmenting system hmmu reduce overall memory latency also reducing writes nvm experimental result show design achieves reduction energy consumption performance degradation versus alldram baseline likely untenable future
ComputerScience,exploiting inter intramemory asymmetry data mapping hybrid tieredmemories,modern computing system embracing hybrid memory comprising dram nonvolatile memory nvm combine best property memory technology achieving low latency high reliability high density prominent characteristic dramnvm hybrid memory nvm access latency much higher dram access latency call intermemory asymmetry observe parasitic component long bitline major source high latency dram nvm significant factor contributing highvoltage operation nvm impact reliability propose architectural change long bitline dram nvm split two segment isolation transistor one segment accessed lower latency operating voltage introducing tier enable nonuniform access within memory type call intramemory asymmetry leading performance reliability tradeoff dramnvm hybrid memory extend existing nvmdram o three way first exploit inter intramemory asymmetry allocate migrate memory page tier dram nvm second improve o page allocation decision predicting access intensity newlyreferenced memory page program placing matching tier initial allocation minimizes page migration program execution lowering performance overhead third propose solution migrate page tier memory without transferring data memory channel minimizing channel occupancy improving performance overall approach call mneme enable exploit asymmetry dramnvm hybrid tiered memory improves performance reliability singlecore multiprogrammed workload
ComputerScience,improving phase change memory performance data content aware access,prominent characteristic write operation phasechange memory pcm latency energy sensitive data written well content overwritten observe overwriting unknown memory content incur significantly higher latency energy compared overwriting known allzeros allones content allzeros allones content overwritten programming pcm cell one direction ie using either set reset operation paper propose data content aware pcm writes datacon new mechanism reduces latency energy pcm writes redirecting request overwrite memory location containing allzeros allones datacon operates three step first estimate much pcm write access would benefit overwriting known content eg allzeros allones comprehensively considering number set bit data written energylatency tradeoff set reset operation pcm second translates write address physical address within memory contains best type content overwrite record translation table future access exploit data access locality workload minimize address translation overhead third reinitializes unused memory location known allzeros allones content manner interfere regular read write access datacon overwrites unknown content absolutely necessary evaluate datacon workload stateoftheart machine learning application spec na parallel benchmark result demonstrate datacon significantly improves system performance memory system energy consumption compared best performanceoriented stateoftheart technique
ComputerScience,ioca highspeed ioaware llc management networkcentric multitenant platform,modern server cpu lastlevel cache llc critical hardware resource exerts significant influence performance workload manage llc key performance isolation qos cloud multitenancy paper argue besides cpu core highspeed network io also important llc management intel architectural innovation data direct io ddio directly injects inbound io traffic part llc instead main memory summarize two problem caused ddio show default ddio configuration may always achieve optimal performance ddio decrease performance nonio workload share llc high present ioca first llc management mechanism networkcentric platform treat io firstclass citizen ioca monitor analyzes performance core llc ddio using cpu hardware performance counter adaptively adjusts number llc way ddio tenant demand llc capacity addition ioca dynamically chooses tenant share llc resource ddio minimize performance interference tenant io experiment multiple microbenchmarks realworld application two major endhost network model demonstrate ioca effectively reduce performance degradation caused ddio minimal overhead
ComputerScience,spaceefficient routing table almost network incompressibility method,use incompressibility method based kolmogorov complexity determine total number bit routing information almost network topology model routing almost labeled graph theta bit necessary sufficient shortest path routing almost graph mean kolmogorov random graph constitute fraction graph n node c arbitrary fixed constant model average case lower bound rise omega log n another model average case upper bound drop n n clearly expose sensitivity bound model consideration path short need shortest stretch factor may larger much le space needed average even demanding model fullinformation routing requires theta bit average worstcase static network prove omega log n lower bound shortest path routing stretch factor network free relabeling allowed
ComputerScience,power execution time measurement methodology sdf application fpgabased mpsocs,timing power consumption play important role design embedded system furthermore property directly related safety requirement many embedded system regard availability requirement power consideration uttermost importance battery operated system validation timing power requires observability property many case difficult observability either possible requires big extra effort system validation process paper present measurementbased approach joint timing power analysis synchronous dataflow sdf application running shared memory multiprocessor systemsonchip mpsoc architecture proofofconcept implement mpsoc system configurable power timing measurement interface inside field programmable gate array fpga experiment demonstrate viability approach able accurately analyzing different mapping image processing application sobel filter jpeg encoder fpgabased mpsoc implementation
ComputerScience,concrete us xml software development data analysis,xml becoming industry standard data description exchange despite still question technology useful high energy physic software development data analysis paper aim answer question demonstrating xml used icecube software development system data handling analysis first surveying concept tool make xml technology go discus concrete example concept tool used speed software development icecube benefit using xml icecube data handling analysis chain overall aim paper show xml many benefit bring high energy physic software development data analysis
ComputerScience,uncovering epistemological ontological assumption software designer,ontological epistemological position adopted information system design method incommensurable pushed extreme information system research therefore tended focus similarity different position usually search single unifying position however focusing similarity clarity argument provided one philosophical position necessarily diminished consequently researcher often treat philosophical foundation design method minor importance paper deliberately chosen focus difference various philosophical position focus believe offer clearer understanding empirical behaviour software viewed particular philosophical position since empirical evidence favour single position conclude arguing validity ad hoc approach software design believe provides stronger theoretically grounded approach software design
ComputerScience,notion equivalence software design,design method information system frequently create software description using formal language nonetheless software designer prefer describe software using natural language distinction simply matter convenience natural language formal language particular natural language follow notion equivalence used formal language paper show existence coexistence different notion equivalence extending notion oracle used formal language allows distinction made trustworthy oracle assumed formal language untrustworthy oracle used natural language examining notion equivalence hope encourage designer software rethink place ambiguity software design
ComputerScience,philosophical smoke signal theory practice information system design,although gulf theory practice information system much lamented researcher offered way forward except number failed attempt develop single systematic theory information system paper encourage researcher reexamine practical consequence theoretical argument examining argument may able form number rigorous theory information system allowing u draw theory practice together without undertaking yet another attempt holy grail single unified systematic theory information system
ComputerScience,introducing sourcements,sourcing process discussed high abstraction level dedicated terminology developed concerning general aspect sourcing term sourcement coined denote building block sourcing tions allocation functional architecture allocational architecture equilibrium configuration discussed limitation concept outsourcing outlined theoretical work meant serve point departure subsequent development detailed theory sourcing sourcing transformation tool dealing practical applica tions
ComputerScience,karlskrona manifesto sustainability design,sustainability central concern society software system increasingly play central role designer software technology cause change responsible effect design choice recognize rapidly increasing awareness fundamental need desire sustainable world lot genuine goodwill however alone ineffective unless come understand address persistent misperceptions karlskrona manifesto sustainability design aim initiate much needed conversation beyond software community highlighting perception proposing set fundamental principle sustainability design
ComputerScience,thematic study requirement modeling analysis selfadaptive system,last decade researcher engineer developed vast body methodology technology requirement engineering selfadaptive system although existing study explored various aspect topic categorized summarized area research requirement modeling analysis study aim investigate research theme based utilized modeling method activity conduct thematic study systematic literature review result derived synthesizing extracted data statistical method paper provides updated review research literature enabling researcher practitioner better understand research theme area identify research gap need studied
ComputerScience,michael john caldwell gordon fr february august,michael gordon pioneer field interactive theorem proving hardware verification vision formally verifying system design proving correctness using mathematics logic demonstrated idea realworld computer design student extended work diverse area verification floatingpoint algorithm verification probabilistic algorithm verified translation source code correct machine code elected royal society continued produce outstanding research retirement achievement include work edinburgh university helping create edinburgh lcf first interactive theorem prover kind ml family functional programming language adopted higherorder logic general formalism verification showing could specify hardware design gate level right processor level turned ideal formalism many problem computer science mathematics tool technique exerted huge influence across field formal verification
ComputerScience,framework evaluating modeldriven selfadaptive software system,last year model driven development mdd componentbased software development cbsd contextoriented software become interesting alternative design construction selfadaptive software system general ultimate goal technology able reduce development cost effort improving modularity flexibility adaptability reliability software system analysis technology show include principle separation concern integration key factor obtaining highquality selfadaptable software system technology identifies different concern deal separately order specify design selfadaptive application time support software adaptability contextawareness research study development methodology employ principle modeldriven development building selfadaptive software system aim article proposes evaluation framework analysing evaluating feature modeldriven approach ability support software selfadaptability dependability highly dynamic contextual environment evaluation framework facilitate software developer selecting development methodology suit software requirement reduces development effort building selfadaptive software system study highlight major drawback propped modeldriven approach related work emphasise considering volatile aspect selfadaptive software analysis design implementation phase development methodology addition argue development methodology leave selection modelling language modelling tool software developer
ComputerScience,sustainable research software handover,scientific software project evolve rapidly initial development phase yet end funding period completion research project thesis publication engagement project may slow cease completely retain invested effort science software need preserved handed succeeding developer team next generation phd student comparable guide provide topdown recommendation project lead paper intends bottomup approach sustainable handover process developer perspective important characteristic regard project size guideline structured furthermore checklist provided serve practical guide implementing proposed measure
ComputerScience,environment sustainable research software germany beyond current state open challenge call action,research software become central asset academic research optimizes existing enables new research method implement embeds research knowledge constitutes essential research product research software must sustainable order understand replicate reproduce build upon existing research conduct new research effectively word software must available discoverable usable adaptable new need future research software therefore requires environment support sustainability hence change needed way research software development maintenance currently motivated incentivized funded structurally infrastructurally supported legally treated failing threaten quality validity research paper identify challenge research software sustainability germany beyond term motivation selection research software engineering personnel funding infrastructure legal aspect besides researcher specifically address political academic decisionmakers increase awareness importance need sustainable research software practice particular recommend strategy measure create environment sustainable research software ultimate goal ensure softwaredriven research valid reproducible sustainable software recognized first class citizen research paper outcome two workshop run germany first international conference research software engineer germany dedicated dfgsupported followup workshop berlin
ComputerScience,conforming restricted delaunay mesh generation piecewise smooth complex,frontaldelaunay refinement algorithm mesh generation piecewise smooth domain described built using restricted delaunay framework new algorithm combine number novel feature including unweighted conforming restricted delaunay representation domain specified nonmanifold collection piecewise smooth surface patch curve segment ii protection strategy domain containing curve segment subtend sharply acute angle iii new class offcentre refinement rule designed achieve highquality pointplacement along embedded curve feature experimental comparison show new frontaldelaunay algorithm outperforms classical statically weighted restricted delaunayrefinement technique number threedimensional benchmark problem
ComputerScience,writing editing complexity theory tale tool,researcher full shelf physical virtual book writing editing prose though make claim special degree expertise recently edited book complexity theory survey complexity theory retrospective ii springerverlag brought particularly close contact subject article number excellent resource available writer editor article list resource also relate adventure book moved concept reality
ComputerScience,complexity science simpleton,article shall describe interesting topic subject complexity science general audience anyone solid foundation high school mathematics calculus elementary understanding computer programming able follow article first shall explain significance p versus np problem solve next shall describe two famous mathematics problem collatz conjecture riemann hypothesis show chaitin incompleteness theorem wolfram notion computational irreducibility important understanding one yet solved two problem
ComputerScience,personalizing image search result flickr,social medium site flickr allows user upload photo annotate tag submit group also form social network adding user contact flickr offer multiple way browsing searching one option tag search return image tagged specific keyword keyword ambiguous eg beetle could mean insect car tag search result include many image relevant sense user mind executing query claim user express photography interest metadata add form contact image annotation show exploit metadata personalize search result user thereby improving search performance first show significantly improve search precision filtering tag search result user contact larger social network includes contact contact secondly describe probabilistic model take advantage tag information discover latent topic contained search result user interest similarly described tag used annotating image latent topic found model used personalize search result finding image topic interest user
ComputerScience,lstmsharp adaptable energyefficient hardware accelerator long shortterm memory,effectiveness lstm neural network popular task automatic speech recognition fostered increasing interest lstm inference acceleration due recurrent nature data dependency lstm computation designing customized architecture specifically tailored computation pattern crucial efficiency since lstms used variety task generalizing efficiency diverse configuration ie adaptiveness another key feature accelerator work first show problem low resourceutilization adaptiveness stateoftheart lstm implementation gpu fpga asic architecture solve issue propose intelligent tiledbased dispatching mechanism efficiently handle data dependency increase adaptiveness lstm computation propose lstmsharp hardware accelerator pipeline lstm computation using effective scheduling scheme hide dependent serialization furthermore lstmsharp employ dynamic reconfigurable architecture adapt model characteristic lstmsharp achieves speedup average stateoftheart asic fpga gpu implementation respectively different lstm model resource budget furthermore provide significant energyreduction respect previous solution due low power dissipation lstmsharp gflopswatt
ComputerScience,learning generate poster scientific paper probabilistic graphical model,researcher often summarize work form scientific poster poster provide coherent efficient way convey core idea expressed scientific paper generating good scientific poster however complex time consuming cognitive task since poster need readable informative visually aesthetic paper first time study challenging problem learning generate poster scientific paper end datadriven framework utilizes graphical model proposed specifically given content display key element good poster including attribute panel arrangement graphical element learned inferred data inference stage map inference framework employed incorporate design principle order bridge gap panel attribute composition within panel also propose recursive page splitting algorithm generate panel layout poster learn validate model collect release new benchmark dataset called njufudan paperposter dataset consists scientific paper corresponding poster exhaustively labelled panel attribute qualitative quantitative result indicate effectiveness approach
ComputerScience,trend technique visual gaze analysis,visualizing gaze data effective way quick interpretation eye tracking result paper present study investigation benefit limitation visual gaze analysis among eye tracking professional researcher result used create tool visual gaze analysis within master project
ComputerScience,fairness social welfare incentivizing participatory sensing,participatory sensing emerged recently promising approach largescale data collection however without incentive user regularly contribute good quality data method unlikely viable long run paper link incentive user demand consuming compelling service approach complementary conventional credit reputation based approach demandbased principle design two incentive scheme incentive demand fairness idf iterative tank filling itf maximizing fairness social welfare respectively study show idf scheme maxmin fair score close jain fairness index itf scheme maximizes social welfare achieves unique nash equilibrium also pareto globally optimal adopted game theoretic approach derive optimal service demand furthermore address practical consideration use stochastic programming technique handle uncertainty often encountered real life situation
ComputerScience,multimodal machine translation reinforcement learning,multimodal machine translation one application integrates computer vision language processing unique task given field machine translation many stateofthearts algorithm still employ textual information work explore effectiveness reinforcement learning multimodal machine translation present novel algorithm based advantage actorcritic algorithm specifically cater multimodal machine translation task emnlp third conference machine translation experiment proposed algorithm multilingual englishgerman image description dataset image entity dataset model take two channel input image text us translation evaluation metric training reward achieves better result supervised learning mle baseline model furthermore discus prospect limitation using reinforcement learning machine translation experiment result suggest promising reinforcement learning solution general task multimodal sequence sequence learning
ComputerScience,modeling internet thing simulation perspective,paper deal problem properly simulating internet thing iot simulating iot allows evaluating strategy employed deploy smart service different kind territory however heterogeneity scenario seriously complicates task imposes use sophisticated modeling simulation technique discus novel approach provision scalable simulation scenario enable realtime execution massively populated iot environment attention given novel hybrid multilevel simulation technique combined agentbased adaptive parallel distributed simulation pad approach provide mean perform highly detailed simulation demand support claim detail use case concerned simulation vehicular transportation system
ComputerScience,multilevel simulation internet thing smart territory,paper methodology presented employed simulating internet thing iot requirement scalability due possibly huge amount involved sensor device heterogeneous scenario might occur impose resorting sophisticated modeling simulation technique particular multilevel simulation regarded main framework allows simulating largescale iot environment keeping high level detail needed consider use case based deployment smart service decentralized territory two level simulator employed based coarse agentbased adaptive parallel distributed simulation approach model general life simulated entity however needed finer grained simulator based omnet triggered restricted portion simulated area allows considering issue concerned wireless communication based use case confirmed adhoc wireless networking technology represent principle tool deploy smart service decentralized countryside moreover performance evaluation confirms viability utilizing multilevel simulation simulating large scale iot environment
ComputerScience,quest scalability accuracy simulation internet thing approach based multilevel simulation,paper present methodology simulating internet thing iot using multilevel simulation model respect conventional simulator approach allows u tune level detail different part model without compromising scalability simulation use case developed twolevel simulator study deployment smart service rural territory higher level base coarse grained agentbased adaptive parallel distributed simulator needed simulator spawn omnet model instance evaluate detail issue concerned wireless communication restricted area simulated world performance evaluation confirms viability multilevel simulation iot environment
ComputerScience,selfhealing dilemma distributed system faultcorrection v faulttolerance,largescale decentralized system autonomous agent interacting via asynchronous communication often experience following selfhealing dilemma faultdetection inherits network uncertainty making faulty process indistinguishable slow process implication dramatic selfhealing mechanism become biased costineffective particular triggering undesirable faultcorrection result new fault could prevented faulttolerance instead nevertheless faulttolerance alone without eventually correcting persistent fault make system underperforming well measuring understanding resolving selfhealing dilemma timely challenge critical requirement given rise distributed ledger edge computing internet thing several application domain energy transport health paper introduces novel generalpurpose modeling fault scenario accurately measure predict inconsistency generated faultcorrection faulttolerance node network monitor health status another node defect contrast related work information computationalapplication scenario overlying algorithm application data required rigorous experimental methodology designed evaluates experimental setting different fault scale fault profile fault detection threshold almost measurement inconsistency prototyped decentralized network node prediction performance modeled fault scenario validated challenging application scenario decentralized dynamic innetwork aggregation using realworld data smart grid pilot project finding confirm origin inconsistency design phase provide new insight tune selfhealing mechanism design phase
ComputerScience,optimal unionfind constraint handling rule,constraint handling rule chr committedchoice rulebased language originally intended writing constraint solver paper show also possible write classic unionfind algorithm variant chr program neither compromise declarativeness efficiency study time complexity program match almostlinear complexity best known imperative implementation fact illustrated experimental result
ComputerScience,uscut interactive algorithm rapid detection segmentation liver tumor ultrasound acquisition,ultrasound u commonly used liver imaging modality worldwide play important role followup cancer patient liver metastasis present interactive segmentation approach liver tumor u acquisition due low image quality low contrast tumor surrounding tissue u image segmentation challenging thus clinical practice still relies manual measurement outlining tumor u image target problem applying interactive segmentation algorithm u data allowing user get realtime feedback segmentation result algorithm developed tested handinhand physician computer scientist make sure future practical usage clinical setting feasible cover typical acquisition clinical routine approach evaluated dozen datasets tumor hyperechoic brighter hypoechoic darker isoechoic similar comparison surrounding liver tissue due interactive realtime behavior approach possible even difficult case find satisfying segmentation tumor within second without parameter setting average tumor deviation compared manual measurement however long term goal ease volumetric acquisition liver tumor order evaluate treatment response additional aim registration intraoperative u image via interactive segmentation patient preinterventional ct acquisition
ComputerScience,ermrest entityrelationship data storage service webbased dataoriented collaboration,scientific discovery increasingly dependent scientist ability acquire curate integrate analyze share large diverse collection data detail vary domain domain data often consist diverse digital asset eg image file sequence data simulation output organized complex relationship context may evolve course investigation addition discovery often collaborative sharing data organizational context highly desirable common system managing file asset metadata hide inherent relational structure traditional relational database system extend distributed collaborative environment often seen scientific investigation address issue introduce ermrest collaborative data management service allows general entityrelationship modeling metadata manipulated restful access method present design criterion architecture service implementation well describe ecosystem tool service created integrate metadata endtoend scientific data life cycle ermrest deployed hundred user across multiple scientific research community project present two representative use case international consortium earlyphase multidisciplinary research project
ComputerScience,first study data readiness level,introduce idea data readiness level drl measure relative richness data answer specific question often encountered data scientist first approach problem full generality explaining desired mathematical property application propose study two drl metric specifically define drl function least four property data noisiness believability relevance coherence informationtheoretic based metric cosine similarity document disparity proposed indicator relevance coherence piece data proposed metric validated textbased experiment using twitter data
ComputerScience,extending realtime maude semantics ptolemy hierarchical de model,paper extends realtime maude formalization semantics flat ptolemy ii discreteevent de model hierarchical model including modal model challenging task requires combining synchronous fixedpoint computation hierarchical structure synthesis realtime maude verification model ptolemy ii de model formal verification synthesized model realtime maude integrated ptolemy ii enabling modelengineering process combine convenience ptolemy ii de modeling simulation formal verification realtime maude
ComputerScience,modelling avoidability pattern csp,solving avoidability problem area string combinatorics often requires initial step construction via computer program long word contain word match given pattern well known computationally hard task despite rather straightforward ultimately task formalized constraint satisfaction problem unified approach solving proposed far diverse adhoc method used aim fill gap show several relevant avoidability problem modelled consequently solved uniform way constraint satisfaction problem using framework minizinc main advantage approach one required formulate avoidability problem minizinc language actual search solution implemented adhoc instead carried standard cspsolver
ComputerScience,deciding memory safety singlepass heapmanipulating program,investigate decidability automatic program verification program manipulate heap particular decision procedure proving memory safety extend recent work identified decidable subclass uninterpreted program class aliasaware program update map apply theory develop verification algorithm memory safety determining heapmanipulating program allocates free memory location manipulates heap pointer dereference unallocated memory location show problem decidable initial allocated heap form forest datastructure program streamingcoherent intuitively restricts program make single pas datastructure experimental evaluation set library routine manipulate forest datastructures show common singlepass algorithm datastructures often fall decidable class decision procedure efficient verifying
ComputerScience,formal approach engineering domainspecific distributed system,review result regarding specification programming verification different class distributed system stemmed research concurrency mobility group university firenze specifically examine distinguishing feature networkaware programming serviceoriented computing autonomic computing collective adaptive system programming present overview four different language namely klaim cow scel abc language discus design choice present syntax semantics show different formalism used model program travel booking scenario describe programming environment verification technique
ComputerScience,socialscope enabling information discovery social content site,recently many content site started encouraging user engage social activity adding buddy yahoo travel sharing article friend new york time led emergence em social content site facilitated initiative like openid http wwwopenidnet opensocial http wwwopensocialorg community standard enable open access user social profile connection individual content site bringing contentoriented site social networking site ever closer integration content social information raise new challenge em information management discovery site propose logical architecture named kw socialscope consisting three layer tackling challenge em content management layer responsible integrating maintaining physically accessing content social data em information discovery layer take care analyzing content derive interesting new information interpreting processing user information need identify relevant information finally em information presentation layer explores discovered information help user better understand principled way describe challenge layer propose solution challenge particular propose uniform algebraic framework leveraged uniformly flexibly specify many information discovery analysis task provide foundation optimization task
ComputerScience,anonymity confidentiality secure distributed simulation,research data confidentiality integrity availability gaining momentum ict community due intrinsically insecure nature internet many distributed system service based secure communication protocol avoid eavesdropping protect confidentiality technique usually employed distributed simulation consider issue probably due fact many realworld simulator rely monolithic offline approach therefore issue apply however complexity system simulated rise distributed cloud based simulation impose adoption secure simulation architecture paper present solution ensure anonymity confidentiality distributed simulation performance evaluation based anonymized distributed simulator used quantifying performance penalty anonymous obtained result show viable solution
ComputerScience,rulebased knowledge representation service level agreement,automated management monitoring service contract like service level agreement slas higherlevel policy vital efficient reliable distributed serviceoriented architecture soa high quality service qos level service provider need manage execute maintain thousand slas different customer different type service need new level flexibility automation available current technology propose novel rulebased knowledge representation kr sla rule respective rulebased service level management rbslm framework rulebased approach based logic programming provides several advantage including automated rule chaining allowing compact knowledge representation high level automation well flexibility adapt rapidly changing business requirement therewith address urgent need serviceoriented business nowadays dynamically change business contractual logic order adapt rapidly changing business environment overcome restricting nature slow change cycle
ComputerScience,buzz extensible programming language selforganizing heterogeneous robot swarm,present buzz novel programming language heterogeneous robot swarm buzz advocate compositional approach offering primitive define swarm behavior perspective single robot overall swarm singlerobot primitive include robotspecific instruction manipulation neighborhood data swarmbased primitive allow dynamic management robot team sharing information globally across swarm selforganization stem completely decentralized mechanism upon buzz runtime platform based language extended add new primitive thus supporting heterogeneous robot swarm runtime platform designed laid top framework robot operating system showcase capability buzz providing code example analyze scalability robustness runtime platform realistic simulated experiment representative swarm algorithm
ComputerScience,theory sex geodakian advanced iskrin,vgeodakian proposed theory explains sex mechanism evolutionary adaptation specie changing environmental condition viskrin refined augmented concept geodakian gave new interesting explanation several phenomenon involve sex sex ratio including waryears phenomenon also introduced new concept catastrophic sex ratio note attempt digest technical aspect new idea iskrin
ComputerScience,sharp utilization threshold realtime scheduling problem,scheduling policy realtime system exhibit threshold behavior related utilization task set schedule case threshold sharp rate monotonic scheduling policy show periodic workload utilization le threshold u rm scheduled almost surely workload utilization greater u rm almost surely schedulable study sharp threshold behavior context processor scheduling using static task priority periodic realtime task aperiodic realtime task well notion utilization threshold provides simple schedulability test realtime application result improve understanding scheduling policy provide interesting characterization typical behavior policy threshold sharp small deviation around threshold cause schedulability property appear disappear policy happy consequence used address limitation existing utilizationbased test schedulability demonstrate use approach balancing power consumption need meet deadline web server
ComputerScience,takehome complexity,discus use project firstyear graduate complexity theory course
ComputerScience,grateful dead analysis relationship concert listening behavior,grateful dead american band born san francisco california psychedelic movement band played music together well known concert performance containing extended improvisation long unique set list article present comparative analysis grateful dead concert set list lastfm grateful dead listening event august october strong correlation song played concert listened lastfm member outlying song trend identify interesting aspect band fan year band dissolution
ComputerScience,information economy student recruitment present conjuncture future prospect,university program curriculum general react need meet market need respond market stimulus least try consider inverted view consider data perspective university program reflecting indeed presaging economic trend article pursue line thinking show various past event fit well new view provide explanation technology trend happened current development important
ComputerScience,proposition reconsider organization scientific workshop,participating scientific workshop nowadays often adventure number participant seldom exceed number talk halfday workshop mostly finished lunchtime speaker sometimes present unexcused strict progression workshop offer little air discussion talk rescheduled short notice case speech dropped attaining guest definitely wonder presenter talking something match previously announced talk respect believe organization workshop classical sense must reconsidered enough compelling presenter pay registration fee let participant impassive taken away mentally work address several proposition become implemented future workshop organization hope contribute identification scientific workshop place interaction
ComputerScience,towards explanatory computational theory scientific discovery,propose explanatory computational theory transformative discovery science theory derived recurring theme found diverse range scientific change scientific discovery knowledge diffusion theory philosophy science sociology science social network analysis information science theory extends concept structural hole social network broader range associative network found science study especially including network reflect underlying intellectual structure cocitation network collaboration network central premise connecting otherwise disparate patch knowledge valuable mechanism creative thinking general transformative scientific discovery particular
ComputerScience,knowledge elecitation factor affecting taskforce productivity using questionnaire,paper present process knowledge elicitation structured questionnaire technique effort depict problem domain investigation factor affecting taskforce productivity problem solved using expert system technology problem first step acquire knowledge domain expert knowledge elicitation one difficult task knowledge base formation key component expert system questionnaire distributed among different domain expert public private organization ie education institution industry research etc pakistan total response expert received expert well qualified highly experienced remained member selection committee number time different post fact acquired analyzed knowledge extracted elicited standard shape given questionnaire research knowledge learning tool tool may used standard document selection promotion employee
ComputerScience,exploration gap computer science curriculum industrial skill requirement,paper set examine skill gap industrial application information technology university academic programme curriculum look cause considers probable solution bridging gap suggests possibility exploring new role university employer labor also highlight strategy abolish misalignment university industry main concept blend academic rigidity industrial relevance
ComputerScience,opening black box energy modelling strategy lesson learned,global energy system undergoing major transition energy planning decisionmaking across government industry academia model play crucial role policy relevance contested nature transparency open availability energy model data particular importance provide practical howto guide based collective experience member open energy modelling initiative openmod discus key step consider opening code data including determining intellectual property ownership choosing licence appropriate modelling language distributing code data providing support building community illustrating decision example lesson learned community conclude even though individual researcher choice important institutional change still also necessary openness transparency energy research
ComputerScience,going green holistic approach transform business,recent year environmental energy conservation issue taken central theme global business arena reality rising energy cost impact international affair coupled different kind environmental issue shifted social economic consciousness business community hence business community search ecofriendly business model paper highlight concept green business need current global scenario
ComputerScience,rerun repeat reproduce reuse replicate transforming code scientific contribution,scientific code production software scientific code participates evaluation scientific hypothesis imposes specific constraint code often overlooked practice articulate small example five characteristic scientific code computational science posse rerunnable repeatable reproducible reusable replicable
ComputerScience,synergizing roadway infrastructure investment digital infrastructure infrastructurebased connected vehicle application review current status future direction,safety mobility environmental energy economic benefit transportation system focus recent connected vehicle cv program potentially dramatic however realization benefit largely hinge timely integration digital technology upcoming well existing transportation infrastructure cv must enabled broadcast receive data cv vehicletovehicle communication infrastructure vehicletoinfrastructure communication road user bicyclist pedestrian vehicletoother road user communication infrastructure transportation agency manage application must able collect process distribute archive data quickly reliably securely paper focus application investigates current digital roadway infrastructure initiative highlight importance including digital infrastructure investment alongside investment traditional transportation infrastructure keep auto industry push toward increasing intervehicular communication studying current cv testbeds smartcity initiative paper identifies digital infrastructure used public agency also examines public agency limited budgeting digital infrastructure find current expenditure inadequate realizing potential benefit application finally paper present set recommendation based review current practice future need designed guide agency responsible transportation infrastructure stress importance collaboration establishing national international platform planning deployment management digital infrastructure support connected transportation system
ComputerScience,math philosophy programming writing,philosophical thinking side effect aiming find essence diverse set phenomenon often make difficult see difference case mathematics programming writing philosophy unified essence shared understanding world helped offloading cognitive effort suitable language
ComputerScience,technology propaganda limit human intellect,fake news recent phenomenon misinformation propaganda new communication technology make easy u exposed high volume true false irrelevant unprovable information future ai expected amplify problem even time brain reaching limit handling information respond propaganda technology help relying alone suffice long term also need ethical policy law regulation trusted authority including factcheckers however solve problem without active engagement educated citizen epistemological education recognition self bias protection channel communication trusted network needed overcome problem continue progress democratic society
ComputerScience,challenge operation management german university chair ten year retrospect,last two decade majority german university adopted various characteristic prevailing northamerican academic system resulting significant change several key area include eg teaching research university internal organizational structure however still follow traditional decentralized scheme implementing additional organizational level chair effectively mini department dedicated staff budget infrastructure although technical university munich tum establishing centralized scheme many administrative task past decade transition distributed centralized information technology administration infrastructure still ongoing process case author chair migration far included handing networkrelated operation joint compute center consolidating chair legacy server system term hardware architecture operating system lately moving selected service replacement operated department university requirement individual organization constantly shifting process however neither close completion particularly unique tum paper thus share experience wrt migration believe many german university might facing similar challenge future northamerican university currently implementing chair layer instead relying centralized infrastructure could need decentralized solution hoping benefit journey thus present design commissioning evolution infrastructure
ComputerScience,valuebased engineering ethic design,article give methodological overview valuebased engineering ethic design discus key challenge measure involved eliciting conceptualizing prioritizing respecting value system design thereby draw software engineering value sensitive design design thinking participatory design well philosophical source especially material ethic value article recognizes timely challenge valuebased engineering compatibility agile form system development responsibility hardly controllable ecosystem interconnected service fearless integration external stakeholder difficulty measuring ethicality system finally valuebased engineering methodology presented benefit learning collected ieee standardization process well case study set ieee establish process model address ethical consideration throughout various stage system initiation analysis design
ComputerScience,cascnn deep convolutional neural network image compression artifact suppression,lossy image compression algorithm pervasively used reduce size image transmitted web recorded data storage medium however pay high compression rate visual artifact degrading user experience deep convolutional neural network become widespread tool address highlevel computer vision task successfully recently found way area lowlevel computer vision image processing solve regression problem mostly relatively shallow network present novel deep convolutional network image compression artifact suppression hierarchical skip connection multiscale loss function achieve boost db psnr ordinary jpeg improvement db best previous convnet result show network trained specific quality factor qf resilient qf used compress input image single network trained qf provides psnr gain db wide qf range
ComputerScience,enduser effect microreboots threetiered internet system,microreboots restart finegrained component software system clean slate take fraction time needed full system reboot microreboots provide applicationgeneric recovery technique internet service supported entirely middleware requires change application priori knowledge application semantics paper investigates effect microreboots endusers ebaylike online auction application find microreboots nearly effective full reboots significantly le disruptive term downtime lost work experiment microreboots reduced number failed user request perceived downtime compared server process restart also show replace uservisible transient failure transparent callretry cost slight increase enduservisible latency recovery due low cost microreboots used aggressively even necessity le certain hence adding reduced recovery time reduction fault detection time improves availability
ComputerScience,accelerating nearest neighbor search manycore system,develop method accelerating metric similarity search effective modern hardware algorithm factor easily parallelizable component making simple deploy efficient multicore cpu gpus despite simple structure algorithm search performance provably sublinear size database factor dependent intrinsic dimensionality demonstrate method provide substantial speedup range datasets hardware platform particular present result server machine graphic hardware multicore desktop
ComputerScience,lineartime algorithm geometric graph sublinearly many edge crossing,provide lineartime algorithm geometric graph sublinearly many crossing provide algorithm running n time connected geometric graph n vertex k crossing k smaller n iterated logarithmic factor specific problem study include voronoi diagram singlesource shortest path algorithm run linear time standard comparisonbased computational model hence make assumption distribution bit complexity edge weight utilize unusual bitlevel operation memory word instead algorithm based planarization method zero edge crossing together method extending planar separator decomposition geometric graph sublinearly many crossing incidentally planarization algorithm also solves open computational geometry problem chazelle triangulating selfintersecting polygonal chain n segment k crossing linear time case k sublinear n iterated logarithmic factor
ComputerScience,definability equal recognizability graph bounded treewidth,prove conjecture courcelle state graph property definable mso modular counting predicate graph constant treewidth recognizable following sense constantwidth tree decomposition graph satisfying property recognized tree automaton forward implication classic fact known courcelle theorem converse direction remained open
ComputerScience,crossplatform performance portability using highly parametrized sycl kernel,recent year heterogeneous system become prevalent across hpc system supercomputer incorporating gpus accelerator hardware platform different performance characteristic optimization requirement order make multiple accelerator developer provide implementation algorithm tuned device hardware vendor provide library targeting device specifically provide good performance frequently different api design hampering portability sycl programming model allows user write heterogeneous program using completely standard c developer access power c template developing compute kernel paper show writing highly parameterized kernel matrix multiplies convolution achieve performance competitive vendor implementation across different architecture furthermore tuning new device amount choosing combination kernel parameter perform best hardware
ComputerScience,feasibility decentralized derivative market,paper present velocity decentralized market deployed ethereum trading custom type derivative option enable smart contract work also implement price fetching tool called pricegeth present case study noting challenge development system might independent interest whose working smart contract implementation also apply recent academic result security solidity smart contract language validating code security finally discus generally use smart contract modelling financial derivative
ComputerScience,first look usability bitcoin key management,bitcoin user directly indirectly forced deal public key cryptography number security usability challenge differ passwordbased authentication underlying online banking service user must ensure key simultaneously accessible resistant digital theft resilient loss paper contribute evaluation framework comparing bitcoin key management approach conduct broad usability evaluation six representative bitcoin client find bitcoin share many fundamental challenge key management known domain bitcoin may present unique opportunity rethink key management end user
ComputerScience,language biometrics analysing public perception,increasing shift technology towards biometric solution one biggest barrier widespread use acceptance user paper investigate understanding awareness acceptance biometrics general public primary research method survey respondent designed gauge public opinion around biometrics additionally qualitative data captured form participant definition term textit biometrics applied thematic analysis well automated word vector analysis data provide deeper insight perception understanding term result demonstrate generally reasonable level understanding biometrics typically limited technique familiar participant eg fingerprint facial recognition notably individual awareness overlook emerging area behavioural biometrics eg gait also apparent compared participant view definition provided official published source eg iso nist oed dhs overall article provides unique insight perception understanding biometrics well area user may lack knowledge biometric application
ComputerScience,lazyfp leaking fpu register state using microarchitectural sidechannels,modern processor utilize increasingly large register set facilitate efficient floating point simd computation large register set burden operating system content need saved restored operating system context switch task optimization operating system defer context switch fpu simd register set first instruction executed need access register meanwhile old content left place hope current task might use register optimization commonly called lazy fpu context switching make possible processor offer ability toggle availability instruction utilizing floating point simd register instruction turned attempt executing generate fault paper present attack exploit lazy fpu context switching allows adversary recover fpu simd register set arbitrary process vms attack work processor transiently execute fpu simd instruction follow instruction generating fault indicating first use fpu simd instruction operating system using lazy fpu context switching fpu simd register content process virtual machine reconstructed via cache side effect simd register used cryptographic computation also increasingly simple operation copying memory argue lazy fpu context switching dangerous optimization need turned operating system chance run affected processor
ComputerScience,occlum secure efficient multitasking inside single enclave intel sgx,intel software guard extension sgx enables userlevel code create private memory region called enclave whose code data protected cpu software hardware attack outside enclave recent work introduces library operating system liboses sgx legacy application run inside enclave even modification virtually nontrivial application demand multiple process essential liboses support multitasking however none existing sgx liboses support multitasking securely efficiently paper present occlum system enables secure efficient multitasking sgx implement libos process sfiisolated process sip sfi software instrumentation technique sandboxing untrusted module called domain design novel sfi scheme named mpxbased multidomain sfi mmdsfi leverage mmdsfi enforce isolation sip also design independent verifier ensure security guarantee mmdsfi sip safely sharing single address space enclave libos implement multitasking efficiently occlum libos outperforms stateoftheart sgx libos multitaskingheavy workload microbenchmarks application benchmark
ComputerScience,way around umip descriptortable exiting via tsxbased sidechannel attack,nowadays operating system numerous protection mechanism prevent limit usermode application access kernel internal information regularly carried softwarebased defense address space layout randomization aslr kernel aslr kaslr play pronounced role security sandboxed application webbrowser considered armed arbitrary write access kernel memory protection bypassed attacker could find suitable write order get elevation privilege maliciously execute code ring paper introduce reliable method based transactional synchronization extension tsx sidechannel attack reveal address global descriptor table gdt interrupt descriptor table idt indicate detecting address attack could executed sidestep intel usermode instruction prevention umip hypervisorbased mitigation consequently neutralized introduced attack successfully performed recent patch meltdown spectre moreover implementation proposed attack different platform including latest release microsoft window linux mac osx latest th generation intel processor show attack independent operating system implementation demonstrate combination method callgate mechanism available modern processor chain attack eventually lead full system compromise despite limitation supersecure sandboxed environment presence window proprietary virtualization based security vbs finally suggest softwarebased mitigation avoid attack acceptable cost
ComputerScience,new mrambased process inmemory accelerator efficient neural network training floating point precision,excellent performance modern deep neural network dnns come often prohibitive training cost limiting rapid development dnn innovation raising various environmental concern reduce dominant data movement cost training process inmemory pim emerged promising solution alleviates need access dnn weight however stateoftheart pim dnn training accelerator employ either analogmixed signal computing limited precision digital computing based memory technology support limited logic function thus requires complicated procedure realize floating point computation paper propose spin orbit torque magnetic random access memory sotmram based digital pim accelerator support floating point precision specifically new accelerator feature innovative sotmram cell full addition design floating point computation experiment result show proposed sotmram pim based dnn training accelerator achieve time time time improvement term energy latency area respectively compared stateoftheart pim based dnn training accelerator
ComputerScience,reactive nan repair applying approximate memory numerical application,application ai hpc field require much memory capacity amount energy consumed main memory server machine ever increasing energy consumption main memory greatly reduced applying approximate computing exchange increased bit error rate ai hpc application extent robust bit error small numerical error amortized iterative nature however single occurrence nan due bitflips corrupts whole calculation result issue fixing every bitflip using ecc incurs much overhead bit error rate much higher normal environment propose lowoverhead method fix nan approximate computing applied main memory main idea reactively repair nan leaving nonfatal numerical error asis reduce overhead implemented prototype leveraging floatingpoint exception cpu preliminary evaluation showed method incurs negligible overhead
ComputerScience,measuring independence datasets,data stream model represents setting approximating pairwise k wise independence sublinear memory considerable importance streaming model joint distribution given stream k tuples goal testing correlation among component measured entire stream streaming model indyk mcgregor soda recently gave exciting new result measuring pairwise independence indyk mcgregor method provide log n approximation statistical distance joint product distribution streaming model indyk mcgregor leave main open question problem improving log n approximation statistical distance metric paper solve main open problem posed indyk mcgregor statistical distance pairwise independence extend result constant k particular present algorithm computes epsilon delta approximation statistical distance joint product distribution defined stream k tuples algorithm requires epsilon log nmover delta k memory single pas data stream
ComputerScience,index index optimizing exact maximum inner product search,exact maximum inner product search mips important task widely pertinent recommender system highdimensional similarity search bruteforce approach solving exact mips computationally expensive thus spurring recent development novel index pruning technique task paper show hardwareefficient bruteforce approach blocked matrix multiply bmm outperform stateoftheart mips solver order magnitude input paper also present novel mips solution maximus take advantage hardware efficiency pruning search space like bmm maximus faster solver order magnitude input since single solution offer best runtime performance input introduce new datadependent optimizer optimus selects online minimal overhead best mips solver given input together optimus maximus outperform stateoftheart mips solver time average time widely studied mips datasets
ComputerScience,pigeonring principle faster thresholded similarity search,pigeonhole principle state n item contained box least one box n item utilized solve many data management problem especially thresholded similarity search despite many pigeonhole principlebased solution proposed last decade condition stated principle weak constrains number item single box organizing box ring propose new principle called pigeonring principle constrains number item multiple box yield stronger condition utilize new principle focus problem defined form identifying data object whose similarity distance query constrained threshold many solution problem utilize pigeonhole principle find candidate satisfy filtering condition new principle stronger filtering condition established show pigeonhole principle special case new principle suggests pigeonhole principlebased solution possible accelerated new principle universal filtering framework introduced encompass solution problem based new principle besides discus quickly find candidate specified new principle implementation requires minor modification top existing pigeonhole principlebased algorithm experimental result real datasets demonstrate applicability new principle well superior performance algorithm based new principle
ComputerScience,hybrid neuro wavelet predictor qos control stability,distributed system properly react peak request adaptation activity would benefit estimation amount request paper proposes solution produce shortterm forecast based data characterising user behaviour online service use emph wavelet analysis providing compression denoising observed time series amount past user request emph recurrent neural network trained observed data designed provide welltimed estimation future request said ensemble ability predict amount future user request root mean squared error thanks prediction advance resource provision performed duration request peak right amount resource hence avoiding overprovisioning associated cost moreover reliable provision let user enjoy level availability service unaffected load variation
ComputerScience,tale oneway function,existence oneway function arguably important problem computer theory article discus refines number concept relevant problem instance give first combinatorial complete owf ie function oneway function surprisingly many subtlety basic definition subtlety discussed hinted literature overlooked unified approach attempted
ComputerScience,proceeding third workshop membrane computing biologically inspired process calculus,volume contains accepted paper third workshop membrane computing biologically inspired process calculus held bologna september paper devoted membrane computing biologically inspired process calculus well related formalism paper volume selected programme committee due quality relevance defined exciting programme highlighting interesting problem stimulating search novel way describing related biological phenomenon addition invited talk given luca cardelli spatial process algebra developmental biology membrane system introduced class distributed parallel computing device inspired observation biological system complex hierarchical structure flow material information underlies functioning emphasis computational property model make use automaton language complexity theoretic tool hand certain calculus mobile ambients brane calculus work similar notion compartment membrane calculus used model analyze various biological system workshop membrane computing biologically inspired process calculus brings together researcher working field present recent work discus new idea concerning formalism property relationship
ComputerScience,robustness analysis battery supported cyberphysical system,paper establishes novel analytical approach quantify robustness scheduling battery management battery supported cyberphysical system dynamic schedulability test introduced determine whether task schedulable within finite time window test used measure robustness realtime scheduling algorithm evaluating strength computing time perturbation break schedulability runtime robustness battery management quantified analytically adaptive threshold state charge adaptive threshold significantly reduces false alarm rate battery management algorithm decide battery need replaced
ComputerScience,beyond markov chain towards adaptive memristor networkbased music generation,undertook study use memristor network music generation making use memristor memory go beyond markov hypothesis seed transition matrix created populated using memristor equation shown generate musical melody change style time result feedback transition matrix spiking property simple memristor network demonstrated discussed reference application music making limitation simulating composing memristor network von neumann hardware discussed hardware solution based physical memristor property presented
ComputerScience,distributed runtime verification aggregate computing,runtime verification computing analysis paradigm based observing system runtime check expected behaviour mean monitor generated formal specification distributed runtime verification runtime verification connection distributed system comprises monitoring distributed system using distributed system monitoring aggregate computing programming paradigm based reference computing machine aggregate collection device cooperatively carry computational process detail behaviour position number device largely abstracted away replaced spacefilling computational environment position paper argue mean simple example aggregate computing particularly well suited implementing distributed monitor aim foster research generate aggregate computing monitor suitable formal specification
ComputerScience,mutual search,introduce search problem called mutual search k agent arbitrarily distributed n site required locate one another posing query form anybody site ask least number query necessary sufficient case two agent using deterministic protocol obtain following worstcase result oblivious setting preplanned query executed saving query required sufficient nonoblivious setting exploit paradigm news also news obtain significant saving synchronous case query suffice query required asynchronous case query suffice fortiori query required sqrt n agent using deterministic protocol le n query suffice simple randomized protocol two agent worstcase expected query randomized protocol require least worstcase expected query graphtheoretic framework formulate expressing analyzing algorithm problem may independent interest
ComputerScience,get workload order game theoretic prioritization database auditing,enhancing privacy protection database increasing amount detailed personal data stored processed multiple mechanism developed audit logging alert trigger notify administrator suspicious activity however two main limitation common volume alert often substantially greater capability resourceconstrained organization strategic attacker may disguise action carefully choosing record touch making incompetent statistical detection model solving introduce novel approach database auditing explicitly account adversarial behavior prioritizing order type alert investigated providing upper bound much resource allocate type model interaction database auditor potential attacker stackelberg game auditor chooses auditing policy attacker choose record target corresponding approach combining linear programming column generation heuristic search proposed derive auditing policy testing policysearching performance publicly available credit card application dataset adopted show method produce highquality mixed strategy database audit policy general approach significantly outperforms nongametheoretic baseline
ComputerScience,generalized lminverse weighted moorepenrose inverse,recursive method computing generalized lminverse constant rectangular matrix augmented column vector proposed udwadia phohomsiri corresponding algorithm sequential determination generalized lminverse established present paper prove introduced algorithm computing generalized lminverse algorithm computation weighted moorepenrose inverse developed wang chen equivalent algorithm algorithm implemented present paper using package mathematica several rational test matrix randomly generated constant matrix tested cpu time compared discussed
ComputerScience,design implementation distributed modular audio recognition framework requirement specification design document,present requirement design specification opensource distributed modular audio recognition framework dmarf distributed extension marf distributed version aggregate number distributed technology eg java rmi corba web service pluggable modular model along provision advanced distributed system algorithm outline associated challenge incurred design implementation well overall specification project advantage limitation
ComputerScience,approximation algorithm computing shortest path weighted domain,present first polynomial time approximation algorithm computing shortest path weighted threedimensional domain given polyhedral domain consisting n tetrahedron positive weight real number epsin algorithm construct path fixed source vertex vertex whose cost time cost weighted shortest path c frac n eps logfrac n eps eps time c geometric parameter related aspect ratio tetrahedron efficiency proposed algorithm based indepth study local behavior geodesic path additive voronoi diagram weighted threedimensional domain independent interest paper extends result aleksandrov maheshwari sack jacm three dimension
ComputerScience,enhancing structural performance additively manufactured object,ability accurately quantify performance additively manufactured product important widespread industry adoption design required satisfy geometrical constraint satisfy structural constraint dictated intended function cost effective compared traditional manufacturing method optimization technique offer design aid creating costeffective structure meet prescribed structural objective fundamental problem existing approach lie difficulty quantify structural performance unique design lead new set analysis determine structural robustness analysis costly due complexity inuse force experienced structure work develops computationally tractable method tailored maximize structural performance product geometry preserving build orientation optimization method well datadriven shape optimization approach structural design presented proposed method greatly enhance value technology taking advantage design space enabled broad class problem involving complex inuse load
ComputerScience,planetscale human mobility measurement,research design construction mobile system algorithm requires access largescale mobility data unfortunately wireless mobile research community lack data instance largest available human contact trace contain node sparse connectivity limited experimental logistics paper pose challenge community collect mobility data billion human participant reassert importance largescale datasets communication network design claim could impact fundamental study academic discipline effect argue planetscale mobility measurement help save world example understanding largescale human mobility track model contain spread epidemic various kind
ComputerScience,mizar mizar,present mizar anniversary develop aiatp system second real time machine automatically prof theorem latest official version mizar mathematical library mml considerable improvement previous performance large theory aiatp method measured whole mml achieve large suite aiatp method employed developed implement useful method efficiently scale formula mml reduces training time corpus second allowing simple practical deployment method online automated reasoning service mizar user mizar
ComputerScience,hol hammer online atp service hol light,hol hammer online aiatp service formal computerunderstandable mathematics encoded hol light system service allows user upload automatically process arbitrary formal development project based hol light attack arbitrary conjecture use concept defined uploaded project service us several automated reasoning system combined several premise selection method trained project proof project readily available server query answering include recent version flyspeck multivariate analysis complex analysis library service run server currently employing parallel task aiatp combination decision procedure contribute overall performance system also available local installation interested user customize proof development emacs interface allowing parallel asynchronous query service also provided overall structure service outlined problem arise solution discussed initial account using system given
ComputerScience,estimation english nonenglish language use www,world wide web grown big anarchic fashion difficult describe one evident intrinsic characteristic world wide web multilinguality present technique estimating size languagespecific corpus given frequency commonly occurring word corpus apply technique estimating number word available web browser given language comparing data data calculate growth number european language web expected nonenglish language growing faster pace english though position english still dominant
ComputerScience,content based image indexing retrieval,paper present efficient content based image retrieval system employ color texture shape information image facilitate retrieval process efficient feature extraction extract color texture shape feature image automatically using edge detection widely used signal processing image compression facilitated speedy retrieval implement antipoletree algorithm indexing image
ComputerScience,schwerdtfegerfillmorespringercnops construction implemented ginac,paper present implementation schwerdtfegerfillmorespringercnops construction sfscc along illustration usage sfscc linearises linearfraction action moebius group rn clear advantage several theoretical applied field including engineering implementation based clifford algebra capacity ginac computer algebra system http wwwginacde described core realisation sfscc done arbitrary dimension rn metric given arbitrary bilinear form also present subclass two dimensional cycle ie circle parabola hyperbola add specific routine including visualisation postscript file metapost http wwwtugorgmetaposthtml asymptote http asymptotesourceforgenet package software backbone many result published use application demonstration library ported various level required change ca clifford algebra capability similar ginac iso image live debian dvd attached paper auxiliary file copy stored google drive well
ComputerScience,triangular decomposition semialgebraic system,regular chain triangular decomposition fundamental welldeveloped tool describing complex solution polynomial system paper proposes adaptation tool focusing solution real analogue semialgebraic system show system decomposed finitely many em regular semialgebraic system propose two specification decomposition present corresponding algorithm assumption one type decomposition computed singly exponential time wrt number variable implement algorithm experimental result illustrate effectiveness
ComputerScience,shape curve rational polar coordinate,paper provide computational approach shape curve rational polar coordinate ie defined mean parametrization r theta r theta rational function study includes theoretical aspect shape curve algorithmic result eventually lead algorithm plotting interesting part curve ie part showing main geometrical feature theoretical side prove curve exception line circle algebraic cartesian coordinate characterize existence infinitely many selfintersections connect certain phenomenon possible algebraic world namely existence limit circle limit point spiral branch practical side provide algorithm implemented computer algebra system maple visualize kind curve implementation make use improves aspect command polarplot currently available maple plotting curve polar form
ComputerScience,extension moebius lie geometry conformal ensemble cycle implementation ginac library,propose consider ensemble cycle quadric interconnected conformalinvariant geometric relation eg orthogonal tangent etc new object extended moebius lie geometry recently demonstrated several related paper ensemble cycle naturally parameterise many conformallyinvariant object eg loxodrome continued fraction paper describes method reduces collection conformally invariant geometric relation system linear equation may accompanied one fixed quadratic relation show usefulness method implemented c library operates numeric symbolic data cycle space arbitrary dimensionality metric signature numeric calculation done exact approximate arithmetic two threedimensional case illustration animation produced interactive python wrapper library provided well
ComputerScience,stabilizing maximal independent set unidirectional network hard,distributed algorithm selfstabilizing fault attack hit system place arbitrary global state system recovers catastrophic situation without external intervention finite time paper consider problem constructing selfstabilizingly emph maximal independent set uniform unidirectional network arbitrary shape negative side present evidence uniform network emph deterministic selfstabilization problem emph impossible also emph silence property emph ie communication fixed point every execution impossible guarantee either deterministic probabilistic variant protocol positive side present deterministic protocol network arbitrary unidirectional network unique identifier exhibit polynomial space time complexity asynchronous scheduling complement study probabilistic protocol uniform case first probabilistic protocol requires infinite memory cope asynchronous scheduling second probabilistic protocol polynomial space complexity handle synchronous scheduling probabilistic solution expected polynomial time complexity
ComputerScience,network community detection review visual survey,community structure important area research received considerable attention scientific community despite importance one key problem locating information community detection diverse spread related article across various discipline best knowledge current comprehensive review recent literature us scientometric analysis using complex network analysis covering relevant article web science wos present visual survey key literature using citespace idea identify emerging trend besides using network technique examine evolution domain towards end identify influential central well active node using scientometric analysis examine author key article cited reference core subject category key journal institution well country exploration scientometric literature domain reveals yong wang pivot node highest centrality additionally observed mark newman highly cited author network also identified journal review modern physic strongest citation burst term cited document article andrea lancichinetti highest centrality score also discovered origin key publication domain united state whereas scotland strongest longest citation burst additionally found category computer science engineering lead category based frequency centrality respectively
ComputerScience,efficiency decentralized file storage personal information management system,paper present architecture based distributed ledger technology dlts decentralized file storage dfs system support use personal information management system pims dlt dfs used manage data sensed mobile user equipped device sensing capability dlts guarantee immutability traceability verifiability reference personal data stored dfs fact inclusion data digest dlt make possible obtain unalterable reference tamperproof log remaining compliant regulation personal data ie gdpr provide experimental evaluation feasibility use dfs three different scenario studied proprietary ipfs approach dedicated node interfacing data producer ii public ipfs service iii sia skynet result show proper configuration system infrastructure viable build decentralized personal data storage pd
ComputerScience,user support combinator logic synthesizer framework,usability crucial adoption software development technology especially true development stage build process fail software yet complete incompletely modified present early work aim improve usability combinatory logic synthesizer cl framework especially stage cl publicly available typebased development tool automatic composition software component userspecified repository provides implementation type inhabitation algorithm combinatory logic intersection type fully integrated scala programming language specifically focus building webbased ide make potentially incomplete erroneous input specification decision algorithm understandable nonexperts main aspect providing graphical representation illustrating stepwise search process algorithm also provide detailed discussion possible future work improve understandability representation
ComputerScience,real number data science chaos fit dataset single parameter,show dataset modality timeseries image sound approximated wellbehaved continuous differentiable scalar function single realvalued parameter building upon elementary concept chaos theory adopt pedagogical approach demonstrating adjust parameter order achieve arbitrary precision fit sample data targeting audience data scientist taste curious unusual result presented expand previous similar observation regarding expressiveness power generalization machine learning model
ComputerScience,towards neuralguided program synthesis linear temporal logic specification,synthesizing program realizes logical specification classical problem computer science examine particular type program synthesis objective synthesize strategy reacts potentially adversarial environment ensuring execution satisfy linear temporal logic ltl specification unfortunately exact method solve socalled ltl synthesis via logical inference scale work cast ltl synthesis optimization problem employ neural network learn qfunction used guide search construct program subsequently verified correctness method unique combining search deep learning realize ltl synthesis experiment learned qfunction provides effective guidance synthesis problem relatively small specification
ComputerScience,fast integer multiplication using generalized fermat prime,almost year sch nhagestrassen algorithm fastest algorithm known multiplying integer time complexity n time log n time log log n multiplying nbit input f u rer proved exists k algorithm performing operation n time log n time k log n recent work harvey van der hoeven lecerf showed complexity estimate improved order get k conjecturally k using alternative algorithm relies arithmetic modulo generalized fermat prime obtain conjecturally result k via careful complexity analysis deterministic multitape turing model
ComputerScience,improved method finding optimal formula bilinear map finite field,barbulescu detrey estibals zimmermann proposed new framework exhaustively search optimal formula evaluating bilinear map strassen karatsuba formula main contribution work new criterion aggressively prune useless branch exhaustive search thus leading computation new optimal formula particular short product modulo x circulant product modulo x moreover able prove essentially one optimal decomposition product x x matrix action group automorphisms
ComputerScience,effect foraging personalized contentbased image recommendation,major challenge recommender system help user locating interesting item personalized recommender system become popular attempt predetermine need user provide recommendation personalize navigation however study addressed question drive user attention specific content within collection influence selection interesting item end employ lens information foraging theory ift image recommendation demonstrate user could utilize visual bookmark locate interesting image investigate personalized contentbased image recommendation system understand affect user attention reinforcing visual attention cue based ift find visual bookmark cue lead stronger scent recommended image collection evaluation based pinterest image collection
ComputerScience,ordered exploiting implicit user tag order preference personalized image tagging,make person pick certain tag others tagging image order person present tag given image follow implicit bias personal bias used improve existing automated image tagging system show tag ordering largely overlooked image tagging community important cue understanding user tagging behavior used improve autotagging system inspired assumption people order tag propose new way measuring tag preference also propose new personalized tagging objective function explicitly considers user preferred tag ordering also provide partially greedy algorithm produce good solution new objective certain condition produce optimal solution validate method subset flickr image span user tag image experiment show exploiting personalized tag order improves average performance stateofart approach perimage peruser base
ComputerScience,usage analytic hierarchy process steganographic insert detection image,article present method steganography detection formed replacing least significant bit lsb detection performed dividing image layer making analysis zerolayer adjacent bit every bit firstlayer secondlayer analyzed hierarchy analysis method used making decision current bit changed weighting coefficient part analytic hierarchy process formed value bit matrix corrupted pixel generated visualization matrix corrupted pixel allows determine size location presence embedded message computer experiment performed message embedded bounded rectangular area image method demonstrated efficiency even low filling container le widespread statistical method unable detect steganographic insert location size embedded message determined error exceeding five pixel
ComputerScience,domainspecific compiler linear algebra operation,present prototypical linear algebra compiler automatically exploit domainspecific knowledge generate highperformance algorithm input compiler target equation together knowledge structure problem property operand output variety highperformance algorithm corresponding source code solve target equation approach consists decomposition input equation sequence librarysupported kernel since general decomposition unique compiler return one number algorithm potential compiler shown mean application challenging equation arising within genomewide association study result compiler produce multiple best algorithm outperform best existing library
ComputerScience,automatic differentiation using constraint handling rule prolog,automatic differentiation technique allows programmer define numerical computation via composition broad range numeric computational primitive underlying system support computation partial derivative result respect input without making finite difference approximation without manipulating large symbolic expression representing computation note describes novel approach reverse mode automatic differentiation using constraint logic programmming specifically constraint handling rule chr library swi prolog resulting small line code implementation applied differentiationbased implementation insideoutside algorithm parameter learning probabilistic grammar chr based implementation outperformed two wellknown framework optimising differentiable function theano tensorflow large margin
ComputerScience,boundedness conjunctive regular path query,study boundedness problem union conjunctive regular path query inverse problem given checking whether equivalent union conjunctive query ucq show problem expspacecomplete thus coinciding complexity containment corollary bounded equivalent ucq tripleexponential size fact show bound optimal also study better behaved class namely acyclic bounded thickness strongly connected ucrpqs whose boundedness problem respectively pspacecomplete complete upper bound exploit result limitedness distance automaton particular extending model alternation twowayness may independent interest
ComputerScience,static detection do vulnerability program use regular expression extended version,algorithmic complexity attack malicious party take advantage worstcase behavior algorithm cause denialofservice prominent algorithmic complexity attack regular expression denialofservice redos attacker exploit vulnerable regular expression providing carefullycrafted input string trigger worstcase behavior matching algorithm paper proposes technique automatically finding redos vulnerability program specifically approach automatically identifies vulnerable regular expression program determines whether evil input string matched vulnerable regular expression implemented proposed approach tool called rexploiter found exploitable security vulnerability java web application
ComputerScience,noncooperative algorithm selfassembly,show first nontrivial positive algorithmic result ie program whose output larger size model selfassembly far resisted many attempt formal analysis programming planar noncooperative variant winfree abstract tile assembly model model center several open problem conjecture last fifteen year first fully general result computational power proven recently soda result well exemplify intricate connection computation geometry occur selfassembly model tile stick existing assembly soon one side match existing assembly feature contrast general cooperative model required tile match emph several side order bind order describe algorithm also introduce generalization regular expression called baggins expression finally compare model automatatheoretic model
ComputerScience,gemmini agile systolic array generator enabling systematic evaluation deeplearning architecture,advance deep learning neural network resulted rapid development hardware accelerator support large majority asic accelerator however target single hardware design point accelerate main computational kernel deep neural network convolution matrix multiplication hand spectrum usecases neural network accelerator ranging edge device cloud present prime opportunity agile hardware design generator methodology present gemmini open source agile systolic array generator enabling systematic evaluation deeplearning architecture gemmini generates custom asic accelerator matrix multiplication based systolic array architecture complete additional function neural network inference gemmini run riscv isa integrated rocket chip systemonchip generator ecosystem including rocket inorder core boom outoforder core elaborate design space exploration case study work demonstrates selection process various parameter usecase inference edge device selected design point achieve two three order magnitude speedup deep neural network inference compared baseline execution host processor gemminigenerated accelerator used fabrication test systemsonchip tsmc intel process technology
ComputerScience,mithril mining sporadic association cache prefetching,growing pressure cloud application scalability accentuated storage performance critical bottle neck although cache replacement algorithm extensively studied cache prefetching reducing latency retrieving item actually requested remains underexplored area existing approach historybased prefetching particular provide benefit real system resource cost propose mithril prefetching layer efficiently exploit historical pattern cache request association mithril inspired sporadic association rule mining relies timestamps request evaluation blockstorage trace show mithril effective giving average hit ratio increase lru probability graph hit ratio gain amp reasonable cost show mithril supplement cache replacement algorithm readily integrated existing system furthermore demonstrate improvement come mithril able capture midfrequency block
ComputerScience,characterization sparc system,technical report cover set experiment sparc system comparing two similar amd intel system key characteristic maximum integer floating point arithmetic throughput measured well memory throughput showing scalability sparc system performance posix thread primitive characterized compared detail thread creation mutex synchronization scalability test fine grained multithreaded runtime performed showing problem atomic ca operation physically highly parallel system
ComputerScience,performance evaluation containerbased virtualization high performance computing environment,virtualization technology evolved along development computational environment since virtualization offered needed feature time isolation accountability resource allocation resource fair sharing novel processor technology bring commodity computer possibility emulate diverse environment wide range computational scenario run along processor evolution system developer created different virtualization mechanism new development enhanced performance previous virtualized environment recently operating systembased virtualization technology captured attention community abroad industry academy research important improvement performance area paper feature three containerbased operating system virtualization tool lxc docker singularity presented lxc docker singularity bare metal put test customized single node hplbenchmark mpibased application multi node testbed also disk io performance memory ram performance network bandwidth gpu performance tested co technology v bare metal preliminary result conclusion around presented discussed
ComputerScience,mirrored hybrid disk array organization scheduling reliability performance,basic mirroring bm classified raid level replicates data two disk thus doubling disk access bandwidth read request array bm pair balanced load due striping disk fails read load pair doubled result halving maximum attainable bandwidth review organization attain balanced load upon disk failure shown reliability analysis tend le reliable hybrid disk array store xored instead replicated data tend higher reliability mirrored disk incur higher overhead updating data read request response time improved processing higher priority writes since direct effect application response time shortest seek distance affinity based routing shorten seek time anticipatory arm placement place arm optimally minimize seek distance analysis normal degraded rebuild mode provided quantify performance compare reliability mirrored disk organization hybrid disk erasure coded disk array
ComputerScience,autonomous task dropping mechanism achieve robustness heterogeneous computing system,robustness distributed computing system defined ability maintain performance presence uncertain parameter uncertainty key problem heterogeneous even homogeneous distributed computing system perturbs system robustness notably performance system perturbed uncertainty task execution time arrival accordingly goal make system robust uncertainty considering task execution time random variable use probabilistic analysis develop autonomous proactive task dropping mechanism attain robustness goal specifically provide mathematical model identifies optimality task dropping decision system robustness maximized leverage mathematical model develop task dropping heuristic achieves system robustness within feasible time complexity although proposed model generic applied distributed system concentrate heterogeneous computing hc system higher degree exposure uncertainty homogeneous system experimental result demonstrate autonomous proactive dropping mechanism improve system robustness
ComputerScience,art cpupinning evaluating improving performance virtualization containerization platform,cloud provider offer variety execution platform form baremetal vm container however due pro con execution platform choosing appropriate platform specific cloudbased application become challenge solution architect possibility combine platform eg deploying container within vms offer new capacity make challenge even complicated however little study literature pro con deploying different application type various execution platform particular evaluation diverse hardware configuration different cpu provisioning method cpu pinning sufficiently studied literature work performance overhead container vm baremetal execution platform measured analyzed four category realworld application namely video processing parallel processing mpi web processing nosql respectively representing cpu intensive parallel processing two io intensive process analysis reveal set interesting sometimes counterintuitive finding used best practice solution architect efficiently deploy cloudbased application notable mention specific circumstance container impose higher overhead vms b container top vms mitigate overhead vms certain application c container large number core impose lower overhead core
ComputerScience,benchmarking graph data management processing system survey,development scalable representative widely adopted benchmark graph data system question answer sought decade conduct indepth study existing literature benchmark graph data management processing covering different benchmark developed last year categorize benchmark three area focusing benchmark graph processing system graph database benchmark bigdata benchmark graph processing workload systematic approach allows u identify multiple issue existing area including benchmark exist produce high workload scenario ii significant work done benchmarking graph stream processing well graph based machine learning iii benchmark tend use conventional metric despite new meaningful metric around year iv increasing number big data benchmark appear graph processing workload following observation conclude survey describing key challenge future research graph data system benchmarking
ComputerScience,automatic differentiation adjoint stencil loop,stencil loop common motif computation including convolutional neural network structuredmesh solver partial differential equation image processing stencil loop easy parallelise fast execution aided compiler library domainspecific language reversemode automatic differentiation also known algorithmic differentiation autodiff adjoint differentiation backpropagation sometimes used obtain gradient program contain stencil loop unfortunately conventional automatic differentiation result memory access pattern stencillike easily parallelisable paper present novel combination automatic differentiation loop transformation preserve structure memory access pattern stencil loop computing fully consistent derivative generated loop parallelised optimised performance way using tool original computation implemented new technique python tool perforad release paper along test case derived seismic imaging computational fluid dynamic application
ComputerScience,acceleration tensorproduct operation highorder finite element method,paper devoted gpu kernel optimization performance analysis three tensorproduct operator arising finite element method provide mathematical background operation implementation detail achieving closetothepeak performance operator requires extensive optimization operator property low arithmetic intensity tiered structure need store intermediate result inside kernel give guided overview optimization strategy present performance model allows u compare efficacy optimization empirically calibrated roofline
ComputerScience,mlos infrastructure automated software performance engineering,developing modern system software complex task combine business logic programming software performance engineering spe later experimental laborintensive activity focused optimizing system given hardware software workload hwswwl context today spe performed buildrelease phase specialized team cursed lack standardized automated tool significant repeated work hwswwl context change fragility induced onesizefitall tuning improvement one workload component may impact others net result despite costly investment system software often outside optimal operating point anecdotally leaving performance table recent development data science d hint opportunity combining d tooling methodology new developer experience transform practice spe paper present mlos mlpowered infrastructure methodology democratize automate software performance engineering mlos enables continuous instancelevel robust trackable system optimization mlos developed employed within microsoft optimize sql server performance early result indicated componentlevel optimization lead improvement customtuning specific hwswwl hinting significant opportunity however several research challenge remain require community involvement end process opensourcing mlos core infrastructure engaging academic institution create educational program around software mlos idea
ComputerScience,towards visual turing challenge,language visual understanding machine progress rapidly observing increasing interest holistic architecture tightly interlink modality joint learning inference process trend allowed community progress towards challenging open task refueled hope achieving old ai dream building machine could pas turing test open domain order steadily make progress towards goal realize quantifying performance becomes increasingly difficult therefore ask precisely define challenge evaluate different algorithm open task paper summarize discus challenge well try give answer appropriate option available literature exemplify solution recently presented dataset questionanswering task based realworld indoor image establishes visual turing challenge finally argue despite success unique groundtruth annotation likely step away carefully curated dataset rather rely social consensus main driving force create suitable benchmark providing coverage inherently ambiguous output space emerging challenge face order make quantifiable progress area
ComputerScience,digital social contract foundation egalitarian digital society,almost two century ago pierrejoseph proudhon proposed social contract voluntary agreement among free people foundation egalitarian society emerge emph digital social contract novel incarnation concept digital age voluntary agreement people specified undertaken fulfilled digital realm embodies notion codeislaw purest form digital social contract fact program code social contract programming language specifies digital action party social contract may take party contract entrusted equally task ensuring party abides contract party social contract identified via public key one type action party digital social contract may take cryptospeech act signing utterance private key sending party contract present formal definition digital social contract agent communicate asynchronously via cryptospeech act output agent input agent outline abstract design social contract programming language show via programming example key application area including social community simple sharingeconomy application egalitarian currency network democratic community governance expressed elegantly efficiently digital social contract
ComputerScience,gamification affect physical activity largescale analysis walking challenge mobile application,gamification represents effective way incentivize user behavior across number computing application however despite fact physical activity essential healthy lifestyle surprisingly little known gamification particular competition shape human physical activity study competition affect physical activity focus walking challenge mobile activity tracking application multiple user compete take step predefined number day synthesize finding series game app design implication particular analyze nearly physical activity competition period one year capturing person day activity tracking observe walking competition average user increase physical activity furthermore large increase activity men woman across age weight status even user previously fairly inactive also find composition participant greatly affect dynamic game particular highly unequal participant get matched competition suffers overall effect physical activity drop significantly furthermore competition equal mix men woman effective increasing level activity leverage insight develop statistical model predict whether competition particularly engaging significant accuracy model serve guideline help design engaging competition lead beneficial behavioral change
ComputerScience,visibly pushdown modular game,game recursive game graph used reason control flow sequential program recursion game recursive game graph natural notion strategy modular strategy ie strategy local module oblivious previous module invocation thus depend context invocation work study first time modular strategy respect winning condition expressed pushdown automaton show game undecidable general become decidable visibly pushdown automaton specification solution relies reduction modular game finitestate automaton winning condition known literature carefully characterize computational complexity considered decision problem particular show modular game universal buchi co buchi visibly pushdown winning condition exptimecomplete winning condition given caret nwtl temporal logic formula problem remains even simple fragment logic contribution present different solution modular game finitestate automaton winning condition run faster known solution large specification many exit
ComputerScience,universal tree grow inside separating automaton quasipolynomial lower bound parity game,several distinct technique proposed design quasipolynomial algorithm solving parity game since breakthrough result calude jain khoussainov li stephan play summary progress measure register game argue technique viewed instance separation approach solving parity game key technical component constructing explicitly implicitly automaton separate language word encoding play decisively either two player main technical result quasipolynomial lower bound size separating automaton nearly match current best upper bound form barrier existing approach must overcome ongoing quest polynomialtime algorithm solving parity game key fundamental concept introduce study universal ordered tree technical highlight quasipolynomial lower bound size universal ordered tree proof every separating safety automaton universal tree hidden state space
ComputerScience,constructive semantic characterization aggregate asp,technical note describes monotone continuous fixpoint operator compute answer set program aggregate fixpoint operator relies notion aggregate solution certain condition operator behaves identically threevalued immediate consequence operator phi aggr p aggregate program independently proposed pelov et al operator allows u closely tie computational complexity answer set checking answer set existence problem cost checking solution aggregate program finally relate semantics described operator proposal logic programming aggregate appear theory practice logic programming tplp
ComputerScience,smart induction isabellehol system description,proof assistant offer tactic facilitate inductive proof however still requires human ingenuity decide argument pas induction tactic automate process present smartinduct isabellehol given inductive problem problem domain smartinduct list promising argument induct tactic without relying search evaluation demonstrated smartinduct produce valuable recommendation across problem domain
ComputerScience,imandra automated reasoning system system description,describe imandra modern computational logic theorem prover designed bridge gap decision procedure smt semiautomatic inductive provers boyermoore family like interactive proof assistant typed higherorder logic imandra logic computational based pure subset ocaml function terminating restriction type higherorder function allow conjecture translated multisorted firstorder logic theory including arithmetic datatypes imandra novel feature supporting largescale industrial application including seamless integration bounded unbounded verification firstclass computable counterexample efficiently executable model cloudnative architecture supporting live multiuser collaboration core reasoning mechanism imandra semicomplete procedure finding model formula logic mentioned centered around lazy expansion recursive function ii inductive waterfall simplifier lift many boyermoore idea typed higherorder setting mechanism tightly integrated subject many form user control imandra user interface include interactive toplevel jupyter notebook asynchronous documentbased verification spirit isabelle prover ide v code
ComputerScience,case study task scheduling methodology high speed computing system,high speed computing meet ever increasing realtime computational demand leveraging flexibility parallelism flexibility achieved computing platform designed heterogeneous resource support multifarious task application task scheduling brings parallel processing efficient task scheduling critical obtain optimized performance heterogeneous computing system hcs paper brought review various application scheduling model provide parallelism homogeneous heterogeneous computing system paper made review various scheduling methodology targeted high speed computing system also prepared summary chart comparative study scheduling methodology high speed computing system carried based attribute platform application well attribute execution time nature task task handling capability type host computing platform finally summary chart prepared demonstrates need developing scheduling methodology heterogeneous reconfigurable computing system hrcs emerging high speed computing platform real time application
ComputerScience,eigenrec generalizing puresvd effective efficient topn recommendation,introduce eigenrec versatile efficient latentfactor framework topn recommendation includes wellknown puresvd algorithm special case eigenrec build low dimensional model interitem proximity matrix combine similarity component scaling operator designed control influence prior item popularity final model seeing puresvd within framework provides intuition inner working expose inherent limitation also pave path towards painlessly improving recommendation performance comprehensive set experiment movielens yahoo datasets based widely applied performance metric indicate eigenrec outperforms several stateoftheart algorithm term standard longtail recommendation accuracy exhibiting low susceptibility sparsity even extreme manifestation coldstart problem time eigenrec attractive computational profile apply readily largescale recommendation setting
ComputerScience,task tuning task assignment privacypreserving crowdsourcing platform,specialized worker profile crowdsourcing platform may contain large amount identifying possibly sensitive personal information eg personal preference skill available slot available device raising strong privacy concern led design privacypreserving crowdsourcing platform aim enabling efficient crowdsourcing process providing strong privacy guarantee even platform fully trusted paper propose two contribution first propose pkd algorithm goal supporting large variety aggregate usage worker profile within privacypreserving crowdsourcing platform pkd algorithm combine together homomorphic encryption differential privacy computing perturbed partition multidimensional space skill actual population worker perturbed count worker per partition second propose benefit recent progress private information retrieval technique order design solution task assignment private affordable perform indepth study problem using pir technique proposing task worker show nphard come pkd pir packing heuristic group task together according partitioning output pkd algorithm nutshell design pkd algorithm pkd pir packing heuristic prove formally security honestbutcurious worker andor platform analyze complexity demonstrate quality affordability reallife scenario extensive experimental evaluation performed synthetic realistic datasets
ComputerScience,solaris system resource manager ever wanted unfair advantage ca nt,traditional unix timeshare scheduler attempt fair user employing roundrobin style algorithm allocating cpu time unfortunately loophole exists whereby scheduler biased favor greedy user running many short cputime process loophole defect intrinsic property roundrobin scheduler ensures responsiveness short cpu demand associated multiple interactive user new generation unix system resource management software constrains scheduler equitable user regardless number process may running fairshare scheduling draw concept pro rating resource share across user group dynamically adjusting cpu usage meet share proportion simple notion statically allocating share however belies potential consequence performance measured user response time service level target demonstrate point modeling several simple share allocation scenario analyzing corresponding performance effect brief comparison commercial system resource management implementation hp ibm sun also given
ComputerScience,unix resource manager capacity planning resource issue,latest implementation commercial unix offer mainframe style capacity management enterprise server include aix workload manager wlm hpux process resource manager prm solaris resource manager srm well sgi compaq ability manage server capacity achieved making significant modification standard unix operating system process inherently tied specific user user turn granted certain fraction system resource resource usage monitored compared user grant ensure assigned entitlement constraint met paper begin clearing confusion surrounded motivation terminology behind new technology common theme across commercial implementation introduction fairshare scheduler reviewing potential performance pitfall present capacity planning guideline migrating automated unix resource management
ComputerScience,sequential file programming pattern performance net,programming pattern sequential file access net framework described performance measured default behavior provides excellent performance single disk mbps reading writing using large request size file preallocation possible quantifiable benefit one considers disk array net unbuffered io delivers mbps array buffered io delivers performance consequently highperformance file database utility still forced use unbuffered io maximum sequential performance report accompanied downloadable source code demonstrates concept code used obtain measurement
ComputerScience,software performance analysis,key speeding application often understanding elapsed time spent document review depth full array performance analysis tool technique available linux task traditional tool like gcov gprof advanced tool still development like oprofile linux trace toolkit focus underlying data collection processing algorithm overhead precision cosmetic detail graphical user interface frontends
ComputerScience,disk partition volume raid performance linux operating system,block device computer operating system typically correspond disk disk partition used store file filesystem disk real virtual device adhere block accessible stream byte block device model file remote device even ram may used virtual disk article examines several common combination block device layer used virtual disk linux operating system disk partition loopback file software raid logical volume manager network block device measure relative performance using different filesystems reiserfs jfs xfs nfs
ComputerScience,simulation de trace réelles e disque de pc,window operating system existing io benchmarking tool allow developer efficiently define file access strategy according application constraint essentially due fact existing tool allow restricted set io workload generally correspond target application cope problem designed implemented precise io simulator allowing simulate whatever real io trace given defined architecture file disk cache strategy interaction detailed storage system architecture implemented simulation result different workload architecture show high degree precision fact mean error rate compared real measure maximum global throughput
ComputerScience,scaling turbo boost core,intel core processor code named nehalem provides feature named turbo boost opportunistically varies frequency processor core frequency core determined core temperature number active core estimated power consumption estimated current consumption operating system frequency scaling request chip multiprocessor cmp small number physical core small set performance state deciding turbo boost frequency use given core might difficult however know complexity decision making process context large number core scaling predicted researcher field
ComputerScience,user mode memory page allocation silver bullet memory allocation,paper proposes novel solution elimination paged virtual memory partial outsourcing memory page allocation manipulation operating system kernel individual process user space user mode page allocator allows application direct bare metal access page mapping used hardware memory management unit mmu part overall address space user mode page allocator based emulation mmap abstraction layer dlmalloc benchmarked traditional kernel mode implemented mmap series synthetic montecarlo real world application setting given superb synthetic positive real world result profiling conducted paper proposes proper operating system api support one could gain order higher performance keeping allocator performance invariant amount memory allocated freed ie performance improvement common use case rare simple easy implement api operating system structure change one gain silver bullet potential second one
ComputerScience,user mode memory page management old idea applied anew memory wall problem,often said one biggest limitation computer performance memory bandwidth ie memory wall problem position paper argue historical trend computing evolution growth available capacity exponential reduction access latency linear continue view wrong fact ought concentrating reducing whole system memory access latency wherever possible whole system mean ought look software unnecessarily wasteful memory bandwidth due legacy design decision end conduct feasibility study determine whether ought virtualise mmu application process direct access mmu page table memory allocated process managed exclusively process kernel find typical condition nearly scale invariant performance memory allocation size possible hundred megabyte memory allocated relocated swapped deallocated almost time kilobyte eg allocating quicker experimental allocator conventional allocator resizing block block faster find first time page access latency improved tenfold moreover kernel page fault handler never called lack cache pollution improves whole application memory access latency increasing performance finally try binary patching existing application use experimental allocation technique finding almost universal performance improvement without recompile application make better use new facility
ComputerScience,flashmon monitoring raw nand flash memory io request embedded linux,paper present flashmon version tool monitoring embedded linux nand flash memory io request designed embedded board based device containing raw flash chip flashmon kernel module stand flash monitor trace flash io placing kernel probe nand driver level allows tracing runtime main flash operation page read writes block erasure flashmon generic successfully tested three widely used flash file system ubifs yaffs several nand chip model moreover non intrusive controllable memory footprint exhibit low overhead traced system finally simple integrate used standalone module builtin function module existing kernel source monitoring flash memory operation allows better understanding existing flash management system studying analyzing behavior moreover useful development phase prototyping validating new solution
ComputerScience,benchmarking embedded linux flash file system,due attractive characteristic term performance weight power consumption nand flash memory became main non volatile memory nvm embedded system nvms also present specific characteristicsconstraints good asymmetric io performance limited lifetime writeerase granularity asymmetry etc peculiarity either managed hardware flash disk ssds sd card usb stick etc software raw embedded flash chip managed software flash algorithm structure implemented specific flash file system ffs paper present performance study widely used ffss embedded linux ubifs yaffs show particular behavior large performance disparity tested ffs operation mounting copying searching file tree compression etc
ComputerScience,study analysis macipad lab configuration,paper three virtualization mode vmware parallel boot camping trade testing hardware requirement main question among three suitable answer actually varies user user depends user need moreover necessary consider performance graphic efficiency reliability interoperability major scope order take final decision choosing one mode important run test cost lot term money complexity time consumption therefore order overcome trade research done online benchmarking anticipation final solution extracted comparing previously mentioned rigorous testing made introduced later document
ComputerScience,protecting realtime gpu kernel integrated cpugpu soc platform,integrated cpugpu architecture provides excellent acceleration capability data parallel application embedded platform meeting size weight power swap requirement however sharing main memory cpu application gpu kernel severely affect execution gpu kernel diminish performance gain provided gpu example nvidia tegra platform integrated cpugpu architecture noticed worst case scenario gpu kernel suffer much slowdown presence corunning memory intensive cpu application compared solo execution paper propose software mechanism call bwlock protect performance gpu kernel coscheduled memory intensive cpu application
ComputerScience,understanding taming ssd read performance variability hdfs case study,paper analyze influence lower layer file system o ssd hdfs ability extract maximum performance ssds read path uncover analyze three surprising performance slowdown induced lower layer result hdfs read throughput loss first intrinsic slowdown affect read every new file system extent variable amount time second temporal slowdown appears temporarily periodically workloadagnostic third permanent slowdown file individually permanently become slower period time analyze impact slowdown hdfs show significant throughput loss individually slowdown cause read throughput loss however effect cumulative slowdown happen concurrently read throughput drop much analyze mitigation technique show two three slowdown could addressed via increased io request parallelism lower layer unfortunately hdfs automatically adapt use additional parallelism result point need adaptability storage stack reason access pattern maximizes performance common case necessarily one mask performance fluctuation
ComputerScience,performance arm trustzone,trustzone technology available vast majority recent arm processor allows execution code inside socalled secure world effectively provides hardwareisolated area processor sensitive data code ie trusted execution environment tee optee framework provides collection toolchain opensource library secure kernel specifically geared develop application trustzone paper present indepth performance energywise study trustzone using optee framework including secure storage cost switching secure unsecure world using emulated hardware measurement
ComputerScience,splitfs reducing software overhead file system persistent memory,present splitfs file system persistent memory pm reduces software overhead significantly compared stateoftheart pm file system splitfs present novel split responsibility userspace library file system existing kernel pm file system userspace library file system handle data operation intercepting posix call memorymapping underlying file serving read overwrites using processor load store metadata operation handled kernel pm file system dax splitfs introduces new primitive termed relink efficiently support file appends atomic data operation splitfs provides three consistency mode different application choose without interfering splitfs reduces software overhead upto compared nova pm file system compared number microbenchmarks application leveldb keyvalue store running ycsb benchmark splitfs increase application performance compared dax nova providing similar consistency guarantee
ComputerScience,debian package usage profiler debian based system,embedded device today due cpu ram capability run various linux distribution case different general purpose distribution usually lighter specific need particular system project share problem associated adopting fully heavyweight debian based system like ubuntu embeddedautomotive platform provide solution optimize identify unusedredundant content system help developer reduce hefty general purpose distribution application specific distribution solution involves collecting usage data system noninvasive manner avoid drop performance suggest user redundant unused part system safely removed without impacting system functionality
ComputerScience,logic programming framework combinational circuit synthesis,logic programming language combinational circuit synthesis tool share common combinatorial search logic formula background paper attempt reconnect two field fresh look prolog encoding combinatorial object involved circuit synthesis benefiting prolog fast unification algorithm builtin backtracking mechanism efficiency search algorithm ensured using parallel bitstring operation together logic variable equality propagation mapping mechanism primary input leaf candidate leafdags implementing combinational circuit specification exhaustive expressiveness comparison various minimal library surprising firstrunner strict boolean inequality together constant function also turn small transistorcount implementation competitive nandonly noronly library practical outcome realistic circuit synthesizer implemented combine rewritingbased simplification circuit exhaustive leafdag circuit search keywords logic programming circuit design combinatorial object generation exact combinational circuit synthesis universal boolean logic library symbolic rewriting minimal transistorcount circuit synthesis
ComputerScience,coffee optimizing compiler finite element local assembly,numerical solution partial differential equation using finite element method one key application high performance computing local assembly characteristic operation entail execution problemspecific kernel numerically evaluate integral element discretized problem domain since domain size huge executing efficient kernel fundamental op timization however challenging issue even though affine loop nest generally present short trip count complexity mathematical expression make hard determine single unique sequence successful transformation therefore present design systematic evaluation cof fee domainspecific compiler local assembly kernel coffee manipulates abstract syntax tree generated highlevel domainspecific language pdes introducing domainaware composable optimization aimed improving instructionlevel parallelism especially simd vectorization register locality generates c code including vector intrinsics experiment using range finiteelement form increasing complexity show significant performance improvement achieved
ComputerScience,performance optimization parallelization parabolic equation solver computational ocean acoustic modern manycore computer,one opensource code widely used computational ocean acoustic provide good estimate underwater acoustic propagation paper propose performance optimization parallelization speed running utilized variety method enhance entire performance using multithreaded programming model exploit potential capability manycore node highperformance computing hpc system tuning compile option using efficient tuned mathematical library utilizing vectorization optimization instruction addition extended application singlefrequency calculation multifrequency calculation successfully using openmpmpi hybrid programming technique mainstream hpc platform detailed performance evaluation performed result showed proposed parallelization obtained good accelerated effect testing typical threedimensional mediumsized case supercomputer also showed tuned parallel version weakscalability speed calculation underwater sound field greatly improved strategy mentioned paper method used paper applicable similar computing model computational ocean acoustic also guideline performance enhancement scientific engineering application running modern manycorecomputing platform
ComputerScience,extreme scale fmmaccelerated boundary integral equation solver wave scattering,algorithmic architectureoriented optimization essential achieving performance worthy anticipated energyaustere exascale system paper present extreme scale fmmaccelerated boundary integral equation solver wave scattering us fmm matrixvector multiplication inside gmres iterative method fmm helmholtz kernel treat nontrivial singular nearfield integration point implement highly optimized kernel shared distributed memory targeting emerging intel extreme performance hpc architecture extract potential thread datalevel parallelism key helmholtz kernel fmm application code well optimized exploit simd unit intel skylake knight landing architecture provide different performance model tuning taskbased tree traversal implementation fmm develop optimal architecturespecific algorithm aware partitioning load balancing communication reducing mechanism scale compute node cray hardware core shared memory optimization achieve roughly peak single precision floating point performance skylake processor average peak single precision floating point performance knl number represent nearly speedup skylake knl respectively compared baseline scalar code distributed memory optimization hand report nearoptimal efficiency weak scalability study respect logarithmic communication complexity well theoretical scaling complexity fmm addition exhibit efficiency strong scaling compute excess billion dof fullscale cray supercomputer
ComputerScience,information conveyed certain event case clever widow fornicalia stobon oracle,short article look old logical puzzle solution proof discus interesting aspect concerning representation logic programming language like prolog also discus intriguing information theoretic aspect puzzle
ComputerScience,tarski influence computer science,influence alfred tarski computer science indirect significant number direction certain respect fundamental surveyed work tarski decision procedure algebra geometry method elimination quantifier semantics formal language modeltheoretic preservation theorem algebraic logic various connection computer science taken
ComputerScience,axiomatic tool versus constructive approach unconventional algorithm,paper analyze axiomatic issue unconventional computation methodological philosophical point view explain new model algorithm changed algorithmic universe making open allowing increased flexibility creativity however greater power new type algorithm also brought greater complexity algorithmic universe demanding new tool study analyze new powerful tool brought forth axiomatic theory algorithm automaton computation
ComputerScience,random bit complexity mobile robot scattering,consider problem scattering n robot two dimensional continuous space problem impossible solve deterministic manner solution must probabilistic investigate amount randomness number random bit used robot required achieve scattering first prove n log n random bit necessary scatter n robot setting also give sufficient condition scattering algorithm random bit optimal turn previous solution scattering satisfy condition hence proved random bit optimal scattering problem investigate time complexity scattering strong multiplicity detection available prove algorithm converge constant time general case log log n round random bit optimal scattering algorithm however present family scattering algorithm converge fast needed without using multiplicity detection also put forward specific protocol family random bit optimal n log n random bit used time optimal log log n round used improves time complexity previous result setting log n factor aside characterizing random bit complexity mobile robot scattering study also close time complexity gap without strong multiplicity detection time complexity achievable strong multiplicity detection available possible approach needed otherwise
ComputerScience,restructuring expression dag efficient parallelization,field robust geometric computation often necessary make exact decision based inexact floatingpoint arithmetic one common approach store computation history arithmetic expression dag reevaluate expression increasing precision exact decision made show exactdecisions number type based expression dag evaluated faster practice parallelization multiple core compare impact several restructuring method expression dag running time parallel environment
ComputerScience,neuroinspired theory joint humanswarm interaction,humanswarm interaction hsi active research challenge realm swarm robotics humanfactors engineering apply cognitive system engineering perspective introduce neuroinspired joint system theory hsi mindset defines prediction adaptive robust scalable hsi dynamic therefore potential inform humanswarm loop design
ComputerScience,non static statistical model implementation compressing virtually uncompressible data,give implementation statistical model successfully applied compressing sequence binary digit behavior close random
ComputerScience,visualization highdimensional scalar function using principal parameterizations,insightful visualization multidimensional scalar field particular parameter space key many field computational science engineering propose principal componentbased approach visualize field accurately reflects sensitivity input parameter method performs dimensionality reduction vast hilbert space formed possible partial function ie defined fixing one input parameter specific value projected lowdimensional parameterized manifold curve surface ensemble thereof mapping provides direct geometrical visual interpretation term sobol celebrated method variancebased sensitivity analysis furthermore contribute practical realization proposed method mean tensor decomposition enables accurate yet interactive integration multilinear principal component analysis highdimensional model
ComputerScience,achieving database insert per second using accumulo,apache accumulo database open source relaxed consistency database widely used government application accumulo designed deliver high performance unstructured data graph network data paper test performance accumulo using data benchmark dynamic distributed dimensional data model software used implement benchmark cluster running mit supercloud software stack peak performance database insert per second achieved larger highest previously published value database performance scale linearly number ingest client number database server data size performance achieved adapting several supercomputing technique application distributed array domain decomposition adaptive load balancing singleprogrammultipledata programming
ComputerScience,enhancing navigation wikipedia social tag,social tagging become interesting approach improve search navigation actual web since aggregate tag added different user resource collaborative way way result list weighted tag describing resource combined classical taxonomic classification system wikipedia social tag enhance document navigation search one hand social tag suggest alternative navigation way including pivotbrowsing popularitydriven navigation filtering hand provides new metadata sometimes uncovered document content substantially improve document search work inclusion interface add userdefined tag describing wikipedia article proposed way improve article navigation retrieval result prototype applying tag wikipedia proposed order evaluate effectiveness
ComputerScience,spatiotemporal context definition service adaptation prediction pervasive computing environment,pervasive system refers contextaware system sense context adapt behavior accordingly provide adaptable service proactive adaptation system allows changing service context based prediction however definition context still vague suitable prediction paper discus classify previous definition context present new definition allows pervasive system understand predict context analyze essential line fall within context definition propose scenario make clear approach
ComputerScience,parameterized verification system global synchronization guard,inspired distributed application use consensus agreement protocol global coordination define new computational model parameterized system based general global synchronization primitive allows global transition guard model generalizes many existing model literature including broadcast protocol guarded protocol show reachability property decidable system without guard give sufficient condition remain decidable presence guard furthermore investigate cutoff reachability property provide sufficient condition small cutoff number case inspired target application
ComputerScience,learnable programming block beyond,blocksbased programming become lingua franca introductory coding study found experience blocksbased programming help beginner learn traditional textbased language explore block environment improve learnability novice favoring recognition recall reducing cognitive load preventing error increased usability block programming led widespread adoption within introductory programming context across range age ongoing work explores reducing barrier programming supporting novice programmer expanding programming skill transitioning textual programming new block framework making easier access variety apis block environment opening door greater diversity programming domain supporting greater experimentation novice professional alike
ComputerScience,tracediff debugging unexpected code behavior using trace divergence,recent advance program synthesis offer mean automatically debug student submission generate personalized feedback massive programming classroom automatically generating feedback programming assignment key challenge designing pedagogically useful hint effective manual feedback given teacher analysis teacher hintgiving practice online q post establish three design guideline effective feedback design follow based guideline develop feedback system leverage program synthesis visualization technique system compare dynamic code execution incorrect fixed code highlight error lead difference behavior incorrect code trace diverges expected solution result study suggest system enables student detect fix bug caught student using another existing visual debugging tool
ComputerScience,collision detection agent multiagent pathfinding,recent work multiagent pathfinding problem mapf begun study agent motion complex example nonunit action duration kinematic constraint important aspect mapf collision detection many collision detection approach exist often suffer issue high computational cost causing false negative false positive detection practice issue result problem range inefficiency annoyance catastrophic main contribution technical report provide highlevel overview major category collision detection along method collision detection anticipatory collision avoidance agent computationally efficient highly accurate
ComputerScience,riot o pave way implementation highperformance mac protocol,implementing new highperformance mac protocol requires realtime feature able synchronize correctly different unrelated device feature highly desirable operating wireless sensor network wsn designed part internet thing iot unfortunately operating system commonly used domain provide feature hand baremetal development sacrifice portability well multitasking ability needed develop rich application useful domain internet thing describe paper helped solving issue contributing development port riot o microcontroller architecture widely used iotenabled mote riot o offer rich advanced realtime feature especially simultaneous use many hardware timer underlying platform microcontroller offer demonstrate effectiveness feature presenting new implementation riot o scosens efficient mac protocol us low processing power energy
ComputerScience,proceeding international workshop verification infinitestate system,aim infinity workshop provide forum researcher interested development formal method algorithmic technique analysis system infinitely many state application automated verification complex software hardware system
ComputerScience,crest hardware formal verification ansic reference specification,paper present crest prototype frontend tool intended addon commercial eda formal verifcation environment crest adaptation cbmc bounded model checker c academic tool widely used industry software analysis property verification leverage capability cbmc process hardware datapath specification written arbitrary ansic without limiting restriction synthesizable subset briefly sketch architecture tool show use range verification case study
ComputerScience,inpainting long audio segment similarity graph,present novel method compensation long duration data loss audio signal particular music concealment signal defect based graph encodes signal structure term timepersistent spectral similarity suitable candidate segment substitution lost content proposed intuitive optimization scheme smoothly inserted gap ie lost distorted signal region extensive listening test show proposed algorithm provides highly promising result applied variety realworld music signal
ComputerScience,crowdsourcing tullock contest new perspective,incentive mechanism crowdsourcing extensively studied framework allpay auction along distinct line paper proposes use tullock contest alternative tool design incentive mechanism crowdsourcing inspired conduciveness tullock contest attracting user entry yet necessarily higher revenue domain paper explore new dimension optimal tullock contest design superseding contest prize fixed conventional tullock contest prize function dependent unknown winner contribution order maximize crowdsourcer utility show approach lead attractive practical advantage wellsuited rapid prototyping fully distributed web agent smartphone apps b overcomes disincentive participate caused player antagonism increasing number rival furthermore optimize conventional fixedprize tullock contest construct superior benchmark compare mechanism extensive evaluation show mechanism significantly outperforms optimal benchmark three fold crowdsourcer utility cum profit nine fold player social welfare
ComputerScience,q quantum computation package net platform,quantum computing promising approach computation based equation quantum mechanic simulator quantum algorithm must capable performing heavy mathematical matrix transforms design simulator take one three form quantum turing machine network model circuit model connected gate quantum programming language yet simulator hybrid studied previous simulator adopt feature three simulator different implementation language different paradigm different platform quantum computing language qcl quasi quantum optic toolbox matlab simulator quantum algorithm take form package programming library quantum computing case study showing ability using circuit model net promising platform computing vbnet easy high productive programming language full power functionality provided net framework highly readable writeable flexible language compared another language c net many aspect adopted vbnet although shortage builtin mathematical complex matrix operation compared matlab implementation first built mathematical core matrix operation built quantum core contains basic qubits register operation basic quantum gate multiview visualization quantum state window demo show use get package
ComputerScience,approximation algorithm multirobot patrolscheduling minmax latency,consider problem finding patrol schedule k robot visit given set n site metric space robot maximum speed goal minimize weighted maximum latency site latency site defined maximum time duration consecutive visit site problem nphard traveling salesman problem special case site weight present polynomialtime algorithm approximation factor log frac w max w min optimal solution w max w min maximum minimum weight site respectively consider special case site site weight present polynomialtime algorithm solve problem exactly site may different weight present approximate solution run polynomial time number robot k constant
ComputerScience,rethinking abstraction big data,big data refers large complex data set existing approach exceed capacity capability current compute platform system software analytical tool human understanding numerous lesson scalability big data already found asymptotic analysis algorithm highperformance computing hpc application community however scale one aspect current big data trend fundamentally current emerging problem big data result unprecedented complexity structure data analyze dealing unreliability redundancy addressing human factor comprehending complex data set formulating meaningful analysis managing dense powerhungry data center house big data computer science solution complexity finding right abstraction hide much triviality possible revealing essence problem addressed big data challenge disrupted computer science stressing limit familiar abstraction define relevant subfields data analysis data management underlying parallel system result enough challenge revealed isolating abstraction traditional software stack standard algorithmic analytical technique attempt address complexity either oversimplify require lowlevel management detail author believe abstraction big data need rethought reorganization need evolve sustained continued crossdisciplinary collaboration
ComputerScience,seven principle effective scientific bigdatasystems,golden age scientific discovery given data compute power available ever plus new generation algorithm learn effectively data paradoxically many datadriven field eureka moment becoming increasingly rare scientist struggling keep pace explosion volume complexity scientific data describe simple architectural principle believe essential order create effective robust flexible platform make best use emerging technology deal exponential growth scientific data
ComputerScience,rise fall note changing paper length acm cscw,note quantitatively examine various trend length published paper acm cscw focusing several major transition editorial reviewing policy focus rise fall note introduced separate submission type doublecolumn full paper format note word consistently represented publication minimum maximum page length officially removed formal distinction made full paper note note soon completely disappeared distinct genre cooccurred trend steadily rising paper length discus finding directly relate local concern cscw context longstanding theoretical discussion around genre theory sociotechnical structure affordances impact participation distributed computermediated organization usergenerated content platform many possible explanation decline note emergence longer longer paper identify future work conclude addressing implication finding cscw community particularly given genre norm impact kind scholarship scholar thrive cscw well whether new topdown rule bottomup guideline ought developed around paper length different kind contribution
ComputerScience,performance evaluation java file security system jfss,security critical issue modern file storage system imperative protect stored data unauthorized access developed file security system named java file security system jfss guarantee security file demand user developed java platform java used programming language order provide portability enforces performance limitation developed fuse file system user space many effort done year developing file system user space fuse merit demerit paper evaluated performance java file security system jfss increased security come expense user convenience performance compatibility system jfss system performance evaluation show encryption overhead modest compared security
ComputerScience,pibooster lightweight approach performance improvement page table management paravirtual virtualmachines,paravirtualization page table management component guest operating system properly patched security guarantee hypervisor however none pay enough attention performance improvement result two noticeable performance issue first security patch exacerbate problem execution path guest page table de allocation become extremely long would consequently increase latency process creation exit second patch introduce many additional iotlb flush leading extra iotlb miss miss would negative impact io performance peripheral device paper propose pibooster novel lightweight approach improving performance page table management first pibooster shortens execution path page table de allocation pibooster cache maintains dedicated buffer serving page table de allocation second pibooster eliminates additional iotlb miss finegrained validation scheme performs page table dma validation separately instead together implement prototype xen linux guest kernel small modification xen sloc linux kernel sloc evaluate io performance micro macro way micro experiment result indicate pibooster able completely eliminate additional iotlb flush workloadstable environment effectively reduces de allocation time page table average macro benchmark show latency process creation exit expectedly reduced average moreover specint lmbench netperf result indicate pibooster negative performance impact cpu computation network io disk io
ComputerScience,practice streaming dynamic graph concept model system parallelism,graph processing become important part various area computing including machine learning medical application social network analysis computational science others growing amount associated graph processing workload dynamic million edge added removed per second graph streaming framework specifically crafted enable processing highly dynamic workload recent year seen development many framework however differ general architecture key detail support parallel execution graph update incorporated graph data organization type update workload allowed many others facilitate understanding growing field provide first analysis taxonomy dynamic streaming graph processing focus identifying fundamental system design understanding support concurrency parallelism different graph update well analytics workload also crystallize meaning different concept associated streaming graph processing dynamic temporal online timeevolving graph edgecentric processing model maintenance update graph database moreover provide bridge rich landscape graph streaming theory giving broad overview recent theoretical related advance analyzing graph streaming model setting could helpful developing powerful streaming framework design also outline graph streaming workload research challenge
ComputerScience,efficient statebased crdts deltamutation,crdts distributed data type make eventual consistency distributed object possible non adhoc specifically statebased crdts ensure convergence disseminating en tire state may large merging replica whereas operationbased crdts disseminate operation ie small state assuming exactlyonce reliable dissemination layer introduce delta state conflictfree replicated datatypes delta crdt achieve best world small message incremental nature operationbased crdts disseminated unreliable communication channel traditional statebased crdts achieved defining delta mutators return deltastate typically much smaller size full state joined local remote state introduce delta crdt framework explain establishing correspondence current statebased crdts addition present antientropy algorithm ensures causal consistency introduce two delta crdt specification wellknown replicated datatypes
ComputerScience,theorema graphical user interface mathematical assistant system,theorema stand redesign including complete reimplementation theorema system originally designed developed implemented bruno buchberger theorema group risc paper present first prototype graphical user interface gui new system heavily relies powerful interactive capability introduced recent release underlying mathematica system importantly possibility dynamic object connected interface element like slider menu checkboxes radiobuttons like feature fully integrated mathematica programming environment allow implementation modern user interface
ComputerScience,anatomy reddit overview academic research,online forum provide rich environment user may post question comment different topic understanding people behave online forum may shed light fundamental mechanism collective thinking emerges group individual also important practical application instance improve user experience increase engagement automatically identify bullying importantly datasets generated activity user often openly available researcher contrast source data computational social science survey map main research direction arose recent year focus primarily popular platform reddit distinguish categorise research depending focus post user point different type methodology extract information structure dynamic system emphasize diversity richness research term question method suggest future avenue research
ComputerScience,evaluation general applicability dragoon kcenter problem,kcenter problem fundamental problem often face considering complex service system typical challenge include placement warehouse logistics positioning server content delivery network previously proposed dragoon effective algorithm approach kcenter problem paper evaluates dragoon focus potential worst case behavior comparison technique use evolutionary algorithm generate instance kcenter problem especially challenging dragoon ultimately experiment confirm previous good result dragoon however also reliably find scenario clearly outperformed approach
ComputerScience,correctly prune tropical tree,present tropical game generalization combinatorial minmax game based tropical algebra model break traditional symmetry rational zerosum game player exactly opposed goal min v max widely applicable minmax also support form pruning despite le effective alphabeta actually minmax game may seen particular case game dual tropical dual tropical game also tropical power alphabeta completely recovered formally develop model prove tropical pruning strategy correct conclude showing problem approximated parsing modeled tropical game profiting pruning
ComputerScience,decisiontheoretic coordination control active multicamera surveillance uncertain partially observable environment,central problem surveillance monitor multiple target moving largescale obstacleridden environment occlusion paper present novel principled partially observable markov decision processbased approach coordinating controlling network active camera tracking observing multiple mobile target high resolution surveillance environment proposed approach capable maintaining belief target state ie location direction velocity track even may observed directly camera time b coordinating camera action simultaneously improve belief target state maximize expected number target observed guaranteed resolution c exploiting inherent structure surveillance problem improve scalability ie linear time number target observed quantitative comparison stateoftheart multicamera coordination control technique show approach achieve higher surveillance quality real time practical feasibility approach also demonstrated using real axis ptz camera
ComputerScience,detecting redundant cs rule application treerewriting approach,application normally large set cs cascading style sheet rule data display cs rule consists node selector given xpathlike query language declaration block assigning value selected node display attribute web application evolve maintaining cs file easily become problematic cs rule replaced new one obsolete hence redundant cs rule often remain application bloat application also significantly increase web browser processing time work detecting redundant cs rule application consider dynamic behavior specified javascript fact proposed method take account dynamic analysis aka testing soundly prove redundancy cs rule paper introduce abstraction application based monotonic treerewriting study redundancy problem establish precise complexity problem various subproblems practical importance ranging p exp particular algorithm relies efficient reduction analysis symbolic pushdown system highly optimised solver available yield fast method checking redundancy practice implemented algorithm demonstrated efficacy detecting redundant cs rule application
ComputerScience,xml static analyzer user manual,document describes use xml static analyzer practice provides informal documentation using xml reasoning solver implementation solver allows automated verification property expressed logical formula tree logical formula may instance express structural constraint navigation property like eg path existence node selection finite tree logical formula expressed using syntax xpath expression dtd xml schema relax ng definition
ComputerScience,generating atl model checker using attribute grammar,paper use attribute grammar formal approach model checker development aim design atl alternatingtime temporal logic model checker contextfree grammar generates language atl formula attribute grammar may informally defined contextfree grammar extended set attribute collection semantic rule use atl attribute grammar specifying operational semantics language atl formula defining translation language describes set state atl model corresponding atl formula satisfied provide formal definition attribute grammar used input another tool language recognition antlr generate atl model checker also technique implementing semantic action antlr presented concept connection attribute evaluation grammar generates language atl formula algebraic compiler implementation represents atl model checker original implementation model checking algorithm based relational database web service several database system web service technology used evaluating system performance verification large atl model
ComputerScience,expressive power higherorder datalog,classical result descriptive complexity theory state datalog express exactly class polynomially computable query ordered database paper extend result case higherorder datalog particular demonstrate ordered database k order datalog capture exptime result suggests higherorder extension datalog posse superior expressive power worthwhile investigation theory practice paper consideration acceptance tplp
ComputerScience,paging dynamic memory capacity,study generalization classic paging problem allows amount available memory vary time capturing fundamental property many modern computing reality cloud computing multicore energyoptimized processor turn good performance classic case provides performance guarantee memory capacity fluctuates roughly speaking moving static dynamic capacity mean difference optimality within factor space time suboptimality arbitrarily large factor precisely adopting competitive analysis framework show online paging algorithm despite optimal h k competitive ratio capacity remains constant k competitive arbitrarily large k presence minimal capacity fluctuation light surprising several classic paging algorithm perform remarkably well even memory capacity change adversarially even without taking change explicit account particular prove lfd still achieves minimum number fault several classic online algorithm lru dynamic h k competitive ratio best one achieve without knowledge future page request even one perfect knowledge future capacity fluctuation exact characterization ratio show almost albeit quite equal classic ratio k word careful management knowingpredicting future memory resource appears far le crucial performance knowingpredicting future data access
ComputerScience,graph coalition structure generation,give first analysis computational complexity coalition structure generation graph given undirected graph g n e valuation function subset node problem find partition n connected subset maximises sum component value problem generally np complete particular hard defined class valuation function independent disconnected member two node effect marginal contribution vertex separator nonetheless function provide bound complexity coalition structure generation general minor free graph proof constructive yield algorithm solving corresponding instance problem furthermore derive polynomial time bound acyclic k minor free graph however show problem remains np complete planar graph hence kk minor free graph kgeq moreover hardness result hold particular subclass valuation function termed edge sum value subset node simply determined sum given weight edge induced subgraph
ComputerScience,proportional representation vote stream,consider election voter come one time streaming fashion devise spaceefficient algorithm identify approximate winning committee respect common multiwinner proportional representation voting rule specifically consider approvalbased bordabased variant chamberlin ourant rule monroe rule complement algorithm lower bound somewhat surprisingly result imply using space depend number voter possible efficiently identify approximate representative committee fixed size vote stream huge number voter
ComputerScience,elicitation preference single peaked tree,multiagent system often set agent preference ordering set item one would like know preference ordering various task example data analysis preference aggregation voting etc however often large number item make impractical ask agent complete preference ordering scenario usually elicit agent preference asking hopefully small number comparison query asking agent compare two item prior work preference elicitation focus unrestricted domain domain single peaked preference show preference single peaked domain elicited much le number query compared unrestricted domain extend line research study preference elicitation single peaked preference tree strict superset domain single peaked preference show query complexity crucially depends number leaf path cover number distance path underlying single peaked tree whereas natural parameter like maximum degree diameter pathwidth play direct role determining query complexity investigate query complexity finding weak condorcet winner preference single peaked tree show task much le query complexity preference elicitation observe number leaf underlying single peaked tree path cover number tree influence query complexity problem
ComputerScience,objectoriented fast lexicon semantic generation,paper technical design large computational lexicon storage access prolog environment traditionally efficient access storage data structure implemented relational database management system delilah lexiconbased nlp system efficient access lexicon semantic generator vital show highly detailed hpsgstyle lexical specification fit well relational model efficiently retrieved argue fit naturally objectoriented model although storage object redundant claim efficient access still possible applying indexing compression technique relational model objectoriented model demonstrate possible implement objectoriented storage fast access iso prolog
ComputerScience,two algorithm,people usually regard algorithm abstract program implement natural way formalize idea algorithm equivalence class program respect suitable equivalence relation argue equivalence relation exists
ComputerScience,network popularity social cohesion gametheoretic approach,study social dynamic cohesion refers group tendency stay unity argued sociometry arises network topology interpersonal tie member group follow idea propose gamebased model cohesion relies social network also reflects individual social need particular model type cooperative game player may gain popularity strategically forming group group socially cohesive grand coalition core stable study social cohesion special type graph draw link social cohesion classical notion structural cohesion focus problem deciding whether given social network socially cohesive show problem conpcomplete nevertheless give two efficient heuristic coalition structure player enjoy high popularity experimentally evaluate performance
ComputerScience,characterizing analogical concept memory architecture implementing common model cognition,architecture implement common model cognition soar actr sigma prominent place research cognitive modeling well designing complex intelligent agent paper explore computational model analogical processing brought architecture enable concept acquisition example obtained interactively propose new analogical concept memory soar augments current system declarative longterm memory frame problem concept learning embedded within larger context interactive task learning itl embodied language processing elp demonstrate analogical learning method implemented proposed memory quickly learn diverse type novel concept useful recognition concept environment also action selection approach instantiated implemented cognitive system textsc aileen evaluated simulated robotic domain
ComputerScience,spinbased model checking simple concurrent program preemptive rtos,adapt existing preemptive scheduling model rtos kernel echronos machineassisted proof spinbased model checker model constructed automatically verified rather formulating proof hand moreover look design linuxlike realtime kernel pikort specification architecture reconstruct model use ltl specify simple concurrent program consumerproducer problem development stage kernel show preemptive scheduling mechanism program suffer race condition starvation deadlock
ComputerScience,disabling equational theory unification cryptographic protocol analysis tagging,paper show new tagging scheme cryptographic protocol message tagging equational theory operator exclusiveor binary addition etc effectively disabled term unified believe result significant impact protocol analysis security since unification heart symbolic protocol analysis hence disabling equational theory unification implies disabling altogether protocol analysis operator theory
ComputerScience,parallel computation using active selfassembly,study computational complexity recently proposed nubot model molecularscale selfassembly model generalises asynchronous cellular automaton nonlocal movement large assembly molecule pushed pulled around analogous million molecular motor animal muscle effecting rapid movement macroscale arm leg show nubot model capable simulating boolean circuit polylogarithmic depth polynomial size polylogarithmic expected time computational complexity term show problem complexity class nc solvable polylogarithmic expected time polynomial workspace using nubots along way give fast parallel nubot algorithm number problem including line growth sorting boolean matrix multiplication spacebounded turing machine simulation using constant number nubot state monomer type circuit depth wellstudied notion parallel time result implies nubot model highly parallel model computation formal sense asynchronous cellular automaton capable parallelism result show adding rigidbody movement primitive model get nubot model drastically increase parallel processing ability
ComputerScience,proceeding workshop hybrid autonomous system,interest autonomous system increasing industry academia system must operate limited human intervention changing environment must able compensate significant system failure without external intervention appropriate model autonomous system found class hybrid system interact environment workshop brings together researcher interested aspect autonomy resilience hybrid system
ComputerScience,accelerating discrete wavelet transforms parallel architecture,discrete wavelet transform dwt found heart many imageprocessing algorithm recently several study compared performance transform various sharedmemory parallel architecture especially graphic processing unit gpus study however considered separable calculation scheme show corresponding separable part merged nonseparable unit half number step addition introduce optional optimization approach leading reduction number arithmetic operation discussed scheme adapted opencl framework pixel shaders evaluated using gpus two biggest vendor demonstrate performance proposed nonseparable method comparison existing separable scheme nonseparable scheme outperform separable counterpart numerous setup especially considering pixel shaders
ComputerScience,formal verification trading financial market,introduce formal framework analyzing trade financial market exchange multiple buyer seller participate trade day big exchange use computer algorithm implement double sided auction match buy sell request algorithm must abide certain regulatory guideline example market regulator enforce matching produced exchange emph fair emph uniform emph individual rational verify property trade first formally define notion theorem prover give formal proof relevant result matchings finally use framework verify property two important class double sided auction definition result presented paper completely formalised coq proof assistant without adding additional axiom
ComputerScience,graphbased timespace tradeoff approximate near neighbor,take first step towards rigorous asymptotic analysis graphbased approach finding approximate nearest neighbor highdimensional space analyzing complexity randomized greedy walk approximate near neighbor graph random data set size n dimensional euclidean unit sphere using near neighbor graph provably solve approximate nearest neighbor problem approximation factor c query time n rhoq space n rho arbitrary rhoq rho geq satisfying begin align rhoq sqrt rho rho geq end align graphbased near neighbor searching especially competitive hashbased method small c nearlinear memory regime asymptotic scaling greedy graphbased search match recent optimal hashbased tradeoff andonilaarhovenrazenshteynwaingarten study tradeoff scale data set size n theta analyze asymptotic complexity applying result lattice sieving
ComputerScience,automated process planning hybrid manufacturing,hybrid manufacturing hm technology combine additive subtractive manufacturing amsm capability leveraging strength fabricating complex geometry sm precision quality produce finished part present systematic approach automated computeraided process planning capp hm identify nontrivial qualitatively distinct costoptimal combination amsm modality multimodal hm process plan represented finite boolean expression sm manufacturing primitive expression evaluates asmanufactured artifact show primitive respect spatial constraint accessibility collision avoidance may constructed solving inverse configuration space problem asdesigned artifact manufacturing instrument primitive generate finite boolean algebra fba enumerates entire search space planning fba canonical intersection term ie atom provide complete domain decomposition reframe manufacturability analysis process planning purely symbolic reasoning subcollection atom found interchangeable design target approach subsumes unimodal allam allsm process planning special case demonstrate practical potency framework computational efficiency applied process planning complex part dramatically different sm instrument
ComputerScience,trust dynamic user attitude recommendation error preliminary result,artificial intelligence based system may used digital nudging technique steer coerce user make decision always aligned true interest system properly address issue fairness accountability transparency ethic trust user system would depend system output aim paper propose model exploring good bad recommendation affect overall trust idealized recommender system issue recommendation resource limited capacity impact different user attitude trust dynamic also considered using simulation ran large set experiment allowed observe certain circumstance user ended accepting recommendation user attitude controlled single parameter balancing gainloss trust goodbad recommendation great impact trust dynamic
ComputerScience,modular audio recognition framework marf application scientific software engineering note,marf opensource research platform collection voicesoundspeechtext natural language processing nlp algorithm written java arranged modular extensible framework facilitating addition new algorithm marf run distributively network may act library application used source learning extension example application provided show use framework api reference javadoc format well set accompanying note detailed description architectural design algorithm application marf application released bsdstyle license hosted sourceforgenet document provides detail insight internals marf mentioned application
ComputerScience,adversarial robustness sampling,random sampling fundamental primitive modern algorithm statistic machine learning used generic method obtain small yet representative subset data work investigate robustness sampling adaptive adversarial attack streaming setting adversary sends stream element universe u sampling algorithm eg bernoulli sampling reservoir sampling goal making sample unrepresentative underlying data stream adversary fully adaptive sense know exact content sample given point along stream choose element send next accordingly online manner wellknown result static setting indicate full stream chosen advance nonadaptively random sample size omega varepsilon approximation full data good probability vcdimension underlying set system u r sample size suffice robustness adaptive adversary simplistic answer emph negative demonstrate set system constant sample size corresponding vcdimension suffices static setting yet adaptive adversary make sample unrepresentative long sample size strongly sublinear stream length using simple easytoimplement attack however attack theoretical requiring set system size essentially exponential stream length coincidence show make bernoulli reservoir sampling robust adaptive adversary modification required solely replace vcdimension term sample size cardinality term log r nearly match bound imposed attack
ComputerScience,faulttolerant nanosatellite computing budget,micro nanosatellites become popular platform variety commercial scientific application today considered suitable mainly short lowpriority space mission due low reliability part attributed reliance upon cheap lowfeature size cot component originally designed embedded mobilemarket application traditional hardwarevoting concept ineffective softwarefaulttolerance concept shown effective system largely ignored space industry due low maturity researched theory practice designer payload instrument miniaturized satellite usually forced sacrifice reliability favor deliver level performance necessary cuttingedge science innovative commercial application thus developed softwarefaulttoleranceapproach based upon threadlevel coarsegrain lockstep validated using faultinjection offer strong longterm fault coverage architecture implemented tiled mpsoc fpga utilizing partial reconfiguration well mixed criticality architecture satisfy high performance requirement current future scientific commercial space mission low cost offering strong faultcoverage guarantee necessary platform control even mission long duration architecture developed esa project together two industrial partner developing prototype undergo radiation testing
ComputerScience,keeping calm distributed consistency easy,key concern modern distributed system avoid cost coordination maintaining consistent semantics recently answer question coordination actually required paper present informal introduction calm theorem answer question precisely moving traditional storage consistency consider property program calm acronym consistency logical monotonicity calm theorem show program consistent coordinationfree distributed implementation exactly program expressed monotonic logic theoretical result practical implication developer distributed application show calm provides constructive applicationlevel counterpart conventional system wisdom apparently negative result cap theorem also discus way monotonic thinking influence distributed system design new programming language design tool help developer write consistent coordinationfree code
ComputerScience,text extraction retrieval smartphone screenshots building repository life medium,daily engagement life experience increasingly interwoven mobile device use screen capture scale second used behavioral study implement justintime health intervention increasing psychological breadth digital information continue make actual screen people view preferred required source data life experience effective efficient information extraction retrieval digital screenshots crucial prerequisite successful use screen data paper present experimental workflow exploited preprocess unique collection screen capture ii extract unstructured text embedded image iii organize image text metadata based structured schema iv index resulting document collection v allow image retrieval dedicated vertical search engine application adopted procedure integrates different open source library traditional image processing optical character recognition ocr image retrieval aim ass whether stateoftheart methodology applied novel data set show combining opencvbased preprocessing module long shortterm memory lstm based release tesseract ocr without ad hoc training led characterlevel accuracy extracted text used processed repository baseline dedicated image retrieval system immediate use application behavioral prevention scientist discus issue text information extraction retrieval particular screenshot image case suggest important future work
ComputerScience,text based approach indexing retrieval image video review,text data present multimedia contain useful information automatic annotation indexing extracted information used recognition overlay scene text given video image extracted text used retrieving video image paper firstly discussed different technique text extraction image video secondly reviewed technique indexing retrieval image video using extracted text
ComputerScience,investigating correlation intercoder agreement machine annotation performance historical video data,video indexing approach visual concept classification person recognition essential enable finegrained semantic search largescale video archive historical video collection former german democratic republic gdr maintained german broadcasting archive dra typically lexicon visual concept defined semantic search however definition visual concept le subjective due individually differing judgment annotator may impact annotation quality subsequently training supervised machine learning method paper analyze intercoder agreement historical tv data former gdr visual concept classification person recognition intercoder agreement evaluated group expert well nonexpert annotator order determine difference annotation homogeneity furthermore correlation visual recognition performance interannotator agreement measured context information image quantity agreement used predict average precision concept classification finally influence expert v nonexpert annotation acquired study used evaluate person recognition
ComputerScience,parameterized perspective protecting election,study parameterized complexity optimal defense optimal attack problem voting problem input set voter group every voter group set vote two integer ka kd corresponding respectively number voter group attacker attack number voter group defender defend voter group get removed election attacked defended optimal defense problem want know possible defender commit strategy defending kd voter group matter ka voter group attacker attack outcome election change optimal attack problem want know possible attacker commit strategy attacking ka voter group matter kd voter group defender defends outcome election always different original without attack one
ComputerScience,choosing committee based approval vote presence outlier,study computational complexity committee selection problem several approvalbased voting rule presence outlier first result show outlier consideration make committee selection problem intractable approval net approval minisum approval voting rule study parameterized complexity problem five natural parameter namely target score size committee dual parameter number candidate outside committee number outlier dual parameter number nonoutliers net approval minisum approval voting rule provide dichotomous result resolving parameterized complexity problem subset five natural parameter considered showing either fpt w hardness subset parameter approval voting rule resolve parameterized complexity problem subset parameter except one also study approximation algorithm problem show exist alpha factor approximation algorithm approval net approval voting rule computable function alpha unless pnp minisum voting rule provide pseudopolynomial factor approximation algorithm
ComputerScience,semiringbased specification approach quantitative security,goal provide different semiringbased formal tool specification security requirement quantitatively enhance opensystem approach according system partially specified therefore suppose existence unknown possibly malicious agent interacts parallel system two specification framework designed along two different still related line first comparing behaviour system expected one checking system satisfies security requirement investigate novel approximate behaviouralequivalence comparing process behaviour thus extending generalised non deducibility composition gndc approach score second result equip modal logic semiring value purpose weight related satisfaction formula specifies requested property finally generalise classical partial modelchecking function name quantitative partial modelchecking way point necessary sufficient condition system satisfy order considered secure respect fixed securityfunctionality thresholdvalue
ComputerScience,culturebased explainable humanagent deconfliction,law code regulation help organise society century ai system gain autonomy question humanagent system operate peer norm especially resource contended posit agent must accountable explainable referring rule justify decision need explanation associated user acceptance trust paper contribution twofold propose argumentationbased humanagent architecture map human regulation culture artificial agent explainable behaviour architecture lean notion argumentative dialogue generates explanation history dialogue ii validate architecture user study context humanagent path deconfliction result show explanation provide significantly higher improvement human performance system complex consequently argue criterion defining need explanation also consider complexity system qualitative finding show rule complex explanation significantly reduce perception challenge human
ComputerScience,centroidbased summarization multiple document sentence extraction utilitybased evaluation user study,present multidocument summarizer called mead generates summary using cluster centroid produced topic detection tracking system also describe two new technique based sentence utility subsumption applied evaluation single multiple document summary finally describe two user study test model multidocument summarization
ComputerScience,reliable generation highperformance matrix algebra,scientific programmer often turn vendortuned basic linear algebra subprogram blas obtain portable high performance however many numerical algorithm require several blas call sequence successive call result suboptimal performance entire sequence need optimized concert instead vendortuned blas programmer could start source code fortran c eg based netlib blas use stateoftheart optimizing compiler however experiment show optimizing compiler often attain onequarter performance handoptimized code paper present domainspecific compiler matrix algebra build order blas bto reliably achieves high performance using scalable search algorithm choosing best combination loop fusion array contraction multithreading data parallelism bto compiler generates code slower faster handoptimized code
ComputerScience,julia implementation dynamic distributed dimensional data model,julia new language writing data analysis program easy implement run high performance similarly dynamic distributed dimensional data model aim clarify data analysis operation retaining strong performance accomplishes goal composable unified data model associative array work present implementation julia describe enables facilitates data analysis several experiment showcase scalable performance new julia version compared original matlab implementation
ComputerScience,small universal petri net,universal deterministic inhibitor petri net place transition arc constructed via simulation neary wood weakly universal turing machine state symbol total time complexity exponential running time weak machine simulate blank word weakly universal turing machine couple dedicated transition insert code reaching edge working zone complete chain given petri net encoding executed universal petri net translation bitag system turing machine constructed constructed petri net universal standard sense weaker form universality petri net introduced work
ComputerScience,exploiting error efficiency survey circuit algorithm,computational task tolerates relaxation specification algorithm tolerates effect noise execution hardware programming language system software trade deviation correct behavior lower resource usage present first time synthesis research result computing system make many error user tolerate across discipline computer aided design circuit digital system design computer architecture programming language operating system information theory rather overprovisioning resource layer avoid error efficient exploit masking error occurring one layer prevent propagating higher layer survey tradeoff individual layer computing system circuit level operating system level illustrate potential benefit endtoend approach using two illustrative example tie together survey present consistent formalization terminology across layer significantly deviate terminology traditionally used research community layer focus
ComputerScience,language support optional functionality,recommend programming construct availability check program need automatically adjust presence absence segment code idea check existence valid definition function call invoked syntax simple statement vision enable customization application functionality addition removal optional component without requiring complete rebuilding focus clike compiled procedural language unixbased system essentially approach attempt combine flexibility dynamic library usability utility dependency library outline benefit prevalent strategy mainly term development complexity crudely measured lesser line code also allude performance flexibility facet preliminary implementation figure early experimental evaluation presented
ComputerScience,cudagrind valgrind extension cuda,valgrind specifically included tool memcheck offer easy reliable way checking correctness memory operation program work unintrusive way valgrind translates program intermediate code executes emulated cpu heavy weight tool memcheck us keep full shadow copy memory used program tracking access allows detection memory leak checking validity access though suited wide variety program approach still fails accelerator based programming model involved code running device separate code running host access memory device starting kernel handled api provided driver used hence valgrind unable understand instrument operation run device circumvent limitation new set wrapper function introduced wrap subset cuda driver api function responsible de allocation memory region device respective memory copy operation allows check whether memory fully allocated transfer functionality provided valgrind whether memory transfered device host defined addressable technique possible detect number common programming mistake difficult debug mean combination wrapper together valgrind tool memcheck called cudagrind
ComputerScience,understanding norm change evolutionary gametheoretic approach extended version,human society around world interact developing maintaining social norm critically important understand norm emerge change work define evolutionary gametheoretic model study norm change society based idea different strength norm society translate different gametheoretic interaction structure incentive use model study analytically extensive agentbased simulation evolutionary relationship need coordination society related norm strength two key aspect norm change cultural inertia whether quickly population responds faced condition make norm change desirable exploration rate willingness agent try new strategy result show high need coordination lead high cultural inertia low exploration rate low need coordination lead low cultural inertia high exploration rate first work knowledge understanding evolutionary causal relationship among factor
ComputerScience,toward standard interface userdefined scheduling openmp,parallel loop important part openmp program efficient scheduling parallel loop improve performance program current openmp specification offer three option loop scheduling insufficient certain instance given large number possible scheduling strategy infeasible standardize one viable approach extend openmp standard allow user define loop scheduling strategy approach enable standardcompliant applicationspecific scheduling work analyzes principal component required userdefined scheduling proposes two competing interface candidate openmp standard conceptually compare two proposed interface respect three host language openmp ie c c fortran interface serve openmp community basis discussion prototype implementation userdefined scheduling
ComputerScience,uwb solution multimedia traffic wireless sensor network,several research focused qos quality service energy consumption wireless multimedia sensor network research project invest theory practice order extend spectrum use norm standard technology emerged wireless communication performance technology strongly related domain use limitation characteristic paper give comparison zigbee technology widely used sensor network uwb ultra wide band present competitor present work better result audiovisual application mediumrange high throughput
ComputerScience,efficient quantile computation markov chain via counting problem parikh image,cost markov chain markov chain whose transition labelled nonnegative integer cost fundamental problem model application verification stochastic system compute information distribution total cost accumulated run includes probability large total cost median cost quantiles expectation computed polynomial time previous work demonstrated computation cost quantiles harder done pspace paper show cost quantiles cost markov chain computed counting hierarchy thus providing evidence computing quantiles likely pspacehard obtain result exhibiting tight link problem formal language theory counting number word accepted given automaton given parikh image motivated link comprehensively investigate complexity latter problem among technique rely socalled best theorem efficiently computing number eulerian circuit directed graph
ComputerScience,logic unambiguous contextfree language,give paper logical characterization unambiguous context free language vein descriptive complexity fragment logic characterizing context free language given lautemann schwentick therien based implicit definability used aim obtain new connection two undecidable problem logical one language theoretical one
ComputerScience,robust dialogue understanding herald,tackle problem robust dialogue processing perspective language engineering propose agentoriented architecture allows u flexible way composing robust processor approach based shoham agent oriented programming aop paradigm show aop agent model enriched special feature component allow u deal classical problem dialogue understanding
ComputerScience,faircache introducing fairness icn caching technical report,informationcentric networking extensively us universal innetwork caching however developing efficient fair collaborative caching algorithm selfish cache still open question addition communication overhead induced collaboration especially poorly understood general network setting realistic isp autonomous system network paper address two problem modeling innetwork caching problem nash bargaining game show game convex optimization problem derive corresponding distributed algorithm analytically investigate collaboration overhead general graph topology theoretically show collaboration constrained within small neighborhood due cost growing exponentially proposed algorithm achieves least performance gain competitor different network topology evaluation guarantee provable convergence pareto efficiency proportional fairness
ComputerScience,sketchbased estimation subpopulationweight,summary massive data set support approximate query processing original data basic aggregate set record weight subpopulation specified predicate record attribute bottomk sketch powerful summarization format weighted item includes priority sampling classic weighted sampling without replacement computed efficiently many representation data including distributed database data stream derive novel unbiased estimator efficient confidence bound subpopulation weight estimator bound tailored distinguishing application data stream total weight sketched set computed summarization algorithm without significant use additional resource application sketch network neighborhood case rigorous derivation based clever application horvitzthompson estimator complemented efficient computational method demonstrate benefit wide range pareto distribution
ComputerScience,cuckoo hash table highperformance hash table networking application,hash table essential datastructure numerous networking application eg connection tracking firewall network address translator among cuckoo hash table provide excellent performance allowing lookup processed memory access per lookup yet large table cuckoo hash table remain memory bound memory access impact performance paper propose algorithmic improvement cuckoo hash table allowing eliminate unnecessary memory access change conducted without altering property original cuckoo hash table existing theoretical analysis remain applicable single core hash table achieves lookup per second positive lookup ie key looked present table lookup per second negative lookup improvement implementation included dpdk mostly positive lookup implementation achieves lookup per second improvement dpdk
ComputerScience,implementation evaluation framework calculate impact measure wikipedia author,wikipedia open collaborative website edited anyone even anonymously thus becoming victim illintentioned change therefore ranking wikipedia author calculating impact measure based edit history help identify reputational user harmful activity vandalism cite however processing million edits one system take long time author implement open source framework calculate ranking distributed way mapreduce evaluates performance various sized datasets reimplementation contribution measure citeauthor demonstrates extensibility usability well problem handling huge datasets possible resolution result put different performance optimization perspective show horizontal scaling decrease total processing time
ComputerScience,positional game qbf corrective encoding,positional game mathematical class twoplayer game comprising tictactoe generalization propose novel encoding game quantified boolean formula qbf game instance admits winning strategy first player corresponding formula true approach improves previous qbf encoding game multiple way first generic let u encode positional game hex second structural property positional game together careful treatment illegal move let u generate compact instance solved faster stateoftheart qbf solver establish latter fact extensive experiment finally compactness new encoding make feasible translate realistic game problem identify problem historical significance put forward qbf community milestone increasing difficulty
ComputerScience,next innovation internet thing,world witnessed several generation internet starting fixed internet mobile internet scientist focus many type research related thing internet internet thing question next internet generation thing internet paper envisions tactile internet could next internet generation near future paper introduce tactile internet could next future internet well impact application future society furthermore challenge requirement presented guide research near future field
ComputerScience,kara system visualising visual editing interpretation answerset program,answerset programming asp solution problem encoded dedicated model called answer set logical theory answer set computed program represents theory mean asp solver returned user set ground firstorder literal type representation often cumbersome user interpret tool like aspviz idpdraw developed allow visualising answer set tool kara introduced paper follows approach using asp language defining visualisation interpretation unlike existing tool position graphic primitive according static coordinate kara allows highlevel specification supporting graph structure grid relative positioning graphical element moreover generalising functionality previous tool kara provides modifiable visualisation interpretation manipulated graphically editing visualisation realised resorting abductive reasoning technique kara part sealion forthcoming integrated development environment ide asp
ComputerScience,optimizing system quality service rejuvenation longrunning application realtime constraint,reliability longevity availability deadline guarantee four important metric measure qos longrunning safetycritical realtime application software aging one major factor impact safety longrunning realtime application degraded performance increased failure rate caused software aging lead deadline missing catastrophic consequence software rejuvenation one commonly used approach handle issue caused software aging paper study optimal time software rejuvenation shall take place system reliability longevity availability maximized application delay caused software rejuvenation minimized particular formally analyze relationship software rejuvenation frequency system reliability longevity availability based theoretic analysis develop approach maximizing system reliability longevity availability use simulation evaluate developed approach addition design mindelay semiprioritydriven scheduling algorithm minimize application delay caused rejuvenation process simulation experiment show developed semiprioritydriven scheduling algorithm reduces application delay earliest deadline first edf least release time lrt scheduling algorithm respectively
ComputerScience,ethical consideration artificial intelligence course,recent surge interest ethic artificial intelligence may leave many educator wondering address moral ethical philosophical issue ai course instructor want develop curriculum prepares student artificial intelligence practitioner also understand moral ethical philosophical impact artificial intelligence society article provide practical case study link resource use ai educator also provide concrete suggestion integrate ai ethic general artificial intelligence course teach standalone artificial intelligence ethic course
ComputerScience,human indignity legal ai personhood selfish meme,possible rely current corporate law grant legal personhood artificially intelligent ai agent paper introducing pathway ai personhood analyze consequence ai empowerment human dignity human safety ai right emphasize possibility creating selfish meme legal system hacking context artificial entity finally consider potential solution addressing described problem
ComputerScience,efficient differentiable programming functional arrayprocessing language,present system automatic differentiation higherorder functional arrayprocessing language core functional language underlying system simultaneously support sourcetosource automatic differentiation global optimization loop transformation thanks feature demonstrate realworld machine learning computer vision benchmark system outperforms stateoftheart automatic differentiation tool
ComputerScience,international workshop distributed evolutionary computation informal environment,online conference proceeding iwdecie workshop taking place new orleans june workshop focus nonconventional implementation bioinspired algorithm conceptual implication
ComputerScience,discriminating trace time,property internals program explain possible difference overall running time different input paper propose formal framework considering question dub traceset discrimination show even though algorithmic problem computing maximum likelihood discriminants nphard approach based integer linear programming ilp decision tree learning useful zeroingin program internals set java benchmark find compactlyrepresented decision tree scalably discriminate high accuracy scalably maximum likelihood discriminants comparable accuracy demonstrate three larger case study decisiontree discriminants produced tool useful debugging timing sidechannel vulnerability ie malicious observer infers secret simply passively watching execution time availability vulnerability
ComputerScience,novel metaknowledgebased processing technique multimedia big data clustering challenge,past research challenged u task showing relational pattern textbased data clustering predictive analysis using golay code technique focus novel approach extract metaknowledge multimedia datasets collaboration ongoing task studying relational pattern datapoints based metafeatures extracted metaknowledge multimedia datasets selected significant suit mining technique applied golay code algorithm research paper summarize finding optimization metaknowledge representation representation structured unstructured multimedia data order
ComputerScience,sign language recognition generation translation interdisciplinary perspective,developing successful sign language recognition generation translation system requires expertise wide range field including computer vision computer graphic natural language processing humancomputer interaction linguistics deaf culture despite need deep interdisciplinary knowledge existing research occurs separate disciplinary silo tackle separate portion sign language processing pipeline lead three key question interdisciplinary view current landscape reveal biggest challenge facing field call action people working field help answer question brought together diverse group expert twoday workshop paper present result interdisciplinary workshop providing key background often overlooked computer scientist review stateoftheart set pressing challenge call action research community
ComputerScience,symbolicdata sdeval benchmarking everyone,paper present sdeval software project contains tool creating running benchmark focus problem computer algebra built top symbolic data project able translate problem database executable code various computer algebra system included tool designed flexible use extend utilized even context community presentation sdeval also address particularity benchmarking field computer algebra furthermore sdeval provide feasible automatizable way reproducing benchmark published current research work appears difficult task general due customizability available program simultaneously present current development symbolic data project
ComputerScience,element design container solution linbox library,describe paper new design technique used cpp exact linear algebra library linbox intended make library safer easier use keeping generic efficient first review new simplified structure container based emph founding scope allocation model explain design choice impact coding unification matrix class clearer model matrix submatrices etc present variation emph strategy design pattern comprised controller plugin system controller solution chooses among plugins algorithm always call back controller subtasks give example using solution mul finally present benchmark architecture serf two purpose providing user easier way produce graph creating framework automatically tuning library supporting regression testing
ComputerScience,linbox founding scope allocation parallel building block separate compilation,maximize efficiency time space allocation deallocations exact linear algebra library linbox must always occur founding scope provides simple lightweight allocation model present model usage rebinding matrix different coefficient domain also present automatic tool speedup compilation template library software abstraction layer introduction transparent parallelism algorithmic level
ComputerScience,mathscheme library preliminary experiment,present experiment performed best test design library mathscheme mechanized mathematics software system building wish library design use reflect much possible mathematical structure present object populate library
ComputerScience,opensbli framework automated derivation parallel execution finite difference solver range computer architecture,exascale computing feature novel potentially disruptive hardware architecture exploiting full potential nontrivial numerical modelling framework involving finite difference method currently limited static nature handcoded discretisation scheme repeatedly may rewritten run efficiently new hardware contrast opensbli us code generation derive model code highlevel specification user focus equation solve whilst concerning detailed implementation sourcetosource translation used tailor code enable execution variety hardware
ComputerScience,univariate polynomial real root isolation continued fraction revisited,present algorithmic complexity implementation result concerning real root isolation integer univariate polynomial using continued fraction expansion real algebraic number one motivation explain method good performance practice improve previously known bound factor tau polynomial degree tau bound coefficient bitsize thus matching current record complexity real root isolation exact method namely complexity bound sob using standard bound expected bitsize integer continued fraction expansion show compute multiplicity within complexity extend algorithm non squarefree polynomial finally present efficient opensource texttt c implementation algebraic library synaps illustrate efficiency compared available software use polynomial coefficient bitsize degree
ComputerScience,survey electromagnetic sidechannel attack discussion caseprogressing potential digital forensics,increasing prevalence internet thing iot device made inevitable pertinence digital forensic investigation increase foreseeable future device produced various vendor often posse limited standard interface communication usb port wifibluetooth wireless interface meanwhile increasing mainstream focus security privacy user data builtin encryption becoming commonplace consumerlevel computing device iot device exception circumstance significant challenge presented digital forensic investigation data iot device need analysed work explores electromagnetic em sidechannel analysis literature purpose assisting digital forensic investigation iot device em sidechannel analysis technique unintentional electromagnetic emission used eavesdropping operation data handling computing device nonintrusive nature em sidechannel approach make viable option assist digital forensic investigation attack require must result modification target device literature various em sidechannel analysis attack technique discussed selected basis applicability iot device investigation scenario insight gained background study used identify promising future application technique digital forensic analysis iot device potentially progressing wide variety currently hindered digital investigation
ComputerScience,revisit blockchainbased smart contract technology,blockchainbased smart contract become growing field blockchain technology technology used solve digital transaction issue turn wider usage including smart contract development smart contract traced numerous platform facilitating however issue well platform work oppose yet fully explored usage smart contract seen application built top smart contract platform tokenization real world virtual world asset however smart contract contains several issue concerning security codifying could solved various tool proposed existing research paper aim revisit blockchainbased smart contract technology order understand discus research gap gathered existing research provide guidance future research
ComputerScience,security framework iot device cyberattacks,internet thing iot interconnection heterogeneous smart device internet diverse application area huge number smart device complexity network made impossible secure data communication device various conventional security control insufficient prevent numerous attack informationrich device along enhancing existing approach peripheral defence intrusion detection system id proved efficient scenario however conventional id approach unsuitable mitigate continuously emerging zeroday attack intelligent mechanism detect unfamiliar intrusion seems prospective solution article explores popular attack iot architecture relevant defence mechanism identify appropriate protective measure different networking practice attack category besides security framework iot architecture provided list security enhancement technique
ComputerScience,human factor biocybersecurity wargames,within field biocybersecurity important understand vulnerability may uncovered processing biologics well safeguarded intersect cyber cyberphysical system noted peccoud lab ensure product brand integrity protect served recent finding revealed biological system used compromise computer system vice versa regular sophisticated attack still year away time essence better understand way deepen critique grasp intersectional vulnerability within bioprocessing process involved become increasingly digitally accessible wargames shown successful within improving group dynamic response anticipated cyber threat used towards addressing possible threat within biocybersecurity within paper discus growing prominence biocybersecurity importance biocybersecurity bioprocessing respect domestic international context reason emphasizing biological component face explosive growth biotechnology thus separating term biocybersecurity cyberbiosecurity additionally discussion manual provided simulation towards organizational learning sense shore vulnerability may emerge within organization bioprocessing pipeline
ComputerScience,pyrdm pythonbased library automating management online publication scientific software data,recomputability reproducibility result scientific software requires access source code associated input output data however full collection resource often accompany key finding published journal article thereby making difficult impossible wider scientific community verify correctness result build research paper present new pythonbased library pyrdm whose functionality aim automate process sharing software data via online citable repository figshare library integrated workflow opensource computational fluid dynamic package fluidity demonstrate example usage
ComputerScience,benchmarking graphulo processing framework,graph algorithm wide applicablity variety domain often used massive datasets recent standardization effort graphblas specify set key computational kernel hardware software developer adhere graphulo processing framework enables graphblas kernel apache accumulo database previous work demonstrated core graphulo operation called textit tablemult performs largescale multiplication operation database table article present result scaling graphulo engine larger problem scalablity greater number resource used specifically present two experiment demonstrate graphulo scaling performance linear number available resource first experiment demonstrates cluster processing rate graphulo tablemult operator two large graph scaled vertex second experiment us tablemult extract random set row large graph node simulate cued graph analytic benchmarking result relevance graphulo user wish apply graphulo graph problem
ComputerScience,discrete scheme gaussian curvature convergence,paper several discrete scheme gaussian curvature surveyed convergence property modified discrete scheme gaussian curvature considered furthermore new discrete scheme gaussian curvature resented prove new scheme converges regular vertex valence le constructing counterexample also show impossible building discrete scheme gaussian curvature converges regular vertex valence finally asymptotic error several discrete scheme gaussian curvature compared
ComputerScience,robustness nash equilibrium network game,analyze robustness pure strategy nash equilibrium network game perturbation player utility function first derive simple characterization margin robustness defined minimum magnitude perturbation make nash equilibrium original game stop perturbed game investigate maximally robust equilibrium standard network game coordination anticoordination game finally application provide sufficient condition existence nash equilibrium network game mixture coordinating anticoordinating game
ComputerScience,graphical game decomposition,consider graphical game introduced kearns et al first analyse interaction graphicality notion strategic equivalence game providing minimal complexity graphical description game study interplay graphicality classical decomposition game proposed candogan et al characterizing graphical property part decomposition
ComputerScience,separable game,introduce notion separable game refines generalizes graphical game prove exists minimal splitting respect game separable moreover prove every strategic equivalence class game separable respect minimal splitting class game also graphical respect smallest graph class represent minimal complexity graphical description game prove symmetry property minimal splitting potential game describe property reflects decomposition potential function particular last result strengthen one recently proved graphical potential game finally study interplay separability classical decomposition game proposed characterizing separability property part decomposition
ComputerScience,follow edge mobilityaware dynamic service placement mobile edge computing,mobile edge computing new computing paradigm push cloud computing capability away centralized cloud network edge however sinking computing capability new challenge incurred user mobility arises since endusers typically move erratically service dynamically migrated among multiple edge maintain service performance ie userperceived latency tackling problem nontrivial since frequent service migration would greatly increase operational cost address challenge term performancecost tradeoff paper study mobile edge service performance optimization problem longterm cost budget constraint address user mobility typically unpredictable apply lyapunov optimization decompose longterm optimization problem series realtime optimization problem require priori knowledge user mobility decomposed problem nphard first design approximation algorithm based markov approximation seek nearoptimal solution make solution scalable amenable future application scenario largescale user device propose distributed approximation scheme greatly reduced time complexity based technique best response update rigorous theoretical analysis extensive evaluation demonstrate efficacy proposed centralized distributed scheme
ComputerScience,unified form language domainspecific language weak formulation partial differential equation,present unified form language ufl domainspecific language representing weak formulation partial differential equation view numerical approximation feature ufl include support variational form functionals automatic differentiation form expression arbitrary function space hierarchy multifield problem general differential operator flexible tensor algebra feature ufl used effortlessly express finite element method complex system partial differential equation nearmathematical notation resulting compact intuitive readable program present work language construction implementation ufl freely available opensource software library library generates abstract syntax tree representation variational problem used software library generate concrete lowlevel implementation application example presented library support ufl highlighted
ComputerScience,composing factoring generalized green operator ordinary boundary problem,consider solution operator linear ordinary boundary problem many boundary condition always solvable generalized green operator certain kind generalized inverse differential operator answer question product two generalized green operator generalized green operator product corresponding differential operator boundary problem solves moreover show provided factorization underlying differential operator generalized boundary problem factored lower order problem corresponding factorization respective green operator illustrate result example using maple package intdiffop presented algorithm implemented
ComputerScience,computing real root real polynomial real,recent work introduces asymptotically fast subdivision algorithm denoted anewdsc isolating real root univariate real polynomial method combine descartes rule sign test interval existence root newton iteration speed convergence cluster root approximate computation decrease required precision achieves record bound worstcase complexity considered problem matching complexity pan method computing complex root improving upon complexity subdivision method several magnitude article hand report implementation anewdsc top r root isolator r highly efficient realization classical descartes method currently serf default real root solver maple describe crucial design change within anewdsc r led highperformance implementation without harming theoretical complexity underlying algorithm excerpt extensive collection benchmark available online http anewdscmpiinfmpgde illustrate theoretical gain performance anewdsc subdivision method also transfer practice experiment also show new implementation outperforms r mature competitor magnitude notoriously hard instance clustered root instance avoid almost overhead integrating additional optimization heuristic
ComputerScience,computing hypergeometric function rigorously,present efficient implementation hypergeometric function arbitraryprecision interval arithmetic function kummer u function supported unrestricted complex parameter argument extension cover exponential trigonometric integral error function fresnel integral incomplete gamma beta function bessel function airy function legendre function jacobi polynomial complete elliptic integral special function output used directly interval computation generate provably correct floatingpoint approximation format performance competitive earlier arbitraryprecision software sometimes order magnitude faster also partially cover generalized hypergeometric function pfq computation highorder parameter derivative
ComputerScience,arb efficient arbitraryprecision midpointradius interval arithmetic,arb c library arbitraryprecision interval arithmetic using midpointradius representation also known ball arithmetic support real complex number polynomial power series matrix evaluation many special function core number type designed versatility speed range scenario allowing performance competitive noninterval arbitraryprecision type mpfr mpc floatingpoint number discus lowlevel number representation strategy precision error bound implementation efficient polynomial arithmetic interval coefficient
ComputerScience,survey evolution stream processing system,stream processing active research field year witnessing prime time due recent successful effort research community numerous worldwide opensource community survey provides comprehensive overview fundamental aspect stream processing system evolution functional area outoforder data management state management fault tolerance high availability load management elasticity reconfiguration review noteworthy past research finding outline similarity difference early modern streaming system discus recent trend open problem
ComputerScience,nefele process orchestration cloud,virtualization either o hardware level play important role cloud computing enables easier automation faster deployment distributed environment virtualized infrastructure provide level management flexibility lack practical abstraction distributed resource developer environment still need deal complication building distributed software system different orchestration system built provide abstraction however solve inherent challenge distributed system synchronization issue resilience failure paper introduces nefele decentralized process orchestration system automatically deploys manages individual process rather containersvms within cluster nefele inspired single system image ssi vision mitigating intricacy remote execution yet maintains flexibility performance virtualized infrastructure nefele offer set apis building cloudnative application let developer easily build deploy scale application cloud environment implemented deployed nefele cluster datacenter evaluated performance evaluation show nefele effectively deploy scale monitor process across distributed environment incorporates essential primitive build distributed software system
ComputerScience,complexity manipulation partial information voting,coalitional manipulation problem studied extensively literature many voting rule however study focused complete information setting wherein manipulator know vote nonmanipulators assumption reasonable purpose showing intractability unrealistic algorithmic consideration realworld scenario impractical manipulator accurate knowledge vote paper investigate manipulation incomplete information framework manipulator know partial order voter consistent true preference voter setting formulate three natural computational notion manipulation namely weak opportunistic strong manipulation say extension partial order exists manipulative vote extension weak manipulation wm manipulator seek vote way make preferred candidate win least one extension partial vote nonmanipulators opportunistic manipulation om manipulator seek vote way make preferred candidate win every viable extension partial vote nonmanipulators strong manipulation sm manipulator seek vote way make preferred candidate win every extension partial vote nonmanipulators consider several scenario traditional manipulation problem easy instance borda single manipulator many corresponding manipulative question propose turn computationally intractable hardness result often hold even little information missing word even instance quite close complete information setting
ComputerScience,catroid mobile visual programming system child,catroid free open source visual programming language programming environment image manipulation program website catroid allows casual firsttime user starting age eight develop animation game solely using android phone tablet catroid also allows wirelessly control external hardware lego mindstorms robot via bluetooth bluetooth arduino board well parrot popular inexpensive ardrone quadcopters via wifi
ComputerScience,scheduling massively parallel multigrid multilevel monte carlo method,computational complexity naive samplingbased uncertainty quantification partial differential equation extremely high multilevel approach multilevel monte carlo mlmc reduce complexity significantly exploit fully parallel environment sophisticated scheduling strategy needed often fast algorithm executed parallel essential compute fine level sample whereas compute individual coarse level sample moderate number processor employed efficiently make use multiple instance parallel multigrid solver combined advanced load balancing technique particular optimize concurrent execution across three layer mlmc method parallelization across level across sample across spatial grid overall efficiency performance method analyzed scalability window multigrid solver revealed essential ie property solution computed range process number maintaining good parallel efficiency evaluate new scheduling strategy series numerical test conclude paper demonstrating large scaling experiment
ComputerScience,multimode control attack election,bartholdi tovey trick opened study control attack election attempt improve election outcome action addingdeleting candidate voter work led many result algorithm used find attack election complexitytheoretic hardness result used shield attack however work line assumed attacker employ single type attack paper model study case attacker launch multipronged ie multimode attack realistically capture richness reallife setting example attacker might simultaneously try suppress voter attract new voter election introduce spoiler candidate model provides unified framework varied attack constructing polynomialtime multiprong attack algorithm prove various election system even concerted flexible attack perfectly planned deterministic polynomial time
ComputerScience,parimutuel betting permutation,focus permutation betting market parimutuel call auction model trader bet final ranking n candidate present proportional betting mechanism market mechanism allows trader bet subset n x n candidaterank pair reward proportionally number pair appear final outcome show market organizer decision problem mechanism formulated convex program polynomial size importantly formulation yield set n x n unique marginal price sufficient price bet mechanism computable polynomialtime marginal price reflect trader belief marginal distribution outcome also propose technique compute joint distribution n permutation marginal distribution show using maximum entropy criterion obtain concise parametric form n x n parameter joint distribution defined exponentially large state space present approximation algorithm computing parameter distribution fact algorithm address generic problem finding maximum entropy distribution permutation given mean may independent interest
ComputerScience,coalitional manipulation multiwinner election shortlisting,shortlisting candidate selecting group best candidate special case multiwinner election provide first indepth study computational complexity strategic voting shortlisting based perhaps basic voting rule scenario lbloc every voter approves l candidate particular investigate influence several tiebreaking mechanism eg pessimistic versus optimistic group evaluation function eg egalitarian versus utilitarian among thing conclude egalitarian setting strategic voting may indeed computationally intractable regardless tiebreaking rule altogether provide fairly comprehensive picture computational complexity landscape far literature neglected scenario
ComputerScience,improving csiec project adapting english teaching learning china,paper short review csiec project initialized u present continuing development improvement csiec project detail including design five new microsoft agent character representing different virtual chatting partner limitation simulated dialog specific practical scenario like graduate job application interview briefly analyze actual condition feature application field webbased english education china finally introduce effort adapt system requirement english teaching learning china point work next
ComputerScience,conversational ai science behind alexa prize,conversational agent exploding popularity however much work remains area social conversation well freeform conversation broad range domain topic advance state art conversational ai amazon launched alexa prize university competition sixteen selected university team challenged build conversational agent known socialbots converse coherently engagingly human popular topic sport politics entertainment fashion technology minute alexa prize offer academic community unique opportunity perform research live system used million user competition provided university team real user conversational data scale along userprovided rating feedback augmented annotation alexa team enabled team effectively iterate make improvement throughout competition evaluated realtime live user interaction build socialbots university team combined stateoftheart technique novel strategy area natural language understanding context modeling dialog management response generation knowledge acquisition support effort participating team alexa prize team made significant scientific engineering investment build improve conversational speech recognition topic tracking dialog evaluation voice user experience tool traffic management scalability paper outline advance created university team well alexa prize team achieve common goal solving problem conversational ai
ComputerScience,evaluating comparing open domain dialog system,conversational agent exploding popularity however much work remains area non goaloriented conversation despite significant growth research interest recent year advance state art conversational ai amazon launched alexa prize dollar university competition sixteen selected university team built conversational agent deliver best social conversational experience alexa prize provided academic community unique opportunity perform research live system used million user subjectivity associated evaluating conversation key element underlying challenge building nongoal oriented dialogue system paper propose comprehensive evaluation strategy multiple metric designed reduce subjectivity selecting metric correlate well human judgement proposed metric provide granular analysis conversational agent captured human rating show metric used reasonable proxy human judgment provide mechanism unify metric selecting top performing agent also applied throughout alexa prize competition knowledge date largest setting evaluating agent million conversation hundred thousand rating user believe work step towards automatic evaluation process conversational ai
ComputerScience,topicbased evaluation conversational bot,dialog evaluation challenging problem especially non taskoriented dialog conversational success welldefined propose evaluate dialog quality using topicbased metric describe ability conversational bot sustain coherent engaging conversation topic diversity topic bot handle detect conversation topic per utterance adopt deep average network dan train topic classifier variety question query data categorized multiple topic propose novel extension dan adding topicword attention table allows system jointly capture topic keywords utterance perform topic classification compare proposed topic based metric rating provided user show metric correlate complement human judgment analysis performed ten thousand real humanbot dialog alexa prize competition highlight user expectation conversational bot
ComputerScience,fixedpoints social choice axiomatic approach network community,provide first social choice theory approach question constitutes community social network inspired classic preference model social choice theory start abstract social network framework called preference network consist finite set member member totalranking preference member set within framework develop two complementary approach axiomatically study formation structure community apply social choice theory define community indirectly postulating fixed point preference aggregation function obeying certain desirable axiom directly postulate desirable axiom community without reference preference aggregation leading eight natural community axiom approach allow u formulate analyze community rule prove taxonomy theorem provides structural characterization family community rule satisfies eight axiom structure actually quite beautiful community rule form bounded lattice natural intersection union operation structural theorem complemented complexity result identifying community selective rule lattice p deciding subset community comprehensive rule lattice conpcomplete study also shed light limitation defining community rule solely based preference aggregation aggregation function satisfying arrow iia axiom based commonly used aggregation scheme like borda count generalization thereof lead community violate least one community axiom finally give polynomialtime rule consistent seven axiom weakly satisfying eighth axiom
ComputerScience,reading pixel photographic steganography camera display messaging,exploit human color metamers send lightmodulated message le visible human eye recoverable camera message key component cameradisplay messaging handheld smartphones capturing information electronic signage color pixel display image modified particular color gradient vector challenge find color gradient maximizes camera response minimizing human response mismatch human spectral camera sensitivity curve creates opportunity hidden messaging approach require knowledge sensitivity curve instead employ datadriven method learn ellipsoidal partitioning sixdimensional space color color gradient partitioning creates metamer set defined base color display pixel color gradient direction message encoding sample resulting metamer set find color step base color embed binary message arbitrary image reduced visible artifact unlike previous method rely visually obtrusive intensity modulation embed color message hidden ordinary display camera used without need expensive led high speed device primary contribution work framework map pixel arbitrary image metamer pair steganographic photo messaging
ComputerScience,controlling random population,bertrand et al introduced model parameterised system agent represented finite state system studied following control problem number agent exist controller able bring agent target state showed problem decidable exptimecomplete adversarial setting posed open problem stochastic setting agent represented markov decision process paper show stochastic control problem decidable solution make significant us well quasi order maxflow mincut theorem theory regular cost function
ComputerScience,retraction theorem distributed synthesis,present general theorem distributed synthesis problem coordination game omega regular objective form exists winning strategy coalition exists essential winning strategy obtained retraction given one general lead finitestate winning strategy knowledge agent remains bounded solve synthesis problem study carried setting objective expressed term event may emph observable natural game imperfect information rather common assumption objective expressed term event observable agent characterise decidable distributed synthesis problem term finiteness knowledge state finite congruence class induced
ComputerScience,synthesis presence dynamic link,problem distributed synthesis automatically generate distributed algorithm given target communication network specification algorithm correct behavior previous work focused static network apriori fixed message size approach two shortcoming recent work distributed computing shifting towards dynamically changing communication network rather static one important class distributed algorithm socalled fullinformation protocol node piggypack previously received message onto current message work consider synthesis problem system two node communicating round dynamic link whose message size bounded given network model ie set link direction round execution adversary choses link network model restricted specification delivers message according current link direction motivated communication bus direct acknowledge mechanism assume node aware message delivered show synthesis problem decidable network model contain empty link dismisses node message
ComputerScience,shapenet informationrich model repository,present shapenet richlyannotated largescale repository shape represented cad model object shapenet contains model multitude semantic category organizes wordnet taxonomy collection datasets providing many semantic annotation model consistent rigid alignment part bilateral symmetry plane physical size keywords well planned annotation annotation made available public webbased interface enable data visualization object attribute promote datadriven geometric analysis provide largescale quantitative benchmark research computer graphic vision time technical report shapenet indexed model model classified category wordnet synset report describe shapenet effort whole provide detail currently available datasets summarize future plan
ComputerScience,relationshape convolutional neural network point cloud analysis,point cloud analysis challenging shape implied irregular point difficult capture paper propose rscnn namely relationshape convolutional neural network extends regular grid cnn irregular configuration point cloud analysis key rscnn learning relation ie geometric topology constraint among point specifically convolutional weight local point set forced learn highlevel relation expression predefined geometric prior sampled point point set others way inductive local representation explicit reasoning spatial layout point obtained lead much shape awareness robustness convolution basic operator rscnn hierarchical architecture developed achieve contextual shapeaware learning point cloud analysis extensive experiment challenging benchmark across three task verify rscnn achieves state art
ComputerScience,analysis social community based network growing model open source software community,social community open source software developer complex network structure network structure represents relation project engineer software developer community project form team consist engineer categorized task group source forge well known one open source website node arc network structure mean engineer connection among engineer source forge previous study found growing process project becomes strong according number developer joining project growing phase found characteristic pattern number agent produced project observation developed simulation model performing growing process project paper introduced altruism behavior shown army ant model software developer simulation model efficiency software developing process investigated experimental simulation result
ComputerScience,enumeration tree tractable combined complexity efficient update,give algorithm enumerate result tree monadic secondorder mso query represented nondeterministic tree automaton linear time preprocessing input tree enumerate answer linear delay answer allow update tree take place time restart enumeration logarithmic time tree combined complexity polynomial automaton result follows previous circuitbased enumeration algorithm based deterministic tree automaton also inspired earlier result word nondeterministic sequential extended variableset automaton context document spanner extend result combine recent tree balancing scheme niewerth enumeration structure support update underlying tree logarithmic time leaf insertion leaf deletion node relabelings result implies mso query free firstorder variable enumerate result linear preprocessing constantdelay update underlying tree logarithmic time improves several known result word tree building lower bound data structure research also show unconditionally doubly logarithmic factor update time algorithm optimal thus unlike setting algorithm constant update time
ComputerScience,digitising cultural complexity representing rich cultural data big data environment,one major terminological force driving ict integration research today big data phrase sound inclusive integrative big data approach highly selective excluding input effectively structured represented digitised data complex sort precisely kind human activity produce technological imperative enhance signal reduction noise accommodate richness data computational approach facilitate big data acquired perceived objectivity belies curated malleable reactive performative nature input environment anything data entered system data data cleaning processing together metadata information architecture structure facilitate cultural archive acquire capacity delimit data engenders process simplification major implication potential future innovation within research environment depend rich material yet increasingly mediated digital technology paper present preliminary finding europeanfunded kplex knowledge complexity project investigates delimiting effect digital mediation datafication rich complex cultural data paper present systematic review existing implicit definition data elaborating implication definition highlighting way metadata computational technology restrict interpretative potential data shed light gap analogue augmented digital practice fully computational one strategy researcher developed deal gap paper proposes reconceptualisation data functionally employed within digitallymediated research incorporate acknowledge richness complexity source material
ComputerScience,one dsl rule ideassisted code generation agile data analysis,data analysis core scientific study prominent task researcher practitioner typically undertake programming set automated script shortage tool language available designing data analysis pipeline user spend substantial effort learning specific languagestools often design solution project specific reused future study furthermore user need put effort making code scalable parallel implementation typically complex address problem proposing advanced code recommendation tool facilitates developing data science script user formulate intention humanreadable domain specific language dsl dataframe manipulation analysis dsl statement converted executable python code editing avoid need learn dsl increase userfriendliness tool support code completion mainstream ides editor moreover dsl statement generate executable code different data analysis framework currently support panda pyspark overall approach attempt accelerate programming common data analysis task facilitate conversion implementation framework preliminary assessment based popular data processing tutorial tool able fully cover processing step panda pyspark partially covering processing step framework
ComputerScience,multiplesize divideandconquer recurrence,short note report master theorem tight asymptotic solution divideandconquer recurrence one recursive term example n
ComputerScience,dependency pair polynomial path order,show polynomial path order employed efficiently conjunction weak innermost dependency pair automatically certify polynomial runtime complexity term rewrite system polytime computability function computed established technique implemented provide ample experimental data ass new method
ComputerScience,faster exact multiprocessor schedulability test sporadic task,baker cirinei introduced exact naive algorithm based solving state reachability problem finite automaton check whether set sporadic hard realtime task schedulable identical multiprocessor platform however algorithm suffered poor performance due exponential size automaton relative size task set paper successfully apply technique developed formal verification community specifically antichain algorithm defining proving correctness simulation relation baker cirinei automaton show improved algorithm yield dramatically improved performance schedulability test open many improvement
ComputerScience,fishing winner vote stream,investigate problem winner determination computational social choice theory data stream model specifically consider task summarizing arbitrarily ordered stream n vote candidate small space data structure able obtain winner determined popular voting rule show finding exact winner requires storing essentially vote focus problem finding em eps winner candidate could win change eps fraction vote show nontrivial upper lower bound space complexity eps winner determination several voting rule including k approval k veto scoring rule approval maximin bucklin copeland plurality run
ComputerScience,euretile dynamic dal benchmark coding measurement mpi version dpsnnstdp distributed plastic spiking neural net improvement dal code,euretile project required selection coding set dedicated benchmark project software hardware architecture future manytile distributed faulttolerant system focus dynamic workload characterised heavy numerical processing requirement ambition identify common technique could applied embedded system hpc domain document first public deliverable work package challenging tiled application
ComputerScience,uopsinfo characterizing latency throughput port usage instruction intel microarchitectures,modern microarchitectures world complex manmade system consequence increasingly difficult predict explain let alone optimize performance software running microarchitectures basis performance prediction optimization would need faithful model behavior unfortunately seldom available paper present design implementation tool construct faithful model latency throughput port usage instruction end first discus common notion instruction throughput port usage introduce precise definition latency contrast previous definition considers dependency different pair input output operand develop novel algorithm infer latency throughput port usage based automaticallygenerated microbenchmarks accurate precise existing work facilitate rapid construction optimizing compiler tool performance prediction output tool provided machinereadable format provide experimental result processor generation intel core architecture ie nehalem coffee lake discus various case output tool differs considerably prior work
ComputerScience,json tokenbased authentication access management schema cloud saas application,cloud computing significantly reshaping computing industry built around core concept virtualization processing power connectivity elasticity store share resource via broad network emerged key technology unleashes potency big data internet thing mobile web application related technology also come challenge governance security privacy paper focused security privacy challenge cloud computing specific reference user authentication access management cloud saas application suggested model us framework harness stateless secure nature jwt client authentication session management furthermore authorized access protected cloud saas resource efficiently managed accordingly policy match gate pmg component policy activity monitor pam component introduced addition subcomponents policy validation unit pvu policy proxy db ppdb also established optimized service delivery theoretical analysis proposed model portrays system secure lightweight highly scalable improved cloud resource security management
ComputerScience,hypernets good g news gnutella,criticism gnutella network scalability rested bandwidth attribute original interconnection topology cayley tree tree general known lower aggregate bandwidth higher dimensional topology eg hypercubes mesh torus gnutella intended support thousand million peer study interconnection topology literature however focused hardware implementation limited cost thousand node since gnutella network virtual hypertopologies relatively unfettered constraint present performance model several plausible hypertopologies compare query throughput million peer virtual hypercube virtual hypertorus shown offer near linear scalability subject number peer tcpip connection simultaneously kept open
ComputerScience,designing autonomous vehicle evaluating role human emotion social norm,human going delegate right driving autonomous vehicle near future however fulfill complicated task need mechanism enforces autonomous vehicle obey road social rule practiced wellbehaved driver task achieved introducing social norm compliance mechanism autonomous vehicle research paper proposing artificial society autonomous vehicle analogy human social society av assigned social personality different social influence social norm introduced help av making decision influenced emotion regarding road collision avoidance furthermore social norm compliance mechanism artificial social av proposed using prospect based emotion ie fear conceived occ model fuzzy logic employed compute emotion quantitatively using simconnect approach fuzzy value fear provided netlogo simulation environment simulate artificial society av extensive testing performed using behavior space tool find performance proposed approach term number collision comparison randomwalk model based artificial society av proposed well comparative study random walk prove proposed approach provides better option tailor autopilot future av socially acceptable trustworthy rider term safe road travel
ComputerScience,fair allocation indivisible public good,consider problem fairly allocating indivisible public good model public good element feasibility constraint subset element chosen assume agent additive utility across element model generalizes existing framework fair public decision making participatory budgeting study groupwise fairness notion called core generalizes wellstudied notion proportionality pareto efficiency requires subset agent must receive outcome fair relative size contrast case divisible public good fractional allocation permitted core guaranteed exist allocating indivisible public good primary contribution notion additive approximation core tiny multiplicative loss polynomial time algorithm achieve small additive approximation additive factor relative largest utility agent element feasibility constraint define matroid show additive approximation similar approach yield constant additive bound feasibility constraint define matching generally feasibility constraint define arbitrary packing polytope mild restriction show additive guarantee logarithmic width polytope algorithm based variant convex program maximizing nash social welfare differ significantly previous work used guarantee meaningful even fewer element number agent far aware work first approximate core indivisible setting
ComputerScience,towards largescale deliberative decisionmaking small group importance triad,though deliberation critical component democratic decisionmaking existing deliberative process scale large group people motivated propose model largescale decisionmaking take place sequence small group interaction model considers group participant opinion together form graph show median graph class graph including grid tree possible use small number threeperson interaction tightly approximate wisdom crowd defined generalized median participant opinion even agent strategic interestingly also show sharply contrast small group size two prove impossibility result specifically show impossible use sequence twoperson interaction satisfying natural axiom find tight approximation generalized median even agent nonstrategic result demonstrate potential small group interaction reaching global decisionmaking property
ComputerScience,core participatory budgeting problem,participatory budgeting community collectively decide allocation public tax dollar local public project work consider question fairly aggregating preference community member determine allocation fund project problem different standard fair resource allocation public good allocated good benefit user simultaneously fairness crucial participatory decision making since generating equitable outcome important goal process argue classic game theoretic notion core capture fairness setting compute core first develop novel characterization public good market equilibrium called lindahl equilibrium always core solution provide first knowledge polynomial time algorithm computing equilibrium broad set utility function algorithm also generalizes nontrivial way wellknown concept proportional fairness use theoretical insight perform experiment real participatory budgeting voting data empirically show core efficiently computed utility function naturally model practical setting examine relation core familiar welfare objective finally address concern incentive mechanism design developing randomized approximately dominantstrategy truthful mechanism building exponential mechanism differential privacy
ComputerScience,decentralized collaborative knowledge management using git,world wide web semantic web designed network distributed service datasets distributed character web brings manifold collaborative possibility interchange data commonly adopted collaborative solution rdf data centralized eg sparql endpoint wiki system support distributed collaboration system needed support divergence datasets brings possibility conflate diverged state allows distributed datasets synchronized paper present quit store inspired build upon successful git system approach based formal expression evolution consolidation distributed datasets collaborative curation process system automatically version rdf dataset track provenance information also provides support branch merge synchronize distributed rdf datasets merging process guarded specific merge strategy rdf data finally use reference implementation show overall good performance demonstrate practical usability system
ComputerScience,geometry similarity search dimensionality curse concentration measure,suggest curse dimensionality affecting similaritybased search large datasets manifestation phenomenon concentration measure highdimensional structure prove certain geometric assumption query domain omega dataset x omega satisfies socalled concentration property query point xast ball radius dx xast centred xast contains either point x else least dx xast distance xast nearest neighbour x n dimension omega
ComputerScience,weighted unsupervised learning object detection,paper introduces novel weighted unsupervised learning object detection using rgbd camera technique feasible detecting moving object noisy environment captured rgbd camera main contribution paper realtime algorithm detecting object using weighted clustering separate cluster preprocessing step algorithm calculates pose position x z rgb color data point calculates data point normal vector using point neighbor preprocessing algorithm calculates kweights data point weight indicates membership resulting clustered object scene
ComputerScience,tracking emerges colorizing video,use large amount unlabeled video learn model visual tracking without manual human supervision leverage natural temporal coherency color create model learns colorize grayscale video copying color reference frame quantitative qualitative experiment suggest task cause model automatically learn track visual region although model trained without groundtruth label method learns track well enough outperform latest method based optical flow moreover result suggest failure track correlated failure colorize indicating advancing video colorization may improve selfsupervised visual tracking
ComputerScience,anatomy largescale distributed graph algorithm,increasing complexity softwarehardware stack modern supercomputer result explosion parameter performance analysis becomes truly experimental science even challenging presence massive irregularity data dependency analyze existing body research handle experimental aspect context distributed graph algorithm dgas distinguish algorithmlevel contribution often prioritized author runtimelevel concern harder place show runtime integral part dgas experimental result difficult interpret extrapolate without understanding property runtime used argue order gain understanding impact runtimes information need gathered begin process provide initial set recommendation describing dga result based analysis current state field
ComputerScience,touché towards ideal efficient cache compression mitigating tag area overhead,compression seen simple technique increase effective cache capacity unfortunately compression technique either incur tag area overhead restrict data placement include neighboring compressed cache block mitigate tag area overhead ideally able place arbitrary compressed cache block without placement restriction tag area overhead paper proposes touch e framework enables storing multiple arbitrary compressed cache block within physical cacheline without tag area overhead touch e framework consists three component first component called signature sign engine creates shortened signature tag address compressed block due sign engine store multiple signature tag entry cache access physical cacheline accessed signature match negligible probability false positive second component called tag appended data tada mechanism store full tag address data tada enables touch e detect false positive signature match ensuring actual tag address available comparison third component called superblock marker smark mechanism us unique marker tag entry indicate occurrence compressed cache block neighboring physical address cacheline touch e completely hardwarebased achieves average speedup ideal compared uncompressed baseline
ComputerScience,modern multicore cpu energy proportional opportunity biobjective optimization performance energy,energy proportionality key design goal followed architect modern multicore cpu one implication optimization application performance also optimize energy work show energy proportionality hold true multicore cpu finding creates opportunity biobjective optimization application performance energy propose study first applicationlevel method biobjective optimization multithreaded dataparallel application performance energy method us two decision variable number identical multithreaded kernel threadgroups executing application number thread threadgroup workload always partitioned equally threadgroups experimentally demonstrate efficiency method using four highly optimized multithreaded dataparallel application fast fourier transform based fftw intel mkl dense matrixmatrix multiplication using openblas intel mkl four modern multicore cpu used experiment experiment show optimization performance alone result increase dynamic energy consumption optimization dynamic energy alone degrades performance solving biobjective optimization problem method determines globally paretooptimal solution finally propose qualitative dynamic energy model employing performance monitoring counter parameter use explain discovered energy nonproportionality paretooptimal solution determined method model show energy nonproportionality case due activity data translation lookaside buffer dtlb disproportionately energy expensive
ComputerScience,freeimu open hardware framework orientation motion sensing,orientation motion sensing widely implemented various consumer product mobile phone tablet camera enable immediate interaction virtual information prototyping phase orientation motion sensing capable device however quite difficult process may involve complex hardware designing math algorithm programming paper present freeimu open hardware framework prototyping orientation motion sensing capable device framework consists small circuit board containing various sensor software library built top arduino platform hardware library released open licence supported active community allowing implemented research commercial project
ComputerScience,proceeding workshop development implicit computational complexity workshop foundational practical aspect resource analysis,dice workshop explores area implicit computational complexity icc grew several proposal use logic formal method provide language complexitybounded computation eg ptime logspace computation aim studying computational complexity program without referring external measuring condition particular machine model considering language restriction logicalcomputational principle entailing complexity property fopara workshop serf forum presenting original research result relevant analysis resource eg time space energy consumption computer program workshop aim bring together researcher work foundational issue researcher focus practical result therefore theoretical practical contribution encouraged also encourage paper combine theory practice given complementarity synergy two community following successful experience colocation dicefopara london etaps hold two workshop together etaps take place uppsala sweden provided proceeding collect paper accepted workshop
ComputerScience,implicit recursive characteristic stop,important notation communicating sequential process csp process prefix event rightarrow process operator formally apply rightarrow operator define live process behavior stop process usually resulted deadlock starving livelock lack formal description defined literature nothing halt paper argue stop process considered black box follow prefix rightarrow schema inference rule unified consistent process algebra model established order achieve goal introduce special event called nil process take nil event nothing meaningful leave nothing process observable record nil event welldefined rule successfully use rightarrow operator formally describe process complete behavior whole life circle interestingly use prefix rightarrow nil event fully describe stop process internal behavior conclude stop formal equation given simple stop alpha x mu x nil rightarrow x
ComputerScience,bijective transformation simplification yang uml,software defined networking currently revolutionizing computer networking decoupling network control control plane forwarding function data plane enabling network control become directly programmable underlying infrastructure abstracted application network service next wellknown openflow protocol xmlbased netconf protocol also important mean exchanging configuration information management platform nowadays even part openflow combination netconf yang corresponding protocol defines associated data structure supporting virtually network configuration protocol yang semantically rich language order facilitate familiarization relevant subject often visualized involve expert developer support daily work writing application make use yang order support process paper present novel approach optimize simplify yang data model assist discussion management implementation especially interface reduce complexity therefore defined bidirectional mapping yang uml developed tool render created uml diagram combine benefit use formal language yang automatically maintained uml diagram involve expert developer closing gap technically improved data model human readability
ComputerScience,topological data analysis made easy topology toolkit,tutorial present topological method analysis visualization scientific data user perspective topology toolkit ttk recently released opensource library topological data analysis topological method gained considerably popularity maturity last twenty year success story established method documented wide range application combustion chemistry astrophysics material science etc acquired simulated data posthoc insitu context reference textbook published topic tutorial ieee vi covered area recent year never software level user pointofview tutorial fill gap providing beginner introduction topological method practitioner researcher student lecturer particular instead focusing theoretical aspect algorithmic detail tutorial focus topological method useful practice concrete data analysis task segmentation feature extraction tracking tutorial describes detail achieve task ttk first introduction topological method application data analysis brief overview ttk main entry point end user namely paraview presented second overview ttk main feature given running example described detail showcasing access ttk feature via paraview python vtkc c third handson session concretely show use ttk paraview multiple representative data analysis task fourth usage ttk presented developer particular describing several example visualization data analysis project built top ttk finally feedback regarding usage ttk teaching platform topological analysis given presenter tutorial include expert topological method core author ttk well active user coming academia lab industry large part tutorial dedicated handson exercise rich material package including ttk preinstalls virtual machine code data demo video tutorial etc provided participant tutorial mostly target student practitioner researcher expert topological method interested using daily task also target researcher already familiar topological method interested using contributing ttk
ComputerScience,efficiently reclaiming space log structured store,log structured store us single write io number diverse noncontiguous page within large buffer instead using write io page separately requires page relocated every write page never updated place instead page dynamically remapped every write log structuring invented used initially file system today form log structuring used ssd controller ssd requires erasure large block page flash storage reused updateinplace requires storage outofdate page reclaimed garbage collected cleaned analyze cleaning performance introduce cleaning strategy us new way prioritize order stale page garbage collected cleaning strategy approximates optimal cleaning strategy simulation study confirm result analysis strategy significant improvement previous cleaning strategy
ComputerScience,cheryl birthday,present four logic puzzle solution joseph yeo designed cheryl birthday mike hartley came novel solution one hundred prisoner light bulb jonathan welton designed blind guess abby birthday han van ditmarsch barteld kooi authored puzzlebook one hundred prisoner light bulb contains knowledge puzzle also found webpage http personaluseshvdlightbulbhtml dedicated book
ComputerScience,predicting plan action twoplayer repeated game,artificial intelligence ai agent need interact ai agent human creating model associate help predict modeled agent action plan intention work introduces algorithm predict action plan intention repeated play game providing exploration algorithm form generative bayesian approach model designed robust algorithm learns cooperate associate matrix game action plan intention associated expert identified literature grouping expert accordingly thus predicting action plan intention based state probability two prediction method explored prisoner dilemma maximum posteriori map aggregation approach map accuracy performed best action prediction method predicted plan accuracy paired ttest show map performs significantly better aggregation predicting action without cheap talk intention explored based goal expert result show goal predicted precisely modeling obtained result show proposed bayesian approach well suited modeling agent twoplayer repeated game
ComputerScience,certified universal gathering algorithm oblivious mobile robot,present new algorithm problem universal gathering mobile oblivious robot starting initial configuration bivalent using number robot robot reach finite number step position known beforehand without relying common chirality give strong guaranty correctness algorithm proving formally correct using coq proof assistant knowledge first certified positive constructive result context oblivious mobile robot demonstrates effectiveness approach obtain new algorithm truly generic managability since amount developped code remains human readable
ComputerScience,towards blockchainbased robonomics autonomous agent behavior validation,decentralized trading market approach autonomous agent people consume produce service expanding opportunity reach goal look promising part fourth industrial revolution key component approach blockchain platform allows interaction agent via liability smart contract reliability service provider usually determined reputation model however solution warns future customer extent trust service provider case could execute previous liability correctly hand blockchain consensus protocol additionally include validation procedure detects incorrect liability execution order suspend payment transaction questionable service provider paper present validation methodology liability execution agentbased service provider decentralized trading market using model checking method based mathematical model finite state automaton temporal logic property interest demonstrate concept implemented methodology duckietown application moving autonomous mobile robot achieve mission goal following behavior validation end completed scenario
ComputerScience,composition conversation,musical programming language developed purely coding virtual instrument algorithmic composition although work domain musical query language music information retrieval little attempt unify principle musical programming query language cognitive natural language processing model would facilitate activity composition conversation present prototype framework called museci merges domain permitting scorelevel algorithmic composition text editor also supporting connectivity existing natural language processing framework
ComputerScience,sosrpl securing internet thing sinkhole attack using rpl protocolbased node rating ranking mechanism,internet thing iot internet scope established integration physical thing classify mutual thing physical thing created inventive perception signify digital world regarding physical thing related internet worth noting considering numerous theory upcoming prediction mostly require protected structure moreover risk several attack iots endowed particular routing disobedience called sinkhole attack owing distributed feature attack malicious node broadcast illusive information regarding routings impose route towards specific node neighboring node thus attract data traffic rpl routing protocol efficient lowenergy network standard routing protocol mainly employed sensor network iot protocol called sosrpl consisting two key section sinkhole detection first section rating ranking node rpl carried based distance measurement second section charge discovering misbehavior source within iot network average packet transmission rreq aptrreq technique assessed wide simulation performed within environment based result simulation indicated iot network behavior metric enhanced based detection rate falsenegative rate falsepositive rate packet delivery rate maximum throughput packet loss rate
ComputerScience,proceeding workshop synthesis,idea synthesis ie process automatically computing implementation specification recently gained lot momentum context software engineering reactive system design widely believed due complexityundecidability issue synthesis completely replace manual engineering assist process designing intricate piece code programmer find challenging help orchestrating task reactive environment synt workshop aim bring together researcher interested synthesis discus present ongoing mature work aspect automated synthesis application third iteration workshop took place vienna austria colocated international conference computer aided verification held context vienna summer logic july workshop included eight contributed talk four invited talk addition featured special session syntaxguided synthesis competition sygus syntcomp synthesis competition
ComputerScience,model integrate medical resource available time relationship verifiably correct executable medical best practice guideline model extended version,improving patient care safety ultimate objective medical cyberphysical system recent study show patient death rate significantly reduced computerizing medical best practice guideline recent data also show morbidity mortality emergency care directly caused delayed interrupted treatment due lack medical resource however medical guideline usually provide guidance medical resource demand manage potential unexpected delay resource availability medical resource temporarily unavailable safety property existing executable medical guideline model may fail may cause increased risk patient care paper present separately model jointly verify smjv architecture separately model medical resource available time relationship jointly verify safety property existing medical best practice guideline model resource model integrated smjv architecture allows medical staff effectively manage medical resource demand unexpected resource availability delay emergency care separated modeling approach also allows different domain professional make independent model modification facilitates management frequent resource availability change enables resource statechart reuse multiple medical guideline model simplified stroke scenario used case study investigate effectiveness validity smjv architecture case study indicates smjv architecture able identify unsafe property caused unexpected resource delay
ComputerScience,proceeding first workshop synthesis,volume contains proceeding first workshop synthesis synt workshop held held berkeley california june satellite event international conference computer aided verification cav synt aim bringing together providing open platform researcher interested synthesis
ComputerScience,ten diverse formal model cbtc automatic train supervision system,communicationsbased train control cbtc system metro signalling platform coordinate protect movement train within track station different station cbtc platform prominent role played automatic train supervision at system automatically dispatch route train within metro network among various function at need avoid deadlock situation ie case group train block context technology transfer study designed algorithm deadlock avoidance train scheduling paper present case study algorithm applied case study encoded using ten different formal verification environment namely umc spin nusmvnuxmv cpn tool cadp tla uppaal prob based experience observe commonality difference among modelling language considered highlight impact specific characteristic language presented model
ComputerScience,model integrate medical resource availability verifiably correct executable medical guideline technical report,improving effectiveness safety patient care ultimate objective medical cyberphysical system recent study show patient death rate reduced computerizing medical guideline existing medical guideline model validated andor verified based assumption necessary medical resource needed patient care always available however reality medical resource special medical equipment medical specialist temporarily unavailable individual patient case safety property validated andor verified existing medical guideline model without considering medical resource availability may hold paper argues considering medical resource availability essential building verifiably correct executable medical guideline present approach explicitly separately model medical resource availability automatically integrate resource availability model existing statechartbased computerized medical guideline model approach requires minimal change existing medical guideline model take consideration medical resource availability validating verifying medical guideline model simplified stroke scenario used case study investigate effectiveness validity approach
ComputerScience,ohmf query based optimal healthcare medication framework,today cloud computing infrastructure largely deployed healthcare access various healthcare service easily internet needed basis main advantage healthcare cloud used tool patient medical professional insurance provider query coordinate among medical department organization healthcare related hub although healthcare cloud service enable better medication process high responsiveness privacy requirement patient need ensured process patient medical data may required medical professional hospital diagnostic center analysis diagnosis however data privacy service quality compromised word may exist various service provider corresponding specific healthcare service main challenge find appropriate provider comply best patient requirement paper propose query based optimal medication framework support patient healthcare service accessibility comprehensively considerable response time framework accepts related healthcare query natural language comprehensive userinterface process input query first order logic based evaluation engine find possible service satisfying requirement first order logic used modeling user requirement query query evaluation engine built using zchaff boolean logic satisfiability solver efficacy usability framework evaluated initial case study synthetic real life healthcare cloud
ComputerScience,capturing documenting visualizing search context building multimedia corpus,social science research multimedia document often collected answer particular research question like aesthetic property photo considered important web street art developed past year therefore researcher generally issue multiple query number search engine activity may span long time interval result collection analyzed documenting collection building process includes context carried search imperative social scientist reproduce research context documentation consists several user action search attribute like issued query result clicked saved duration particular result viewed set result displayed neither clicked saved well user annotation like comment tag work describe search process tracking module search history visualization module module integrated keyword based search system rest api developed help capture document revisit past search context building web corpus finally detail implementation module integrated platform multimedia search sharing application obtain resource various tool youtube bing flickr etc using keyword search
ComputerScience,multimodel investigative exploration social medium data boutique case study public health,present experience data science problem public health researcher use social medium twitter determine whether public show awareness hiv prevention measure offered public health campaign help researcher develop investigative exploration system called boutique allows user perform multistep visualization exploration data dashboard interface unique feature boutique includes ability handle heterogeneous type data provided polystore ability use computation part investigative exploration process paper present design boutique middleware walk investigation process reallife problem
ComputerScience,expert behavior question type efficient querybased ontology fault localization,challenge existing querybased ontology fault localization method wrt assumption make criterion optimize interaction mean use find efficiency depends largely behavior interacting expert performed calculation inefficient imprecise used optimization criterion often fully realistic remedy suggest novel simpler interaction approach overcomes identified problem comprehensive experiment faulty realworld ontology enables successful fault localization requiring fewer expert interaction case always least le expert waiting time compared existing method
ComputerScience,computação urbana da teoria à prática fundamentos aplicações e desafios,growing city resulted innumerable technical managerial challenge public administrator energy consumption pollution urban mobility even supervision private public space appropriate way urban computing emerges promising paradigm solve challenge extraction knowledge large amount heterogeneous data existing urban space moreover urban computing correlate urban sensing data management analysis provide service potential improve quality life citizen large urban center consider context chapter aim present fundamental urban computing step necessary develop application area achieve goal following question investigated namely main research problem urban computing ii technological challenge implementation service urban computing iii main methodology used development service urban computing iv representative application field
ComputerScience,algorithmic verification continuous hybrid system,provide tutorial introduction reachability computation class computational technique export verification technology toward continuous hybrid system open underdetermined system technique sometimes replace infinite number simulation
ComputerScience,tackling unit commitment load dispatch problem considering constraint evolutionary computation,unit commitment load dispatch problem important complex problem power system operation traditionally solved separately paper problem solved together without approximation simplification fact problem solved massive amount gridconnected photovoltaic unit four pumpstorage hydro plant energy storage unit ten thermal power plant set operation requirement need satisfied face complex constrained optimization problem adaptive repair method proposed including given repair method parameter optimized proposed adaptive repair method avoid bias repair choice moreover result repair method adapt problem improve together solution optimization experiment conducted revealing proposed method capable surpassing exact method solution simplified version problem approximation well solve otherwise intractable complete problem without simplification moreover since proposed approach applied problem general may obvious choose constraint handling certain constraint guideline provided explaining reasoning behind thus paper open possibility deal ever changing type generation unit similarly complex operationschedule optimization problem many difficult constraint
ComputerScience,case stale synchronous distributed model declarative recursive computation,large class traditional graph data mining algorithm concisely expressed datalog logicbased language aggregate allowed recursion fact bigdata algorithm difficult semantic issue raised use nonmonotonic aggregate recursion solved premappability prem property assures program aggregate recursion equivalent aggregatestratified program paper show bringing together formal abstract semantics stratified program efficient operational one unstratified program prem also facilitate improve parallel execution prove premoptimized lockfree decomposable parallel seminaive evaluation produce result single executor program therefore prem assimilated dataparallel computation plan different distributed system irrespective whether follow bulk synchronous parallel bsp asynchronous computing model addition show nonlinear recursive query evaluated using hybrid stale synchronous parallel ssp model distributed environment providing formal correctness proof recursive query evaluation prem relaxed synchronization model present experimental evidence benefit paper consideration acceptance theory practice logic programming tplp
ComputerScience,neuromorphic hardware selforganizing computing system,paper present selforganized neuromorphic architecture named soma objective study neuralbased selforganization computing system prove feasibility selforganizing hardware structure considering property emerge large scale fully connected neural map focus definition selforganizing hardware architecture based digital spiking neuron offer hardware efficiency biological point view corresponds combination socalled synaptic structural plasticity intend define computational model able simultaneously selforganize computation communication level want model hardwarecompliant fault tolerant scalable mean neurocellular structure
ComputerScience,succinct population protocol presburger arithmetic,angluin et al proved population protocol compute exactly predicate definable presburger arithmetic pa firstorder theory addition part result presented procedure translates formula varphi quantifierfree pa remainder predicate expressive power full pa population protocol text poly varphi state computes varphi precisely number state protocol exponential bit length largest coefficient formula number node syntax tree paper prove every formula varphi quantifierfree pa remainder predicate computable leaderless population protocol text poly varphi state proof based several new construction may independent interest given formula varphi quantifierfree pa remainder predicate first construction produce succinct protocol leader computes varphi completes work initiated constructed protocol fragment pa large enough input get rid leader input large enough small design another construction producing succinct protocol one leader computes varphi last construction get rid leader small input
ComputerScience,service oriented paradigm massive multiplayer online game,recent time massive multiplayer online game appeared computer game enables hundred player part world interact game world common platform time instance current architecture used mmogs based classic tightly coupled distributed system mmogs getting interactive time number interacting user increasing classic implementation architecture may raise scalability interdependence issue requires loosely coupled service oriented architecture support evolution mmog application data flow architecture event driven architecture client server architecture basic date orchestration approach used service oriented architecture real time service hottest issue service oriented architecture basic requirement real time service oriented architecture ensure quality service paper proposed service oriented architecture massive multiplayer online game specific middleware based open source dd mmogs fulfilling real time constraint
ComputerScience,use underspecified datatype semantics type safety lowlevel code,recent project operatingsystem verification c c data type often formalized using semantics fully specify precise byte encoding object wellknown underspecified datatype semantics used detect certain kind type error general however underspecified datatype semantics unsound assign welldefined meaning program undefined behavior according c c language standard precise characterization typecorrectness property enforced underspecified datatype semantics still missing paper identify strength weakness underspecified datatype semantics ensuring type safety lowlevel system code prove sufficient condition detect certain class type error finally identify tradeoff complexity underspecified datatype semantics typechecking capability
ComputerScience,visuallyaware fashion recommendation design generative image model,building effective recommender system domain like fashion challenging due high level subjectivity semantic complexity feature involved ie fashion style recent work shown approach visual recommendation egclothing art etc made accurate incorporating visual signal directly recommendation objective using offtheshelf feature representation derived deep network seek extend contribution showing recommendation performance significantly improved learning fashion aware image representation directly ie training image representation pixel level recommender system jointly contribution related recent work using siamese cnns though able show improvement stateoftheart recommendation technique bpr variant make use pretrained visual feature furthermore show model used emph generatively ie given user product category generate new image ie clothing item consistent personal taste represents first step towards building system go beyond recommending existing item product corpus used suggest style aid design new product
ComputerScience,universal attractor decomposition algorithm parity game,attractor decomposition metaalgorithm solving parity game given generalizes classic mcnaughtonzielonka algorithm recent quasipolynomial variant due parys lehtinen schewe wojtczak central concept studied exploited attractor decomposition dominia parity game ordered tree describe inductive structure attractor decomposition main technical result include embeddable decomposition theorem dominion separation theorem together help establish precise structural condition correctness universal algorithm suffices two ordered tree given algorithm input embed tree attractor decomposition largest dominia two player respectively universal algorithm yield mcnaughtonzielonka parys lehtinenschewewojtczak algorithm special case suitable universal tree given input main technical result provide unified proof correctness deep structural insight algorithm symbolic implementation universal algorithm also given improves symbolic space complexity solving parity game quasipolynomial time lg n achieved chatterjee dvov r k henzinger svozil lg n number vertex number distinct priority parity game exponentially improves dependence also entirely remove dependence n
ComputerScience,strahler number parity game,strahler number rooted tree largest height perfect binary tree minor strahler number parity game proposed defined smallest strahler number tree attractor decomposition proved parity game solved quasilinear space time polynomial number vertex n linear k number priority k strahler number complexity quasipolynomial strahler number logarithmic number vertex proof based new construction small strahleruniversal tree shown strahler number parity game robust parameter coincides alternative version based tree progress measure register number defined lehtinen follows parity game solved quasilinear space time polynomial number vertex linear k k register number significantly improves running time space achieved parity game bounded register number lehtinen parys running time algorithm based small strahleruniversal tree yield novel tradeoff k cdot lg dk log n two natural parameter measure structural complexity parity game allows solving parity game polynomial time includes special case asymptotic setting parameter covered result calude jain khoussainov li stephan jurdzinski lazi c lehtinen significantly extends range setting example oleft sqrt lg n right k left sqrt lg n right
ComputerScience,aibench industry standard internet service ai benchmark suite,today internet service undergoing fundamental change shifting intelligent computing era ai widely employed augment service context many innovative ai algorithm system architecture proposed thus importance benchmarking evaluating rise however modern internet service adopt microservicebased architecture consist various module diversity module complexity execution path massive scale complex hierarchy datacenter infrastructure confidential issue data set workload pose great challenge benchmarking paper present first industrystandard internet service ai benchmark suite aibench seventeen industry partner including several top internet service provider aibench provides highly extensible configurable flexible benchmark framework contains loosely coupled module identify sixteen prominent ai problem domain like learning rank form ai component benchmark three important internet service domain search engine social network ecommerce far comprehensive ai benchmarking effort basis aibench framework abstracting realworld data set workload one top ecommerce provider design implement first endtoend internet service ai benchmark contains primary module critical path industry scale application scalable deploy different cluster scale specification source code performance number publicly available benchmark council web site http wwwbenchcouncilorgaibenchindexhtml
ComputerScience,dragon computation graph virtual machine based deep learning framework,deep learning made great progress year however still difficult master implement various model different researcher may release code based different framework interface paper proposed computation graph based framework aim introduce wellknown interface help lot reproducing newly model transplanting model implemented framework additionally implement numerous recent model covering computer vision nature language processing demonstrate framework suffer modelstarving much easier make full use work already done
ComputerScience,simulating spiking neural p system without delay using gpus,present paper work regarding simulating type p system known spiking neural p system snp system using graphic processing unit gpus gpus architectural optimization parallel computation wellsuited highly parallelizable problem due advent general purpose gpu computing recent year gpus limited graphic video processing alone include computationally intensive scientific mathematical application well moreover p system including snp system inherently maximally parallel computing model whose inspiration taken functioning dynamic living cell particular snp system try give modest formal representation special type cell known neuron interaction one another nature snp system allowed representation matrix crucial step simulating highly parallel device gpus highly parallel nature snp system necessitate use hardware intended parallel computation simulation algorithm design consideration implementation presented finally simulation result observation analysis using snp system generates number mathbb n discussed well recommendation future work
ComputerScience,multiview image curve drawing,reconstructing scene multiple view made impressive stride recent year chiefly correlating isolated feature point intensity pattern curvilinear structure general setting without controlled acquisition abundant texture curve surface following specific model limiting scene complexity method produce unorganized point cloud mesh voxel representation exception producing unorganized cloud curve fragment ideally many application require structured representation curve surface spatial relationship paper present step direction formulating approach combine image curve collection curve topological connectivity represented graph result drawing complementary surface representation sense scaffold complement tent taut evaluate result truth synthetic real datasets
ComputerScience,shape complementarity analysis object arbitrary shape,basic problem shape complementarity analysis appears fundamental application diverse mechanical design assembly automation robot motion planning micro nanofabrication proteinligand binding rational drug design however current challenge lie lack general mathematical formulation applies object arbitrary shape propose measure shape complementarity obtained extent approximate overlap shape skeleton spacecontinuous implicit generalization skeleton called skeletal density function sdf defined euclidean space contains individual assembly partner sdf shape descriptor capture essential feature relevant proper contact alignment considerably robust conventional explicit skeletal representation express shape complementarity score convolution individual sdfs problem break global optimization score configuration space spatial relation efficiently implemented using fast fourier transforms ffts nonequispaced sample demonstrate effectiveness scoring approach several example peginhole alignment complex example mechanical assembly protein docking show proposed method reliable inherently robust small perturbation effective steering gradientbased optimization
ComputerScience,generic primitive detection point cloud using novel minimal quadric fit,present novel effective method detecting primitive cluttered unorganized point cloud without axillary segmentation type specification consider quadric surface encapsulating basic building block environment plane sphere ellipsoid cone cylinder unified fashion moreover quadric allow u model higher degree freedom shape hyperboloid paraboloid could used nonrigid setting begin contributing two novel quadric fit targeting point set endowed tangent space information based upon idea aligning quadric gradient surface normal first formulation exact requires low four oriented point second fit approximates first reduces computational effort theoretically analyze fit rigor give algebraic geometric argument next reparameterizing solution devise new local hough voting scheme nullspace coefficient combined ransac reducing complexity three point best knowledge first method capable performing generic crosstype multiobject primitive detection difficult scene without segmentation extensive qualitative quantitative result show method efficient flexible well accurate
ComputerScience,cilantro lean versatile efficient library point cloud data processing,introduce cilantro opensource c library geometric generalpurpose point cloud data processing library provides functionality cover lowlevel point cloud operation spatial reasoning various method point cloud segmentation generic data clustering flexible algorithm robust local geometric alignment model fitting well powerful visualization tool accommodate kind workflow cilantro almost fully templated generic algorithm operate arbitrary data dimension time library easy use highly expressive promoting clean concise coding style cilantro highly optimized minimal set external dependency support rapid development performant point cloud processing software wide variety context
ComputerScience,sceneaware audio video,although camera ease capture panoramic footage remains challenging add realistic audio blend captured scene synchronized camera motion present method adding sceneaware spatial audio video typical indoor scene using conventional monochannel microphone speaker observe late reverberation room impulse response usually diffuse spatially directionally exploiting fact propose method synthesizes directional impulse response source listening location combining synthesized early reverberation part measured late reverberation tail early reverberation simulated using geometric acoustic simulation enhanced using frequency modulation method capture room resonance late reverberation extracted recorded impulse response carefully chosen time duration separate late reverberation early reverberation validation show synthesized spatial audio match closely recording using ambisonic microphone lastly demonstrate strength method several application
ComputerScience,representing scholarly claim internet digital library knowledge modelling approach,paper concerned tracking interpreting scholarly document distributed research community argue current approach document description current technological infrastructure particularly world wide web provide poor support task describe design digital library server enable author submit summary contribution claim document make relation literature describe knowledgebased web environment support emergence communityconstructed semantic hypertext service could provide assist interpretation idea document context literature discussion considers detail approach address usability issue associated knowledge structuring environment
ComputerScience,infrastructure enabled autonomy distributed intelligence architecture autonomous vehicle,multiple study illustrated potential dramatic societal environmental economic benefit significant penetration autonomous driving however current approach autonomous driving require automotive manufacturer shoulder primary responsibility liability associated replacing human perception decision making automation potentially slowing penetration autonomous vehicle consequently slowing realization societal benefit autonomous vehicle propose new approach autonomous driving rebalance responsibility liability associated autonomous driving traditional automotive manufacturer infrastructure player thirdparty player proposed distributed intelligence architecture leverage significant advancement connectivity edge computing recent decade partition driving function vehicle edge computer road side specialized thirdparty computer reside vehicle infrastructure becomes critical enabler autonomy infrastructure enabled autonomy iea concept traditional automotive manufacturer need shoulder responsibility liability comparable already today infrastructure thirdparty player share added responsibility liability associated autonomous functionality propose bayesian network model based framework assessing risk benefit distributed intelligence architecture additional benefit proposed architecture enables autonomy service still allowing private ownership automobile
ComputerScience,chained multistream network exploiting pose motion appearance action classification detection,general human action recognition requires understanding various visual cue paper propose network architecture computes integrates important visual cue action recognition pose motion raw image integration introduce markov chain model add cue successively resulting approach efficient applicable action classification well spatial temporal action localization two contribution clearly improve performance respective baseline overall approach achieves stateoftheart action classification performance jhmdb ntu rgbd datasets moreover yield stateoftheart spatiotemporal action localization result jhmdb
ComputerScience,soter runtime assurance framework programming safe robotics system,recent drive towards achieving greater autonomy intelligence robotics led high level complexity autonomous robot increasingly depend third party offtheshelf component complex machinelearning technique trend make challenging provide strong designtime certification correct operation address challenge present soter robotics programming framework two key component programming language implementing testing highlevel reactive robotics software integrated runtime assurance rta system help enable use uncertified component still providing safety guarantee soter provides language primitive declaratively construct rta module consisting advanced highperformance controller uncertified safe lowerperformance controller certified desired safety specification framework provides formal guarantee wellformed rta module always satisfies safety specification without completely sacrificing performance using higher performance uncertified component whenever safe soter allows complex robotics software stack constructed composition rta module uncertified component protected using rta module demonstrate efficacy framework consider realworld casestudy building safe drone surveillance system experiment simulation actual drone show soterenabled rta ensures safety system including untrusted thirdparty component bug deviate desired behavior
ComputerScience,proceeding international workshop parallel distributed method verification,international workshop parallel distributed method verification pdmc took place november eindhoven university technology conjunction formal method related event first time heading formal method week volume contains final workshop proceeding
ComputerScience,formal verification iterative lowpower floatingpoint multiplier redundant feedback,present formal verification lowpower floatingpoint multiplier multiplier operates iteratively feed back intermediate result redundant representation support sse instruction various precision block issuing new instruction design optimized lowpower operation constrained formal verification effort additional improvement implementation identified formal verification formal verification design also incorporates implementation clockgating control logic core verification effort based theorem proving additionally model checking used verify property floatingpoint scheduler relevant correct operation unit
ComputerScience,business negotiation definition language,target paper present industryready prototype software general game playing software also used central element experimental economics research interfacing gametheoretic library aidriven software testing algorithmic trade human behavior mining simulation strategic interaction software based domainspecific language electronic business business negotiation paper also contains many example prove power language
ComputerScience,open graph computational reasoning,present form algebraic reasoning computational object expressed graph edge describe flow data primitive operation represented vertex graph interface made halfedges edge drawn unconnected end enjoy rich compositional principle connecting graph along halfedges particular allows equation rewrite rule specified graph particular computational model encoded axiomatic set rule rule derived graphically rewriting used simulate dynamic computational system eg evaluating program input example model formalised way include traditional electronic circuit well recent categorical account quantum information
ComputerScience,formalization implementation algebraic method geometry,describe ongoing project formalization algebraic method geometry theorem proving wu method groebner base method implementation integration educational tool project includes formal verification algebraic method within isabellehol proof assistant development new opensource java implementation algebraic method project fillin gap still existing area eg lack formal link algebraic method synthetic geometry lack selfcontained implementation algebraic method suitable integration dynamic geometry tool enable new application theorem proving education
ComputerScience,recent enhancement,last several year seen major enhancement functionality largely driven request user community including utility common use makeevent mbe trust tag paper provide userlevel summary enhancement introduced release version may time workshop release version july roughly couple year later many feature particularly well known yet user could take advantage least change could affect existing proof effort change treat pair function member memberequal function
ComputerScience,dab content annotation receiver hardware control xml,digital audio broadcasting dab standard defines dynamic label data field holding information transmission content however information follow welldefined structure since designed carry text direct output display human interpretation pose problem machine interpretation dab content information desired extensible markup language xml developed allow welldefined structured machinetomachine exchange data computer network article proposes novel technique machineinterpretable dab content annotation receiver hardware control involving utilisation xml metadata transmitted dab frame
ComputerScience,conjecture memento shaping collective emotional perception future,large scale survey public mood costly often impractical perform however web awash material indicative public mood blog email web query inexpensive content analysis extensive corpus used ass public mood fluctuation work presented concerned analysis public mood towards future using extension profile mood state questionnaire extracted mood indicator email submitted futuremeorg web service allows user send email delivered later date result indicate longterm optimism toward future mediumterm apprehension confusion
ComputerScience,computing consensus curve,consider problem extracting accurate average ant trajectory many possibly inaccurate input trajectory contributed citizen scientist although many generic software tool motion tracking specific one insect tracking even untrained human much better task provided robust method computing average trajectory implemented tested several local one ant time global ant together method best performing algorithm us novel global method based finding edgedisjoint path antinteraction graph constructed input trajectory underlying optimization problem new interesting variant network flow even though problem nphard implemented two heuristic work well practice outperforming approach including best automated system
ComputerScience,enabling embodied analogy intelligent music system,present methodology aimed crossmodal machine learning us multidisciplinary tool method drawn broad range area discipline including music systematic musicology dance motion capture humancomputer interaction computational linguistics audio signal processing main task include adapting wisdomofthecrowd approach embodiment music dance performance create dataset music music lyric cover variety emotion applying audiolanguageinformed machine learning technique dataset identify automatically emotional content music lyric integrating motion capture data vicon system dancer performing music
ComputerScience,scheduling paralleltask job subject packing placement constraint,motivated modern parallel computing application consider problem scheduling paralleltask job heterogeneous resource requirement cluster machine job consists set task processed parallel however job considered completed task finish processing refer synchronization constraint assignment task machine subject placement constraint ie task processed subset machine processing time also machine dependent task scheduled machine requires certain amount resource machine duration processing machine process pack multiple task time however cumulative resource requirement task exceed machine capacity objective minimize weighted average job completion time problem subject synchronization packing placement constraint nphard prior theoretical result concern much simpler model case migration task among placementfeasible machine allowed propose preemptive algorithm approximation ratio special case one machine process task design algorithm improved approximation ratio finally case migration preemption allowed design algorithm approximation ratio algorithm use combination linear program relaxation greedy packing technique present extensive simulation result using real traffic trace demonstrate algorithm yield significant gain prior approach
ComputerScience,distributing exact algorithm maximum clique maximising costup,take existing implementation algorithm maximum clique problem modify distribute adhoc cluster machine goal achieve significant speedup performance minimal development effort ie maximum costup present simple modification stateoftheart exact algorithm maximum clique allows u distribute across many machine empirical study large hard benchmark show speedup order magnitude routine machine
ComputerScience,databright towards global exchange decentralized data ownership trusted computation,safe assume foreseeable future machine learning especially deep learning remain data computationhungry paper ask build global exchange everyone contribute computation data train next generation machine learning application present early running prototype databright system turn creation training example sharing computation investment mechanism unlike crowdsourcing platform contributor get paid submit data databright pay dividend whenever contributor data hardware used someone train machine learning model contributor becomes shareholder dataset created enable measurement usage computation platform contributor trust also necessary databright thus merges data market trusted computation market illustrate trusted computation enable creation ai market data point exact value paid creator databright allows data creator retain ownership contribution attache measurable value value data given utility subsequent distributed computation done databright computation market computation market allocates task subsequent payment pooled hardware lead creation decentralized ai cloud experiment show trusted hardware intel sgx added usual ml pipeline additional cost use setting orchestrate distributed computation enables creation computation market databright available download http
ComputerScience,dagwidth control flow graph application model checking,treewidth control flow graph arising structured program known six however control flow graph inherently directed make sense consider measure width digraph instead use socalled dagwidth show dagwidth control flow graph arising structured gotofree program three additionally also give linear time algorithm compute dag decomposition control flow graph one consequence result parity game hence mu calculus model checking problem known tractable graph bounded dagwidth solved efficiently practice control flow graph
ComputerScience,program repair stepwise correctness enhancement,relative correctness property program morecorrect another respect given specification whereas traditional definition absolute correctness divide candidate program two class correct incorrect relative correctness arranges candidate program richer structure partial ordering venue discus impact relative correctness program derivation program verification paper discus impact relative correctness program testing specifically argue remove fault program ought test new program relative correctness old program rather absolute correctness present analytical argument support position well empirical argument form small program whose fault removed stepwise manner relative correctness rise fault removal obtain correct program
ComputerScience,tree cpugpu taskparallel runtime explicit epoch synchronization,developed taskparallel runtime system called tree designed high performance cpugpu platform platform multiple cpu cilk workfirst principle underlies taskparallel application achieve performance workfirst poor fit gpus build upon workfirst create worktogether principle address specific strength weakness gpus worktogether principle extends workfirst stating overhead critical path paid entire system b work overhead paid cooperatively implemented tree runtime opencl experimentally evaluate tree application cpugpu platform
ComputerScience,resource sharing edge distributed bargainingtheoretic approach,growing demand edge computing resource particularly due increasing popularity internet thing iot distributed machinedeep learning application pose significant challenge one hand certain edge service provider esp may sufficient resource satisfy application according associated servicelevel agreement hand esp may additional unused resource paper propose resourcesharing framework allows different esp optimally utilize resource improve satisfaction level application subject constraint communication cost sharing resource across esp framework considers different esp objective utilizing resource thus resulting multiobjective optimization problem present n person emph nash bargaining solution nb resource allocation sharing among esp emph pareto optimality guarantee furthermore propose emph distributed primaldual algorithm obtain nb proving strongduality property hold resultant resource sharing optimization problem using synthetic realworld data trace show numerically proposed nb based framework enhances ability satisfy application resource demand also improves utility different esp
ComputerScience,multiagent safety verification using symmetry transformation,show symmetry transformation caching enable scalable possibly unbounded verification multiagent system symmetry transformation map solution solution show property used transform cached reachsets compute new reachsets hybrid multiagent model develop notion virtual system define symmetry transformation broad class agent model visit waypoint sequence using notion virtual system present prototype tool cachereach build cache reachtubes system way agnostic representation reachsets reachability analysis subroutine used experimental evaluation cachereach show saving safety verification computation time multiagent system linear nonlinear fixedwing aircraft model following sequence waypoints saving theoretical result illustrate potential benefit using symmetrybased caching safety verification multiagent system
ComputerScience,performance modeling dense linear algebra,well known behavior dense linear algebra algorithm greatly influenced factor like target architecture underlying library even problem size accurate prediction performance real challenge article interested creating accurate model given algorithm correctly ranking set equivalent algorithm according performance aware hierarchical structure dense linear algebra routine approach problem developing framework automatic generation statistical performance model blas lapack library allows u obtain prediction evaluating combining model demonstrate approach successful single multicore environment ranking algorithm also tuning parameter
ComputerScience,efficient spherical harmonic transforms aimed pseudospectral numerical simulation,paper report efficient algorithm spherical harmonic transform sht explicitly vectorized variation algorithm based gausslegendre quadrature discussed implemented shtns library includes scalar vector transforms main breakthrough achieve efficient onthefly computation legendre associated function even high resolution taking advantage specific property sht advanced capability current future computer allows u simultaneously significantly reduce memory usage computation time sht measure performance accuracy algorithm even though complexity algorithm implemented shtns n maximum harmonic degree transform perform much better third party implementation including lower complexity algorithm even truncation high shtns available http bitbucketorgnschaeffshtns open source software
ComputerScience,mrrrbased eigensolvers multicore processor supercomputer,real symmetric tridiagonal eigenproblem outstanding importance numerical computation arises frequently part eigensolvers standard generalized dense hermitian eigenproblems based reduction tridiagonal form solution algorithm multiple relatively robust representation mrrr short introduced late among fastest method compute k eigenpairs real nbyn tridiagonal mrrr requires kn arithmetic operation contrast practical method require n operation worst case thesis center around performance accuracy mrrr
ComputerScience,study influence caching sequence dense linear algebra kernel,universally known caching critical attain high performance implementation many situation data locality space time play bigger role optimizing number arithmetic floating point operation paper show evidence least linear algebra algorithm caching also crucial factor accurate performance modeling performance prediction
ComputerScience,elaps framework experimental linear algebra performance study,optimal use computing resource requires extensive coding tuning benchmarking boost developer productivity time consuming task introduce experimental linear algebra performance study framework elaps multiplatform open source environment fast yet powerful performance experimentation dense linear algebra kernel algorithm library elaps allows user construct experiment investigate performance efficiency vary depending factor caching algorithmic parameter problem size parallelism experiment designed either python script specialized gui run whole spectrum architecture ranging laptop cluster accelerator supercomputer resulting experiment report provide various metric statistic analyzed numerically visually demonstrate use elaps four concrete application scenario many computing environment illustrating practical value supporting critical performance decision
ComputerScience,scaling structured multigrid core coarsegrid redistribution,efficient solution sparse linear system resulting discretization partial differential equation crucial performance many physicsbased simulation algorithmic optimality multilevel approach common discretizations make good candidate efficient parallel solver yet modern architecture highperformance computing system continue challenge parallel scalability multilevel solver algebraic multigrid method robust solving variety problem increasing importance data locality cost data movement modern architecture motivates need carefully exploit structure problem robust logically structured variational multigrid method black box multigrid boxmg maintain structure throughout multigrid hierarchy avoids indirection increased coarsegrid communication cost typical parallel algebraic multigrid nevertheless parallel scalability structured multigrid challenged coarsegrid problem overhead communication dominates computation paper algorithm introduced redistributing coarsegrid problem incremental agglomeration guided predictive performance model algorithm provides robust redistribution decision structured multilevel solver twodimensional diffusion problem used demonstrate significant gain performance algorithm previous approach used agglomeration one processor addition parallel scalability approach demonstrated two largescale computing system solves core
ComputerScience,hermitelike basis faster matrixfree evaluation interior penalty discontinuous galerkin operator,work proposes basis improved throughput matrixfree evaluation discontinuous galerkin symmetric interior penalty discretizations hexahedral element basis relies idea hermite polynomial used fully discontinuous setting higher order continuity minimize effective stencil width namely limit neighbor access element one data point function value one derivative basis extended higher order nodal contribution derived root jacobi polynomial extended multiple dimension tensor product enable use sum factorization beneficial effect reduced data access modern processor shown furthermore viability basis context multigrid solver analyzed plain pointjacobi approach le efficient best nodal polynomial basis change via sumfactorization technique enables combination fast matrixvector product effective multigrid constituent basis change essentially free modern hardware computation hidden behind cost data access
ComputerScience,expressing monitoring oscillatory dynamic,express temporal property densetime realvalued signal signal temporal logic stl defined maler et al work presented monitoring algorithm deciding satisfiability stl formula finite discrete sample continuous signal logic used express analyse biological system expressive enough sufficiently distinguish oscillatory property important biology paper define extended logic stl stl augmented signalvalue freezing operator allowing u express distinguish detailed property biological oscillation logic supported monitoring algorithm prototyped matlab monitoring procedure stl evaluated biologicallyrelevant case study
ComputerScience,firstorder logic modality intensionality,contemporary use term intension derives traditional logical fregerussell doctrine idea logic formula extension intension montague point view meaning idea considered particular extension different possible world paper analyze minimal intensional semantic enrichment syntax fol language unification different view tarskian extensional semantics fol modal interpretation quantifier derivation tarskian theory truth unified semantic theory based single meaning relation show modal predicate logic intensional equivalent modal kripke interpretation logic quantifier fol result particular pure extensional modal predicate logic standard tarskian semantics fol minimal intensional enrichment obtained adopting theory property relation proposition prp universe domain fol composed particular universal concept twostep interpretation fol eliminates weak point montague intensional semantics differently bealer intensional fol show necessary introduction intensional abstraction order obtain full intensional property fol final result paper represented commutative homomorphic diagram hold given possible world new intensional fol free algebra fol syntax toward intensional algebra concept successively new extensional relational algebra different cylindric algebra show corresponds tarski interpretation standard extensional fol possible world
ComputerScience,messagepassing algorithm multiagent trajectory planning,describe novel approach computing collisionfree emph global trajectory p agent specified initial final configuration based improved version alternating direction method multiplier admm compared existing method approach naturally parallelizable allows incorporating different cost functionals minor adjustment apply method classical challenging instance observe computational requirement scale well p several cost functionals also show specialization algorithm used em local motion planning solving problem joint optimization velocity space
ComputerScience,algorithmic metatheorem directed treewidth,notion directed treewidth introduced johnson robertson seymour thomas journal combinatorial theory series b vol first step towards algorithmic metatheory digraph showed npcomplete property hamiltonicity decided polynomial time digraph constant directed treewidth nevertheless despite one decade intensive research list hard combinatorial problem known solvable polynomial time restricted digraph constant directed treewidth remained scarce work enrich list providing first time algorithmic metatheorem connecting monadic second order logic graph directed treewidth show known positive algorithmic result digraph constant directed treewidth reformulated term metatheorem additionally show use metatheorem provide polynomial time algorithm two class combinatorial problem yet studied context directed width measure precisely fixed k w mathbb n show count polynomial time digraph directed treewidth w number minimum spanning strong subgraphs union k directed path number maximal subgraphs union k directed path satisfy given minor closed property prove metatheorem devise two technical tool believe independent interest first introduce notion treezigzag number digraph new directed width measure constant time directed treewidth second introduce notion z saturated tree slice language new formalism specification manipulation infinite set digraph
ComputerScience,parameterized complexity result petri net,associate graph petri net study parameterized complexity various problem parameter derived graph treewidth parameter give w hardness result many problem petri net corollary prof conjecture downey et al hardness graph pebbling problem consider parameter benefit depth known helpful getting better algorithm general petri net give w hardness result various problem petri net also consider stronger parameter vertex cover number combining well known automatatheoretic method powerful fixed parameter tractability fpt result integer linear programming give fpt algorithm model checking monadic second order mso formula petri net parameter vertex cover number size formula
ComputerScience,efficient algorithm checking fast termination vas,vector addition system state vas consists finite state space equipped counter transition every counter incremented decremented left unchanged vas provide fundamental model analysis concurrent process parametrized system also used abstract model program bound analysis termination basic liveness property asks qualitative question whether given model always terminates general quantitative question asks bound number step termination realm quantitative bound fundamental problem obtain asymptotic bound termination time large asymptotic bound exponential higher already suggest either error modeling model useful practice hence focus polynomial asymptotic bound vas wellknown approach eg lexicographic ranking function neither sound complete respect polynomial bound approach present sound method upper bound work main contribution follows first linear asymptotic bound present sound complete method vas moreover algorithm run polynomial time second classify vas according normal vector cycle show singularity normal key reason asymptotic bound exponential nonelementary vas absence singularity show asymptotic complexity bound always polynomial form theta nk k leq present algorithm time complexity polynomial size vas exponential dimension compute optimal k
ComputerScience,optimal label splitting embedding lts arbitrary petri net reachability graph npcomplete,given labelled transition system lts synthesis task find unlabelled petri net isomorphic reachability graph even demanding embedding reachability graph instead isomorphism solution guaranteed case label splitting option ie relabelling edge lts differently labelled edge remain different appropriate label splitting always obtain solution synthesis embedding problem using label splitting construct labelled petri net intended bahaviour eg embedding given lts reachability graph labelled petri net large number transition optimisation may desired limiting number label produced label splitting show limitation turn problem solvable polynomial time npcomplete problem
ComputerScience,three new complexity result resource allocation problem,prove following result task allocation indivisible resource problem finding leximinmaximal resource allocation p agent maxutility function atomic demand deciding whether resource allocation paretooptimal conpcomplete agent additive utility function deciding whether exists paretooptimal envyfree resource allocation agent additive utility function
ComputerScience,hard manipulation problem,one possible escape gibbardsatterthwaite theorem computational complexity example nphard compute stv rule manipulated however increasing concern result may ect difficulty manipulation practice tutorial survey recent result area
ComputerScience,dominating manipulation voting partial information,consider manipulation problem manipulator partial information vote nonmanipulators partial information described information set set profile nonmanipulators indistinguishable manipulator given information set dominating manipulation nontruthful vote manipulator cast make winner least preferable sometimes preferable winner manipulator vote truthfully manipulator full information computing whether exists dominating manipulation p many common voting rule known result show manipulator information dominating manipulation many common voting rule manipulator information represented partial order small portion preference unknown computing dominating manipulation nphard many common voting rule result thus throw light whether prevent strategic behavior limiting information vote voter
ComputerScience,manipulability single transferable vote,many voting rule nphard compute successful manipulation however nphardness bound worstcase complexity recent theoretical result suggest manipulation may often easy practice study empirically cost manipulating single transferable vote stv rule one first rule shown nphard manipulate also appears one harder rule manipulate since involves multiple round since unlike many rule nphard single agent manipulate without weight vote uncertainty agent voted almost every election experiment easy compute single agent could manipulate election prove manipulation single agent impossible remains interesting open question manipulation coalition agent hard compute practice
ComputerScience,computational social choice computational complexity bffs,discus connection computational social choice comsoc computational complexity stress work far urge continued focus two lessrecognized aspect connection firstly much twoway street everyone know complexity classification used comsoc also highlight benefit complexity arisen use comsoc secondly subtle lessknown complexity tool often productively used comsoc
ComputerScience,finding traitor secure network using byzantine agreement,secure network rely upon player maintain security reliability however every player assumed total loyalty one must use method uncover traitor network use original concept byzantine general problem lamport formal byzantine agreement describe linial nd traitor secure network applying general faulttolerance method develop formal design secure network able uncover traitor amongst group player also propose method integrate system insecure channel new resiliency applied broadcast peertopeer secure communication system agent may traitor become unreliable due fault
ComputerScience,africaos using distributed proposalbased replicated state machine towards liberation berlin conference,berlin conference influenced way native african african diaspora live daily life france contractually control several resource generated continent africa herein lie technical proposal free africa financial economic agreement coerced upon continent century ago utilizing decentralized collaboration advanced technology africaos aos aim provide philosophical fundamental framework implementing simple distributed collaborative computer agreement amongst peer work also demonstrates algebra transaction use protocol privatization method tokenizing barter economy method design mechanism use implementing protocol behavior
ComputerScience,temporal viability regulation control affine system application mobile vehicle coordination timevarying motion constraint,controlled invariant set viability regulation dynamical control system played important role many control coordination application paper develop temporal viability regulation theory general dynamical control system particular control affine system timevarying viable set parameterized timevarying constraint function aim regulate dynamical control system invariant timevarying viable set temporal statedependent constraint enforced consider timevarying equality inequality constraint defining temporal viable set also present sufficient condition existence feasible control input control affine system developed temporal viability regulation theory applied mobile vehicle coordination
ComputerScience,programming adapteva epiphany networkonchip coprocessor,construction exascale computing system energy efficiency power consumption two major challenge lowpower high performance embedded system increasing interest building block large scale high performance system however extracting maximum performance system present many challenge various aspect hardware architecture programming model used need explored epiphany architecture integrates lowpower risc core mesh network promise gflopswatt processing efficiency however kb memory per ecore storing data code low level intercore communication support programming epiphany system present several challenge paper evaluate performance epiphany system variety basic compute communication operation guided data explore strategy implementing scientific application memory constrained lowpowered device epiphany future system expected house thousand core single chip merit architecture path exascale compared competing system
ComputerScience,efficient realization given rotation algorithmarchitecture codesign acceleration qr factorization,present efficient realization generalized given rotation ggr based qr factorization achieves better performance term gflopswatt stateoftheart realization multicore general purpose graphic processing unit gpgpus ggr improvement classical given rotation gr operation annihilate multiple element row column input matrix simultaneously ggr take lesser multiplication compared gr custom implementation ggr identify macro operation ggr realize reconfigurable datapath rdp tightly coupled pipeline processing element pe pe ggr attains speedup modified householder transform mht presented literature parallel realization ggr use redefine scalable massively parallel coarsegrained reconfigurable architecture show speedup attained commensurate hardware resource redefine ggr also outperforms general matrix multiplication gemm interms gflopswatt counterintuitive
ComputerScience,programming language scientific computing,scientific computation discipline combine numerical analysis physical understanding algorithm development structured programming several yottacycles per year world largest computer spent simulating problem diverse weather prediction property material composite behavior biomolecules solution quantum nature chemical compound article intended review specfic language feature use computational science review strength weakness different programming style example taken widely used scientific code
ComputerScience,loopy fortran performance via transformation substitution rule,large amount numericallyoriented code written written legacy language much code could principle make good use dataparallel throughputoriented computer architecture loopy transformationbased programming system targeted gpus general dataparallel architecture provides mechanism usercontrolled transformation array program transformation capability designed apply program written specifically loopy also imported language fortran eas tradeoff achieving high performance portability programmability allowing user apply large growing family transformation input program transformation expressed used python may applied variety setting including pragmalike manner language
ComputerScience,protuner tuning program monte carlo tree search,explore applying monte carlo tree search mcts algorithm notoriously difficult task tuning program highperformance deep learning image processing build framework top halide show mcts outperform stateoftheart beamsearch algorithm unlike beam search guided greedy intermediate performance comparison partial le meaningful schedule mcts compare complete schedule look ahead making intermediate scheduling decision explore modification standard mcts algorithm well combining real execution time measurement cost model result show mcts outperform beam search suite real benchmark
ComputerScience,social information processing social news aggregation,rise social medium site blog wikis digg flickr among others underscore transformation web participatory medium user collaboratively creating evaluating distributing information innovation introduced social medium lead new paradigm interacting information call social information processing paper study social news aggregator digg exploit social information processing solve problem document recommendation rating first show tracking story time social network play important role document recommendation second contribution paper consists two mathematical model first model describes collaborative rating promotion story emerges independent decision made many user second model describes user influence number promoted story user social network change time find qualitative agreement prediction model user data gathered digg
ComputerScience,highly scalable multiplication distributed sparse multivariate polynomial manycore system,present highly scalable algorithm multiplying sparse multivariate polynomial represented distributed format algo rithm target shared memory multicore computer also computer cluster specialized hardware attached host computer graphic processing unit manycore coprocessors scal ability large number core ensured lack synchro nizations lock falsesharing main parallel step
ComputerScience,bringing together dynamic geometry software graphic processing unit,equip dynamic geometry software dg userfriendly method enables massively parallel calculation graphic processing unit gpu interplay dg gpu open various application education mathematical research gpuaided discovery mathematical property interactive visualization algebraic surface raycasting mathematical deformation image footage realtime computationally demanding numerical simulation pdes example long versatile list new domain approach make accessible within dg ease development complex mathematical visualization provide rapidprototyping scheme generalpurpose computation gpgpu possibility program cpu gpu use one highlevel scripting programming language crucial aspect concept embed shader programming seamlessly within highlevel scripting programming environment aforementioned requires symbolic process transcompilation highlevel programming language shader programming language gpu article address challenge automatic translation highlevel programming language shader language gpu maintain platform independence possibility use technology modern device focus realization webgl
ComputerScience,parallelization triangular decomposition polynomial system,discus parallelization algorithm solving polynomial system symbolically way triangular decomposition algorithm solving polynomial system combine lowlevel routine performing arithmetic operation polynomial highlevel procedure produce different component point curve surface solution set latter componentlevel parallelization triangular decomposition focus belongs class dynamic irregular parallel application possible speedup factor depend geometrical property solution set number component dimension degree algorithm scale number processor paper combine two different concurrency scheme forkjoin model producerconsumer pattern better capture opportunity componentlevel parallelization report implementation publicly available bpas library experimentation system yield promising result
ComputerScience,solving polynomial system phcpy,solution system polynomial several variable often needed eg design mechanical system phasespace analysis nonlinear biological dynamic reliable accurate comprehensive numerical solution available phcpack fo package solving polynomial system homotopy continuation paper explores new development phcpy scripting interface phcpack past five year instance phcpy available online jupyterhub server featuring sagemath kernel small system solved realtime phcpy suitable interactive exploration notebook interface meanwhile phcpy support gpu parallelization improving speed quality solution much larger polynomial system various model design analysis problem stem certain class polynomial system frequently arise phcpy wellsuited
ComputerScience,exact sparse matrixvector multiplication gpu multicore architecture,propose different implementation sparse matrix dense vector multiplication spmv finite field ring zbmzb take advantage graphic card processor gpu multicore architecture aim improve speed spmv linbox library henceforth speed black box algorithm besides use new parallelization sigmabasis algorithm parallel block wiedemann rank implementation finite field
ComputerScience,obtain realtime beat tracking audio signal,paper design system order perform realtime beat tracking audio signal use onset strength signal os detect onset estimate tempo form cumulative beat strength signal cbss taking advantage os estimated tempo next perform peak detection extracting periodic sequence beat among cbss peak simulation see proposed algorithm online beat tracking obtain outperforms stateofart result term prediction accuracy maintaining comparable practical computational complexity realtime performance tractable visually illustrated simulation
ComputerScience,multichannel unet music source separation,fairly straightforward approach music source separation train independent model wherein model dedicated estimating specific source training single model estimate multiple source generally perform well independent dedicated model however conditioned unet cunet us control mechanism train single model multisource separation attempt achieve performance comparable dedicated model propose multichannel unet munet trained using weighted multitask loss alternative cunet investigate two weighting strategy multitask loss dynamic weighted average dwa energy based weighting ebw dwa determines weight tracking rate change loss task training ebw aim neutralize effect training bias arising difference energy level source mixture method provide twofold advantage compared cunet fewer effective training iteration per epoch conditioning fewer trainable network parameter control parameter method achieve performance comparable cunet dedicated unets much lower training cost
ComputerScience,effect noisy label deep convolutional neural network music tagging,deep neural network dnn successfully applied music classification including music tagging however several open question regarding training evaluation analysis dnns article investigate specific aspect neural network effect noisy label deepen understanding property analyse validate large music tagging dataset investigate reliability training evaluation using trained network compute label vector similarity compared groundtruth similarity result highlight several important aspect music tagging neural network show network effective despite relatively large error rate groundtruth datasets conjecturing label noise cause varying tagwise performance difference lastly analysis trained network provides valuable insight relationship music tag result highlight benefit using datadriven method address automatic music tagging
ComputerScience,rbo protocol broadcasting huge database tiny receiver,propose protocol called rbo broadcasting long stream singlepacket message radio channel tiny battery powered receiver message labeled key linearly ordered set sender repeatedly broadcast sequence many possibly million message receiver interested reception message specified key within sequence transmission arranged receiver wake arbitrary moment find nearest transmission searched message even know position message sequence need receive small number header message locate properly thus save energy keeping radio switched time show bitreversal permutation recursive bisection property consequence rbo implemented efficiently constant number n bit variable n total number message sequence total number required reception n model perfect synchronization basic procedure rbo computation time slot next required reception requires n bitwise operation propose implementation mechanism realistic model imperfect synchronization operating system eg tinyos
ComputerScience,timdnn ternary inmemory accelerator deep neural network,use lower precision emerged popular technique optimize compute storage requirement complex deep neural network dnns quest lower precision recent study shown ternary dnns represent weight activation signed ternary value represent promising sweet spot achieving accuracy close fullprecision network complex task propose timdnn programmable inmemory accelerator specifically designed execute ternary dnns timdnn support various ternary representation including unweighted symmetric weighted asymmetric weighted b ternary system building block timdnn tim tile specialized memory array perform massively parallel signed ternary vectormatrix multiplication single access tim tile turn composed ternary processing cell tpcs bitcells function ternary storage unit signed ternary multiplication unit evaluate implementation timdnn technology using architectural simulator calibrated spice simulation rtl synthesis evaluate timdnn across suite stateoftheart dnn benchmark including deep convolutional recurrent neural network instance timdnn achieves peak performance top consumes power occupies chip area representing improvement topsw respectively compared nvidia tesla gpu comparison specialized dnn accelerator timdnn achieves improvement topsw respectively finally compared welloptimized nearmemory accelerator ternary dnns timdnn demonstrates improvement systemlevel energy speedup underscoring potential inmemory computing ternary dnns
ComputerScience,location privacy spatial crowdsourcing,spatial crowdsourcing sc new platform engages individual collecting analyzing environmental social spatiotemporal information sc requester outsource spatiotemporal task set worker perform task physically traveling task location chapter identifies privacy threat toward worker requester two main phase spatial crowdsourcing tasking reporting tasking process identifying task assigned worker process handled spatial crowdsourcing server scserver latter phase reporting worker travel task location complete task upload report scserver challenge enable effective efficient tasking well reporting sc without disclosing actual location worker least agree perform task task least worker assigned task chapter aim provide overview stateoftheart protecting user location privacy spatial crowdsourcing provide comparative study diverse set solution term task publishing mode push v pull problem focus tasking reporting threat server requester worker underlying technical approach pseudonymity cloaking perturbation exchangebased encryptionbased technique strength drawback technique highlighted leading discussion open problem future work
ComputerScience,taxonomy attack pattern information flow componentbased operating system,present taxonomy algebra attack pattern componentbased operating system multilevel security scenario isolation partition containing data different security classification primary security goal security breach mainly defined undesired disclosure modification classified data strict control information flow ultimate goal order prevent undesired information flow provide classification information flow type componentbased operating system possible pattern attack system systematic consideration information flow reveals specific type operating system covert channel covert physical channel connects two former isolated partition emitting physical signal computer environment receiving another interface
ComputerScience,fpgabased cnn inference accelerator synthesized multithreaded c software,deeplearning inference accelerator synthesized clanguage software program parallelized pthreads software implementation us wellknown producerconsumer model parallel thread interconnected fifo queue legup highlevel synthesis hl tool synthesizes thread parallel fpga hardware translating software parallelism spatial parallelism complete system generated convolution pooling padding realized synthesized accelerator remaining task executing embedded arm processor accelerator incorporates reduced precision novel approach zeroweightskipping convolution midsized intel arria soc fpga peak performance effective gop
ComputerScience,logic individual concept,extended abstract give brief outline connection description variable concept thus notion concept extended include syntax semantics feature evaluation map use parameterized kind computational environment index giving rise indexed concept concept inhabited language description higher order logic general idea objectasfunctor assist designer outline programming tool conceptual shell style
ComputerScience,polystore accelerated polystore system heterogeneous workload,modern realtime business analytic consist heterogeneous workload eg database query graph processing machine learning analytic application need programming environment capture aspect constituent workload including data model work movement data across processing engine polystore system suit application however system currently execute cpu slowdown moore law mean meet performance efficiency requirement modern workload envision polystore architecture accelerate existing polystore system using hardware accelerator eg fpgas cgras gpus polystore system achieve high performance low power identifying offloading component polystore system amenable acceleration using specialized hardware building polystore system challenging introduces new research problem motivated use hardware accelerator eg optimizing mapping query plan across heterogeneous computing unit exploiting hardware pipelining parallelism improve performance paper discus challenge detail list possible approach address problem
ComputerScience,rational trust modeling,trust model widely used various computer science discipline main purpose trust model continuously measure trustworthiness set entity based behavior article novel notion rational trust modeling introduced bridging trust management game theory note trust modelsreputation system used game theory eg repeated game long time however game theory utilized process trust model construction novelty approach come proposed setting designer trust model assumes player intend utilize model rationalselfish ie decide become trustworthy untrustworthy based utility gain word player incentivized penalized model act properly problem trust management approached game theoretical analysis solution concept nash equilibrium although rationality might builtin existing trust model intend formalize notion rational trust modeling designer perspective approach result two fascinating outcome first designer trust model incentivise trustworthiness first place incorporating proper parameter trust function later utilized among selfish player strategic trustbased interaction eg ecommerce scenario furthermore using rational trust model prevent many wellknown attack trust model two prominent property also help u predict behavior player subsequent step game theoretical analysis
ComputerScience,hybrid performance modelling opportunistic network,demonstrate modelling opportunistic network using process algebra stochastic hype network traffic modelled continuous flow contact node network modelled stochastically instantaneous decision modelled discrete event model describes network stationary video sensor mobile ferry collect data sensor delivers base station consider different mobility model different buffer size ferry case study illustrates flexibility expressive power stochastic hype also discus software enables u describe stochastic hype model simulate
ComputerScience,intensional cyberforensics,work focus application intensional logic cyberforensic analysis benefit difficulty compared finitestateautomata approach work extends use intensional programming paradigm modeling implementation cyberforensics investigation process backtracing event reconstruction evidence modeled multidimensional hierarchical context proof disproof claim undertaken eductive manner evaluation approach practical contextaware improvement finite state automaton fsa approach seen previous work base implementation language model use approach new dialect lucid programming language called forensic lucid focus defining hierarchical context based intensional logic distributed evaluation cyberforensic expression also augment work credibility factor surrounding digital evidence witness account previously modeled forensic lucid programming language used intensional cyberforensic analysis formally presented syntax operational semantics large part language based predecessor codecessor lucid dialect gipl indexical lucid lucx objective lucid jooip bound underlying intensional programming paradigm
ComputerScience,quantitative analysis chinese poetry tang song dynasty using changing color innovative term example,tang ad song dynasty two important period development chinese literary influential form poetry tang song shi ci respectively tang shi song ci established crucial foundation chinese literature influence literary work daily life chinese community last today analyze compare complete tang shi complete song ci various viewpoint presentation report finding difference vocabulary interesting new word started appear song ci continue used modern chinese identified color important ingredient imagery poetry discus frequent color word appeared tang shi song ci
ComputerScience,topic modeling reading writing behavior information forager,general problem information foraging environment agent incomplete information explored many field including cognitive psychology neuroscience economics finance ecology computer science area searcher aim enhance future performance surveying enough existing knowledge orient information space individual viewed conducting cognitive search must balance exploration idea novel exploitation knowledge domain already expert dissertation present several case study demonstrate reading writing behavior interact construct personal knowledge base study use lda topic modeling represent information environment text author read wrote three study revolve around charles darwin darwin left detailed record every book read year disembarking hm beagle publication origin specie additionally left copy draft publication characterize reading behavior show reading behavior interacted draft subsequent revision origin specie expand dataset include later reading writing study thomas jefferson correspondence expand study nonbook data finally examination neuroscience citation data move individual behavior collective behavior constructing information environment together study reveal interplay individual collective phenomenon innovation take place tria et al
ComputerScience,improved majoritylogic decoder offering massively parallel decoding realtime control embedded system,propose easytoimplement harddecision majoritylogic decoding algorithm reedmuller code rm r r presented algorithm outperforms best known majoritylogic decoding algorithm offer highly parallel decoding result special importance safety timecritical application embedded system simple combinational circuit perform proposed decoding particular show decoder threeerrorcorrecting code rm dimension length realized hardware level
ComputerScience,fieldprogrammable crossbar array fpca reconfigurable computing,decade advance electronics directly driven scaling cmos transistor according moore law however cmos scaling classical computer architecture approaching fundamental practical limit new computing architecture based emerging device resistive randomaccess memory rram device expected sustain exponential growth computing capability propose novel memorycentric reconfigurable general purpose computing platform capable handling explosive amount data fast energyefficient manner proposed computing architecture based uniform physical resistive memorycentric fabric optimally reconfigured utilized perform different computing data storage task massively parallel approach system tailored achieve maximal energy efficiency based data flow dynamically allocating basic computing fabric storage arithmetic analog computing including neuromorphic computing task
ComputerScience,spiking memristor logic gate type timevariant perceptron,memristors lowpower memoryholding resistor thought useful neuromophic computing compute via spikeinteractions mediated device shortterm memory using interacting spike possible build gate computes time similarly full adder built computes arithmetical sum input show gate understood modelling memristors novel type perceptron one sensitive input order memristor memory change input weight later input thus memristor gate accurately described single perceptron requiring either network timeinvarient perceptrons complex timevarying selfreprogrammable perceptron work demonstrates high functionality memristor logic gate also addition theasholding could enable creation standard perceptron hardware may use building neural net chip
ComputerScience,spinaps highperformance spintronic accelerator probabilistic spiking neural network,discus highperformance highthroughput hardware accelerator probabilistic spiking neural network snns based generalized linear model glm neuron us binary sttram device synapsis digital cmos logic neuron inference accelerator termed spinaps spintronic accelerator probabilistic snns implement principled direct learning rule firsttospike decoding without need conversion pretrained anns proposed solution shown achieve comparable performance equivalent ann handwritten digit human activity recognition benchmark inference engine spinaps shown software emulation tool achieve performance improvement term compared equivalent srambased design architecture leverage probabilistic spiking neural network employ firsttospike decoding rule make inference decision low latency achieving test performance algorithmic time step handwritten digit benchmark accelerator also exhibit competitive performance memristorbased dnnsnn accelerator stateoftheart gpus
ComputerScience,spiking logic route memristorbased computer,memristors suggested novel route neuromorphic computing based similarity neuron synapsis ion pump memristors dc action memristor current spike think fruitful building memristor computer paper introduce different logical assignation implement sequential logic memristor introduce physical rule summation bounceback directionality diminishing return elucidated investigation demonstrate memristor sequential logic work instantiating gate gate full adder single memristor full adder make use memristor memory add three binary value together output value carry digit even order input
ComputerScience,neuron inspired data encoding memristive multilevel memory cell,mapping neuroinspired algorithm sensor backplanes onchip hardware require shifting signal processing digital analog domain demanding memory technology beyond conventional cmos binary storage unit using memristors building analog data storage one promising approach amongst emerging nonvolatile memory technology recently memristive multilevel memory mlm cell storing discrete analog value developed memory system implemented combining memristors voltage divider configuration given example memory cell subcells memristor programmed store ternary bit overall achieved discrete voltage level however use proposed memory cell analog signal processing circuit data encoder required generate control voltage programming memristors store discrete analog value paper present design performance analysis data encoder generates write pattern signal level memristive memory
ComputerScience,ultracompact energyefficient neurocomputing platform based commercial flash memory,first contribution paper development extremely dense energyefficient mixedsignal vectorbymatrixmultiplication vmm circuit based existing flash memory block without need modification compatibility achieved using timedomainencoded vmm design detailed simulation shown example vmm vector using commercially available gateallaround macaronitype memory block designed technology node may provide unprecedented area efficiency energy efficiency fjop including inputoutput peripheral circuitry overhead second major contribution development multipurpose neuromorphic inference processor utilizes proposed block core processing unit performed rigorous performance simulation processor circuit system level taking account nonidealities draininduced barrier lowering capacitive coupling charge injection parasitics process variation noise modeling performing several stateoftheart neuromorphicnetwork benchmark shown may provide recordbreaking storage efficiency peak energy efficiency topsj computational throughput top storage efficiency improved sevenfold aggressively sharing vmm peripheral circuit cost slight decrease energy efficiency throughput
ComputerScience,shenjing low power reconfigurable neuromorphic accelerator partialsum spike networksonchip,next wave ondevice ai likely require energyefficient deep neural network braininspired spiking neural network snn identified promising candidate away need multiplier significantly reduces energy ondevice application besides computation communication also incurs significant amount energy time paper propose shenjing configurable snn architecture fully expose onchip communication software enabling software mapping snn model high accuracy low power unlike prior snn architecture like truenorth shenjing require model modification retraining mapping show conventional artificial neural network ann multilayer perceptron convolutional neural network well latest residual neural network mapped successfully onto shenjing realizing anns snn energy efficiency mnist inference problem using multilayer perceptron able achieve accuracy consuming using shenjing core
ComputerScience,improving dependability neuromorphic computing nonvolatile memory,process technology continues scale aggressively circuit aging neuromorphic hardware due negative bias temperature instability nbti timedependent dielectric breakdown tddb becoming critical reliability issue expected proliferate using nonvolatile memory nvm synaptic storage nvm requires high voltage current access synaptic weight accelerates circuit aging neuromorphic hardware current method qualifying reliability overly conservative since estimate circuit aging considering worstcase operating condition unnecessarily constrain performance paper proposes reneu reliabilityoriented approach map machine learning application neuromorphic hardware aim improving systemwide reliability without compromising key performance metric execution time application hardware fundamental reneu novel formulation aging cmosbased circuit neuromorphic hardware considering different failure mechanism using formulation reneu develops systemwide reliability model used inside designspace exploration framework involving mapping neuron synapsis hardware end reneu us instance particle swarm optimization pso generate mapping paretooptimal term performance reliability evaluate reneu using different machine learning application stateoftheart neuromorphic hardware nvm synapsis result demonstrate average reduction circuit aging leading average improvement lifetime hardware compared current practice reneu introduces marginal performance overhead compared performanceoriented stateoftheart
ComputerScience,security impersonation attack distributed system,multiagent system transitioning centralized distributed decisionmaking strategy introduce vulnerability adversarial manipulation study potential adversarial manipulation class graphical coordination game adversary pose friendly agent game thereby influencing decisionmaking rule subset agent adversary influence cascade throughout system indirectly influencing agent behavior significantly impacting emergent collective behavior main result paper focus characterizing condition adversary local influence dramatically impact emergent global behavior eg destabilize efficient nash equilibrium
ComputerScience,semimetric behavior document network application recommendation system,recommendation system different document network dn world wide web www digital library often use distance function extracted relationship among document keywords instance document www related via hyperlink network document bibliographic database related citation collaboration network furthermore document related keyterms distance function computed relation establish associative network among item dn referred distance graph allow recommendation system identify relevant association individual user however modern recommendation system need integrate associative data multiple source different database web site even user thus presented problem combining evidence association item different source characterized distance function paper describe work inferring relevant association well characterizing semimetric distance graph combining evidence different distance graph recommendation system regarding present idea semimetric distance graph introduce ratio measure semimetric behavior compute ratio several dn digital library web site show useful identify implicit association regarding describe algorithm combine evidence distance graph us evidence set set structure based interval valued fuzzy set dempstershafer theory evidence algorithm developed recommendation system named talkmine
ComputerScience,open source real time operating system overview,modern control system application often built top real time operating system rtos provides necessary hardware abstraction well scheduling networking service several open source rtos solution publicly available attractive economic licensing fee well technical control source code point view contribution give overview rtlinux rtems system architecture development environment api etc system feature popular cpu several apis including posix networking portability optional commercial support performance figure presented focusing interrupt latency context switching delay
ComputerScience,modeling input history program improved instructionmemory performance,program loaded memory execution relative position basic block crucial since loading basic block unlikely executed first place high instructionmemory hierarchy dislodged execution go paper study use bayesian network model input history program main point creation probabilistic model persists program run different input new input refines parameter order reflect program input history accurately model thus tuned cause basic block reordered upon arrival next input execution loading basic block memory automatically take account input history program report extensive experiment whose result demonstrate efficacy overall approach progressively lowering execution time program identical input placed randomly sequence varied input provide result selected spec program also evaluate approach compared gcc optimization pettishansen reordering
ComputerScience,market dead long live market,researcher long proposed using economic approach resource allocation computer system however proposal became operational let alone commercial question persist economic approach regarding assumption value applicability relevance system design goal paper answer question find marketbased resource allocation useful importantly mechanism design system design integrated produce system economically computationally efficient
ComputerScience,survey virtualization technique focusing secure ondemand cluster computing,virtualization technique used multiplex resource highpriced mainframe hardware seeing resurgence applicability increasing computing power commodity computer inserting layer software machine traditional operating system technology allows access shared computing medium manner secure resourcecontrolled efficient property attractive field ondemand computing finegrained subdivision resource provided virtualized system allows potentially higher utilization computing resource work survey number virtual machine system goal finding appropriate candidate serve basis ondemand secure cluster computing project national center supercomputing application contender reviewed number desirable property including portability security conclude comparison justification choice
ComputerScience,lowfootprint class loading mechanism embedded java virtual machine,paper show possible dramatically reduce memory consumption class loaded embedded java virtual machine without reducing functionality describe pack constant pool deleting entry used class loading process present benchmark demonstrate efficiency mechanism finally suggest additional optimization applied restriction functionality virtual machine tolerated
ComputerScience,executing binary several operating system,notice way execute binary file window elfbased system used create software installers application exceeding kilo byte
ComputerScience,poweraware realtime scheduling upon identical multiprocessor platform,paper address poweraware scheduling sporadic constraineddeadline hard realtime task using dynamic voltage scaling upon multiprocessor platform propose two distinct algorithm first algorithm offline speed determination mechanism provides identical speed processor speed guarantee deadline met job scheduled using edf second algorithm online adaptive speed adjustment mechanism reduces energy consumption system running
ComputerScience,exact feasibility test realtime scheduling periodic task upon multiprocessor platform,paper study global scheduling periodic task system upon multiprocessor platform first show two general property wellknown uniprocessor platform remain multiprocessor platform restrictive assumption show feasible schedule periodic task system periodic point period equal least common multiple task period ii specific case synchronous periodic task system show feasible schedule repeat origin present main result characterize tasklevel fixedpriority scheduler asynchronous constrained arbitrary deadline periodic task model upper bound first time instant schedule repeat show joblevel fixedpriority scheduler predictable upon unrelated multiprocessor platform tasklevel fixedpriority scheduler based upper bound predictability property provide asynchronous constrained arbitrary deadline periodic task set exact feasibility test finally joblevel fixedpriority edf scheduler upper bound remains unknown provide exact feasibility test well
ComputerScience,discrete frequency selection framebased stochastic realtime task,energyefficient realtime task scheduling actively explored past decade different past work paper considers schedulability condition stochastic realtime task schedulability condition first presented framebased stochastic realtime task several algorithm also examined check schedulability given strategy approach proposed based schedulability condition adapt continuousspeedbased method discretespeed system approach able stay close possible continuousspeedbased method still guaranteeing schedulability shown simulation energy saving system configuration
ComputerScience,k firm constraint dbp scheduling impact initial ksequence exact schedulability test,paper study scheduling k firm synchronous periodic task system using distance based priority dbp scheduler first show three phenomenon choosing task initial ksequence optimal ii even start scheduling fictive error state regard initial ksequence iii period feasible dbpschedules necessarily task hyperperiod show feasible dbpschedule periodic upperbound length period lastly based periodicity result provide exact schedulability test
ComputerScience,integrating job parallelism realtime scheduling theory,investigate global scheduling sporadic implicit deadline realtime task system multiprocessor platform provide task model integrates job parallelism prove timecomplexity feasibility problem system linear relatively number sporadic task fixed number processor propose scheduling algorithm theoretically optimal ie preemption migration neglected moreover provide exact feasibility utilization bound lastly propose technique limit number migration preemption
ComputerScience,controltheoretic dynamic voltage scaling embedded controller,microprocessor used realtime embedded system minimizing power consumption difficult due timing constraint dynamic voltage scaling dvs incorporated modern microprocessor promising technique exploring tradeoff energy consumption system performance however remains challenge realize potential dvs unpredictable environment system workload accurately known addressing systemlevel poweraware design dvsenabled embedded controller paper establishes analytical model dvs system encompasses multiple realtime control task model feedback control based approach power management developed reduce dynamic power consumption achieving good application performance approach unpredictability variability task execution time attacked thanks use feedback control theory predictable performance dvs system achieved favorable realtime application extensive simulation conducted evaluate performance proposed approach
ComputerScience,feedback scheduling eventdriven paradigm,embedded computing system today increasingly feature resource constraint workload variability lead uncertainty resource availability raise great challenge software design programming multitasking environment paper emerging methodology feedback scheduling introduced address challenge closedloop approach resource management feedback scheduling promise enhance flexibility resource efficiency various software program dynamically distributing available resource among concurrent task based feedback information actual usage resource emphasis behavioral design feedback scheduler describe general framework feedback scheduling context realtime control application simple yet illustrative feedback scheduling algorithm given programming perspective describe modify implementation control task facilitate application feedback scheduling eventdriven paradigm combine timetriggered eventtriggered approach proposed programming feedback scheduler simulation result argue proposed eventdriven paradigm yield better performance timetriggered paradigm dynamic environment workload varies irregularly unpredictably
ComputerScience,managing varying worst case execution time dvs platform,energy efficient realtime task scheduling attracted lot attention past decade time deterministic execution length task considered model fit le le reality especially increasing number multimedia application lot research starting consider stochastic model execution time known stochastically however author consider pretty much precise knowledge property system especially regarding worst case execution time worst case execution cycle wcec work try relax hypothesis assume wcec vary propose miscellaneous method react situation give many simulation result attesting small effort provide good result allowing keep low deadline miss rate well energy consumption similar clairvoyant algorithm
ComputerScience,multiprocessor global scheduling framebased dvfs system,ongoing work interested multiprocessor energy efficient system task duration known advance know stochastically precisely consider global scheduling algorithm framebased multiprocessor stochastic dvfs dynamic voltage frequency scaling system moreover consider processor discrete set available frequency
ComputerScience,mode change protocol multimode realtime system upon identical multiprocessor,paper propose synchronous protocol without periodicity scheduling multimode realtime system upon identical multiprocessor platform proposal considered multiprocessor extension uniprocessor protocol called minimal single offset protocol
ComputerScience,predictability fixedjob priority scheduler heterogeneous multiprocessor realtime system,multiprocessor fixedjob priority fjp scheduling realtime system studied important property schedulability analysis predictability regardless execution time studied heterogeneous multiprocessor platform main contribution show fjp scheduler predictable unrelated platform convenient consequence fact fjp scheduler predictable uniform multiprocessor
ComputerScience,new scheduling algorithm real time task,main objective paper develop two different way round robin architecture modified made suitable implemented real time embedded system scheduling algorithm play significant role design real time embedded system simple round robin architecture efficient implemented embedded system higher context switch rate larger waiting time larger response time missing deadline degrade system performance soft real time system main objective paper develop scheduling algorithm remove drawback simple round robin architecture comparison round robin architecture proposed architecture made observed proposed architecture solves problem encountered round robin architecture soft real time decreasing number context switch waiting time response time thereby increasing system throughput
ComputerScience,deterministic consistency programming model shared memory parallelism,difficulty developing reliable parallel software generating interest deterministic environment given program input yield one possible result language type system enforce determinism new code runtime system impose synthetic schedule legacy parallel code parallelize existing serial code however would like programming model naturally deterministic without language restriction artificial scheduling propose deterministic consistency parallel programming model easy understand parallel assignment construct sequential language perl javascript concurrent thread always read input writing shared output dc support common data taskparallel synchronization abstraction forkjoin barrier well nonhierarchical structure producerconsumer pipeline future preliminary prototype suggests softwareonly implementation dc run application written popular parallel environment openmp low overhead application
ComputerScience,fault tolerance real time multiprocessor embedded system,real time task termed critical task nature complete execution deadline even presence fault popularly used real time task assignment algorithm first fit ff best fit bf bin packing bp common task scheduling algorithm rate monotonic rm earliest deadline first edf etcall current approach deal either fault tolerance criticality real time paper proposed integrated approach new algorithm called sasa sorting sequential assignment map real time task assignment task schedule fault tolerance
ComputerScience,fifo anomaly unbounded,virtual memory computer usually implemented demand paging page replacement algorithm number page fault may increase number page frame increase belady nelson shedler constructed reference string page replacement algorithm fifo produce near twice page fault larger memory smaller one formulated conjecture general bound prove ratio arbitrarily large
ComputerScience,proficient pair replacement algorithm cache merge sort,memory hierarchy used compete processor speed cache memory fast memory used conduit speed difference memory processor access pattern level cache level cache different cpu get desired data access thus replacement algorithm work efficiently may efficient similarly various application matrix multiplication web fast fourier transform fft etc varying access pattern thus replacement algorithm type application may efficient paper work getting efficient pair replacement algorithm algorithm merge sort memory reference string merge sort analyzed behavior various existing replacement algorithm existing replacement algorithm taken consideration least recently used lru least frequently used lfu first first fifo analyzing memory reference pattern merge sort proposed partition based replacement algorithm cache furthermore analyzed various pair algorithm respectively resulting finding suitable pair replacement algorithm simulation show among considered existing replacement algorithm fifo performing better others proposed replacement algorithm working better fifo various cache size
ComputerScience,searching publication operating system,note concern search publication one find statement explain concept operating system reason introducing operating system formalization concept operating system theory operating system based formalization report way search carried outcome search outcome includes search meant also added bonus
ComputerScience,scheduling multimode realtime system upon uniform multiprocessor platform,paper address scheduling problem multimode realtime system upon uniform multiprocessor platform propose two transition protocol specified together schedulability test provide reader two distinct upper bound length transient phase mode transition respectively case job priority known unknown beforehand
ComputerScience,multicriteria evaluation partitioning scheme realtime system,paper study partitioning approach multiprocessor realtime scheduling approach seems easiest since partitioning task set done problem reduces well understood uniprocessor issue meanwhile optimal polynomial solution partition task processor paper analyze partitioning algorithm several point view given task set specific constraint processor number task set type etc able identify best heuristic best schedulability test also analyze influence heuristic performance uniprocessor test impact specific task order schedulability study performance difference fixed priority scheduler edf case partitioning scheduling also considered
ComputerScience,definition theoretical concept operating system,dwell definition theoretical concept operating system suitable incorporated mathematical theory operating system could look like considered valuable preparation development mathematical theory operating system
ComputerScience,perbandingan shell unix,possible information technology product mature stateoftheart time case unix system answer unqualified yes unix system continued develop past twentyfive year million installation running nearly every hardware platform made unix system earned reputation stability scalability year unix system supplier steadily assimilated new technology unix system today provide functionality operating system
ComputerScience,gang ftp scheduling periodic parallel rigid realtime task,paper consider scheduling periodic parallel rigid task provide prove correct exact schedulability test fixed task priority ftp gang scheduler subclass parallelism monotonic idling limited gang limited slack reclaiming additionally study predictability scheduler show gang fjp scheduler predictable identify several subclass actually predictable moreover extend definition rigid moldable malleable job recurrent task
ComputerScience,semipartitioned hard realtime scheduling restricted migration upon identical multiprocessor platform,algorithm based semipartitioned scheduling proposed viable alternative two extreme one based global partitioned scheduling particular allowing migration occur task assigned individual processor task assigned specific processor considerably reduces runtime overhead compared global scheduling one hand improve schedulability system utilization factor compared partitioned scheduling hand paper address preemptive scheduling problem hard realtime system composed sporadic constraineddeadline task upon identical multiprocessor platform propose new algorithm scheduling paradigm based concept semipartitioned scheduling restricted migration job allowed migrate two subsequent job task assigned different processor following periodic strategy
ComputerScience,use data mining scheduler optimization,operating system role computer system manage various resource one resource central processing unit managed component operating system called cpu scheduler scheduler optimized typical workload expected run platform however single scheduler may appropriate workload scheduler may schedule workload completion time minimized another type workload run platform scheduling therefore completion time optimal different scheduling algorithm different set parameter may work better several approach solving problem proposed objective survey summarize approach based data mining available literature addition solution directly utilized solving problem interested data mining research related area potential use operating system scheduling also explain general technical issue involved scheduling modern computer including parallel scheduling issue related multicore cpu propose taxonomy classifies scheduling approach discus different category
ComputerScience,sesame selfconstructive system energy modeling batterypowered mobile system,system energy model important energy optimization management mobile system however existing system energy model built lab help second computer laborintensive also adequately account great diversity hardware usage mobile system moreover existing system energy model intended energy estimation time interval one second longer provide required rate finegrain use perapplication energy accounting work study selfmodeling paradigm mobile system automatically generates energy model without external assistance solution sesame leverage possibility self power measurement smart battery interface employ suite novel technique achieve accuracy rate much higher smart battery interface report implementation evaluation sesame laptop smartphone experiment result show sesame generates system energy model accuracy one estimation per second accuracy one estimation per without external assistance fiveday field study four laptop four smartphones user demonstrate effectiveness efficiency noninvasiveness sesame
ComputerScience,customer appeasement scheduling,almost current process scheduling algorithm used modern operating system o root classical scheduling paradigm developed modern computer different type software load user demand think important run user want current moment user human sitting front desktop machine another machine sending request server network connection think o become intelligent distinguish different process allocate resource including cpu process need work first step make o aware current state system consider process dependency interprocess communication developing model considers need satisfy interactive user possible remote user customer making scheduling decision based process dependency interprocess communication simple proof concept implementation experiment show effectiveness approach real world application implementation require change software application special kind configuration system moreover require additional information cpu need application resource requirement experiment show significant performance improvement real world application example almost constant average response time mysql data base server constant frame rate mplayer different simulated load value
ComputerScience,application global onedimensional local optimization operating system scheduler tuning,paper describes study comparison global onedimensional local optimization method operating system scheduler tuning operating system scheduler use linux completely fair scheduler cf running simulator linsched ported hackbench scheduler benchmark simulator use workload global optimization approach use particle swarm optimization pso make use response surface methodology rsm specify optimal parameter pso implementation onedimensional local optimization approach use golden section method order use approach convert scheduler tuning problem one involving setting three parameter one involving manipulation one parameter result show global optimization approach yield better response one dimensional optimization approach converges solution faster global optimization approach
ComputerScience,dynamic scheduling skippable periodic task energy efficiency weakly hard realtime system,energy consumption critical design issue realtime system especially battery operated system maintaining high performance extending battery life charge interesting challenge system designer dynamic voltage scaling dvs allows processor dynamically change speed voltage run time thereby saving energy spreading run cycle idle time knowing use full power requires cooperation operating system scheduler usually higher processor voltage frequency lead higher system throughput energy reduction obtained using lower voltage frequency instead lowering processor voltage frequency much possible energy efficient realtime scheduling adjusts voltage frequency according optimization criterion low energy consumption high throughput meet timing constraint realtime task quantity functional complexity battery powered portable device continues raise energy efficient design device become increasingly important many realtime scheduling algorithm developed recently reduce energy consumption portable device use dvs capable processor three algorithm namely red task rto blue possible bwp red late possible rlp proposed literature schedule realtime task weaklyhard realtime system paper proposes optimal slack management algorithm make existing weakly hard realtime scheduling algorithm energy efficient using dvs dpd technique
ComputerScience,exact schedulability test globaledf scheduling periodic hard realtime task identical multiprocessor,paper consider scheduling problem hard realtime system composed periodic constraineddeadline task upon identical multiprocessor platform assume task scheduled using globaledf scheduler establish exact schedulability test scheduler exploiting one hand predictability property providing hand feasibility interval possible find valid schedule job contained interval whole system stamped feasible addition show mean counterexample feasibility interval thus schedulability test proposed leung leung incorrect show argument actually incorrect
ComputerScience,comparison loss ratio different scheduling algorithm,well known firm real time system renewal arrival process exponential service time independent identically distributed deadline till end service job earliest deadline first edf scheduling policy smaller loss ratio expected fraction job completed service time independent scheduling policy including first come first served fcfs various modification edf fcfs policy proposed literature view improving performance article compare loss ratio two policy along said modification well counterpart deterministic deadline result include formal inequality counterexample establish nonexistence order relation involving loss ratio posed conjecture simulation result support reported result lead complete picture dominance nondominance relation pair scheduling policy term loss ratio
ComputerScience,efficient playful tool teach unix new student,teaching unix new student common task many higher school paper present approach course student progress autonomously help teacher traditional textbook complemented wiki main thread course game form treasure hunt course finish lab exam student perform practical manipulation similar one performed treasure hunt exam graded fully automatically paper discus motivation advantage approach give overall view tool developed tool available web opensource hence reusable outside ensimag
ComputerScience,building xenobuntu linux distribution teaching prototyping realtime operating system,paper describes realization new linux distribution based ubuntu linux xenomai realtime framework realization motivated eminent need realtime system modern computer science course majority technical choice made qualitative comparison main goal distribution offer standard operating system o include xenomai infrastructure essential tool begin hard realtime application development inside convivial desktop environment released liveinstallable dvd adopted emulate several classic rtos application program interface apis directly use understand realtime linux convivial desktop environment prototyping realtime embedded application
ComputerScience,new proposed dynamic quantum readjusted round robin scheduling algorithm performance analysis,scheduling central concept used frequently operating system help choosing process execution round robin rr one widely used cpu scheduling algorithm performance degrades respect context switching overhead occurs scheduling overall performance system depends choice optimal time quantum context switching reduced paper proposed new variant rr scheduling algorithm known dynamic quantum readjusted round robin dqrrr algorithm experimentally shown performance dqrrr better rr reducing number context switching average waiting time average turn around time
ComputerScience,new dynamic round robin srtn algorithm variable original time slice intelligent time slice soft real time system,main objective paper improve round robin rr algorithm using dynamic coalescing shortest remaining time next srtn algorithm thus reducing average waiting time average turnaround time number context switch original time slice calculated process based burst timethis mostly suited soft real time system meeting deadline desirable increase performance advantage process closer remaining completion time get chance execute leave ready queue reduce number process ready queue knocking short job relatively faster hope reduce average waiting time turn around time number context switch paper improves algorithm experimental analysis show proposed algorithm performs better algorithm process increasing order decreasing order random order burst time
ComputerScience,optimal realtime scheduling approach multiprocessor uniprocessor,optimal solution problem scheduling realtime task set identical processor derived described approach based solving equivalent uniprocessor realtime scheduling problem although scheduling algorithm achieve optimality usually impose prohibitive preemption cost unlike algorithm observed simulation proposed approach produce three preemption point per job
ComputerScience,priority based dynamic round robin pbdrr algorithm intelligent time slice soft real time system,paper new variant round robin rr algorithm proposed suitable soft real time system rr algorithm performs optimally timeshared system suitable soft real time system give number context switch larger waiting time larger response time proposed novel algorithm known priority based dynamic round robin algorithm pbdrr calculates intelligent time slice individual process change every round execution proposed scheduling algorithm developed taking dynamic time quantum concept account experimental result show proposed algorithm performs better algorithm term reducing number context switch average waiting time average turnaround time
ComputerScience,scheduling hard realtime multithread periodic task,paper study scheduling parallel realtime recurrent task firstly propose new parallel task model allows recurrent task composed several thread thread requires single processor execution scheduled simultaneously secondly define several kind realtime scheduler applied parallel task model distinguish two scheduling class hierarchical scheduler global thread scheduler present prove correct exact schedulability test class lastly also evaluate performance scheduling paradigm comparison gang scheduling mean simulation
ComputerScience,towards bridging iot cloud service proposing smartphones mobile autonomic service gateway,computing currently getting time incredibly small sensorsactuators embedded every day object also greatly large data ser vice cloud accessible anytime anywhere internet thing physically closed user suffers weak runtime execution environment cloud environment provide powerful data storage computing power easily accessed integrate finaluser context awareness consider smartphones set become universal interface two world position paper propose middleware approach smartphones provide service gateway bridge gap iot service cloud service since smartphones mobile gateway able configure themself according place thing discovered around resource battery several issue discussed collaborative eventbased context management adaptive opportunistic service deployment invocation multicriteria user performanceoriented optimization decision algorithm
ComputerScience,sufficient ftp schedulability test noncyclic generalized multiframe task model,goal provide sufficient schedulability test ideally polynomial scheduling noncyclic generalized multiframe task model using fixedtaskpriority scheduler report two first result present prove correct critical instant noncyclic generalized multiframe task model ii propose algorithm provides sufficient pseudopolynomial schedulability test
ComputerScience,new round robin based scheduling algorithm operating system dynamic quantum using mean average,round robin considered widely adopted cpu scheduling algorithm undergoes severe problem directly related quantum size time quantum chosen large response time process considered high hand quantum small increase overhead cpu paper propose new algorithm called based new approach called dynamictimequantum idea approach make operating system adjusts time quantum according burst time set waiting process ready queue based simulation experiment show new proposed algorithm solves fixed time quantum problem increase performance round robin
ComputerScience,adsplit separating smartphone advertising application,wide variety smartphone application today rely thirdparty advertising service provide library linked hosting application situation undesirable application author advertiser advertising library require additional permission resulting additional permission request user likewise malicious application could simulate behavior advertising library forging user interaction effectively stealing money advertiser paper describes adsplit extended android allow application advertising run separate process separate userids eliminating need application request permission behalf advertising library also leverage mechanism quire allow remote server validate authenticity clientside behavior paper quantify degree permission bloat caused advertising study thousand downloaded apps adsplit automatically recompiles apps extract ad service measure minimal runtime overhead also observe ad library embed html widget within describe adsplit designed mind avoid need ad native code
ComputerScience,window linux operating system security perspective,operating system vital system software without human would able manage use computer system essence operating system collection software program whose role manage computer resource provide interface client application interact different computer hardware commercial operating system available today market buggy code exhibit security flaw vulnerability effect building trusted operating system mostly resist attack provide secure computing environment protect important asset computer goal every operating system manufacturer paper deeply investigates various security feature two widespread successful operating system microsoft window linux different security feature design component two system covered elaborately pinpointing key similarity difference due course headtohead comparison drawn security aspect exposing advantage one system
ComputerScience,energyaware task partitioning heterogeneous multiprocessor platform,efficient task partitioning play crucial role achieving high performance multiprocessor plat form paper address problem energyaware static partitioning periodic realtime task heterogeneous multiprocessor platform particle swarm optimization variant based minmin technique task partitioning proposed proposed approach aim minimize overall energy consumption meanwhile avoid deadline violation energyaware cost function proposed considered proposed approach extensive simulation comparison conducted order validate effectiveness proposed technique achieved result demonstrate proposed partitioning scheme significantly surpasses previous approach term number iteration energy saving
ComputerScience,secure dynamic job scheduling smart grid using rsa algorithm,grid computing computation methodology using group cluster connected highspeed network involves coordinating sharing computational power data storage network resource integrating set cluster workstation one large computing environment improve availability computing power goal scheduling achieve highest possible system throughput match application need available computing resource secure scheduling model presented performs job grouping activity runtime grid environment security necessary grid dynamic environment participates independent body different policy objective requirement authentication verified grid resource owner well resource requester allowed join scheduling activity order achieve secure resource job scheduling including minimum processing time maximum resource utilization secure resource using rsa algorithm networking job scheduling model job grouping strategy jgs grid computing proposed result show significant improvement processing time job resource utilization compared dynamic job grouping djg based scheduling smart grid sg
ComputerScience,classification heterogeneous operating system,operating system bridge system user operating system o software program manages hardware software resource computer o performs basic task controlling allocating memory prioritizing processing instruction controlling input output device facilitating networking managing file difficult present complete well deep account operating system developed till date paper try overview subset available operating system different category o developed large number academic commercial organization last several decade paper therefore concentrate different category o special emphasis deep impact evolution process aim paper provide brief timely commentary different category important operating system available today
ComputerScience,multicore dynamic kernel module attachment technique kernel performance enhancement,traditional monolithic kernel dominated kernel structure long time along small sized kernel hardware company limited kernel functionality monolithic kernel structure applicable number hardware company increased kernel service consumed different user many purpose one biggest disadvantage monolithic kernel inflexibility due need include available module kernel compilation causing high time consuming lately new kernel structure introduced multicore operating system unfortunately many multicore operating system barrelfish fo experimental paper aim simulate performance multicore hybrid kernel dynamic kernel module customized attachment deattachment multicore machine addition paper proposes new technique loading dynamic kernel module based user need machine capability
ComputerScience,energy minimization parallel realtime system malleable job homogeneous frequency,work investigate potential utility parallelization meeting realtime constraint minimizing energy consider malleable gang scheduling implicitdeadline sporadic task upon multiprocessor first show nonnecessity dynamic voltagefrequency regarding optimality scheduling problem adapt canonical schedule dvfs multiprocessor platform propose polynomialtime optimal processorfrequencyselection algorithm evaluate performance algorithm via simulation using parameter obtained hardware testbed implementation algorithm watt decrease power consumption optimal nonparallel approach
ComputerScience,capturing information flow inside android qemu environment,smartphone market grown wide assumed strategic relevance today common smartphone os google android apple io former particularly interesting due open source nature allows everyone deeply inspect every aspect o android source code also bundled hardware emulator based open source software qemu allows user run android o without need physical device first present procedure extract information flow generic system focus android qemu architecture logging infrastructure finally detail happens inside android device particular scenario system boot
ComputerScience,lftl multithreaded ftl parallel io flash card linux,new pcie flash card ssds supporting iop available several usecases design high performance storage system using array flash chip arranged multiple bank large capacity achieved multibanked architecture allow parallel read write erase operation raw pcie flash card parallelism directly available software layer addition device restriction page within block written sequentially device also larger minimum write size greater current flash translation layer ftls linux well suited device due high device speed architectural restriction well factor high lock contention present ftl linux take account hardware restriction also exploit parallelism achieve high speed also consider leveraging parallelism garbage collection scheduling garbage collection activity idle bank propose evaluate adaptive method vary amount garbage collection according current io load device
ComputerScience,questv separation kernel mixed criticality system,multi manycore processor becoming increasingly popular embedded system many processor feature hardware virtualization capability arm cortex processor intel vtx amdv support hardware virtualization offer opportunity partition physical resource including processor core memory io device amongst guest virtual machine mixed criticality system service coexist platform separate virtual machine however traditional virtual machine system expensive cost trapping hypervisors multiplex manage machine physical resource behalf separate guest example hypervisors needed schedule separate vms physical processor core paper discus design questv separation kernel partition service different criticality separate virtual machine sandbox sandbox encapsulates subset machine physical resource manages without requiring intervention hypervisor moreover hypervisor needed normal operation except bootstrap system establish communication channel sandbox
ComputerScience,predictable migration communication questv multikernel,questv system developing ground objective focusing safety predictability efficiency designed work emerging multicore processor hardware virtualization support questv implemented distributed system chip comprises multiple sandbox kernel sandbox kernel isolated one another separate region physical memory access subset processing core io device partitioning prevents system failure one sandbox affecting operation sandbox shared memory channel managed system monitor enable intersandbox communication distributed nature questv mean sandbox separate physical clock event timing managed percore local timer sandbox responsible scheduling io management without requiring intervention hypervisor paper formulate bound intersandbox communication absence global scheduler global system clock also describe address space migration sandbox guaranteed without violating service constraint experimental result working system show condition questv performs realtime communication migration
ComputerScience,questv virtualized multikernel safetycritical realtime system,modern processor increasingly featuring multiple core well support hardware virtualization processor common desktop serverclass computing le prevalent embedded realtime system however smartphones tablet pc starting feature multicore processor hardware virtualization trend continues possible future realtime system feature sophisticated processor architecture future automotive avionics system example could replace complex network uniprocessors consolidated service smaller number multicore processor likewise virtualization could used isolate service increase availability system even failure occur paper investigates whether advance modern processor technology offer new opportunity rethink design realtime operating system describe design principle behind questv used exploratory vehicle realtime system design multicore processor hardware virtualization capability embedded system assume feature case made robust safetycritical system built use hardware virtualization without incurring significant overhead
ComputerScience,general framework kpoint effective schedulability analysis utilizationbased test,deal large variety workload different application domain realtime embedded system number expressive task model developed individual task model researcher tend develop different type technique deriving schedulability test different computation complexity performance paper present general schedulability analysis framework namely framework potentially applied analyze large set realtime task model fixedpriority scheduling algorithm uniprocessor multiprocessor scheduling key kpoint effective schedulability test viewed blackbox interface task model corresponding kpoint effective schedulability test constructed sufficient utilizationbased test automatically derived show generality applying different task model result new improved test compared stateoftheart analogously similar concept testing k point different formulation studied u another framework called provides quadratic bound utilization bound based different formulation schedulability test quadratic hyperbolic form framework used provide many quantitive feature measured like total utilization bound speedup factor etc uniprocessor scheduling also multiprocessor scheduling framework viewed blackbox interface schedulability test responsetime analysis
ComputerScience,optimize unsynchronized garbage collection ssd array,solid state disk ssds advanced outperform traditional hard drive significantly random read writes however heavy random writes trigger fre quent garbage collection decrease performance ssds ssd array garbage collection individ ual ssds synchronized leading underutilization ssds propose software solution tackle unsyn chronized garbage collection ssd array installed host bus adaptor hba individual ssds exposed operating system maintain long io queue ssd flush dirty page intelligently fill long io queue hide performance imbalance among ssds even parallel application writes define policy select ing dirty page flush policy taking stale flush request reduce amount data written ssds evaluate solution real system experi ments show solution fully utilizes ssds array random writeheavy workload improves io throughput random workload mixed read writes ssds active garbage collection cause little extra data writeback increase cache hit rate
ComputerScience,o debugging method using lightweight virtual machine monitor,demand implementing original os achieve high io performance pcat compatible hardware recently increasing conventional o debugging environment able simultaneously assure stability easily customized new os new io device assure efficient execution io operation therefore developed novel o debugging method using lightweight virtual machine evaluated debugging method experimentally confirmed transfer data time fast conventional virtual machine monitor
ComputerScience,rtkspec tron simulation model itron based rtos kernel systemc,paper present methodology modeling construct developed capture real time aspect rtos simulation model system level design language sldl like systemc describe construct show used build simulation model rtos kernel targeting mu itron o specification standard
ComputerScience,lightweight lock,paper propose new approach building synchronization primitive dubbed lwlocks short lightweight lock primitive optimized small memory footprint maintaining efficient performance low contention scenario readwrite lwlock occupies byte mutex occupies byte deadlock detection required condition variable occupies byte corresponding primitive popular pthread library occupy byte byte byte respectively platform api lwlocks similar pthread library covering common use case lwlocks allow explicit control queuing scheduling decision contention situation support asynchronous deferred blocking acquisition lock asynchronous locking help working around constraint lockordering otherwise limit concurrency small footprint lwlocks enables construction data structure finegrained locking turn crucial lowering contention supporting highly concurrent access data structure currently data domain file system us lwlocks inmemory inode cache well generic doublylinked concurrent list form building block sophisticated structure
ComputerScience,design performance evaluation new proposed fittest job first dynamic round robin fjfdrr scheduling algorithm,paper proposed new variant round robin scheduling algorithm executing process according new calculated fit factor f using concept dynamic time quantum compared performance proposed fittest job first dynamic round robin fjfdrr algorithm priority based static round robin pbsrr algorithm experimental result show proposed algorithm performs better pbsrr term reducing number context switch average waiting time average turnaround time
ComputerScience,comparative performance analysis multi dynamic time quantum round robin mdtqrr algorithm arrival time,cpu considered primary computer resource scheduling central operatingsystem design thorough performance evaluation various scheduling algorithm manifest round robin algorithm considered optimal time shared environment static time equally shared among process proposed efficient technique process scheduling algorithm using dynamic time quantum round robin approach based calculation time quantum twice single round robin cycle taking consideration arrival time implement algorithm experimental analysis show better performance improved algorithm round robin algorithm shortest remaining burst round robin algorithm minimizes overall number context switch average waiting time average turnaround time consequently throughput cpu utilization better
ComputerScience,schedulability test soft realtime system multiprocessor environment using earliest deadline first scheduling algorithm,paper deal study earliest deadline first edf optimal scheduling algorithm uniprocessor real time system use scheduling periodic task soft realtime multiprocessor system hard realtime system significant disparity exists edfbased scheme rma scheduling known way optimally scheduling recurrent realtime task multiprocessor processor known edf variant utilizationbased schedulability bound approximately rma algorithm fully utilize processor unfortunate edf based algorithm entail lower scheduling task migration overhead work hard realtime system shown disparity schedulability lessened placing cap per task utilization main contribution new edf based scheme ensures bounded deadline tardiness scheme pertask utilization must focused overall utilization need stricted scheme enable wide range soft realtime application scheduled constraint total utilization also propose technique heuristic used reduce tardiness well increase efficiency task
ComputerScience,age based user interface mobile operating system,paper proposes creation different interface mobile operating system different age group different age group identified kid elderly people others motive behind creating different interface make smartphones today world usable age group
ComputerScience,proposed challenge area concern operating system research development,computer important part life major reason success excellent graphical operating system run powerful machine computer hardware becoming powerful also vital keep software updated order utilize hardware system efficiently make faster smarter paper highlight core issue dealt operating system level would make use full potential computer hardware provide excellent user experience
ComputerScience,simulation optimum multilevel dynamic round robin scheduling algorithm,cpu scheduling valiant effect resource utilization well overall quality system round robin algorithm performs optimally time shared system performs number context switch larger waiting time larger response time order simulate behavior various cpu scheduling algorithm improve round robin scheduling algorithm using dynamic time slice concept paper produce implementation new cpu scheduling algorithm called optimum multilevel dynamic round robin scheduling omdrrs calculates intelligent time slice warp every round execution result display robustness software especially academic research experimental use well proving desirability efficiency probabilistic algorithm existing technique observed omdrrs project good performance compared existing cpu scheduling algorithm
ComputerScience,glider gpu library driver improved system security,legacy device driver implement device resource management isolation result large code base wide highlevel interface making driver vulnerable security attack particularly problematic increasingly popular accelerator like gpus large complex driver solve problem library driver new driver architecture library driver implement resource management untrusted library application process address space implement isolation kernel module smaller narrower lowerlevel interface ie closer hardware legacy driver articulate set device platform hardware property required retrofit legacy driver library driver demonstrate feasibility superiority library driver present glider library driver implementation two gpus popular brand radeon intel glider reduces tcb size attack surface respectively radeon hd gpu respectively intel ivy bridge gpu moreover incurs performance cost indeed glider outperforms legacy driver application requiring intensive interaction device driver application using opengl immediate mode api
ComputerScience,oslevel failure injection systemtap,failure injection distributed system important issue experiment robust resilient distributed system order reproduce reallife condition part application must killed without letting operating system close existing network communication clean way process simply killed o close systemtap infrastructure probe linux kernel internal call process killed kernellevel destroyed without letting o anything else paper present kernellevel failure injection system based systemtap present used implement deterministic probabilistic failure scenario
ComputerScience,protecting memoryperformance critical section soft realtime application,soft realtime application multimedia application often show bursty memory access pattern regularly requiring high memory bandwidth short duration time period often critical timely data processing hence call memoryperformance critical section unfortunately multicore architecture nonrealtime application different core may also demand high memory bandwidth time substantially increase time spent memory performance critical section paper present bwlock userlevel apis memory bandwidth control mechanism protect memory performance critical section soft realtime application bwlock provides simple lock like apis declare memoryperformance critical section application enters memoryperformance critical section memory bandwidth control system dynamically limit core memory access rate protect memory performance application critical section finish case study realworld soft realtime application found memoryperformance critical section exist often easy identify applying bwlock memory critical section significantly improve performance soft realtime application small cost throughput non realtime application
ComputerScience,mora energyaware slack reclamation scheme scheduling sporadic realtime task upon multiprocessor platform,paper address global preemptive energyaware scheduling problem sporadic constraineddeadline task dvfsidentical multiprocessor platform propose online slack reclamation scheme profit discrepancy worst actualcase execution time task slowing speed processor order save energy algorithm called mora take account applicationspecific consumption profile task demonstrate mora jeopardize system schedulability show performing simulation save energy average compared execution without using energyaware algorithm
ComputerScience,global scheduling multimode realtime application upon multiprocessor platform,multimode realtime system support application different mode operation mode characterized specific set task runtime system time requested switch current operating mode another mode called new mode replacing current set task newmode thereby ensuring timing requirement met requires schedulability test performed task mode also protocol transitioning one mode another specified ii schedulability test transition performed propose two distinct protocol manage mode transition upon uniform identical multiprocessor platform runtime specific distinct task requirement protocol formally establish schedulability analysis indicate beforehand whether timing requirement met mode transition system performed assuming fixedtaskpriority fixedjobpriority scheduler
ComputerScience,generic checkpointrestart mechanism virtual machine,common today deploy complex software inside virtual machine vm snapshot provide rapid deployment migration host dependability fault tolerance security insulating guest vm host yet virtual machine code snapshot laboriously developed pervm basis work demonstrates generic checkpointrestart mechanism virtual machine mechanism based plugin top unmodified userspace checkpointrestart package dmtcp checkpointrestart demonstrated three virtual machine lguest userspace qemu kvmqemu plugins lguest kvmqemu require line code lguest kernel driver api augmented line code dmtcp checkpoint userspace qemu without new code kvmqemu userspace qemu dmtcp need modification design benefit dmtcp feature plugins experiment demonstrate checkpoint restart second using forked checkpointing mmapbased fastrestart incremental btrfsbased snapshot
ComputerScience,adaptive scheduling realtime system period adjustment,real time system technology traditionally developed safety critical system extended support multimedia system virtual reality large number realtime application related multimedia adaptive control system require flexibility classical realtime theory usually permit paper proposes efficient adaptive scheduling framework realtime system based period adjustment model periodic task change execution rate based importance value keep system underloaded propose periodadjust algorithm consider task whose period bounded well task whose period bounded
ComputerScience,multitasking programming obdh satellite based,board data handling obdh function monitor control acquire analyze take decision execute command obdh organize task sub system obdh like heart vital function function seriously important therefore designing implementing obdh carefully order good reliability many obdhs made support satellite mission using primitive programming handling data various input obdh always available sub system task many easy program using primitive programming sometimes data become corrupt data come obdh time therefore required way handle data safely also easy programming perspective research obdh programmed using multi tasking programming perspective created operating system o implemented run task simultaneously o prepared configuring linux kernel specific processor creating root file system rf installing busybox order method preparing environment machine done installing cross tool chain uboot gnulinux kernel source etc programming using c code multitasking programming implemented using method found programming easier corruption data reentrancy minimized keywords operating system kernel c programming
ComputerScience,implementation analysis kernel network stack go csp style,modern operating system kernel written lowerlevel language c although lowlevel functionality c often useful within kernel also give rise several class bug kernel written higher level language avoid many potential problem possible cost decreased performance research evaluates advantage disadvantage kernel written higher level language network stack subsystem kernel implemented go communicating sequential process csp style go highlevel programming language support csp style recommends splitting large task several smaller one running independent thread module major networking protocol including ethernet arp icmp udp tcp implemented study implemented go network stack called gonet compared representative network stack written c gonet code readable generally performs better c stack counterpart concluded go csp style viable alternative c language kernel implementation
ComputerScience,polypath supporting multiple tradeoff interaction latency,modern mobile system use single inputtodisplay path serve application meeting visual goal application path latency inadequate many important interaction accommodate different latency requirement visual constraint different interaction present polypath system design application developer user choose multiple path design application time polypath system asks two path design present novel fast path design called presto presto reduces latency judiciously allowing frame drop tearing report android prototype polypath two path design android legacy presto using prototype quantify effectiveness overhead user experience polypath especially presto objective measurement subjective user assessment show presto reduces latency legacy touchscreen drawing application almost half importantly reduction orthogonal popular approach achieved without usernoticeable negative visual effect combined touch prediction presto able reduce touch latency m remarkable achievement without hardware support
ComputerScience,duplication window service,oslevel virtualization technique virtualize system resource system call interface distinct advantage smaller runtime resource requirement compared hallevel virtualization technique thus form important building block virtualizing parallel distributed application hpc cluster window operating system put certain critical functionality privileged userlevel system service process complete oslevel virtualization solution window platform requires duplication window service remote procedure call server service rpcss many implementation detail window system service proprietary duplicating window system service becomes key technical challenge virtualizing window platform o level moreover core component cloud computing ii web serverrelated service need duplicated container ie oslevel virtual machine far scheme paper thoroughly identify issue affect service duplication propose first known methodology systematically duplicate system ordinary window service experiment show methodology duplicate set system ordinary service different version window o
ComputerScience,o,engineering operating system well understood formal structure property latter need clear definition purpose o identification core paper offer definition o process file present useful principle principle allow u identify work like closure continuation algorithm programming language useful o problem definition principle yield symbolic albeit semiquantitative framework encompasses practice towards end specialise definition describe conventional os identify core operation single computer o used express algorithm assumption underlying algorithm offer design space framework paging segmentation algorithm conventional os extracted framework check among insight emerge o constructive proof equivalence model computation clear useful definition principle first step towards fully quantitative structure o
ComputerScience,questv virtualized multikernel highconfidence system,paper outline design questv implemented collection separate kernel operating together distributed system chip questv us virtualization technique isolate kernel prevent local fault affecting remote kernel lead highconfidence multikernel approach failure system subcomponents render entire system inoperable virtual machine monitor kernel keep track shadow page table mapping control immutable memory access capability ensures level security fault tolerance situation service one kernel fails corrupted malicious attack communication supported kernel using shared memory region message passing similarly device driver data structure shareable kernel avoid need complex io virtualization communication dedicated kernel responsible io questv device interrupt delivered directly kernel rather via monitor determines destination apart bootstrapping kernel handling fault managing shadow page table monitor needed differs conventional virtual machine system central monitor hypervisor responsible scheduling management host resource amongst set guest kernel paper show questv implement novel fault isolation recovery technique possible conventional system also show cost using virtualization isolation system service add undue overhead overall system performance
ComputerScience,performance evaluation flash file system,today flash memory strongly used embedded system domain nand flash memory building block main secondary storage system memory present many benefit term data density io performance shock resistance power consumption nevertheless flash come without constraint write erase granularity asymmetry limited lifetime bring need specific management done operating system using dedicated flash file system ffss document present general concept ffss implementation example ubifs commonly used flash file system give performance evaluation result ffss
ComputerScience,survey server virtualization,virtualization term refers abstraction computer resource purpose virtual computing environment improve resource utilization providing unified integrated operating platform user application based aggregation heterogeneous autonomous resource recently virtualization level system storage network became important way improve system security reliability availability reduce cost provide greater flexibility virtualization rapidly become goto technology increasing efficiency data center virtualization technology providing tremendous flexibility even disparate architecture may deployed single machine without interference paper explains basic server virtualization address pro con virtualization
ComputerScience,making io virtualization easy device file,personal computer diverse fastevolving io device making io virtualization different server data center paper present recent endeavor simplifying io virtualization personal computer key insight many operating system including unixlike one abstract io device device file small stable set operation device file therefore io virtualization device file boundary requires onetime effort support various io device present devirtualization design io virtualization device file boundary implementation system able virtualize various gpus input device camera audio device fewer loc specific io device class measurement show devirtualized device achieve interactive performance indistinguishable native one human user even running hd game
ComputerScience,invasive computing common term granularity invasion,future mpsocs processor core chip require new mean resourceaware programming order deal increasing imperfection process variation fault rate aging effect power well thermal problem hand predictable program execution threatened impossible proper mean resource isolation exclusive use may established demand view problem menace invasive computing enables application programmer claim processing resource spread computation claimed processor dynamically certain point program execution decision may depending degree application parallelism state underlying resource utilization load temperature also goal provide predictable program execution mpsocs claiming processing resource exclusively default thus eliminating interference creating necessary isolation multiple concurrently running application achieving goal invasive computing introduces new programming construct resourceaware programming meanwhile testing purpose embedded parallel computing language developed ibm using librarybased approach paper present major idea common term invasive computing investigated dfg transregional collaborative research centre moreoever reflection given granularity resource may requested invasive program
ComputerScience,network control system rtai framework review,advancement automation industry perform complex remote operation required advancement networking technology led development different architecture implement control large distance various control application modern industry agent sensor actuator controller basically geographically distributed efficient working control application agent exchange information communication medium present increasing number distributed control system based platform made conventional pc running opensource realtime operating system often system needed networked device supporting synchronized operation respect node framework studied relies standard software protocol rtai ethercat rtnet ieee rtai various protocol studied network control system environment
ComputerScience,augmenting operating system gpu,popular heterogeneous manycore platform cpugpu combination received relatively little attention operating system research platform already widely deployed gpus found form desktop laptop pc used graphic processing modern gpus proved versatile enough adapted application well though gpus strength exploited system software remains largely untapped resource argue augmenting o kernel gpu computing power open door number new opportunity gpus used speed kernel function make scale better make feasible bring computationheavy functionality kernel present framework using gpu coprocessor o kernel demonstrate prototype linux
ComputerScience,periodic behavior realtime scheduler identical multiprocessor platform,paper proposing general periodicity result concerning deterministic memoryless scheduling algorithm including nonworkconserving algorithm context identical multiprocessor platform context mean hardware architecture uniprocessor multicore well task constraint like critical section precedence constraint selfsuspension etc since result based release deadline independent parameter note claim given interval minimal upper bound cycle feasible schedule provided deterministic memoryless scheduler
ComputerScience,partitioned scheduling multimode multiprocessor realtime system temporal isolation,consider partitioned scheduling problem multimode realtime system upon identical multiprocessor platform execution multimode system system change one mode another current task set replaced new one paper consider synchronous transition protocol order take account modeindependent task ie task execution pattern must jeopardized mode change propose two method handling mode change partitioned scheduling first method offlineoptimal computes static allocation task schedulable respecting task transition deadline second approach subject sufficient condition order ensure online first fit based allocation satisfy timing constraint
ComputerScience,intensional view general single processor operating system,operating system currently viewed ostensively result mean different thing different people ostensive character make hard understand os formally intensional view enable better formal work also offer constructive support important problem eg o architecture work argues intensional view operating system proposes overcome current ostensive view defining o based formal model computation also introduces principle together used develop framework algorithm single processor o structure using approach similar function level programming abridged paper illustrate essential approach discus advantage limitation point future possibility
ComputerScience,file system component operating system,file system provides mechanism online storage access file content including data program paper cover highlevel detail file system well related topic disk cache file system interface kernel userlevel apis use feature file system give thorough understanding file system work general main component operating system file system used create manipulate store retrieve data highest level file system way manage information secondary storage medium many layer file system layer fully described paper give explanatory knowledge file system designer researcher area complete path user process secondary storage device mentioned file system area researcher lot job always need work work going efficient secure energy saving technique file system know hardware going fast performance lowpriced day day software built comeback hardware technology need research area bridge technology gap
ComputerScience,towards framework file system performance evaluation technique taxonomy replay trace,era high performance computing hpc great demand best performance evaluation technique file storage system task evaluation necessary hard give depth analysis target system becomes decision point user also helpful inventor developer find bottleneck system paper many performance evaluation technique described file storage system evaluation main stress given important one replay trace survey done performance evaluation technique used researcher replay trace taxonomy replay trace described popular replay trace like tracefs trace replayfs vfs interceptor last concluded feature must considered going develop new tool replay trace complete work paper show storage system developer must care technique used performance evaluation file system develop highly efficient future file storage system
ComputerScience,cacheaware static scheduling hard realtime multicore system based communication affinity,growing need continuous processing capability led development multicore system complex cache hierarchy multicore system generally designed improving performance average case hard realtime system must consider worstcase scenario open challenge therefore efficiently schedule hard realtime task multicore architecture work propose mathematical formulation computing static scheduling minimize data cache miss hard realtime task multicore architecture using communication affinity
ComputerScience,rio system solution sharing io mobile system,mobile system equipped diverse collection io device including camera microphone sensor modem exist many novel use case allowing application one mobile system utilize io device another paper present rio io sharing solution support unmodified application expose functionality io device sharing rio design common many class io device thus significantly reducing engineering effort support new io device implementation rio android consists total line code support four io class fewer classspecific line code rio also support io sharing mobile system different form factor including smartphones tablet show rio achieves performance close local io audio sensor modem suffers noticeable performance degradation camera due network throughput limitation two system likely alleviated emerging wireless standard
ComputerScience,transparent checkpointrestart hardwareaccelerated graphic,providing faulttolerance longrunning gpuintensive job requires applicationspecific solution often involves saving state complex data structure spread among many graphic library work describes mechanism transparent gpuindependent checkpointrestart graphic approach based recordprunereplay paradigm opengl call relevant graphic driver state recorded call relevant internal driver state last graphic frame prior checkpoint discarded remaining call replayed restart previous approach opengl based shadow device driver required line openglspecific code contrast new approach based recordprunereplay used implement case line code speed approach varies per cent nearly per cent speed native hardware acceleration opengl measured running game linux approach also extended demonstrate checkpointing opengl first time demonstration pymol molecular visualization
ComputerScience,design performance evaluation optimized disk scheduling algorithm odsa,management disk scheduling important aspect operating system performance disk scheduling completely depends efficient scheduling algorithm allocate service request better manner many algorithm fifo sstf scan cscan look etc developed recent year order optimize system disk io performance reducing average seek time transfer time improve performance disk io operation proposed algorithm optimize disk scheduling algorithm odsa taking le average seek time transfer time compare disk scheduling algorithm fifo sstf scan cscan look etc enhances efficiency disk performance better manner
ComputerScience,group based time quantum round robin algorithm using minmax spread measure,round robin rr scheduling basis time sharing environment combination first come first served fcfs scheduling algorithm preemption among process basically used time sharing operating system switch one process another process time interval time interval time quantum tq fixed available process larger process suffers context switch c increase efficiency select different tq process main objective rr reduce c maximize utilization cpu minimize turn around waiting time paper considered different tq group process reduces c well enhancing performance rr algorithm tq calculated using minmax dispersion measure experimental analysis show group based time quantum gbtq rr algorithm performs better existing rr algorithm respect average turn around time atat average waiting time awt c
ComputerScience,task resource selfadaptive embedded realtime operating system microkernel wireless sensor node,wireless sensor network wsns used many application field military healthcare environment surveillance etc wsn o based eventdriven model nt support realtime multitask application type os based threaddriven model consume much energy frequent context switch due highdense largescale deployment sensor node difficult collect sensor node update software furthermore sensor node vulnerable security attack characteristic broadcast communication unattended application paper present task resource selfadaptive embedded realtime microkernel proposes hybrid programming model offer twolevel scheduling strategy support realtime multitask correspondingly communication scheme take tuple space inout primitive linda proposed support collaborative distributed task addition kernel implement runtime overtheair updating mechanism provides security policy avoid attack ensure reliable operation node performance evaluation proposed experiential result show kernel taskoriented resourceaware used application eventdriven realtime multitask
ComputerScience,file system design approach,article file system development design approach discussed selection file system design approach done according need developer needed requirement specification new design allowed u identify proposal fitted relation current past file system development experience file system development limited research served identify different technique used variety file system encountered show active area research file system development file system may one two fundamental category one category file system developed user space run user process another file system may developed kernel space run privileged process another one mixed approach take advantage aforesaid approach development option pro con article design approach discussed
ComputerScience,assessment response time new multi level feedback queue scheduler,response time one characteristic scheduler happens prominent attribute cpu scheduling algorithm proposed new multi level feedback queue nmlfq scheduler compared dynamic real time dependent activity scheduling algorithm dasa locke best effort scheduling algorithm lbesa abbreviated beneficial result nmlfq scheduler comparison dynamic best effort scheduler respect response time
ComputerScience,characteristic specific prioritized dynamic average burst round robin scheduling uniprocessor multiprocessor environment,cpu scheduling one crucial operation performed operating system different conventional algorithm like fcfs sjf priority rr round robin available cpu scheduling effectiveness priority round robin scheduling algorithm completely depends selection priority feature process choice time quantum paper new cpu scheduling algorithm proposed named cspdabrr characteristic specific prioritized dynamic average burst round robin us seven priority feature calculating priority process us dynamic time quantum instead static time quantum used rr performance proposed algorithm experimentally compared traditional rr priority scheduling algorithm uniprocessor multiprocessor environment result approach presented paper demonstrate improved performance term average waiting time average turnaround time optimal priority feature
ComputerScience,iotune gstates driver elastic performance block storage,imagining disk provides baseline performance relatively low price lowload period workload demand resource disk performance automatically promoted situ real time hardware era hardly achievable however imagined disk becoming reality due technical advance softwaredefined storage enable volume performance adjusted fly propose iotune resource management middleware employ softwaredefined storage primitive implement gstates virtual block device gstates enable virtual block device serve multiple performance gear getting rid conflict immutable resource reservation dynamic resource demand always achieving resource rightprovisioning workload accompanying gstates also propose new block storage pricing policy cloud provider case study applying gstates cloud block storage verifies effectiveness iotune framework tracereplay based evaluation demonstrate storage volume gstates adapt workload fluctuation tenant gstates enable volume provide much better qos cost ownership comparing static iop provisioning io credit mechanism gstates also reduce io tail latency one two order magnitude standpoint cloud provider gstates promote storage utilization creating value benefiting competitiveness gstates supported iotune provide new paradigm storage resource management pricing multitenant cloud
ComputerScience,comment gang edf schedulability analysis,short report raise correctness issue schedulability test presented kato et al gang edf scheduling parallel task system ieee realtime system symposium pp
ComputerScience,look mum vm exit almost,multicore cpu standard component many modern embedded system virtualisation extension enable isolation service gain popularity implement mixedcriticality otherwise split system present jailhouse linuxbased osagnostic partitioning hypervisor us novel architectural approach combine linux powerful generalpurpose system strictly isolated specialpurpose component design goal favour simplicity feature establish minimal code base minimise hypervisor activity direct assignment hardware guest together deferred initialisation scheme offloads complex hardware handling bootstrapping issue hypervisor general purpose o hypervisor establishes isolated domain directly access physical resource without need emulation paravirtualisation retains negligible system overhead linux featurerichness uncritical part frugal safety realtime critical workload execute isolated safe domain
ComputerScience,gpu system call,gpus becoming firstclass compute citizen tasked perform increasingly complex work modern gpus increasingly support programmability enhancing feature shared virtual memory hardware cache coherence enabling run wider variety program key aspect generalpurpose programming gpus still found lacking ability invoke system call explore directly invoke generic system call gpu program examine system call meshed prevailing gpgpu programming model thousand thread organized hierarchy execution group system call invoked individual gpu task different execution group level reasonable ordering semantics gpu system call across hierarchy execution group study question implemented genesys mechanism allow gpu pro gram invoke system call linux operating system numerous subtle change linux necessary existing kernel assumes cpu invoke system call analyze performance genesys using microbenchmarks three application exercise filesystem networking memory allocation subsystem kernel conclude analyzing suitability linux system call gpu
ComputerScience,smore cold data object store smr drive extended version,shingled magnetic recording smr increase capacity magnetic hard drive requires zone disk written sequentially erased bulk make smr good fit workload dominated large data object limited churn explore possibility developed smore object storage system designed reliably efficiently store large seldomchanging data object array hostmanaged hostaware smr disk smore us logstructured approach accommodate constraint writes smr drive must sequential within large shingled zone stripe data across zone separate disk using erasure coding protect drive failure separate garbage collection thread reclaims space migrating live data emptiest zone trimmed reused index stored flash backed smr drive map object identifier ondisk location smore interleaf log record object data within smr zone enable index recovery system crash failure flash device without additional logging mechanism smore achieves full disk bandwidth ingesting data variety object size reading large object read performance decline smaller object size inter object seek time dominates worstcase pattern random deletion smore write amplification counting raid parity le occupancy taking index snapshot every two hour smore recovers crash le minute frequent snapshot allow faster recovery
ComputerScience,optimization management algorithm multilevel memory hierarchy,near future scm predicted modify form new program access form storage way storage device built therefore combination scm designated memory allocation manager mam allow programmer manually control different memory memory hierarchy likely achieve new level performance memoryaware data structure although manual mam seems optimal approach multilevel memory hierarchy management technique still far realistic chance would implemented current code using high performance computing hpc platform quite low premise mean reasonable way introduce scm usable popular memory system would implementing automated version mam using fundamental paging algorithm used twolevel memory hierarchy hypothesis achieving appropriate transferability memory level may possible using idea algorithm employed current virtual memory system adaptation algorithm twolevel memory hierarchy nlevel memory hierarchy possible order reach conclusion hypothesis correct investigated various paging algorithm found one could adapted successfully twolevel memory hierarchy nlevel memory hierarchy discovered using adaptation aging paging algorithm nlevel memory hierarchy result best performance term hitmiss ratio order verify hypothesis build simulator called dememory simulator analyzing algorithm well algorithm devised future
ComputerScience,fluidmem memory service datacenter,disaggregating resource data center emerging trend recent work begun explore memory disaggregation suffers limitation including lack consideration complexity cloudbased deployment including heterogeneous hardware apis cloud user operator paper present fluidmem complete system realize disaggregated memory datacenter going beyond simply demonstrating remote memory possible create entire memory service define requirement memory service build implementation linux fluidmem present performance analysis fluidmem demonstrate transparently support remote memory standard application mongodb genome sequencing application
ComputerScience,analyzing io amplification linux file system,present first systematic analysis read write space amplification linux file system many researcher tackling write amplification keyvalue store io amplification file system largely unexplored analyze data metadata operation five widelyused linux file system xfs btrfs find data operation result significant write amplification metadata operation large io cost example single rename requires kb write io btrfs also find small random read result read amplification based observation present crew conjecture relationship io amplification consistency storage space utilization hope paper spur people design future file system le io amplification especially nonvolatile memory technology
ComputerScience,operating system level data migration scheme hybrid dramnvm memory architecture,emergence nonvolatile memory nvms shortcoming limited endurance high power consumption write request several study suggested hybrid memory architecture employing dynamic random access memory dram nvm memory system conducting comprehensive experiment observed study lack consider important aspect hybrid memory including effect data migration performance b data migration power c granularity data migration paper present efficient data migration scheme operating system level hybrid dramnvm memory architecture proposed scheme two least recently used lru queue one dram section one nvm section used sake data migration careful characterization workload obtained parsec benchmark suite proposed scheme prevents unnecessary migration allows migration benefit system term power performance experimental result show proposed scheme reduce power consumption compared dramonly memory compared stateofthe art technique
ComputerScience,disk scheduling selection algorithm,objective paper take aspect disk scheduling scheduling algorithm disk scheduling discussed sneak peak general selection algorithm particular
ComputerScience,comparative study cpu scheduling algorithm,developing cpu scheduling algorithm understanding impact practice difficult time consuming due need modify test operating system kernel code measure resulting performance consistent workload real application processor important resource cpu scheduling becomes important accomplishing operating system o design goal intention allowed many possible running process time order make best use cpu paper present state diagram depicts comparative study various scheduling algorithm single cpu show algorithm best particular situation using representation becomes much easier understand going inside system different set process candidate allocation cpu different time objective study analyze high efficient cpu scheduler design high quality scheduling algorithm suit scheduling goal key word scheduler state diagram cpuscheduling performance
ComputerScience,optimum multilevel dynamic round robin scheduling algorithm,main objective paper improve round robin scheduling algorithm using dynamic time slice concept cpu scheduling becomes important accomplishing operating system o design goal intention allowed many possible running process time order make best use cpu cpu scheduling strong effect resource utilization well overall performance system round robin algorithm performs optimally timeshared system suitable soft real time system give number context switch larger waiting time larger response time paper new cpu scheduling algorithm called optimum multilevel dynamic round robin scheduling algorithm proposed calculates intelligent time slice change every round execution suggested algorithm evaluated cpu scheduling objective observed algorithm gave good performance compared existing cpu scheduling algorithm
ComputerScience,lwrp low power consumption weighting replacement policy using buffer memory,performance gap memory processor increased lead poor performance efficient virtual memory overcome problem efficiency virtual memory depends replacement policy used cache paper algorithm based time last access frequency index also consider power consumption show low power consumption weighting replacement policy lwrp better performance low power consumption
ComputerScience,formal description component operating system,contemporary development hardware component prerequisite increasing concentration computing power system software developing much slower pace use available resource efficiently modeling required formalization element present material provides basis modeling example presented demonstrate efficiency concept
ComputerScience,toward parametric timed interface realtime component,propose framework model realtime component consisting concurrent realtime task running single processor using parametric timed automaton framework generic modular easily adapted different scheduler complex task model first perform parametric schedulability analysis component using inverse method show method unfortunately provide satisfactory result task period consid ered parameter identifying explaining problem present solution adapting model making use worstcase scenario schedulability analysis show analysis inverse method always converges modified model system load strictly le finally show use parametric analysis generation timed interface compositional system design
ComputerScience,enhanced multipager environment support second generation microkernels,main objective paper present mechanism enhanced paging support second generation microkernels form explicit support multipager environment task running system proposed mechanism based intrakernel high granularity pager assignment per virtual address space allow efficient simple dispatching page fault appropriate pager paging one major feature virtual memory extensively used advanced operating system provide illusion elastic memory original present second generation microkernels provide limited inflexible unnatural support paging furthermore facility provided current solution multipager support runtime level introduce overhead term mode switch thread context switch significantly reduced limited paging support limit attractiveness second generation microkernel based system use reallife application process usually concurrent servicing multiple paging server purpose paper present facility efficient flexible support multipager environment second generation microkernels comparison proposed solution present architecture made overhead page fault handling critical path evaluated proposed solution simple enough provides natural flexible support multipager environment second generation microkernels efficient way introduces third le overhead term mode switch thread context switch comparison present solution implemented fiascooc
ComputerScience,effective round robin algorithm using minmax dispersion measure,round robin rr scheduling algorithm preemptive scheduling algorithm designed especially time sharing operating system o rr scheduling algorithm cpu switch process static time quantum tq expires rr scheduling algorithm considered widely used scheduling algorithm research tq equally shared among process paper newly proposed variant rr algorithm called minmax round robin mmrr scheduling algorithm presented idea mmrr make tq repeatedly adjusted using minmax dispersion measure accordance remaining cpu burst time experimental analysis show mmrr performs much better rr algorithm term average turnaround time average waiting time number context switch
ComputerScience,enhancing cpu performance using subcontrary mean dynamic round robin smdrr scheduling algorithm,round robin rr algorithm considered optimal time shared environment static time equally shared among process time quantum taken static undergoes degradation cpu performance lead many context switch paper proposed new effective dynamic rr algorithm smdrr subcontrary mean dynamic round robin based dynamic time quantum use subcontrary mean harmonic mean find time quantum idea approach make time quantum repeatedly adjusted according burst time currently running process experimental analysis show smdrr performs better rr algorithm term reducing number context switch average turnaround time average waiting time
ComputerScience,heterogeneityaware fault tolerance using selforganizing runtime system,due diversity implicit redundancy term processing unit compute kernel offtheshelf heterogeneous system offer opportunity detect tolerate fault task execution hardware well software automatically leverage diversity introduce extension onlinelearning runtime system combine benefit existing performanceoriented task mapping task duplication diversityoriented mapping strategy heterogeneityaware majority voter extension us new metric dynamically rate remaining benefit unreliable processing unit memory management mechanism automatic data transfer checkpointing host device memory
ComputerScience,supporting soft realtime sporadic task system heterogeneous multiprocessor utilization loss,heterogeneous multicore architecture becoming increasingly popular due potential achieving high performance energy efficiency compared homogeneous multicore architecture system realtime scheduling problem becomes challenging processor different speed job executing processor speed x time unit completes x cdot unit execution prior research heterogeneous multiprocessor realtime scheduling focused hard realtime system significant processing capacity may sacrificed worstcase ensure deadline met meeting hard deadline overkill many soft realtime system practice paper show soft realtime heterogeneous multiprocessor bounded response time ensured globallyscheduled sporadic task system utilization loss gedfbased scheduling algorithm namely gedfh presented response time bound established preemptive nonpreemptive gedfh scheduling extensive experiment show magnitude derived response time bound reasonable often smaller three task period best knowledge paper first show soft realtime sporadic task system supported heterogeneous multiprocessor without utilization loss reasonable predicted response time
ComputerScience,survey operating system iot environment,paper comprehensive survey various operating system available internet thing environment first paper introduces various aspect operating system designed iot environment resource constraint pose huge problem operation general o designed various computing device latter part paper describes various o available resource constraint iot environment along various platform o support software development kit available development application respective o along various protocol implemented o purpose communication networking
ComputerScience,influence malloc placement tsx hardware transactional memory,hardware transactional memory htm implementation intel haswell processor track transactional readset cache writeset cache displacement eviction readset entry cache hierarchy writeset entry result abort show placement policy dynamic storage allocator found common malloc implementation influence conflict miss rate conflict miss sometimes called mapping miss arise le ideal associativity represent imbalanced distribution active memory block set available index transactional execution conflict miss may manifest abort representing wasted futile effort instead simple stall would occur normal execution mode furthermore htm used transactional lock elision tle persistent abort arising conflict miss force offending thread socalled slow path slow path undesirable thread must acquire lock run critical section normal execution mode precluding concurrent execution thread fast path monitor lock run critical section transactional mode given lock multiple thread concurrently use transactional fast path one thread use nontransactional slow path given time thread slow path preclude safe concurrent fast path execution abort rising placement policy index imbalance thus result loss concurrency reduced aggregate throughput
ComputerScience,deterministically deterring timing attack deterland,massive parallelism resource sharing embodying today cloud business model exacerbate security challenge timing channel also undermine viability defense based resource partitioning propose hypervisorenforced timing mitigation control timing channel cloud environment approach close reference clock internal cloud imposing deterministic view time guest code us timing mitigators pace io ratelimit potential information leakage external observer prototype hypervisor first system mitigate timingchannel leakage across fullscale existing operating system linux application arbitrary language mitigation incurs varying performance cost depending workload tunable leakagelimiting parameter cost may justified securitycritical cloud application data
ComputerScience,survey report operating system tiny networked sensor,wireless sensor network wsn attracted researcher worldwide explore research opportunity application mainly health monitoring industry automation battlefield home automation environmental monitoring wsn highly resource constrained term energy computation memory wsns deployment range normal working environment hostile hazardous environment volcano monitoring underground mine characteristic wsns hold additional set challenge front operating system designer objective survey highlight feature weakness opearting system available wsns focus current application demand paper also discus operating system design issue term architecture programming model scheduling memory management support real time application
ComputerScience,eos automatic invivo evolution kernel policy better performance,today monolithic kernel often implement small fixed set policy disk io scheduling policy exposing many parameter let user select policy adjust specific setting policy ideally parameter exposed flexible enough user tune good performance practice user lack domain knowledge parameter often stuck bad default parameter setting present eos system bridge knowledge gap kernel developer user automatically evolving policy parameter vivo user real production workload provides simple policy specification api kernel developer programmatically describe policy parameter tuned policy cache make invivo tuning easy fast memorizing good parameter setting past workload hierarchical search engine effectively search parameter space evaluation eos four main linux subsystem show easy use effectively improves subsystem performance
ComputerScience,softwareonly mechanism device passthrough sharing,network processing element virtual machine also known network function virtualization nfv often face cpu bottleneck virtualization interface even highly optimized paravirtual device interface fall short throughput requirement modern device passthrough device together sriov support multiple device virtual function vf iommu support mitigate problem somewhat allowing vm directly control device partition bypassing virtualization stack however device passthrough requires highend expensive powerhungry hardware place scalability limit consolidation ratio support efficient switching multiple vms host present paravirtual interface securely expose io device directly guest o running inside vm yet allows device securely shared among multiple vms host compared bestknown paravirtualization interface paravirtual interface support higher throughput closer performance device passthrough unlike device passthrough however require sriov iommu support allow finegrained dynamic resource allocation significantly higher consolidation ratio seamless vm migration security mechanism based novel approach called dynamic binary opcode subtraction
ComputerScience,folding tree map,analysis retrieval architecture highly influential unix file system cite ritchie cite multicsfs provides insight design method constraint possible alternative basic architecture understood term function composition recursion anyone mathematical maturity expertise operating system coding specialized formal method required
ComputerScience,tinylfu highly efficient cache admission policy,paper proposes use frequency based cache admission policy order boost effectiveness cache subject skewed access distribution given newly accessed item eviction candidate cache scheme decides based recent access history whether worth admitting new item cache expense eviction candidate realizing concept enabled novel approximate lfu structure called tinylfu maintains approximate representation access frequency large sample recently accessed item tinylfu compact lightweight build upon bloom filter theory study property tinylfu simulation synthetic workload well multiple real trace several source simulation demonstrate performance boost obtained enhancing various replacement policy tinylfu eviction policy also new combined replacement eviction policy scheme nicknamed wtinylfu presented wtinylfu demonstrated obtain equal better hitratios state art replacement policy trace scheme obtain good result trace
ComputerScience,realtime scheduling hard soft realtime system,realtime system traditionally classified hard realtime soft realtime first category safety critical realtime system missing deadline catastrophic consequence whereas second class find system need optimise quality service provided user however frontier two class thinner one may think many system considered hard realtime past reconsidered different light paper shall first recall fundamental notion timepredictability criticality order understand realtime deadline use theoretical model come shall introduce model soft realtime system present one popular method scheduling hard soft realtime task resource reservation framework finally shall show resource reservation technique successfully applied design classical control system thus adding robustness system increasing resource utilisation performance
ComputerScience,parallel sequential reclaiming multicore realtime global scheduling,integrating hard soft nonrealtime task general purpose operating system necessary provide temporal isolation timing property one task depend behaviour others however strict budget enforcement lead inefficient use computational resource presence task variable workload many resource reclaiming algorithm proposed literature single processor scheduling enough work exists global scheduling multiprocessor system report propose two reclaiming algorithm multiprocessor global scheduling prove correctness
ComputerScience,research scalability operating system multicore processor,large number core hardware resource sharing two characteristic multicore processor bring new challenge design operating system locate analyze speedup restrictive factor operating system simulate avoid phenomenon speedup decrease number core lock contention ie lock thrashing avoid contention shared resource last level cache key challenge operating system scalability research multicore system
ComputerScience,energyaware fixedpriority multicore scheduling realtime system,multicore processor becoming popular embedded realtime system fixedpriority scheduling tasksplitting realtime system widely applied current approach taken consideration energyaware aspect dynamic voltagefrequency scheduling dvs paper propose two strategy apply dynamic voltage scaling dvs fixedpriority scheduling algorithm tasksplitting periodic realtime task multicore processor first strategy determines voltage scale processor scheduling static dvs ensures task meet timing requirement synchronization second strategy adaptively determines frequency task scheduling adaptive dvs according total utilization taskset number core available combination frequency preallocation tasksplitting make possible maximize energy saving dvs simulation result show possible achieve significant energy saving dvs preserving schedulability requirement realtime scheduler multicore processor
ComputerScience,mixedcriticality scheduling io,paper address problem scheduling task different criticality level presence io request mixedcriticality scheduling higher criticality task given precedence lower criticality impossible guarantee schedulability task mixedcriticality scheduling gained attention recent year approach typically assume periodic task model assumption always hold practice especially realtime embedded system perform io example many task block io request device signal completion via interrupt arrival interrupt waking blocked task aperiodic prior work developed scheduling technique quest realtime operating system integrates timebudgeted management io operation sporadic server scheduling task paper extends previous scheduling approach support mixedcriticality task io request processing core result show effective schedulability different task set presence io request superior approach compared traditional method manage io using technique sporadic server
ComputerScience,isolate first share new o architecture datacenter computing,paper present isolate first share o model processor core memory device divided disparate o instance new abstraction subos proposed encapsulate o instance created destroyed resized onthefly intuition avoids shared kernel state application turn reduces performance loss caused contention decompose o supervisor several suboses running privilege level subos directly manages physical resource supervisor create destroy resize subos onthefly supervisor suboses state sharing fast intersubos communication mechanism provided demand present first implementation rainforest support unmodified linux binary comprehensive evaluation show rainforest outperforms linux four different kernel lxc xen term worstcase average performance time running large number benchmark source code available soon
ComputerScience,aware controlling app access io device mobile platform,smartphones camera microphone device display enable user capture view memorable moment life however adversary trick user authorizing malicious apps exploit weakness current mobile platform misuse onboard io device stealthily capture photo video screen content without user consent contemporary mobile operating system fail prevent misuse io device authorized apps due lack binding user interaction access io device performed apps paper propose aware security framework authorizing app request perform operation using io device bind app request user intention make us certain io device explicit evaluate defense mechanism laboratorybased experimentation user study involving human subject whose ability identify undesired operation targeting io device increased significantly without aware participant able identify attack tested rat apps aware systematically block attack absence user consent support user identifying socialengineering attack tested hijack approved request including sophisticated form social engineering yet present available rat aware introduces maximum performance overhead operation targeting io device aware show combination system defense user interface significantly strengthen defense controlling use onboard io device
ComputerScience,optimized round robin cpu scheduling algorithm dynamic time quantum,cpu scheduling one crucial operation performed operating system different algorithm available cpu scheduling amongst rr round robin considered optimal time shared environment effectiveness round robin completely depends choice time quantum paper new cpu scheduling algorithm proposed named dabrr dynamic average burst round robin us dynamic time quantum instead static time quantum used rr performance proposed algorithm experimentally compared traditional rr existing variant rr result approach presented paper demonstrate improved performance term average waiting time average turnaround time context switching
ComputerScience,qualitative comparison mpsoc mobile embedded virtualization technique,virtualization generally adopted server desktop environment provide fault tolerance resource management energy efficiency virtualization enables parallel execution multiple operating system os sharing hardware resource virtualization previously deemed feasible technology mobile embedded device due limited processing memory resource however enterprise advocating bring device byod application enable coexistence heterogeneous os single mobile device moreover embedded device require virtualization logical isolation secure general purpose os single device paper investigate processor architecture mobile embedded space examining formal visualizability also compare virtualization solution enabling coexistence multiple os multicore processor systemonchip mpsoc mobile embedded system advocate virtualization necessary manage resource mpsoc design enable byod security logical isolation use case
ComputerScience,design netbsd io subsystem,book describes source code netbsd operating system release sun ultrasparc platform annotating related excerpt reference user manual netbsd operating system goal book provide necessary information understand operation implementation io subsystem kernel well design implement new filesystem netbsd platform
ComputerScience,time o mechanism enforcing asymmetric temporal integrity,mixedcriticality system combine realtime component different level criticality ie severity failure processor order obtain good resource utilisation must guarantee deadline highlycritical task expense lowercriticality one case overload present operating system provide inadequate support kind system growing importance avionics vertical present approach provides required asymmetric integrity implementation highassurance microkernel
ComputerScience,compatible usable mandatory access control goodenough o security,o compromise one serious computer security problem today still resolved although people proposed different kind method could accepted user nonexpert due lack compatibility usability paper introduce kind new mandatory access control model named cumac aim achieve goodenough security high compatibility usability two novel feature one access control based tracing potential intrusion reduce false negative facilitate security configuration order improve compatibility usability automatically figuring compatibility exception usually incurs incompatible problem experiment performed prototype show cumac defense attack network mobile disk local untrustable user keeping good compatibility usability
ComputerScience,confining window interprocess communication oslevel virtual machine,oslevel virtualization technology usually imposes little overhead virtual machine startup running provides excellent choice building intrusionfault tolerant application require redundancy frequent invocation developing window oslevel virtual machine however people inevitably face challenge confining window interprocess communication ipc ipc window platform complex unix style o program window opensource difficult discover performed ipcs confine paper propose three general principle confine ipc window o novel ipc confinement mechanism based principle mechanism first time literature successfully virtualized rpc system service rpcss internet information server ii featherweight virtual machine fvm experimental result demonstrate multiple ii web server instance simultaneously run single window o much le performance overhead popular vm technology offering good basis constructing dependable system
ComputerScience,virtualizing system ordinary service windowsbased oslevel virtual machine,oslevel virtualization incurs smaller startup runtime overhead halbased virtualization thus form important building block developing faulttolerant intrusiontolerant application complete implementation oslevel virtualization window platform requires virtualization window service system service like remote procedure call server service rpcss essentially extension kernel window system service work differently counterpart unixstyle o ie daemon many implementation detail proprietary virtualizing window system service turned challenging technical barrier oslevel virtualization window platform paper describe general technique virtualize window service demonstrate effectiveness applying successfully virtualize set important window system service ordinary service different version window o including rpcss dcomlaunch ii service group tlntsvr mysql cisvc imapiservice etc
ComputerScience,implementing rbac model operating system kernel,paper implementation operating system oriented rbac model discussed firstly basis model new rbac model named osr presented secondly osr model enforced rfsos kernel way integrating gfac method capability mechanism together part osr implementation described detail
ComputerScience,evaluation coarsegrained locking multicore microkernels,tradeoff coarse finegrained locking well understood issue operating system coarsegrained locking provides lower overhead low contention finegrained locking provides higher scalability contention though expense implementation complexity duced bestcase performance revisit tradeoff context microkernels tightlycoupled core shared cache low intercore migration latency evaluate performance two architecture arm mpcore former case also utilising transactional memory intel tsx thesis hardware welldesigned microkernel short system call take advantage coarsegrained locking modern hardware avoid runtime complexity cost multiple lock enable formal verification still achieve scalability comparable finegrained locking
ComputerScience,memshare dynamic multitenant memory keyvalue cache,web application performance heavily reliant hit rate memorybased cache current drambased web cache statically partition memory across multiple application sharing cache cause utilization memory negatively impact cache hit rate present memshare novel web memory cache dynamically manages memory across application memshare provides resource sharing model guarantee private memory different application dynamically allocating remaining shared memory optimize overall hit rate today high cost dram storage availability high performance cpu memory bandwidth make web cache memory capacity bound memshare logstructured design allows provide significantly higher hit rate dynamically partition memory among application expense increased cpu memory bandwidth consumption addition memshare allows application use eviction policy object independent application implemented memshare ran weeklong trace commercial memcached provider demonstrate memshare increase combined hit rate application trace hit rate hit rate reduces total number miss without affecting system throughput latency even singletenant application memshare increase average hit rate current stateoftheart memory cache additional realworld trace
ComputerScience,cannyfs opportunistically maximizing io throughput exploiting transactional nature batchmode data processing,introduce user mode file system cannyfs hide latency assuming io operation succeed user mode process turn report error allowing proper cleanup repeated attempt take place demonstrate benefit model task extracting archive removing directory tree reallife hpc environment giving typical reduction time use approach considered view hpc job io activity transaction general file system lack clearly defined transaction semantics time competing trend add cache maintain data integrity resulted different practical tradeoff highperformance computing special case overall throughput demand high latency also high nonlocal storage addition theoretically possible io error like permission denied loss connection exceeding disk quota frequently warrant resubmission full job task rather traditional error reporting handling therefore opportunistically treating io operation successful part larger transaction speed application leverage asynchronous io
ComputerScience,flashield keyvalue cache minimizes writes flash,price per bit drop ssd increasingly becoming default storage medium cloud application database however become preferred storage medium keyvalue cache even though ssd offer lower price per bit sufficient performance compared dram keyvalue cache need frequently insert update evict small object cause excessive writes erasure flash storage since flash support writes erasure large chunk data excessive writes erasure significantly shorten lifetime flash rendering impractical use keyvalue cache present flashield hybrid keyvalue cache us dram filter minimize writes ssd flashield performs lightweight machine learning profiling predict object likely read frequently getting updated object prime candidate stored ssd written ssd large chunk sequentially order efficiently utilize cache available memory design novel inmemory index variablesized object stored flash requires byte per object dram describe flashield design implementation evaluate realworld cache trace compared stateoftheart system suffer write amplification flashield maintains median write amplification without loss hit rate throughput
ComputerScience,tackling diversity heterogeneity vertical memory management,existing memory management mechanism used commodity computing machine typically adopt hardware based address interleaving o directed random memory allocation service generic application request conventional memory management mechanism challenged contention multiple memory level daunting variety workload behavior increasingly complicated memory hierarchy paper proposes vertical partitioning eliminate shared resource contention multiple level memory hierarchy combined horizontal memory management policy framework support flexible policy space tackling diverse application need production environment suitable future heterogeneous memory system
ComputerScience,mixedcriticality scheduling dynamic redistribution shared cache,design mixedcriticality system often involvespainful tradeoff safety guarantee performancehowever use detailed architectural modelsin design analysis scheduling arrangement mixedcriticalitysystems provide greater confidence analysis also opportunity better performance motivated thisview propose extension vestal model mixedcriticalitymulticore system account pertaskpartitioning lastlevel cache ii support dynamicreassignment better schedulability cache portion initiallyreserved lowercriticality task highercriticalitytasks system switch highcriticality mode tothis model apply partitioned edf scheduling ekbergand yi deadlinescaling technique schedulability analysisand scalefactor calculation cognisant cache resourcesassigned task using wcet estimate take intoaccount resource hence able leverage dynamicreconfiguration cache partitioning mode change forbetter performance term provable schedulability alsopropose heuristic partitioning cache low highcriticalitymode promote schedulability experimentswith synthetic task set indicate tangible improvement inschedulability compared baseline cacheaware arrangementwhere redistribution cache resource low tohighcriticality task event mode change
ComputerScience,entirely protecting operating system transient error space environment,article propose mainlysoftware hardening technique totally protect unmodified running operating system cot hardware transient error heavily radiation flooded environment like high altitude space technique currently implemented hypervisor allows control upper layer software stack operating system application rest system hypervisor protected mean thus resulting completely protected system transient error induced overhead turn around expected decrease future improvement
ComputerScience,case single system image personal device,computing technology gotten cheaper powerful allowing user growing number personal computing device disposal trend beneficial user also creates growing management burden user device must managed independently user must repeat management task device updating software changing configuration backup replicating data availability prevent management burden increasing number device propose device run single system image called personal computing image personal computing image export devicespecific user interface device provide consistent view application operating state across device result management task performed device automatically propagated device belonging user discus evolutionary step taken achieve personal computing image device elaborate challenge believe building system face
ComputerScience,barrier enabled io stack flash storage,work dedicated eliminating overhead guaranteeing storage order modern io stack existing block device adopts prohibitively expensive resort ensuring storage order among write request interleaving successive write request transfer flush exploiting cache barrier command flash storage overhaul io scheduler dispatch module filesystem layer orchestrated preserve ordering condition imposed application delivered storage key ingredient barrier enabled io stack epoch based io scheduling order preserving dispatch dual mode journaling barrier enabled io stack successfully eliminates root cause excessive overhead enforcing storage order dual mode journaling barrierfs dedicates separate thread effectively decouple control plane data plane journal commit implement barrier enabled io stack server well mobile platform sqlite performance increase server smartphone respectively relaxing durability transaction sqlite performance mysql performance increase much respectively server storage
ComputerScience,implementation android framework usb storage access without root right,bachelor thesis describes implementation android framework access mass storage device usb interface smartphone first basic usb ie interface endpoint usb go accessing usb device via official android api discussed next usb mass storage class explained de signed usbif access mobile mass storage like usb pen drive external hdds communication mass storage device important bulkonly transfer scsi transparent command set furthermore file system accessing directo ries file described thesis focus file system microsoft commonly used file system device theory part time look implementation framework section first concern purpose general architecture framework actual implementation presented important part discussed detail thesis finish overview test result various android device short conclusion outlook future development moreover current status developed framework visualized
ComputerScience,migrate necessary toward partitioned reclaiming soft realtime task,paper present new strategy scheduling soft realtime task multiple identical core proposed approach based partitioned cpu reservation us reclaiming mechanism reduce number missed deadline introduce possibility task temporarily migrate another le charged cpu exhausted reserved bandwidth allocated cpu addition propose simple load balancing method decrease number deadline missed task proposed algorithm evaluated simulation showing effectiveness compared multicore reclaiming approach comparing performance different partitioning heuristic best fit worst fit first fit
ComputerScience,posixbased operating system environment nvmscm memory,modern operating system typically posixcompliant system call fundamental layer interaction userspace application o kernel implementation fundamental abstraction primitive used modern computing next generation nvmscm memory raise critical question efficiency modern o architecture paper investigates posix api drive performance system nvmscm memory show o metadata related system call represent important area optimization however synchronization related system call poll futex timeconsuming overhead even ramdisk platform fails eliminate attempting preserve posixbased approach likely result fundamental inefficiency future application nvmscm memory
ComputerScience,elevating commodity storage salsa host translation layer,satisfy increasing storage demand capacity performance industry turned multiple storage technology including flash ssds smr disk device employ translation layer conceals idiosyncrasy medium enables random access device translation layer however inherently constrained resource drive scarce adapted application requirement lack visibility across multiple device result performance durability many storage device severely degraded paper present salsa translation layer executes host allows unmodified application better utilize commodity storage salsa support wide range single multidevice optimization implemented software adapt specific workload describe salsa design demonstrate significant benefit using microbenchmarks case study based three application mysql swift object store video server
ComputerScience,vlibos babysitting o evolution virtualized library o,many application service requirement easily met existing operating system realtime securitycritical task example often require custom os meet need however development special purpose os timeconsuming difficult exercise driver library application written scratch ported existing source many researcher tackled problem developing way extend existing system applicationspecific service however often difficult ensure adequate degree separation legacy new service especially security timing requirement stake virtualization example support logical isolation separate guest service suffers inadequate temporal isolation timecritical code required realtime system paper present vlibos masterslave paradigm new system whose service built legacy code temporally spatially isolated separate vm domain existing os treated sandboxed library providing legacy service requested intervm call execute time budget caller evaluate realtime implementation vlibos empirical result show vlibos achieves much reduction performance slowdown realtime thread competing shared memory bus linux vm
ComputerScience,ireplayer insitu identical recordandreplay multithreaded application,reproducing execution multithreaded program challenging due many intrinsic external nondeterministic factor existing rnr system achieve significant progress term performance overhead none target insitu setting replay occurs within process recording process also existing work achieve identical replay may prevent reproduction error paper present ireplayer aim identically replay multithreaded program original process insitu setting novel insitu identical replay ireplayer make likely reproduce error allows directly employ debugging mechanism eg watchpoints aid failure diagnosis currently ireplayer incurs performance overhead average allows always enabled production environment ireplayer enables range possibility paper present three example two automatic tool detecting buffer overflow useafterfree bug one interactive debugging tool integrated gdb
ComputerScience,datacenter rpcs general fast,commonly believed datacenter networking software must sacrifice generality attain high performance popularity specialized distributed system designed specifically niche technology rdma lossless network fpgas programmable switch testifies belief paper show specialization necessary erpc new generalpurpose remote procedure call rpc library offer performance comparable specialized system running commodity cpu traditional datacenter network based either lossy ethernet lossless fabric erpc performs well three key metric message rate small message bandwidth large message scalability large number node cpu core handle packet loss congestion background request execution microbenchmarks one cpu core handle million small rpcs per second send large message gbps port productiongrade implementation raft state machine replication erpc without modifying core raft source code achieve microsecond replication latency lossy ethernet faster comparable specialized replication system use programmable switch fpgas rdma
ComputerScience,minimizing eventhandling latency secure virtual machine,virtualization found widespread adoption server desktop arena poised change architecture embedded system well benefit afforded virtualization enhanced isolation manageability flexibility security could instrumental developer embedded system answer rampant increase complexity mature desktop server solution exist easily reused embedded system markedly different requirement unfortunately optimization aimed throughput important server often compromise aspect like predictable realtime behavior crucial many embedded system similar vein requirement small trusted computing base lightweight intervm communication small footprint often accommodated observation suggests virtual machine embedded system constructed scratch particular attention paid specific requirement paper set virtual machine designed securityconscious workload describe step necessary achieve good eventhandling latency evolution possible underlying microkernel well suited satisfy realtime requirement guest system chose linux preemptrt configuration developed effort bring eventhandling latency general purpose system result indicate increase eventhandling latency guest running virtual machine compared native execution exceed factor two
ComputerScience,blocking time basic priority inheritance polynomial bound exact computation,priority inheritance protocol pip arguably bestknown protocol resource sharing realtime constraint importance modern application undisputed nevertheless job may blocked pip variety reason determining job maximum blocking time could difficult thus far exact method proposed existing analysis method inefficient inaccurate limited applicability article proposes new characterization problem thus allowing polynomial method bounding blocking time exact optimally efficient method blocking time computation priority inheritance general applicability
ComputerScience,integrating proactive mode change mixed criticality system,work propose integrate prediction algorithm scheduling mode change earliestdeadlinefirst fixedpriority scheduling mixedcriticality realtime system method proactively schedule mode change system based state variable laxity percentage difference temporal distance completion time instance task respective deadline deadline stipulated task order minimize deadline miss simulation model validated analytical model prior logical integration kalmanbased prediction algorithm two study case presented one covering earliestdeadline first fixedpriority scheduling approach result showed gain adoption prediction approach scheduling paradigm presenting significant reduction number missed deadline lowcriticality task
ComputerScience,new analysis technique supporting hard realtime sporadic dag task system multiprocessor,scheduling schedulability analysis realtime directed acyclic graph dag task system received much recent attention dag model accurately represent intratask parallelim precedence constraint existing many application domain existing technique show analyzing dag model fundamentally challenging compared ordinary sporadic task model due complex intradag precedence constraint may cause rather pessimistic schedulability loss however increased loss counterintuitive dag structure shall better exploit parallelism provided multiprocessor platform observation intradag precedence constraint carefully considered scheduling algorithm may cause unpredictable execution behavior subtasks dag cause pessimistic analysis paper present set novel scheduling analysis technique better supporting hard realtime sporadic dag task multiprocessor smartly defining analyzing execution order subtasks dag evaluation demonstrates developed utilizationbased schedulability test highly efficient dramatically improves schedulability existing utilizationbased test average interestingly dag system ordinary sporadic task test becomes identical classical density test designed sporadic task model
ComputerScience,realtime linux communication evaluation linux communication stack realtime robotic application,robotics system become distributed communication different robot module play key role reliability overall robot control paper present study linux communication stack meant realtime robotic application evaluate realtime performance udp based communication linux multicore embedded device test platform prove appropriate configuration linux kernel greatly enhances determinism communication using udp protocol furthermore demonstrate concurrent traffic disrupts bounded latency propose solution separating realtime application corresponding interrupt cpu
ComputerScience,dependency graph approach multiprocessor realtime synchronization,year many multiprocessor locking protocol designed analyzed however performance protocol highly depends task partitioned prioritized resource shared locally globally paper answer fundamental question realtime task share resource multiprocessor system explore fundamental difficulty multiprocessor synchronization problem show simplified version problem mathcal np hard strong sense regardless number processor underlying scheduling paradigm therefore allowance preemption migration reduce computational complexity positive side develop dependencygraph approach specifically useful framebased realtime task task period release job always time present series algorithm speedup factor semipartitioned scheduling explore methodology tradeoff preemptive nonpreemptive scheduling algorithm partitioned semipartitioned scheduling algorithm approach extended periodic task certain condition
ComputerScience,platformagnostic stealtime measurement guest operating system,steal time key performance metric application executed virtualized environment steal time measure amount time processor preempted code outside virtualized environment turn allows compute accurately execution time application inside virtual machine ie eliminates time virtual machine suspended unfortunately metric available particular scenario host guest o tightly coupled typical example xen hypervisor linuxbased guest os contrast scenario steal time available inside virtualized environment performance measurement often incorrect paper introduce novel platform agnostic approach calculate steal time within virtualized environment without cooperation host o theoretical execution time deterministic microbenchmark compared execution time virtualized environment factoring virtual machine load solution simple compute steal time preliminary result show able compute load physical processor within virtual machine high accuracy
ComputerScience,bravo biased locking readerwriter lock,designer modern readerwriter lock confront difficult tradeoff related reader scalability lock compact memory representation active reader typically suffer high intensity readdominated workload reader indicator state updated frequently diverse set thread causing cache invalidation coherence traffic design cohort readerwriter lock use distributed reader indicator one per numa node improves readerreader scalability also increase size lock instance propose simple transformation bravo augments existing readerwriter lock adding two integer field lock instance reader make presence known writer hashing thread identity lock address forming index visible reader table reader attempt install lock address element table making existence known potential writer lock thread address space share visible reader table update reader tend diffused table resulting numafriendly design crucially reader lock tend write different location array reducing coherence traffic specifically bravo allows simple compact lock augmented provide scalable concurrent reading modest increase footprint
ComputerScience,twa ticket lock augmented waiting array,classic ticket lock consists ticket grant field arriving thread atomically fetchandincrement ticket wait grant become equal value returned fetchandincrement primitive point thread hold lock corresponding unlock operation simply increment grant simple design short code path fast handover transfer ownership light contention may suffer degraded scalability high contention multiple thread busy wait grant field socalled global spinning propose variation ticket lock longterm waiting thread wait location waiting array instead busy waiting grant field single waiting array shared among lock shortterm waiting accomplished usual manner grant field resulting algorithm twa improves ticket lock limiting number thread spinning grant field given time reducing number remote cache requiring invalidation store release lock turn accelerates handover since lock held throughout handover operation scalability improves light contention twa yield performance comparable classic ticket lock avoiding complexity extra access incurred mc lock handover path providing performance beyond mc high contention
ComputerScience,finding crashconsistency bug bounded blackbox crash testing,present new approach testing filesystem crash consistency bounded blackbox crash testing test file system blackbox manner using workload filesystem operation since space possible workload infinite bound space based parameter number filesystem operation operation include exhaustively generates workload within bounded space workload tested target file system simulating powerloss crash workload executed checking file system recovers correct state crash build upon insight derived study crashconsistency bug reported linux file system last five year observed reported bug reproduced using small workload three fewer filesystem operation newlycreated file system reported bug result crash fsync related system call build two tool crashmonkey ace demonstrate effectiveness approach tool able find crashconsistency bug reported last five year tool also revealed new crashconsistency bug widelyused mature linux file system seven existed kernel since tool also found crashconsistency bug verified file system fscq new bug result severe consequence like broken rename atomicity loss persisted file
ComputerScience,revitalizing copybacks modern ssds,modern flashbased ssds performance overhead internal data migration dominated data transfer time flash program time old ssds order mitigate performance impact data migration propose rcopyback restricted version copyback rcopyback work like original copyback except n consecutive copybacks allowed limiting number successive copybacks guarantee data reliability problem occurs data internally migrated using rcopyback order take full advantage rcopyback developed rcopybackaware ftl rcftl intelligently decides whether rcopyback used exploiting varying host workload evaluation result show rcftl improve overall io throughput average existing ftl use copybacks
ComputerScience,tvisor hypervisor mixed criticality embedded realtime system hardware virtualization support,recently embedded system requirement hard realtime behavior reliability also diversified functional demand network function satisfy requirement virtualization using hypervisors promising embedded system however existing hypervisors designed generalpurpose information processing system rely large system stack suitable mixed criticality embedded realtime system even hypervisors designed embedded system scheduler consider diversity realtime requirement rapid change scheduling theory present design implementation tvisor hypervisor specialized mixed criticality embedded realtime system tvisor support arm architecture realizes full virtualization using arm virtualization extension guarantee realtime behavior tvisor provides flexible scheduling framework developer select suitable scheduling algorithm system evaluation showed performed better compared xenarm result conclude design implementation suitable embedded realtime system existing hypervisors
ComputerScience,time protection missing o abstraction,timing channel enable data leakage threatens security computer system cloud platform smartphones browser executing untrusted thirdparty code preventing unauthorised information flow core duty operating system however present os unable prevent timing channel argue os must provide time protection addition established memory protection examine requirement time protection present design implementation microkernel evaluate efficacy well performance overhead arm processor
ComputerScience,compact numaaware lock,modern multisocket architecture exhibit nonuniform memory access numa behavior access core data cached locally socket much faster access data cached remote socket prior work offer several efficient numaaware lock exploit behavior keeping lock ownership socket thus reducing remote cache miss intersocket communication virtually lock however hierarchical nature thus requiring space proportional number socket increased memory cost render numaaware lock unsuitable system conscious space requirement synchronization construct linux kernel chief example work present compact numaaware lock requires one word memory regardless number socket underlying machine new lock variant efficient numaoblivious mc lock inherits performant feature local spinning single atomic instruction acquisition path unlike mc new lock organizes waiting thread two queue one composed thread running socket current lock holder another composed thread running different socket integrated new lock linux kernel qspinlock one major synchronization construct kernel evaluation using userspace kernel benchmark show new lock singlethread performance mc significantly outperforms latter contention achieving similar level performance compared stateoftheart numaaware lock require substantially space
ComputerScience,durablefs file system persistent memory,availability hybrid dramnvram memory memory bus cpu number file system nvram designed implemented paper present design implementation file system nvram called durablefs provides atomicity durability file operation application due byte level random accessibility memory possible provide guarantee without much overhead use standard technique like copy write data redo log metadata change build efficient file system provides durability atomicity guarantee time file closed benchmark implementation show degradation performance due providing guarantee
ComputerScience,transkernel bridging monolithic kernel peripheral core,smart device see large number ephemeral task driven background activity order execute task o kernel wake platform beforehand put back sleep afterwards kernel operates various io device orchestrates power state transition kernel execution inefficient mismatch typical cpu hardware better running lowpower microcontrollerlike core ie peripheral core relieving cpu inefficiency therefore present new o structure lightweight virtual executor called transkernel offloads specific phase monolithic kernel transkernel translates stateful kernel execution crossisa dynamic binary translation dbt emulates small set stateless kernel service behind narrow stable binary interface specializes hot path exploit isa similarity lowering dbt cost armbased prototype demonstrate transkernel feasibility benefit show crossisa dbt typically used assumption efficiency loss enable efficiency gain even offtheshelf hardware
ComputerScience,minios instructional platform teaching operating system lab,delivering handson practice laboratory introductory course operating system difficult task one main source difficulty sheer size complexity operating system software consequently solution adopted literature teach operating system laboratory consider smaller simpler system generally referred instructional operating system work continues direction threefold first considers simpler hardware platform second argues minimal operating system viable option delivering laboratory third present laboratory teaching platform whereby student build minimal operating system embedded hardware platform proposed platform called minios important aspect minios sufficiently supported additional technical pedagogic material finally effectiveness proposed approach teach operating system laboratory illustrated experience using deliver laboratory project operating system course university northern british columbia finally discus experimental research computing education considered qualitative result work part larger research endeavour
ComputerScience,xos applicationdefined operating system data center server,rapid growth datacenter dc scale urgency cost control increasing workload diversity huge software investment protection place unprecedented demand operating system o efficiency scalability performance isolation backwardcompatibility traditional os built work deephierarchy software stack large number core tail latency guarantee increasingly rich variety application seen modern dc thus struggle meet demand workload paper present xos applicationdefined o modern dc server design move resource management o kernel support customizable kernel subsystem user space enables elastic partitioning hardware resource specifically xos leverage modern hardware support virtualization move resource management functionality conventional kernel user space let application achieve near baremetal performance implement xos top linux provide backward compatibility xos speed set dc workload baseline linux server outperforms stateoftheart dune term virtual memory management addition xos demonstrates good scalability strong performance isolation
ComputerScience,efficient dynamic multitenant edge computation edgeos,future computing immersed world around u augmented reality autonomous vehicle internet thing many smart device offer service respond real time physical surroundings requiring complex processing strict performance guarantee edge cloud promise pervasive computational infrastructure short network hop away end device today operating system poor fit meet goal scalable isolation dense multitenancy predictable performance required emerging application paper present edgeos microkernel based operating system meet goal blending recent advance realtime system network function virtualization edgeos introduces featherweight process model offer lightweight isolation support extreme scalability even high churn architecture provides efficient communication mechanism lowoverhead perclient isolation achieve high performance networking edgeos employ kernel bypass paired isolation property featherweight process evaluated edgeos prototype running high scale network middleboxes using click software router endpoint application using memcached edgeos reduces startup latency compared linux process five order magnitude compared container providing three order magnitude latency improvement running edgecloud memcached instance one server
ComputerScience,file system datacentric computing,moving computation edge near data new trend break bandwidth wall unleash power next generation nvm scm memory file system important o subsystem play role mediator userspace application storage device key goal file system represent file abstraction build file namespace current paradigm file system need copy metadata user data dram host goal access modify user data host side dax approach nt change concept build way bypass page cache via direct access file content persistent memory generally speaking case datacentric computing file system need solve opposite task copy data page cache deliver processing activity near data storage device side
ComputerScience,cdag task model scheduling complex realtime task heterogeneous platform preemption matter,recent commercial hardware platform embedded realtime system feature heterogeneous processing unit computing accelerator systemonchip designing complex realtime application architecture designer need make number difficult choice processor certain task implemented component implemented parallel sequentially choice may great impact feasibility difference processor internal architecture impact task execution time preemption cost help designer explore wide space design choice tune scheduling parameter paper propose novel realtime application model called cdag specifically conceived heterogeneous platform cdag allows specify alternative implementation component application different processing engine selected offline well conditional branch model ifthenelse statement selected runtime also propose schedulability analysis cdag model heuristic allocation algorithm deadline respected analysis take account cost preempting task nonnegligible certain processor demonstrate effectiveness approach large set synthetic experiment comparing state art algorithm literature
ComputerScience,multiverse easy conversion runtime system o kernel via automatic hybridization,hybrid runtime hrt model offer path towards high performance efficiency integrating o kernel runtime application hrt allows runtime developer leverage full feature set hardware specialize o service runtime need however conforming hrt model currently requires port runtime kernel level example nautilus kernel framework requires knowledge kernel internals response developed multiverse system bridge gap builtfromscratch hrt legacy runtime system multiverse allows unmodified application runtimes brought hrt model without porting effort whatsoever splitting execution application domain legacy o hrt environment describe design implementation multiverse illustrate capability using massive widelyused racket runtime system
ComputerScience,prove time protection,timing channel significant growing security threat computer system established solution recently argued o must provide time protection analogy established memory protection protect application information leakage timing channel based recentlyproposed implementation time protection microkernel investigate implementation could formally proved prevent timing channel postulate possible reasoning highly abstracted representation shared hardware resource cause timing channel
ComputerScience,cloud programming simplified berkeley view serverless computing,serverless cloud computing handle virtually system administration operation needed make easier programmer use cloud provides interface greatly simplifies cloud programming represents evolution parallel transition assembly language highlevel programming language paper give quick history cloud computing including accounting prediction berkeley view cloud computing paper explains motivation serverless computing describes application stretch current limit serverless list obstacle research opportunity required serverless computing fulfill full potential paper identified challenge cloud predicted would addressed cloud use would accelerate predict issue solvable serverless computing grow dominate future cloud computing
ComputerScience,pyronia intraprocess access control iot application,thirdparty code play critical role iot application generate analyze highly privacysensitive data unlike traditional desktop server setting iot device mostly run dedicated single application result vulnerability thirdparty library within process pose much bigger threat traditional platform present pyronia finegrained access control system iot application written highlevel language pyronia exploit developer coarsegrained expectation imported thirdparty code operates restrict access file device specific network destination granularity individual function efficiently protect sensitive o resource pyronia combine three technique system call interposition stack inspection memory domain design avoids need application refactoring unintuitive data flow analysis enforcing developer access policy run time pyronia prototype python run custom linux kernel incurs moderate performance overhead unmodified python application
ComputerScience,lustre storage architecture,lengthy document often referred lustre book contains detailed outline lustre file system architecture created accordance requirement various user feature implemented recently along different line thought
ComputerScience,processor nonvolatile memory pinvsm towards datacentric computing decentralized environment,ai problem solution environment existing hardware stack o architecture cpucentric model computation huge number drawback originate memory hierarchy obsolete architecture computing core concept mixing memory logic around since however concept processorinmemory pim unable resolve critical issue cpucentric computing model inevitable replication von neumann architecture drawback next generation nvmscm memory able give second birth datacentric computing paradigm paper present concept processor nonvolatile memory pinvsm architecture basis pinvsm architecture concept dpu contains nvm memory dedicated pu necessary pu register implemented space nvm memory nvm memory dpu single space storing transformation data basis pinvsm architecture lie dpu array able overcome limitation turing machine model von neumann architecture dpu array nt centralized computing core every data portion dedicated computing core excludes necessity transfer data place data processing every dpu contains data portion associated set keywords complex data structure split elementary item stored independent dpu dedicated computing core one dpu able apply elementary transformation one item dpu array able make transformation complex structure mean concurrent execution elementary transformation different dpus pinvsm architecture suggests principally new architecture computing core creates new opportunity data selforganization data code synthesis
ComputerScience,nature system call cpucentric computing paradigm,modern operating system typically posixcompliant major system call specified decade ago next generation nonvolatile memory nvm technology raise concern efficiency traditional posixbased system one step toward building high performance nvm system explore potential dependency system call performance major hardware component eg cpu memory storage typical user case eg software compilation installation web browser office suite paper build histogram frequent timeconsuming system call goal understand nature distribution different platform find strong dependency system call performance cpu architecture hand type persistent storage play le important role affecting performance
ComputerScience,multik framework orchestrating multiple specialized kernel,present multik linuxbased framework reduces attack surface operating system kernel reducing code bloat multik orchestrates multiple kernel specialized individual application transparent manner framework flexible accommodate different kernel code reduction technique importantly run specialized kernel nearzero additional runtime overhead multik avoids overhead virtualization run natively system instance apache instance shown run kernel code reduced b known kernel vulnerability eliminated c negligible performance overhead multik framework integrate existing code reduction o security technique demonstrate using dkut skut two method profile eliminate unwanted kernel code whole process transparent user application multik require recompilation application
ComputerScience,avoiding scalability collapse restricting concurrency,saturated lock often degrade performance multithreaded application leading socalled scalability collapse problem problem arises growing number thread circulating saturated lock cause overall application performance fade even drop abruptly problem particularly solely acute oversubscribed system system thread available hardware core paper introduce gcr generic concurrency restriction mechanism aim avoid scalability collapse gcr designed generic lockagnostic wrapper intercept lock acquisition call decides thread would allowed proceed acquisition underlying lock furthermore present gcrnuma nonuniform memory access numa aware extension gcr strives ensure thread allowed acquire lock run socket extensive evaluation includes two dozen lock three machine three benchmark show gcr brings substantial speedup many case three order magnitude case contention growing thread count introducing nearly negligible slowdown underlying lock contended gcrnuma brings even larger performance gain starting even lighter lock contention
ComputerScience,slicing io execution relaytracer,analyzing io performance anomaly crucial task various computing environment ranging largescale cloud application desktop application however io stack modern operating system complicated making hard understand performance anomaly existing tool kernel io execution frequently interrupted internal kernel activity requiring sophisticated io profile tool deal noise furthermore complicated interaction concurrent io request cause different source tail latency kernel io stack consequence developer want know finegrained latency profile across io layer may differ io request meet requirement paper suggests relaytracer perrequest perlayer io profiler relaytracer enables detailed analysis identify root cause io performance anomaly providing perlayer latency distribution io request hardware performance behavior time spent kernel activity interrupt
ComputerScience,reproducible execution posix program dios,paper describe dios lightweight model operating system used execute program make use posix apis execution fully reproducible running program input twice result two exactly identical instruction trace even program us thread parallelism dios implemented almost entirely portable c c although primary platform divm verificationoriented virtual machine configured also run klee symbolic executor finally compiled machine code serve usermode kernel additionally dios modular extensible various component combined match capability underlying platform provide service required particular program new component added cover additional system call apis experimental evaluation two part dios first evaluated component program verification platform based divm second part consider portability modularity combining symbolic executor klee
ComputerScience,ssdfs towards lf flashfriendly file system without gc operation,solid state drive number interesting characteristic however numerous file system storage design issue ssds impact performance device endurance many flashoriented flashfriendly file system introduce significant write amplification issue gc overhead result shorter ssd lifetime necessity use nand flash overprovisioning ssdfs file system introduces several authentic concept mechanism logical segment logical extent segment pebs pool maindiffjournal area peb log diffonwrite approach pebs migration scheme hotwarm data selfmigration segment bitmap hybrid btree shared dictionary btree shared extent btree combination suggested concept able manage write amplification smart way decrease gc overhead prolong ssd lifetime provide predictable file system performance
ComputerScience,pastime progressaware scheduling timecritical computing,overestimation worstcase execution time wcets realtime task lead poor resource utilization mixedcriticality system mc overprovisioning cpu time accommodate wcets highly critical task lead degraded service le critical task paper present pastime novel approach monitor adapt runtime progress highly timecritical application allow improved service lower criticality task pastime cpu time allocated timecritical task according delay experience progress control flow graph ensures much time possible made available improve qualityofservice le critical task highcriticality task compensated delay paper integrate pastime adaptive mixedcriticality amc scheduling lomode budget highcriticality task adjusted according delay observed execution checkpoint using litmusrt implement amc amcpastime observe amcpastime significantly improves utilization lowcriticality task guaranteeing service highcriticality task
ComputerScience,boomerang realtime io meet legacy system,paper present boomerang io system integrates legacy nonrealtime o one customized timingsensitive task relatively small rtos benefit preexisting library driver service legacy system additionally timingcritical task isolated le critical task securely partitioning machine resource among separate os boomerang guarantee endtoend processing delay input data requires output generated within specific time bound show construct composable task pipeline boomerang combine functionality spanning custom rtos legacy linux system dedicating timecritical io rtos ensure complementary service provided linux sufficiently predictable meet endtoend service guarantee boomerang benefit spatial isolation also outperforms standalone linux system using deadlinebased cpu reservation pipeline task also show boomerang outperforms virtualized system called acrn designed automotive system
ComputerScience,leastprivilege memory protection model modern hardware,present new leastprivilegebased model addressing base memory management functionality o modern computer like phone serverbased accelerator existing software assumption account heterogeneous core different view address space leading related problem numerous security bug memory management code example programming iommus inability mainstream os securely manage complete set hardware resource say phone systemonchip new work based recent formal model address translation hardware view machine configurable network address space refine capture existing address translation hardware modern socs accelerator sufficiently fine granularity model minimal right access memory configure translation hardware build executable specification haskell express model metadata structure term partitioned capability finally show fully functional implementation model c created extending capability system barrelfish research o evaluation show unoptimized implementation comparable case better performance linux virtual memory system despite capturing functionality modern hardware addressing enabling leastprivilege decentralized authority access physical memory device
ComputerScience,kerneluserlevel collaborative persistent memory file system efficiency protection,emerging high performance nonvolatile memory recall importance efficient file system design avoid virtual file system vfs syscall overhead kernelbased file system recent work deploy file system directly user level unfortunately userlevel file system easily corrupted buggy program misused pointer hard scale multicore platform incorporates centralized coordination service paper propose kucofs kernel userlevel collaborative file system consists two part userlevel library directaccess interface kernel thread performs metadata update enforces write protection toggling permission bit page table hence kucofs achieves directaccess userlevel design finegrained write protection kernellevel one explore scalability multicores metadata scalability kucofs rebalances pathname resolution overhead kernel userspace adopting index offloading technique data access efficiency coordinate data allocation kernel userspace us rangelock write lockfree read improve concurrency experiment optane dc persistent memory show kucofs significantly outperforms existing file system show better scalability
ComputerScience,porting echronos rtos riscv architecture,echronos formally verified real time operating system rtos designed embedded microcontrollers echronos targeted tightly constrained device without memory management unit currently echronos available proprietary design like arm powerpc intel architecture echronos adopted safety critical system like aircraft control system medical implant device echronos one system software ported riscv riscv opensource instruction set architecture isa enables new era processor development many standard operating system software tool chain migrated riscv architecture according latest trend riscv replacing many proprietary chip secure rtos attractive port opensource isa shakti proven opensource riscv design available secure rtos opensource hardware design designed based opensource isa make interesting addition current architecture supported echronos proprietary design porting echronos riscv architecture increase secure system development whole paper present idea porting echronos chip opensource effective thus reducing cost embedded system designing opensource system completely opensource reduces overall cost increased security critically reviewed paper explores design architecture aspect involved porting echronos riscv author successfully ported echronos riscv architecture verified spike port riscv echronos made available opensource author along safe removal architectural dependency subsequent change echronos also analyzed
ComputerScience,sivshm secure intervm shared memory,wide spread acceptance virtualization virtual machine vms find presence various application network address translation nat server firewall server mapreduce application typically application data manager collect data external world distributes multiple worker processing currently data manager distribute data worker either using intervm shared memory ivshmem network communication ivshmem provides better data distribution throughput sacrificing security untrusted worker full access shared memory region network communication provides better security cost throughput secondly ivshmem us central distributor exchange eventfd file descriptor event queue length one used intervm signaling central distributor becomes bottleneck increase boot time vms secure intervm shared memory sivshm provided security better throughout segmenting intervm shared memory worker access segment belong thereby enabling security without sacrificing throughput sivshm boot vms le time compared ivshmem eliminating central distributor architecture enabling direct exchange eventfds amongst vms
ComputerScience,improvement thread communication multicore processor,multicore integrated circuit chip us two computational engine core place single processor new approach used split computational work threaded application spread multiple execution core computer system benefit better performance better responsiveness system thread unit execution inside process created maintained execute set action instruction thread implemented differently operating system another operating system case responsible schedule execution different thread multithreading improving efficiency processor performance costeffective memory system paper explore one approach improve communication multithreaded presend software controlled data forwarding technique sends data destination cache needed eliminating cache miss destination cache well reducing coherence traffic bus show could improve overall system performance addition architecture optimization multicore processor
ComputerScience,seuss rapid serverless deployment using environment snapshot,modern faa system perform well case repeat execution function working set stay small however platform le effective applied complex largescale dynamic workload paper introduce seuss serverless execution via unikernel snapshot stack new systemlevel approach rapidly deploying serverless function approach demonstrate order magnitude improvement function start time cacheability improves common reexecution path also unlocking previouslyunsupported largescale bursty workload
ComputerScience,apex adaptive file system enhanced data recoverability edge device,recently edge computing paradigm gained significant popularity industry academia increased usage reallife scenario security privacy integrity data environment become critical malicious deletion missioncritical data due ransomware trojan virus huge menace recovering lost data active field research edge computing device compute storage limitation difficult constraint arise providing optimal scheme data protection device mostly use linuxunix based operating system hence work focus extending file system apex adaptive file system based novel onthefly learning model provides adaptive recoverability aware file allocation platform efficient postdeletion data recovery therefore maintaining data integrity recovery model lightweight implementation allow significant improvement recoverability lost data lower compute space time cost overhead compared method demonstrate effectiveness apex case study overwriting surveillance video crypy malware raspberrypi based edge deployment show higher recovery current stateoftheart file system also evaluate overhead characteristic experimentally show lower related work
ComputerScience,enabling failureresilient intermittent system without runtime checkpointing,selfpowered intermittent system typically adopt runtime checkpointing mean accumulate computation progress across power cycle recover system status power failure however existing approach based checkpointing paradigm normally require system suspension andor logging runtime paper present design overcomes drawback checkpointingbased approach enable failureresilient intermittent system design allows accumulative execution instant system recovery frequent power failure enforcing serializability concurrent task execution improve computation progress ensuring data consistency without system suspension runtime leveraging characteristic data accessed hybrid memory integrated design freertos running texas instrument device experimental result show design still accumulate progress power source weak checkpointingbased approach make progress improves computation progress relatively strong power source reducing recovery time least
ComputerScience,cichlid explicit physical memory management large machine,paper rethink o support virtual memory classical vm opaque abstraction ram backed demand paging however system today phone datacenters page indeed may require performance benefit nonpaged physical memory precise numa allocation etc moreover mmu hardware useful purpose detecting page access providing large page translation accordingly venerable vm abstraction os like window linux acquired plethora extra apis poke policy behind illusion virtual address space instead present cichlid memory system inverts model application explicitly manage physical ram different type directly though safely program translation hardware cichlid implemented barrelfish requires virtualization support outperforms vmmbased approach smallest working set show cichlid enables usecases virtual memory possible linux today usecases simple program significantly faster
ComputerScience,cleanq lightweight uniform formally specified interface intramachine data transfer,present cleanq highperformance operatingsystem interface descriptorbased data transfer rigorous formal semantics based simple formallyverified notion ownership transfer fast reference implementation cleanq aim replace current proliferation similar subtly diverse loosely specified descriptorbased interface o kernel device driver cleanq strict semantics clarify implementation interface different hardware device software usecases also enable composition module heavyweight framework like unix stream motivate cleanq showing loose specification derived implementation lead security correctness bug production system clean formal easilyunderstandable abstraction help eliminate demonstrate experiment negligible performance cost clean design show overhead ten cycle operation comparable endtoend performance highlytuned virtio dpdk implementation linux
ComputerScience,exact polynomial time algorithm response time analysis harmonic task constrained release jitter,important application area hard realtime system preemptive sporadic task harmonic period constraint deadline running upon uniprocessor platform play important role propose new algorithm determining exact worstcase response time task lower computational complexity linear number task known algorithm developed system class also allow task execution start delayed due release jitter within certain value range checking constraint met define constraint programming problem special structure solved heuristic component time linear task number check determines admissibility jitter value linear time algorithm used determine worstcase response time also jitteraware system
ComputerScience,faster flash indepth study system challenge emerging ultralow latency ssds,emerging storage system new flash exhibit ultralow latency ull address performance disparity dram conventional solid state drive ssds memory hierarchy considering advanced lowlatency characteristic different type io completion method pollinghybrid storage stack architecture spdk proposed new technique expected take costly software intervention critical path ullapplied system unfortunately study exists quantitatively analyze systemlevel characteristic challenge combining newlyintroduced technique real ull ssds work comprehensively perform empirical evaluation ull ssd prototype characterize ull behavior considering wide range io path parameter different queue access pattern analyze efficiency challenge polledmode hybrid polling io completion method added linux kernel respectively compare efficiency conventional interruptbased io path addition revisit common expectation spdk examining system resource parameter finally demonstrate challenge ull ssds real spdkenabled serverclient system based performance behavior study uncovers also discus several system implication required take full advantage ull ssd future
ComputerScience,schedulability analysis edf scheduling considering suspension blocking,execution job may suspend ie computation cease process certain activity complete resumed paper provides counterexample schedulability analysis devi euromicro conference realtime system ecrts existing suspensionaware analysis specialized uniprocessor system preemptive earliestdeadlinefirst edf applied scheduling dynamic selfsuspending task
ComputerScience,characterizing synchronous writes stable memory device,distributed algorithm operate failrecovery model rely state stored stable memory guarantee irreversibility operation even presence failure performance algorithm lean heavily performance stable memory current storage technology defined performance profile data accessed block hundred thousand byte random access block expensive sequential access somewhat better file system implementation hide performance limitation underlying storage device using buffer cache however failrecovery distributed algorithm bypass technique perform synchronous writes able tolerate failure write assuming distributed system designer able buffer algorithm writes ask buffer size latency complement paper start answer question characterizing performance throughput latency typical stable memory device using representative set current file system
ComputerScience,libretto dynamically adaptable multiserverlibrary o,present libretto o design fuse two paradigm simultaneously address issue isolation performance compatibility failure recoverability runtime upgrade libretto act microkernel o run server isolated manner libretto also act library o better performance selected application granted exclusive access virtual hardware resource storage networking furthermore application switch two o mode interruption runtime libretto uniquely distinguishing advantage two paradigm seamlessly coexist o enabling user simultaneously exploit respective strength ie greater isolation high performance system code device driver network stack file system remain identical two mode enabling dynamic mode switching reducing development maintenance cost illustrate design principle implemented prototype libretto using rump kernel allowing u reuse existent hardened netbsd device driver large ecosystem posixbsdcompatible application use hardware vm virtualization strongly isolate different rump kernel instance original rumprun unikernel targeted much simpler model uniprocessor system redesigned support multicore system unlike kernelbypass library dpdk application need modified benefit direct hardware access libretto also support indirect access network server developed application remain uninterrupted even network component fail need upgraded finally efficiently use hardware resource application dynamically switch indirect direct mode based io load runtime full abstract paper
ComputerScience,fissile lock,classic testandtest t mutual exclusion lock simple enjoy high performance low latency ownership transfer light contention however scale gracefully high contention provide admission order guarantee concern led development scalable queuebased lock recent compact numaaware cna lock variant another popular queuebased mc lock cna scale well load provides certain admission guarantee complicated lock handover operation t incurs higher latency low contention propose fissile lock capture desirable property t cna fissile lock consists two underlying lock t lock serf fast path cna lock serf slow path key feature fissile lock ability thread fast path bypass thread enqueued slow path acquire lock le overhead cna bypass bounded tunable parameter avoid starvation ensure longterm fairness result highly scalable numaaware lock progress guarantee performs like t low contention like cna high contention
ComputerScience,combining tasklevel systemlevel scheduling mode mixed criticality system,different scheduling algorithm mixed criticality system recently proposed common denominator algorithm discard low critical task whenever high critical task lack computation resource achieved upon switch scheduling mode normal critical distinguish two main category algorithm systemlevel mode switch tasklevel mode switch systemlevel mode algorithm allow low criticality lc task execute normal mode tasklevel mode switch algorithm enable switch mode individual high criticality task hc low lo high hi obtain priority lc task paper investigates online scheduling algorithm mixedcriticality system support dynamic mode switch task level system level hc task job overrun lc budget particular job switched hi mode job accommodated system switch critical mode accommodate resource availability hc job lc task degraded stretching period critical mode exhibiting job complete execution stretching carried resource availability met mechanized implemented proposed algorithm using uppaal study efficiency scheduling algorithm examine case study compare result state art algorithm
ComputerScience,demandbased scheduling mixedcriticality sporadic task one processor,strategy artificially tighten highcriticality task deadline lowcriticality behavior successfully employed scheduling mixedcriticality system although efficient scheduling algorithm developed implicit deadline task system true general sporadic task paper develop new demandbased schedulability test general mixedcriticality task system collectively bound low highcriticality demand task show new test strictly dominates known demandbased test system also propose new deadline tightening strategy based test show simulation strategy significantly outperforms known scheduling algorithm variety sporadic task system
ComputerScience,utilization difference based partitioned scheduling mixedcriticality system,mixedcriticality mc system consolidate multiple functionality different criticality onto single hardware platform system improve overall resource utilization guaranteeing resource critical task paper focus problem partitioned multiprocessor mc scheduling particular problem designing efficient partitioning strategy develop two new partitioning strategy based principle evenly distributing difference total highcritical utilization total lowcritical utilization critical task among processor balancing difference able reduce pessimism uniprocessor mc schedulability test applied processor thus improving overall schedulability evaluate schedulability performance proposed strategy compare existing partitioned algorithm using extensive experiment show proposed strategy effective dynamicpriority earliest deadline first virtual deadline edfvd fixedpriority adaptive mixedcriticality amc algorithm specifically result show proposed strategy improve schedulability much implicit constraineddeadline task system respectively
ComputerScience,file system writeonce medium,file system standard use writeonce medium digital compact disk proposed file system designed work operating system variety physical medium although implementation simple provides fullfeatured highperformance alternative conventional file system traditional multiplewrite medium magnetic disk
ComputerScience,resource efficient isolation mechanism mixedcriticality scheduling,mixedcriticality realtime scheduling developed improve resource utilization guaranteeing safe execution critical application study use optimistic resource reservation application improve utilization prioritize critical application reservation become insufficient runtime many however share impractical assumption critical application simultaneously demand additional resource consequence underutilize resource penalizing lowcriticality application paper overcome shortcoming using novel mechanism comprises parameter model expected number critical application simultaneously demanding resource execution strategy based parameter improve resource utilization since mixedcriticality system practice componentbased design mechanism component boundary provide isolation necessary support execution lowcriticality application time protect critical one also develop schedulability test proposed mechanism flat well hierarchical scheduling framework finally simulation compare performance proposed approach existing study term schedulability capability support lowcriticality application
ComputerScience,efficient kernel object management tiered memory system kloc,softwarecontrolled heterogeneous memory system potential improve performance efficiency cost tradeoff emerging system delivering promise requires efficient operating system o mechanism policy data management unfortunately modern os support efficient tiering data heterogeneous memory problem known studied applicationlevel data page question best tier o kernel object largely ignored show careful kernel object management vital performance softwarecontrolled tiered memory system find stateoftheart o page management research leaf considerable performance table overlooking best tier migrate manage kernel object like inodes dentry cache journal block network socket buffer etc associated filesystem networking stack response characterize hotness reuse liveness property kernel object develop appropriate tieringmigration mechanism policy evaluate proposal using realsystem emulation framework largescale workload like rocksdb redis cassandra spark achieve higher throughput compared prior art
ComputerScience,μ tile efficient intraprocess privilege enforcement memory region,alarming rate security advisory privacy concern connected device urgent need strong isolation guarantee resourceconstrained device demand lightweight solution however status quo unixlike operating system offer privilege separation inside process lack practical finegrained compartmentalization inside shared address space lead private data leakage application untrusted dependency compromised thread end propose mu tile lightweight kernel abstraction set security primitive based mutual distrust intraprocess privilege separation memory protection secure multithreading mu tile take advantage hardware support virtual memory tagging eg arm memory domain achieve significant performance gain eliminating various hardware limitation result based openssl apache http server leveldb show mu tile extremely lightweight add approx kernel image iot use case add negligible runtime overhead approx easy integrate existing application providing strong privilege separation
ComputerScience,accelerating filesystem checking repair pfsck,file system checking recovery cr tool play pivotal role increasing reliability storage software identifying correcting file system inconsistency however increasing disk capacity data content file system cr tool notoriously suffer long runtimes posit current file system checker fail exploit cpu parallelism high throughput offered modern storage device overcome challenge propose pfsck tool redesigns cr enable finegrained parallelism granularity inodes without impacting correctness cr functionality accelerate cr pfsck first employ data parallelism identifying functional operation stage checker isolating dependent operation shared data structure however fully isolating shared structure infeasible consequently requiring serialization limit scalability reduce impact synchronization bottleneck exploit cpu parallelism pfsck design pipeline parallelism allowing multiple stage cr run simultaneously without impacting correctness realize efficient pipeline parallelism different file system data configuration pfsck provides technique ordering update global data structure efficient perthread io cache management dynamic thread placement across different pass cr finally pfsck design resourceaware scheduler aimed towards reducing impact cr application sharing cpu file system evaluation pfsck show gain xfs checker provides coarsegrained parallelism
ComputerScience,vilamb low overhead asynchronous redundancy direct access nvm,vilamb provides efficient asynchronous systemredundancy direct access dax nonvolatile memory nvm storage production storage deployment often use systemredundancy form page checksum crosspage parity stateoftheart solution maintaining systemredundancy dax nvm either incur high performance overhead require specialized hardware vilamb userspace library maintains systemredundancy low overhead delaying amortizing systemredundancy update multiple data writes result vilamb provides throughput stateoftheart software solution high operation rate application need systemredundancy high performance tolerate delaying data redundancy vilamb provides tunable knob performance quicker redundancy even delayed coverage vilamb increase mean time data loss due firmwareinduced corruption two order magnitude comparison maintaining systemredundancy
ComputerScience,dim silicon case improved dvfs policy,due thermal power supply limit modern intel cpu reduce frequency instruction executed cpu wait mu increasing frequency performance heterogeneous workload reduced paper describe parallel situation dynamic power management well policy implemented cpu fixedtimeout device shutdown policy show policy implemented intel cpu optimal describe potential better policy particular present mechanism classify application based likeliness cause frequency reduction approach take either resulting classification information information provided application generates hint dvfs policy show faster frequency change based hint able improve performance web server using openssl library
ComputerScience,failure diagnosis storage stack,diagnosing storage system failure challenging even professional one example solid state drive solid incident occurred algolia data center samsung ssds mistakenly blamed failure caused linux kernel bug system complexity keep increasing obscure failure likely occur often one step address challenge present ongoing effort called xray different traditional method focus either software hardware xray leverage virtualization collect event across layer correlate generate correlation tree moreover applying simple rule xray highlight critical node automatically preliminary result based failure case show xray effectively narrow search space failure
ComputerScience,high velocity kernel file system bento,high development velocity critical modern cloud system however rapid development release cycle mostly skipped operating system modification behavior linux widely used server operating system cloud must done slowly minimize risk introducing bug limited scope implemented userspace potential performance penalty propose bento framework high velocity development linux kernel file system bento inspired recent availability typesafe nongarbage collected language like rust interposes thin layer kernel call file system file system call back kernel exposing alternative interface enable kernel file system written safe rust future work provide support online upgrade userspace debugging composable filesystems evaluate bento using implement file system comparing baseline written using kernel vfs layer fuse find bento filesystem achieves comparable performance vfs version much better performance fuse version also evaluate macrobenchmarks find performs better bento file system
ComputerScience,memory virtualization virtualized system segmentation better paging,utilization paging virtual machine vm memory management root cause memory virtualization overhead paper show paging necessary hypervisor fact memory fragmentation explains paging utilization issue virtualized datacenters thanks vm memory demand pattern solution compromis novel memory management unit us direct segment vm memory management combined paging vm process paper present systematic methodology implementing compromis hardware hypervisor datacenter scheduler evaluation result show compromis outperforms two popular memory virtualization solution shadow paging extended page table respectively
ComputerScience,fastdrain removing page victimization overhead nvme storage stack,hostside page victimization easily overflow ssd internal buffer interferes io service diverse user application thereby degrading userlevel experience address propose fastdrain codesign o kernel flash firmware avoid buffer overflow caused page victimization specifically fastdrain detect triggering point nearfuture page victimization introduces overflow ssd internal buffer new flash firmware speculatively scrub buffer space accommodate request caused page victimization parallel new o kernel design control traffic page victimization considering target device buffer status reduce risk buffer overflow secure buffer space also design latencyaware ftl dump dirty data fast flash page evaluation result reveal fastdrain reduces response time user application compared conventional system
ComputerScience,dpcpp distributed locking protocol parallel realtime task,realtime scheduling locking protocol fundamental facility construct timecritical system parallel realtime task predictable locking protocol required concurrent subjobs mutually exclusive access shared resource paper first time study distributed synchronization framework parallel realtime task task global resource partitioned designated processor request global resource conducted processor resource partitioned extend distributed priority ceiling protocol dpcp parallel task federated scheduling proved request blocked one lowerpriority request develop task resource partitioning heuristic propose analysis technique safely bound task response time numerical evaluation heavy task processor indicates proposed method improve schedulability significantly compared stateoftheart locking protocol federated scheduling
ComputerScience,lintsrt learningdriven testbed intelligent scheduling embedded system,due increasing complexity seen workload hardware resource stateoftheart embedded system developing efficient realtime scheduler corresponding schedulability test becomes rather challenging although close optimal schedulability performance achieved supporting simple system model practice adding small complexity element problem context nonpreemption resource heterogeneity would cause significant pessimism may eliminated existing scheduling technique paper present lintsrt learningbased testbed intelligent realtime scheduling potential handle various complexity seen practice design lintsrt fundamentally motivated alphago zero playing board game go specifically address several critical challenge due realtime scheduling context first present clean design lintsrt supporting basic case scheduling sporadic workload homogeneous multiprocessor demonstrate easily extend framework handle complexity nonpreemption resource heterogeneity application oslevel implementation evaluation demonstrate lintsrt able achieve significantly higher runtime schedulability different setting compared perhaps commonly applied scheduler global edf rm knowledge work first attempt design implement extensible learningbased testbed autonomously making realtime scheduling decision
ComputerScience,scheduling realtime task multiple critical section multiprocessor system,performance multiprocessor synchronization locking protocol key factor utilize computation power multiprocessor system realtime constraint multiple protocol developed past decade performance highly depends task partition prioritization recently proposed dependency graph approach showed advantage attracted lot interest however restricted task set task one critical section paper remove restriction demonstrate utilize algorithm classical job shop scheduling problem construct dependency graph task multiple critical section show applicability discus implementation litmus rt report overhead moreover provide extensive numerical evaluation different configuration many situation show significant improvement compared stateoftheart
ComputerScience,herta heaviside realtime analysis,investigate mathematical property event bound function used worstcase response time analysis utilization test figure difference similarity two approach based analysis derive general form describe event event bound new unified approach give clear new insight investigation realtime system simplifies model support algebraic proof future work end present unified analysis allows algebraic definition scheduler introducing function realtime scheduling theory lead two systematic way integrate new concept application theory last least show response time analysis dynamic scheduling improved
ComputerScience,interprocess communication freebsd performance analysis,interprocess communication ipc one fundamental function modern operating system playing essential role fabric contemporary application report conduct investigation freebsd real world performance consideration behind two common ipc mechanism pipe socket simple benchmark provides fair sense effective bandwidth analysis using dtrace hardware performance counter operating system source code presented note pipe outperform socket average across configuration size userspace transmission buffer profound effect performance larger buffer beneficial point kib performance collapse result devastating cache exhaustion deep scrutiny probe effect play also presented justifying validity conclusion drawn experiment
ComputerScience,expo simple pedagogical operating system undergraduate instruction,operating system project suitable undergraduate computingelectrical science student presented project used course project one semester course selfstudy project motivated student course organized student basic background programming computer organization follow implementation road map available online build o scratch personal machinelaptop minimal instructional supervision student provided simulated abstract machine application interface specification specification design o step step project implementation road map functionality o include multitasking virtual memory semaphore shared memory elementary file system interrupt driven disk console io limited multiuser support final stage project involves porting o twocore machine independent one semester compiler design project student build compiler tiny object oriented programming language generates target code loaded executed o also briefly discussed
ComputerScience,crowdos ubiquitous operating system crowdsourcing mobile crowd sensing,rise crowdsourcing mobile crowdsensing technique large number crowdsourcing application platform cap appeared mean time caprelated model framework based different research hypothesis rapidly emerging usually address specific issue certain perspective due different setting condition different model compatible however cap urgently need combine technique form unified framework addition model need learned updated online extension crowdsourced data task type thus requiring unified architecture integrates lifelong learning concept break barrier different module paper draw idea ubiquitous operating system proposes novel o crowdos abstract software layer running native o application layer particular based indepth analysis complex crowd environment diverse characteristic heterogeneous task construct o kernel three core framework including task resolution assignment framework traf integrated resource management irm task result quality optimization tro addition validate usability crowdos module correctness development efficiency evaluation reveals tro brings enormous improvement efficiency reduction energy consumption
ComputerScience,classifying variablelength audio file allconvolutional network masked global pooling,trained deep allconvolutional neural network masked global pooling perform singlelabel classification acoustic scene classification multilabel classification domestic audio tagging contest network achieved average accuracy fourfold crossvalidation acoustic scene recognition compared provided baseline average equal error rate domestic audio tagging compared baseline network therefore improves baseline relative amount respectively network consists convolutional layer extract feature shorttime fourier transform one global pooling layer combine feature particularly posse neither fullyconnected layer besides fullyconnected output layer dropout layer
ComputerScience,samplelevel deep convolutional neural network music autotagging using raw waveform,recently endtoend approach learns hierarchical representation raw data using deep convolutional neural network successfully explored image text speech domain approach applied musical signal well fully explored yet end propose samplelevel deep convolutional neural network learn representation small grain waveform eg sample beyond typical framelevel input representation experiment show deep architecture samplelevel filter improve accuracy music autotagging provide result comparable previous stateoftheart performance magnatagatune dataset million song dataset addition visualize filter learned samplelevel dcnn layer identify hierarchically learned feature show sensitive logscaled frequency along layer melfrequency spectrogram widely used music classification system
ComputerScience,multilevel multiscale feature aggregation using pretrained convolutional neural network music autotagging,music autotagging often handled similar manner image classification regarding audio spectrogram image data however music autotagging distinguished image classification tag highly diverse different level abstraction considering issue propose convolutional neural network cnn based architecture embrace multilevel multiscaled feature architecture trained three step first conduct supervised feature learning capture local audio feature using set cnns different input size second extract audio feature layer pretrained convolutional network separately aggregate altogether given long audio clip finally put fullyconnected network make final prediction tag experiment show using combination multilevel multiscale feature highly effective music autotagging proposed method outperforms previous stateofthearts magnatagatune dataset million song dataset show proposed architecture useful transfer learning
ComputerScience,proceeding first international workshop deep learning music,proceeding first international workshop deep learning music joint ijcnn anchorage u may
ComputerScience,convolutional recurrent neural network music classification,introduce convolutional recurrent neural network crnn music tagging crnns take advantage convolutional neural network cnns local feature extraction recurrent neural network temporal summarisation extracted feature compare crnn three cnn structure used music tagging controlling number parameter respect performance training time per sample overall found crnns show strong performance respect number parameter training time indicating effectiveness hybrid structure music feature extraction feature summarisation
ComputerScience,transforming musical signal genre classifying convolutional neural network,convolutional neural network cnns successfully applied discriminative generative modeling musicrelated task particular task trained cnn contains information representing decision making abstracting process one hope manipulate existing music based informed network create music new feature corresponding knowledge obtained network paper propose method utilize stored information cnn trained musical genre classification task network composed three convolutional layer trained classify fivesecond song clip five different genre training randomly selected clip modified maximizing sum output network layer addition potential cnns produce interesting audio transformation information network original music could obtained analysis generated feature since feature indicate network understands music
ComputerScience,music signal processing using vector product neural network,propose novel neural network model music signal processing using vector product neuron dimensionality transformation input first mapped real value threedimensional vector fed threedimensional vector product neural network input output weight threedimensional value next final output mapped back real two method dimensionality transformation proposed one via context window via spectral coloring experimental result ikala dataset blind singing voice separation confirm efficacy model
ComputerScience,audio spectrogram representation processing convolutional neural network,one decision arise designing neural network application data represented order presented possibly generated neural network audio choice le obvious seems visual image variety representation used different application including raw digitized sample stream handcrafted feature machine discovered feature mfccs variant include delta variety spectral representation paper review representation issue arise focusing particularly spectrogram generating audio using neural network style transfer
ComputerScience,matrix insertiondeletion system,article consider first time operation insertion deletion working matrix controlled manner show similarly case contextfree production computational power strictly increased using matrix control computational completeness obtained system insertion deletion rule involving two symbol contextual contextfree manner using binary matrix
ComputerScience,random context semiconditional insertiondeletion system,article introduce operation insertion deletion working randomcontext semiconditional manner show conditional use rule strictly increase computational power case semiconditional insertiondeletion system contextfree insertion deletion rule one symbol sufficient get computational completeness random context case result expose asymmetry computational power insertion deletion rule system size computationally complete system size generally size particularly interesting control mechanism like graphcontrol matrix control used together insertiondeletion system present asymmetry
ComputerScience,minimization strategy maximally parallel multiset rewriting system,maximally parallel multiset rewriting system mpmrs give convenient way express relation unstructured object functioning various computational device may expressed term mpmrs eg register machine many variant p system particular mean mpmrs computationally complete however direct translation lead quite big number rule like class computationally complete device challenge find universal system smallest number rule article present different rule minimization strategy mpmrs based encoding structural transformation apply strategy translation small universal register machine korec show exists universal mpmrs rule since mpmrs identical restricted variant p system antiport rule result obtained improve previously known result number rule system
ComputerScience,minority becomes majority social network,often observed agent tend imitate behavior neighbor social network imitating behavior might lead strategic decision adopting public behavior differs agent belief right one subvert behavior population whole paper consider case agent express preference two alternative model social pressure majority dynamic step agent selected preference replaced majority preference neighbor case tie agent change current preference profile agent preference stable preference agent coincides preference least half neighbor thus system equilibrium ask whether network topology robust social pressure ask graph majority preference initial profile always coincides majority preference stable profile reachable profile completely characterize graph robustness property showing possible graph edge clique close clique word except handful graph every graph admits least one initial profile preference majority dynamic subvert initial majority also show deciding whether graph admits minority becomes majority nphard minority size social network size
ComputerScience,strategy utility maximization social group preferential exploration,consider emph social group networked node seeking universe segment maximization utility node subset universe access expensive link downloading data node also acquire universe exchanging copy segment among low cost using internode link exchange internode link ensure minimum negligible cost node group try exploit system term node nonreciprocating node prohibit behavior proposing giveandtake criterion exchange allowed iff participating node segment unavailable following criterion internode link node want maximize utility depends node segment set available node link activation among node requires mutual consent participating node node try find pairing partner preferentially exploring node link formation unpaired node choose download segment using expensive link segment aggressive probability present various linear complexity decentralized algorithm based emph stable roommate problem used node per behavioral nature choosing best strategy based available information present decentralized randomized algorithm performs close optimal large number node define emph price choice benchmarking performance social group consisting nonaggressive node evaluate performance various algorithm characterize behavioral regime yield best result node social group spending minimal expensive link consider social group consisting nonaggressive node benchmark performance proposed algorithm optimal
ComputerScience,discrete preference game heterogeneous social network subverted majority swing player,study discrete preference game heterogeneous social network game model interplay player private belief hisher publicly stated opinion could different player belief strategic game player strategy opinion cost opinion state convex combination parameter alphain two factor disagreement player opinion hisher internal belief number neighbor whose opinion differ one player parameter alpha model stubborn player player large alpha change opinion many neighbor disagree hisher belief consider social network heterogeneous sense parameter alpha vary player player ask possible belief shared majority player coincide opinion publicly announced majority player equilibrium state main result characterization social network admit initial belief assignment exists sequence best response move reach equilibrium initial majority subverted characterization effective sense tested efficiently initial belief assignment subverted computed time polynomial number player result actually stronger show initial belief assignment subverted subversion actually obtained strong way take one move single player swing player lead social network point return rational move player lead subverted majority
ComputerScience,timeinconsistent planning computational problem behavioral economics,many setting people exhibit behavior inconsistent across time allocate block time get work done procrastinate put effort project later fail complete active line research behavioral economics related field developed analyzed model type timeinconsistent behavior propose graphtheoretic model task goal dependency among action represented directed graph timeinconsistent agent construct path graph first show instance pathfinding problem different input graph reconstruct wide range qualitative phenomenon observed literature timeinconsistency including procrastination abandonment longrange task benefit reduced set choice explore set analysis quantify set graph among result find graph polynomially many distinct form timeinconsistent behavior graph timeinconsistent agent incurs significantly cost optimal agent must contain large procrastination structure minor finally use graphtheoretic model explore way task designed help motivate agent reach designated goal
ComputerScience,gerrymandering briber perspective,initiate study bribery problem context gerrymandering reverse gerrymandering general problem input set voter vote set alternative graph voter partition voter connected district cost every voter changing district budget briber favorite alternative briber briber need compute given partition modified favorite alternative briber win resulting election ii modification budget feasible iii every new district connected study four natural variant problem graph voter arbitrary v complete graph corresponds removing connectedness requirement district cost bribing every voter uniform v nonuniform show four problem npcomplete even quite restrictive scenario hence result show district based election quite resistant new kind electoral attack complement hardness result polynomial time algorithm case
ComputerScience,resource mention extraction mooc discussion forum,discussion hosted discussion forum moocs reference online learning resource often central importance contextualize discussion anchoring discussion participant presentation issue understanding however usually mentioned free text without appropriate hyperlinking associated resource automated learning resource mention hyperlinking categorization facilitate discussion searching within mooc forum also benefit contextualization resource across disparate view propose novel problem learning resource mention identification mooc forum novel task publicly available data first contribute largescale labeled dataset dubbed forum resource mention form dataset facilitate current research future research task formulate task sequence tagging problem investigate solution architecture address problem importantly identify two major challenge hinder application sequence tagging model task diversity resource mention expression longrange contextual dependency address challenge incorporating characterlevel thread context information lstmcrf model first incorporate character encoder address outofvocabulary problem caused diversity mention expression second address context dependency challenge encode thread context using rnnbased context encoder apply attention mechanism selectively leverage useful context information sequence tagging experiment form show proposed method improves baseline deep sequence tagging model notably significantly bettering performance instance exemplify two challenge
ComputerScience,first neural conjecturing datasets experiment,describe several datasets first experiment creating conjecture neural method datasets based mizar mathematical library processed several form problem extracted mptp system proved e prover using enigma guidance conjecturing experiment use transformer architecture particular implementation
ComputerScience,enigma anonymous symbolindependent inference guiding machine system description,describe implementation gradient boosting neural guidance saturationstyle automated theorem provers depend consistent symbol name across problem gradientboosting guidance manually create abstracted feature considering aritybased encoding formula neural guidance use symbolindependent graph neural network gnns embedding term clause two method efficiently implemented e prover enigma learningguided framework provide competitive realtime performance gnns developed new contextbased approach evaluation generated clause e clause evaluated jointly larger batch respect large number already selected clause context gnn estimate collectively useful subset several round message passing mean approximative inference round done gnn efficiently interleaved precise symbolic inference round done inside e method evaluated mptp largetheory benchmark shown achieve comparable realtime performance stateoftheart symbolbased method method also show high complementarity solving large number hard mizar problem
ComputerScience,optimal hashingbased timespace tradeoff approximate near neighbor,see paper full abstract show tight upper lower bound timespace tradeoff c approximate near neighbor search problem dimensional euclidean space n point datasets develop data structure space n rhou dn query time n rhoq n every rhou rhoq geq begin equation sqrt rhoq sqrt rhou sqrt end equation first data structure achieves sublinear query time nearlinear space every approximation factor c improving upon kapralov pod data structure culmination long line work problem space regime build spherical localitysensitive filtering becker ducas gama laarhoven soda datadependent hashing andoni indyk nguyen razenshteyn soda andoni razenshteyn stoc matching lower bound two type conditional unconditional first prove tightness whole tradeoff restricted model computation capture known hashingbased approach show unconditional cellprobe lower bound one two probe match tradeoff rhoq improving upon best known lower bound panigrahy talwar wieder focs particular first space lower bound static data structure two probe polynomially smaller oneprobe bound show result two probe establish exploit connection locallydecodable code
ComputerScience,polytopes lattice spherical code nearest neighbor problem,study localitysensitive hash method nearest neighbor problem angular distance focusing approach first projecting onto lowdimensional subspace partitioning projected vector according voronoi cell induced suitable spherical code approach generalizes interpolates fast suboptimal hyperplane hashing charikar asymptotically optimal practically often slower hash family andoniindyk andoniindyknguyenrazenshteyn andoniindyklaarhovenrazenshteynschmidt set framework analyzing performance spherical code context provide result various code literature related regular polytopes root lattice similar hyperplane hashing unlike crosspolytope hashing analysis collision probability query exponent exact hide order term vanish large facilitating easy parameter selection twodimensional case derive closedform expression arbitrary spherical code show equilateral triangle optimal achieving better performance twodimensional analogue hyperplane crosspolytope hashing three four dimension numerically find tetrahedron cell cell achieve best query exponent five dimension orthoplices appear outperform regular simplices well root lattice family ak dk argue higher dimension larger spherical code likely exist outperform orthoplices theory argue using dk root lattice likely lead better result practice due better tradeoff asymptotic query exponent concrete cost hashing
ComputerScience,efficient use heuristic accelerating xcsbased policy learning markov game,markov game playing nonstationary opponent learning ability still challenging reinforcement learning rl agent opponent evolve policy concurrently increase complexity learning task slows learning speed rl agent paper proposes efficient use rough heuristic speed policy learning playing concurrent learner specifically propose algorithm efficiently learn explainable generalized action selection rule taking advantage representation quantitative heuristic opponent model extended classifier system xc zerosum markov game neural network used model opponent behavior corresponding policy inferred action selection rule evolution case multiple heuristic policy introduce concept pareto optimality action selection besides taking advantage condition representation matching mechanism xc heuristic policy opponent model provide guidance situation similar feature representation furthermore introduce accuracybased eligibility trace mechanism speed rule evolution ie classifier match historical trace reinforced according accuracy demonstrate advantage proposed algorithm several benchmark algorithm soccer thiefandhunter scenario
ComputerScience,fast preprocessing robust face sketch synthesis,exemplarbased face sketch synthesis method usually meet challenging problem input photo captured different lighting condition training photo critical step causing failure search similar patch candidate input photo patch conventional illumination invariant patch distance adopted rather directly relying pixel intensity difference fail local contrast within patch change paper propose fast preprocessing method named bidirectional luminance remapping blr interactively adjust lighting training input photo method directly integrated stateoftheart exemplarbased method improve robustness ignorable computational cost
ComputerScience,large margin structured convolution operator thermal infrared object tracking,compared visible object tracking thermal infrared tir object tracking track arbitrary target total darkness since influenced illumination variation however many unwanted attribute constrain potential tir tracking absence visual color pattern low resolution recently structured output support vector machine sosvm discriminative correlation filter dcf successfully applied visible object tracking respectively motivated paper propose large margin structured convolution operator lmsco achieve efficient tir object tracking improve tracking performance employ spatial regularization implicit interpolation obtain continuous deep feature map including deep appearance feature deep motion feature tir target finally collaborative optimization strategy exploited significantly update operator approach inherits advantage strong discriminative capability sosvm also achieves accurate robust tracking higherdimensional feature dense sample best knowledge first incorporate advantage dcf sosvm tir object tracking comprehensive evaluation two thermal infrared tracking benchmark ie clearly demonstrate lmsco tracker achieves impressive result outperforms stateoftheart tracker term accuracy robustness sufficient frame rate
ComputerScience,prototype educational planning using course constraint simulate student population,distance learning university usually afford student flexibility advance study pace lead considerable fluctuation student population within program course possibly affecting academic viability program well related required resource providing method estimate population could substantial help university management academic personnel describe use course precedence constraint calculate alternative tuition path use markov model estimate future population identify key issue large scale potential deployment
ComputerScience,reliable quantum circuit defect,state art quantum computing architecture founded decision use scalable faulty quantum hardware conjunction efficient error correcting code capable tolerating high error rate promised effect decision first largescale practical quantum computer within reach coming grip strategy challenge preparing reliable execution arbitrary quantum computation difficult moreover article explains defect good
ComputerScience,numerical simulation skin transport using parareal,insilico investigation skin permeation important also computationally demanding problem resolve scale involved full detail require exascale computing capacity also suitable parallel algorithm article investigates applicability timeparallel parareal algorithm brick mortar setup precursory problem skin permeation c library implementing parareal combined simulation framework provides spatial discretization parallelization combination performance studied respect convergence speedup confirmed anisotropy domain jump diffusion coefficient minor impact parareal convergence influence load imbalance time due difference number iteration required spatial solver well spatiotemporal weak scaling discussed
ComputerScience,global finite element matrix construction based cpugpu implementation,finite element method fem several computational step numerically solve particular problem many effort directed accelerate solution stage linear system equation however finite element matrix construction also timeconsuming unstructured mesh le investigated generation global finite element matrix performed two step computing local matrix numerical integration assembling global system traditionally done serial computing work present fast technique construct global finite element matrix arises solving poisson equation threedimensional domain proposed methodology consists computing numerical integration due intrinsic parallel opportunity graphic processing unit gpu computing matrix assembly due intrinsic serial operation central processing unit cpu numerical integration lower triangular part local stiffness matrix computed thanks symmetry save gpu memory computing time result symmetry global sparse matrix also contains nonzero element lower triangular part reduces assembly operation memory usage methodology allows generating global sparse matrix unstructured finite element mesh size gpus little memory capacity limited cpu memory
ComputerScience,towards comparing programming paradigm,rapid technological progress computer science find solution time creates ever complex requirement due evolving complexity today programming language provide powerful framework offer standard solution recurring task assist programmer avoid reinvention wheel socalled outoftheboxfeatures paper propose way comparing different programming paradigm theoretical technical practical level furthermore paper present result initial comparison two representative programming approach closed sap environment
ComputerScience,learning format coq code using language model,final right bracket record declaration separate line argument rewrite tactic separated single space coq code tends written distinct manner different people team expressiveness flexibility extensibility coq language notation mean coq project wide variety recognizable coding style sometimes explicitly documented convention naming formatting particular even inexperienced user distinguish vernacular using standard library plain ltac idiomatic vernacular using mathematical component mathcomp library ssreflect coding convention important comprehension maintenance costly document enforce rulebased formatters coq beautifier limited flexibility capture small fraction desired convention large verification project believe application language model class natural language processing nlp technique capturing regularity corpus provide solution conundrum specifically believe approach based automatically learning convention existing coq code suggesting idiomatic code user proper context superior manual approach static analysis tool term effort result first step outline initial model learn suggest space formatting coq file preliminary implementation coq evaluated corpus based mathcomp comprises line coq code four core project
ComputerScience,binary voting delegable proxy analysis liquid democracy,paper provides analysis voting method known delegable proxy voting liquid democracy analysis first position liquid democracy within theory binary aggregation focus two issue system occurrence delegation cycle effect delegation individual rationality voting logically interdependent proposition finally point proposal system may modified order address issue
ComputerScience,automatic programming cellular automaton artificial neural network guided philosophy,many computer model cellular automaton artificial neural network developed successfully applied however case model might restrictive possible solution solution might difficult interpret overcome problem outline new approach socalled allagmatic method automatically program executes model little limitation possible maintaining human interpretability earlier described metamodel building block according philosophical concept structure spatial dimension operation temporal dimension entity milieu update function together abstractly describe cellular automaton artificial neural network possibly kind computer model automatically combining building block evolutionary computation interpretability might increased relationship metamodel model might translated interpretable model via metamodel propose generic objectoriented programming implement entity milieu dynamic generic array update function method show two experiment simple cellular automaton artificial neural network automatically programmed compiled executed target state successfully evolved learned cellular automaton artificial neural network respectively conclude allagmatic method create execute cellular automaton artificial neural network model automated manner guidance philosophy
ComputerScience,abstract stobjs application isa modeling,introduce new feature abstract stobj show apply modeling instruction set architecture microprocessor benefit abstract stobjs traditional concrete stobjs include faster execution support symbolic simulation efficient reasoning resilience proof development modeling optimization
ComputerScience,querying geometric figure using controlled language ontological graph dependency lattice,dynamic geometry system dg become basic tool many area geometry example education geometry automated theorem provers gatp active area research considered basic tool future enhanced educational software well next generation mechanized mathematics assistant recently emerged web repository geometric knowledge like tgtp intergeo attempt make already vast data set geometric knowledge widely available considering large amount geometric information already available face need query mechanism description geometric construction paper discus two approach describing geometric figure declarative procedural present algorithm querying geometric figure declaratively procedurally described corpus using dg dedicated controlled natural language query
ComputerScience,formulator mathml editor project userfriendly authoring content markup document,implementation editing process content mathml formula common visual style real challenge software developer really want user understand structure content mathml order edit expression since expected user often technically minded paper demonstrate aim achieved context formulator project discus feature mathml editor provides user wysiwyg editing style authoring mathml document content mixed markup also present approach taken enhance availability mathml editor endusers demonstrating online version editor run inside web browser
ComputerScience,search interface mathematician,access mathematical knowledge changed dramatically recent year therefore changing mathematical search practice aim study scrutinize professional mathematician search behavior understanding want able reason mathematician use tool search problem phase search process gain insight conducted repertory grid interview mathematically inclined people ranging senior professional mathematician nonmathematicians interview data elicited pattern user group mathematician applied understanding design issue creating new design mathematical search interface
ComputerScience,sceneaware audio rendering via deep acoustic analysis,present new method capture acoustic characteristic realworld room using commodity device use captured characteristic generate similar sounding source virtual model given captured audio approximate geometric model realworld room present novel learningbased method estimate acoustic material property approach based deep neural network estimate reverberation time equalization room recorded audio estimate used compute material property related room reverberation using novel material optimization objective use estimated acoustic material characteristic audio rendering using interactive geometric sound propagation highlight performance many realworld scenario also perform user study evaluate perceptual similarity recorded sound rendered audio
ComputerScience,freeform assembly planning,printing enables fabrication complex architecture automating long sequence additive step increasing sophistication printer material generative design promise make geometric complexity nonissue manufacturing however complexity realized design translated physically executable sequence printing operation investigate planning problem freeform directwrite assembly filament material deposited nozzle translating along path create sparse framelike structure enumerate process constraint different variant freeform assembly process show case material stiffens via glass transition determining whether feasible sequence exists npcomplete nonetheless topology typically encountered realworld application finding feasible even optimal sequence tractable problem develop sequencing algorithm maximizes fidelity printed part minimizes probability print failure modeling assembly linear elastic frame implement algorithm validate approach experimentally printing object composed thousand sugar alcohol filament diameter micron assembly planner allows freeform process applied arbitrarily complex part tissue engineering microfluidics micrometer scale vascularized functional material soft robot millimeter scale structural component meter scale thus opening variety assembly possibility
ComputerScience,online geometric discrepancy stochastic arrival application envy minimization,consider unit interval n point arrive onebyone independently uniformly random arrival point problem immediately irrevocably color ensuring every interval b subseteq nearlybalanced define emph discrepancy largest imbalance interval entire process arriving point known upfront color alternately achieve discrepancy minimum possible expected discrepancy color point online show discrepancy problem subpolynomial n algorithm achieve constant discrepancy substantial improvement trivial random coloring get widetilde sqrt n discrepancy obtain similar result natural generalization problem dimension point arrive uniformly random unit square generalization allows u improve recent result benade et alcite online envy minimization problem arrival stochastic
ComputerScience,online vector balancing geometric discrepancy,consider online vector balancing question vector chosen arbitrary distribution n arrive onebyone must immediately given pm sign goal keep discrepancy small possible concrete example online interval discrepancy problem point sampled uniformly goal immediately color pm every subinterval remains nearly balanced random coloring incurs omega discrepancy offline bound theta sqrt n log tn vector balancing interval balancing natural question whether one nearly match offline bound online setting problem one must utilize stochasticity worstcase scenario known discrepancy omega online algorithm bansal spencer recently show sqrt n log bound coordinate independent dependency among coordinate problem becomes much challenging evidenced recent work jiang kulkarni singla give nontrivial bound online interval discrepancy although beat random coloring still far offline bound work introduce new framework online vector balancing input distribution dependency across coordinate let u obtain poly n log bound online vector balancing arbitrary input distribution poly log bound online interval discrepancy framework powerful enough capture wellstudied geometric discrepancy problem eg poly logd bound online dimensional tusnady problem key new technical ingredient anticoncentration inequality sum pairwise uncorrelated random variable
ComputerScience,design automation binarized neural network quantum leap opportunity,design automation general particular logic synthesis play key role enabling design applicationspecific binarized neural network bnn paper present hardware design synthesis purely combinational bnn ultralow power nearsensor processing leverage major opportunity raised bnn model consist mostly logical bitwise operation integer counting comparison pushing ultralow power deep learning circuit close sensor coupling binarized mixedsignal image sensor data analyze area power energy metric bnns synthesized combinational network synthesis result globalfoundries soi technology show silicon area implementing combinational bnn binary input sensor receptive field weight parameter fixed design time smaller synthesized network reconfigurable parameter respect comparable technique deep learning nearsensor processing approach feature higher energy efficiency
ComputerScience,distributed protocol heterogeneous trust technical report,robustness distributed system usually phrased term number failure certain type withstand however failure model crude describe different kind trust expectation participant modern world complex integrated system extending across different owner network administrative domain modern system often exist environment heterogeneous trust different participant may different opinion trustworthiness node single participant may consider node differ trustworthiness explore construct distributed protocol meet requirement participant even heterogeneous trust environment key approach using latticebased information flow analyse prove protocol property demonstrate approach show two earlier distributed algorithm generalized work presence heterogeneous trust first heterogeneous fast consensus adaptation earlier bosco fast consensus protocol second nysiad algorithm converting crashtolerant protocol byzantinetolerant simulation show customizing protocol heterogeneous trust configuration yield performance improvement conventional protocol designed homogeneous trust
ComputerScience,graph based nearest neighbor search promise failure,recently graph based nearest neighbor search get popular largescale retrieval task attractiveness type approach lie superior performance known nearest neighbor search approach well genericness various metric paper role two strategy namely hierarchical structure graph diversification adopted key step graph based approach investigated find hierarchical structure could achieve much better logarithmic complexity scaling claimed original paper particularly high dimensional case moreover find similar high search speed efficiency one hierarchical structure could achieved support flat knn graph graph diversification finally point difficulty faced graph based search approach directly linked curse dimensionality
ComputerScience,demolishing searle chinese room,searle chinese room argument refuted showing actually given two different version room fail different reason hence searle achieve stated goal showing system could input output capability duplicated native chinese speaker still understand chinese
ComputerScience,modeling computation semantic network,semantic network research seen resurgence early history cognitive science inception semantic web initiative semantic web effort brought forth array technology support encoding storage querying semantic network data structure world stage currently popular conception semantic web data modeling medium real conceptual entity related semantically meaningful way however new model emerged explicitly encode procedural information within semantic network substrate new technology semantic web evolved data modeling medium computational medium article provides classification existing computational modeling effort requirement supporting technology aid growth burgeoning domain
ComputerScience,data mining sessionbased patient reported outcome pro mental health setting toward datadriven clinical decision support personalized treatment,cdoi outcome measure patientreported outcome pro instrument utilizing direct client feedback implemented large realworld behavioral healthcare setting order evaluate previous finding smaller controlled study pro provide alternative window treatment effectiveness based client perception facilitate detection problemssymptoms discernible measure eg pain principal focus study evaluate utility cdoi predictive modeling outcome live clinical setting implementation factor also addressed within framework theory planned behavior linking adoption rate implementation practice clinician perception result showed cdoi contain significant capacity predict outcome delta time based baseline early change score large realworld clinical setting suggested previous research implementation analysis revealed number critical factor affecting successful implementation adoption cdoi outcome measure though notable disconnect clinician intention actual behavior importantly predictive capacity cdoi underscore utility direct client feedback measure pro potential use basis next generation clinical decision support tool personalized treatment approach
ComputerScience,epistemology modeling simulation gain knowledge simulation,epistemology branch philosophy deal gaining knowledge closely related ontology branch deal question like real know provides component using modeling simulation usually imply either apply knowledge particular using training teaching want gain new knowledge example analysis conducting virtual experiment paper look history science give context better cope question gain knowledge simulation address aspect computability general underlying mathematics applies finding validation verification development federation simulation understood computable executable hypothesis validation understood hypothesis testing theory building mathematical framework allows furthermore addressing challenge developing federation potential introduction contradiction composing different theory represented federated simulation system
ComputerScience,modelling emergence logical thinking,recent progress machine learning technique revived interest building artificial general intelligence using particular tool tremendous success applying narrow intellectual task pattern recognition natural language processing playing go latter application vastly outperforms strongest human player recent year however task formalized people way become easy automated recipe find better solution human sense john searle chinese room argument computer playing go actually understand anything game thinking like human mind requires go beyond curve fitting paradigm current system fundamental limit achieve currently specific problem formalization increase performance particular task paper argue one important aspect human mind capacity logical thinking give rise many intellectual expression differentiate u animal brain propose model emergence logical thinking based piaget theory cognitive development
ComputerScience,dcroute speeding interdatacenter traffic allocation guaranteeing deadline,datacenters provide infrastructure cloud computing service used million user everyday many service distributed multiple datacenters geographically distant location possibly different continent datacenters connected high speed wan link private public network perform data backup data synchronization operation many transfer take place network completed deadline order provide necessary service guarantee end user upon arrival transfer request would like system able decide whether request guaranteed successful delivery yes provide u transmission schedule shortest time possible addition would like avoid packet reordering destination affect tcp performance previous work area either guarantee admitted transfer actually finish specified deadline use technique result packet reordering paper propose dcroute fast efficient routing traffic allocation technique guarantee transfer completion deadline admitted request assigns transfer single path avoid packet reordering simulation show dcroute least time faster traffic allocation technique based linear programming lp admitting almost amount traffic system
ComputerScience,quickcast fast efficient interdatacenter transfer using forwarding tree cohort,large interdatacenter transfer crucial cloud service efficiency increasingly used organization dedicated wide area network datacenters recent work us multicast forwarding tree reduce bandwidth need improve completion time pointtomultipoint transfer using single forwarding tree per transfer however lead poor performance slowest receiver dictate completion time receiver using multiple forwarding tree per transfer alleviates concern average receiver could finish early however done naively bandwidth usage would also increase apriori unclear best partition receiver construct multiple tree determine rate schedule flow tree paper present quickcast first solution problem using simulation realworld network topology see quickcast speed average receiver completion time much using bandwidth completion time receiver also improves much faster high load
ComputerScience,minimizing flow completion time using adaptive routing interdatacenter wide area network,interdatacenter network connect dozen geographically dispersed datacenters carry traffic flow highly variable size different class adaptive flow routing improve efficiency performance assigning path new flow according network status flow property popular approach widely used traffic engineering based current bandwidth utilization link propose alternative reduces bandwidth usage least flow completion time least across various scheduling policy flow size distribution
ComputerScience,dccast efficient point multipoint transfer across datacenters,using multiple datacenters allows higher availability load balancing reduced latency customer cloud service distribute multiple copy data cloud provider depend interdatacenter wan ought used efficiently considering limited capacity everincreasing data demand paper focus application transfer object one datacenter several datacenters dedicated interdatacenter network present dccast centralized point multipoint algorithm us forwarding tree efficiently deliver object source datacenter required destination datacenters low computational overhead dccast selects forwarding tree minimize bandwidth usage balance load across link simulation experiment google gscale network show dccast reduce total bandwidth usage tail transfer completion time tct compared delivering object via independent pointtopoint transfer
ComputerScience,datacenter traffic control understanding technique tradeoff,datacenters provide costeffective flexible access scalable compute storage resource necessary today cloud computing need typical datacenter made thousand server connected large network usually managed one operator provide quality access variety application service hosted datacenters maximize performance deems necessary use datacenter network effectively efficiently datacenter traffic often mix several class different priority requirement includes usergenerated interactive traffic traffic deadline longrunning traffic end custom transport protocol traffic management technique developed improve datacenter network performance tutorial paper review general architecture datacenter network various topology proposed traffic property general traffic control challenge datacenters general traffic control objective purpose paper bring important characteristic traffic control datacenters survey existing solution virtually impossible due massive body existing research hope provide reader wide range option factor considering variety traffic control mechanism discus various characteristic datacenter traffic control including management scheme transmission control traffic shaping prioritization load balancing multipathing traffic scheduling next point several open challenge well new interesting networking paradigm end paper briefly review interdatacenter network connect geographically dispersed datacenters receiving increasing attention recently pose interesting novel research problem
ComputerScience,type system dataflow integrity window vista,window vista operating system implement interesting model multilevel integrity observe model trusted code blamed informationflow attack thus possible eliminate attack static analysis trusted code formalize model designing type system efficiently enforce dataflow integrity window vista typechecking guarantee object whose content statically trusted never contain untrusted value regardless untrusted code run environment window vista runtime access check necessary soundness others redundant optimized away
ComputerScience,budaart multimodal contentbased analysis retrieval system buddha statue,introduce budaart system designed assist researcher art history explore analyze archive picture buddha statue system combine different cbir classical retrieval technique assemble picture statue scan metadata focused buddha facial characteristic build system archive buddhism picture identify unique buddha statue extract contextual information provide specific facial embedding first index archive system allows mobile onsite search explore similarity statue archive addition provide search visualization analysis statue
ComputerScience,defeating opaque predicate statically machine learning binary analysis,present new approach bridge binary analysis technique machine learning classification purpose providing static generic evaluation technique opaque predicate regardless construction use technique static automated deobfuscation tool remove opaque predicate introduced obfuscation mechanism according experimental result model accuracy detecting deobfuscating stateoftheart opaque predicate pattern contrast leading edge deobfuscation method based symbolic execution show le accuracy mostly due smt solver constraint lack scalability dynamic symbolic analysis approach underline efficiency hybrid symbolic analysis machine learning technique static generic deobfuscation methodology
ComputerScience,efficient nearestneighbor search dynamical system nonholonomic constraint,nearestneighbor search dominates asymptotic complexity samplingbased motion planning algorithm often addressed kd tree data structure generally believed expected complexity nearestneighbor query log n size tree paper reveals classic kd tree approach used subriemannian metric expected query complexity fact theta np log n number p determined degree nonholonomy system metric arise naturally nonholonomic mechanical system including classic wheeled robot model address negative result propose novel kd tree build query strategy tailored subriemannian metric demonstrate significant improvement running time nearestneighbor search query
ComputerScience,hijacking route payment channel network predictability tradeoff,offchain transaction network mitigate scalability issue today trustless electronic cash system bitcoin however peertopeer network also introduce new attack surface wellunderstood today paper identifies analyzes novel denialofservice attack based route hijacking ie exploit way transaction routed executed along created channel network attack conceptually interesting even limited attacker manipulates topology creation new channel navigate tradeoff related way attack network furthermore attack also highlight fundamental design tradeoff defender determines route become le predictable hence secure rational node pay higher fee node forward payment find three common implementation payment channel bitcoin lnd clightning eclair approach routing differently begin surveying current state lightning network explore route chosen implementation find current network nearly route pas five node go node thus relatively small number colluding node deny service large fraction network turn study external attacker creates link network draw route node asking lower fee find five new link enough draw majority traffic regardless implementation used cost creating link low discus difference implementation eventually derive suggested routing policy based novel combination existing approach
ComputerScience,similarity measure weaving pattern textile,propose novel approach measuring similarity weaving pattern provide similaritybased search functionality textile archive represent textile structure using hypergraphs extract multisets kneighborhoods graph resulting multisets compared using jaccard coefficient hamming distance cosine measure evaluate different variant similarity measure experimentally showing implemented efficiently illustrating quality using cluster query data set containing thousand textile sample
ComputerScience,accelerating deep neuroevolution distributed fpgas reinforcement learning problem,reinforcement learning augmented representational power deep neural network shown promising result highdimensional problem game playing robotic control however sequential nature problem pose fundamental challenge computational efficiency recently alternative approach evolutionary strategy deep neuroevolution demonstrated competitive result faster training time distributed cpu core report record training time running million frame per second atari game using deep neuroevolution implemented distributed fpgas combined hardware implementation game console image preprocessing neural network optimized pipeline multiplied system level parallelism enabled acceleration result first application demonstration ibm neural computer custom designed system consists xilinx fpgas interconnected mesh network topology addition high performance experiment also showed improvement accuracy game compared cpuimplementation algorithm
ComputerScience,cnnlte class pooling convolutional neural network label tree embeddings audio scene recognition,describe report audio scene recognition system submitted dcase challenge firstly given label set scene label tree automatically constructed category taxonomy used feature extraction step audio scene instance represented label tree embedding image different convolutional neural network tailored task hand finally learned top image feature scene recognition system reach overall recognition accuracy outperforms dcase baseline absolute improvement development test data respectively
ComputerScience,teichmüller extremal mapping application landmark matching registration,registration aim find optimal correspondence shape important process different research area conformal mapping widely used obtain diffeomorphism shape minimizes angular distortion conformal registration beneficial since preserve local geometry well however landmark constraint enforced conformal mapping generally exist motivates u look unique landmark matching quasiconformal registration minimizes conformality distortion suitable condition landmark constraint unique diffeomporphism called teichm uller extremal mapping two surface obtained minimizes maximal conformality distortion paper propose efficient iterative algorithm called quasiconformal qc iteration compute teichm uller mapping basic idea represent set diffeomorphisms using beltrami coefficient bcs look optimal bc associated desired teichm uller mapping associated diffeomorphism efficiently reconstructed optimal bc using linear beltrami solver lb using bcs represent diffeomorphisms guarantee diffeomorphic property registration using proposed method teichm uller mapping accurately efficiently computed within second obtained registration guaranteed bijective proposed algorithm also extended compute teichm uller mapping soft landmark constraint applied proposed algorithm real application brain landmark matching registration constrained texture mapping human face registration experimental result show method effective efficient computing nonoverlap landmark matching registration least amount conformality distortion
ComputerScience,progressive compression object adaptive quantization,paper present new progressive compression method triangular mesh method fact based schema irregular multiresolution analysis centered optimization ratedistortion tradeoff quantization precision adapted vertex encoding decoding process optimize ratedistortion compromise optimization treated mesh geometry improves approximation quality compression ratio level resolution experimental result show proposed algorithm give competitive result compared previous work dealing ratedistortion compromise
ComputerScience,conformal approach surface inpainting,address problem surface inpainting aim fill hole missing region riemann surface based surface geometry practical situation surface obtained range scanner often hole model incomplete order analyze shape effectively restoring incomplete shape filling surface hole necessary paper propose novel conformal approach inpaint surface hole riemann surface based surface geometry basic idea represent riemann surface using conformal factor mean curvature according riemann surface theory riemann surface uniquely determined conformal factor mean curvature rigid motion given riemann surface mean curvature h conformal factor lambda computed easily conformal parameterization conversely given lambda h riemann surface uniquely reconstructed solving gausscodazzi equation conformal parameter domain hence conformal factor mean curvature two geometric quantity fully describing surface lambda h representation surface problem surface inpainting reduced problem image inpainting lambda h conformal parameter domain lambda h inpainted riemann surface reconstructed effectively restores surface missing hole since inpainting model based geometric quantity lambda h restored surface follows surface geometric pattern test proposed algorithm synthetic data well real surface data experimental result show proposed method effective surface inpainting algorithm fill surface hole incomplete model based surface geometry
ComputerScience,note expressiveness bip,extend previous algebraic formalisation notion componentbased framework order formally define two form strong weak notion full expressiveness earlier result show bip behaviourinteractionpriority framework posse strong full expressiveness paper show bip weak form notion provide result detailing weak strong full expressiveness classical bip several modification obtained relaxing constraint imposed priority model
ComputerScience,proceeding international workshop foundation coordination language selfadaptive system,volume contains proceeding foclasa international workshop foundation coordination language selfadaptive system foclasa held madrid spain september satellite event concur international conference concurrency theory modern software system distributed concurrent mobile often involve composition heterogeneous component standalone service service coordination selfadaptation constitute core characteristic distributed serviceoriented system coordination language formal approach modelling reasoning selfadaptive behaviour help simplify development complex distributed servicebased system enable functional correctness proof automated synthesis correctbyconstruction system improve reusability maintainability system goal foclasa workshop put together researcher practitioner aforementioned field share identify common problem devise general solution context coordination language selfadaptive system
ComputerScience,proceeding ninth international workshop foundation coordination language software architecture,volume contains proceeding foclasa international workshop foundation coordination language software architecture foclasa held paris france july satellite event international conference concurrency theory concur paper presented proceeding tackle different issue currently central community namely software adaptation sensor network distributed control nonfunctional aspect coordination resource timing stochastics
ComputerScience,contract distributed system,present parametric calculus contractbased computing distributed system abstracting actual contract language calculus generalises contractsasprocesses contractsasformulae paradigm calculus feature primitive advertising contract reaching agreement querying fulfilment contract coordination among principal happens via multiparty session created agreement reached present two instance calculus modelling contract process variant cc ii formula logic help example discus primitive calculus well possible variant
ComputerScience,proceeding fifth workshop programming language approach concurrency communicationcentric software,place full title programming language approach concurrency communicationcentric software fifth edition place workshop series first place affiliated discotec workshop part etaps every year since established part etaps satellite event place held march tallinn estonia workshop series started order promote application novel programming language idea increasingly important problem developing software system concurrency communication intrinsic aspect includes software multicore system largescale distributed andor serviceoriented system scope place includes new programming language feature whole new programming language design new type system new semantic approach new program analysis technique new implementation mechanism year call paper attracted submission programme committee selected paper presentation workshop workshop author invited produce revised version paper inclusion eptcs proceeding author six paper accepted invitation paper constitute present volume
ComputerScience,domainspecific language incremental modular design largescale verifiablysafe flow network preliminary report,define domainspecific language dsl inductively assemble flow network small network module produce arbitrarily large one interchangeable functionallyequivalent part small network module small building block inductive definition limit size associated dsl type theory system formal annotation express desirable property flow network together rule enforce invariant across interface ie rule guarantee property preserved build larger network smaller one prerequisite type theory formal semantics ie rigorous definition entity qualify feasible flow network possibly restricted satisfy additional efficiency safety requirement carried one two way denotational semantics operational reduction semantics choose first preference second partly avoid exponentialgrowth rewriting operational approach set typing system prove soundness dsl
ComputerScience,proceeding international workshop foundation coordination language selfadaptive system,volume contains proceeding foclasa international workshop foundation coordination language selfadaptive system foclasa held rome italy september satellite event concur international conference concurrency theory modern software system distributed concurrent mobile often involve composition heterogeneous component standalone service service coordination selfadaptation constitute core characteristic distributed serviceoriented system coordination language formal approach modelling reasoning selfadaptive behaviour help simplify development complex distributed servicebased system enable functional correctness proof improve reusability maintainability system goal foclasa workshop put together researcher practitioner aforementioned field share identify common problem devise general solution context coordination language selfadaptive system
ComputerScience,graphbased semantics workbench concurrent asynchronous program,number novel programming language library proposed offer simplertouse model concurrency thread challenging however devise execution model successfully realise abstraction without forfeiting performance introducing unintended behaviour exemplified scoop concurrent objectoriented messagepassing language seen multiple semantics proposed implemented evolution propose semantics workbench fully semiautomatic tool scoop used analyse compare program respect different execution model demonstrate use checking consistency semantics applying set representative program highlighting deadlockrelated discrepancy principal execution model language workbench based modular parameterisable graph transformation semantics implemented groove tool discus graph transformation leveraged atomically model intricate language abstraction visual yet algebraic nature model used ascertain soundness
ComputerScience,proceeding international workshop foundation coordination language self adaptation,welcome proceeding foclasa international workshop foundation coordination language selfadaptation foclasa held newcastle upon tyne uk september satellite event concur international conference concurrency theory workshop provides venue researcher practitioner could meet exchange idea identify common problem determine key fundamental issue related coordination language self adaptation explore together disseminate solution indeed number hot research topic currently sharing common problem combining concurrent distributed mobile heterogeneous component trying harness intrinsic complexity resulting system computation nowadays becoming inherently concurrent either characteristic hardware multicore processor becoming omnipresent due ubiquitous presence distributed system incarnated internet computational system therefore typically distributed concurrent mobile often involve composition heterogeneous component specify reason system go beyond functional correctness proof eg supporting reusability improving maintainability approach coordination language self adaptation recognised fundamental year received submission involving author different country paper underwent rigorous review process accepted paper received review report review process international program committee foclasa decided select paper presentation workshop inclusion proceeding paper tackle different issue currently central community selfadaptation coordination process coordination type system workshop feature invited talk sebastian uchitel imperial college london uk
ComputerScience,towards practical graphbased verification objectoriented concurrency model,harness power multicore distributed platform make development concurrent software accessible software engineer different objectoriented concurrency model scoop proposed despite practical importance analysing scoop program currently general verification approach operate directly program code without additional annotation one reason multitude partially conflicting semantic formalisation scoop either theory byimplementation propose simple graph transformation system gts based runtime semantics scoop grasp common feature known semantics language runtime model implemented stateoftheart gts tool groove allows u simulate analyse verify subset scoop program respect deadlock behavioural property besides proposing first approach verify scoop program automatic translation gts also highlight experience applying gts especially groove specifying semantics form runtime model transferable gts model concurrent language library
ComputerScience,generation initial context effective deadlock detection,recently proposed testing based symbolic execution used conjunction static deadlock analysis define deadlock detection framework show deadlock presence case concrete testcase trace obtained ii also prove deadlock freedom symbolic execution start initial distributed context ie set location initial task considering possibility result combinatorial explosion different distributed context must considered paper proposes technique effectively generate initial context lead deadlock using possible conflicting task interaction identified static analysis discarding distributed context lead deadlock proposed technique integrated abovementioned deadlock detection framework hence enabling analyze system without need user supplied initial context
ComputerScience,semantics comparison workbench concurrent asynchronous distributed programming language,number highlevel language library proposed offer novel simple use abstraction concurrent asynchronous distributed programming execution model realise however often change time whether improve performance extend new language feature potentially affecting behavioural safety property existing program exemplified scoop messagepassing approach concurrent objectoriented programming seen multiple change proposed implemented demonstrable consequence idiomatic usage core abstraction propose semantics comparison workbench scoop fully semiautomatic tool analysing comparing state space program respect different execution model semantics demonstrate use checking consistency property across semantics applying set representative program highlighting deadlockrelated discrepancy principal execution model scoop furthermore demonstrate extensibility workbench generalising formalisation execution model support recently proposed extension distributed programming workbench based modular parameterisable graph transformation semantics implemented groove tool discus graph transformation leveraged atomically model intricate language abstraction visual yet algebraic nature model used ascertain soundness highlight approach could applied similar language
ComputerScience,complexity real root isolation,introduce new approach isolate real root squarefree polynomial fsum n ai xi real coefficient assumed coefficient f approximated specified error bound presented method exact complete deterministic due similarity descartes method also consider practical easy implement compared previous approach new method achieves significantly better bit complexity shown hardness isolating real root f exclusively determined geometry root complexity size coefficient special case f integer coefficient maximal bitsize tau bound bit complexity writes tilde improves best bound known existing practical algorithm factor ndeg f crucial idea underlying new approach run approximate version descartes method subdivision step consider approximation intermediate result certain precision give upper bound maximal precision needed isolating root f integer polynomial bound factor n lower precision needed using exact arithmetic explaining improved bound bit complexity
ComputerScience,distributed communicationaware motion planning multiagent system stl spatel specification,future intelligent transportation system networked vehicle coordinate achieve safe operation based assumption communication among vehicle infrastructure reliable traditional method usually deal design control system communication network separated manner however control communication system tightly coupled motion vehicle affect overall communication quality hence motivated study codesign control communication system particular propose control theoretical framework distributed motion planning multiagent system satisfies complex highlevel spatial temporal specification accounting communication quality time towards end desired motion specification communication performance formulated signal temporal logic stl spatialtemporal logic spatel formula respectively specification encoded constraint system environment state variable mixed integer linear program milp upon control strategy satisfying stl spatel specification generated agent employing distributed model predictive control mpc framework effectiveness proposed framework validated simulation distributed communicationaware motion planning multiagent system
ComputerScience,wordlevel deep sign language recognition video new largescale dataset method comparison,visionbased sign language recognition aim helping deaf people communicate others however existing sign language datasets limited small number word due limited vocabulary size model learned datasets applied practice paper introduce new largescale wordlevel american sign language wlasl video dataset containing word performed signer dataset made publicly available research community knowledge far largest public asl dataset facilitate wordlevel sign recognition research based new largescale dataset able experiment several deep learning method wordlevel sign recognition evaluate performance large scale scenario specifically implement compare two different model ie holistic visual appearancebased approach ii human pose based approach model valuable baseline benefit community method benchmarking moreover also propose novel posebased temporal graph convolution network posetgcn model spatial temporal dependency human pose trajectory simultaneously boosted performance posebased method result show posebased appearancebased model achieve comparable performance accuracy wordsglosses demonstrating validity challenge dataset dataset baseline deep model available url http
ComputerScience,streaming graph challenge stochastic block partition,important objective analyzing realworld graph achieve scalable performance large streaming graph challenging relevant example graph partition problem combinatorial problem graph partition nphard existing relaxation method provide reasonable approximate solution scaled large graph competitive benchmark challenge proven effective mean advance stateoftheart performance foster community collaboration paper describes graph partition challenge baseline partition algorithm subquadratic complexity algorithm employ rigorous bayesian inferential method based statistical model capture characteristic realworld graph strong foundation enables algorithm address limitation wellknown graph partition approach modularity maximization paper describes various aspect challenge including data set streaming graph generator baseline partition algorithm pseudocode argument correctness parallelizing bayesian inference different parallel computation strategy nodebased parallelism matrixbased parallelism evaluation metric partition correctness computational requirement preliminary timing pythonbased demonstration code open source c code consideration partitioning graph streaming fashion data set source code algorithm well metric detailed documentation available graphchallengeorg
ComputerScience,archaeology digital age paper database,research unit archaeology often manage large precious archive containing various document including report fieldwork scholarly study reference book archive course invaluable recording decade work generally hard consult access context digitizing full text document enough information must formalized structured easy access thanks friendly user interface
ComputerScience,dingo ontology project grant linked data,present dingo data integration grant ontology ontology provides machine readable extensible framework model data semanticallyenabled application relative project funding actor notably funding policy research landscape dingo designed yield high modeling power elasticity cope huge variety funding research policy practice make applicable also area besides research funding important aspect discus main feature principle followed development community uptake maintenance evolution
ComputerScience,role selfforensics vehicle crash investigation event reconstruction,paper introduces formalizes novel concept selfforensics automotive vehicle specified forensic lucid language argue selfforensics forensics taken cybercrime domain applicable selfdissection intelligent vehicle hardware system automated incident anomaly analysis event reconstruction software without aid engineering team variety forensic scenario propose formal design requirement specification selfforensic enabled unit similar blackboxes vehicle help investigation incident also automated reasoning verification theory along event reconstruction formal model argue analysis beneficial improve safety passenger vehicle like airline industry plane
ComputerScience,introduction artificial intelligence solution problem algorithmic discrimination,substantial evidence artificial intelligence ai machine learning ml algorithm generate bias minority woman protected class federal state law enacted protect consumer discrimination credit housing employment regulator agency tasked enforcing law additionally law place ensure consumer understand denied access service product consumer loan article provide overview potential benefit risk associated use algorithm data focus specifically fairness observation generalize many context focus fairness concern raised consumer credit legal requirement equal credit opportunity act propose methodology evaluating algorithmic fairness minimizing algorithmic bias aligns provision federal state antidiscrimination statute outlaw overt disparate treatment specifically disparate impact discrimination argue use ai ml algorithm heighten potential discrimination risk risk evaluated mitigated requires deep understanding algorithm context domain used
ComputerScience,perpetual adaptation software hardware extensible architecture providing code optimization central system service,present open architecture justintime code generation dynamic code optimization flexible customizable extensible previous research primarily investigated functional aspect system architectural aspect far remained unexplored paper argue property important generate optimal code variety hardware architecture different processor generation within processor family property also important make systemlevel code generation useful practice
ComputerScience,weave reconfigurable programming framework,research proposes language independent intraprocess framework object based composition unmodified code module intuitively two major programming model thread process considered extreme along sharing axis multiple thread process share global state whereas instance process independent process share global state weave provide generalized framework allows arbitrary selective sharing state multiple control flow process weave framework support multiple independent component single process flexible state sharing scheduling achieved without requiring modification existing code base furthermore framework allows dynamic instantiation code module control flow effect weave create intraprocess module similar object oop code written language weave paradigm allows object arbitrarily shared true superset process well thread code sharing fast context switching time similar thread weave require special support either language application code practically code weaved weave also include support fast automatic checkpointing recovery application support paper present element weave framework result implementation work reverseanalyzing sourcecode independent elf object file current implementation validated benchmark discrete ordinate neutron transport koch et al userlevel port linux family kernel tcpip protocol stack
