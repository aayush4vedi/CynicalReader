ID,Source,Tag_Code,Tag_Name,Title,Url
1,Lobsters,performance,Performance and optimization,Panfrost performance counters with Perfetto,https://www.collabora.com/news-and-blog/blog/2020/08/21/panfrost-performance-counters-with-perfetto/
2,Lobsters,performance,Performance and optimization,Exploring the Limits of Code Density,http://web.eece.maine.edu/~vweaver/papers/iccd09/ll_document.pdf
3,Lobsters,performance,Performance and optimization,Speeding up json processing in go,https://klotzandrew.com/blog/speeding-up-json-processing-in-go
4,Lobsters,performance,Performance and optimization,Micro-Optimizing .tar.gz Archives by Changing File Order,https://justinblank.com/experiments/optimizingtar.html
5,Lobsters,performance,Performance and optimization,When are full database backups faster than incremental backups?,https://tech.davis-hansson.com/p/incremental-backup/
6,Lobsters,performance,Performance and optimization,The Practical Effects of the GVL on Scaling in Ruby,https://www.speedshop.co/2020/05/11/the-ruby-gvl-and-scaling.html
7,Lobsters,performance,Performance and optimization,Handmade Hero,https://hero.handmade.network/
8,Lobsters,performance,Performance and optimization,Data Structures Part 1: Bulk Data,https://ourmachinery.com/post/data-structures-part-1-bulk-data/
9,Lobsters,performance,Performance and optimization,"GSoC Reports: Benchmarking NetBSD, second evaluation report",http://blog.netbsd.org/tnf/entry/gsoc_reports_benchmarking_netbsd_second
10,Lobsters,performance,Performance and optimization,The influence of hardware on Firefox build times,https://glandium.org/blog/?p=4117
11,Lobsters,performance,Performance and optimization,Why SREs Should be Responsible for Development Environments,https://kelda.io/blog/sres-should-manage-development-environments/
12,Lobsters,performance,Performance and optimization,sled theoretical performance guide,https://sled.rs/perf
13,Lobsters,performance,Performance and optimization,TensorFlow Datasets: The Bad Parts,https://determined.ai/blog/tf-dataset-the-bad-parts/
14,Lobsters,performance,Performance and optimization,Elixir RAM and the Template of Doom,https://www.evanmiller.org/elixir-ram-and-the-template-of-doom.html
15,Lobsters,performance,Performance and optimization,On the Performance of User-Mode Threads and Coroutines,https://inside.java/2020/08/07/loomperformance/
16,Lobsters,performance,Performance and optimization,Debugging Python server memory leaks with the Fil profiler,https://pythonspeed.com/articles/python-server-memory-leaks/
17,Lobsters,performance,Performance and optimization,simdjson - parsing gigabytes of JSON per second,https://github.com/simdjson/simdjson
18,Lobsters,performance,Performance and optimization,How to speed up the Rust compiler some more in 2020,https://blog.mozilla.org/nnethercote/2020/08/05/how-to-speed-up-the-rust-compiler-some-more-in-2020/
19,Lobsters,performance,Performance and optimization,LEB128 or VLQ for variable-length numbers?,/s/8b5qh4/leb128_vlq_for_variable_length_numbers
20,Lobsters,performance,Performance and optimization,An introduction to Data Oriented Design with Rust,http://jamesmcm.github.io/blog/2020/07/25/intro-dod
21,Lobsters,performance,Performance and optimization,Measuring USB with bpftrace,https://blog.habets.se/2020/08/Measuring-USB-with-bpftrace.html
22,Lobsters,performance,Performance and optimization,Best way to create an empty collection (array and list) in C# (.NET),https://www.tabsoverspaces.com/233833-best-way-to-create-an-empty-collection-array-and-list-in-csharp-net
23,Lobsters,performance,Performance and optimization,Hardware Store Elimination,https://travisdowns.github.io/blog/2020/05/13/intel-zero-opt.html
24,Lobsters,performance,Performance and optimization,How to Improve ActiveRecord Query Performance with Subquery Caching,https://pawelurbanek.com/rails-query-caching
25,Lobsters,performance,Performance and optimization,What's Windows 10's fastest web browser in 2020?,https://www.zdnet.com/article/whats-windows-10s-fastest-web-browser-in-2020/
26,Lobsters,performance,Performance and optimization,Panfrost performance counters with Perfetto,https://www.collabora.com/news-and-blog/blog/2020/08/21/panfrost-performance-counters-with-perfetto/
27,Lobsters,performance,Performance and optimization,Exploring the Limits of Code Density,http://web.eece.maine.edu/~vweaver/papers/iccd09/ll_document.pdf
28,Lobsters,performance,Performance and optimization,Speeding up json processing in go,https://klotzandrew.com/blog/speeding-up-json-processing-in-go
29,Lobsters,performance,Performance and optimization,Micro-Optimizing .tar.gz Archives by Changing File Order,https://justinblank.com/experiments/optimizingtar.html
30,Lobsters,performance,Performance and optimization,When are full database backups faster than incremental backups?,https://tech.davis-hansson.com/p/incremental-backup/
31,Lobsters,performance,Performance and optimization,The Practical Effects of the GVL on Scaling in Ruby,https://www.speedshop.co/2020/05/11/the-ruby-gvl-and-scaling.html
32,Lobsters,performance,Performance and optimization,Handmade Hero,https://hero.handmade.network/
33,Lobsters,performance,Performance and optimization,Data Structures Part 1: Bulk Data,https://ourmachinery.com/post/data-structures-part-1-bulk-data/
34,Lobsters,performance,Performance and optimization,"GSoC Reports: Benchmarking NetBSD, second evaluation report",http://blog.netbsd.org/tnf/entry/gsoc_reports_benchmarking_netbsd_second
35,Lobsters,performance,Performance and optimization,The influence of hardware on Firefox build times,https://glandium.org/blog/?p=4117
36,Lobsters,performance,Performance and optimization,Why SREs Should be Responsible for Development Environments,https://kelda.io/blog/sres-should-manage-development-environments/
37,Lobsters,performance,Performance and optimization,sled theoretical performance guide,https://sled.rs/perf
38,Lobsters,performance,Performance and optimization,TensorFlow Datasets: The Bad Parts,https://determined.ai/blog/tf-dataset-the-bad-parts/
39,Lobsters,performance,Performance and optimization,Elixir RAM and the Template of Doom,https://www.evanmiller.org/elixir-ram-and-the-template-of-doom.html
40,Lobsters,performance,Performance and optimization,On the Performance of User-Mode Threads and Coroutines,https://inside.java/2020/08/07/loomperformance/
41,Lobsters,performance,Performance and optimization,Debugging Python server memory leaks with the Fil profiler,https://pythonspeed.com/articles/python-server-memory-leaks/
42,Lobsters,performance,Performance and optimization,simdjson - parsing gigabytes of JSON per second,https://github.com/simdjson/simdjson
43,Lobsters,performance,Performance and optimization,How to speed up the Rust compiler some more in 2020,https://blog.mozilla.org/nnethercote/2020/08/05/how-to-speed-up-the-rust-compiler-some-more-in-2020/
44,Lobsters,performance,Performance and optimization,LEB128 or VLQ for variable-length numbers?,/s/8b5qh4/leb128_vlq_for_variable_length_numbers
45,Lobsters,performance,Performance and optimization,An introduction to Data Oriented Design with Rust,http://jamesmcm.github.io/blog/2020/07/25/intro-dod
46,Lobsters,performance,Performance and optimization,Measuring USB with bpftrace,https://blog.habets.se/2020/08/Measuring-USB-with-bpftrace.html
47,Lobsters,performance,Performance and optimization,Best way to create an empty collection (array and list) in C# (.NET),https://www.tabsoverspaces.com/233833-best-way-to-create-an-empty-collection-array-and-list-in-csharp-net
48,Lobsters,performance,Performance and optimization,Hardware Store Elimination,https://travisdowns.github.io/blog/2020/05/13/intel-zero-opt.html
49,Lobsters,performance,Performance and optimization,How to Improve ActiveRecord Query Performance with Subquery Caching,https://pawelurbanek.com/rails-query-caching
50,Lobsters,performance,Performance and optimization,What's Windows 10's fastest web browser in 2020?,https://www.zdnet.com/article/whats-windows-10s-fastest-web-browser-in-2020/
51,Lobsters,performance,Performance and optimization,Low latency tuning guide,https://rigtorp.se/low-latency-guide/
52,Lobsters,performance,Performance and optimization,Machine Architecture: Things Your Programming Language Never Told You (2007),https://www.youtube.com/watch?v=L7zSU9HI-6I
53,Lobsters,performance,Performance and optimization,Zero Cost References with Regions in Vale,https://vale.dev/blog/zero-cost-refs-regions
54,Lobsters,performance,Performance and optimization,Cache Blocking Techniques (2019),https://software.intel.com/content/www/us/en/develop/articles/cache-blocking-techniques.html
55,Lobsters,performance,Performance and optimization,Which Is The Best WordPress Caching Plugin?,https://kevq.uk/which-is-the-best-wordpress-caching-plugin/
56,Lobsters,performance,Performance and optimization,Optimising LINQ,https://mattwarren.org/2016/09/29/Optimising-LINQ/
57,Lobsters,performance,Performance and optimization,Postgres Job Queues & Failure By MVCC,https://brandur.org/postgres-queues
58,Lobsters,performance,Performance and optimization,Optimizing an Open Source Texture Synthesis Library,http://peterstefek.me/texture-optimization.html
59,Lobsters,performance,Performance and optimization,What is fillfactor and how does it affect PostgreSQL performance?,https://www.cybertec-postgresql.com/en/what-is-fillfactor-and-how-does-it-affect-postgresql-performance/
60,Lobsters,performance,Performance and optimization,Some SQL Tricks of an Application DBA,https://hakibenita.com/sql-tricks-application-dba
61,Lobsters,performance,Performance and optimization,Why Skylake CPUs Are Sometimes 50% Slower (2018),https://aloiskraus.wordpress.com/2018/06/16/why-skylakex-cpus-are-sometimes-50-slower-how-intel-has-broken-existing-code/
62,Lobsters,performance,Performance and optimization,Preliminary benchmarking results for a Haskell I/O manager backend based on io_uring,http://wjwh.eu/posts/2020-07-26-haskell-iouring-manager.html
63,Lobsters,performance,Performance and optimization,Should I use Chapel or Julia for my next project? (2017),https://www.dursi.ca/post/julia-vs-chapel.html
64,Lobsters,performance,Performance and optimization,Branchless Programming: Why “If” is Sloowww… and what we can do about it,https://www.youtube.com/watch?v=bVJ-mWWL7cE
65,Lobsters,performance,Performance and optimization,Optimizing a code intelligence backend,https://about.sourcegraph.com/blog/optimizing-a-code-intel-backend
66,Lobsters,performance,Performance and optimization,Optimizing 128-bit Division,https://danlark.org/2020/06/14/128-bit-division/
67,Lobsters,performance,Performance and optimization,Why is processing a sorted array faster than processing an unsorted array?,https://stackoverflow.com/questions/11227809/why-is-processing-a-sorted-array-faster-than-processing-an-unsorted-array
68,Lobsters,performance,Performance and optimization,Wikipedia's JavaScript initialisation on a budget,https://phabricator.wikimedia.org/phame/live/7/post/175/wikipedia_s_javascript_initialisation_on_a_budget/
69,Lobsters,performance,Performance and optimization,PostgreSQL EXPLAIN glossary,https://www.pgmustard.com/docs/explain
70,Lobsters,performance,Performance and optimization,"Systems Performance: Enterprise and the Cloud, 2nd Edition",http://www.brendangregg.com/blog/2020-07-15/systems-performance-2nd-edition.html
71,Lobsters,performance,Performance and optimization,An introduction to vectorization (2019),https://blog.cr.yp.to/20190430-vectorize.html
72,Lobsters,performance,Performance and optimization,Rewriting FORTRAN Software In Rust,https://mckeogh.tech/post/shallow-water/
73,Lobsters,performance,Performance and optimization,Graceful Degradation,https://www.solipsys.co.uk/new/GracefulDegradation.html?tg14lb
74,Lobsters,performance,Performance and optimization,On the asymptotic complexity of sorting,https://eccc.weizmann.ac.il/report/2020/096/
75,Lobsters,performance,Performance and optimization,Performance Improvements in .NET 5,https://devblogs.microsoft.com/dotnet/performance-improvements-in-net-5/
76,Lobsters,performance,Performance and optimization,Too many objects: Reducing memory overhead from Python instances,https://pythonspeed.com/articles/python-object-memory/
77,Lobsters,performance,Performance and optimization,Faster Integer Parsing,https://rust-malaysia.github.io/code/2020/07/11/faster-integer-parsing.html
78,Lobsters,performance,Performance and optimization,PopCount on ARM64 in Go Assembler,https://barakmich.dev/posts/popcnt-arm64-go-asm/
79,Lobsters,performance,Performance and optimization,Inside the Algolia Engine — The Indexing Challenge of Instant Search,https://blog.algolia.com/inside-the-algolia-engine-part-2-the-indexing-challenge-of-instant-search/
80,Lobsters,performance,Performance and optimization,Strong Generalization and Efficiency in Neural Programs,https://arxiv.org/pdf/2007.03629
81,Lobsters,performance,Performance and optimization,Hashmaps Benchmarks,https://martin.ankerl.com/2019/04/01/hashmap-benchmarks-01-overview/
82,Lobsters,performance,Performance and optimization,Cache-Control in the wild,https://www.fastly.com/blog/cache-control-wild
83,Lobsters,performance,Performance and optimization,Determining whether an application has poor cache performance (2014),https://developers.redhat.com/blog/2014/03/10/determining-whether-an-application-has-poor-cache-performance-2/
84,Lobsters,performance,Performance and optimization,Massive memory overhead: Numbers in Python and how NumPy helps,https://pythonspeed.com/articles/python-integers-memory/
85,Lobsters,performance,Performance and optimization,Small strings in Rust,https://fasterthanli.me/articles/small-strings-in-rust
86,Lobsters,performance,Performance and optimization,Parallel programming in multicore OCaml - a tutorial,https://github.com/prismlab/parallel-programming-in-multicore-ocaml/tree/draft
87,Lobsters,performance,Performance and optimization,The Doomed Rewrite,https://blog.almaer.com/the-doomed-rewrite/
88,Lobsters,performance,Performance and optimization,Using Benchee for Elixir Performance Tests,http://prying.io/technical/2019/07/21/using-benchee-for-elixir-performance-tests.html
89,Lobsters,performance,Performance and optimization,A Few More Reasons Rust Compiles Slowly,https://pingcap.com/blog/reasons-rust-compiles-slowly
90,Lobsters,performance,Performance and optimization,Scaling a GraphQL Website,https://theartofmachinery.com/2020/06/29/scaling_a_graphql_site.html
91,Lobsters,performance,Performance and optimization,Introducing emoji-picker-element: a memory-efficient emoji picker for the web,https://nolanlawson.com/2020/06/28/introducing-emoji-picker-element-a-memory-efficient-emoji-picker-for-the-web/
92,Lobsters,performance,Performance and optimization,Draft of my perf book is ready! | Easyperf,https://easyperf.net/blog/2020/06/24/Draft-Of-Perf-Book
93,Lobsters,performance,Performance and optimization,Clinging to memory: how Python function calls can increase your memory usage,https://pythonspeed.com/articles/function-calls-prevent-garbage-collection/
94,Lobsters,performance,Performance and optimization,Postgres Indexes for ActiveRecord Join Tables in Rails Apps,https://pawelurbanek.com/rails-postgres-join-indexes
95,Lobsters,performance,Performance and optimization,The best way to completely purge a Varnish cache,https://info.varnish-software.com/blog/best-way-to-completely-purge-a-varnish-cache
96,Lobsters,performance,Performance and optimization,Performance improvements in Sourcegraph's precise code intelligence backend,https://about.sourcegraph.com/blog/performance-improvements-in-precise-code-intel
97,Lobsters,performance,Performance and optimization,Memory in Javascript— beyond leaks,https://medium.com/walkme-engineering/memory-in-javascript-beyond-leaks-8c1d697c655c
98,Lobsters,performance,Performance and optimization,Guide to Effective Programming on the Elbrus Platform (by Google Translate from Russian),https://translate.google.com/translate?hl=&sl=ru&tl=en&u=http%3A%2F%2Fftp.altlinux.org%2Fpub%2Fpeople%2Fmike%2Felbrus%2Fdocs%2Felbrus_prog%2Fhtml%2F&sandbox=1
99,Lobsters,performance,Performance and optimization,Breakthrough on the computation of Inverse Laplace Transforms,http://inverselaplace.org/
100,Lobsters,performance,Performance and optimization,Micro benchmarks - what can possibly go wrong,https://genodians.org/skalk/2020-06-18-micro-benchmarking
101,Lobsters,performance,Performance and optimization,V Update - June 2020,https://christine.website/blog/vlang-update-2020-06-17
102,Lobsters,performance,Performance and optimization,Eight tips to relieve those Postgres headaches,https://medium.com/productboard-engineering/eight-tips-to-relieve-those-postgres-headaches-c92fcdd7d065
103,Lobsters,performance,Performance and optimization,MetricsDB: TimeSeries Database for storing metrics at Twitter,https://blog.twitter.com/engineering/en_us/topics/infrastructure/2019/metricsdb.html
104,Lobsters,performance,Performance and optimization,Kicking Node into high gear for data processing or how to hire 100 cats to catch a mouse,https://sgolem.com/kicking-node-into-high-gear-for-data-processing-or-how-to-hire-100-cats-to/
105,Lobsters,performance,Performance and optimization,Debugging out-of-memory crashes in Python,https://pythonspeed.com/articles/crash-out-of-memory/
106,Lobsters,performance,Performance and optimization,Effects for Less,https://www.youtube.com/watch?v=0jI-AlWEwYI
107,Lobsters,performance,Performance and optimization,Spark Joy by Running Fewer Tests,https://engineering.shopify.com/blogs/engineering/spark-joy-by-running-fewer-tests
108,Lobsters,performance,Performance and optimization,Async Python is not faster,http://calpaterson.com/async-python-is-not-faster.html
109,Lobsters,performance,Performance and optimization,A bunch of rants about cloud-induced damage,https://rachelbythebay.com/w/2020/05/06/scale/
110,Lobsters,performance,Performance and optimization,Futures and Segmented Stacks,https://without.boats/blog/futures-and-segmented-stacks/
111,Lobsters,performance,Performance and optimization,hyperfine - a command-line benchmarking tool,https://github.com/sharkdp/hyperfine
112,Lobsters,performance,Performance and optimization,bench: Command-line benchmark tool,https://github.com/Gabriel439/bench
113,Lobsters,performance,Performance and optimization,"MIT: If chips can't get smaller, then coders have to get smarter",https://www.techrepublic.com/article/mit-if-chips-cant-get-smaller-then-coders-have-to-get-smarter/
114,Lobsters,performance,Performance and optimization,Improve Linux system performance with noatime,https://opensource.com/article/20/6/linux-noatime
115,Lobsters,performance,Performance and optimization,Optimizing CRC32 for small payload sizes on x86,https://merrymage.com/lab/crc32/
116,Lobsters,performance,Performance and optimization,SpaceX software team Reddit AMA,https://www.reddit.com/r/spacex/comments/gxb7j1/we_are_the_spacex_software_team_ask_us_anything/
117,Lobsters,performance,Performance and optimization,TinyInst is a lightweight dynamic instrumentation library,https://github.com/googleprojectzero/TinyInst
118,Lobsters,performance,Performance and optimization,"Batch, batch, batch: Respect the classics",https://scalibq.wordpress.com/2020/06/02/batch-batch-batch-respect-the-classics/
119,Lobsters,performance,Performance and optimization,Stabilizer: Rigorous Performance Evaluation (2013),https://emeryberger.com/research/stabilizer/
120,Lobsters,performance,Performance and optimization,Those Win9x Crashes on Fast Machines…,http://www.os2museum.com/wp/those-win9x-crashes-on-fast-machines/
121,Lobsters,performance,Performance and optimization,Hoare’s Rebuttal and Bubble Sort’s Comeback,https://blog.reverberate.org/2020/05/29/hoares-rebuttal-bubble-sorts-comeback.html
122,Lobsters,performance,Performance and optimization,The radix 2^51 trick,https://www.chosenplaintext.ca/articles/radix-2-51-trick.html
123,Lobsters,performance,Performance and optimization,The Fastest Google Fonts,https://csswizardry.com/2020/05/the-fastest-google-fonts/
124,Lobsters,performance,Performance and optimization,CPU-intensive Ruby/Python code runs slower on default-configured Docker,http://mamememo.blogspot.com/2020/05/cpu-intensive-rubypython-code-runs.html
125,Lobsters,performance,Performance and optimization,Maybe you don't need Rust and WASM to speed up your JS (2018),https://mrale.ph/blog/2018/02/03/maybe-you-dont-need-rust-to-speed-up-your-js.html
126,Lobsters,performance,Performance and optimization,Faster Integer Parsing,https://kholdstare.github.io/technical/2020/05/26/faster-integer-parsing.html
127,Lobsters,performance,Performance and optimization,Brotli and Gzip Compression for Assets and JSON API in Rails,https://pawelurbanek.com/rails-gzip-brotli-compression
128,Lobsters,performance,Performance and optimization,Why is Idris 2 so much faster than Idris 1?,https://www.type-driven.org.uk/edwinb/why-is-idris-2-so-much-faster-than-idris-1.html
129,Lobsters,performance,Performance and optimization,seL4 Whitepaper,https://sel4.systems/About/home.pml
130,Lobsters,performance,Performance and optimization,Why Fullstaq Ruby?,https://www.joyfulbikeshedding.com/blog/2020-05-15-why-fullstaq-ruby.html
131,Lobsters,performance,Performance and optimization,Why NetNewsWire Is Fast,https://inessential.com/2020/05/18/why_netnewswire_is_fast
132,Lobsters,performance,Performance and optimization,Fil: a new Python memory profiler for data scientists and scientists,https://pythonspeed.com/articles/memory-profiler-data-scientists/
133,Lobsters,performance,Performance and optimization,P4xos: Consensus as a Network Service,http://www.cs.yale.edu/homes/soule/pubs/ton2020.pdf
134,Lobsters,performance,Performance and optimization,Petalisp: A HPC library for Lisp,https://github.com/marcoheisig/Petalisp
135,Lobsters,performance,Performance and optimization,Revisiting the postcard pathtracer with CUDA and Optix,https://fabiensanglard.net/revisiting_the_pathtracer/index.html
136,Lobsters,performance,Performance and optimization,You don't (may not) need Moment.js,https://github.com/you-dont-need/You-Dont-Need-Momentjs
137,Lobsters,performance,Performance and optimization,SIMD accelerated rank/select data structure,https://github.com/sujayakar/rsdict
138,Lobsters,performance,Performance and optimization,Speed improvements using hash tables,https://blog.asrpo.com/hashtables
139,Lobsters,performance,Performance and optimization,Serve Videos Instead of GIFs,https://www.dannyguo.com/blog/serve-videos-instead-of-gifs/
140,Lobsters,performance,Performance and optimization,Making Python Programs Blazingly Fast,https://martinheinz.dev/blog/13
141,Lobsters,performance,Performance and optimization,The Direction and Magnitude of SiFive Intelligence,https://www.youtube.com/watch?v=7NpGmerzSVI
142,Lobsters,performance,Performance and optimization,The curious case of stalled squashfs reads (2018),https://chrisdown.name/2018/04/17/kernel-adventures-the-curious-case-of-squashfs-stalls.html
143,Lobsters,performance,Performance and optimization,Lomuto’s Comeback,https://dlang.org/blog/2020/05/14/lomutos-comeback/
144,Lobsters,performance,Performance and optimization,Improved (auto)vacuum in PostgreSQL 13,http://amitkapila16.blogspot.com/2020/05/improved-autovacuum-in-postgresql-13.html
145,Lobsters,performance,Performance and optimization,Optimizing UTC to Unix Time Conversion For Size And Speed,https://blog.reverberate.org/2020/05/12/optimizing-date-algorithms.html
146,Lobsters,performance,Performance and optimization,Tech Notes: The Success and Failure of Ninja,http://neugierig.org/software/blog/2020/05/ninja.html
147,Lobsters,performance,Performance and optimization,"The logging framework isn't a bottleneck, and other lies your laptop tells you",https://tech.davis-hansson.com/p/tower/
148,Lobsters,performance,Performance and optimization,Performance best practices in C#,https://medium.com/@kevingosse/performance-best-practices-in-c-b85a47bdd93a
149,Lobsters,performance,Performance and optimization,Understanding Database Cost Models,http://justinjaffray.com/understanding-cost-models/
150,Lobsters,performance,Performance and optimization,"Bryan Cantrill talks Sun Microsystems, DTrace, and Shouting in the Data Center",https://www.youtube.com/watch?v=_IYzD_NR0W4
151,Lobsters,performance,Performance and optimization,Compact lexer table representation,https://def.lakaban.net/posts/2020-05-02-compact-lexer-table-representation
152,Lobsters,performance,Performance and optimization,Why QRP? (1990),http://www.arrl.org/why-qrp
153,Lobsters,performance,Performance and optimization,Revisiting the Business Card raytracer,http://fabiensanglard.net/revisiting_the_businesscard_raytracer/index.html
154,Lobsters,performance,Performance and optimization,The Cost of Javascript Frameworks,https://timkadlec.com/remembers/2020-04-21-the-cost-of-javascript-frameworks/
155,Lobsters,performance,Performance and optimization,Measuring the performance of Wikipedia visitors’ devices,https://techblog.wikimedia.org/2020/05/07/measuring-the-performance-of-wikipedia-visitors-devices/
156,Lobsters,performance,Performance and optimization,"Old box, dumb code, few thousand connections, no big deal",https://rachelbythebay.com/w/2020/05/07/serv/
157,Lobsters,performance,Performance and optimization,std::find() and memchr() Optimizations (2016),https://gms.tf/stdfind-and-memchr-optimizations.html
158,Lobsters,performance,Performance and optimization,"Jitter, an efficient language Virtual Machine generator (2017)",http://ageinghacker.net/projects/jitter/
159,Lobsters,performance,Performance and optimization,A Taste of GPU Compute,https://www.youtube.com/watch?v=eqkAaplKBc4
160,Lobsters,performance,Performance and optimization,Can QUIC match the computational efficiency of TCP?,https://www.fastly.com/blog/measuring-quic-vs-tcp-computational-efficiency
161,Lobsters,performance,Performance and optimization,"When Parallel: Pull, Don't Push",https://nullprogram.com/blog/2020/04/30/
162,Lobsters,performance,Performance and optimization,Branch Prediction and the Performance of Interpreters - Don't Trust Folklore,https://hal.inria.fr/hal-01100647
163,Lobsters,performance,Performance and optimization,OCaml Multicore Update: 04.2020 with a preprint “Retrofitting Parallelism onto OCaml”,https://discuss.ocaml.org/t/multicore-update-april-2020-with-a-preprint-paper/5630
164,Lobsters,performance,Performance and optimization,A journey optimizing the Go Compiler,https://segflow.github.io/post/go-compiler-optimization/
165,Lobsters,performance,Performance and optimization,Server-Side Rendering is a Thiel Truth,https://timr.co/server-side-rendering-is-a-thiel-truth
166,Lobsters,performance,Performance and optimization,"Faster JSON Support for iOS/macOS, Part 8: Dematerialize All the Things",https://blog.metaobject.com/2020/04/faster-json-support-for-iosmacos-part-8.html
167,Lobsters,performance,Performance and optimization,What's coming in Go 1.15,https://docs.google.com/presentation/d/1veyF0y6Ynr6AFzd9gXi4foaURlgbMxM-tmB4StDrdAM/edit
168,Lobsters,performance,Performance and optimization,"What is cache penetration, cache breakdown and cache avalanche?",https://www.pixelstech.net/article/1586522853-What-is-cache-penetration-cache-breakdown-and-cache-avalanche
169,Lobsters,performance,Performance and optimization,How to speed up the Rust compiler in 2020,https://blog.mozilla.org/nnethercote/2020/04/24/how-to-speed-up-the-rust-compiler-in-2020/
170,Lobsters,performance,Performance and optimization,"Faster JSON Support for iOS/macOS, Part 7: Polishing the Parser",https://blog.metaobject.com/2020/04/faster-json-support-for-iosmacos-part-7.html
171,Lobsters,performance,Performance and optimization,Prioritizing simplicity improves performance and reliability,https://sourcehut.org/blog/2020-04-20-prioritizing-simplitity/
172,Lobsters,performance,Performance and optimization,Shipyard - Entity Component System focused on usability and speed,https://github.com/leudz/shipyard
173,Lobsters,performance,Performance and optimization,"Somewhat Faster JSON Support for iOS/macOS, Part 6: Cutting KVC out of the Loop",https://blog.metaobject.com/2020/04/somewhat-faster-json-support-for.html
174,Lobsters,performance,Performance and optimization,Do humans or compilers produce faster code?,http://nibblestew.blogspot.com/2020/04/do-humans-or-compilers-produce-faster.html
175,Lobsters,performance,Performance and optimization,SHISHUA: The Fastest Pseudo-Random Generator In the World,https://espadrine.github.io/blog/posts/shishua-the-fastest-prng-in-the-world.html
176,Lobsters,performance,Performance and optimization,Programming Parallel Computers,http://ppc.cs.aalto.fi/
177,Lobsters,performance,Performance and optimization,"More fun with NumPy, CuPy, Clojure and GPU acceleration. Hold my Cider 2",https://dragan.rocks/articles/20/Clojure-Numpy-Cupy-CPU-GPU-2
178,Lobsters,performance,Performance and optimization,Lessons from using eBPF (and bypassing TCP/IP) for accelerating Cloud Native applications,https://cyral.com/blog/lessons-using-ebpf-accelerating-cloud-native
179,Lobsters,performance,Performance and optimization,Software Forge Performance Index,https://forgeperf.org/
180,Lobsters,performance,Performance and optimization,"Less Lethargic JSON Support for iOS/macOS, Part 5: Cutting out the Middleman",https://blog.metaobject.com/2020/04/less-lethargic-json-support-for.html
181,Lobsters,performance,Performance and optimization,SQL Optimizations in PostgreSQL: IN vs EXISTS vs ANY/ALL vs JOIN,https://www.percona.com/blog/2020/04/16/sql-optimizations-in-postgresql-in-vs-exists-vs-any-all-vs-join/
182,Lobsters,performance,Performance and optimization,"Equally Lethargic JSON Support for iOS/macOS, Part 4: Our Keys are Small but Legion",https://blog.metaobject.com/2020/04/equally-lethargic-json-support-for.html
183,Lobsters,performance,Performance and optimization,Comparing HTTP/3 vs. HTTP/2 Performance,https://blog.cloudflare.com/http-3-vs-http-2/
184,Lobsters,performance,Performance and optimization,"eBPF based request traces, metrics & events auto-capture",https://github.com/pixie-labs/pixie
185,Lobsters,performance,Performance and optimization,What Outranks Thread Priority?,https://randomascii.wordpress.com/2020/04/14/what-outranks-thread-priority/
186,Lobsters,performance,Performance and optimization,"Somewhat Less Lethargic JSON Support for iOS/macOS, Part 3: Dematerialization",https://blog.metaobject.com/2020/04/somewhat-less-lethargic-json-support_14.html
187,Lobsters,performance,Performance and optimization,From chunking to parallelism: faster Pandas with Dask,https://pythonspeed.com/articles/faster-pandas-dask/
188,Lobsters,performance,Performance and optimization,MongoDB: Getting storage engines ready for fast storage devices,https://engineering.mongodb.com/post/getting-storage-engines-ready-for-fast-storage-devices
189,Lobsters,performance,Performance and optimization,Nimporter v1.0.0 is out,https://www.reddit.com/r/nim/comments/fz7x3e/nimporter_v100_is_out/
190,Lobsters,performance,Performance and optimization,Scaling SQLite to 4M QPS on a Single Server (EC2 vs Bare Metal) (2018),https://blog.expensify.com/2018/01/08/scaling-sqlite-to-4m-qps-on-a-single-server/
191,Lobsters,performance,Performance and optimization,Rewriting My WordPress Site In HTML/CSS & Comparing Performance,https://kevq.uk/rewriting-my-wordpress-site-in-html-css-comparing-performance/
192,Lobsters,performance,Performance and optimization,"Somewhat Less Lethargic JSON Support for iOS/macOS, Part 2: Analysis",https://blog.metaobject.com/2020/04/somewhat-less-lethargic-json-support_12.html
193,Lobsters,performance,Performance and optimization,Browsing the Web while watching its vitals,https://medium.com/ben-and-dion/browsing-the-web-while-watching-its-vitals-d3df40a2140a
194,Lobsters,performance,Performance and optimization,"Somewhat Less Lethargic JSON Support for iOS/macOS, Part 1: The Status Quo",https://blog.metaobject.com/2020/04/somewhat-less-lethargic-json-support.html
195,Lobsters,performance,Performance and optimization,"CuPy accelerates NumPy on the GPU? Hold my Cider, here's Clojure",https://dragan.rocks/articles/20/Clojure-Numpy-Cupy-CPU-GPU
196,Lobsters,performance,Performance and optimization,"Fast, accurate summation of floating-point numbers",http://blog.zachbjornson.com/2019/08/11/fast-float-summation.html
197,Lobsters,performance,Performance and optimization,Squeezing the most out of the server: Erlang Profiling,http://tech.nextroll.com/blog/dev/2020/04/07/erlang-profiling.html
198,Lobsters,performance,Performance and optimization,Optimizable Code,https://deplinenoise.wordpress.com/2013/12/28/optimizable-code/
199,Lobsters,performance,Performance and optimization,Synthesizing optimal 8051 code,https://lab.whitequark.org/notes/2020-04-06/synthesizing-optimal-8051-code/
200,Lobsters,performance,Performance and optimization,"Wifi: ""beamforming"" only begins to describe it",https://apenwarr.ca/log/20140801
201,Lobsters,performance,Performance and optimization,Hapi: A Performance deep-dive,https://www.nearform.com/blog/hapi-a-performance-deep-dive/
202,Lobsters,performance,Performance and optimization,Five ways not to fool yourself,https://timharris.uk/misc/five-ways.pdf
203,Lobsters,performance,Performance and optimization,Base64 All The Things! (Sometimes),https://uglyduck.ca/base64-all-the-things/
204,Lobsters,performance,Performance and optimization,Chromium build times,https://www.cygnus-software.com/chromiumbuildvisualizer/
205,Lobsters,performance,Performance and optimization,Optimizing Ruby Lazy Initialization in TruffleRuby with Deoptimization,https://engineering.shopify.com/blogs/engineering/optimizing-ruby-lazy-initialization-in-truffleruby-with-deoptimization
206,Lobsters,performance,Performance and optimization,Software optimization resources,https://agner.org/optimize
207,Lobsters,performance,Performance and optimization,Intel Core i9-10980XE Benchmarks - ,https://www.phoronix.com/scan.php?page=article&item=dfly58-freebsd121-ubuntu2004
208,Lobsters,performance,Performance and optimization,JITs are un-ergonomic,https://abe-winter.github.io/2020/03/28/jitu-brutus.html
209,Lobsters,performance,Performance and optimization,Radio-Astronomical Imaging: FPGAs vs GPUs,https://www.astron.nl/~romein/papers/EuroPar-19/EuroPar-19.pdf
210,Lobsters,performance,Performance and optimization,PostgreSQL Performance Workshop,https://www.youtube.com/watch?v=xqTNceHxkIo
211,Lobsters,performance,Performance and optimization,New grad vs senior dev,https://ericlippert.com/2020/03/27/new-grad-vs-senior-dev/
212,Lobsters,performance,Performance and optimization,Real-world experience with programming languages designed for GPU programming?,/s/ffnquo/real_world_experience_with_programming
213,Lobsters,performance,Performance and optimization,"Chapel Comes of Age: A Language for Productivity, Parallelism, and Performance",https://chapel-lang.org/presentations/ChapelForHPCKM-presented.pdf
214,Lobsters,performance,Performance and optimization,Speeding up Linux disk encryption,https://blog.cloudflare.com/speeding-up-linux-disk-encryption/
215,Lobsters,performance,Performance and optimization,"Reducing memory consumption in librsvg, part 3: slack space in Bézier paths",https://people.gnome.org/~federico/blog/reducing-memory-consumption-in-librsvg-3.html
216,Lobsters,performance,Performance and optimization,Optimizing Sorted Map Iteration,https://www.dolthub.com/blog/2020-03-07-optimizing-sorted-map-iteration/
217,Lobsters,performance,Performance and optimization,Observations on ARM64 & AWS’s Amazon EC2 M6g Instances,https://www.honeycomb.io/blog/observations-on-arm64-awss-amazon-ec2-m6g-instances/
218,Lobsters,performance,Performance and optimization,“Premature optimization is the root of all evil” is the root of evil,https://medium.com/@okaleniuk/premature-optimization-is-the-root-of-all-evil-is-the-root-of-evil-a8ab8056c6b
219,Lobsters,performance,Performance and optimization,Avoiding cache line overlap by replacing one 256-bit store with two 128-bit stores,https://lemire.me/blog/2020/03/18/avoiding-cache-line-overlap-by-replacing-one-256-bit-store-with-two-128-bit-stores/
220,Lobsters,performance,Performance and optimization,The Troublesome Active Record Pattern,http://calpaterson.com/activerecord.html
221,Lobsters,performance,Performance and optimization,How to use Sysprof to…,https://blogs.gnome.org/chergert/2020/03/14/how-to-use-sysprof-to/
222,Lobsters,performance,Performance and optimization,Handling Transactions in the Microservice world,https://medium.com/swlh/handling-transactions-in-the-microservice-world-c77b275813e0
223,Lobsters,performance,Performance and optimization,Writing a memory allocator for fast serialization (2017),http://www.idryman.org/blog/2017/06/28/opic-a-memory-allocator-for-fast-serialization/
224,Lobsters,performance,Performance and optimization,SFTPGo: a Golang performance story and some questions,https://groups.google.com/forum/#!topic/golang-nuts/wLRJHQ9ydrk
225,Lobsters,performance,Performance and optimization,Silly benchmarks on completely untuned server code,https://rachelbythebay.com/w/2020/03/10/rps/
226,Lobsters,performance,Performance and optimization,MessagePack: It's like JSON. but fast and small,https://msgpack.org/
227,Lobsters,performance,Performance and optimization,Benchmarking the AWS Graviton2 with KeyDB,https://docs.keydb.dev/blog/2020/03/02/blog-post/
228,Lobsters,performance,Performance and optimization,LISA2019 Linux Systems Performance,http://www.brendangregg.com/blog/2020-03-08/lisa2019-linux-systems-performance.html
229,Lobsters,performance,Performance and optimization,Branch prediction minutiae in LZ decoders,http://mikejsavage.co.uk/blog/branch-prediction-minutiae-lz.html
230,Lobsters,performance,Performance and optimization,"orz - a high performance, general purpose data compressor",https://github.com/richox/orz
231,Lobsters,performance,Performance and optimization,Oil's Parser is 160x to 200x Faster Than It Was 2 Years Ago,http://www.oilshell.org/blog/2020/01/parser-benchmarks.html
232,Lobsters,performance,Performance and optimization,When Bloom filters don't bloom,https://blog.cloudflare.com/when-bloom-filters-dont-bloom/
233,Lobsters,performance,Performance and optimization,A journey to searching Have I Been Pwned database in 49μs,http://stryku.pl/poetry/okon.php
234,Lobsters,performance,Performance and optimization,Securing Memory at EPYC Scale,https://blog.cloudflare.com/securing-memory-at-epyc-scale/
235,Lobsters,performance,Performance and optimization,Writing an efficient Vulkan renderer,https://zeux.io/2020/02/27/writing-an-efficient-vulkan-renderer/
236,Lobsters,performance,Performance and optimization,Loading NumPy arrays from disk: mmap() vs. Zarr/HDF5,https://pythonspeed.com/articles/mmap-vs-zarr-hdf5/
237,Lobsters,performance,Performance and optimization,Cloudflare compares AMD and Intel CPUs for performance and power use,https://blog.cloudflare.com/an-epyc-trip-to-rome-amd-is-cloudflares-10th-generation-edge-server-cpu/
238,Lobsters,performance,Performance and optimization,Pointer magic for efficient dynamic value representations [AKA “NaN tagging”] (2012),https://nikic.github.io/2012/02/02/Pointer-magic-for-efficient-dynamic-value-representations.html
239,Lobsters,performance,Performance and optimization,Thoughts on performance & optimization,https://drewdevault.com/2020/02/21/Thoughts-on-performance.html
240,Lobsters,performance,Performance and optimization,FreeBSD versus Linux Scaling Up to 128 Threads with AMD Ryzen Threadripper 3990X,https://www.phoronix.com/scan.php?page=article&item=3990x-freebsd-bsd
241,Lobsters,performance,Performance and optimization,Effective Profiling in Google Chrome,https://blog.appsignal.com/2020/02/20/effective-profiling-in-google-chrome.html
242,Lobsters,performance,Performance and optimization,Does register selection matter to performance on x86 CPUs?,https://fiigii.com/2020/02/16/Does-register-selection-matter-to-performance-on-x86-CPUs/
243,Lobsters,performance,Performance and optimization,Fixing memory leaks in web applications,https://nolanlawson.com/2020/02/19/fixing-memory-leaks-in-web-applications/
244,Lobsters,performance,Performance and optimization,Adventures in C# Optimization,https://snowflakepowe.red/blog/adventures-in-c-sharp-optimization-2020-02-15/
245,Lobsters,performance,Performance and optimization,AVIF for Next-Generation Image Coding,https://netflixtechblog.com/avif-for-next-generation-image-coding-b1d75675fe4
246,Lobsters,performance,Performance and optimization,What made the 1960s CDC6600 supercomputer fast?,https://cpldcpu.wordpress.com/2020/02/14/what-made-the-cdc6600-fast/
247,Lobsters,performance,Performance and optimization,A bit of background on compilers exploiting signed overflow,https://gist.github.com/rygorous/e0f055bfb74e3d5f0af20690759de5a7
248,Lobsters,performance,Performance and optimization,Can You Mount a Volume While Building Your Docker Image to Cache Dependencies? (2017),https://vsupalov.com/cache-docker-build-dependencies-without-volume-mounting/
249,Lobsters,performance,Performance and optimization,"PCG, A Family of Better Random Number Generators",http://www.pcg-random.org/index.html
250,Lobsters,performance,Performance and optimization,Progressive React (2019),https://houssein.me/progressive-react
251,Lobsters,performance,Performance and optimization,What would you pay for type checking?,https://blog.noredink.com/post/190753809533/what-would-you-pay-for-type-checking
252,Lobsters,performance,Performance and optimization,Memory Bandwidth Napkin Math,https://www.forrestthewoods.com/blog/memory-bandwidth-napkin-math/
253,Lobsters,performance,Performance and optimization,Build a Lightning Quick Website using Hugo and S3,https://joshbradley.me/building-this-website/
254,Lobsters,performance,Performance and optimization,How V8 measures real-world performance,https://v8.dev/blog/real-world-performance
255,Lobsters,performance,Performance and optimization,Doubling System Read Throughput with Only 26 Lines of Code,https://pingcap.com/blog/doubling-system-read-throughput-with-only-26-lines-of-code/
256,Lobsters,performance,Performance and optimization,The Parallelism Blues: when faster code is slower,https://pythonspeed.com/articles/parallelism-slower/
257,Lobsters,performance,Performance and optimization,Reflections on software performance,https://blog.nelhage.com/post/reflections-on-performance/
258,Lobsters,performance,Performance and optimization,How do compilers optimize divisions?,https://zneak.github.io/fcd/2017/02/19/divisions.html
259,Lobsters,performance,Performance and optimization,CPU caches and data locality: a small demonstration,https://kaushikghose.wordpress.com/2020/01/30/cpu-caches-and-data-locality-a-small-demonstration/
260,Lobsters,performance,Performance and optimization,This Goes to Eleven (Part 1/6),https://bits.houmus.org/2020-01-28/this-goes-to-eleven-pt1
261,Lobsters,performance,Performance and optimization,The JVM's mysterious AllocatePrefetch options: what do they actually do?,https://www.opsian.com/blog/jvms-allocateprefetch-options/
262,Lobsters,performance,Performance and optimization,Easily Add Offline-First to Any Application,https://replicache.dev/
263,Lobsters,performance,Performance and optimization,Against unnecessary databases,https://beepb00p.xyz/unnecessary-db.html
264,Lobsters,performance,Performance and optimization,"Linear Exeuction, Multiprocessing, and Multithreading IO-Bound Tasks in Python -",https://zacs.site/blog/linear-python.html
265,Lobsters,performance,Performance and optimization,What do you use for performance testing?,/s/e5oswm/what_do_you_use_for_performance_testing
266,Lobsters,performance,Performance and optimization,Why the Sorbet typechecker is fast,https://blog.nelhage.com/post/why-sorbet-is-fast/
267,Lobsters,performance,Performance and optimization,"Performance variation in 2,386 ‘identical’ processors",http://shape-of-code.coding-guidelines.com/2020/01/05/performance-variation-in-2386-identical-processors/
268,Lobsters,performance,Performance and optimization,The Hunt for the Fastest Zero,https://travisdowns.github.io/blog/2020/01/20/zero.html
269,Lobsters,performance,Performance and optimization,Reservoir Sampling,https://richardstartin.github.io/posts/reservoir-sampling
270,Lobsters,performance,Performance and optimization,Remove unused CSS,https://github.com/FullHuman/purgecss
271,Lobsters,performance,Performance and optimization,Dismissing Python Garbage Collection at Instagram (2017),https://instagram-engineering.com/dismissing-python-garbage-collection-at-instagram-4dca40b29172
272,Lobsters,performance,Performance and optimization,Low Power Mode for Mac laptops: making the case again,https://marco.org/2020/01/13/macos-low-power-mode-redux
273,Lobsters,performance,Performance and optimization,Gathering Intel on Intel AVX-512 Transitions,https://travisdowns.github.io/blog/2020/01/17/avxfreq1.html
274,Lobsters,performance,Performance and optimization,Scalene: a high-performance CPU and memory profiler for Python,https://github.com/emeryberger/scalene
275,Lobsters,performance,Performance and optimization,Chaos Mesh - Your Chaos Engineering Solution for System Resiliency on Kubernetes,https://pingcap.com/blog/chaos-mesh-your-chaos-engineering-solution-for-system-resiliency-on-kubernetes/
276,Lobsters,performance,Performance and optimization,Embench™: A Modern Embedded Benchmark Suite,https://embench.org
277,Lobsters,performance,Performance and optimization,"Cache Crispies: Fast, Flexible Rails Serializer",https://codenoble.com/blog/introducing-cache-crispies/
278,Lobsters,performance,Performance and optimization,Adventures with Content Delivery (mostly CloudFront) Optimizations,https://tech.affirm.com/adventures-with-content-delivery-mostly-cloudfront-optimizations-bd5206d679c1
279,Lobsters,performance,Performance and optimization,We’re approaching the limits of computer power – we need new programmers now,https://www.theguardian.com/commentisfree/2020/jan/11/we-are-approaching-the-limits-of-computer-power-we-need-new-programmers-n-ow
280,Lobsters,performance,Performance and optimization,Front-End Performance Checklist 2020,https://www.smashingmagazine.com/2020/01/front-end-performance-checklist-2020-pdf-pages/
281,Lobsters,performance,Performance and optimization,Benchmarking TLDs: Is your fancy new domain hurting your performance?,https://bunnycdn.com/blog/is-your-fancy-new-domain-hurting-your-performance-gtld-benchmark/
282,Lobsters,performance,Performance and optimization,Software disenchantment,https://tonsky.me/blog/disenchantment/
283,Lobsters,performance,Performance and optimization,Webserver Benchmark: Erlang vs Go vs Java vs NodeJS,https://stressgrid.com/blog/webserver_benchmark/
284,Lobsters,performance,Performance and optimization,ClickHouse Cost-Efficiency in Action: Analyzing 500 Billion Rows on an Intel NUC,https://www.altinity.com/blog/2020/1/1/clickhouse-cost-efficiency-in-action-analyzing-500-billion-rows-on-an-intel-nuc
285,Lobsters,performance,Performance and optimization,Let the Compiler Do the Work,http://cliffle.com/p/dangerust/6/
286,Lobsters,performance,Performance and optimization,Bulk ETW Trace Analysis in C#,https://randomascii.wordpress.com/2020/01/05/bulk-etw-trace-analysis-in-c/
287,Lobsters,performance,Performance and optimization,Random Access Permutations,https://blog.edwardloveall.com/random-access-permutations
288,Lobsters,performance,Performance and optimization,Actix Web: Optimization Amongst Optimizations,https://brandur.org/nanoglyphs/008-actix
289,Lobsters,performance,Performance and optimization,cachew: persistent cache/serialization powered by Python type hints,https://github.com/karlicoss/cachew
290,Lobsters,performance,Performance and optimization,Mathematical diseases in climate models and how to cure them,https://www.youtube.com/watch?v=WGe-gYRSM7c
291,Lobsters,performance,Performance and optimization,Benchmarking shell pipelines and the Unix “tools” philosophy,https://blog.plover.com/Unix/tools.html
292,Lobsters,performance,Performance and optimization,Mutexes Are Faster Than Spinlocks,https://matklad.github.io//2020/01/04/mutexes-are-faster-than-spinlocks.html
293,Lobsters,performance,Performance and optimization,Hello world,https://drewdevault.com/2020/01/04/Slow.html
294,Lobsters,performance,Performance and optimization,"Copying data is wasteful, mutating data is dangerous",https://pythonspeed.com/articles/minimizing-copying/
295,Lobsters,performance,Performance and optimization,How I once saved half a million dollars with a single character code change,http://blog.pitest.org/how-i-once-saved-half-a-million-dollars-with-a-single-character-code-change/
296,Lobsters,performance,Performance and optimization,Make Vim Python plugin 10x faster using Rust,http://www.liuchengxu.org/posts/speed-up-vim-python-plugin-using-rust/
297,Lobsters,performance,Performance and optimization,Performance testing HTTP/1.1 vs HTTP/2 vs HTTP/2 + Server Push for REST APIs,https://evertpot.com/h2-parallelism/
298,Lobsters,performance,Performance and optimization,Good times create weak men,https://tonsky.me/blog/good-times-weak-men/
299,Lobsters,performance,Performance and optimization,"Measuring Mutexes, Spinlocks and how Bad the Linux Scheduler Really is",https://probablydance.com/2019/12/30/measuring-mutexes-spinlocks-and-how-bad-the-linux-scheduler-really-is/
300,Lobsters,performance,Performance and optimization,"Java JIT vs Java AOT vs Go for small, short-lived processes",http://macias.info/entry/201912201300_graal_aot.md
301,Lobsters,performance,Performance and optimization,The Kernel Change That May Be Slowing Down Your App,https://relistan.com/the-kernel-may-be-slowing-down-your-app
302,Lobsters,performance,Performance and optimization,Emulating Persistent Memory in the Linux Kernel with Different Page Sizes,https://www.williamwalcher.xyz/hacking-libvmmalloc-fun-profit/
303,Lobsters,performance,Performance and optimization,Optimizing for Size,https://www.natano.net/blog/2019-12-19-compiler-opt-fun/
304,Lobsters,performance,Performance and optimization,Xor Filters: Faster and Smaller Than Bloom Filters,https://lemire.me/blog/2019/12/19/xor-filters-faster-and-smaller-than-bloom-filters/
305,Lobsters,performance,Performance and optimization,This Page is Designed to Last,https://jeffhuang.com/designed_to_last/
306,Lobsters,performance,Performance and optimization,"std::algorithm for audio, part I",https://elk.audio/stdalgorithm-for-audio-part-i/
307,Lobsters,performance,Performance and optimization,Reducing NumPy memory usage with lossless compression,https://pythonspeed.com/articles/numpy-memory-footprint/
308,Lobsters,performance,Performance and optimization,I'm building a profiler for my OS! (and making videos of the process),https://www.youtube.com/watch?v=nsKtvx-m2gU
309,Lobsters,performance,Performance and optimization,How to reduce costs for your HTTP(S) API on Amazon Web Services,https://gameanalytics.com/blog/reduce-costs-https-api-aws.html
310,Lobsters,performance,Performance and optimization,Survey of Cowboy Webserver Performance - Part 2,https://stressgrid.com/blog/cowboy_performance_part_2/
311,Lobsters,performance,Performance and optimization,Chunking Optimizations: Let the Knife Do the Work,https://nullprogram.com/blog/2019/12/09/
312,Lobsters,performance,Performance and optimization,"O(n^2), again, now in WMI",https://randomascii.wordpress.com/2019/12/08/on2-again-now-in-wmi/
313,Lobsters,performance,Performance and optimization,Agner's Software Optimization resources,https://www.agner.org/optimize/?e=0#0
314,Lobsters,performance,Performance and optimization,Assembly Optimization Tips by Mark Larson,http://mark.masmcode.com/
315,Lobsters,performance,Performance and optimization,Surface Pro X benchmark from the programmer’s point of view,https://megayuchi.com/2019/12/08/surface-pro-x-benchmark-from-the-programmers-point-of-view/
316,Lobsters,performance,Performance and optimization,Optimal Virtual DOM,https://blog.kabir.sh/posts/optimal-virtual-dom.html
317,Lobsters,performance,Performance and optimization,Instructions per cycle: AMD Zen 2 versus Intel,https://lemire.me/blog/2019/12/05/instructions-per-cycle-amd-versus-intel/
318,Lobsters,performance,Performance and optimization,AnyDSL - A Partial Evaluation Framework for Programming High-Performance Libraries,https://anydsl.github.io/
319,Lobsters,performance,Performance and optimization,Lighthouse,https://developers.google.com/web/tools/lighthouse
320,Lobsters,performance,Performance and optimization,Survey of Cowboy Webserver Performance,https://stressgrid.com/blog/cowboy_performance/
321,Lobsters,performance,Performance and optimization,Reducing Pandas memory usage with lossy compression,https://pythonspeed.com/articles/pandas-reduce-memory-lossy/
322,Lobsters,performance,Performance and optimization,Go memory ballast,https://blog.twitch.tv/en/2019/04/10/go-memory-ballast-how-i-learnt-to-stop-worrying-and-love-the-heap-26c2462549a2/
323,Lobsters,performance,Performance and optimization,Zen 2 Missives,http://apollo.backplane.com/2019-Zen2Missive.html
324,Lobsters,performance,Performance and optimization,64 Bits ought to be enough for anybody,https://blog.trailofbits.com/2019/11/27/64-bits-ought-to-be-enough-for-anybody/
325,Lobsters,performance,Performance and optimization,Better computational complexity does not imply better speed,https://lemire.me/blog/2019/11/26/better-computational-complexity-does-not-imply-better-speed/
326,Lobsters,performance,Performance and optimization,"Preload, prefetch and other <link> tags: what they do and when to use them",https://3perf.com/blog/link-rels/
327,Lobsters,performance,Performance and optimization,Beating C with 1 line of Brainfuck,https://kiwec.net/blog/posts/beating-c-with-brainfuck/
328,Lobsters,performance,Performance and optimization,"How does Oculus Link Work? The Architecture, Pipeline and AADT Explained",https://developer.oculus.com/blog/how-does-oculus-link-work-the-architecture-pipeline-and-aadt-explained/
329,Lobsters,performance,Performance and optimization,12 Common Mistakes and Missed Optimization Opportunities in SQL,https://hakibenita.com/sql-dos-and-donts
330,Lobsters,performance,Performance and optimization,Beating wc with C,https://github.com/expr-fi/fastlwc/
331,Lobsters,performance,Performance and optimization,Beating C with 70 Lines of Go,https://ajeetdsouza.github.io/blog/posts/beating-c-with-70-lines-of-go/
332,Lobsters,performance,Performance and optimization,What to <link rel=dns-prefetch> and when to use preconnect,https://www.ctrl.blog/entry/dns-prefetch-preconnect.html
333,Lobsters,performance,Performance and optimization,Clang format tanks performance,https://travisdowns.github.io/blog/2019/11/19/toupper.html
334,Lobsters,performance,Performance and optimization,Squashfs documentation in brief,https://www.kernel.org/doc/Documentation/filesystems/squashfs.txt 
335,Lobsters,performance,Performance and optimization,Profiling Django with DTrace and cProfile,https://wiedi.frubar.net/blog/2019/11/18/django-performance/
336,Lobsters,performance,Performance and optimization,Reduce Pandas memory usage by loading less data,https://pythonspeed.com/articles/pandas-load-less-data/
337,Lobsters,performance,Performance and optimization,Optimizations in C++ Compilers - A practical journey,https://queue.acm.org/detail.cfm?id=3372264
338,Lobsters,performance,Performance and optimization,How Lock-free Data Structures Perform in Dynamic Environments: Models and Analyses (2016),https://arxiv.org/pdf/1611.05793v1.pdf
339,Lobsters,performance,Performance and optimization,Parsing XML at the Speed of Light,http://aosabook.org/en/posa/parsing-xml-at-the-speed-of-light.html
340,Lobsters,performance,Performance and optimization,Unrolling your loops can improve branch prediction,https://lemire.me/blog/2019/11/12/unrolling-your-loops-can-improve-branch-prediction/
341,Lobsters,performance,Performance and optimization,"gprof, Valgrind and gperftools - an evaluation of some tools for application level CPU profiling",http://gernotklingler.com/blog/gprof-valgrind-gperftools-evaluation-tools-application-level-cpu-profiling-linux/
342,Lobsters,performance,Performance and optimization,Test-driving ARM cloud servers for development,https://github.com/sanxiyn/blog/blob/master/posts/2019-11-12.md
343,Lobsters,performance,Performance and optimization,When your data doesn’t fit in memory: the basic techniques,https://pythonspeed.com/articles/data-doesnt-fit-in-memory/
344,Lobsters,performance,Performance and optimization,avoid OR for better PostgreSQL query performance,https://www.cybertec-postgresql.com/en/avoid-or-for-better-performance/
345,Lobsters,performance,Performance and optimization,Fine Tuning Full Text Search with PostgreSQL 12,https://rob.conery.io/2019/10/29/fine-tuning-full-text-search-with-postgresql-12/
346,Lobsters,performance,Performance and optimization,Amethyst Legion ECS Evolution RFC,https://github.com/amethyst/rfcs/issues/22
347,Lobsters,performance,Performance and optimization,Adding a (predictable) branch to existing code can increase branch mispredictions,https://lemire.me/blog/2019/11/06/adding-a-predictable-branch-to-existing-code-can-increase-branch-mispredictions/
348,Lobsters,performance,Performance and optimization,Hypothetical Indexes in PostgreSQL,https://www.percona.com/blog/2019/06/21/hypothetical-indexes-in-postgresql/
349,Lobsters,performance,Performance and optimization,How We Spotted and Fixed a Performance Degradation in Our Python Code,https://blog.redash.io/how-we-spotted-and-fixed-a-performance-degradation-in-our-python-code/
350,Lobsters,performance,Performance and optimization,An analysis of performance evolution of Linux’s core operations,https://blog.acolyer.org/2019/11/04/an-analysis-of-performance-evolution-of-linuxs-core-operations/
351,Lobsters,performance,Performance and optimization,AVX-512: when and how to use these new instructions,https://lemire.me/blog/2018/09/07/avx-512-when-and-how-to-use-these-new-instructions/
352,Lobsters,performance,Performance and optimization,Always Bump Downwards,http://fitzgeraldnick.com/2019/11/01/always-bump-downwards.html
353,Lobsters,performance,Performance and optimization,How to Code Neat Machine Learning Pipelines,https://www.neuraxio.com/en/blog/neuraxle/2019/10/26/neat-machine-learning-pipelines.html
354,Lobsters,performance,Performance and optimization,Operon: Extreme Performance For Ansible,https://sweetness.hmmz.org/2019-10-28-operon.html
355,Lobsters,performance,Performance and optimization,Heap Snapshots–Tracing All Heap Allocations,https://randomascii.wordpress.com/2019/10/27/heap-snapshots-tracing-all-heap-allocations/
356,Lobsters,performance,Performance and optimization,pg_flame - visualize Postgres query plans as flamegraphs,https://github.com/mgartner/pg_flame
357,Lobsters,performance,Performance and optimization,[1994] Order preserving compression,https://www.hpl.hp.com/techreports/Compaq-DEC/CRL-94-3.pdf
358,Lobsters,performance,Performance and optimization,Boosting the Real Time Performance of Gnome Shell 3.34 in Ubuntu 19.10,http://discourse.ubuntu.com/t/boosting-the-real-time-performance-of-gnome-shell-3-34-in-ubuntu-19-10/13095
359,Lobsters,performance,Performance and optimization,Adding type hints to the Django ORM,https://www.willmcgugan.com/blog/tech/post/adding-type-hints-to-the-django-orm/
360,Lobsters,performance,Performance and optimization,Optimizing Data-Intensive Computations in Existing Libraries with Split Annotations,https://dawn.cs.stanford.edu/2019/10/22/split-annotations/
361,Lobsters,performance,Performance and optimization,Rust and C++ on Floating-point Intensive Code,https://www.reidatcheson.com/hpc/architecture/performance/rust/c++/2019/10/19/measure-cache.html
362,Lobsters,performance,Performance and optimization,Updated WebAssembly benchmark using libsodium,https://00f.net/2019/10/22/updated-webassembly-benchmark/
363,Lobsters,performance,Performance and optimization,Things to Optimize Besides Speed and Memory,https://prog21.dadgum.com/145.html
364,Lobsters,performance,Performance and optimization,C++ benchmark – std::vector VS std::list VS std::deque,https://baptiste-wicht.com/posts/2012/12/cpp-benchmark-vector-list-deque.html
365,Lobsters,performance,Performance and optimization,63 Cores Blocked by Seven Instructions,https://randomascii.wordpress.com/2019/10/20/63-cores-blocked-by-seven-instructions/
366,Lobsters,performance,Performance and optimization,Easy Concurrency in Python,http://pljung.de/posts/easy-concurrency-in-python/
367,Lobsters,performance,Performance and optimization,Efficiency is fundamentally at odds with elegance (2013),http://yosefk.com/blog/efficiency-is-fundamentally-at-odds-with-elegance.html
368,Lobsters,performance,Performance and optimization,Beyond cProfile: Sampling profilers and logging for performance optimization,https://pythonspeed.com/articles/beyond-cprofile/
369,Lobsters,performance,Performance and optimization,ELI5: ZFS Caching,https://www.youtube.com/watch?v=L_kBM_RHa6g
370,Lobsters,performance,Performance and optimization,The Battle of C# to JSON Serializers in .NET Core 3,https://michaelscodingspot.com/the-battle-of-c-to-json-serializers-in-net-core-3/
371,Lobsters,performance,Performance and optimization,Mispredicted branches can multiply your running times,https://lemire.me/blog/2019/10/15/mispredicted-branches-can-multiply-your-running-times/
372,Lobsters,performance,Performance and optimization,Amazon’s Consumer Business Just Turned off its Final Oracle Database,https://aws.amazon.com/blogs/aws/migration-complete-amazons-consumer-business-just-turned-off-its-final-oracle-database/
373,Lobsters,performance,Performance and optimization,Performance — a gaze through the functional prism,https://medium.com/appsflyer/performance-a-gaze-through-the-functional-prism-a3c41c4795b0
374,Lobsters,performance,Performance and optimization,Making the Tokio scheduler 10x faster,https://tokio.rs/blog/2019-10-scheduler/
375,Lobsters,performance,Performance and optimization,Eventful GHC,http://www.well-typed.com/blog/2019/09/eventful-ghc/
376,Lobsters,performance,Performance and optimization,How to speed up the Rust compiler some more in 2019,https://blog.mozilla.org/nnethercote/2019/10/11/how-to-speed-up-the-rust-compiler-some-more-in-2019/
377,Lobsters,performance,Performance and optimization,MicroSpec: Speculation-Centric Fine-Grained Parallelization for FSM Computations (2016),http://www.cs.wm.edu/~bren/files/papers/PACT16.pdf
378,Lobsters,performance,Performance and optimization,An Overview of Deterministic Database Systems (2018),http://www.cs.umd.edu/~abadi/papers/abadi-cacm2018.pdf
379,Lobsters,performance,Performance and optimization,Engineering a Sort Function,https://cs.fit.edu/~pkc/classes/writing/samples/bentley93engineering.pdf
380,Lobsters,performance,Performance and optimization,Performance analysis of multithreaded applications,https://easyperf.net/blog/2019/10/05/Performance-Analysis-Of-MT-apps
381,Lobsters,performance,Performance and optimization,Beating std::visit Without Really Trying,https://pbackus.github.io/blog/beating-stdvisit-without-really-trying.html
382,Lobsters,performance,Performance and optimization,Frugal computing,http://muratbuffalo.blogspot.com/2019/10/frugal-computing.html
383,Lobsters,performance,Performance and optimization,Google: polling like it's the 90s,https://www.ably.io/blog/google-polling-like-its-the-90s/
384,Lobsters,performance,Performance and optimization,Service Throughput Tradeoffs,https://crawshaw.io/blog/service-throughput
385,Lobsters,performance,Performance and optimization,Sushi Roll: A CPU research kernel with minimal noise for cycle-by-cycle micro-architectural introspection,https://gamozolabs.github.io/metrology/2019/08/19/sushi_roll.html
386,Lobsters,performance,Performance and optimization,Clang Build Analyzer,https://aras-p.info/blog/2019/09/28/Clang-Build-Analyzer/
387,Lobsters,performance,Performance and optimization,Doubling the speed of std::uniform_int_distribution in the GNU C++ library,https://lemire.me/blog/2019/09/28/doubling-the-speed-of-stduniform_int_distribution-in-the-gnu-c-library/
388,Lobsters,performance,Performance and optimization,In Quest of a Pangram,http://www.leesallows.com/files/In%20Quest%20of%20a%20Pangram1.pdf
389,Lobsters,performance,Performance and optimization,"Dakota: Tool for Optimization, Model Calibration, Risk Analysis, and Margin Quantification",https://dakota.sandia.gov/
390,Lobsters,performance,Performance and optimization,Data-Parallel Finite State Machines (2016),https://www.microsoft.com/en-us/research/wp-content/uploads/2016/02/asplos302-mytkowicz.pdf
391,Lobsters,performance,Performance and optimization,A Practical Guide to BLE Throughput,https://interrupt.memfault.com/blog/ble-throughput-primer
392,Lobsters,performance,Performance and optimization,Performance metrics for blazingly fast web apps,https://blog.superhuman.com/performance-metrics-for-blazingly-fast-web-apps-ec12efa26bcb
393,Lobsters,performance,Performance and optimization,Producing Wrong Data Without Doing Anything Obviously Wrong,https://john.cs.olemiss.edu/~hcc/researchMethods/notes/localcopy/mytkowicz-wrong-data.pdf
394,Lobsters,performance,Performance and optimization,Deep Learning for Programmers book new release 0.9.0,https://aiprobook.com/deep-learning-for-programmers?release=0.9.0&src=lobsters
395,Lobsters,performance,Performance and optimization,Xamarin.Forms: StackLayout vs Grid,https://ericsink.com/entries/xf_measure.html
396,Lobsters,performance,Performance and optimization,Performance Engineering of Software Systems,https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-172-performance-engineering-of-software-systems-fall-2010/
397,Lobsters,performance,Performance and optimization,Postgres Execution Plans — Field Glossary,https://www.pgmustard.com/blog/2019/9/17/postgres-execution-plans-field-glossary
398,Lobsters,performance,Performance and optimization,"Benchmarking Fibers, Threads and Processes",http://engineering.appfolio.com/appfolio-engineering/2019/9/13/benchmarking-fibers-threads-and-processes
399,Lobsters,performance,Performance and optimization,Finding Code that Counts with Causal Profiling,https://arxiv.org/pdf/1608.03676v1.pdf
400,Lobsters,performance,Performance and optimization,Improving std::sort,https://youtu.be/FJJTYQYB1JQ
401,Lobsters,performance,Performance and optimization,The cost of parsing JSON in JavaScript,https://v8.dev/blog/cost-of-javascript-2019#json
402,Lobsters,performance,Performance and optimization,An unexpected performance regression,https://dev.to/sharkdp/an-unexpected-performance-regression-11ai
403,Lobsters,performance,Performance and optimization,A Common Gotcha with Asynchronous GPU Computing,https://dragan.rocks/articles/19/Common-Gotcha-Asynchronous-GPU-CUDA-Computing-Clojure
404,Lobsters,performance,Performance and optimization,"How ""Export to Excel"" Almost Killed Our System",https://hakibenita.com/python-django-optimizing-excel-export
405,Lobsters,performance,Performance and optimization,Why Go and not Rust?,https://kristoff.it/blog/why-go-and-not-rust/
406,Lobsters,performance,Performance and optimization,Performance Matters,https://www.youtube.com/watch?v=r-TLSBdHe1A
407,Lobsters,performance,Performance and optimization,Speeding up independent binary searches by interleaving them,https://lemire.me/blog/2019/09/14/speeding-up-independent-binary-searches-by-interleaving-them/
408,Lobsters,performance,Performance and optimization,How JavaScript Works: Optimizing the V8 Compiler for Efficiency,https://blog.logrocket.com/how-javascript-works-optimizing-the-v8-compiler-for-efficiency/
409,Lobsters,performance,Performance and optimization,A lighter V8,https://v8.dev/blog/v8-lite
410,Lobsters,performance,Performance and optimization,Sampling CPU and HEAP profiler for Java featuring AsyncGetCallTrace + perf_events,https://github.com/jvm-profiling-tools/async-profiler
411,Lobsters,performance,Performance and optimization,Building a better Go linker,http://golang.org/s/better-linker
412,Lobsters,performance,Performance and optimization,Linux Kernel Fastboot On the Way,https://www.linuxplumbersconf.org/event/4/contributions/281/attachments/216/435/LPC_2019_kernel_fastboot_on_the_way.pdf
413,Lobsters,performance,Performance and optimization,A Meta-Grammar for PEG Parsers,https://medium.com/@gvanrossum_83706/a-meta-grammar-for-peg-parsers-3d3d502ea332
414,Lobsters,performance,Performance and optimization,Taskbar Latency and Kernel Calls,https://randomascii.wordpress.com/2019/09/08/taskbar-latency-and-kernel-calls/
415,Lobsters,performance,Performance and optimization,Profiling augr's performance,https://geemili.xyz/blog/profiling-augr/
416,Lobsters,performance,Performance and optimization,Approximating the Sine Function,http://datagenetics.com/blog/july12019/index.html
417,Lobsters,performance,Performance and optimization,Our journey to type checking 4 million lines of Python,http://blogs.dropbox.com/tech/2019/09/our-journey-to-type-checking-4-million-lines-of-python/
418,Lobsters,performance,Performance and optimization,A comparison of three programming languages for a full-fledged next-generation sequencing tool,https://bmcbioinformatics.biomedcentral.com/articles/10.1186/s12859-019-2903-5
419,Lobsters,performance,Performance and optimization,10 Ways to Tweak Slow SQL Queries,http://www.helenanderson.co.nz/sql-query-tweaks/
420,Lobsters,performance,Performance and optimization,Adding actions to a PEG grammar,https://medium.com/@gvanrossum_83706/adding-actions-to-a-peg-grammar-d5e00fa1092f
421,Lobsters,performance,Performance and optimization,Linux Pressure Stall Information (PSI) by Example,https://unixism.net/2019/08/linux-pressure-stall-information-psi-by-example/
422,Lobsters,performance,Performance and optimization,A performance comparison of Judy to hash tables [2003],https://nothings.org/computer/judy/
423,Lobsters,performance,Performance and optimization,LWords value arrays sorting study,http://cr.openjdk.java.net/~skuksenko/valhalla/reports/sort/sort.html
424,Lobsters,performance,Performance and optimization,Collection of DTrace tools,https://github.com/brendangregg/dtrace-cloud-tools
425,Lobsters,performance,Performance and optimization,Avoid Premature Optimization,https://victorzhou.com/blog/avoid-premature-optimization/
426,Lobsters,performance,Performance and optimization,Left-recursive PEG grammars,https://medium.com/@gvanrossum_83706/left-recursive-peg-grammars-65dab3c580e1
427,Lobsters,performance,Performance and optimization,Should small Rust structs be passed by-copy or by-borrow?,https://www.forrestthewoods.com/blog/should-small-rust-structs-be-passed-by-copy-or-by-borrow/
428,Lobsters,performance,Performance and optimization,"Criterion.rs v0.3 - Custom Measurements, Profiling Hooks, Custom Test Framework, API Changes",https://bheisler.github.io/post/criterion-rs-0-3/
429,Lobsters,performance,Performance and optimization,Faster threshold queries with cache-sensitive scancount,https://lemire.me/blog/2019/08/16/faster-threshold-queries-with-cache-sensitive-scancount/
430,Lobsters,performance,Performance and optimization,How to Print Floating-Point Numbers Accurately,http://kurtstephens.com/files/p372-steele.pdf
431,Lobsters,performance,Performance and optimization,Code Size Optimization: GCC Compiler Flags,https://interrupt.memfault.com/blog/code-size-optimization-gcc-flags
432,Lobsters,performance,Performance and optimization,"libspng v0.5.0 - simple libpng alternative, up to 35% faster",https://libspng.org/
433,Lobsters,performance,Performance and optimization,Probabilistic Data Structure for Big Data Problems,https://www.se-radio.net/2019/02/se-radio-episode-358-probabilistic-data-structure-for-big-data-problems/
434,Lobsters,performance,Performance and optimization,Why const Doesn't Make C Code Faster,https://theartofmachinery.com/2019/08/12/c_const_isnt_for_performance.html
435,Lobsters,performance,Performance and optimization,Implications of pure and constant functions,https://lwn.net/Articles/285332/
436,Lobsters,performance,Performance and optimization,Tooling to skip/speed up CI steps?,/s/lvp1pi/tooling_skip_speed_up_ci_steps
437,Lobsters,performance,Performance and optimization,Introducing Rezolus,https://blog.twitter.com/engineering/en_us/topics/open-source/2019/introducing-rezolus.html
438,Lobsters,performance,Performance and optimization,"An Introduction to ""go tool trace""",https://www.youtube.com/watch?v=V74JnrGTwKA
439,Lobsters,performance,Performance and optimization,"Incremental Development is what, exactly?",http://tiny-giant-books.com/Entry1.html?EntryId=recUeZ90mxmOHAl9S
440,Lobsters,performance,Performance and optimization,Active Benchmarking,http://www.brendangregg.com/activebenchmarking.html
441,Lobsters,performance,Performance and optimization,Minimum Times Tend to Mislead When Benchmarking,https://tratt.net/laurie/blog/entries/minimum_times_tend_to_mislead_when_benchmarking.html
442,Lobsters,performance,Performance and optimization,Accidentally Quadratic,https://accidentallyquadratic.tumblr.com
443,Lobsters,performance,Performance and optimization,OpenTelemetry: Effective observability requires high-quality telemetry,https://opentelemetry.io
444,Lobsters,performance,Performance and optimization,Not just CPU: writing custom profilers for Python,https://pythonspeed.com/articles/custom-python-profiler/
445,Lobsters,performance,Performance and optimization,Austin: Python frame stack sampler for CPython,https://github.com/P403n1x87/austin
446,Lobsters,performance,Performance and optimization,High-performance input handling on the web,https://nolanlawson.com/2019/08/11/high-performance-input-handling-on-the-web/
447,Lobsters,performance,Performance and optimization,The Qthread Library,http://www.cs.sandia.gov/qthreads/
448,Lobsters,performance,Performance and optimization,Very fast JSON viewer for big files,https://viewer.dadroit.com
449,Lobsters,performance,Performance and optimization,Performance Wiggle Room,https://dthayerblog.wordpress.com/2019/08/08/performance-factor/
450,Lobsters,performance,Performance and optimization,Performance Matters,https://www.hillelwayne.com/post/performance-matters/
451,Lobsters,performance,Performance and optimization,Building petabyte-scale analytics with BigQuery and HLL,https://medium.com/permutive/petabyte-analytics-with-bigquery-hll-af0f7a70b66d
452,Lobsters,performance,Performance and optimization,OpenStreetMap PBF Perfomance Tricks,https://paulkernfeld.com/2019/08/05/osm-pbf-performance-tricks.html
453,Lobsters,performance,Performance and optimization,Haiku Activity Report: Performance Edition,https://www.haiku-os.org/blog/waddlesplash/2019-08-03_haiku_activity_report_july_2019/
454,Lobsters,performance,Performance and optimization,How I Got 2x Speedup with One Line of Code (2013),https://www.naftaliharris.com/blog/2x-speedup-with-one-line-of-code/
455,Lobsters,performance,Performance and optimization,Minify Your SVGs,https://victorzhou.com/blog/minify-svgs/
456,Lobsters,performance,Performance and optimization,Where’s your bottleneck? CPU time vs wallclock time,https://pythonspeed.com/articles/blocking-cpu-or-io/
457,Lobsters,performance,Performance and optimization,Osgood Performance Gains,https://dev.to/tlhunter/osgood-performance-gains-n59
458,Lobsters,performance,Performance and optimization,Announcing composable multi-threaded parallelism in Julia,https://julialang.org/blog/2019/07/multithreading
459,Lobsters,performance,Performance and optimization,RISC Is Fundamentally Unscalable,https://blackhole12.com/blog/risc-is-fundamentally-unscalable/
460,Lobsters,performance,Performance and optimization,Two Performance Aesthetics: Never Miss a Frame and Do Almost Nothing,http://thume.ca/2019/07/27/two-performance-aesthetics/
461,Lobsters,performance,Performance and optimization,Field Guide: Mitigating Risk While Transitioning Databases,https://blog.sentry.io/2019/07/25/field-guide-mitigating-risk-transitioning-databases
462,Lobsters,performance,Performance and optimization,Benchmarking: Do it with transparency or don't do it at all,https://www.ongres.com/blog/benchmarking-do-it-with-transparency/
463,Lobsters,performance,Performance and optimization,"Fast Software, the Best Software",https://craigmod.com/essays/fast_software/
464,Lobsters,performance,Performance and optimization,The Rust compiler is still getting faster,https://blog.mozilla.org/nnethercote/2019/07/25/the-rust-compiler-is-still-getting-faster/
465,Lobsters,performance,Performance and optimization,Faster XML stream processing in Go,https://eli.thegreenplace.net/2019/faster-xml-stream-processing-in-go/
466,Lobsters,performance,Performance and optimization,Automatic Index Recommendations in PostgreSQL using pg_qualstats and hypopg,https://www.percona.com/blog/2019/07/22/automatic-index-recommendations-in-postgresql-using-pg_qualstats-and-hypopg/
467,Lobsters,performance,Performance and optimization,When a rewrite isn’t: rebuilding Slack on the desktop,https://slack.engineering/rebuilding-slack-on-the-desktop-308d6fe94ae4
468,Lobsters,performance,Performance and optimization,Weekend Replication of the STOKE Superoptimizer,https://github.com/bollu/blaze/blob/master/notebooks/tutorial.ipynb
469,Lobsters,performance,Performance and optimization,The Legion Parallel Programming System,https://legion.stanford.edu/
470,Lobsters,performance,Performance and optimization,A2-class microSD cards offer no better performance for the Raspberry Pi,https://www.jeffgeerling.com/blog/2019/a2-class-microsd-cards-offer-no-better-performance-raspberry-pi
471,Lobsters,performance,Performance and optimization,Ara: A 1 GHz+ Scalable and Energy-Efficient RISC-V Vector Processor w/ Multi-Precision F.P. Support,https://arxiv.org/pdf/1906.00478.pdf
472,Lobsters,performance,Performance and optimization,"Speed is situational: two websites, two orders of magnitude",https://pythonspeed.com/articles/speed-is-situational/
473,Lobsters,performance,Performance and optimization,simdjson: Parsing gigabytes of JSON per second,https://github.com/lemire/simdjson
474,Lobsters,performance,Performance and optimization,BPF Performance Tools: Linux System and Application Observability,http://www.brendangregg.com/blog/2019-07-15/bpf-performance-tools-book.html
475,Lobsters,performance,Performance and optimization,Library to work with ebpf from Go,https://github.com/dropbox/goebpf
476,Lobsters,performance,Performance and optimization,Profiling code with scanlines,http://www.codercorner.com/CPUTime.htm
477,Lobsters,performance,Performance and optimization,"SMT Solvers, Integer Linear Programming",https://shapr.github.io/posts/2019-07-10-smt-solvers.html
478,Lobsters,performance,Performance and optimization,What a difference a JVM makes?,http://psy-lob-saw.blogspot.com/2018/01/what-difference-jvm-makes.html
479,Lobsters,performance,Performance and optimization,RaptorJIT+Studio: Analyzing the evolving C heap of a JIT compiler,https://github.com/lukego/blog/issues/20
480,Lobsters,performance,Performance and optimization,Fastest Way to Load Data Into PostgreSQL Using Python,https://hakibenita.com/fast-load-data-python-postgresql
481,Lobsters,performance,Performance and optimization,Why is my webpack build slow?,https://samsaccone.com/posts/why-is-my-webpack-build-slow.html
482,Lobsters,performance,Performance and optimization,Pruning the Search Space in Path-based Test Generation (2009),http://sebastien.bardin.free.fr/icst-09.pdf
483,Lobsters,performance,Performance and optimization,Justin.tv's Live Video Broadcasting Architecture,http://highscalability.com/blog/2010/3/16/justintvs-live-video-broadcasting-architecture.html
484,Lobsters,performance,Performance and optimization,ACO: A New Compiler Backend for RADV,https://lists.freedesktop.org/archives/mesa-dev/2019-July/221006.html
485,Lobsters,performance,Performance and optimization,Cramming a gaming GPU into your MacBook Pro,https://justin.searls.co/posts/gaming-with-a-mac-plus-egpu/
486,Lobsters,performance,Performance and optimization,Performance of Elixir's Access Behavior,https://stratus3d.com/blog/2019/06/29/performance-of-elixirs-access-behavior
487,Lobsters,performance,Performance and optimization,Speeding up tests on CircleCI for a Python Django project,https://www.brautaset.org/articles/2019/speed-up-circleci.html
488,Lobsters,performance,Performance and optimization,The convoy phenomenon,https://blog.acolyer.org/2019/07/01/the-convoy-phenomenon/
489,Lobsters,performance,Performance and optimization,"How we sped up random forest processing, lots of common performance patterns",http://cultureofdevelopment.com/blog/how-we-sped-up-random-forest-processing-lots-of-common-performance-patterns/
490,Lobsters,performance,Performance and optimization,The Secret of Good Electron Apps,https://jlongster.com/secret-of-good-electron-apps
491,Lobsters,performance,Performance and optimization,C++ Profiler For Games,https://github.com/bombomby/optick
492,Lobsters,performance,Performance and optimization,"fibs, lies, and benchmarks",https://wingolog.org/archives/2019/06/26/fibs-lies-and-benchmarks
493,Lobsters,performance,Performance and optimization,The cost of JavaScript in 2019,https://v8.dev/blog/cost-of-javascript-2019
494,Lobsters,performance,Performance and optimization,(BEAM) Data Types Memory Layout,http://beam-wisdoms.clau.se/en/latest/indepth-memory-layout.html
495,Lobsters,performance,Performance and optimization,"Dockerfile linter, validate inline bash, written in Haskell",https://github.com/hadolint/hadolint
496,Lobsters,performance,Performance and optimization,Avoiding instruction cache misses,https://pdziepak.github.io/2019/06/21/avoiding-icache-misses/
497,Lobsters,performance,Performance and optimization,Why is Ruby Slower on Mac? An Early Investigation,http://engineering.appfolio.com/appfolio-engineering/2019/5/20/why-is-ruby-slower-on-mac-an-early-investigation
498,Lobsters,performance,Performance and optimization,Bringing service workers to Google Search,https://web.dev/google-search-sw
499,Lobsters,performance,Performance and optimization,Wind-Powered Car Travels Downwind Faster Than the Wind (2010),https://www.wired.com/2010/06/downwind-faster-than-the-wind/
500,Lobsters,performance,Performance and optimization,What’s up with my branch on GPU?,https://aschrein.github.io/jekyll/update/2019/06/13/whatsup-with-my-branches-on-gpu.html
501,Lobsters,performance,Performance and optimization,What’s the Fastest Data Structure to Implement a Game Board in Elixir?,https://pragtob.wordpress.com/2019/06/17/comparing-the-performance-of-different-board-implementations-in-elixir/
502,Lobsters,performance,Performance and optimization,"Omega: flexible, scalable schedulers for large compute clusters",https://static.googleusercontent.com/media/research.google.com/en//pubs/archive/41684.pdf
503,Lobsters,performance,Performance and optimization,Adept - A blazing fast language for general purpose programming,https://github.com/IsaacShelton/Adept
504,Lobsters,performance,Performance and optimization,Preemption Is GC for Memory Reordering,http://www.pvk.ca/Blog/2019/01/09/preemption-is-gc-for-memory-reordering
505,Lobsters,performance,Performance and optimization,"Progressive Locks: fast, upgradable read/write locks",http://wtarreau.blogspot.com/2018/02/progressive-locks-fast-upgradable.html
506,Lobsters,performance,Performance and optimization,"Scalable Memory Reclamation for Multi-Core, Real-Time Systems",https://www2.seas.gwu.edu/~gparmer/publications/rtas18smr.pdf
507,Lobsters,performance,Performance and optimization,Performance speed limits,https://travisdowns.github.io/blog/2019/06/11/speed-limits.html
508,Lobsters,performance,Performance and optimization,Improve Serialization Performance in Django Rest Framework,https://hakibenita.com/django-rest-framework-slow
509,Lobsters,performance,Performance and optimization,Design and Analysis of Real-Time Systems: Static WCET Analysis (2013),https://embedded.cs.uni-saarland.de/lectures/realtimesystems/overviewWCETAnalysis.pdf
510,Lobsters,performance,Performance and optimization,Where is the memory going? Memory waste under Linux (2006),http://halobates.de/memorywaste.pdf
511,Lobsters,performance,Performance and optimization,"Battle testing data integrity verification with ZFS, Btrfs and mdadm+dm-integrity",http://www.unixsheikh.com/articles/battle-testing-data-integrity-verification-with-zfs-btrfs-and-mdadm-dm-integrity.html
512,Lobsters,performance,Performance and optimization,FlowPools: A Lock-Free Deterministic Concurrent Dataflow Abstraction (2012),https://infoscience.epfl.ch/record/181098/files/proofs.pdf
513,Lobsters,performance,Performance and optimization,ejabberd & Nintendo Switch NPNS,https://blog.process-one.net/ejabberd-nintendo-switch-npns/
514,Lobsters,performance,Performance and optimization,"Hydra Chronicles, Part I: Pixie Dust",https://www.brodieg.com/2019/05/17/pixie-dust/
515,Lobsters,performance,Performance and optimization,"TPL Dataflow in .Net Core, in Depth (Part 2/2)",https://www.blinkingcaret.com/2019/06/05/tpl-dataflow-in-net-core-in-depth-part-2/
516,Lobsters,performance,Performance and optimization,"Lease-based, utilitarian resource management on mobile devices",https://blog.acolyer.org/2019/05/31/lease-os/
517,Lobsters,performance,Performance and optimization,Profiling GNOME Shell,https://feaneron.com/2019/05/31/profiling-gnome-shell/
518,Lobsters,performance,Performance and optimization,Dive into BPF: a list of reading material,https://qmonnet.github.io/whirl-offload/2016/09/01/dive-into-bpf/
519,Lobsters,performance,Performance and optimization,Wood joint strength testing,https://woodgears.ca/joint_strength/
520,Lobsters,performance,Performance and optimization,SpaceX’s Raptor engine: comparing to other rocket engines,https://everydayastronaut.com/raptor-engine/
521,Lobsters,performance,Performance and optimization,Measuring Rails Overhead,http://engineering.appfolio.com/appfolio-engineering/2019/4/27/measuring-rails-overhead
522,Lobsters,performance,Performance and optimization,Beating up on qsort,https://travisdowns.github.io/blog/2019/05/22/sorting.html
523,Lobsters,performance,Performance and optimization,A Hardware Accelerator for Tracing Garbage Collection (2018),https://people.eecs.berkeley.edu/~krste/papers/maas-isca18-hwgc.pdf
524,Lobsters,performance,Performance and optimization,Some Btrfs vs Ext4 random-read/write performance observations,https://www.ctrl.blog/entry/btrfs-vs-ext4-performance.html
525,Lobsters,performance,Performance and optimization,Employing QUIC Protocol to Optimize Uber's App Performance,https://eng.uber.com/employing-quic-protocol/
526,Lobsters,performance,Performance and optimization,A Tale of Query Optimization,https://parallelthoughts.xyz/2019/05/a-tale-of-query-optimization/
527,Lobsters,performance,Performance and optimization,A new memory profiler for Linux from Nokia written in Rust,https://github.com/nokia/memory-profiler
528,Lobsters,performance,Performance and optimization,Measuring the system clock frequency using loops (Intel and ARM),https://lemire.me/blog/2019/05/19/measuring-the-system-clock-frequency-using-loops-intel-and-arm/
529,Lobsters,performance,Performance and optimization,Faster script loading with BinaryAST?,https://blog.cloudflare.com/binary-ast/
530,Lobsters,performance,Performance and optimization,Exploring new frontiers for Git push performance,https://devblogs.microsoft.com/devops/exploring-new-frontiers-for-git-push-performance/
531,Lobsters,performance,Performance and optimization,Automating Postgres Indexing with Dexter & HypoPG,https://headway.io/blog/automating-postgres-indexing-with-dexter-and-hypopg/
532,Lobsters,performance,Performance and optimization,"TPL Dataflow in .Net Core, in Depth - Part 1",https://www.blinkingcaret.com/2019/05/15/tpl-dataflow-in-net-core-in-depth-part-1/
533,Lobsters,performance,Performance and optimization,Parallel streaming of progressive images,https://blog.cloudflare.com/parallel-streaming-of-progressive-images/
534,Lobsters,performance,Performance and optimization,Faster arithmetic by flipping signs,https://nfrechette.github.io/2019/05/08/sign_flip_optimization/
535,Lobsters,performance,Performance and optimization,"Safe at Any Speed: Building a Performant, Safe, Maintainable Packet Processor",https://www.youtube.com/watch?v=BysBMdx9w6k
536,Lobsters,performance,Performance and optimization,Shenandoah GC in production: experience report,http://clojure-goes-fast.com/blog/shenandoah-in-production/
537,Lobsters,performance,Performance and optimization,Attempting to Decrease Compile Times in Unity,https://gamejolt.com/games/talesofkulplex/313193/devlog/tales-of-kulplex-devlog-6-attempting-to-decrease-compile-times-she9y7qf
538,Lobsters,performance,Performance and optimization,"Renaissance Suite, a benchmark suite for the JVM",https://renaissance.dev/
539,Lobsters,performance,Performance and optimization,Reader/Reader blocking in reader/writer locks,https://blog.nelhage.com/post/rwlock-contention/
540,Lobsters,performance,Performance and optimization,I/O Is Faster Than the CPU – Let’s Partition Resourcesand Eliminate (Most) OS Abstractions,https://penberg.org/parakernel-hotos19.pdf
541,Lobsters,performance,Performance and optimization,Write faster C extensions for Python with Cython,https://opensource.com/article/19/5/python-cython
542,Lobsters,performance,Performance and optimization,Why are my Go executable files so large?,https://www.cockroachlabs.com/blog/go-file-size/
543,Lobsters,performance,Performance and optimization,When setting an environment variable gives you a 40x speedup,http://news.sherlock.stanford.edu/posts/when-setting-an-environment-variable-gives-you-a-40-x-speedup
544,Lobsters,performance,Performance and optimization,Choosing a faster JSON library for Python,https://pythonspeed.com/articles/faster-json-library/
545,Lobsters,performance,Performance and optimization,AES-NI (.NET) - Outperforming C and OpenSSL,https://ndportmann.com/aes-ni-outperforming-c-and-openssl/
546,Lobsters,performance,Performance and optimization,Packets-per-second limits in EC2,https://stressgrid.com/blog/pps_limits_in_ec2/
547,Lobsters,performance,Performance and optimization,Fun With Saturating Arithmetic (2010),https://blog.regehr.org/archives/277
548,Lobsters,performance,Performance and optimization,The world's smallest and most secure HAProxy Docker image,https://github.com/ricardbejarano/haproxy
549,Lobsters,performance,Performance and optimization,O(n^2) in CreateProcess,https://randomascii.wordpress.com/2019/04/21/on2-in-createprocess/
550,Lobsters,performance,Performance and optimization,qgrep internals,https://zeux.io/2019/04/20/qgrep-internals/
551,Lobsters,performance,Performance and optimization,tinySelf performance gains 2019/4,https://www.notion.so/tinySelf-performance-gains-2019-4-ef0d6334f7fb4256a3f21cb90bd5db37
552,Lobsters,performance,Performance and optimization,Go memory ballast: How I learnt to stop worrying and love the heap,https://blog.twitch.tv/go-memory-ballast-how-i-learnt-to-stop-worrying-and-love-the-heap-26c2462549a2
553,Lobsters,performance,Performance and optimization,How Uber Halved Our Metrics Ingestion Latency by (Briefly) Forking the Go Compiler,https://eng.uber.com/optimizing-m3/
554,Lobsters,performance,Performance and optimization,The physics of knots,http://www.lightandmatter.com/article/knots.html
555,Lobsters,performance,Performance and optimization,Making the obvious code fast,https://jackmott.github.io//programming/2016/07/22/making-obvious-fast.html
556,Lobsters,performance,Performance and optimization,Fast compilers for fast programs,https://crawshaw.io/blog/fast-compilers
557,Lobsters,performance,Performance and optimization,Improving Key Expiration in Redis,https://blog.twitter.com/engineering/en_us/topics/infrastructure/2019/improving-key-expiration-in-redis.html
558,Lobsters,performance,Performance and optimization,Why are unrolled loops faster?,https://lemire.me/blog/2019/04/12/why-are-unrolled-loops-faster/
559,Lobsters,performance,Performance and optimization,Linux perf little book,https://github.com/NanXiao/perf-little-book
560,Lobsters,performance,Performance and optimization,Bulk Processing with BULK COLLECT and FORALL (2012),https://blogs.oracle.com/oraclemagazine/bulk-processing-with-bulk-collect-and-forall
561,Lobsters,performance,Performance and optimization,Efficient and Safe Execution of User-Level Code in the Kernel (2005),http://www.fsl.cs.sunysb.edu/docs/kbcc-ngs05/main.html
562,Lobsters,performance,Performance and optimization,MittOS: Supporting Millisecond Tail Tolerance with Fast Rejecting SLO-Aware OS Interface (2017),https://ucare.cs.uchicago.edu/pdf/sosp17-mittos.pdf
563,Lobsters,performance,Performance and optimization,DirectX-Specs,https://microsoft.github.io/DirectX-Specs/
564,Lobsters,performance,Performance and optimization,Energy Efficiency across Programming Languages,http://greenlab.di.uminho.pt/wp-content/uploads/2017/09/paperSLE.pdf
565,Lobsters,performance,Performance and optimization,Rectangles All The Way Down,https://dyalog.tv/Dyalog18/?v=mK2WUDIY4hk
566,Lobsters,performance,Performance and optimization,Fast directory listing on Linux,https://github.com/romkatv/gitstatus/blob/master/docs/listdir.md
567,Lobsters,performance,Performance and optimization,DIMMer: A Case of Turning Off DIMM's in Clouds,https://zxr.io/research/sion2014socc.pdf
568,Lobsters,performance,Performance and optimization,MLPerf,https://mlperf.org/
569,Lobsters,performance,Performance and optimization,PostgreSQL Performance on Raspberry Pi 3B,https://blog.rustprooflabs.com/2019/04/postgrseql-pgbench-raspberry-pi
570,Lobsters,performance,Performance and optimization,How bad are small triangles on GPU and why?,https://www.g-truc.net/post-0662.html
571,Lobsters,performance,Performance and optimization,Compiler Performance and LLVM,http://pling.jondgoodwin.com/post/compiler-performance/
572,Lobsters,performance,Performance and optimization,Parallel computation in Python with Dask,https://opensource.com/article/19/4/parallel-computation-python-dask
573,Lobsters,performance,Performance and optimization,Crossing the Rust FFI frontier with Protocol Buffers,https://hacks.mozilla.org/2019/04/crossing-the-rust-ffi-frontier-with-protocol-buffers/
574,Lobsters,performance,Performance and optimization,Why I Replaced Disqus and You Should Too,https://victorzhou.com/blog/replacing-disqus/
575,Lobsters,performance,Performance and optimization,A Local LRU Cache,https://orbifold.xyz/local-lru.html
576,Lobsters,performance,Performance and optimization,10x faster implementation of Git status,https://github.com/romkatv/gitstatus
577,Lobsters,performance,Performance and optimization,Adding Brainfuck Monitoring to Scout APM,https://scoutapp.com/blog/announcing-brainfuck-monitoring-for-scout-apm
578,Lobsters,performance,Performance and optimization,Race to Idle: New Algorithms for Speed Scaling with a Sleep State (2012),https://www.researchgate.net/publication/220779726_Race_to_Idle_New_Algorithms_for_Speed_Scaling_with_a_Sleep_State
579,Lobsters,performance,Performance and optimization,Lost in translation: Exposing hidden compiler optimization opportunities,https://arxiv.org/pdf/1903.11397
580,Lobsters,performance,Performance and optimization,SLEEF Vectorized Math Library,https://sleef.org/
581,Lobsters,performance,Performance and optimization,LVM Linear vs Striped Logical Volumes,https://sysadmincasts.com/episodes/27-lvm-linear-vs-striped-logical-volumes
582,Lobsters,performance,Performance and optimization,Behind the burst compiler,https://xoofx.com/blog/2019/03/28/behind-the-burst-compiler/
583,Lobsters,performance,Performance and optimization,Why should I use a Reverse Proxy if Node.js is Production-Ready?,https://medium.com/intrinsic/why-should-i-use-a-reverse-proxy-if-node-js-is-production-ready-5a079408b2ca
584,Lobsters,performance,Performance and optimization,Introducing the JetStream 2 Benchmark Suite,https://webkit.org/blog/8685/introducing-the-jetstream-2-benchmark-suite/
585,Lobsters,performance,Performance and optimization,Overwatch Gameplay Architecture and Netcode,https://www.youtube.com/watch?v=W3aieHjyNvw
586,Lobsters,performance,Performance and optimization,Proposal: Lobste.rs performance analysis with Nate Berkopec & Scout APM,/s/5hshvd/proposal_lobste_rs_performance_analysis
587,Lobsters,performance,Performance and optimization,"Websites that Keep Loading, and Loading and Loading",https://dev.to/dougsillars/websites-that-keep-loading-and-loading-and-loading-4a2p
588,Lobsters,performance,Performance and optimization,Deep dive into serverless AWS automation using VS Code,http://tiny-giant-books.com/Entry1.html?EntryId=recak5uVmYH6H7cLV&ref=lob
589,Lobsters,performance,Performance and optimization,What makes LLD so fast?,https://fosdem.org/2019/schedule/event/llvm_lld/attachments/slides/3320/export/events/attachments/llvm_lld/slides/3320/WhatMakesLLDSoFastPresenterNotes.pdf
590,Lobsters,performance,Performance and optimization,Marvel’s Spider-Man: A Technical Postmortem,https://www.dropbox.com/s/cngcqlvb8zoqxq5/ElanRuskin_gdc2019_marvels_spider-man_preliminaryexport.pdf?dl=0
591,Lobsters,performance,Performance and optimization,"Why the default, WSL terminal is so fast and other commentary about low-level API's",https://github.com/Microsoft/console/issues/327
592,Lobsters,performance,Performance and optimization,Tuning performance is harder than debugging bugs,https://nanxiao.me/en/tuning-performance-is-harder-than-debugging-bugs/
593,Lobsters,performance,Performance and optimization,How do you compute the midpoint of an interval with floating point?,https://hal.archives-ouvertes.fr/hal-00576641
594,Lobsters,performance,Performance and optimization,hyperfine - a shell benchmarking utility,https://cli.fan/posts/hyperfine/
595,Lobsters,performance,Performance and optimization,Falcon: A Graph Manipulation Language for Heterogenous Systems (2016),http://www.ece.iisc.ernet.in/~divsymposium/EECS2016/slides-2016-04-25/EECS2016_paper_24.pdf
596,Lobsters,performance,Performance and optimization,Computer Latency at a Human Scale,https://www.prowesscorp.com/computer-latency-at-a-human-scale/
597,Lobsters,performance,Performance and optimization,The fastest conventional random number generator that can pass Big Crush?,https://lemire.me/blog/2019/03/19/the-fastest-conventional-random-number-generator-that-can-pass-big-crush/
598,Lobsters,performance,Performance and optimization,Implementing a NES Emulator in Rust,http://www.michaelburge.us/2019/03/18/nes-design.html
599,Lobsters,performance,Performance and optimization,Docker might be eating your batteries,https://www.beatworm.co.uk/blog/thinkpad/docker-ate-my-battery
600,Lobsters,performance,Performance and optimization,The world's smallest and most secure NGINX Docker image,https://github.com/ricardbejarano/nginx
601,Lobsters,performance,Performance and optimization,Presenting XXH3,http://fastcompression.blogspot.com/2019/03/presenting-xxh3.html
602,Lobsters,performance,Performance and optimization,Easy flamegraphs without Perl or pipes,https://github.com/ferrous-systems/flamegraph
603,Lobsters,performance,Performance and optimization,Implementing a static stack usage analysis tool,https://blog.japaric.io/stack-analysis/
604,Lobsters,performance,Performance and optimization,How we made Haskell search strings as fast as Rust,https://tech.channable.com/posts/2019-03-13-how-we-made-haskell-search-strings-as-fast-as-rust.html
605,Lobsters,performance,Performance and optimization,Varnish: Notes from the Architect (2006),https://varnish-cache.org/trac/wiki/ArchitectNotes
606,Lobsters,performance,Performance and optimization,Monoids and Graph Processing,https://github.com/frankmcsherry/blog/blob/master/posts/2019-02-09.md
607,Lobsters,performance,Performance and optimization,stutter - A speed reading browser extension for Firefox and Chrome,https://github.com/jamestomasino/stutter
608,Lobsters,performance,Performance and optimization,ARM processors are nearing performance parity with high-end desktop processors,https://reveried.com/article/arm-processors-nearing-performance-parity-with-x86
609,Lobsters,performance,Performance and optimization,On java's secure random,https://darakian.github.io/2019/02/17/on-java-securerandom.html
610,Lobsters,performance,Performance and optimization,Achieving 100k connections per second with Elixir,https://stressgrid.com/blog/100k_cps_with_elixir/
611,Lobsters,performance,Performance and optimization,What is RCU? (2007),http://www2.rdrop.com/users/paulmck/RCU/whatisRCU.html
612,Lobsters,performance,Performance and optimization,Memory Models: A Case For Rethinking Parallel Languages and Hardware,https://cacm.acm.org/magazines/2010/8/96610-memory-models-a-case-for-rethinking-parallel-languages-and-hardware/fulltext
613,Lobsters,performance,Performance and optimization,Pydis: A Redis clone in python 3,https://github.com/boramalper/pydis
614,Lobsters,performance,Performance and optimization,Is C# a low-level language?,http://www.mattwarren.org/2019/03/01/Is-CSharp-a-low-level-language/
615,Lobsters,performance,Performance and optimization,Hyperscan: A Fast Multi-pattern Regex Matcher for Modern CPUs,https://branchfree.org/2019/02/28/paper-hyperscan-a-fast-multi-pattern-regex-matcher-for-modern-cpus/
616,Lobsters,performance,Performance and optimization,Light-weight Contexts: An OS Abstraction for Safety and Performance (2016),https://people.mpi-sws.org/~druschel/publications/osdi16.pdf
617,Lobsters,performance,Performance and optimization,STABILIZER: Statistically Sound Performance Evaluation,https://people.cs.umass.edu/~emery/pubs/stabilizer-asplos13.pdf
618,Lobsters,performance,Performance and optimization,The CPython Bytecode Compiler is Dumb,https://nullprogram.com/blog/2019/02/24/
619,Lobsters,performance,Performance and optimization,How annual revenue increased by $50 million using Online Experiments – Methods and tricks | Root Shell # _,http://blog.rootshell.ir/2019/02/how-to-increase-annual-revenue-by-50-million-using-online-experiments-methods-and-tricks/
620,Lobsters,performance,Performance and optimization,Generating Combinations: Gosper's Hack,http://andy.kitchen/combinations.html
621,Lobsters,performance,Performance and optimization,"""Illegal"" Lego Builds",http://bramlambrecht.com/tmp/jamieberard-brickstress-bf06.pdf
622,Lobsters,performance,Performance and optimization,Properly Size Images for the Web,https://victorzhou.com/blog/properly-size-images/
623,Lobsters,performance,Performance and optimization,More fun with fast remainders when the divisor is a constant,https://lemire.me/blog/2019/02/20/more-fun-with-fast-remainders-when-the-divisor-is-a-constant/
624,Lobsters,performance,Performance and optimization,Faster vlan(4) forwarding?,http://www.grenadille.net/post/2019/02/18/Faster-vlan%284%29-forwarding
625,Lobsters,performance,Performance and optimization,Incremental flattening for nested data parallelism on the GPU,https://futhark-lang.org/blog/2019-02-18-futhark-at-ppopp.html
626,Lobsters,performance,Performance and optimization,Flavors of SIMD,https://zeuxcg.org/2019/02/17/flavors-of-simd/
627,Lobsters,performance,Performance and optimization,Threadless mode in Mitogen 0.3,https://sweetness.hmmz.org/2019-02-16-mitogen-threadless.html
628,Lobsters,performance,Performance and optimization,Farewell to fsync(): 10× faster database tests with Docker,https://pythonspeed.com/articles/faster-db-tests/
629,Lobsters,performance,Performance and optimization,"Performance testing memcached's extstore - RAM, SSDs and Octane",https://memcached.org/blog/nvm-multidisk/
630,Lobsters,performance,Performance and optimization,The Curious Case of BEAM CPU Usage,https://stressgrid.com/blog/beam_cpu_usage/
631,Lobsters,performance,Performance and optimization,A survey on dynamic and stochastic vehicle routing problems (2015),https://hal.inria.fr/hal-01224562/document
632,Lobsters,performance,Performance and optimization,"Building a modern carousel with CSS scroll snap, smooth scrolling, and pinch-zoom",https://nolanlawson.com/2019/02/10/building-a-modern-carousel-with-css-scroll-snap-smooth-scrolling-and-pinch-zoom/
633,Lobsters,performance,Performance and optimization,Measuring the Haskell Gap (2013),http://www.leafpetersen.com/leaf/publications/ifl2013/haskell-gap.pdf
634,Lobsters,performance,Performance and optimization,John Nagle on Tricks QNX RTOS Uses to Outperform Other Microkernels,https://news.ycombinator.com/item?id=9872640
635,Lobsters,performance,Performance and optimization,Faster remainders when the divisor is a constant: beating compilers and libdivide,https://lemire.me/blog/2019/02/08/faster-remainders-when-the-divisor-is-a-constant-beating-compilers-and-libdivide/
636,Lobsters,performance,Performance and optimization,Futhark 0.9.1 released - now with CUDA backend,https://futhark-lang.org/blog/2019-02-08-futhark-0.9.1-released.html
637,Lobsters,performance,Performance and optimization,Benchmarking Go vs Node vs Elixir,https://stressgrid.com/blog/benchmarking_go_vs_node_vs_elixir/
638,Lobsters,performance,Performance and optimization,"What Happened to the 100,000-Hour LED Bulbs?",https://hackaday.com/2019/02/05/what-happened-to-the-100000-hour-led-bulbs/
639,Lobsters,performance,Performance and optimization,ASP.NET Core: Saturating 10GbE at 7+ million request/s,https://www.ageofascent.com/2019/02/04/asp-net-core-saturating-10gbe-at-7-million-requests-per-second/
640,Lobsters,performance,Performance and optimization,Benchmark of major hash maps implementations,https://tessil.github.io/2016/08/29/benchmark-hopscotch-map.html
641,Lobsters,performance,Performance and optimization,"When your CI is taking forever on AWS EC2, it might be EBS",https://pythonspeed.com/articles/slow-ci-aws-ec2/
642,Lobsters,performance,Performance and optimization,Flat Design vs Traditional Design: Comparative Experimental Study,https://www.researchgate.net/publication/281628009_Flat_Design_vs_Traditional_Design_Comparative_Experimental_Study
643,Lobsters,performance,Performance and optimization,High-Performance in Python with Zero-Copy and the Buffer Protocol,https://julien.danjou.info/high-performance-in-python-with-zero-copy-and-the-buffer-protocol/
644,Lobsters,performance,Performance and optimization,Benchmarks of Cache-Friendly Data Structures in C++,https://tylerayoung.com/2019/01/29/benchmarks-of-cache-friendly-data-structures-in-c/
645,Lobsters,performance,Performance and optimization,Lock-free Rust: Crossbeam in 2019,https://stjepang.github.io/2019/01/29/lock-free-rust-crossbeam-in-2019.html
646,Lobsters,performance,Performance and optimization,Faster Population Counts Using AVX2 Instructions,https://arxiv.org/pdf/1611.07612
647,Lobsters,performance,Performance and optimization,A New Golden Age for Computer Architecture,https://cacm.acm.org/magazines/2019/2/234352-a-new-golden-age-for-computer-architecture/fulltext
648,Lobsters,performance,Performance and optimization,Regrettable Code,https://medium.com/@jeremy.noring/regrettable-code-episode-1-767dc1b92bd1
649,Lobsters,performance,Performance and optimization,"How we fine-tuned HAProxy to achieve 2,000,000 concurrent SSL connections",https://medium.freecodecamp.org/how-we-fine-tuned-haproxy-to-achieve-2-000-000-concurrent-ssl-connections-d017e61a4d27
650,Lobsters,performance,Performance and optimization,Read Nmon Code To Learn Analyzing Linux Performance,https://github.com/NanXiao/read-nmon-code-to-learn-analyzing-linux-performance
651,Lobsters,performance,Performance and optimization,"Fast 4x4 Matrix Inverse with SSE SIMD, Explained",https://lxjk.github.io/2017/09/03/Fast-4x4-Matrix-Inverse-with-SSE-SIMD-Explained.html
652,Lobsters,performance,Performance and optimization,Stuck with slow tests? Speed up your feedback loop,https://pythonspeed.com/articles/slow-tests-fast-feedback/
653,Lobsters,performance,Performance and optimization,Booting Linux faster,https://opensource.com/article/19/1/booting-linux-faster
654,Lobsters,performance,Performance and optimization,The Most Powerful Mac is 6yrs Old and Not Sold by Apple,https://motherboard.vice.com/en_us/article/8xkq8k/mac-pro-upgrade-community
655,Lobsters,performance,Performance and optimization,High-Performance Libraries and Tools for HPC,https://www.cs.fsu.edu/~engelen/courses/HPC/Tools.pdf
656,Lobsters,performance,Performance and optimization,Is C++ fast?,https://zeuxcg.org/2019/01/17/is-c-fast/
657,Lobsters,performance,Performance and optimization,"C++ Compilation: Lies, Damned Lies, and Statistics",http://virtuallyrandom.com/c-compilation-lies-damned-lies-and-statistics/
658,Lobsters,performance,Performance and optimization,HPC is Dying and MPI is Killing It,https://www.dursi.ca/post/hpc-is-dying-and-mpi-is-killing-it.html
659,Lobsters,performance,Performance and optimization,The Curious Case of the 99.9% Latency Hike,https://mahdytech.com/2019/01/13/curious-case-999-latency-hike/
660,Lobsters,performance,Performance and optimization,uftrace: Function graph tracer for user-space,https://github.com/namhyung/uftrace
661,Lobsters,performance,Performance and optimization,Maybe you don't need Rust and WASM to speed up your JS,https://mrale.ph/blog/2018/02/03/maybe-you-dont-need-rust-to-speed-up-your-js.html
662,Lobsters,performance,Performance and optimization,Compiler Transformations for High-Performance Computing (1994),https://engineering.purdue.edu/~eigenman/ECE663/Handouts/bacon-compiling4hpc.pdf
663,Lobsters,performance,Performance and optimization,How I Doubled My Internet Speed with OpenWRT,https://msol.io/blog/tech/how-i-doubled-my-internet-speed-with-openwrt/
664,Lobsters,performance,Performance and optimization,What I've Learned About Optimizing Python,https://gregoryszorc.com/blog/2019/01/10/what-i've-learned-about-optimizing-python/
665,Lobsters,performance,Performance and optimization,Kiwi: High-Level Synthesis for Accelerating Scientific Computation,https://www.cl.cam.ac.uk/research/srg/han/hprls/orangepath/kiwic.html
666,Lobsters,performance,Performance and optimization,A VLSI Analog Computer / Math Co-processor for a Digital Computer,http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.113.3740&rep=rep1&type=pdf
667,Lobsters,performance,Performance and optimization,Is ARM Hungry Enough to Eat Intel's Favorite Pie?,http://blosc.org/posts/arm-memory-walls-followup/
668,Lobsters,performance,Performance and optimization,Parallel Algorithms for Depth-First Search (1991),https://repository.upenn.edu/cgi/viewcontent.cgi?article=1444&context=cis_reports
669,Lobsters,performance,Performance and optimization,C++ Headers are Expensive,http://virtuallyrandom.com/c-headers-are-expensive/
670,Lobsters,performance,Performance and optimization,"Whole, Program Compilation in MLton (2006)",http://www.mlton.org/References.attachments/060916-mlton.pdf
671,Lobsters,performance,Performance and optimization,Rust at speed — building a fast concurrent database,https://www.youtube.com/watch?v=s19G6n0UjsM
672,Lobsters,performance,Performance and optimization,uthash: a hash table for C structures,https://troydhanson.github.io/uthash/
673,Lobsters,performance,Performance and optimization,PyPy for low-latency systems,https://morepypy.blogspot.com/2019/01/pypy-for-low-latency-systems.html
674,Lobsters,performance,Performance and optimization,"C++, C# and Unity",http://lucasmeijer.com/posts/cpp_unity/
675,Lobsters,performance,Performance and optimization,Even more fun with building and benchmarking Firefox with GCC and Clang,http://hubicka.blogspot.com/2018/12/even-more-fun-with-building-and.html
676,Lobsters,performance,Performance and optimization,Metaprogramming-Enabled Parallel Execution of Apparently Sequential C++ Code,http://www.jlifflander.com/papers/meta-espm2016.pdf
677,Lobsters,performance,Performance and optimization,A Rusty Advent of Code: My AOC Experience with the Rust Community,https://cprimozic.net/blog/a-rusty-aoc/
678,Lobsters,performance,Performance and optimization,DSMR: A Parallel Algorithm for Single-Source Shortest Path Problem (2016),http://iss.ices.utexas.edu/Publications/Papers/ICS2016.pdf
679,Lobsters,performance,Performance and optimization,Pessimism about parallelism,http://esr.ibiblio.org/?p=8223
680,Lobsters,performance,Performance and optimization,Quantifying the Performance of Garbage Collection vs. Explicit Memory Management,https://people.cs.umass.edu/~emery/pubs/gcvsmalloc.pdf
681,Lobsters,performance,Performance and optimization,Fibonacci Algorithms in Elixir Part 2,https://stratus3d.com/blog/2018/12/24/fibonacci-algorithms-in-elixir-part-2
682,Lobsters,performance,Performance and optimization,Copying someone else's performance tweak,https://dev.to/notriddle/copying-someone-elses-performance-tweak-5g5h
683,Lobsters,performance,Performance and optimization,Engineering a Sort Function [1993],http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.14.8162&rep=rep1&type=pdf
684,Lobsters,performance,Performance and optimization,Reorganizing Website Architecture for HTTP/2 and Beyond,https://www.slideshare.net/kazuho/reorganizing-website-architecture-for-http2-and-beyond
685,Lobsters,performance,Performance and optimization,Porting Synapse to Python 3,https://matrix.org/blog/2018/12/21/porting-synapse-to-python-3/
686,Lobsters,performance,Performance and optimization,War Story – The Mystery Of The Very Long GC Pauses in .NET Windows Service,http://tooslowexception.com/scenario-mystery-of-the-very-long-gc-pauses-in-net-windows-service/
687,Lobsters,performance,Performance and optimization,Parallel Programming in Futhark,https://futhark-book.readthedocs.io/en/latest/
688,Lobsters,performance,Performance and optimization,Firefox 64 built with GCC and Clang,http://hubicka.blogspot.com/2018/12/firefox-64-built-with-gcc-and-clang.html
689,Lobsters,performance,Performance and optimization,Haskell compilation benchmark,https://qbaylogic.github.io/benchmark-compilation/
690,Lobsters,performance,Performance and optimization,How to Reduce Memory Usage by Tuning Gemfile,https://www.gregnavis.com/articles/how-to-reduce-memory-usage-by-tuning-gemfile.html
691,Lobsters,performance,Performance and optimization,Secure Service Proxy: A CoAP(s) Intermediary for a Securer and Smarter Web of Things,https://biblio.ugent.be/publication/8531255/file/8531256.pdf
692,Lobsters,performance,Performance and optimization,Anti-convoy locks in Windows Server 2003 SP1 and Windows Vista (2006),http://joeduffyblog.com/2006/12/14/anticonvoy-locks-in-windows-server-2003-sp1-and-windows-vista/
693,Lobsters,performance,Performance and optimization,When Your Profiler Lies,https://randomascii.wordpress.com/2018/12/09/when-your-profiler-lies/
694,Lobsters,performance,Performance and optimization,PHP was never meant to die,https://blog.spiralscout.com/php-was-never-meant-to-die-830de87915ee
695,Lobsters,performance,Performance and optimization,Stream VByte: Faster Byte-Oriented Integer Compression (2017),https://arxiv.org/pdf/1709.08990.pdf
696,Lobsters,performance,Performance and optimization,Secure Virtualization of Latency-Constrained Systems (2015),http://www.qucosa.de/fileadmin/data/qucosa/documents/16417/main-pdfA2b.pdf
697,Lobsters,performance,Performance and optimization,Roaring Bitmaps: Implementation of an Optimized Software Library (2017),https://arxiv.org/pdf/1709.07821
698,Lobsters,performance,Performance and optimization,Bicubic Filtering in Fewer Taps,http://vec3.ca/bicubic-filtering-in-fewer-taps/
699,Lobsters,performance,Performance and optimization,The MuQSS CPU scheduler (2017),https://lwn.net/Articles/720227/
700,Lobsters,performance,Performance and optimization,A Highly Productive Implementation of an Out-of-Order Processor Generator,https://www2.eecs.berkeley.edu/Pubs/TechRpts/2018/EECS-2018-151.pdf
701,Lobsters,performance,Performance and optimization,How to optimize C and C++ code in 2018,https://medium.com/@aka.rider/how-to-optimize-c-and-c-code-in-2018-bd4f90a72c2b
702,Lobsters,performance,Performance and optimization,The Baseline Costs of JavaScript Frameworks,https://blog.uncommon.is/the-baseline-costs-of-javascript-frameworks-f768e2865d4a
703,Lobsters,performance,Performance and optimization,Adventures in Cgo Performance,https://www.youtube.com/watch?v=71ggzBeHdmA
704,Lobsters,performance,Performance and optimization,Power Profiling Overview,https://developer.mozilla.org/en-US/docs/Mozilla/Performance/Power_profiling_overview
705,Lobsters,performance,Performance and optimization,BLOB Deduplication in eXist-db,https://blog.adamretter.org.uk/blob-deduplication/
706,Lobsters,performance,Performance and optimization,42 Years of Microprocessor Trend Data,https://www.karlrupp.net/2018/02/42-years-of-microprocessor-trend-data/
707,Lobsters,performance,Performance and optimization,Fearless Low-Latency Audio Synthesis,https://synthesize.rs/nov-2018-talk
708,Lobsters,performance,Performance and optimization,Slow Software,https://www.inkandswitch.com/slow-software.html
709,Lobsters,performance,Performance and optimization,"Zeit 2.0, and building smaller Python Docker images",https://simonwillison.net/2018/Nov/19/smaller-python-docker-images/
710,Lobsters,performance,Performance and optimization,Kore Benchmarks,https://blog.kore.io/posts/benchmarks
711,Lobsters,performance,Performance and optimization,"How much bandwidth does [Intel's] L2 have to give, anyway?","https://github.com/travisdowns/uarch-bench/wiki/How-much-bandwidth-does-the-L2-have-to-give,-anyway%3F"
712,Lobsters,performance,Performance and optimization,Fibers are the Right Solution,https://www.codeotaku.com/journal/2018-11/fibers-are-the-right-solution/index
713,Lobsters,performance,Performance and optimization,Some thoughts on Clojure performance (2012),https://martintrojer.github.io/clojure/2012/02/18/some-thoughts-on-clojure-performance
714,Lobsters,performance,Performance and optimization,"Scrolling the main document is better for performance, accessibility, and usability",https://nolanlawson.com/2018/11/18/scrolling-the-main-document-is-better-for-performance-accessibility-and-usability/
715,Lobsters,performance,Performance and optimization,"Porting FlatBuffers to Rust (Rust Bay Area - November 13th, 2018)",https://www.youtube.com/watch?v=YsiQDX20lXI
716,Lobsters,performance,Performance and optimization,The Birthday Paradox (and Concurrently Indexing in Elasticsearch),https://www.elastic.co/blog/the-birthday-paradox-and-concurrently-indexing-in-elasticsearch
717,Lobsters,performance,Performance and optimization,Introducing PMDK into PostgreSQL,https://www.pgcon.org/2018/schedule/attachments/507_PGCon2018_Introducing_PMDK_into_PostgreSQL.pdf
718,Lobsters,performance,Performance and optimization,What is acceptable for -ffast-math? [2001],https://gcc.gnu.org/ml/gcc/2001-07/msg02150.html
719,Lobsters,performance,Performance and optimization,"Less Snake Oil, More Context",https://dassur.ma/things/less-snakeoil/
720,Lobsters,performance,Performance and optimization,Taking Out the Garbage,https://ptomato.wordpress.com/2018/11/06/taking-out-the-garbage/
721,Lobsters,performance,Performance and optimization,How to Make LISP Go Faster Than C (2006),http://www.iaeng.org/IJCS/issues_v32/issue_4/IJCS_32_4_19.pdf
722,Lobsters,performance,Performance and optimization,How to speed up the Rust compiler in 2018: NLL edition,https://blog.mozilla.org/nnethercote/2018/11/06/how-to-speed-up-the-rust-compiler-in-2018-nll-edition/
723,Lobsters,performance,Performance and optimization,Benford's law,https://jacob.jkrall.net/benfords-law
724,Lobsters,performance,Performance and optimization,"Safe, Parallel Programming in Ada with Language Extensions (2014)",https://www.cister.isep.ipp.pt/docs/safe_parallel_programming_in_ada_with_language_extensions/1030/attach.pdf
725,Lobsters,performance,Performance and optimization,Disabling Intel Hyper-Threading Technology on Amazon Linux (2017),https://aws.amazon.com/blogs/compute/disabling-intel-hyper-threading-technology-on-amazon-linux/
726,Lobsters,performance,Performance and optimization,"A minimal, fast alternative to 'du -sh'",https://github.com/sharkdp/dup
727,Lobsters,performance,Performance and optimization,Quality and effort,https://seths.blog/2018/11/quality-and-effort/
728,Lobsters,performance,Performance and optimization,Case study: analyzing the Walmart site performance,https://iamakulov.com/notes/walmart/
729,Lobsters,performance,Performance and optimization,Hardware Acceleration for Unstructured Big Data and Natural Language Processing,https://deepblue.lib.umich.edu/bitstream/handle/2027.42/116712/prateekt_1.pdf?sequence=1&isAllowed=y
730,Lobsters,performance,Performance and optimization,DragonFlyBSD: performance,https://www.dragonflybsd.org/performance
731,Lobsters,performance,Performance and optimization,BOLT: A Practical Binary Optimizer for Data Centers and Beyond,https://arxiv.org/pdf/1807.06735.pdf
732,Lobsters,performance,Performance and optimization,Cache-Oblivious Algorithms and Data Structures (2002),http://erikdemaine.org/papers/BRICS2002/paper.pdf
733,Lobsters,performance,Performance and optimization,Making Windows Slower Part 2: Process Creation,https://randomascii.wordpress.com/2018/10/15/making-windows-slower-part-2-process-creation/
734,Lobsters,performance,Performance and optimization,GPU LSM: A Dynamic Dictionary Data Structure for the GPU,https://arxiv.org/pdf/1707.05354
735,Lobsters,performance,Performance and optimization,SDSL - Succinct Data Structure Library,https://github.com/simongog/sdsl-lite
736,Lobsters,performance,Performance and optimization,BεtrFS: The Bε-tree File System,http://www.betrfs.org/
737,Lobsters,performance,Performance and optimization,A Great Old-Timey Game Programming Hack,http://blog.moertel.com/posts/2013-12-14-great-old-timey-game-programming-hack.html
738,Lobsters,performance,Performance and optimization,"Latency, Throughput, and Port Usage Information for Instructions on Recent Intel Microarchitectures",http://uops.info/
739,Lobsters,performance,Performance and optimization,Making Linux TCP Fast,https://netdevconf.org/1.2/papers/bbr-netdev-1.2.new.new.pdf
740,Lobsters,performance,Performance and optimization,"Noria: dynamic, partially-stateful data-flow for high-performance web applications",https://www.usenix.org/conference/osdi18/presentation/gjengset
741,Lobsters,performance,Performance and optimization,IPCC special report on the impacts of global warming of 1.5 °C,https://ipcc.ch/report/sr15/
742,Lobsters,performance,Performance and optimization,Log(Graph): A Near-Optimal High-Performance Graph Representation,https://people.csail.mit.edu/jshun/papers/loggraph.pdf
743,Lobsters,performance,Performance and optimization,Accurately measuring layout on the web,https://nolanlawson.com/2018/09/25/accurately-measuring-layout-on-the-web/
744,Lobsters,performance,Performance and optimization,"LISP can be ""hard"" real time",https://franz.com/services/conferences_seminars/jlugm00/conference/Talk14_takeuchi.pdf
745,Lobsters,performance,Performance and optimization,Symbolic Crosschecking of Floating-Point and SIMD Code (2011),http://srg.doc.ic.ac.uk/files/papers/kleefp-eurosys-11.pdf
746,Lobsters,performance,Performance and optimization,What makes code slow to execute,https://medium.com/software-engineering-problems/what-makes-code-slow-to-execute-9061bd2ec1a
747,Lobsters,performance,Performance and optimization,"Nue Routing: fast, 100% fault-tolerant, 100% applicable, 100% deadlock-free",https://htor.inf.ethz.ch/blog/index.php/2018/09/27/nue-routing-fast-100-fault-tolerant-100-applicable-100-deadlock-free/
748,Lobsters,performance,Performance and optimization,Peeking Behind the Curtains of Serverless Platforms,http://pages.cs.wisc.edu/~liangw/pub/atc18-final298.pdf
749,Lobsters,performance,Performance and optimization,Optimizing MiniZinc,https://www.hillelwayne.com/post/minizinc-2/
750,Lobsters,performance,Performance and optimization,lolbench: automagically and empirically discovering Rust performance regressions,https://blog.anp.lol/rust/2018/09/29/lolbench/
751,Lobsters,performance,Performance and optimization,In Defense of Optimization Work,https://www.clever-cloud.com/blog/engineering/2018/09/27/in-defense-of-optimization-work/
752,Lobsters,performance,Performance and optimization,Rethinking Netflix’s Edge Load Balancing,https://medium.com/netflix-techblog/netflix-edge-load-balancing-695308b5548c
753,Lobsters,performance,Performance and optimization,Quickly identifying a sequence of digits in a string of characters,https://lemire.me/blog/2018/09/30/quickly-identifying-a-sequence-of-digits-in-a-string-of-characters/
754,Lobsters,performance,Performance and optimization,Parallel Hash for PostgreSQL,https://write-skew.blogspot.com/2018/01/parallel-hash-for-postgresql.html
755,Lobsters,performance,Performance and optimization,Implementing and Optimizing Functional Reactive Programming (2016),http://www.cs.nott.ac.uk/~psznhn/Talks/BigO-ImplFRP-Dec2016.pdf
756,Lobsters,performance,Performance and optimization,How I ended up writing opensnoop in pure C using eBPF,https://bolinfest.github.io/opensnoop-native/
757,Lobsters,performance,Performance and optimization,The relative performance of C and Rust,http://dtrace.org/blogs/bmc/2018/09/28/the-relative-performance-of-c-and-rust/
758,Lobsters,performance,Performance and optimization,Staticman --- add comments to GitHub Pages without JavaScript,https://staticman.net/
759,Lobsters,performance,Performance and optimization,Bloated,http://fabiensanglard.net/bloated/index.php
760,Lobsters,performance,Performance and optimization,"HERO: Heterogenous, Embedded Platform for Exploring RISC-V Manycore Accelerators on FPGA",https://arxiv.org/pdf/1712.06497.pdf
761,Lobsters,performance,Performance and optimization,Godbolt Compiler Explorer gains Zig support,https://godbolt.org/z/MORFut
762,Lobsters,performance,Performance and optimization,Constraint Solving with Minizinc,https://www.hillelwayne.com/post/minizinc/
763,Lobsters,performance,Performance and optimization,Idle Until Urgent,https://philipwalton.com/articles/idle-until-urgent/
764,Lobsters,performance,Performance and optimization,The evolution of performance in ppbert,https://vfoley.xyz/ppbert-perf-evolution/
765,Lobsters,performance,Performance and optimization,Why Aren’t More Users More Happy With Our VMs? Part 2,https://tratt.net/laurie/blog/entries/why_arent_more_users_more_happy_with_our_vms_part_2.html
766,Lobsters,performance,Performance and optimization,Alacritty now supports scrollback,https://jwilm.io/blog/alacritty-lands-scrollback/
767,Lobsters,performance,Performance and optimization,Scaling AFL to a 256 thread machine,https://gamozolabs.github.io/fuzzing/2018/09/16/scaling_afl.html
768,Lobsters,performance,Performance and optimization,Lazy Interfaces in Python,https://github.com/bwasti/lazy
769,Lobsters,performance,Performance and optimization,"Chromium Intent to Implement Display Locking, an API to stop layout while the DOM is being updated",https://docs.google.com/document/d/1mSQhTtaYFNy0qv5KifopEYm-ZKAZULnHyNcmKL8J4e0/mobilebasic
770,Lobsters,performance,Performance and optimization,Future Directions for Optimizing Compilers,https://arxiv.org/abs/1809.02161
771,Lobsters,performance,Performance and optimization,Performance - Stack Exchange,https://stackexchange.com/performance
772,Lobsters,performance,Performance and optimization,A Few of My Favorite Sigmoids,https://raphlinus.github.io/audio/2018/09/05/sigmoid.html
773,Lobsters,performance,Performance and optimization,Rust Faster SIMD edition,https://llogiq.github.io/2018/09/06/fast.html
774,Lobsters,performance,Performance and optimization,Why Aren’t More Users More Happy With Our VMs? Part 1,http://tratt.net/laurie/blog/entries/why_arent_more_users_more_happy_with_our_vms_part_1.html
775,Lobsters,performance,Performance and optimization,A Missing Link in Postgres 11: Fast Column Creation with Defaults,https://brandur.org/postgres-default
776,Lobsters,performance,Performance and optimization,Official Rust support for the FlatBuffers serialization format,https://github.com/google/flatbuffers/pull/4898
777,Lobsters,performance,Performance and optimization,Conservative web development,https://drewdevault.com/2018/09/04/Conservative-web-development.html
778,Lobsters,performance,Performance and optimization,"50 times faster data loading for Pandas: no problem, using C++",https://blog.esciencecenter.nl/irregular-data-in-pandas-using-c-88ce311cb9ef
779,Lobsters,performance,Performance and optimization,Data Oriented Design Resources,https://github.com/dbartolini/data-oriented-design
780,Lobsters,performance,Performance and optimization,DragonflyBSD Threadripper Benchmarking,http://apollo.backplane.com/DFlyMisc/threadripper.txt
781,Lobsters,performance,Performance and optimization,BEAM Bytecode Optimization Traps and Pitfalls,http://blog.erlang.org/opt-traps-and-pitfalls/
782,Lobsters,performance,Performance and optimization,Precache for Performance with Service Workers,https://bendyworks.com/blog/precache-for-performance
783,Lobsters,performance,Performance and optimization,Transmit optimisations in Mitogen 0.3,https://sweetness.hmmz.org/2018-08-30-mitogen-03-xmit.html
784,Lobsters,performance,Performance and optimization,The Performance Cost Of Spectre / Meltdown / Foreshadow Mitigations On Linux 4.19,https://www.phoronix.com/scan.php?page=article&item=linux-419-mitigations&num=1
785,Lobsters,performance,Performance and optimization,Fast Full-Text Search in PostgreSQL,https://austingwalters.com/fast-full-text-search-in-postgresql/
786,Lobsters,performance,Performance and optimization,Fibonacci Algorithms in Elixir,https://stratus3d.com/blog/2018/08/18/fibonacci-algorithms-in-elixir
787,Lobsters,performance,Performance and optimization,FlexSC: Flexible System Call Scheduling with Exception-Less System Calls (2010),https://www.usenix.org/legacy/event/osdi10/tech/full_papers/Soares.pdf
788,Lobsters,performance,Performance and optimization,How good are human planners? (2015),https://www.optaplanner.org/blog/2015/06/03/HowGoodAreHumanPlanners.html
789,Lobsters,performance,Performance and optimization,Micro-Optimising in JRuby,https://hur.st/blog/2018/08-26-micro-optimising-jruby/
790,Lobsters,performance,Performance and optimization,Add caching to speed up your site: Even if you think it isn't needed,https://crondev.blog/2018/08/12/add-caching-to-speed-up-your-site-even-if-you-think-it-isnt-needed/
791,Lobsters,performance,Performance and optimization,speedscope - Interactive Flamegraph Explorer,http://jamie-wong.com/post/speedscope/
792,Lobsters,performance,Performance and optimization,Geohash in Golang Assembly: Lessons in absurd optimization,https://mmcloughlin.com/posts/geohash-assembly
793,Lobsters,performance,Performance and optimization,"MZbench - Expressive, scalable load testing tool",https://github.com/satori-com/mzbench
794,Lobsters,performance,Performance and optimization,FASTER: Open source key-value store from Microsoft Research,https://github.com/Microsoft/FASTER
795,Lobsters,performance,Performance and optimization,Cost of a Join,https://www.brianlikespostgres.com/cost-of-a-join.html
796,Lobsters,performance,Performance and optimization,When a Microsecond Is an Eternity: High Performance Trading Systems in C++,https://www.youtube.com/watch?v=NH1Tta7purM
797,Lobsters,performance,Performance and optimization,Fairytale about performance in web application,https://itnext.io/fairytale-about-performance-in-web-application-ed2bf12627fc
798,Lobsters,performance,Performance and optimization,AMD Threadripper 2990WX Linux Benchmarks: The 32-Core / 64-Thread Beast Review,https://www.phoronix.com/scan.php?page=article&item=amd-linux-2990wx&num=1
799,Lobsters,performance,Performance and optimization,Making Windows Slower Part 1: File Access,https://randomascii.wordpress.com/2018/04/17/making-windows-slower-part-1-file-access/
800,Lobsters,performance,Performance and optimization,"M3: Uber’s Open Source, Large-scale Metrics Platform for Prometheus",https://eng.uber.com/m3/
801,Lobsters,performance,Performance and optimization,Improving Partial Loading Performance,https://www.driftingruby.com/episodes/improving-partial-loading-performance
802,Lobsters,performance,Performance and optimization,TRIMMER: Application Specialization for Code Debloating,http://www.csl.sri.com/users/gehani/papers/ASE-2018.Trimmer.pdf
803,Lobsters,performance,Performance and optimization,Verifying Optimizations Using SMT Solvers,https://llvm.org/devmtg/2013-11/slides/Lopes-SMT.pdf
804,Lobsters,performance,Performance and optimization,Understanding memory information on Linux systems,https://linux-audit.com/understanding-memory-information-on-linux-systems/
805,Lobsters,performance,Performance and optimization,"OpenFastPath: Open-Source, User-Space, Fast-Path, TCP/IP Stack",https://events.static.linuxfound.org/sites/events/files/slides/OpenFastPath%20for%20ONS%202016v3.pdf
806,Lobsters,performance,Performance and optimization,Visualizing ZFS Performance,https://www.ixsystems.com/blog/visualizing-zfs-performance/
807,Lobsters,performance,Performance and optimization,an EPYC NixOS build farm,https://grahamc.com/blog/an-epyc-nixos-build-farm
808,Lobsters,performance,Performance and optimization,Fastcat - A Faster `cat` Implementation Using Splice,https://matthias-endler.de/2018/fastcat/
809,Lobsters,performance,Performance and optimization,Getting 4 bytes or a full cache line: same speed or not?,https://lemire.me/blog/2018/07/31/getting-4-bytes-or-a-full-cache-line-same-speed-or-not/
810,Lobsters,performance,Performance and optimization,The Design and Implementation of Hyperupcalls,https://www.usenix.org/conference/atc18/presentation/amit
811,Lobsters,performance,Performance and optimization,"It is more complicated than I thought: -mtune, -march in GCC",https://lemire.me/blog/2018/07/25/it-is-more-complicated-than-i-thought-mtune-march-in-gcc/
812,Lobsters,performance,Performance and optimization,A hash table re-hash,https://hpjansson.org/blag/2018/07/24/a-hash-table-re-hash/
813,Lobsters,performance,Performance and optimization,Efficiently Generating a Number in a Range,http://www.pcg-random.org/posts/bounded-rands.html
814,Lobsters,performance,Performance and optimization,Optimizing a breadth-first search,https://www.snellman.net/blog/archive/2018-07-23-optimizing-breadth-first-search/
815,Lobsters,performance,Performance and optimization,jsoniter - faster than Go’s json,http://jsoniter.com/migrate-from-go-std.html
816,Lobsters,performance,Performance and optimization,Improve Application Performance with These Advanced GC Techniques,https://blog.takipi.com/improve-your-application-performance-with-garbage-collection-optimization/
817,Lobsters,performance,Performance and optimization,"Making CryptPad CSS 3 times faster, by loading it twice",https://blog.cryptpad.fr/2018/07/20/Making-CryptPad-CSS-3-times-faster-by-loading-it-twice/
818,Lobsters,performance,Performance and optimization,BOLT: A Practical Binary Optimizer for Data Centers and Beyond,https://arxiv.org/abs/1807.06735
819,Lobsters,performance,Performance and optimization,"Fast, Shared, Upgradeable Mutex",https://shlomisteinberg.com/2018/06/24/fast-shared-upgradeable-mutex/
820,Lobsters,performance,Performance and optimization,Building a fast queue between C++ and Java,http://pzemtsov.github.io/2018/07/18/building-queue-from-cpp-to-java.html
821,Lobsters,performance,Performance and optimization,Prototype to production: Building your first PCB prototype (part 1),https://blog.particle.io/2018/03/06/proto-to-prod/
822,Lobsters,performance,Performance and optimization,Accelerating Conway’s Game of Life with SIMD instructions,https://lemire.me/blog/2018/07/18/accelerating-conways-game-of-life-with-simd-instructions/
823,Lobsters,performance,Performance and optimization,Performance implications of default struct equality in C#,https://blogs.msdn.microsoft.com/seteplia/2018/07/17/performance-implications-of-default-struct-equality-in-c/
824,Lobsters,performance,Performance and optimization,A New Golden Age for Computer Architecture (2017),https://www.youtube.com/watch?v=3LVeEjsn8Ts
825,Lobsters,performance,Performance and optimization,Swallowing the elephant,http://pharr.org/matt/blog/2018/07/16/moana-island-pbrt-all.html
826,Lobsters,performance,Performance and optimization,PipesFS: Fast Linux I/O in the Unix Tradition (2008),https://www.cs.vu.nl/~herbertb/papers/osreview2008-2.pdf
827,Lobsters,performance,Performance and optimization,Optimisation Techniques,https://www.computist.xyz/2018/07/optimisation-techniques.html
828,Lobsters,performance,Performance and optimization,Optimizing a Python application with C++ code,https://antlarr.io/2018/07/optimizing-a-python-application-with-c-code/
829,Lobsters,performance,Performance and optimization,More Hash Function Tests,https://aras-p.info/blog/2016/08/09/More-Hash-Function-Tests/
830,Lobsters,performance,Performance and optimization,Hardware Transactional Persistent Memory,https://arxiv.org/pdf/1806.01108.pdf
831,Lobsters,performance,Performance and optimization,A tool for benchmarking fast C functions with less noise,https://moderncrypto.org/mail-archive/curves/2018/000966.html
832,Lobsters,performance,Performance and optimization,How to drop 10 million packets per second,https://blog.cloudflare.com/how-to-drop-10-million-packets/
833,Lobsters,performance,Performance and optimization,Periodic perf/scalability test,/s/vcc6y8/periodic_perf_scalability_test
834,Lobsters,performance,Performance and optimization,Rules of optimization,http://www.humus.name/index.php?page=News&ID=383
835,Lobsters,performance,Performance and optimization,"Performance of the 8088 on PC, PCjr and Tandy 1000",https://retro.moe/2018/03/04/performance-of-the-8088-on-pc-pcjr-and-tandy-1000/
836,Lobsters,performance,Performance and optimization,AV1: next generation video – The Constrained Directional Enhancement Filter,https://hacks.mozilla.org/2018/06/av1-next-generation-video-the-constrained-directional-enhancement-filter/
837,Lobsters,performance,Performance and optimization,ES6’s Function Destructuring Assignment Is Not A Free Lunch.,https://medium.com/@ankur_anand/es6s-function-destructuring-assignment-is-not-free-lunch-19caacc18137
838,Lobsters,performance,Performance and optimization,BOLT: binary optimization tool,https://code.fb.com/data-infrastructure/accelerate-large-scale-applications-with-bolt/
839,Lobsters,performance,Performance and optimization,Scaling up Superoptimization (2016),https://people.eecs.berkeley.edu/~mangpo/www/papers/lens-asplos16.pdf
840,Lobsters,performance,Performance and optimization,How not to structure your database-backed web applications: a study of performance bugs in the wild,https://blog.acolyer.org/2018/06/28/how-_not_-to-structure-your-database-backed-web-applications-a-study-of-performance-bugs-in-the-wild/
841,Lobsters,performance,Performance and optimization,Tracy: real time frame profiler,https://bitbucket.org/wolfpld/tracy
842,Lobsters,performance,Performance and optimization,Accelerate large-scale applications with BOLT,https://code.facebook.com/posts/605721433136474/accelerate-large-scale-applications-with-bolt/
843,Lobsters,performance,Performance and optimization,Finding Missed Compiler Optimizations by Differential Testing,https://www.complang.tuwien.ac.at/gergo/papers/cc2018_authorversion.pdf
844,Lobsters,performance,Performance and optimization,How to Hurricane-Proof a Web Server (2017),https://arstechnica.com/information-technology/2017/09/how-to-hurricane-proof-a-web-server/
845,Lobsters,performance,Performance and optimization,Upgrading to Node v8 has significantly reduced our operating costs,https://blog.ably.io/how-our-gross-margin-is-improving-after-upgrading-from-node-6-to-node-8-bdf59e654b86
846,Lobsters,performance,Performance and optimization,"Speaking Intelligently about ""Java vs Node"" Performance",https://rclayton.silvrback.com/speaking-intelligently-about-java-vs-node-performance
847,Lobsters,performance,Performance and optimization,Building better compression together with DivANS,http://blogs.dropbox.com/tech/2018/06/building-better-compression-together-with-divans/
848,Lobsters,performance,Performance and optimization,NP-hard isn't the end of the world,https://dcreager.net/np-hard/
849,Lobsters,performance,Performance and optimization,Is FreeBSD faster than Linux?,https://www.quora.com/Is-FreeBSD-faster-than-Linux
850,Lobsters,performance,Performance and optimization,Why Skylake CPUs Are Sometimes 50% Slower – How Intel Has Broken Existing Code,https://aloiskraus.wordpress.com/2018/06/16/why-skylakex-cpus-are-sometimes-50-slower-how-intel-has-broken-existing-code/
851,Lobsters,performance,Performance and optimization,"zapcc: A Caching, C++ Compiler Based On Clang for Faster Compiles",https://github.com/yrnkrn/zapcc
852,Lobsters,performance,Performance and optimization,Strings Are Evil,https://medium.com/@indy_singh/strings-are-evil-a803d05e5ce3
853,Lobsters,performance,Performance and optimization,Making Tests Go Faster,https://ryanbigg.com/2018/06/making-tests-go-faster
854,Lobsters,performance,Performance and optimization,Tools for Exploring .NET Internals,http://www.mattwarren.org/2018/06/15/Tools-for-Exploring-.NET-Internals/
855,Lobsters,performance,Performance and optimization,Performance Modelling and Verification of Cloud-based Auto-Scaling Policies (2017),http://www.prismmodelchecker.org/papers/ccgrid17.pdf
856,Lobsters,performance,Performance and optimization,Web cache server HTTP/2 performance benchmark: nuster vs nginx,https://github.com/jiangwenyuan/nuster/wiki/Web-cache-server-HTTP-2-performance-benchmark:-nuster-vs-nginx
857,Lobsters,performance,Performance and optimization,Caching beyond RAM: the case for NVMe,https://memcached.org/blog/nvm-caching/
858,Lobsters,performance,Performance and optimization,Arrays of Wisdom of the Ancients,https://shipilev.net/blog/2016/arrays-wisdom-ancients/
859,Lobsters,performance,Performance and optimization,"MultiMLton: Standard ML Compiler for Scalable, Multicore Platforms (2014)",https://multimlton.cs.purdue.edu/mML/Welcome.html
860,Lobsters,performance,Performance and optimization,Web Framework Performance Comparison Round 16,https://www.techempower.com/benchmarks/#section=data-r16
861,Lobsters,performance,Performance and optimization,Rich Code for Tiny Computers: A Simple Commodore 64 Game in C++17 (2016),https://www.youtube.com/watch?v=zBkNBP00wJE
862,Lobsters,performance,Performance and optimization,"YES! I Compiled 1,000,000 TypeScript files in Under 40 Seconds. This is How.",https://medium.com/@urish/yes-i-compiled-1-000-000-typescript-files-in-under-40-seconds-this-is-how-6429a665999c
863,Lobsters,performance,Performance and optimization,Speeding up Zsh and Oh-My-Zsh,https://blog.jonlu.ca/posts/speeding-up-zsh
864,Lobsters,performance,Performance and optimization,How to speed up the Rust compiler some more in 2018,https://blog.mozilla.org/nnethercote/2018/06/05/how-to-speed-up-the-rust-compiler-some-more-in-2018/
865,Lobsters,performance,Performance and optimization,Google AMP - and the website obesity problem,https://blog.artemix.org/article/show/google-amp
866,Lobsters,performance,Performance and optimization,Smartphone Performance and Security Enhancements Through Wi-Fi Firmware Modifications,https://firmwaresecurity.com/2018/06/03/smartphone-performance-and-security-enhancements-through-wi-fi-firmware-modifications/
867,Lobsters,performance,Performance and optimization,SMH: The Swiss Army Chainsaw of shuffle-based matching sequences,https://branchfree.org/2018/05/30/smh-the-swiss-army-chainsaw-of-shuffle-based-matching-sequences/
868,Lobsters,performance,Performance and optimization,Using Skylight to Solve Real-World Performance Problems [Part III: Code Triage],http://blog.skylight.io/using-skylight-to-solve-real-world-performance-problems-part-3-code-triage/
869,Lobsters,performance,Performance and optimization,When FFI Function Calls Beat Native C,https://nullprogram.com/blog/2018/05/27/
870,Lobsters,performance,Performance and optimization,Greater speed in memory-bound graph algorithms with just straight C code,https://lemire.me/blog/2018/05/28/greater-speed-in-memory-bound-graph-algorithms-with-just-straight-c-code/
871,Lobsters,performance,Performance and optimization,"“Say Hello To My Little Friend”: Sheng, a small but fast Deterministic Finite Automaton",https://branchfree.org/2018/05/25/say-hello-to-my-little-friend-sheng-a-small-but-fast-deterministic-finite-automaton/
872,Lobsters,performance,Performance and optimization,SIMD-Based Decoding of Posting Lists (2014),http://stepanovpapers.com/SIMD_Decoding_TR.pdf
873,Lobsters,performance,Performance and optimization,Comparing the C FFI Overhead of Various Languages,https://github.com/dyu/ffi-overhead
874,Lobsters,performance,Performance and optimization,About ZFS Performance,https://www.percona.com/blog/2018/05/15/about-zfs-performance/
875,Lobsters,performance,Performance and optimization,"Open-sourcing Katran, a scalable network load balancer",https://code.facebook.com/posts/1906146702752923/open-sourcing-katran-a-scalable-network-load-balancer/
876,Lobsters,performance,Performance and optimization,Graph algorithms and software prefetching,https://lemire.me/blog/2018/05/24/graph-algorithms-and-software-prefetching/
877,Lobsters,performance,Performance and optimization,ASICs and Mining Centralization,https://blog.dshr.org/2018/05/asics-and-mining-centralization.html
878,Lobsters,performance,Performance and optimization,A Docker Image in Less Than 1000 Bytes,https://zwischenzugs.com/2018/05/22/a-docker-image-in-less-than-1000-bytes/
879,Lobsters,performance,Performance and optimization,On Competing with C Using Haskell (2017),https://two-wrongs.com/on-competing-with-c-using-haskell.html
880,Lobsters,performance,Performance and optimization,The Rust compiler is getting faster,https://blog.mozilla.org/nnethercote/2018/05/17/the-rust-compiler-is-getting-faster/
881,Lobsters,performance,Performance and optimization,Succinct Trees in Practice (2010),https://www.dcc.uchile.cl/~gnavarro/ps/alenex10.pdf
882,Lobsters,performance,Performance and optimization,Validating UTF-8 strings using as little as 0.7 cycles per byte,https://lemire.me/blog/2018/05/16/validating-utf-8-strings-using-as-little-as-0-7-cycles-per-byte/
883,Lobsters,performance,Performance and optimization,Reducing the number of image copies in GNOME,https://people.gnome.org/~federico/blog/reducing-image-copies.html
884,Lobsters,performance,Performance and optimization,How a Rust upgrade more than tripled the speed of my code,http://troubles.md/posts/the-power-of-compilers/
885,Lobsters,performance,Performance and optimization,Big Integers in Zig,http://tiehuis.github.io/big-integers-in-zig
886,Lobsters,performance,Performance and optimization,Python vs NumPy vs Nim,https://narimiran.github.io//2018/05/10/python-numpy-nim.html
887,Lobsters,performance,Performance and optimization,Deep Packet Inspection Using GPU's (2017),http://on-demand.gputechconf.com/gtc/2017/presentation/s7468-wenji-wu-network-traffic-analysis-using-gpus.pdf
888,Lobsters,performance,Performance and optimization,Towards GPGPU JSON parsing,https://raphlinus.github.io/personal/2018/05/10/toward-gpu-json-parsing.html
889,Lobsters,performance,Performance and optimization,How quickly can you check that a string is valid unicode (UTF-8)?,https://lemire.me/blog/2018/05/09/how-quickly-can-you-check-that-a-string-is-valid-unicode-utf-8/
890,Lobsters,performance,Performance and optimization,Yesquel: Scalable SQL Storage for Web Applications (2015),https://cs.nyu.edu/~mwalfish/papers/yesquel-sosp15.pdf
891,Lobsters,performance,Performance and optimization,Is Prefix Of String In Table? A Journey Into SIMD String Processing.,http://trent.me/is-prefix-of-string-in-table/
892,Lobsters,performance,Performance and optimization,A look at rsync performance [LWN.net] (2010),https://lwn.net/Articles/400489/
893,Lobsters,performance,Performance and optimization,A Survey of Parallel Programming Languages and Tools (1993),https://www.nas.nasa.gov/assets/pdf/techreports/1993/rnd-93-005.pdf
894,Lobsters,performance,Performance and optimization,Livestream of DConf 2018 in Munich,https://www.youtube.com/watch?v=km5rEBDo2M0
895,Lobsters,performance,Performance and optimization,Python startup time: milliseconds matter,https://mail.python.org/pipermail/python-dev/2018-May/153296.html
896,Lobsters,performance,Performance and optimization,Native Code Performance and Memory: The Elephant in the CPU,https://channel9.msdn.com/Events/Build/2013/4-329
897,Lobsters,performance,Performance and optimization,Is software prefetching (__builtin_prefetch) useful for performance?,https://lemire.me/blog/2018/04/30/is-software-prefetching-__builtin_prefetch-useful-for-performance/
898,Lobsters,performance,Performance and optimization,A sketch of string unescaping on GPGPU,https://raphlinus.github.io/personal/2018/04/25/gpu-unescaping.html
899,Lobsters,performance,Performance and optimization,The Erlang Runtime System,https://happi.github.io/theBeamBook/
900,Lobsters,performance,Performance and optimization,"nperf, a sampling profiler for Linux written in Rust from Nokia",https://github.com/nokia/nperf
901,Lobsters,performance,Performance and optimization,Parsing with Derivatives,http://matt.might.net/papers/might2011derivatives.pdf
902,Lobsters,performance,Performance and optimization,A sketch of string unescaping on GPGPU,https://gist.github.com/raphlinus/591b7708959ebdc97759b560e215dd26
903,Lobsters,performance,Performance and optimization,Erlang Scheduler Details and Why It Matters,https://hamidreza-s.github.io/erlang/scheduling/real-time/preemptive/migration/2016/02/09/erlang-scheduler-details.html
904,Lobsters,performance,Performance and optimization,Plasma Startup,http://blog.davidedmundson.co.uk/blog/plasma-startup/
905,Lobsters,performance,Performance and optimization,What optimizations you can expect from CPU?,https://dendibakh.github.io/blog/2018/04/22/What-optimizations-you-can-expect-from-CPU
906,Lobsters,performance,Performance and optimization,Can Logic Programming Execute as Fast as Imperative Programming? (1990),http://www2.eecs.berkeley.edu/Pubs/TechRpts/1990/CSD-90-600.pdf
907,Lobsters,performance,Performance and optimization,What efficient pattern matching looks like at the bytecode level,https://dockyard.com/blog/2018/02/27/what-efficient-pattern-matching-looks-like-at-the-bytecode-level
908,Lobsters,performance,Performance and optimization,The Infamous GNOME Shell Memory Leak,https://feaneron.com/2018/04/20/the-infamous-gnome-shell-memory-leak/
909,Lobsters,performance,Performance and optimization,Parsing series of integers with SIMD,http://0x80.pl/articles/simd-parsing-int-sequences.html
910,Lobsters,performance,Performance and optimization,Dissecting the NVIDIA Volta GPU Architecture via Microbenchmarking,https://arxiv.org/pdf/1804.06826v1.pdf
911,Lobsters,performance,Performance and optimization,Multics Message Coordinator (UNIX syslog precursor),http://multicians.org/message-coordinator.html
912,Lobsters,performance,Performance and optimization,A Silly Binaryen Optimization,https://kripken.github.io/blog/binaryen/2018/04/13/a-silly-optimization.html
913,Lobsters,performance,Performance and optimization,Sloc Cloc and Code - What happened on the way to faster Cloc,https://boyter.org/posts/sloc-cloc-code/
914,Lobsters,performance,Performance and optimization,Is sorted using SIMD instructions,http://0x80.pl/notesen/2018-04-11-simd-is-sorted.html
915,Lobsters,performance,Performance and optimization,Speeding up numpy-based pitch detection with numba,http://sevag.xyz/post/snac2/
916,Lobsters,performance,Performance and optimization,Parallelizing Model Checking Algorithms Using Multi-core and Many-core Architectures,http://www.ntu.edu.sg/home/yangliu/publications/wzmthesis.pdf
917,Lobsters,performance,Performance and optimization,Incrementally improving the performance of a python script,http://mycode.doesnot.run/2018/04/11/pivot/
918,Lobsters,performance,Performance and optimization,Effect of CPU Caches,https://medium.com/@minimarcel/effect-of-cpu-caches-57db81490a7f
919,Lobsters,performance,Performance and optimization,How we doubled Mono’s Float Speed,http://tirania.org/blog/archive/2018/Apr-11.html
920,Lobsters,performance,Performance and optimization,Speed up data access in Elixir,https://medium.com/learn-elixir/speed-up-data-access-in-elixir-842617030514
921,Lobsters,performance,Performance and optimization,Smooth resize in Direct2D,https://raphlinus.github.io/personal/2018/04/08/smooth-resize.html
922,Lobsters,performance,Performance and optimization,Interleaving small reads of multiple files – why World of Tanks 1.0 has abysmal loading times on HDDs,https://peteronprogramming.wordpress.com/2018/04/03/interleaving-small-reads-of-multiple-files-why-world-of-tanks-1-0-has-abysmal-loading-times-on-hdds/
923,Lobsters,performance,Performance and optimization,Is TLS Fast Yet?,https://istlsfastyet.com/
924,Lobsters,performance,Performance and optimization,Building Tiny Rust Binaries for Embedded Linux,https://jamesmunns.com/update/2018/04/01/tinyrocket.html
925,Lobsters,performance,Performance and optimization,IotaFS: Exploring File System Optimizations for SSDs (2012),http://web.stanford.edu/~jdellit/default_files/iotafs.pdf
926,Lobsters,performance,Performance and optimization,How NOT to Measure Latency,https://www.infoq.com/presentations/latency-response-time
927,Lobsters,performance,Performance and optimization,Speeding Up dwarfdump With Rust,https://robert.ocallahan.org/2018/03/speeding-up-dwarfdump-with-rust.html
928,Lobsters,performance,Performance and optimization,Terminal Perf Graphs in one Command,https://zwischenzugs.com/2018/03/27/terminal-perf-graphs-in-one-command/
929,Lobsters,performance,Performance and optimization,Natively Implemented Functions in Erlang,https://rhye.org/post/native-methods-in-erlang/
930,Lobsters,performance,Performance and optimization,Performance Under Load: Adaptive Concurrency Limits @ Netflix,https://medium.com/@NetflixTechBlog/performance-under-load-3e6fa9a60581
931,Lobsters,performance,Performance and optimization,"Text Buffer Reimplementation, a Visual Studio Code Story",https://code.visualstudio.com/blogs/2018/03/23/text-buffer-reimplementation
932,Lobsters,performance,Performance and optimization,AMP on Rails,https://making.dia.com/amp-on-rails-3f491a06ba3d
933,Lobsters,performance,Performance and optimization,Smaller Lodash bundles with Webpack and Babel,https://nolanlawson.com/2018/03/20/smaller-lodash-bundles-with-webpack-and-babel/
934,Lobsters,performance,Performance and optimization,10x Performance Increases: Optimizing a Static Site,https://hackernoon.com/optimizing-a-static-site-d5ab6899f249
935,Lobsters,performance,Performance and optimization,Make your WordPress blog fly with these speedy plugins and tweaks,https://www.quickerwp.com/make-wordpress-blog-fly-speedy-plugins/
936,Lobsters,performance,Performance and optimization,Adventures with Memory Barriers and Seastar on Linux,https://www.scylladb.com/2018/02/15/memory-barriers-seastar-linux/
937,Lobsters,performance,Performance and optimization,Much Faster Networking,https://www.infoq.com/presentations/sockets-nfv
938,Lobsters,performance,Performance and optimization,"Without performance tests, we will have a bad time, forever",https://www.fpcomplete.com/blog/without-performance-tests-we-will-have-a-bad-time-forever
939,Lobsters,performance,Performance and optimization,Mastering Linux performance - CPU time and CPU usage,https://jaroslawr.com/articles/mastering-linux-performance-cpu-time-and-cpu-usage/
940,Lobsters,performance,Performance and optimization,Profiling: Measurement and Analysis,https://engineering.riotgames.com/news/profiling-measurement-and-analysis
941,Lobsters,performance,Performance and optimization,Kickstarting free software: one week later,http://pythonsweetness.tumblr.com/post/171830663802/kickstarting-free-software-one-week-later
942,Lobsters,performance,Performance and optimization,Improving the DragonFlyBSD Network Stack,https://leaf.dragonflybsd.org/~sephe/dfly1.pdf
943,Lobsters,performance,Performance and optimization,Bayesian Filter Performance in Ruby (2014),http://rurounijones.github.com/blog/2014/08/11/bayesian-filter-performance-in-ruby/
944,Lobsters,performance,Performance and optimization,This Architecture Tastes Like Microarchitecture,http://www.jonathanbeard.io/pdf/db18a.pdf
945,Lobsters,performance,Performance and optimization,Performance testing a low-latency stream processing system,https://blog.wallaroolabs.com/2018/03/performance-testing-a-low-latency-stream-processing-system/
946,Lobsters,performance,Performance and optimization,Lobste.rs access pattern statistics for research purposes,/s/cqnzl5/lobste_rs_access_pattern_statistics_for
947,Lobsters,performance,Performance and optimization,Iterating over set bits quickly (SIMD edition),https://lemire.me/blog/2018/03/08/iterating-over-set-bits-quickly-simd-edition/
948,Lobsters,performance,Performance and optimization,Quadrupling Ansible performance with Mitogen,http://pythonsweetness.tumblr.com/post/171589071872/quadrupling-ansible-performance-with-mitogen
949,Lobsters,performance,Performance and optimization,Julia Evans on building a Ruby profiler,https://www.recurse.com/events/localhost-julia-evans
950,Lobsters,performance,Performance and optimization,Screen-filling Rasterization using Screen-aligned Quads and Triangles,https://www.cginternals.com/en/blog/2018-01-10-screen-aligned-quads-and-triangles.html
951,Lobsters,performance,Performance and optimization,Vectorized shifts: are immediates faster?,https://lemire.me/blog/2018/02/28/vectorized-shifts-are-immediates-faster/
952,Lobsters,performance,Performance and optimization,Ruby Optimization with a Comment to Freeze Strings,https://www.mikeperham.com/2018/02/28/ruby-optimization-with-one-magic-comment/
953,Lobsters,performance,Performance and optimization,How We Built Wallaroo to Process Millions of Messages/Sec with Microsecond Latencies,https://blog.wallaroolabs.com/2018/02/how-we-built-wallaroo-to-process-millions-of-messages/sec-with-microsecond-latencies/
954,Lobsters,performance,Performance and optimization,A vendor neutral open approach to decoupled data synchronization,https://blog.ably.io/a-vendor-neutral-open-approach-to-decoupled-data-synchronization-26d8914cb28b
955,Lobsters,performance,Performance and optimization,Testing Database Changes the Right Way,https://heapanalytics.com/blog/engineering/testing-database-changes-right-way
956,Lobsters,performance,Performance and optimization,Reading bits in far too many ways (part 1),https://fgiesen.wordpress.com/2018/02/19/reading-bits-in-far-too-many-ways-part-1/
957,Lobsters,performance,Performance and optimization,Maybe you don't need Rust and WASM to speed up your JS,http://mrale.ph/blog/2018/02/03/maybe-you-dont-need-rust-to-speed-up-your-js.html
958,Lobsters,performance,Performance and optimization,Speeding up an octopress blog by 25x-50x (2014),http://danluu.com/octopress-speedup/
959,Lobsters,performance,Performance and optimization,The method JIT compiler for Ruby 2.6,https://medium.com/@k0kubun/the-method-jit-compiler-for-ruby-2-6-388ee0989c13
960,Lobsters,performance,Performance and optimization,Performance Tuning,https://www.youtube.com/watch?v=fV6qYho-XVs
961,Lobsters,performance,Performance and optimization,Pure CSS Slide-Down Animation,https://www.joezimjs.com/javascript/pure-css-slide-down-animation/
962,Lobsters,performance,Performance and optimization,Ruby’s New JIT,https://medium.com/square-corner-blog/rubys-new-jit-91a5c864dd10
963,Lobsters,performance,Performance and optimization,Much ado about latency: Mitogen and the BFG9000 of import hooks,http://pythonsweetness.tumblr.com/post/170846280192/much-ado-about-latency-mitogen-and-the-bfg9000-of
964,Lobsters,performance,Performance and optimization,Laziness and Parallelism,http://www.usrsb.in/laziness-and-parallelism.html
965,Lobsters,performance,Performance and optimization,Speeding up Ruby with Shared Strings,https://tenderlovemaking.com/2018/02/12/speeding-up-ruby-with-shared-strings.html
966,Lobsters,performance,Performance and optimization,"Benchmarking Ruby's Heap: malloc, tcmalloc, jemalloc",http://engineering.appfolio.com/appfolio-engineering/2018/2/1/benchmarking-rubys-heap-malloc-tcmalloc-jemalloc
967,Lobsters,performance,Performance and optimization,Synthesis - An Efficient Implementation of Fundamental Operating System Services (1992),https://pdfs.semanticscholar.org/206a/4efe87abbea5f711a28397447b8ae2159d3b.pdf
968,Lobsters,performance,Performance and optimization,KPTI/KAISER Meltdown Initial Performance Regressions,http://www.brendangregg.com/blog/2018-02-09/kpti-kaiser-meltdown-performance.html
969,Lobsters,performance,Performance and optimization,Data-Oriented Design and C++,https://www.youtube.com/watch?v=rX0ItVEVjHc
970,Lobsters,performance,Performance and optimization,Python’s Weak Performance Matters,https://metarabbit.wordpress.com/2018/02/05/pythons-weak-performance-matters/
971,Lobsters,performance,Performance and optimization,Web cache server performance benchmark: nuster vs squid,https://github.com/jiangwenyuan/nuster/wiki/Web-cache-server-performance-benchmark:-nuster-vs-squid
972,Lobsters,performance,Performance and optimization,Maximize Cache Performance with this One Weird Trick or: Cache-Oblivious Data Structures,https://rcoh.me/posts/cache-oblivious-datastructures/
973,Lobsters,performance,Performance and optimization,nuster- v1.7.9.4 is released (A web caching proxy server),https://github.com/jiangwenyuan/nuster/releases/tag/v1.7.9.4
974,Lobsters,performance,Performance and optimization,Improving the bucket compression trick,https://github.com/robey/pack4x5
975,Lobsters,performance,Performance and optimization,Single Page Application Is Not a Silver Bullet,http://bloomca-me.github.io/2018/02/04/spa-is-not-silver-bullet.html
976,Lobsters,performance,Performance and optimization,Making Poirot Fast,https://www.kylesletten.com/2018/02/02/making-poirot-fast.html
977,Lobsters,performance,Performance and optimization,The Continuous World of Dungeon Siege,http://gamedevs.org/uploads/the-continuous-world-of-dungeon-siege.pdf
978,Lobsters,performance,Performance and optimization,Lament for search,http://blog.ikura.co/posts/lament-for-search.html
979,Lobsters,performance,Performance and optimization,Xi: an editor for the next 20 years,https://www.recurse.com/events/localhost-raph-levien
980,Lobsters,performance,Performance and optimization,How a fix in Go 1.9 sped up our Gitaly service by 30x,https://about.gitlab.com/2018/01/23/how-a-fix-in-go-19-sped-up-our-gitaly-service-by-30x/
981,Lobsters,performance,Performance and optimization,The Performance Characteristics of Async Methods,https://blogs.msdn.microsoft.com/seteplia/2018/01/25/the-performance-characteristics-of-async-methods/
982,Lobsters,performance,Performance and optimization,The accidental HFT firm,https://meanderful.blogspot.com/2018/01/the-accidental-hft-firm.html
983,Lobsters,performance,Performance and optimization,How Much Does Meltdown/Spectre Patching Slow Down a Big Rails App?,http://engineering.appfolio.com/appfolio-engineering/2018/1/4/rails-ruby-bench-cruby-and-meltdownspectre
984,Lobsters,performance,Performance and optimization,Surfing on Lava – Feedback control & tuning the BEAM VM,https://medium.com/@GrindrLabs/surfing-on-lava-a61124bf7c7
985,Lobsters,performance,Performance and optimization,Outperforming LAPACK with C metaprogramming,http://wordsandbuttons.online/outperforming_lapack_with_c_metaprogramming.html
986,Lobsters,performance,Performance and optimization,Code alignment issues,https://dendibakh.github.io/blog/2018/01/18/Code_alignment_issues
987,Lobsters,performance,Performance and optimization,Using IOpipe profiling to gain crucial observability into your AWS Lambda functions,https://read.iopipe.com/using-iopipe-profiling-to-gain-crucial-observability-into-your-aws-lambda-functions-506f5dda6bdf
988,Lobsters,performance,Performance and optimization,"Just because your site isn't for emerging markets, doesn't excuse you from web performance optimisation",https://www.twnsnd.com/posts/nothing_excuses_you_from_web_performance_optimisation.html
989,Lobsters,performance,Performance and optimization,Ridiculously fast base64 encoding and decoding,https://lemire.me/blog/2018/01/17/ridiculously-fast-base64-encoding-and-decoding/
990,Lobsters,performance,Performance and optimization,ICC and VTune now free as part of Intel System Studio,https://software.intel.com/en-us/system-studio/choose-download
991,Lobsters,performance,Performance and optimization,membarrier system call performance and the future of Userspace RCU on Linux,http://lttng.org/blog/2018/01/15/membarrier-system-call-performance-and-userspace-rcu/
992,Lobsters,performance,Performance and optimization,Be Engineering Insights: Benaphores [1996],https://www.haiku-os.org/legacy-docs/benewsletter/Issue1-26.html
993,Lobsters,performance,Performance and optimization,Microbenchmarking calls for idealized conditions,https://lemire.me/blog/2018/01/16/microbenchmarking-calls-for-idealized-conditions/
994,Lobsters,performance,Performance and optimization,Speedometer 2.0: A Benchmark for Modern Web App Responsiveness,https://webkit.org/blog/8063/speedometer-2-0-a-benchmark-for-modern-web-app-responsiveness/
995,Lobsters,performance,Performance and optimization,Meltdown patch reduces mkfile(8) throughput to less than 1/3 on macOS,http://blog.metaobject.com/2018/01/meltdown-patch-reduces-mkfile8.html
996,Lobsters,performance,Performance and optimization,The Lost Art of C Structure Packing,http://www.catb.org/esr/structure-packing/
997,Lobsters,performance,Performance and optimization,How fast can you bit-interleave 32-bit integers?,https://lemire.me/blog/2018/01/08/how-fast-can-you-bit-interleave-32-bit-integers/
998,Lobsters,performance,Performance and optimization,PCID is now a critical performance/security feature on x86,https://groups.google.com/forum/m/#!topic/mechanical-sympathy/L9mHTbeQLNU
999,Lobsters,performance,Performance and optimization,Are Benchmarks From Cloud CI Services Reliable?,https://bheisler.github.io/post/benchmarking-in-the-cloud/
1000,Lobsters,performance,Performance and optimization,Epic Services & Stability Update (100% CPU load increase after Meltdown mitigation),https://www.epicgames.com/fortnite/forums/news/announcements/132642-epic-services-stability-update
1001,Lobsters,performance,Performance and optimization,Scaling your monorepo for an efficient CI,http://alexrs.me/2018/shopify-monorepo/
1002,Lobsters,performance,Performance and optimization,Abstractions (And 3 sad tales of the slow app),https://alonisser.github.io/abstractions-talk/#1
1003,Lobsters,performance,Performance and optimization,Don’t make it appear like you are reading your own recent writes,https://lemire.me/blog/2018/01/04/dont-make-it-appear-like-you-are-reading-your-own-recent-writes/
1004,Lobsters,performance,Performance and optimization,To 30 Billion and Beyond,https://www.rdegges.com/2018/to-30-billion-and-beyond/
1005,Lobsters,performance,Performance and optimization,Multicore versus SIMD instructions: the “fasta” case study,https://lemire.me/blog/2018/01/02/multicore-versus-simd-instructions-the-fasta-case-study/
1006,Lobsters,performance,Performance and optimization,"Multiplying Matrices, Fast and Slow",http://richardstartin.uk/multiplying-matrices-fast-and-slow/
1007,Lobsters,performance,Performance and optimization,.Net Core 2.0 Performance Notes Revisited,http://anthonylloyd.github.io/blog/2017/12/30/dotnetcore-performance-part2
1008,Lobsters,performance,Performance and optimization,Latency mitigation strategies,https://danluu.com/latency-mitigation/
1009,Lobsters,performance,Performance and optimization,"PostgreSQL benchmark on FreeBSD, CentOS, Ubuntu Debian and openSUSE",https://redbyte.eu/en/blog/postgresql-benchmark-freebsd-centos-ubuntu-debian-opensuse/
1010,Lobsters,performance,Performance and optimization,"Clojure Numerics, Part 6 - More Linear Algebra Fun with Least Squares",http://dragan.rocks/articles/17/Clojure-Numerics-6-More-Linear-Algebra-Fun-with-Least-Squares
1011,Lobsters,performance,Performance and optimization,Computer latency: 1977-2017,https://danluu.com/input-lag/
1012,Lobsters,performance,Performance and optimization,CM-200 Connection Machine (2015),https://social.shorthand.com/EPCCsocial/nyAcT3A0Pf/cm-200-connection-machine
1013,Lobsters,performance,Performance and optimization,How to Print Integers Really Fast - Paul Khuong,http://www.pvk.ca/Blog/2017/12/22/appnexus-common-framework-its-out-also-how-to-print-integers-faster
1014,Lobsters,performance,Performance and optimization,An Introduction to Speculative Optimization in V8,https://ponyfoo.com/articles/an-introduction-to-speculative-optimization-in-v8
1015,Lobsters,performance,Performance and optimization,PCW Benchmarks,https://web.archive.org/web/20170312050304/http://www.geocities.ws/peterochocki/computers/pcwbm.html
1016,Lobsters,performance,Performance and optimization,Haskell Performance Debugging,http://www.parsonsmatt.org/2017/12/18/haskell_performance_debugging.html
1017,Lobsters,performance,Performance and optimization,Ruby Users: Be Wary of Net::HTTP,https://engineering.wework.com/ruby-users-be-wary-of-net-http-f284747288b2
1018,Lobsters,performance,Performance and optimization,Memory Matters: A special RAM edition of Dirty Coding Tricks,https://www.gamasutra.com/view/news/310660/Memory_Matters_A_special_RAM_edition_of_Dirty_Coding_Tricks.php
1019,Lobsters,performance,Performance and optimization,Tiny Titan,http://tinytitan.github.io/
1020,Lobsters,performance,Performance and optimization,JavaScript Startup Bytecode Cache,https://blog.mozilla.org/javascript/2017/12/12/javascript-startup-bytecode-cache/
1021,Lobsters,performance,Performance and optimization,Some SpiderMonkey optimizations in Firefox Quantum,https://jandemooij.nl/blog/2017/12/06/some-spidermonkey-optimizations-in-firefox-quantum/
1022,Lobsters,performance,Performance and optimization,Understanding Strict Aliasing,http://cellperformance.beyond3d.com/articles/2006/06/understanding-strict-aliasing.html
1023,Lobsters,performance,Performance and optimization,"Synthesis of Statically-Analyzable, Accelerator Networks from Sequential Programs (2016)",https://people.eecs.berkeley.edu/~johnw/papers/ICCAD2016.pdf
1024,Lobsters,performance,Performance and optimization,A Pinterest Progressive Web App Performance Case Study,https://medium.com/@addyosmani/a-pinterest-progressive-web-app-performance-case-study-3bd6ed2e6154
1025,Lobsters,performance,Performance and optimization,Jon Moore StrangeLoop 2017 Talk: Stop Rate Limiting! Capacity Management Done Right,https://www.youtube.com/watch?v=m64SWl9bfvk
1026,Lobsters,performance,Performance and optimization,AWS EC2 Virtualization 2017,http://www.brendangregg.com/blog/2017-11-29/aws-ec2-virtualization-2017.html
1027,Lobsters,performance,Performance and optimization,"Cache effects, illustrated",http://msinilo.pl/blog2/post/cache-effects-illustrated/
1028,Lobsters,performance,Performance and optimization,COST in the land of databases,https://github.com/frankmcsherry/blog/blob/master/posts/2017-09-23.md
1029,Lobsters,performance,Performance and optimization,Analyzing the Performance of Millions of SQL Queries When Each One is a Special Snowflake,https://heap.engineering/analyzing-performance-millions-sql-queries-one-special-snowflake/
1030,Lobsters,performance,Performance and optimization,Super Tiny Website Logos in SVG,https://shkspr.mobi/blog/2017/11/super-tiny-website-logos-in-svg/
1031,Lobsters,performance,Performance and optimization,"Benchmarks: GHCJS (Reflex, Miso) & Purescript (Pux, Thermite, Halogen)",https://medium.com/@saurabhnanda/benchmarks-fp-languages-libraries-for-front-end-development-a11af0542f7e
1032,Lobsters,performance,Performance and optimization,Writing fast and safe native Node.js modules with Rust,https://blog.risingstack.com/node-js-native-modules-with-rust/
1033,Lobsters,performance,Performance and optimization,Rope science part 12: minimal invalidation,https://github.com/google/xi-editor/blob/b2cfcd059780e9c5bdd05e55aa3118295ac3533f/doc/rope_science/rope_science_12.md
1034,Lobsters,performance,Performance and optimization,Desktop compositing latency is real and it annoys me,http://www.lofibucket.com/articles/dwm_latency.html
1035,Lobsters,performance,Performance and optimization,"Of SVG, Minification and Gzip",https://blog.usejournal.com/of-svg-minification-and-gzip-21cd26a5d007
1036,Lobsters,performance,Performance and optimization,Does anyone know of a way to throttle my own internet connection?,/s/mapnrm/does_anyone_know_way_throttle_my_own
1037,Lobsters,performance,Performance and optimization,Living on the Plateau,http://blog.cleancoder.com/uncle-bob/2017/11/18/OnThePlateau.html
1038,Lobsters,performance,Performance and optimization,Dolphin Emulator - To The Screen with Hybrid XFB,https://dolphin-emu.org/blog/2017/11/19/hybridxfb/
1039,Lobsters,performance,Performance and optimization,The wrong way of benchmarking the most efficient integer comparison function,https://blogs.msdn.microsoft.com/oldnewthing/20171117-00/?p=97416
1040,Lobsters,performance,Performance and optimization,2018: 120fps and no jank,https://dassur.ma/things/120fps/
1041,Lobsters,performance,Performance and optimization,How Discord Resizes 150 Million Images Every Day with Go and C++,https://blog.discordapp.com/how-discord-resizes-150-million-images-every-day-with-go-and-c-c9e98731c65d
1042,Lobsters,performance,Performance and optimization,"Go, don't collect my garbage",http://blog.cloudflare.com/go-dont-collect-my-garbage/
1043,Lobsters,performance,Performance and optimization,"Inlining qsort, and std::sort",https://agottem.com/blog/inlining_qsort_sort
1044,Lobsters,performance,Performance and optimization,On the dangers of Intel's frequency scaling,http://blog.cloudflare.com/on-the-dangers-of-intels-frequency-scaling/
1045,Lobsters,performance,Performance and optimization,Safety Implications of Serialization Timing in Autonomous Vehicles,https://polysync.io/download/polysync-safety_and_serialization.pdf
1046,Lobsters,performance,Performance and optimization,ARM Takes Wing: Qualcomm vs. Intel CPU comparison,http://blog.cloudflare.com/arm-takes-wing/
1047,Lobsters,performance,Performance and optimization,A Catalogue Of Optimizing Transformations (1972),http://grosser.es/publications/ellen-1971-a-catalogue-of-optimizing-transformations.pdf
1048,Lobsters,performance,Performance and optimization,Perfect locality and three epic SystemTap scripts,http://blog.cloudflare.com/perfect-locality-and-three-epic-systemtap-scripts/
1049,Lobsters,performance,Performance and optimization,Almost everything on computers is perceptually slower than it was in 1983,https://twitter.com/gravislizard/status/927593460642615296
1050,Lobsters,performance,Performance and optimization,Choose The Right Language To Save The Planet,https://yglukhov.github.io/Choose-The-Right-Language-To-Save-The-Planet/
1051,Lobsters,performance,Performance and optimization,Fast array slicing in Julia,http://ssfrr.com/2017/11/03/julia_fast_array_slicing/
1052,Lobsters,performance,Performance and optimization,Memory Conscious Programming in Ruby,https://gettalong.org/blog/2017/memory-conscious-programming-in-ruby.html
1053,Lobsters,performance,Performance and optimization,"Get ready: A new V8 is coming, Node.js performance is changing.",https://www.nearform.com/blog/node-js-is-getting-a-new-v8-with-turbofan/
1054,Lobsters,performance,Performance and optimization,Helping to make LuaJIT faster,http://blog.cloudflare.com/helping-to-make-luajit-faster/
1055,Lobsters,performance,Performance and optimization,Can You Afford It?: Real-world Web Performance Budgets,https://infrequently.org/2017/10/can-you-afford-it-real-world-web-performance-budgets/
1056,Lobsters,performance,Performance and optimization,The World's Fastest Scrabble Program (1988),https://www.cs.cmu.edu/afs/cs/academic/class/15451-s06/www/lectures/scrabble.pdf
1057,Lobsters,performance,Performance and optimization,Template Optimizations: Moon vs. Vue,https://blog.kabir.ml/posts/template-optimizations.html
1058,Lobsters,performance,Performance and optimization,How useful is the JavaScript Set,http://www.hugodaniel.pt/posts/2017-10-26-how-useful-is-the-javascript-set.html
1059,Lobsters,performance,Performance and optimization,A Guide to Faster Web App I/O and Data Operations with Streams,https://www.sitepen.com/blog/2017/10/02/a-guide-to-faster-web-app-io-and-data-operations-with-streams/
1060,Lobsters,performance,Performance and optimization,Big-O: how code slows as data grows,https://nedbatchelder.com/text/slowsgrows.html
1061,Lobsters,performance,Performance and optimization,FOIT vs. FOUT,"https://www.zachleat.com/foitfout/#4000,4000,4000,4000"
1062,Lobsters,performance,Performance and optimization,Efficient Immutable Collections,https://michael.steindorfer.name/publications/phd-thesis-efficient-immutable-collections.pdf
1063,Lobsters,performance,Performance and optimization,Benchmark on a Parallel Processing Monster,https://blog.2ndquadrant.com/parallel-monster-benchmark/
1064,Lobsters,performance,Performance and optimization,Oil Status Update: Parser Correctness and Performance,http://www.oilshell.org/blog/2017/10/24.html
1065,Lobsters,performance,Performance and optimization,Exploring lock-free Rust 1: Locks,https://morestina.net/blog/742/exploring-lock-free-rust-1-locks
1066,Lobsters,performance,Performance and optimization,Guide into OpenMP: Easy multithreading programming for C++,http://bisqwit.iki.fi/story/howto/openmp/
1067,Lobsters,performance,Performance and optimization,Fastest way to profile a method in Ruby,https://samsaffron.com/archive/2017/10/18/fastest-way-to-profile-a-method-in-ruby
1068,Lobsters,performance,Performance and optimization,You can only change what you can measure (Ember Macro Benchmarking),https://blog.201-created.com/you-can-only-change-what-you-can-measure-6be8826503a7
1069,Lobsters,performance,Performance and optimization,RyuJIT Just-in-Time Compiler Optimization Enhancements,https://blogs.msdn.microsoft.com/dotnet/2017/10/16/ryujit-just-in-time-compiler-optimization-enhancements/
1070,Lobsters,performance,Performance and optimization,When 500% Faster is Garbage,https://medium.com/@eranhammer/when-500-faster-is-garbage-553121a088c3
1071,Lobsters,performance,Performance and optimization,Keyboard latency,https://danluu.com/keyboard-latency/
1072,Lobsters,performance,Performance and optimization,Content Performance Policy,http://wicg.github.io/ContentPerformancePolicy/
1073,Lobsters,performance,Performance and optimization,Optimizing software in C++,http://agner.org/optimize/optimizing_cpp.pdf?10142017
1074,Lobsters,performance,Performance and optimization,8 JavaScript optimizations Closure Compiler can do conventional minifiers just can’t,https://medium.com/@thomasdeegan/10-optimizations-closure-compiler-can-do-and-uglify-friends-cant-6dca4232299f
1075,Lobsters,performance,Performance and optimization,A Little Story About the `yes` Unix Command,https://matthias-endler.de/2017/yes/
1076,Lobsters,performance,Performance and optimization,Virtual Machine Warmup Blows Hot and Cold,http://soft-dev.org/pubs/html/barrett_bolz-tereick_killick_mount_tratt__virtual_machine_warmup_blows_hot_and_cold_v6/
1077,Lobsters,performance,Performance and optimization,Handwriting Programs in J,https://www.hillelwayne.com/post/handwriting-j/
1078,Lobsters,performance,Performance and optimization,Fear and Loathing in Lock-Free Programming,https://medium.com/@tylerneely/fear-and-loathing-in-lock-free-programming-7158b1cdd50c
1079,Lobsters,performance,Performance and optimization,When is an Erlang iolist an iovec?,http://www.cipht.net/2017/01/15/when-is-an-iolist-an-iovec.html
1080,Lobsters,performance,Performance and optimization,"More Performance, More Gameplay",https://deplinenoise.files.wordpress.com/2017/09/fredriksson_cedec_2017_final.pdf
1081,Lobsters,performance,Performance and optimization,Why everyone fails at monitoring; and what you can do about it,http://codearcana.com/posts/2017/10/05/why-everyone-fails-at-monitoring-and-what-you-can-do-about-it.html
1082,Lobsters,performance,Performance and optimization,The true cost of zero cost exceptions (2013),https://mortoray.com/2013/09/12/the-true-cost-of-zero-cost-exceptions/
1083,Lobsters,performance,Performance and optimization,Are Jump Tables Always Fastest?,http://www.cipht.net/2017/10/03/are-jump-tables-always-fastest.html
1084,Lobsters,performance,Performance and optimization,Strange Loop - So You Wanna Go Fast?,https://www.youtube.com/watch?v=DJ4d_PZ6Gns
1085,Lobsters,performance,Performance and optimization,Netflix: Serving 100 Gbps from an Open Connect Appliance,https://medium.com/netflix-techblog/serving-100-gbps-from-an-open-connect-appliance-cdb51dda3b99
1086,Lobsters,performance,Performance and optimization,10 Cool SQL Optimisations That do not Depend on the Cost Model,https://blog.jooq.org/2017/09/28/10-cool-sql-optimisations-that-do-not-depend-on-the-cost-model/
1087,Lobsters,performance,Performance and optimization,Optimize the performance of important tasks by delaying background-tasks,https://github.com/pubkey/custom-idle-queue
1088,Lobsters,performance,Performance and optimization,Stream VByte: breaking new speed records for integer compression,https://lemire.me/blog/2017/09/27/stream-vbyte-breaking-new-speed-records-for-integer-compression/
1089,Lobsters,performance,Performance and optimization,Bloom Filters for the Perplexed,https://sagi.io/2017/07/bloom-filters-for-the-perplexed/
1090,Lobsters,performance,Performance and optimization,"Apache Arrow and the ""10 Things I Hate About pandas""",http://wesmckinney.com/blog/apache-arrow-pandas-internals/
1091,Lobsters,performance,Performance and optimization,Experimenting with Small Buffer Optimization for C++ Lambdas,https://hackernoon.com/experimenting-with-small-buffer-optimization-for-c-lambdas-d5b703fb47e4
1092,Lobsters,performance,Performance and optimization,Mison: A Fast JSON Parser for Data Analytics,http://www.vldb.org/pvldb/vol10/p1118-li.pdf
1093,Lobsters,performance,Performance and optimization,A Crash Course in Modern Hardware by Cliff Click,https://www.youtube.com/watch?v=OFgxAFdxYAQ
1094,Lobsters,performance,Performance and optimization,Allocation Efficiency in High-Performance Go Services,https://segment.com/blog/allocation-efficiency-in-high-performance-go-services/
1095,Lobsters,performance,Performance and optimization,Ultrafast single TCP packet audio/visual experience,https://github.com/diracdeltas/FastestWebsiteEver
1096,Lobsters,performance,Performance and optimization,How I cut my Webpack bundle size in half,http://jmduke.com/posts/how-i-cut-my-webpack-bundle-size-in-half/
1097,Lobsters,performance,Performance and optimization,"Building the DOM faster: speculative parsing, async, defer and preload",https://hacks.mozilla.org/2017/09/building-the-dom-faster-speculative-parsing-async-defer-and-preload/
1098,Lobsters,performance,Performance and optimization,Power Struggles: Revisiting the RISC vs CISC Debate on Contemporary ARM and x86 Architectures (2013),https://research.cs.wisc.edu/vertical/papers/2013/hpca13-isa-power-struggles.pdf
1099,Lobsters,performance,Performance and optimization,How 3rd Party Scripts can be performant citizens on the web,https://www.twnsnd.com/posts/performant_third_party_scripts.html
1100,Lobsters,performance,Performance and optimization,Fixing Google Analytics caching issue,https://www.silvestarbistrovic.from.hr/articles/fixing-google-analytics-caching-issue/
1101,Lobsters,performance,Performance and optimization,Optimizing web servers for high throughput and low latency,http://blogs.dropbox.com/tech/2017/09/optimizing-web-servers-for-high-throughput-and-low-latency/
1102,Lobsters,performance,Performance and optimization,Using Google Lighthouse to monitor webpage performance,https://builtvisible.com/using-google-lighthouse-to-monitor-webpage-performance/
1103,Lobsters,performance,Performance and optimization,Go does not inline functions when it should,https://lemire.me/blog/2017/09/05/go-does-not-inline-functions-when-it-should/
1104,Lobsters,performance,Performance and optimization,Studio: a productive environment for working on your programs.,https://hydra.snabb.co/build/2037769/download/1/studio.html
1105,Lobsters,performance,Performance and optimization,5 New Java Anomaly Detection Tools You Should Know,http://blog.takipi.com/5-new-java-anomaly-detection-tools-you-should-know/
1106,Lobsters,performance,Performance and optimization,Mison: A Fast JSON Parser for Data Analytics,https://www.microsoft.com/en-us/research/publication/mison-fast-json-parser-data-analytics/
1107,Lobsters,performance,Performance and optimization,"The curious connection between warehouse maps, movie recommendations, and structural biology",http://multithreaded.stitchfix.com/blog/2017/08/31/warehouse-layouts/
1108,Lobsters,performance,Performance and optimization,JOIN Elimination: An Essential Optimiser Feature for Advanced SQL Usage,https://blog.jooq.org/2017/09/01/join-elimination-an-essential-optimiser-feature-for-advanced-sql-usage/
1109,Lobsters,performance,Performance and optimization,Bootstrapping the Web with Scala Native (Part 1),http://www.spantree.net/blog/2017/08/29/bootstrapping-web-scala-native.html
1110,Lobsters,performance,Performance and optimization,Reducing Python's startup time,https://lwn.net/Articles/730915/
1111,Lobsters,performance,Performance and optimization,The Illusion of Speed,https://paulbakaus.com/tutorials/performance/the-illusion-of-speed/
1112,Lobsters,performance,Performance and optimization,Compiler Optimization for Energy Efficiency,https://fylux.github.io/2017/08/16/Compiler_Optimization_Energy_Efficiency/
1113,Lobsters,performance,Performance and optimization,An adventure in trying to optimize math.Atan2 with Go assembly,http://agniva.me/go/2017/08/27/fun-with-go-assembly.html
1114,Lobsters,performance,Performance and optimization,Optimizing latency of an Arduino MIDI controller,http://www.jonnor.com/2017/04/optimizing-arduino-midi-controller-latency/
1115,Lobsters,performance,Performance and optimization,Async Iterators: These Promises Are Killing My Performance,https://medium.com/netscape/async-iterators-these-promises-are-killing-my-performance-4767df03d85b
1116,Lobsters,performance,Performance and optimization,Performance comparison: linear search vs binary search.,https://dirtyhandscoding.wordpress.com/2017/08/25/performance-comparison-linear-search-vs-binary-search/
1117,Lobsters,performance,Performance and optimization,Satellite Image Segmentation: a Workflow with U-Net,https://vooban.com/en/tips-articles-geek-stuff/satellite-image-segmentation-workflow-with-u-net/
1118,Lobsters,performance,Performance and optimization,Compile Once Debug Twice: Picking a Compiler for Debuggability (1/3),https://backtrace.io/blog/compile-once-debug-twice-picking-a-compiler-for-debuggability-1of3/
1119,Lobsters,performance,Performance and optimization,Stingray Engine Code Walkthrough,http://www.youtube.com/playlist?list=PLUxuJBZBzEdxzVpoBQY9agA8JUgNkeYSV
1120,Lobsters,performance,Performance and optimization,Applying Optimizations for Dynamically-typed Languages to Java,http://www.ssw.uni-linz.ac.at/Research/Papers/Marr/manlang17-grimmer-et-al-applying-optimizations-for-dynamically-typed-languages-to-java.pdf
1121,Lobsters,performance,Performance and optimization,Software optimization resources,http://agner.org/optimize/
1122,Lobsters,performance,Performance and optimization,How I once saved half a million dollars with a one character code change,https://medium.com/ncr-edinburgh/how-i-once-saved-half-a-million-dollars-with-a-one-character-code-change-31f3fdca1f68
1123,Lobsters,performance,Performance and optimization,Transparent Hugepages: measuring the performance impact,https://alexandrnikitin.github.io/blog/transparent-hugepages-measuring-the-performance-impact/
1124,Lobsters,performance,Performance and optimization,Rust performance: finishing the job,http://mikejsavage.co.uk/blog/rust-performance-finishing-the-job.html
1125,Lobsters,performance,Performance and optimization,Rust Performance: A story featuring perf and flamegraph on Linux,http://blog.adamperry.me/rust/2016/07/24/profiling-rust-perf-flamegraph/
1126,Lobsters,performance,Performance and optimization,Nesflix (2015),http://blogofsomeguy.com/a/2015-03-22/nesflix.html
1127,Lobsters,performance,Performance and optimization,Pony Performance Cheatsheet,https://www.ponylang.org/reference/pony-performance-cheatsheet/
1128,Lobsters,performance,Performance and optimization,Optimizing polynomial hash functions (Java vs. Swift),http://lemire.me/blog/2017/08/11/optimizing-polynomial-hash-functions-java-vs-swift/
1129,Lobsters,performance,Performance and optimization,Hyperopt tutorial for Optimizing Neural Networks' Hyperparameters,http://vooban.com/en/tips-articles-geek-stuff/hyperopt-tutorial-for-optimizing-neural-networks-hyperparameters/
1130,Lobsters,performance,Performance and optimization,Serverless Shootout - Comparing Serverless Function Performance,http://blog.backand.com/serverless-shootout/
1131,Lobsters,performance,Performance and optimization,"Scala Vector operations aren't ""Effectively Constant"" time",http://www.lihaoyi.com/post/ScalaVectoroperationsarentEffectivelyConstanttime.html
1132,Lobsters,performance,Performance and optimization,Objective-C Implementation and Performance Details for C and C++ Programmers,https://swolchok.github.io/objcperf/
1133,Lobsters,performance,Performance and optimization,The Critical Request,https://css-tricks.com/the-critical-request/
1134,Lobsters,performance,Performance and optimization,Binary AST proposal for ECMAScript,https://github.com/syg/ecmascript-binary-ast
1135,Lobsters,performance,Performance and optimization,Is WEBrick Webscale?,https://schneems.com/2017/08/01/is-webrick-webscale/
1136,Lobsters,performance,Performance and optimization,Reflecting on performance testing,http://aakinshin.net/blog/post/reflecting-on-performance-testing/
1137,Lobsters,performance,Performance and optimization,The Computer Language Benchmarks Game,https://benchmarksgame.alioth.debian.org/
1138,Lobsters,performance,Performance and optimization,Image load time optimization,https://blog.uploadcare.com/accelerate-your-images-by-9x-with-image-cdn-6b63aa27e639
1139,Lobsters,performance,Performance and optimization,Faster command line tools with Go,https://aadrake.com/posts/2017-05-29-faster-command-line-tools-with-go.html
1140,Lobsters,performance,Performance and optimization,Where’s all my CPU and memory gone? The answer: Slack,https://medium.com/@matt.at.ably/wheres-all-my-cpu-and-memory-gone-the-answer-slack-9e5c39207cab
1141,Lobsters,performance,Performance and optimization,Typing With Pleasure,https://pavelfatin.com/typing-with-pleasure/
1142,Lobsters,performance,Performance and optimization,Performance and Usage Implications of Custom Fonts,https://developer.akamai.com/blog/2017/07/25/performance-usage-implications-custom-fonts/
1143,Lobsters,performance,Performance and optimization,The slow currentTimeMillis(),http://pzemtsov.github.io/2017/07/23/the-slow-currenttimemillis.html
1144,Lobsters,performance,Performance and optimization,Biased Benchmarks - honesty is hard,http://matthewrocklin.com/blog/work/2017/03/09/biased-benchmarks
1145,Lobsters,performance,Performance and optimization,SymSpell vs. BK-tree: 100x faster fuzzy string search & spell checking,https://medium.com/@wolfgarbe/symspell-vs-bk-tree-100x-faster-fuzzy-string-search-spell-checking-c4f10d80a078
1146,Lobsters,performance,Performance and optimization,Phoronix SciMark benchmarking results,https://kristerw.blogspot.com/2017/07/phoronix-scimark-benchmarking-results.html
1147,Lobsters,performance,Performance and optimization,Episode 90 - Benchmarking and Refactoring the content_for View Helper,https://www.driftingruby.com/episodes/benchmarking-and-refactoring-the-content_for-view-helper
1148,Lobsters,performance,Performance and optimization,Kumu Preps Full Duplex Chip,http://www.eetimes.com/document.asp?doc_id=1332045
1149,Lobsters,performance,Performance and optimization,The New Firefox and Ridiculous Numbers of Tabs,https://metafluff.com/2017/07/21/i-am-a-tab-hoarder/
1150,Lobsters,performance,Performance and optimization,QML vs. C++ for application startup time,https://woboq.com/blog/qml-vs-cpp-for-application-startup-time.html
1151,Lobsters,performance,Performance and optimization,"Pillow-SIMD – Fast, production-ready image resize for x86",https://blog.uploadcare.com/the-fastest-production-ready-image-resize-out-there-part-0-7c974d520ad9
1152,Lobsters,performance,Performance and optimization,Memory Alignment and Performance,https://fylux.github.io/2017/07/11/Memory_Alignment/
1153,Lobsters,performance,Performance and optimization,bcache and lvmcache,http://strugglers.net/~andy/blog/2017/07/19/bcache-and-lvmcache/
1154,Lobsters,performance,Performance and optimization,Lock-Free Work Stealing,https://blog.molecular-matters.com/2015/08/24/job-system-2-0-lock-free-work-stealing-part-1-basics/
1155,Lobsters,performance,Performance and optimization,Terminal and Shell Performance,https://danluu.com/term-latency/
1156,Lobsters,performance,Performance and optimization,How to be proactive about performance,https://pocketgophers.com/proactive-performance/
1157,Lobsters,performance,Performance and optimization,How I Reduced my DB Server Load by 80%,https://schneems.com/2017/07/18/how-i-reduced-my-db-server-load-by-80/
1158,Lobsters,performance,Performance and optimization,Running 4558 tests in 1m 55sec (or saving 50 hours/week),https://engineering.classdojo.com/blog/2017/05/21/Running-4558-tests-in-1m-55sec/
1159,Lobsters,performance,Performance and optimization,complex arithmetic is complicated,https://medium.com/@smcallis_71148/complex-arithmetic-is-complicated-873ec0c69fc5
1160,Lobsters,performance,Performance and optimization,reduce() — 10% faster with no start value.,https://medium.com/@samuelpouyt/reduce-faster-with-no-starting-value-3d697c9464f9
1161,Lobsters,performance,Performance and optimization,Smooth as Butter: Achieving 60 FPS Animations with CSS3,https://medium.com/outsystems-experts/how-to-achieve-60-fps-animations-with-css3-db7b98610108
1162,Lobsters,performance,Performance and optimization,On benchmarking,https://ruudvanasseldonk.com/2017/07/09/on-benchmarking
1163,Lobsters,performance,Performance and optimization,Glibc Enables A Per-Thread Cache For Malloc - Big Performance Win,https://www.phoronix.com/scan.php?page=news_item&px=glibc-malloc-thread-cache
1164,Lobsters,performance,Performance and optimization,How to optimize the PHP garbage collector usage to improve memory and performance,https://tideways.io/profiler/blog/how-to-optimize-the-php-garbage-collector-usage-to-improve-memory-and-performance
1165,Lobsters,performance,Performance and optimization,Quick Tip: Speed up your Python data processing scripts with Process Pools,https://medium.com/@ageitgey/quick-tip-speed-up-your-python-data-processing-scripts-with-process-pools-cf275350163a
1166,Lobsters,performance,Performance and optimization,Notes on fusion,http://teh.id.au/posts/2017/06/30/notes-on-fusion/index.html
1167,Lobsters,performance,Performance and optimization,Materialized View Strategies Using PostgreSQL,https://hashrocket.com/blog/posts/materialized-view-strategies-using-postgresql
1168,Lobsters,performance,Performance and optimization,Up to x141 Faster Crypto using libsodium Rust Bindings in Node,https://medium.com/@wireapp/speeding-up-crypto-on-wire-desktop-apps-3ff37fc98c3f
1169,Lobsters,performance,Performance and optimization,GCN performance tweets,http://developer.amd.com/wordpress/media/2013/05/GCNPerformanceTweets.pdf
1170,Lobsters,performance,Performance and optimization,Firefox own linker on Android,https://dustri.org/b/firefox-own-linker-on-android.html
1171,Lobsters,performance,Performance and optimization,Improvements to the Xerox Alto Mandelbrot drop runtime from 1 hour to 9 minutes,http://www.righto.com/2017/06/improvements-to-xerox-alto-mandelbrot.html
1172,Lobsters,performance,Performance and optimization,Morton encoding/decoding through bit interleaving,http://www.forceflow.be/2013/10/07/morton-encodingdecoding-through-bit-interleaving-implementations/
1173,Lobsters,performance,Performance and optimization,"Thinking Parallel, Part II: Tree Traversal on the GPU",https://devblogs.nvidia.com/parallelforall/thinking-parallel-part-ii-tree-traversal-gpu/
1174,Lobsters,performance,Performance and optimization,SPEC CPU® 2017,https://www.spec.org/cpu2017/
1175,Lobsters,performance,Performance and optimization,A Tale of Slow Pagination,https://schneems.com/2017/06/22/a-tale-of-slow-pagination/
1176,Lobsters,performance,Performance and optimization,Designing for performance: A data-informed approach for Quantum development,https://hacks.mozilla.org/2017/06/designing-for-performance-a-data-informed-approach-for-quantum-development/
1177,Lobsters,performance,Performance and optimization,On Competing with C Using Haskell,https://two-wrongs.com/on-competing-with-c-using-haskell
1178,Lobsters,performance,Performance and optimization,"Choo, architecture & performance",https://medium.com/@yoshuawuyts/choo-architecture-performance-f6f0c44e8a6a
1179,Lobsters,performance,Performance and optimization,Is It Snappy?,http://isitsnappy.com/
1180,Lobsters,performance,Performance and optimization,Life in the Fast Lane (D Garbage Collection),https://dlang.org/blog/2017/06/16/life-in-the-fast-lane/
1181,Lobsters,performance,Performance and optimization,Improving Linux System Performance with I/O Scheduler Tuning,https://blog.codeship.com/linux-io-scheduler-tuning/
1182,Lobsters,performance,Performance and optimization,Nanotrusting the Nanotime,https://shipilev.net/blog/2014/nanotrusting-nanotime/
1183,Lobsters,performance,Performance and optimization,Low level thinking in high level shading languages,http://www.humus.name/Articles/Persson_LowLevelThinking.pdf
1184,Lobsters,performance,Performance and optimization,The Implementation of Frustum Culling in Stingray,http://bitsquid.blogspot.com/2016/10/the-implementation-of-frustum-culling.html
1185,Lobsters,performance,Performance and optimization,View frustum culling,https://fgiesen.wordpress.com/2010/10/17/view-frustum-culling/
1186,Lobsters,performance,Performance and optimization,Rust Performance Pitfalls,https://llogiq.github.io/2017/06/01/perf-pitfalls.html
1187,Lobsters,performance,Performance and optimization,Speeding up builds on FreeBSD,https://xmj.github.io/articles/sysadmin/builds_ccache_memcached.html
1188,Lobsters,performance,Performance and optimization,Performance Improvements in .NET Core,https://blogs.msdn.microsoft.com/dotnet/2017/06/07/performance-improvements-in-net-core/
1189,Lobsters,performance,Performance and optimization,Linux Performance (updated),http://www.brendangregg.com/linuxperf.html
1190,Lobsters,performance,Performance and optimization,A day without Javascript,http://sonniesedge.co.uk/blog/a-day-without-javascript
1191,Lobsters,performance,Performance and optimization,Making Photos Smaller without Quality Loss,https://engineeringblog.yelp.com/2017/06/making-photos-smaller.html
1192,Lobsters,performance,Performance and optimization,Are Mutable References in Haskell Fast?,https://medium.com/@jonathangfischoff/are-mutable-references-in-haskell-fast-f095f4144977
1193,Lobsters,performance,Performance and optimization,Postage faster than PGadmin3 and PGAdmin4 again!,/s/40iqug/postage_faster_than_pgadmin3_pgadmin4
1194,Lobsters,performance,Performance and optimization,Facts about Electron Performance (from the Postage for PostgreSQL project),https://github.com/workflowproducts/postage/blob/master/Facts_About_Electron_Performance.md
1195,Lobsters,performance,Performance and optimization,Mosaic: processing a trillion-edge graph on a single machine,https://blog.acolyer.org/2017/05/30/mosaic-processing-a-trillion-edge-graph-on-a-single-machine/
1196,Lobsters,performance,Performance and optimization,Tag suggestion: performance/optimisation,/s/kmhpwk/tag_suggestion_performance
