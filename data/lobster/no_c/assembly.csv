ID,Source,Tag_Code,Tag_Name,Title,Url
1,Lobsters,assembly,Assembly Language,FAT32 Filesystem for the 65c02,https://www.pagetable.com/?p=1416
2,Lobsters,assembly,Assembly Language,Hiding messages in x86 binaries using semantic duals,https://blog.yossarian.net/2020/08/16/Hiding-messages-in-x86-binaries-using-semantic-duals
3,Lobsters,assembly,Assembly Language,"Hello ""Hello world!""",https://blog.jfo.click/hello-hello-world/
4,Lobsters,assembly,Assembly Language,Can we do better than our C compiler?,https://briancallahan.net/blog/20200812.html
5,Lobsters,assembly,Assembly Language,QEMU version 5.1.0 released,https://www.qemu.org/2020/08/11/qemu-5-1-0/
6,Lobsters,assembly,Assembly Language,History of Computer Architecture and RISC (Dave Patterson),https://www.youtube.com/watch?v=1FtEGIp3a_M
7,Lobsters,assembly,Assembly Language,Writing Efficient Itanium 2 Assembly Code (2010),https://yurichev.com/mirrors/RE/itanium.pdf
8,Lobsters,assembly,Assembly Language,ll: Linux_Logo in assembly language (2017),http://www.deater.net/weave/vmwprod/asm/ll/ll.html
9,Lobsters,assembly,Assembly Language,Let's code a small utility in assembly to resize Hearthstone,https://robertovaccari.com/blog/2020_08_06_hs_resizer/
10,Lobsters,assembly,Assembly Language,How the original Pascal source code for ZZT was reconstructed,https://blog.asie.pl/2020/08/reconstructing-zzt/
11,Lobsters,assembly,Assembly Language,A gentle intro to assembly with Rust,https://lfn3.net/2020/08/03/a-gentle-intro-to-assembly-with-rust/
12,Lobsters,assembly,Assembly Language,RISC-V Instruction Set Simulator Built For Education,https://github.com/vmmc2/Vulcan
13,Lobsters,assembly,Assembly Language,An Intel 8080 assembler and online simulator,https://eli.thegreenplace.net/2020/an-intel-8080-assembler-and-online-simulator/
14,Lobsters,assembly,Assembly Language,ice-forth: A self-hosted Forth on the 6502 for creating NES cartridges,https://github.com/RussellSprouts/ice-forth
15,Lobsters,assembly,Assembly Language,Will RISC-V Revolutionize Computing?,https://cacm.acm.org/magazines/2020/5/244325-will-risc-v-revolutionize-computing/fulltext
16,Lobsters,assembly,Assembly Language,Branchless Programming: Why “If” is Sloowww… and what we can do about it,https://www.youtube.com/watch?v=bVJ-mWWL7cE
17,Lobsters,assembly,Assembly Language,Why is processing a sorted array faster than processing an unsorted array?,https://stackoverflow.com/questions/11227809/why-is-processing-a-sorted-array-faster-than-processing-an-unsorted-array
18,Lobsters,assembly,Assembly Language,SNES Doom Source (1995),https://github.com/RandalLinden/DOOM-FX
19,Lobsters,assembly,Assembly Language,PopCount on ARM64 in Go Assembler,https://barakmich.dev/posts/popcnt-arm64-go-asm/
20,Lobsters,assembly,Assembly Language,PS/2 keyboard on a 65C02 breadboard computer,https://jacob.jkrall.net/ps2-on-65c02
21,Lobsters,assembly,Assembly Language,Tin can phone modem,https://www.mikekohn.net/micro/tin_can_phone_modem.php
22,Lobsters,assembly,Assembly Language,"An iOS, iPadOS, and macOS application reference manual for ARM assembly instructions",https://github.com/evilpenguin/ARMRef
23,Lobsters,assembly,Assembly Language,EsoLangVM Compiler Infrastructure,https://github.com/shinh/elvm
24,Lobsters,assembly,Assembly Language,"Alpha Waves, the first 3D platformer ever",https://fosdem.org/2020/schedule/event/retro_alpha_waves_1st_3d_platformer_ever/
25,Lobsters,assembly,Assembly Language,Reverse Engineering Snapchat (Part II): Deobfuscating the Undeobfuscatable,https://hot3eed.github.io/2020/06/22/snap_p2_deobfuscation.html
26,Lobsters,assembly,Assembly Language,FAT32 Filesystem for the 65c02,https://www.pagetable.com/?p=1416
27,Lobsters,assembly,Assembly Language,Hiding messages in x86 binaries using semantic duals,https://blog.yossarian.net/2020/08/16/Hiding-messages-in-x86-binaries-using-semantic-duals
28,Lobsters,assembly,Assembly Language,"Hello ""Hello world!""",https://blog.jfo.click/hello-hello-world/
29,Lobsters,assembly,Assembly Language,Can we do better than our C compiler?,https://briancallahan.net/blog/20200812.html
30,Lobsters,assembly,Assembly Language,QEMU version 5.1.0 released,https://www.qemu.org/2020/08/11/qemu-5-1-0/
31,Lobsters,assembly,Assembly Language,History of Computer Architecture and RISC (Dave Patterson),https://www.youtube.com/watch?v=1FtEGIp3a_M
32,Lobsters,assembly,Assembly Language,Writing Efficient Itanium 2 Assembly Code (2010),https://yurichev.com/mirrors/RE/itanium.pdf
33,Lobsters,assembly,Assembly Language,ll: Linux_Logo in assembly language (2017),http://www.deater.net/weave/vmwprod/asm/ll/ll.html
34,Lobsters,assembly,Assembly Language,Let's code a small utility in assembly to resize Hearthstone,https://robertovaccari.com/blog/2020_08_06_hs_resizer/
35,Lobsters,assembly,Assembly Language,How the original Pascal source code for ZZT was reconstructed,https://blog.asie.pl/2020/08/reconstructing-zzt/
36,Lobsters,assembly,Assembly Language,A gentle intro to assembly with Rust,https://lfn3.net/2020/08/03/a-gentle-intro-to-assembly-with-rust/
37,Lobsters,assembly,Assembly Language,RISC-V Instruction Set Simulator Built For Education,https://github.com/vmmc2/Vulcan
38,Lobsters,assembly,Assembly Language,An Intel 8080 assembler and online simulator,https://eli.thegreenplace.net/2020/an-intel-8080-assembler-and-online-simulator/
39,Lobsters,assembly,Assembly Language,ice-forth: A self-hosted Forth on the 6502 for creating NES cartridges,https://github.com/RussellSprouts/ice-forth
40,Lobsters,assembly,Assembly Language,Will RISC-V Revolutionize Computing?,https://cacm.acm.org/magazines/2020/5/244325-will-risc-v-revolutionize-computing/fulltext
41,Lobsters,assembly,Assembly Language,Branchless Programming: Why “If” is Sloowww… and what we can do about it,https://www.youtube.com/watch?v=bVJ-mWWL7cE
42,Lobsters,assembly,Assembly Language,Why is processing a sorted array faster than processing an unsorted array?,https://stackoverflow.com/questions/11227809/why-is-processing-a-sorted-array-faster-than-processing-an-unsorted-array
43,Lobsters,assembly,Assembly Language,SNES Doom Source (1995),https://github.com/RandalLinden/DOOM-FX
44,Lobsters,assembly,Assembly Language,PopCount on ARM64 in Go Assembler,https://barakmich.dev/posts/popcnt-arm64-go-asm/
45,Lobsters,assembly,Assembly Language,PS/2 keyboard on a 65C02 breadboard computer,https://jacob.jkrall.net/ps2-on-65c02
46,Lobsters,assembly,Assembly Language,Tin can phone modem,https://www.mikekohn.net/micro/tin_can_phone_modem.php
47,Lobsters,assembly,Assembly Language,"An iOS, iPadOS, and macOS application reference manual for ARM assembly instructions",https://github.com/evilpenguin/ARMRef
48,Lobsters,assembly,Assembly Language,EsoLangVM Compiler Infrastructure,https://github.com/shinh/elvm
49,Lobsters,assembly,Assembly Language,"Alpha Waves, the first 3D platformer ever",https://fosdem.org/2020/schedule/event/retro_alpha_waves_1st_3d_platformer_ever/
50,Lobsters,assembly,Assembly Language,Reverse Engineering Snapchat (Part II): Deobfuscating the Undeobfuscatable,https://hot3eed.github.io/2020/06/22/snap_p2_deobfuscation.html
51,Lobsters,assembly,Assembly Language,Micro benchmarks - what can possibly go wrong,https://genodians.org/skalk/2020-06-18-micro-benchmarking
52,Lobsters,assembly,Assembly Language,Reverse Engineering Snapchat (Part I): Obfuscation Techniques,https://hot3eed.github.io/snap_part1_obfuscations.html
53,Lobsters,assembly,Assembly Language,AONDEMO: Making a demo for an old phone,https://habr.com/en/post/486010/
54,Lobsters,assembly,Assembly Language,NetBSD code study,http://silas.net.br/codereading/netbsd-code.html
55,Lobsters,assembly,Assembly Language,seL4 is verified on RISC-V,https://microkerneldude.wordpress.com/2020/06/09/sel4-is-verified-on-risc-v/
56,Lobsters,assembly,Assembly Language,The radix 2^51 trick,https://www.chosenplaintext.ca/articles/radix-2-51-trick.html
57,Lobsters,assembly,Assembly Language,Using Z3 Theorem on AVR Firmware,https://medium.com/@ryancor/using-z3-theorem-on-avr-firmware-c6d2f45ac9c2
58,Lobsters,assembly,Assembly Language,"AVX-512 Mask Registers, Again",https://travisdowns.github.io/blog/2020/05/26/kreg2.html
59,Lobsters,assembly,Assembly Language,Adventures of porting MUSL to PS4,https://dayzerosec.com/posts/adventures-of-porting-musl-to-ps4/
60,Lobsters,assembly,Assembly Language,Deconstruction of a 16 byte demo part 1,https://www.jsalter.net/posts/deconstruction-of-a-16-byte-demo-part-1
61,Lobsters,assembly,Assembly Language,Assembly’s Perspective,https://blog.stephenmarz.com/2020/05/20/assemblys-perspective/
62,Lobsters,assembly,Assembly Language,Let's Learn x86-64 Assembly pt. 2 - We're Writing a Virtual Machine,https://gpfault.net/posts/asm-tut-2.txt.html
63,Lobsters,assembly,Assembly Language,ethflop - a network-backed floppy emulator for DOS,http://ethflop.sourceforge.net/
64,Lobsters,assembly,Assembly Language,"AVX -> SSE transition penalties, VEX encoding, and why they matter",https://john-h-k.github.io/VexTransitionPenalties.html
65,Lobsters,assembly,Assembly Language,Neo-Geo Assembly Programming for the Absolute Beginner,https://www.ajworld.net/neogeodev/beginner/#intro
66,Lobsters,assembly,Assembly Language,Branch Prediction and the Performance of Interpreters - Don't Trust Folklore,https://hal.inria.fr/hal-01100647
67,Lobsters,assembly,Assembly Language,Graphics Programming Black Book,http://www.drdobbs.com/parallel/graphics-programming-black-book/184404919
68,Lobsters,assembly,Assembly Language,Memories - SizeCoding,http://www.sizecoding.org/wiki/Memories
69,Lobsters,assembly,Assembly Language,Internals of Zabavno the x86 emulator,https://weinholt.se/articles/zabavno-pc-emulator/
70,Lobsters,assembly,Assembly Language,Metaprogramming in Flat Assembler,https://gpfault.net/posts/asm-tut-1.txt.html
71,Lobsters,assembly,Assembly Language,I translated a simple C program to x86_64 and it was slower,https://ecc-comp.blogspot.com/2020/04/i-translated-simple-c-program-to-x8664.html
72,Lobsters,assembly,Assembly Language,"DTACK GROUNDED Archive (about the 68000, 1981-85)",http://www.easy68k.com/paulrsm/dg/
73,Lobsters,assembly,Assembly Language,"Who needs the address wraparound, anyway? (2011)",http://www.os2museum.com/wp/who-needs-the-address-wraparound-anyway/
74,Lobsters,assembly,Assembly Language,Let's Learn x86-64 Assembly! Part 0 - Setup and First Steps,https://gpfault.net/posts/asm-tut-0.txt.html
75,Lobsters,assembly,Assembly Language,Embedding of binary data into programs,https://www.devever.net/~hl/incbin
76,Lobsters,assembly,Assembly Language,Assembly Tutorials: Learn Assembly Programming... With ChibiAkumas,https://www.assemblytutorial.com/
77,Lobsters,assembly,Assembly Language,flat assembler: an open source assembly language compiler,https://flatassembler.net/
78,Lobsters,assembly,Assembly Language,KolibriOS official site,https://kolibrios.org/en/
79,Lobsters,assembly,Assembly Language,Clocking a 6502 to 15GHz (!),https://scarybeastsecurity.blogspot.com/2020/04/clocking-6502-to-15ghz.html
80,Lobsters,assembly,Assembly Language,Fast Fully Homomorphic Encryption Library over the Torus,https://github.com/tfhe/tfhe
81,Lobsters,assembly,Assembly Language,256 byte MSDOS intro,https://www.youtube.com/watch?v=Imquk_3oFf4
82,Lobsters,assembly,Assembly Language,Synthesizing optimal 8051 code,https://lab.whitequark.org/notes/2020-04-06/synthesizing-optimal-8051-code/
83,Lobsters,assembly,Assembly Language,65816 Basics,https://nesdoug.com/2020/04/03/65816-basics/
84,Lobsters,assembly,Assembly Language,The Infinitely Profitable Program (2010),http://peetm.com/blog/?p=55
85,Lobsters,assembly,Assembly Language,Some thoughts on simple state machines using x86_64 / assembly,https://ecc-comp.blogspot.com/2020/03/some-thoughts-on-simple-state-machines.html
86,Lobsters,assembly,Assembly Language,IBM PC Serial bootstrap from DOS via typing a com file,http://ftp.nluug.nl/networking/kermit/a/tcomtxt.asm
87,Lobsters,assembly,Assembly Language,Undocumented CPU behavior: analyzing undocumented opcodes on Intel x86-64,https://www.cattius.com/images/undocumented-cpu-behavior.pdf
88,Lobsters,assembly,Assembly Language,Plop Boot Manager Six,https://www.plop.at/en/pbm6/blog.html
89,Lobsters,assembly,Assembly Language,Applied Reverse Engineering: Accelerated Assembly [P1],https://revers.engineering/applied-re-accelerated-assembly-p1/
90,Lobsters,assembly,Assembly Language,Amiga Machine Code Course,http://www.markwrobel.dk/project/amigamachinecode/
91,Lobsters,assembly,Assembly Language,"A ""living"" Linux process with no memory",https://github.com/izabera/zeromaps
92,Lobsters,assembly,Assembly Language,Hello World UEFI application,https://johv.dk/blog/bare-metal-assembly-tutorial.html
93,Lobsters,assembly,Assembly Language,RetroBrew Computers,https://www.retrobrewcomputers.org/
94,Lobsters,assembly,Assembly Language,EAX x86 Register: Meaning and History,https://keleshev.com/eax-x86-register-meaning-and-history/
95,Lobsters,assembly,Assembly Language,ARM GCC Inline Assembler Cookbook,http://www.ethernut.de/en/documents/arm-inline-asm.html
96,Lobsters,assembly,Assembly Language,Exploring calling conventions with x86 assembly,https://apoorvaj.io/exploring-calling-conventions/
97,Lobsters,assembly,Assembly Language,Why would you want more than machine language?,https://blog.deta.sh/assembly/
98,Lobsters,assembly,Assembly Language,When Bloom filters don't bloom,https://blog.cloudflare.com/when-bloom-filters-dont-bloom/
99,Lobsters,assembly,Assembly Language,openkick: incomplete implementation of AmigaOS's exec.library,https://github.com/mooli/openkick
100,Lobsters,assembly,Assembly Language,Writing a GHIDRA Loader: STM32 Edition,http://wrongbaud.github.io/writing-a-ghidra-loader/
101,Lobsters,assembly,Assembly Language,Does register selection matter to performance on x86 CPUs?,https://fiigii.com/2020/02/16/Does-register-selection-matter-to-performance-on-x86-CPUs/
102,Lobsters,assembly,Assembly Language,Visualizations of x86/x64 SIMD Instruction List (SSE to AVX512),https://www.officedaytime.com/simd512e/
103,Lobsters,assembly,Assembly Language,Teardown: Windows 10 on ARM - x86 Emulation,https://threatvector.cylance.com/en_us/home/teardown-windows-10-on-arm-x86-emulation.html
104,Lobsters,assembly,Assembly Language,Beginning Assembly Programming on the Commodore VIC-20,https://techtinkering.com/2013/04/16/beginning-assembly-programming-on-the-commodore-vic-20/
105,Lobsters,assembly,Assembly Language,A 48Khz digital music player for the Commodore 64,http://brokenbytes.blogspot.com/2018/03/a-48khz-digital-music-player-for.html
106,Lobsters,assembly,Assembly Language,Mixing Packed RGB Pixels Efficiently,http://blargg.8bitalley.com/info/rgb_mixing.html
107,Lobsters,assembly,Assembly Language,A BNF Parser in Forth (1992),https://www.bradrodriguez.com/papers/bnfparse.htm
108,Lobsters,assembly,Assembly Language,Frontier: Elite II,https://en.wikipedia.org/wiki/Frontier:_Elite_II
109,Lobsters,assembly,Assembly Language,Gathering Intel on Intel AVX-512 Transitions,https://travisdowns.github.io/blog/2020/01/17/avxfreq1.html
110,Lobsters,assembly,Assembly Language,ARMY: A Deductive Verification Platform for ARM Programs Using Why3,http://inforum.org.pt/INForum2012/docs/20120013.pdf
111,Lobsters,assembly,Assembly Language,Binary Mutation Analysis of Tests Using Reassembleable Disassembly,https://www-users.cs.umn.edu/~emamd001/bma_bar2019.pdf
112,Lobsters,assembly,Assembly Language,DOSBox JIT on ppc64le (and how you can write your own),https://www.talospace.com/2020/01/dosbox-jit-on-ppc64le-and-how-you-can.html
113,Lobsters,assembly,Assembly Language,Hiding Data in Redundant Instruction Encodings,https://x86.lol/2019/02/12/steganography.html
114,Lobsters,assembly,Assembly Language,RISC-V Stumbling Blocks,https://x86.lol/generic/2020/01/01/riscv-intro.html
115,Lobsters,assembly,Assembly Language,Agner's Software Optimization resources,https://www.agner.org/optimize/?e=0#0
116,Lobsters,assembly,Assembly Language,Assembly Optimization Tips by Mark Larson,http://mark.masmcode.com/
117,Lobsters,assembly,Assembly Language,CompCertM: CompCert with C-Assembly Linking and Lightweight Modular Verification,https://sf.snu.ac.kr/compcertm/
118,Lobsters,assembly,Assembly Language,A note on mask registers,https://travisdowns.github.io/blog/2019/12/05/kreg-facts.html
119,Lobsters,assembly,Assembly Language,64 Bits ought to be enough for anybody,https://blog.trailofbits.com/2019/11/27/64-bits-ought-to-be-enough-for-anybody/
120,Lobsters,assembly,Assembly Language,x86 mov insns & short history of the most popular CPU architecture,https://www.youtube.com/watch?v=g9_FYRAfyqQ
121,Lobsters,assembly,Assembly Language,"""Beating"" C with 400 lines of unoptimized assembly",https://eli.thegreenplace.net/2019/beating-c-with-400-lines-of-unoptimized-assembly/
122,Lobsters,assembly,Assembly Language,History of … one CPU instructions: Part 1. LDDQU/movdqu explained,https://software.intel.com/en-us/blogs/2012/04/16/history-of-one-cpu-instructions-part-1-lddqumovdqu-explained
123,Lobsters,assembly,Assembly Language,Why does the Alpha AXP predict a coroutine transfer the way it does?,https://devblogs.microsoft.com/oldnewthing/20191121-00/?p=103121
124,Lobsters,assembly,Assembly Language,Want to code Amiga games in Assembler? If so then read on,http://www.indieretronews.com/2019/11/want-to-code-amiga-games-in-assembler.html
125,Lobsters,assembly,Assembly Language,Assembly language vs. machine code - 6502,https://www.youtube.com/watch?v=oO8_2JJV0B4
126,Lobsters,assembly,Assembly Language,Mitigations for Jump Conditional Code Erratum,https://www.intel.com/content/dam/support/us/en/documents/processors/mitigations-jump-conditional-code-erratum.pdf
127,Lobsters,assembly,Assembly Language,Arbitrary Code Execution in Ocarina of Time,https://www.youtube.com/watch?v=RoEmGCNsbno
128,Lobsters,assembly,Assembly Language,Jonesforth: A sometimes minimal FORTH compiler and tutorial,http://git.annexia.org/?p=jonesforth.git;a=blob;f=jonesforth.S;h=45e6e854a5d2a4c3f26af264dfce56379d401425;hb=HEAD
129,Lobsters,assembly,Assembly Language,JonesForth ARM64 with APL symbols,https://github.com/narenratan/jonesforth_arm64_apl
130,Lobsters,assembly,Assembly Language,Destroying x86_64 instruction decoders with differential fuzzing,https://blog.trailofbits.com/2019/10/31/destroying-x86_64-instruction-decoders-with-differential-fuzzing/
131,Lobsters,assembly,Assembly Language,A Moron's Guide for Starting in AVR Assembly,https://www.avrfreaks.net/sites/default/files/ASM%20INTRO_v1.2.pdf
132,Lobsters,assembly,Assembly Language,GCC's assembler syntax,https://www.felixcloutier.com/documents/gcc-asm.html
133,Lobsters,assembly,Assembly Language,arpilisp: a lisp interpreter for Raspberry Pi implemented in ARM assembly,https://github.com/marcpaq/arpilisp
134,Lobsters,assembly,Assembly Language,Evolution of Unix History (Gource visualization),https://www.youtube.com/watch?v=S7JB0mhrGCQ
135,Lobsters,assembly,Assembly Language,Faster floating point arithmetic with Exclusive OR,http://nfrechette.github.io/2019/10/22/float_xor_optimization/
136,Lobsters,assembly,Assembly Language,Microprogramming History,https://people.cs.clemson.edu/~mark/uprog.html
137,Lobsters,assembly,Assembly Language,Derek Zave's Octal Editor,http://www.fourmilab.ch/documents/univac/eoctal.html
138,Lobsters,assembly,Assembly Language,MicroSpec: Speculation-Centric Fine-Grained Parallelization for FSM Computations (2016),http://www.cs.wm.edu/~bren/files/papers/PACT16.pdf
139,Lobsters,assembly,Assembly Language,Awesome Lockfree: A collection of resources on wait-free and lock-free programming,https://github.com/rigtorp/awesome-lockfree
140,Lobsters,assembly,Assembly Language,Collapse OS — Bootstrap post-collapse technology,https://collapseos.org/
141,Lobsters,assembly,Assembly Language,Self-Modifying Code,https://codeplusplus.blogspot.com/2019/10/self-modifying-code.html
142,Lobsters,assembly,Assembly Language,GerdaOS: a custom ROM to liberate the heart of Kai,https://gerda.tech/
143,Lobsters,assembly,Assembly Language,Entombed: An archaeological examination of an Atari 2600 game (2018),https://arxiv.org/abs/1811.02035
144,Lobsters,assembly,Assembly Language,Solving a Danish Defense Intelligence Puzzle,http://irkenkitties.com/blog/2017/08/19/solving-danish-defense-intelligence-puzzle
145,Lobsters,assembly,Assembly Language,Troy's Breadboard Computer - Emulator,https://cpu.visualrealmsoftware.com/emu/
146,Lobsters,assembly,Assembly Language,"SPARC V8 Stacks, Register Windows, and Procedure Call Conventions (1997)",https://archive.is/20121224205243/http://www.sics.se/~psm/sparcstack.html
147,Lobsters,assembly,Assembly Language,The 6502 overflow flag explained mathematically,http://www.righto.com/2012/12/the-6502-overflow-flag-explained.html
148,Lobsters,assembly,Assembly Language,"On the opening of the Power ISA, and the chilling effects of proprietary ISAs",https://www.devever.net/~hl/opening-power
149,Lobsters,assembly,Assembly Language,Complete x86/x64 JIT and AOT Assembler for C++,https://github.com/asmjit/asmjit
150,Lobsters,assembly,Assembly Language,"IBM hears the RISC-V kids partying next door, decides it will make its Power CPU ISA free, too",https://www.theregister.co.uk/2019/08/20/ibm_openpower_isa/
151,Lobsters,assembly,Assembly Language,Sushi Roll: A CPU research kernel with minimal noise for cycle-by-cycle micro-architectural introspection,https://gamozolabs.github.io/metrology/2019/08/19/sushi_roll.html
152,Lobsters,assembly,Assembly Language,Dirty tricks 6502 programmers use,https://nurpax.github.io/posts/2019-08-18-dirty-tricks-6502-programmers-use.html
153,Lobsters,assembly,Assembly Language,"The SuperH-3, part 1: Introduction",https://devblogs.microsoft.com/oldnewthing/20190805-00/?p=102749
154,Lobsters,assembly,Assembly Language,Understanding Intel Instruction Sizes (2003),https://www.swansontec.com/sintel.html
155,Lobsters,assembly,Assembly Language,Writing Boot Sector Code,https://susam.in/blog/writing-boot-sector-code/
156,Lobsters,assembly,Assembly Language,The Quest for Formally Secure Compartmentalizing Compilation,https://prosecco.gforge.inria.fr/personal/hritcu/talks/2019-01-29-Secure-Compilation-Habil.pdf
157,Lobsters,assembly,Assembly Language,Commentary on ColorForth,http://web.archive.org/web/20051214083244/http://www.karig.net/os/cf/index.html
158,Lobsters,assembly,Assembly Language,What's Your Computer Actually Doing?,https://www.youtube.com/watch?v=Z5JC9Ve1sfI
159,Lobsters,assembly,Assembly Language,Former ARM engineer's opinions on RISC-V,https://gist.github.com/erincandescent/8a10eeeea1918ee4f9d9982f7618ef68
160,Lobsters,assembly,Assembly Language,Reverse engineering copy protection of Gumball for Apple II,https://ia800402.us.archive.org/34/items/Gumball4amCrack/Gumball%20%284am%20%26%20san%20inc%20crack%29.txt
161,Lobsters,assembly,Assembly Language,TempleOS Assembly Tutorial: Creating a Function,https://www.youtube.com/watch?v=Xy1aBvPJtVo
162,Lobsters,assembly,Assembly Language,RISC-V from scratch 3: Writing a UART driver in assembly (1 / 3),https://twilco.github.io/riscv-from-scratch/2019/07/08/riscv-from-scratch-3.html
163,Lobsters,assembly,Assembly Language,Weekend Replication of the STOKE Superoptimizer,https://github.com/bollu/blaze/blob/master/notebooks/tutorial.ipynb
164,Lobsters,assembly,Assembly Language,Emulator basics (2): system calls,http://notes.eatonphil.com/emulator-basics-system-calls.html
165,Lobsters,assembly,Assembly Language,RISC-V Foundation Announces Ratification of the RISC-V Base ISA and Privileged Architecture Specifications,https://riscv.org/2019/07/risc-v-foundation-announces-ratification-of-the-risc-v-base-isa-and-privileged-architecture-specifications/
166,Lobsters,assembly,Assembly Language,Grey-box Concolic Testing on Binary Code,https://softsec.kaist.ac.kr/~jschoi/data/icse2019.pdf
167,Lobsters,assembly,Assembly Language,ChampSim - trace-based simulator for a microarchitecture study,https://github.com/ChampSim/ChampSim
168,Lobsters,assembly,Assembly Language,ACO: A New Compiler Backend for RADV,https://lists.freedesktop.org/archives/mesa-dev/2019-July/221006.html
169,Lobsters,assembly,Assembly Language,A Documenting of the Submarine CHIP-8 Game,http://verisimilitudes.net/2019-06-23
170,Lobsters,assembly,Assembly Language,"The how and why CPUs do “branch prediction""",https://danluu.com/branch-prediction/
171,Lobsters,assembly,Assembly Language,"PHDays ""Best Reverser"" contest (SEGA Genesis/MD ROM) write-up",http://romhack.github.io/doc/segaBestReverserWriteup/
172,Lobsters,assembly,Assembly Language,A Documenting of my Fizzbuzz CHIP-8 Program,http://verisimilitudes.net/2018-11-01
173,Lobsters,assembly,Assembly Language,kragen/stoneknifeforth,https://github.com/kragen/stoneknifeforth
174,Lobsters,assembly,Assembly Language,Avoiding instruction cache misses,https://pdziepak.github.io/2019/06/21/avoiding-icache-misses/
175,Lobsters,assembly,Assembly Language,"xmake v2.2.7 released, Improve to build Cuda project",http://www.tboox.org/2019/06/17/xmake-update-v2.2.7/
176,Lobsters,assembly,Assembly Language,Python for Reverse Engineering #1: ELF Binaries,https://icyphox.sh/blog/python-for-re-1/
177,Lobsters,assembly,Assembly Language,Writing a Toy Backend Compiler for PyTorch,https://jott.live/markdown/Writing%20a%20Toy%20Backend%20Compiler%20for%20PyTorch
178,Lobsters,assembly,Assembly Language,Live coding an assembler for CP/M,http://cowlark.com/2019-06-01-cpm-asm/index.html
179,Lobsters,assembly,Assembly Language,x86-64 Instruction Usage among C/C++ Applications,https://aakshintala.com/papers/instrpop-systor19.pdf
180,Lobsters,assembly,Assembly Language,Kaypro II Rom Dissection,https://www.scd31.com/blog/kaypro.html
181,Lobsters,assembly,Assembly Language,A Documenting of the Russian Roulette CHIP-8 Game,http://verisimilitudes.net/2018-08-28
182,Lobsters,assembly,Assembly Language,An x86 Assembler in 256 LOC,http://blog.jeff.over.bz/assembly/compilers/jit/2017/01/15/x86-assembler.html
183,Lobsters,assembly,Assembly Language,Project Oberon RISC5 CPU Emulator,https://pythonoberon.readthedocs.io
184,Lobsters,assembly,Assembly Language,Emulator basics: a stack and register machine,http://notes.eatonphil.com/emulator-basics-a-stack-and-register-machine.html
185,Lobsters,assembly,Assembly Language,I don't know how CPUs work so I simulated one in code,https://djhworld.github.io/post/2019/05/21/i-dont-know-how-cpus-work-so-i-simulated-one-in-code/
186,Lobsters,assembly,Assembly Language,Run CP/M on your C64 – using Emulation,https://www.pagetable.com/?p=1315
187,Lobsters,assembly,Assembly Language,Linux loader for flat binary (DOS like .COM) files,https://www.tablix.org/~avian/blog/archives/2016/08/linux_loader_for_dos_like_com_files/
188,Lobsters,assembly,Assembly Language,From Switch Statement Down to Machine Code,http://lazarenko.me/switch/
189,Lobsters,assembly,Assembly Language,Online Arm Assembler,https://azm.azerialabs.com/
190,Lobsters,assembly,Assembly Language,"What books, posts, games would yo recommend to somebody that wants to learn assembly/fuzzing?",/s/k5tnrz/what_books_posts_games_would_yo_recommend
191,Lobsters,assembly,Assembly Language,A Documenting of my Fizzbuzz CHIP-8 Program,http://verisimilitudes.net/2018-11-01
192,Lobsters,assembly,Assembly Language,Cidco MailStation as a Z80 Development Platform,https://jcs.org/2019/05/03/mailstation
193,Lobsters,assembly,Assembly Language,"Insulin Pumps, Decapped Chips and Software Defined Radios",https://blog.usejournal.com/insulin-pumps-decapped-chips-and-software-defined-radios-1be50f121d05
194,Lobsters,assembly,Assembly Language,Introduction to amd64 Assembly Language,http://briansteffens.github.io/introduction-to-64-bit-assembly/01-hello-world/
195,Lobsters,assembly,Assembly Language,Code Generation and Merge Sort,https://mht.technology/post/merge/
196,Lobsters,assembly,Assembly Language,Intricacies of sizecoding on Linux,https://www.youtube.com/watch?v=a03HXo8a_Io
197,Lobsters,assembly,Assembly Language,SubX: A minimalist assembly language for a subset of the x86 ISA,https://github.com/akkartik/mu/blob/master/subx/Readme.md
198,Lobsters,assembly,Assembly Language,Why I don’t care about CPU architecture: my emotional journey,https://www.osnews.com/story/129788/why-i-dont-care-about-cpu-architecture-my-emotional-journey/
199,Lobsters,assembly,Assembly Language,"Xmake, a modern C/C++ build utility",https://github.com/xmake-io/xmake
200,Lobsters,assembly,Assembly Language,Therac-25,https://en.wikipedia.org/wiki/Therac-25
201,Lobsters,assembly,Assembly Language,"Porting Dunjunz, a BBC Micro version of Gauntlet, to the 6809-based Dragon machines",https://www.6809.org.uk/dev/dunjunz/
202,Lobsters,assembly,Assembly Language,Accurate Recovery of Functions in COTS Binaries (2017),http://seclab.cs.sunysb.edu/seclab/pubs/ruith.pdf
203,Lobsters,assembly,Assembly Language,The Evolution of RISC Technology at IBM (1990),https://signallake.com/innovation/EvolutionRISCIBMJan90.pdf
204,Lobsters,assembly,Assembly Language,Static Analysis of Binary Executables Using Structural SVM's (2011),https://papers.nips.cc/paper/3925-static-analysis-of-binary-executables-using-structural-svms.pdf
205,Lobsters,assembly,Assembly Language,An Intel Programmer Jumps Over the Wall: First Impressions of ARM SIMD Programming,https://branchfree.org/2019/03/26/an-intel-programmer-jumps-over-the-wall-first-impressions-of-arm-simd-programming/
206,Lobsters,assembly,Assembly Language,The Symbolics Virtual Lisp Machine: or Using the DEC Alpha as a Programmable Micro-Engine,http://pt.withington.org/publications/VLM.pdf
207,Lobsters,assembly,Assembly Language,Digging into RISC-V and how I learn new things,https://blog.jessfraz.com/post/digging-into-risc-v-and-how-i-learn-new-things/
208,Lobsters,assembly,Assembly Language,Static Taint-Analysis on Binary Executables (2011),http://web.cs.iastate.edu/~weile/cs513x/5.TaintAnalysis2.pdf
209,Lobsters,assembly,Assembly Language,Exercises in Emulation: Xbox 360’s FMA Instruction,https://randomascii.wordpress.com/2019/03/20/exercises-in-emulation-xbox-360s-fma-instruction/
210,Lobsters,assembly,Assembly Language,Static Analysis of Binary Executables,http://stevehanov.ca/cs842_project.pdf
211,Lobsters,assembly,Assembly Language,Implementing a NES Emulator in Rust,http://www.michaelburge.us/2019/03/18/nes-design.html
212,Lobsters,assembly,Assembly Language,TRON VLSI CPU Introduction,http://tronweb.super-nova.co.jp/tronvlsicpu.html
213,Lobsters,assembly,Assembly Language,The directhex! In an Adventure with MIPS (2013),https://apebox.org/wordpress/linux/545
214,Lobsters,assembly,Assembly Language,Porting PuTTY to Windows on Arm,https://community.arm.com/developer/tools-software/tools/b/tools-software-ides-blog/posts/porting-putty-to-windows-on-arm
215,Lobsters,assembly,Assembly Language,Too many cores,https://apebox.org/wordpress/linux/1281
216,Lobsters,assembly,Assembly Language,Introduction to Computer Organization - Learning Assembly with Raspberry Pi,http://bob.cs.sonoma.edu/IntroCompOrg-RPi/intro-co-rpi.html
217,Lobsters,assembly,Assembly Language,A Documenting of the Nim CHIP-8 Game,http://verisimilitudes.net/2019-03-03
218,Lobsters,assembly,Assembly Language,ajyoon/systemf -- a brainfuck interpreter supporting Linux syscalls,https://github.com/ajyoon/systemf
219,Lobsters,assembly,Assembly Language,Reverse Engineering Lecture Alexander Sotirov,https://www.youtube.com/watch?v=nf7yj51WkUA
220,Lobsters,assembly,Assembly Language,NASM Tutorial,http://cs.lmu.edu/~ray/notes/nasmtutorial/
221,Lobsters,assembly,Assembly Language,Polymorphic Encryption Algorithms (2016),https://www.pelock.com/articles/polymorphic-encryption-algorithms
222,Lobsters,assembly,Assembly Language,Linux x86 Program Start Up,http://dbp-consulting.com/tutorials/debugging/linuxProgramStartup.html
223,Lobsters,assembly,Assembly Language,Kingston Crabfighting: Assembly Puzzle,http://rickyhan.com/jekyll/update/2019/02/17/kingston-crabfight.html
224,Lobsters,assembly,Assembly Language,Overdrive 2 – A Voyage to the Boundaries of 16-Bit (Part 2),https://megabitesblog.wordpress.com/2019/02/13/overdrive-2-a-voyage-to-the-boundaries-of-16-bit-part-2/
225,Lobsters,assembly,Assembly Language,rANS on 6502,https://yupferris.github.io/blog/2019/02/11/rANS-on-6502.html
226,Lobsters,assembly,Assembly Language,"The Intel 80386, part 16: Code walkthrough",https://blogs.msdn.microsoft.com/oldnewthing/20190211-00/?p=100905
227,Lobsters,assembly,Assembly Language,Writing a bare metal hypervisor for 64-bit ARM systems,https://ashw.io/blog/arm64-hypervisor-tutorial/1
228,Lobsters,assembly,Assembly Language,"The Intel 80386, part 14: Rescuing a stack trace after the debugger gave up when it reached an FPO f",https://blogs.msdn.microsoft.com/oldnewthing/20190207-00/?p=100885
229,Lobsters,assembly,Assembly Language,Examining Pointer Authentication on the iPhone XS,https://googleprojectzero.blogspot.com/2019/02/examining-pointer-authentication-on.html
230,Lobsters,assembly,Assembly Language,Faster Population Counts Using AVX2 Instructions,https://arxiv.org/pdf/1611.07612
231,Lobsters,assembly,Assembly Language,1fps Atari 2600 Emulator in Vanilla Minecraft 1.13,https://www.youtube.com/watch?v=mq7T5_xH24M
232,Lobsters,assembly,Assembly Language,"The Intel 80386, part 4: Arithmetic",https://blogs.msdn.microsoft.com/oldnewthing/20190124-00/?p=100785
233,Lobsters,assembly,Assembly Language,.NET Core 3.0 Intrinsics in Real Life - 1/3,https://bits.houmus.org/2018-08-18/netcoreapp3.0-instrinsics-in-real-life-pt1
234,Lobsters,assembly,Assembly Language,"The Intel 80386, part 4: Arithmetic",https://blogs.msdn.microsoft.com/oldnewthing/20190124-00/?p=100775
235,Lobsters,assembly,Assembly Language,"The Intel 80386, part 3: Flags and condition codes",https://blogs.msdn.microsoft.com/oldnewthing/20190123-00/?p=100765
236,Lobsters,assembly,Assembly Language,"The Intel 80386, part 2: Memory addressing modes",https://blogs.msdn.microsoft.com/oldnewthing/20190122-00/?p=100755
237,Lobsters,assembly,Assembly Language,"The Intel 80386, part 1: Introduction",https://blogs.msdn.microsoft.com/oldnewthing/20190121-00/?p=100745
238,Lobsters,assembly,Assembly Language,Evolution of the x86 context switch in Linux,http://www.maizure.org/projects/evolution_x86_context_switch_linux/index.html
239,Lobsters,assembly,Assembly Language,Why do we even need to define a red zone? Can’t I just use my stack for anything?,https://blogs.msdn.microsoft.com/oldnewthing/20190111-00/?p=100685
240,Lobsters,assembly,Assembly Language,Writing a Self-Mutating x86_64 C Program,https://shanetully.com/2013/12/writing-a-self-mutating-x86_64-c-program/
241,Lobsters,assembly,Assembly Language,Simulation and Formal Verification of x86 Machine-Code Programs that make System Calls,https://www.cs.utexas.edu/users/hunt/FMCAD/FMCAD14/proceedings/18_goel.pdf
242,Lobsters,assembly,Assembly Language,Making a Game Boy Game! (Part 1),https://invisibleup.neocities.org/articles/18/
243,Lobsters,assembly,Assembly Language,Generate x86 Assembly with Go,https://github.com/mmcloughlin/avo
244,Lobsters,assembly,Assembly Language,AVX512VBMI — remove spaces from text,http://0x80.pl/notesen/2019-01-05-avx512vbmi-remove-spaces.html
245,Lobsters,assembly,Assembly Language,repz ret,http://repzret.org/p/repzret/
246,Lobsters,assembly,Assembly Language,"Comparing Architectures: VAX, Alpha, Itanium and X86-64",https://www.youtube.com/watch?v=FZN6LjuEgdw
247,Lobsters,assembly,Assembly Language,OS Development on Windows - Part 1: Building a UEFI Application in NASM,https://hackerpulp.com/os/os-development-windows-1-building-uefi-applications-nasm/
248,Lobsters,assembly,Assembly Language,The Ultimate Apollo Guidance Computer Talk,https://www.youtube.com/watch?v=xx7Lfh5SKUQ
249,Lobsters,assembly,Assembly Language,The curious case of CLTQ instruction,https://joshpeterson.github.io/the-curious-case-of-cltq
250,Lobsters,assembly,Assembly Language,Write your Own Virtual Machine,https://justinmeiners.github.io/lc3-vm/
251,Lobsters,assembly,Assembly Language,Wabi Cpu Emulation,https://www.hotchips.org/wp-content/uploads/hc_archives/hc08/2_Mon/HC8.S2/HC8.2.1.pdf
252,Lobsters,assembly,Assembly Language,A Documenting of the Breakout CHIP-8 Game,http://verisimilitudes.net/2018-12-12
253,Lobsters,assembly,Assembly Language,Stream VByte: Faster Byte-Oriented Integer Compression (2017),https://arxiv.org/pdf/1709.08990.pdf
254,Lobsters,assembly,Assembly Language,BatAs: a 8086 assembler written in MSDOS batch,https://github.com/mniip/BOOTSTRA/tree/master/BATAS
255,Lobsters,assembly,Assembly Language,try/catch in Linux Kernel,https://binarydebt.wordpress.com/2018/11/16/try-catch-in-linux-kernel/
256,Lobsters,assembly,Assembly Language,Spectre Mitigations Part 2,https://www.wasmjit.org/blog/spectre-mitigations-part-2.html
257,Lobsters,assembly,Assembly Language,PDP-10/its: Incompatible Timesharing System's source code,https://github.com/PDP-10/its
258,Lobsters,assembly,Assembly Language,"Hierarchical, Timed, Abstract, State Machines for WCET Estimation (2015)",https://hal.archives-ouvertes.fr/hal-01214973/document
259,Lobsters,assembly,Assembly Language,"Cheezball Rising: Collision detection, part 1",https://eev.ee/blog/2018/11/28/cheezball-rising-collision-detection-part-1/
260,Lobsters,assembly,Assembly Language,Compiler basics: lisp to assembly,http://notes.eatonphil.com/compiler-basics-lisp-to-assembly.html
261,Lobsters,assembly,Assembly Language,Linux Internals - The Art Of Symbol Resolution (2017),http://0x00sec.org/t/linux-internals-the-art-of-symbol-resolution/1488
262,Lobsters,assembly,Assembly Language,Every 7.8μs your computer’s memory has a hiccup,https://blog.cloudflare.com/every-7-8us-your-computers-memory-has-a-hiccup/
263,Lobsters,assembly,Assembly Language,How physical addresses map to rows and banks in DRAM (2015),http://lackingrhoticity.blogspot.com/2015/05/how-physical-addresses-map-to-rows-and-banks.html
264,Lobsters,assembly,Assembly Language,A world of message-oriented programming languages,http://boston.conman.org/2018/11/21.1
265,Lobsters,assembly,Assembly Language,Wasmjit Spectre Mitigations Part 1,https://www.wasmjit.org/blog/spectre-mitigations-part-1.html
266,Lobsters,assembly,Assembly Language,"For a brief period, the kernel tried to deal with gamma rays corrupting the processor cache",https://blogs.msdn.microsoft.com/oldnewthing/20181120-00/?p=100275
267,Lobsters,assembly,Assembly Language,"How much bandwidth does [Intel's] L2 have to give, anyway?","https://github.com/travisdowns/uarch-bench/wiki/How-much-bandwidth-does-the-L2-have-to-give,-anyway%3F"
268,Lobsters,assembly,Assembly Language,Vectorized Emulation: MMU Design,https://gamozolabs.github.io/fuzzing/2018/11/19/vectorized_emulation_mmu.html
269,Lobsters,assembly,Assembly Language,Noise-based Testing and Analysis of Multi-threaded C/C++ Programs on the Binary Level,http://www.fit.vutbr.cz/~vojnar/Publications/padtad-12.pdf
270,Lobsters,assembly,Assembly Language,Assembly language on OpenBSD amd64+arm64,https://cryogenix.net/OpenBSD_assembly.html
271,Lobsters,assembly,Assembly Language,The Meta-Machine Code (MMC) Tool,http://verisimilitudes.net/2017-07-07
272,Lobsters,assembly,Assembly Language,Synthesizable Constants,https://blog.regehr.org/archives/1636
273,Lobsters,assembly,Assembly Language,Statically-Directed Dynamic Automated Test Generation,https://people.eecs.berkeley.edu/~dawnsong/papers/2011%20issta11sandwich.pdf
274,Lobsters,assembly,Assembly Language,Defining Target Machines,https://www.youtube.com/watch?v=KNYCUJOzj5c
275,Lobsters,assembly,Assembly Language,A big LITTLE Problem: A Tale of big.LITTLE Gone Wrong,https://medium.com/@jadr2ddude/a-big-little-problem-a-tale-of-big-little-gone-wrong-e7778ce744bb
276,Lobsters,assembly,Assembly Language,Unicorn – The ultimate CPU emulator,https://www.unicorn-engine.org/
277,Lobsters,assembly,Assembly Language,Compiling Prolog Into Microcode: A Case Study Using the NCR/32-000 (1985),http://hps.ece.utexas.edu/pub/fagin_micro18.pdf
278,Lobsters,assembly,Assembly Language,Reverse Engineering x86 Processor Microcode,http://syssec.rub.de/media/emma/veroeffentlichungen/2017/08/16/usenix17-microcode.pdf
279,Lobsters,assembly,Assembly Language,LISP Implementation for the PDP-1 Computer (1964),http://s3data.computerhistory.org/pdp-1/DEC.pdp_1.1964.102650371.pdf
280,Lobsters,assembly,Assembly Language,Vectorized Emulation: Hardware accelerated taint tracking at 2 trillion instructions per second,https://gamozolabs.github.io/fuzzing/2018/10/14/vectorized_emulation.html
281,Lobsters,assembly,Assembly Language,Design of Automated Validation Environment For Radiation Hardened MIPS Microprocessor,https://repository.asu.edu/attachments/57211/content/Sharma_asu_0010N_10877.pdf
282,Lobsters,assembly,Assembly Language,Making a homebrew videogame for Game Boy Color,https://eev.ee/blog/2018/10/09/cheezball-rising-opening-a-dialogue/
283,Lobsters,assembly,Assembly Language,How new-lines affect Linux performance,https://nadav.amit.zone/blog/linux-inline
284,Lobsters,assembly,Assembly Language,SIMD Assembly Instructions: Optimizing Every Byte,http://www.dataden.tech/programming/power-simd-assembly-instructions/
285,Lobsters,assembly,Assembly Language,"Practical, Formal Techniques for Developing LLVM's Peephole Optimizations",https://www.cs.rutgers.edu/~santosh.nagarakatte/david-menendez-phd-thesis.pdf
286,Lobsters,assembly,Assembly Language,Cheezball Rising: Opening a dialogue,https://eev.ee/blog/2018/09/08/cheezball-rising-opening-a-dialogue/
287,Lobsters,assembly,Assembly Language,6502bench SourceGen,https://6502bench.com
288,Lobsters,assembly,Assembly Language,rmsbolt - A godbolt embedded in Emacs,https://gitlab.com/jgkamat/rmsbolt
289,Lobsters,assembly,Assembly Language,Process title and missing memory space,https://oshogbo.vexillium.org/blog/54/
290,Lobsters,assembly,Assembly Language,x86 Addressing Under the Hood,http://paul.bone.id.au/2018/09/26/more-x86-addressing/
291,Lobsters,assembly,Assembly Language,Program for AVX-512 instructions frequency impact evaluation,https://github.com/intel-go/avx512counters
292,Lobsters,assembly,Assembly Language,All programmers must learn C and Assembly (2017),https://www.deconstructconf.com/2017/joe-damato-all-programmers-must-learn-c-and-assembly
293,Lobsters,assembly,Assembly Language,SizeCoding,http://www.sizecoding.org/wiki/Main_Page
294,Lobsters,assembly,Assembly Language,x86 finds its way into your iPhone,https://lcq2.github.io/x86_iphone/
295,Lobsters,assembly,Assembly Language,Apple 1 ROM disassembly (256 bytes) with explanation,https://gist.github.com/robey/1bb6a99cd19e95c81979b1828ad70612
296,Lobsters,assembly,Assembly Language,Cheezball Rising: Resounding failure,https://eev.ee/blog/2018/09/06/cheezball-rising-resounding-failure/
297,Lobsters,assembly,Assembly Language,Converting C into Assembler on the Amiga,https://bjornpaulsen.blogspot.com/2018/09/converting-c-into-assembler-on-amiga.html
298,Lobsters,assembly,Assembly Language,"A Beginner's Guide to x86 Assembly, Part 1 of 2",https://derekmaciel.com/2017-02-12/beginners-assembly-part1/
299,Lobsters,assembly,Assembly Language,Primitives in Rust are Weird (and Cool),https://speice.io/2018/09/primitives-in-rust-are-weird.html
300,Lobsters,assembly,Assembly Language,The MRISC32 – A vector first CPU design,http://www.bitsnbites.eu/the-mrisc32-a-vector-first-cpu-design/
301,Lobsters,assembly,Assembly Language,"The PowerPC 600 series, part 14: Code walkthrough",https://blogs.msdn.microsoft.com/oldnewthing/20180823-00/?p=99555
302,Lobsters,assembly,Assembly Language,"The PowerPC 600 series, part 13: Common patterns",https://blogs.msdn.microsoft.com/oldnewthing/20180822-00/?p=99545
303,Lobsters,assembly,Assembly Language,"The PowerPC 600 series, part 12: leaf functions",https://blogs.msdn.microsoft.com/oldnewthing/20180821-00/?p=99535
304,Lobsters,assembly,Assembly Language,"The PowerPC 600 series, part 11: Glue routines",https://blogs.msdn.microsoft.com/oldnewthing/20180820-00/?p=99525
305,Lobsters,assembly,Assembly Language,"The PowerPC 600 series, part 9: The table of contents",https://blogs.msdn.microsoft.com/oldnewthing/20180816-00/?p=99505
306,Lobsters,assembly,Assembly Language,EXAPUNKS - new programming game from Zachtronics,http://www.zachtronics.com/exapunks/
307,Lobsters,assembly,Assembly Language,"The PowerPC 600 series, part 8: Control transfer",https://blogs.msdn.microsoft.com/oldnewthing/20180815-00/?p=99495
308,Lobsters,assembly,Assembly Language,"The PowerPC 600 series, part 7: Atomic memory access and cache coherency",https://blogs.msdn.microsoft.com/oldnewthing/20180814-00/?p=99485
309,Lobsters,assembly,Assembly Language,"The PowerPC 600 series, part 6: Memory access",https://blogs.msdn.microsoft.com/oldnewthing/20180813-00/?p=99475
310,Lobsters,assembly,Assembly Language,Original Furby Source Code,http://www.seanriddle.com/furbysource.pdf
311,Lobsters,assembly,Assembly Language,"The PowerPC 600 series, part 5: Rotates and shifts",https://blogs.msdn.microsoft.com/oldnewthing/20180810-00/?p=99465
312,Lobsters,assembly,Assembly Language,"The PowerPC 600 series, part 4: Bitwise operations and constants",https://blogs.msdn.microsoft.com/oldnewthing/20180809-00/?p=99455
313,Lobsters,assembly,Assembly Language,"The PowerPC 600 series, part 3: Arithmetic",https://blogs.msdn.microsoft.com/oldnewthing/20180808-00/?p=99445
314,Lobsters,assembly,Assembly Language,"The PowerPC 600 series, part 2: Condition registers and the integer exception register",https://blogs.msdn.microsoft.com/oldnewthing/20180807-00/?p=99435
315,Lobsters,assembly,Assembly Language,"The PowerPC 600 series, part 1: Introduction",https://blogs.msdn.microsoft.com/oldnewthing/20180806-00/?p=99425
316,Lobsters,assembly,Assembly Language,Introduction to Computer Organization with x86-64 Assembly Language & GNU/Linux,http://bob.cs.sonoma.edu/IntroCompOrg-x64/book.html
317,Lobsters,assembly,Assembly Language,The future of WebAssembly - A look at upcoming features and proposals,https://blog.scottlogic.com/2018/07/20/wasm-future.html
318,Lobsters,assembly,Assembly Language,Asmttpd: Web server for Linux written in amd64 assembly (2017),https://github.com/nemasu/asmttpd
319,Lobsters,assembly,Assembly Language,Cheezball Rising: Spring cleaning,https://eev.ee/blog/2018/07/13/cheezball-rising-spring-cleaning/
320,Lobsters,assembly,Assembly Language,Reverse Engineering WebAssembly,https://www.pnfsoftware.com/reversing-wasm.pdf
321,Lobsters,assembly,Assembly Language,x86 and amd64 instruction reference,https://www.felixcloutier.com/x86/index.html
322,Lobsters,assembly,Assembly Language,K Semantics for Assembly Languages: A Case Study (2014),https://www.researchgate.net/publication/262770441_K_Semantics_for_Assembly_Languages_A_Case_Study
323,Lobsters,assembly,Assembly Language,"PEG-based transformer provides front-, middle and back-end stages in a simple compiler",http://www.vpri.org/pdf/tr2010003_PEG.pdf
324,Lobsters,assembly,Assembly Language,"Cheezball Rising: Main loop, input, and a game",https://eev.ee/blog/2018/07/05/cheezball-rising-main-loop-input-and-a-game/
325,Lobsters,assembly,Assembly Language,A Real-World WebAssembly Benchmark,https://pspdfkit.com/blog/2018/a-real-world-webassembly-benchmark/
326,Lobsters,assembly,Assembly Language,Two little nuggets about NOP instruction,https://www.tabsoverspaces.com/233729-two-little-nuggets-about-nop-instruction
327,Lobsters,assembly,Assembly Language,Memory Instructions: Load and Store (Part 4),https://azeria-labs.com/memory-instructions-load-and-store-part-4/
328,Lobsters,assembly,Assembly Language,"Instruction Selection: Principles, Methods, and Applications (2016)",http://kth.diva-portal.org/smash/get/diva2:951540/FULLTEXT01.pdf
329,Lobsters,assembly,Assembly Language,customasm: Assembler for custom instruction sets,https://github.com/hlorenzi/customasm#example
330,Lobsters,assembly,Assembly Language,Compiler Explorer (think CodePen for C(++)/D/Go/Rust/Swift/Haskell disassembly),https://gcc.godbolt.org/
331,Lobsters,assembly,Assembly Language,Cheezball Rising: Drawing a sprite,https://eev.ee/blog/2018/06/21/cheezball-rising-drawing-a-sprite/
332,Lobsters,assembly,Assembly Language,Cheezball Rising: A new Game Boy Color game,https://eev.ee/blog/2018/06/19/cheezball-rising-a-new-game-boy-color-game/
333,Lobsters,assembly,Assembly Language,x86 assembly doesn't have to be scary,https://blog.benjojo.co.uk/post/interactive-x86-bootloader-tutorial
334,Lobsters,assembly,Assembly Language,Making a low level (Linux) debugger,https://blog.asrpo.com/making_a_low_level_debugger
335,Lobsters,assembly,Assembly Language,A Brief History of Unreal Mode,http://www.os2museum.com/wp/a-brief-history-of-unreal-mode/
336,Lobsters,assembly,Assembly Language,Intel CPUs might leak information about FPU state,https://marc.info/?l=openbsd-cvs&m=152818076013158&w=2
337,Lobsters,assembly,Assembly Language,"""can you explain to some degree why SPARC chips run java so well?""",http://kremlin.enterprises/post/142778524020/can-you-explain-to-some-degree-why-sparc-chips-run
338,Lobsters,assembly,Assembly Language,The Art of Picking Intel Registers,https://www.swansontec.com/sregisters.html
339,Lobsters,assembly,Assembly Language,SIMD-Based Decoding of Posting Lists (2014),http://stepanovpapers.com/SIMD_Decoding_TR.pdf
340,Lobsters,assembly,Assembly Language,The NOR Machine,https://pragprog.com/magazines/2012-03/the-nor-machine
341,Lobsters,assembly,Assembly Language,assembler for imaginary single-instruction CPU,http://home.mircad.nl/md/assembler_for_imaginary_single-instruction_CPU.html
342,Lobsters,assembly,Assembly Language,Why did I spend 1.5 months creating a Gameboy emulator?,http://blog.rekawek.eu/2017/02/09/coffee-gb/
343,Lobsters,assembly,Assembly Language,Tearing apart printf(),http://www.maizure.org/projects/printf/index.html
344,Lobsters,assembly,Assembly Language,Automated Reverse Engineering: Mistfall Engine (2001),http://z0mbie.daemonlab.org/autorev.txt
345,Lobsters,assembly,Assembly Language,Steve Wozniak Talks Disk ][,https://paleotronic.com/2018/05/19/steve-wozniak-talks-disk/
346,Lobsters,assembly,Assembly Language,AS/400 Machine-Level Programming (2001),https://cmpct.info/~calvin/Voxlator/AS400%20Machine-Level%20Programming.pdf
347,Lobsters,assembly,Assembly Language,How a Rust upgrade more than tripled the speed of my code,http://troubles.md/posts/the-power-of-compilers/
348,Lobsters,assembly,Assembly Language,"Triton: Dynamic, Binary, Analysis Framework for x86",https://triton.quarkslab.com
349,Lobsters,assembly,Assembly Language,Mach-O exploration. Tools - nm,https://yurylapitsky.com/exploring_mac-o_binaries_nm
350,Lobsters,assembly,Assembly Language,"MrWint's TAS video of GBC Pokémon: Yellow Version, ""Arbitrary Code Execution""",http://tasvideos.org/5384S.html
351,Lobsters,assembly,Assembly Language,c3r3s: a serial 64-bit bootloader for the raspberry pi 3,https://github.com/robey/c3r3s
352,Lobsters,assembly,Assembly Language,Writing WebAssembly By Hand,http://blog.scottlogic.com/2018/04/26/webassembly-by-hand.html
353,Lobsters,assembly,Assembly Language,How does dynamic dispatch work in WebAssembly?,http://fitzgeraldnick.com/2018/04/26/how-does-dynamic-dispatch-work-in-wasm.html
354,Lobsters,assembly,Assembly Language,ForwardCom: Forward compatible computer system,http://www.forwardcom.info/
355,Lobsters,assembly,Assembly Language,"The MIPS R4000, part 15: Code walkthrough",https://blogs.msdn.microsoft.com/oldnewthing/20180420-00/?p=98565
356,Lobsters,assembly,Assembly Language,"The MIPS R4000, part 14: Common patterns",https://blogs.msdn.microsoft.com/oldnewthing/20180419-00/?p=98555
357,Lobsters,assembly,Assembly Language,"The MIPS R4000, part 12: Calling convention",https://blogs.msdn.microsoft.com/oldnewthing/20180417-00/?p=98525
358,Lobsters,assembly,Assembly Language,"The MIPS R4000, part 11: More on branch delay slots",https://blogs.msdn.microsoft.com/oldnewthing/20180416-00/?p=98515
359,Lobsters,assembly,Assembly Language,Intel Compiler Intrinsics Guide,https://software.intel.com/sites/landingpage/IntrinsicsGuide/#
360,Lobsters,assembly,Assembly Language,"The MIPS R4000, part 10: Trampolines and stubs",https://blogs.msdn.microsoft.com/oldnewthing/20180413-00/?p=98505
361,Lobsters,assembly,Assembly Language,"The MIPS R4000, part 9: Stupid branch delay slot tricks",https://blogs.msdn.microsoft.com/oldnewthing/20180412-00/?p=98495
362,Lobsters,assembly,Assembly Language,"The MIPS R4000, part 7: Memory access (atomic)",https://blogs.msdn.microsoft.com/oldnewthing/20180410-00/?p=98475
363,Lobsters,assembly,Assembly Language,"The MIPS R4000, part 6: Memory access (unaligned)",https://blogs.msdn.microsoft.com/oldnewthing/20180409-00/?p=98465
364,Lobsters,assembly,Assembly Language,"Abstraction Recovery for Scalable, Static, Binary Analysis (2014)",https://edmcman.github.io/papers/arthesis14.pdf
365,Lobsters,assembly,Assembly Language,"The MIPS R4000, part 5: Memory access (aligned)",https://blogs.msdn.microsoft.com/oldnewthing/20180406-00/?p=98455
366,Lobsters,assembly,Assembly Language,Certification of an Instruction Set Simulator [for ARM] (2017),https://tel.archives-ouvertes.fr/tel-00937524/document
367,Lobsters,assembly,Assembly Language,"The MIPS R4000, part 4: Constants",https://blogs.msdn.microsoft.com/oldnewthing/20180405-00/?p=98445
368,Lobsters,assembly,Assembly Language,"The MIPS R4000, part 3: Multiplication, division, and the temperamental HI and LO registers",https://blogs.msdn.microsoft.com/oldnewthing/20180404-00/?p=98435
369,Lobsters,assembly,Assembly Language,"The MIPS R4000, part 2: 32-bit integer calculations",https://blogs.msdn.microsoft.com/oldnewthing/20180403-00/?p=98425
370,Lobsters,assembly,Assembly Language,A fundamental introduction to x86 assembly programming,https://www.nayuki.io/page/a-fundamental-introduction-to-x86-assembly-programming
371,Lobsters,assembly,Assembly Language,"The MIPS R4000, part 1: Introduction",https://blogs.msdn.microsoft.com/oldnewthing/20180402-00/?p=98415
372,Lobsters,assembly,Assembly Language,Caffe64: Deep learning in 12 kilobytes,https://github.com/dfouhey/caffe64
373,Lobsters,assembly,Assembly Language,Reverse Engineering for Beginners,https://beginners.re/RE4B-EN.pdf
374,Lobsters,assembly,Assembly Language,STOKE: A stochastic superoptimizer and program synthesizer (2013-2017),http://stoke.stanford.edu
375,Lobsters,assembly,Assembly Language,Explained Difference between x86 & x64 Disassembly,https://medium.com/@_neerajpal/explained-difference-between-x86-x64-disassembly-49e9678e1ae2
376,Lobsters,assembly,Assembly Language,"eBPF, Sockets, Hop Distance and manually writing eBPF assembly",https://blog.cloudflare.com/epbf_sockets_hop_distance/
377,Lobsters,assembly,Assembly Language,The Art of Assembly Language (1996),http://web.archive.org/web/20010903173628/http://cs.smith.edu:80/~thiebaut/ArtOfAssembly/fwd/fwd.html
378,Lobsters,assembly,Assembly Language,"EASy68K v5.16.1 (Editor/Assembler/Simulator for the 68000) released March 16, 2018",http://www.easy68k.com
379,Lobsters,assembly,Assembly Language,Revision 2018 is from March 30th to April 2nd,https://2018.revision-party.net
380,Lobsters,assembly,Assembly Language,Inastemp: A Novel Intrinsics-as-Template Library for Portable SIMD-Vectorization (2017),http://downloads.hindawi.com/journals/sp/2017/5482468.pdf
381,Lobsters,assembly,Assembly Language,Understanding CPU port contention,https://dendibakh.github.io/blog/2018/03/21/port-contention
382,Lobsters,assembly,Assembly Language,This Architecture Tastes Like Microarchitecture,http://wp3workshop.website/pdfs/WP3_dunham.pdf
383,Lobsters,assembly,Assembly Language,Heap Bounded Assembly Language (2002),http://homepages.inf.ed.ac.uk/da/papers/hbal/hbal.pdf
384,Lobsters,assembly,Assembly Language,Dissecting the 128-byte raycaster (2014),http://finalpatch.blogspot.com/2014/06/dissecting-128-byte-raycaster.html
385,Lobsters,assembly,Assembly Language,"The DGS1216T, DGS1224T and the illegal MAC",http://wordpress.panaceas.org/wp/index.php/2017/04/23/the-dgs1216t-dgs1224t-and-the-illegal-mac/
386,Lobsters,assembly,Assembly Language,An Intro to 64-bit Intel Reverse Engineering,https://leotindall.com/tutorial/an-intro-to-x86_64-reverse-engineering/
387,Lobsters,assembly,Assembly Language,Interactive Binary Exploitation Course in the Browser,https://exploit.courses
388,Lobsters,assembly,Assembly Language,"FinFisher exposed: A researcher’s tale of defeating traps, tricks, and complex virtual machines",https://cloudblogs.microsoft.com/microsoftsecure/2018/03/01/finfisher-exposed-a-researchers-tale-of-defeating-traps-tricks-and-complex-virtual-machines/
389,Lobsters,assembly,Assembly Language,A Code Cartoon introduction to WebAssembly with Lin Clark,https://www.youtube.com/watch?v=smcN0Dvctac
390,Lobsters,assembly,Assembly Language,Building mrbuffer: a text editor for a 31 year old computer,https://gist.github.com/867b55fa8efcc829abd62e666154b59e
391,Lobsters,assembly,Assembly Language,Pokémon Red/Blue disassembled and refactored to human-readable (and editable!) asm,https://github.com/pret/pokered
392,Lobsters,assembly,Assembly Language,Capability Addressing,http://mrfunk.info/?page_id=5
393,Lobsters,assembly,Assembly Language,Program Generation for Intel AES New Instructions (2011),http://www.rksm.me/phd/thesis.pdf
394,Lobsters,assembly,Assembly Language,PeachPy: A Python Framework for Developing High-Performance Assembly Kernels (2013),http://www.dlr.de/sc/en/Portaldata/15/Resources/dokumente/PyHPC2013/submissions/pyhpc2013_submission_10.pdf
395,Lobsters,assembly,Assembly Language,"Writing Practical, Memory Management Code with a Strictly-Typed, Assembly Language (2006)",http://web.yl.is.s.u-tokyo.ac.jp/~tosh/talk/talk.pdf
396,Lobsters,assembly,Assembly Language,MeltdownPrime and SpectrePrime,https://arxiv.org/pdf/1802.03802.pdf
397,Lobsters,assembly,Assembly Language,Synthesis - An Efficient Implementation of Fundamental Operating System Services (1992),https://pdfs.semanticscholar.org/206a/4efe87abbea5f711a28397447b8ae2159d3b.pdf
398,Lobsters,assembly,Assembly Language,Optimizing BitBlt by generating code on the fly,https://blogs.msdn.microsoft.com/oldnewthing/20180209-00/?p=97995
399,Lobsters,assembly,Assembly Language,Switch to Windows 95,https://blog.krnl386.com/index.php?post/2018/02/03/Switch-to-Windows-95
400,Lobsters,assembly,Assembly Language,Identifying Loops While Reverse Engineering,https://jmcph4.github.io/2018/02/02/identifying-loops-while-reverse-engineering/
401,Lobsters,assembly,Assembly Language,Automated Verification of RISC-V Kernel Code (2016),https://courses.cs.washington.edu/courses/cse599w/16sp/projects/riscv.pdf
402,Lobsters,assembly,Assembly Language,Stratified Synthesis: Automatically Learning the x64 Instruction Set (2016),https://raw.githubusercontent.com/StanfordPL/stoke/develop/docs/papers/pldi16.pdf
403,Lobsters,assembly,Assembly Language,Redundancy of x86 Machine Code,https://www.strchr.com/machine_code_redundancy
404,Lobsters,assembly,Assembly Language,"""Modern"" NES Development",http://timcheeseman.com/nesdev/
405,Lobsters,assembly,Assembly Language,Building an Operating System for the Rasberry Pi,https://jsandler18.github.io/
406,Lobsters,assembly,Assembly Language,Baby's First x64 ASM Program: Advanced EMT Drug Calculations,http://8bit-raincloud.com/posts/babys-first-x64-asm-program/
407,Lobsters,assembly,Assembly Language,Finding a CPU Design Bug in the Xbox 360,https://randomascii.wordpress.com/2018/01/07/finding-a-cpu-design-bug-in-the-xbox-360/
408,Lobsters,assembly,Assembly Language,Spectre & Meltdown: tapping into the CPU's subconscious thoughts •,http://ds9a.nl/articles/posts/spectre-meltdown/
409,Lobsters,assembly,Assembly Language,How the JVM compares your strings using the craziest x86 instruction sets,http://jcdav.is/2016/09/01/How-the-JVM-compares-your-strings/
410,Lobsters,assembly,Assembly Language,There’s Another Possibility,http://www.os2museum.com/wp/theres-another-possibility/
411,Lobsters,assembly,Assembly Language,ropchain,http://www.kvakil.me/posts/ropchain/
412,Lobsters,assembly,Assembly Language,Much Assembly Required: Assembly Programming Game,https://muchassemblyrequired.com/
413,Lobsters,assembly,Assembly Language,VisUAL - A highly visual ARM emulator,https://salmanarif.bitbucket.io/visual/index.html
414,Lobsters,assembly,Assembly Language,An introduction into reverse-engineering x86 microcode and writing it yourself,https://media.ccc.de/v/34c3-9058-everything_you_want_to_know_about_x86_microcode_but_might_have_been_afraid_to_ask
415,Lobsters,assembly,Assembly Language,AMD64 APM Archive Online,http://www.os2museum.com/wp/amd64-apm-archive-online/
416,Lobsters,assembly,Assembly Language,Scrolling on the Amiga,http://uridiumauthor.blogspot.com/2017/12/scrolling-on-amiga.html
417,Lobsters,assembly,Assembly Language,"Undocumented 8086 Opcodes, Part I",http://www.os2museum.com/wp/undocumented-8086-opcodes-part-i/
418,Lobsters,assembly,Assembly Language,Running native programs on the Amstrad NC200 (Z80 portable computer),http://cowlark.com/2017-12-04-nc200-reverse-engineering/
419,Lobsters,assembly,Assembly Language,You don't have to learn assembly to read disassembly,http://wordsandbuttons.online/you_dont_have_to_learn_assembly_to_read_disassembly.html
420,Lobsters,assembly,Assembly Language,A Programming Language With Only One Command and the Anti-Imperialist Operating System Built on it,http://esoteric.codes/post/168290778358/a-programming-language-with-only-one-command-and
421,Lobsters,assembly,Assembly Language,Creating a Christmas card on a vintage IBM 1401 mainframe,http://www.righto.com/2017/12/creating-christmas-card-on-vintage-ibm_7.html
422,Lobsters,assembly,Assembly Language,The Woz Wonderbook (1977),http://www.digibarn.com/collections/books/woz-wonderbook/Apple2WozWonderbook1977.pdf
423,Lobsters,assembly,Assembly Language,sshtalk,https://2ton.com.au/sshtalk/
424,Lobsters,assembly,Assembly Language,A Simple Multi-Processor Computer Based on Subleq (2011),https://arxiv.org/ftp/arxiv/papers/1106/1106.2593.pdf
425,Lobsters,assembly,Assembly Language,The Old-School Fire Effect and Bare-Metal Programming,http://www.hanshq.net/fire.html
426,Lobsters,assembly,Assembly Language,PoC || GTFO 16,https://www.alchemistowl.org/pocorgtfo/pocorgtfo16.pdf
427,Lobsters,assembly,Assembly Language,The wrong way of benchmarking the most efficient integer comparison function,https://blogs.msdn.microsoft.com/oldnewthing/20171117-00/?p=97416
428,Lobsters,assembly,Assembly Language,JIT compiling a subset of Python to x86-64,https://csl.name/post/python-compiler/
429,Lobsters,assembly,Assembly Language,FunTAL: mixing a functional language with assembly,https://dbp.io/artifacts/funtal/
430,Lobsters,assembly,Assembly Language,x86_64 TCP bind shellcode with basic authentication on Linux systems,https://pentesterslife.blog/2017/11/01/x86_64-tcp-bind-shellcode-with-basic-authentication-on-linux-systems/
431,Lobsters,assembly,Assembly Language,Assembly Basics Cheatsheet,https://azeria-labs.com/assembly-basics-cheatsheet/
432,Lobsters,assembly,Assembly Language,G.E.R.T : Golang Embedded Run-Time,https://github.com/ycoroneos/G.E.R.T
433,Lobsters,assembly,Assembly Language,UEFI Programming - First Steps,http://x86asm.net/articles/uefi-programming-first-steps/
434,Lobsters,assembly,Assembly Language,Writing a Bootloader (Part 1),http://3zanders.co.uk/2017/10/13/writing-a-bootloader/
435,Lobsters,assembly,Assembly Language,Dangerous Pickles — Malicious Python Serialization,https://intoli.com/blog/dangerous-pickles/
436,Lobsters,assembly,Assembly Language,Haskell Typeclasses vs. C++ Classes,http://www.michaelburge.us/2017/10/15/haskell-typeclasses-vs-cpp-classes.html
437,Lobsters,assembly,Assembly Language,A Comprehensive Super Mario Bros. Disassembly,https://gist.github.com/1wErt3r/4048722
438,Lobsters,assembly,Assembly Language,ChrysaLisp - 64-bit Lisp OS with Assembler/C-Script/GUI,https://github.com/vygr/ChrysaLisp
439,Lobsters,assembly,Assembly Language,Mill CPU Inter-process Communication,https://millcomputing.com/topic/inter-process-communication/
440,Lobsters,assembly,Assembly Language,x86/x64 SIMD Instruction List (SSE to AVX512),http://www.officedaytime.com/simd512e/simd.html
441,Lobsters,assembly,Assembly Language,"Menuet – A pre-emptive, real-time and multiprocessor OS written in assembly",http://www.menuetos.net/
442,Lobsters,assembly,Assembly Language,Another tutorial for writing a Forth interpreter in assembly (Part 3),http://blog.asrpo.com/forth_tutorial_part_3
443,Lobsters,assembly,Assembly Language,"x86 Proved: Coq Library for Modelling, Specification, Generation, and Proof for x86 Machine Code",https://x86proved.codeplex.com/
444,Lobsters,assembly,Assembly Language,Great Microprocessors of the Past and Present (2003),http://www.cpushack.com/CPU/cpu.html
445,Lobsters,assembly,Assembly Language,"Vale: Verifying High-Performance, Cryptographic, Assembly Code (2017)",https://project-everest.github.io/assets/vale2017.pdf
446,Lobsters,assembly,Assembly Language,Building a CPU with Haskell - Part 1,http://yager.io/CPU/CPU1.html
447,Lobsters,assembly,Assembly Language,Another tutorial for writing a Forth interpreter in assembly (Part 2),https://blog.asrpo.com/forth_tutorial_part_2
448,Lobsters,assembly,Assembly Language,Another fast fixed-point sine approximation,http://www.coranac.com/2009/07/sines/
449,Lobsters,assembly,Assembly Language,Another tutorial for writing a Forth interpreter in assembly (Part 1),https://blog.asrpo.com/forth_tutorial_part_1
450,Lobsters,assembly,Assembly Language,Moxie Mixie: Frustrating Remote Attackers with Container Specific Instruction Sets,http://moxielogic.org/blog/moxie-mixie.html
451,Lobsters,assembly,Assembly Language,Hacking Burger Time with Lua,https://stefan.arentz.ca/2017/09/20/ewm-update-lets-get-cookin/
452,Lobsters,assembly,Assembly Language,EWM Update: Lua Integration,https://stefan.arentz.ca/2017/09/18/ewm-update-lua-integration/
453,Lobsters,assembly,Assembly Language,Power Struggles: Revisiting the RISC vs CISC Debate on Contemporary ARM and x86 Architectures (2013),https://research.cs.wisc.edu/vertical/papers/2013/hpca13-isa-power-struggles.pdf
454,Lobsters,assembly,Assembly Language,Build a working game of Tetris in Conway's Game of Life,https://codegolf.stackexchange.com/questions/11880/build-a-working-game-of-tetris-in-conways-game-of-life
455,Lobsters,assembly,Assembly Language,Injecting a Chess Engine into Amazon Redshift,http://www.michaelburge.us/2017/09/10/injecting-shellcode-to-speed-up-amazon-redshift.html
456,Lobsters,assembly,Assembly Language,Detecting debuggers by abusing a bad assumption within Windows,http://www.triplefault.io/2017/08/detecting-debuggers-by-abusing-bad.html
457,Lobsters,assembly,Assembly Language,"The Alpha AXP, part 17: Reconstructing a call stack",https://blogs.msdn.microsoft.com/oldnewthing/20170830-00/?p=96906
458,Lobsters,assembly,Assembly Language,"The Alpha AXP, part 16: What are the dire consequences of having 32-bit values in non-canonical form?",https://blogs.msdn.microsoft.com/oldnewthing/20170829-00/?p=96897
459,Lobsters,assembly,Assembly Language,"The Alpha AXP, part 15: Variadic functions",https://blogs.msdn.microsoft.com/oldnewthing/20170828-00/?p=96895
460,Lobsters,assembly,Assembly Language,"The Alpha AXP, part 14: On the strange behavior of writes to the zero register",https://blogs.msdn.microsoft.com/oldnewthing/20170825-00/?p=96887
461,Lobsters,assembly,Assembly Language,Software optimization resources,http://agner.org/optimize/
462,Lobsters,assembly,Assembly Language,"The Alpha AXP, part 13: On treating a 64-bit processor as if it were a 32-bit processor",https://blogs.msdn.microsoft.com/oldnewthing/20170823-00/?p=96875
463,Lobsters,assembly,Assembly Language,The Alpha AXP: Part 12: How you detect carry on a processor with no carry?,https://blogs.msdn.microsoft.com/oldnewthing/20170822-00/?p=96865
464,Lobsters,assembly,Assembly Language,"The Alpha AXP, part 11: Processor faults",https://blogs.msdn.microsoft.com/oldnewthing/20170821-00/?p=96855
465,Lobsters,assembly,Assembly Language,"The Alpha AXP, part 10: Atomic updates to byte and word memory units",https://blogs.msdn.microsoft.com/oldnewthing/20170818-00/?p=96845
466,Lobsters,assembly,Assembly Language,Minus Zero,https://www.fourmilab.ch/documents/univac/minuszero.html
467,Lobsters,assembly,Assembly Language,"The Alpha AXP, part 9: The memory model and atomic memory operations",https://blogs.msdn.microsoft.com/oldnewthing/20170817-00/?p=96835
468,Lobsters,assembly,Assembly Language,"The Alpha AXP, part 8: Memory access, storing bytes and words and unaligned data",https://blogs.msdn.microsoft.com/oldnewthing/20170816-00/?p=96825
469,Lobsters,assembly,Assembly Language,"The Alpha AXP, part 7: Memory access, loading unaligned data",https://blogs.msdn.microsoft.com/oldnewthing/20170815-00/?p=96816
470,Lobsters,assembly,Assembly Language,"The Alpha AXP, part 6: Memory access, basics",https://blogs.msdn.microsoft.com/oldnewthing/20170814-00/?p=96806
471,Lobsters,assembly,Assembly Language,Plasma: an interactive disassembler,https://github.com/plasma-disassembler/plasma
472,Lobsters,assembly,Assembly Language,"The Alpha AXP, part 5: Conditional operations and control flow",https://blogs.msdn.microsoft.com/oldnewthing/20170811-00/?p=96805
473,Lobsters,assembly,Assembly Language,The IBM PC BIOS and Intel ISIS-II,http://www.os2museum.com/wp/the-ibm-pc-bios-and-intel-isis-ii/
474,Lobsters,assembly,Assembly Language,"The Alpha AXP, part 4: Bit 15. Ugh. Bit 15.",https://blogs.msdn.microsoft.com/oldnewthing/20170810-00/?p=96795
475,Lobsters,assembly,Assembly Language,Bringing Call Gates Back,http://www.alex-ionescu.com/?p=340
476,Lobsters,assembly,Assembly Language,"The Alpha AXP, part 3: Integer constants",https://blogs.msdn.microsoft.com/oldnewthing/20170809-00/?p=96785
477,Lobsters,assembly,Assembly Language,"The Alpha AXP, part 2: Integer calculations",https://blogs.msdn.microsoft.com/oldnewthing/20170808-00/?p=96775
478,Lobsters,assembly,Assembly Language,Unearthing The PDP-15’s Operating Systems,http://simh.trailing-edge.com/docs/advmonsys.pdf
479,Lobsters,assembly,Assembly Language,"The Alpha AXP, part 1: Initial plunge",https://blogs.msdn.microsoft.com/oldnewthing/20170807-00/?p=96766
480,Lobsters,assembly,Assembly Language,To Depart From Clemency: a DEF CON 2017 Retrospective,http://dttw.tech/posts/rJHDh3RLb
481,Lobsters,assembly,Assembly Language,Bootloader and Low-Level Programming Tutorial: How To Develop Your Own Boot Loader,https://www.apriorit.com/dev-blog/66-develop-boot-loader
482,Lobsters,assembly,Assembly Language,Easy Code Visual Assembler IDE,http://www.easycode.cat/English/
483,Lobsters,assembly,Assembly Language,Mozilla funds webpack to add WebAssembly,https://medium.com/webpack/webpack-awarded-125-000-from-moss-program-f63eeaaf4e15
484,Lobsters,assembly,Assembly Language,Booting the Nintendo DS – a technical summary,https://corgids.wordpress.com/2017/07/28/booting-the-nintendo-ds-a-technical-summary/
485,Lobsters,assembly,Assembly Language,16-Bit VM in javascript,https://francisstokes.wordpress.com/2017/07/20/16-bit-vm-in-javascript/
486,Lobsters,assembly,Assembly Language,"SYSENTER, Where Are You?",http://www.os2museum.com/wp/sysenter-where-are-you/
487,Lobsters,assembly,Assembly Language,HTML5PCODE,http://html5pcode.com/index.html
488,Lobsters,assembly,Assembly Language,Compiling Python syntax to x86-64 assembly for fun and (zero) profit,http://benhoyt.com/writings/pyast64/
489,Lobsters,assembly,Assembly Language,6502cloud - Bringing the 80's to the cloud,http://www.6502cloud.com/
490,Lobsters,assembly,Assembly Language,Introduction to IA-32e hardware paging,http://www.triplefault.io/2017/07/introduction-to-ia-32e-hardware-paging.html
491,Lobsters,assembly,Assembly Language,Google Sheets Virtual Machine,http://briansteffens.github.io/2017/07/03/google-sheets-virtual-machine.html
492,Lobsters,assembly,Assembly Language,Outsmarting the compiler,http://dpzmick.com/2017/05/25/outsmarting-the-compiler/
493,Lobsters,assembly,Assembly Language,OpenBSD now has Trapsleds to make life harder for ROPers,http://undeadly.org/cgi?action=article&sid=20170622065629
494,Lobsters,assembly,Assembly Language,Kernel driver unpacking x64dbg,http://x64dbg.com/blog/2017/06/08/kernel-driver-unpacking.html
495,Lobsters,assembly,Assembly Language,Manually Creating an ELF Executable (2014),https://web.archive.org/web/20140130143820/http://robinhoksbergen.com/papers/howto_elf.html
496,Lobsters,assembly,Assembly Language,Try HLSL,http://tryhlsl.azurewebsites.net/
497,Lobsters,assembly,Assembly Language,c2goasm: C to Go Assembly,https://github.com/minio/c2goasm
498,Lobsters,assembly,Assembly Language,The L2 Programming Language,https://github.com/murisi/L2/
499,Lobsters,assembly,Assembly Language,Demystifying SSE Move Instructions,https://www.gamedev.net/blog/615/entry-2250281-demystifying-sse-move-instructions/
500,Lobsters,assembly,Assembly Language,Asi64 - 6502 Assembler in Racket,http://pinksquirrellabs.com/blog/2017/05/30/asi64/
501,Lobsters,assembly,Assembly Language,Writing ARM Assembly,https://azeria-labs.com/writing-arm-assembly-part-1/
502,Lobsters,assembly,Assembly Language,Cyborg Chicken,http://www.mikekohn.net/micro/cyborg_chicken.php
503,Lobsters,assembly,Assembly Language,Debris: Opening the box,https://fgiesen.wordpress.com/2012/02/13/debris-opening-the-box/
504,Lobsters,assembly,Assembly Language,Metaprogramming for madmen,https://fgiesen.wordpress.com/2012/04/08/metaprogramming-for-madmen/
505,Lobsters,assembly,Assembly Language,How To Write A Maths Library In 2016,http://www.codersnotes.com/notes/maths-lib-2016/
506,Lobsters,assembly,Assembly Language,Crash course to Amiga assembly programming,https://www.reaktor.com/blog/crash-course-to-amiga-assembly-programming/
507,Lobsters,assembly,Assembly Language,8bitworkshop ~ Z80 Compiler Visualization,http://8bitworkshop.com/viz.html
508,Lobsters,assembly,Assembly Language,An LZ Codec Designed for SSE Decompression,http://conorstokes.github.io/compression/2016/02/15/an-LZ-codec-designed-for-SSE-decompression
509,Lobsters,assembly,Assembly Language,Optimizing Lever PNG loading,http://boxbase.org/entries/2017/may/8/optimizing_lever_png/
510,Lobsters,assembly,Assembly Language,Mipsdis: MIPS disassembler in the browser,http://blog.loadzero.com/blog/announcing-mipsdis/
511,Lobsters,assembly,Assembly Language,Agner`s CPU blog - Test results for AMD Ryzen,http://agner.org/optimize/blog/read.php?i=838
512,Lobsters,assembly,Assembly Language,How Many x86-64 Instructions Are There Anyway? (2016),https://stefanheule.com/blog/how-many-x86-64-instructions-are-there-anyway/
513,Lobsters,assembly,Assembly Language,A Mind Is Born,https://linusakesson.net/scene/a-mind-is-born/
514,Lobsters,assembly,Assembly Language,ARM Releases Machine Readable Architecture Specification,https://alastairreid.github.io/alastairreid.github.io/ARM-v8a-xml-release/
515,Lobsters,assembly,Assembly Language,Raw Linux Threads via System Calls,http://nullprogram.com/blog/2015/05/15/
516,Lobsters,assembly,Assembly Language,A Scheme Interpreter for ARM Microcontrollers,http://armpit.sourceforge.net/
517,Lobsters,assembly,Assembly Language,A Mind Is Born,http://www.linusakesson.net/scene/a-mind-is-born/index.php
518,Lobsters,assembly,Assembly Language,How to write a simple operating system in assembly language,http://mikeos.sourceforge.net/write-your-own-os.html
519,Lobsters,assembly,Assembly Language,Sweet 16: The 6502 Dream Machine (1977),http://amigan.1emu.net/kolsen/programming/sweet16.html
520,Lobsters,assembly,Assembly Language,Intel MPX Explained,https://intel-mpx.github.io/
521,Lobsters,assembly,Assembly Language,"LandHere, an x86 ISA extension as possible mitigation for code-reuse attacks",http://landhere.galois.com/
522,Lobsters,assembly,Assembly Language,Alternatives to short unconditional jumps on x86,http://www.corsix.org/content/lxi-trick
523,Lobsters,assembly,Assembly Language,"Compiling C to printable x86, to make an executable research paper",https://www.youtube.com/watch?v=LA_DrBwkiJA
524,Lobsters,assembly,Assembly Language,CFI directives in assembly files,https://www.imperialviolet.org/2017/01/18/cfi.html
525,Lobsters,assembly,Assembly Language,"Firefox 52: Introducing Web Assembly, CSS Grid and the Grid Inspector",https://hacks.mozilla.org/2017/03/firefox-52-introducing-web-assembly-css-grid-and-the-grid-inspector/
526,Lobsters,assembly,Assembly Language,"xmake v2.1.1 released, support golang, dlang and rust languages",http://www.tboox.org/2017/03/04/update-v2.1.1/
527,Lobsters,assembly,Assembly Language,x86 Paging Tutorial,http://www.cirosantilli.com/x86-paging/
528,Lobsters,assembly,Assembly Language,Optimizing box pruning,http://www.codercorner.com/blog/?page_id=1632
529,Lobsters,assembly,Assembly Language,SIMD-friendly algorithms for substring searching,http://0x80.pl/articles/simd-strfind.html
530,Lobsters,assembly,Assembly Language,a heisenbug to share,http://madcatllc.tumblr.com/post/157635937646/a-heisenbug-to-share
531,Lobsters,assembly,Assembly Language,How to Enhance an SNES Game With the MSU-1 - Part 1: There is No Documentation Anywhere (2013),http://jumbocactuarx27.blogspot.com/2013/08/how-to-enhance-snes-game-with-msu-1.html
532,Lobsters,assembly,Assembly Language,How copying an int made my code 11 times faster,https://medium.com/@robertgrosse/how-copying-an-int-made-my-code-11-times-faster-f76c66312e0f
533,Lobsters,assembly,Assembly Language,Note on changes to the box pruning code,https://gist.github.com/rygorous/fdd41f45b24472649aaeb5b55bbe6e26?ts=4
534,Lobsters,assembly,Assembly Language,An experiment: introducing the PopOutPlayer (plus: microbenchmarking PowerPC SPRs),http://tenfourfox.blogspot.com/2017/02/an-experiment-introducing-popoutplayer.html
535,Lobsters,assembly,Assembly Language,Attack of the DaliBug,http://pozorvlak.livejournal.com/150891.html
536,Lobsters,assembly,Assembly Language,Reverse Engineering a book cover,https://vulnsec.com/2017/reverse-engineering-a-book-cover/
537,Lobsters,assembly,Assembly Language,"Pure assembly, library-free Linux threading demo",https://github.com/skeeto/pure-linux-threads-demo
538,Lobsters,assembly,Assembly Language,jonesforth.S - A sometimes minimal FORTH compiler and tutorial for Linux,http://git.annexia.org/?p=jonesforth.git;a=blob;f=jonesforth.S
539,Lobsters,assembly,Assembly Language,Creating a language using only assembly language,https://speakerdeck.com/nineties/creating-a-language-using-only-assembly-language
540,Lobsters,assembly,Assembly Language,Rux: A Hobbyist Microkernel Written in Rust,https://github.com/sorpaas/rux
541,Lobsters,assembly,Assembly Language,"Really, POSIX? Really? memset() isn't async-signal-safe? How is it not safe? … oh … that's why",http://boston.conman.org/2016/12/17.1
542,Lobsters,assembly,Assembly Language,Questions about Superoptimization,http://www.oilshell.org/blog/2016/12/30.html
543,Lobsters,assembly,Assembly Language,How to Create a Virus Using the Assembly Language,https://cranklin.wordpress.com/2016/12/26/how-to-create-a-virus-using-the-assembly-language/
544,Lobsters,assembly,Assembly Language,SIMD at Insomniac Games,https://deplinenoise.files.wordpress.com/2015/03/gdc2015_afredriksson_simd.pdf
545,Lobsters,assembly,Assembly Language,Taming the Jaguar,https://deplinenoise.files.wordpress.com/2016/03/gdc16_fredriksson_jaguar.pdf
546,Lobsters,assembly,Assembly Language,Static Binary Translation,http://www.gtoal.com/sbt/
547,Lobsters,assembly,Assembly Language,Pokémon R/B/Y: Bringing arbitrary code execution to other games,https://www.youtube.com/watch?v=SL_Zuc0tlvo
548,Lobsters,assembly,Assembly Language,Investigating 65C816 Interrupts,http://6502.org/tutorials/65c816interrupts.html
549,Lobsters,assembly,Assembly Language,Compiler Explorer,http://godbolt.org/
550,Lobsters,assembly,Assembly Language,Fast Fourier transform in x86 assembly,https://www.nayuki.io/page/fast-fourier-transform-in-x86-assembly
551,Lobsters,assembly,Assembly Language,Sega Game Coding in Assembly - Computerphile,https://www.youtube.com/watch?v=GH94fKtGr0M
552,Lobsters,assembly,Assembly Language,Toy decompiler for x86-64 written in Python,https://yurichev.com/writings/toy_decompiler.pdf
553,Lobsters,assembly,Assembly Language,Systematic Synthesis of Elliptic Curve Cryptography Implementations,https://people.csail.mit.edu/jgross/personal-website/papers/2017-fiat-crypto-pldi-draft.pdf
554,Lobsters,assembly,Assembly Language,Slack client for Commodore 64,http://1amstudios.com/2016/11/27/c64-slack-client/
555,Lobsters,assembly,Assembly Language,Ulrich Drepper's x86 opcode cheatsheet,https://www.akkadia.org/drepper/x86-opcode-structure.pdf
556,Lobsters,assembly,Assembly Language,Learning to Read x86 Assembly Language,http://patshaughnessy.net/2016/11/26/learning-to-read-x86-assembly-language
557,Lobsters,assembly,Assembly Language,Bit Twiddling Hacks,http://graphics.stanford.edu/~seander/bithacks.html
558,Lobsters,assembly,Assembly Language,Super Mario World Powerup Incrementation Explained,https://www.youtube.com/watch?v=TqK-2jUQBUY
559,Lobsters,assembly,Assembly Language,radare2 meets com101,https://zxvf.org/post/r2com101/
560,Lobsters,assembly,Assembly Language,A Magnetized Needle and a Steady Hand,http://nullprogram.com/blog/2016/11/17/
561,Lobsters,assembly,Assembly Language,OcaPIC - PIC microcontrollers programmed in Ocaml,http://www.algo-prog.info/ocapic/web/index.php?id=OCAPIC:OCAPIC
562,Lobsters,assembly,Assembly Language,A bug story: data alignment on x86,http://pzemtsov.github.io/2016/11/06/bug-story-alignment-on-x86.html
563,Lobsters,assembly,Assembly Language,"50,000,000,000 Instructions Per Second: Design and Implementation of a 256-Core BrainFuck Computer",http://people.csail.mit.edu/wjun/papers/sigtbd16.pdf
564,Lobsters,assembly,Assembly Language,Assembly Cup,https://asmcup.github.io/
565,Lobsters,assembly,Assembly Language,Exploring ARM inline assembly in Rust,http://embed.rs/articles/2016/arm-inline-assembly-rust/
566,Lobsters,assembly,Assembly Language,Baby's First JIT,https://cmcenroe.me/2016/10/13/babys-first-jit.html
567,Lobsters,assembly,Assembly Language,Bivertless High Contrast Game Boy Backlighting,https://ecc-comp.blogspot.com/2016/10/bivertless-high-contrast-game-boy.html
568,Lobsters,assembly,Assembly Language,Tetros: Tetris that fits into the 512 byte MBR,https://github.com/daniel-e/tetros
569,Lobsters,assembly,Assembly Language,The Mysterious Fiber Bomb Problem: A Debugging Story,https://sandstorm.io/news/2016-09-30-fiber-bomb-debugging-story
570,Lobsters,assembly,Assembly Language,Fixing E.T. for the Atari 2600,http://www.neocomputer.org/projects/et/?1
571,Lobsters,assembly,Assembly Language,Pitfalls of TSC usage | Oliver Yang,http://oliveryang.net/2015/09/pitfalls-of-TSC-usage/
572,Lobsters,assembly,Assembly Language,"SASM - Simple crossplatform IDE for NASM, MASM, GAS, FASM assembly languages",https://dman95.github.io/SASM/english.html
573,Lobsters,assembly,Assembly Language,How many x86 instructions are there?,https://fgiesen.wordpress.com/2016/08/25/how-many-x86-instructions-are-there/
574,Lobsters,assembly,Assembly Language,Motorola 68000 Oral History Panel,https://www.youtube.com/watch?v=UaHtGf4aRLs
575,Lobsters,assembly,Assembly Language,MOnSter 6502 - Built a 6502 CPU out of 3218 transistors,http://monster6502.com/
576,Lobsters,assembly,Assembly Language,Linux Kernel Memory Barriers (2006),https://www.kernel.org/doc/Documentation/memory-barriers.txt
577,Lobsters,assembly,Assembly Language,Lolcat Clone in x64 Assembly,https://gkbrk.com/2016/07/lolcat-clone-in-x64-assembly/
578,Lobsters,assembly,Assembly Language,Project Notes: GPLGPU Walkthrough,http://latchup.blogspot.com/2016/07/gplgpu-walkthrough.html
579,Lobsters,assembly,Assembly Language,Classic NES Series Anti-Emulation Measures (2014),https://mgba.io/2014/12/28/classic-nes/
580,Lobsters,assembly,Assembly Language,Running Windows 64-bit in QEMU Emulation Mode,https://www.invincealabs.com/blog/2016/07/running-windows-64bit-qemu/
581,Lobsters,assembly,Assembly Language,Embedded Security CTF,https://microcorruption.com
582,Lobsters,assembly,Assembly Language,Original Apollo 11 guidance computer (AGC) source code,https://github.com/chrislgarry/Apollo-11
583,Lobsters,assembly,Assembly Language,Introduction to ARM,http://www.davespace.co.uk/arm/introduction-to-arm/index.html
584,Lobsters,assembly,Assembly Language,IBM RT Personal Computer Technology (1986),http://www.textfiles.com/bitsavers/pdf/ibm/pc/rt/SA23-1057_IBM_RT_Personal_Computer_Technology_1986.pdf
585,Lobsters,assembly,Assembly Language,reductio - an exploration of code homeomorphism,https://github.com/xoreaxeaxeax/reductio
586,Lobsters,assembly,Assembly Language,Ancient code,http://thecodelesscode.com/misc/ancient-code
587,Lobsters,assembly,Assembly Language,DaChip8JS - My C# Chip-8 Interpreter running in the browser using Bridge.NET,http://blog.dantup.com/2016/06/dachip8js-my-csharp-chip8-interpreter-running-in-the-browser/
588,Lobsters,assembly,Assembly Language,Building a Chip-8 Interpreter in C#,http://blog.dantup.com/2016/06/building-a-chip-8-interpreter-in-csharp/
589,Lobsters,assembly,Assembly Language,Tagged Pointer Strings,https://mikeash.com/pyblog/friday-qa-2015-07-31-tagged-pointer-strings.html
590,Lobsters,assembly,Assembly Language,Hello from a libc-free world! (Part 1) (2010),https://blogs.oracle.com/ksplice/entry/hello_from_a_libc_free
591,Lobsters,assembly,Assembly Language,"The Story of Mel, a Real Programmer (1983)",https://www.cs.utah.edu/~elb/folklore/mel.html
592,Lobsters,assembly,Assembly Language,"Keystone - Lightweight multi-platform, multi-architecture assembler framework",http://www.keystone-engine.org/
593,Lobsters,assembly,Assembly Language,Writing my first shellcode - iptables -P INPUT ACCEPT,https://0day.work/writing-my-first-shellcode-iptables-p-input-accept/
594,Lobsters,assembly,Assembly Language,Defusing a binary bomb with gdb - Part 7,http://blog.carlosgaldino.com/2016/05/24/defusing-a-binary-bomb-with-gdb-part-7.html
595,Lobsters,assembly,Assembly Language,PolyHook -- Library for Hooking Functions,https://github.com/stevemk14ebr/PolyHook
596,Lobsters,assembly,Assembly Language,Defusing a binary bomb with gdb - Part 6,http://blog.carlosgaldino.com/2016/05/19/defusing-a-binary-bomb-with-gdb-part-6.html
597,Lobsters,assembly,Assembly Language,JayStation2 Dev Blog,http://maisonikkoku.com/jaystation2/blog_main.html
598,Lobsters,assembly,Assembly Language,A Whirlwind Tutorial on Creating Really Teensy ELF Executables for Linux (2005),http://www.muppetlabs.com/~breadbox/software/tiny/teensy.html
599,Lobsters,assembly,Assembly Language,Writing a CHIP-8 Virtual Machine in Rust,https://walterkuppens.com/post/writing-a-chip-8-virtual-machine-in-rust/
600,Lobsters,assembly,Assembly Language,Debian i386 architecture now requires a 686-class processor,https://lists.debian.org/debian-devel-announce/2016/05/msg00001.html
601,Lobsters,assembly,Assembly Language,The illumos SYSCALL Handler,http://zinascii.com/2016/the-illumos-syscall-handler.html
602,Lobsters,assembly,Assembly Language,Jack Whitham: RISC instruction sets I have known and disliked,http://blog.jwhitham.org/2016/02/risc-instruction-sets-i-have-known-and.html
603,Lobsters,assembly,Assembly Language,Design of the RISC-V Instruction Set Architecture,http://www.eecs.berkeley.edu/~waterman/papers/phd-thesis.pdf
604,Lobsters,assembly,Assembly Language,Defusing a binary bomb with gdb - Part 5,http://blog.carlosgaldino.com/2016/04/28/defusing-a-binary-bomb-with-gdb-part-5.html
605,Lobsters,assembly,Assembly Language,Debugging memory corruption: who the hell writes “2” into my stack?!,http://blogs.unity3d.com/2016/04/25/debugging-memory-corruption-who-the-hell-writes-2-into-my-stack-2/
606,Lobsters,assembly,Assembly Language,Defusing a binary bomb with gdb - Part 4,http://blog.carlosgaldino.com/2016/04/25/defusing-a-binary-bomb-with-gdb-part-4.html
607,Lobsters,assembly,Assembly Language,Stratified Synthesis: Automatically Learning the x86-64 Instruction Set,https://stefanheule.com/publications/pldi16-strata/
608,Lobsters,assembly,Assembly Language,Well written tutorial about some of the lowest level concepts involved in getting an OS running,http://os.phil-opp.com/
609,Lobsters,assembly,Assembly Language,SPMD Is Not Intel’s Cup Of Tea,http://www.joshbarczak.com/blog/?p=1120
610,Lobsters,assembly,Assembly Language,The Definitive Guide to Linux System Calls,http://blog.packagecloud.io/eng/2016/04/05/the-definitive-guide-to-linux-system-calls/
611,Lobsters,assembly,Assembly Language,SSE: mind the gap!,https://fgiesen.wordpress.com/2016/04/03/sse-mind-the-gap/
612,Lobsters,assembly,Assembly Language,ASM.OCaml,http://www.ocamlpro.com/2016/04/01/asm-ocaml/
613,Lobsters,assembly,Assembly Language,BOX-256,http://juhakiili.com/box256/manual/
614,Lobsters,assembly,Assembly Language,Hotpatching a C Function on x86,http://nullprogram.com/blog/2016/03/31/
615,Lobsters,assembly,Assembly Language,E7 E7 E7 EE: the story of the greatest copy protection ever invented,https://archive.org/details/2015_Kfest_Pilgrim_Copy_Protection
616,Lobsters,assembly,Assembly Language,SNES Code Injection -- Flappy Bird in Super Mario World,https://www.youtube.com/watch?v=hB6eY73sLV0
617,Lobsters,assembly,Assembly Language,Branchless Conditionals (Compiler Optimization Technique),http://www.blueraja.com/blog/285/branchless-conditionals-compiler-optimization-technique
618,Lobsters,assembly,Assembly Language,Inside a register allocator,http://artagnon.com/inside-a-register-allocator/
619,Lobsters,assembly,Assembly Language,Intel® Memory Protection Extensions (Intel® MPX) for Linux,https://01.org/blogs/2016/intel-mpx-linux
620,Lobsters,assembly,Assembly Language,BinDiff now available for free,https://security.googleblog.com/2016/03/bindiff-now-available-for-free.html
621,Lobsters,assembly,Assembly Language,"Reverse engineering Kirby's Dreamland 2, for Game Boy",http://ecc-comp.blogspot.com/2016/03/reverse-engineering-kirbys-dreamland-2.html
622,Lobsters,assembly,Assembly Language,"micro-coreutils - codegolfed assembly implementations of yes, echo, and cat",https://github.com/mystor/micro-coreutils
623,Lobsters,assembly,Assembly Language,A Gentle Introduction to Machine Fundamentals,https://marijnhaverbeke.nl/turtle/
624,Lobsters,assembly,Assembly Language,"rappel: assembly REPL for x86, amd64, and armv7",https://github.com/yrp604/rappel
625,Lobsters,assembly,Assembly Language,Fast strong hash functions: SipHash/HighwayHash,https://github.com/google/highwayhash
626,Lobsters,assembly,Assembly Language,Access violation on nonsense instruction,https://blogs.msdn.microsoft.com/oldnewthing/20141226-00/?p=43293
627,Lobsters,assembly,Assembly Language,Microchess,http://www.benlo.com/microchess/
628,Lobsters,assembly,Assembly Language,"Building a Tetris Clone in x86 Assembly, pt. Ⅲ: Time, pt. Ⅰ",https://cmcenroe.me/2016/02/14/tetrasm-3-1.html
629,Lobsters,assembly,Assembly Language,Assembly is Too High Level: Repetition of REP Instructions That Don’t Repeat Anything,http://xlogicx.net/?p=493
630,Lobsters,assembly,Assembly Language,"Why do Windows functions all begin with a pointless MOV EDI, EDI instruction?",https://blogs.msdn.microsoft.com/oldnewthing/20110921-00/?p=9583
631,Lobsters,assembly,Assembly Language,The Surprising Subtleties of Zeroing a Register (2012),https://randomascii.wordpress.com/2012/12/29/the-surprising-subtleties-of-zeroing-a-register/
632,Lobsters,assembly,Assembly Language,"The microarchitecture of Intel, AMD and VIA CPUs: An optimization guide",http://www.agner.org/optimize/microarchitecture.pdf
633,Lobsters,assembly,Assembly Language,Apollo 11 source code,http://www.ibiblio.org/apollo/listings/Luminary099/MAIN.agc.html
634,Lobsters,assembly,Assembly Language,More Turing-completeness in surprising places,http://kristerw.blogspot.com/2016/01/more-turing-completeness-in-surprising.html
635,Lobsters,assembly,Assembly Language,Moving Forth,http://bradrodriguez.com/papers/moving1.htm
636,Lobsters,assembly,Assembly Language,A tutorial introduction to programming PDP-11 Macro-11 Assembly in RT-11 v5.3,http://decuser.blogspot.com/2016/01/a-tutorial-introduction-to-programming.html
637,Lobsters,assembly,Assembly Language,NVlabs/SASSI,https://github.com/NVlabs/SASSI
638,Lobsters,assembly,Assembly Language,Running Java on the Atari 2600,http://www.mikekohn.net/micro/atari2600_java.php
639,Lobsters,assembly,Assembly Language,How to radare2 a fake openssh exploit,https://dustri.org/b/how-to-radare2-a-fake-openssh-exploit.html
640,Lobsters,assembly,Assembly Language,Virtual Memory With 256 Bytes of RAM,http://blog.robertelder.org/virtual-memory-with-256-bytes-of-ram/
641,Lobsters,assembly,Assembly Language,It’s been 30 years since the launch of MIPS R2000,http://blog.imgtec.com/mips-processors/thirty-years-of-mips-r2000
642,Lobsters,assembly,Assembly Language,"Michael Abrash’s Graphics Programming Black Book, Special Edition",http://www.jagregory.com/abrash-black-book/
643,Lobsters,assembly,Assembly Language,"TIS-100P - ""the assembly language programming game you never asked for!""",https://itunes.apple.com/us/app/tis-100p/id1070879899?mt=8
644,Lobsters,assembly,Assembly Language,"Smashing the z/OS LE ""Daisy"" Chain for Fun and Cease and Desist letters.",https://www.reddit.com/r/mainframe/comments/400ogh/smashing_the_zos_le_daisy_chain_for_fun_and_cease/
645,Lobsters,assembly,Assembly Language,Writing Assembly on OpenBSD (x86) (2012),https://web.archive.org/web/20120509101207/http://lucifer.phiral.net/openbsdasm.htm
646,Lobsters,assembly,Assembly Language,Function Parameters and Arguments on 32-bit ARM,https://blog.feabhas.com/2016/01/function-parameters-and-arguments-on-32-bit-arm/
647,Lobsters,assembly,Assembly Language,Monads to Machine Code (Part 1),http://www.stephendiehl.com/posts/monads_machine_code.html
648,Lobsters,assembly,Assembly Language,BurgerTime (1982) Finally Cracked,https://ia801505.us.archive.org/33/items/BurgerTime4amCrack/BurgerTime%20(4am%20crack).txt
649,Lobsters,assembly,Assembly Language,Tutorial - Setting up RT-11 v5.3 on SimH PDP-11 Simulator in Support of Assembly Development,http://decuser.blogspot.com/2015/12/tutorial-setting-up-rt-11-v53-on-simh.html
650,Lobsters,assembly,Assembly Language,PDP-11 Bootstrap loaders - some analysis,http://decuser.blogspot.com/2015/12/pdp-11-bootstrap-loaders-some-analysis.html
651,Lobsters,assembly,Assembly Language,Proposal for an ideal extensible instruction set,http://www.agner.org/optimize/blog/read.php?i=421
652,Lobsters,assembly,Assembly Language,A (mostly) useful debugger on z/OS,http://www.bigendiansmalls.com/a-mostly-useful-debugger-on-zos/
653,Lobsters,assembly,Assembly Language,64spec - Commodore 64 Testing Framework,http://64bites.com/64spec/
654,Lobsters,assembly,Assembly Language,Fixing Final Fantasy VI's Active Time Battle,http://www.twitlonger.com/show/n_1so1n7f
655,Lobsters,assembly,Assembly Language,Writing a 'trampoline' in assembly for profiling,http://tadeuzagallo.com/blog/writing-a-trampoline-in-assembly/
656,Lobsters,assembly,Assembly Language,Defusing a binary bomb with gdb - Part 3,http://blog.carlosgaldino.com/2015/12/03/defusing-a-binary-bomb-with-gdb-part-3.html
657,Lobsters,assembly,Assembly Language,Staapl: A scheme-metaprogrammable PIC18F Forth,http://zwizwa.be/staapl/staapl.html
658,Lobsters,assembly,Assembly Language,Building a simple JIT in Rust,http://www.jonathanturner.org/2015/12/building-a-simple-jit-in-rust.html
659,Lobsters,assembly,Assembly Language,Terra: A low-level counterpart to Lua,http://terralang.org/index.html
660,Lobsters,assembly,Assembly Language,Directly writing AMD GPU assembler by hacking the OpenGL shader interface,https://onedrive.live.com/view.aspx?resid=EBE7DEDA70D06DA0!107&authkey=!AD-O3oq3Ung7pzk
661,Lobsters,assembly,Assembly Language,Defusing a binary bomb with gdb - Part 2,http://blog.carlosgaldino.com/2015/11/19/defusing-a-binary-bomb-with-gdb-part-2.html
662,Lobsters,assembly,Assembly Language,"Intel 4004 mask design released, converted to SVG file",http://www.4004.com/2015-news.html
663,Lobsters,assembly,Assembly Language,Defusing a binary bomb with gdb - Part 1,http://blog.carlosgaldino.com/2015/11/12/defusing-a-binary-bomb-with-gdb-part-1.html
664,Lobsters,assembly,Assembly Language,Why NASA Needs a Programmer Fluent In 60-Year-Old Code,http://www.popularmechanics.com/space/a17991/voyager-1-voyager-2-retiring-engineer/
665,Lobsters,assembly,Assembly Language,Security Considerations of the Intel x86 Management Engine,http://blog.invisiblethings.org/2015/10/27/x86_harmful.html
666,Lobsters,assembly,Assembly Language,"""hello world"" in arm assembly, as hand illuminated manuscript",https://instagram.com/p/8yTbiLJrEv/
667,Lobsters,assembly,Assembly Language,Statically Linking a Windows Kernel Driver as an ELF,http://gaasedelen.blogspot.com/2015/10/statically-linking-windows-kernel.html
668,Lobsters,assembly,Assembly Language,How to build DOS COM files with GCC,http://nullprogram.com/blog/2014/12/09/
669,Lobsters,assembly,Assembly Language,Modern Binary Exploitation,http://security.cs.rpi.edu/courses/binexp-spring2015/
670,Lobsters,assembly,Assembly Language,Stupid Template Tricks: Template Assembler,http://blog.mattbierner.com/stupid-template-tricks-template-assembler/
671,Lobsters,assembly,Assembly Language,Loading 64 bit Registers,http://c9x.me/art/notes.html?9/19/2015
672,Lobsters,assembly,Assembly Language,"Building a Tetris Clone in x86 Assembly, pt. Ⅱ: I/O",https://cmcenroe.me/2015/09/14/tetrasm-2.html
673,Lobsters,assembly,Assembly Language,"Building a Tetris Clone in x86 Assembly, pt. Ⅰ: Hello, World",https://cmcenroe.me/2015/09/11/tetrasm-1.html
674,Lobsters,assembly,Assembly Language,The mystery of the fifteen-millisecond breakpoint instruction,http://blog.jwhitham.org/2015/04/the-mystery-of-fifteen-millisecond.html
675,Lobsters,assembly,Assembly Language,Mainframe Bind Shell,http://www.bigendiansmalls.com/mainframe-bind-shell-source-code/
676,Lobsters,assembly,Assembly Language,LLVM Meets the Truly Alien: Mill CPU Architecture,http://www.youtube.com/watch?v=NKf5zgtq6uk
677,Lobsters,assembly,Assembly Language,Analysis of PS4's security and the state of hacking,http://cturt.github.io/ps4.html
678,Lobsters,assembly,Assembly Language,BrainFuck To Kernel version 1.1,https://github.com/Hullu2000/BFTK
679,Lobsters,assembly,Assembly Language,The Memory Sinkhole: An architectural privilege escalation vulnerability,https://github.com/xoreaxeaxeax/sinkhole/blob/master/us-15-Domas-TheMemorySinkhole.pdf
680,Lobsters,assembly,Assembly Language,8088 MPH: How it came about,https://scalibq.wordpress.com/2015/04/12/8088-mph-how-it-came-about/
681,Lobsters,assembly,Assembly Language,rwasa: an x86_64 web server,https://2ton.com.au/rwasa/
682,Lobsters,assembly,Assembly Language,Selective Embedded Just-In-Time Specialization,https://sejits.eecs.berkeley.edu/
683,Lobsters,assembly,Assembly Language,OpenTuner - An extensible framework for program autotuning,http://opentuner.org/
684,Lobsters,assembly,Assembly Language,Ur-Scheme: A GPL self-hosting compiler from a subset of R5RS Scheme to fast Linux x86 asm,http://canonical.org/~kragen/sw/urscheme/
685,Lobsters,assembly,Assembly Language,hnwatch – Linux x64 terminal-based real-time HN watcher/reader,https://2ton.com.au/hnwatch/
686,Lobsters,assembly,Assembly Language,"Sophie Wilson, Acorn and the development of ARM",http://www.linuxvoice.com/sophie-wilson-acorn-and-the-development-of-arm/
687,Lobsters,assembly,Assembly Language,How many months can it take to verify 30 assembly instructions?,http://research.microsoft.com/en-us/um/people/nick/mop.pdf
688,Lobsters,assembly,Assembly Language,Megaprocessor: a computer you can walk inside of,http://www.megaprocessor.com/index.html
689,Lobsters,assembly,Assembly Language,From ASM.JS to WebAssembly,https://brendaneich.com/2015/06/from-asm-js-to-webassembly/
690,Lobsters,assembly,Assembly Language,Toledo Atomchess: Chess in 481 Bytes,http://nanochess.org/chess6.html
691,Lobsters,assembly,Assembly Language,"Interpreter, Compiler, JIT",http://nickdesaulniers.github.io/blog/2015/05/25/interpreter-compiler-jit
692,Lobsters,assembly,Assembly Language,Bitcoin mining on a 55 year old IBM 1401 mainframe: 80 seconds per hash,http://www.righto.com/2015/05/bitcoin-mining-on-55-year-old-ibm-1401.html
693,Lobsters,assembly,Assembly Language,MenuetOS 1.00 released,http://menuetos.net/
694,Lobsters,assembly,Assembly Language,Pokemon Yellow Total Control Hack,http://aurellem.org/vba-clojure/html/total-control.html
695,Lobsters,assembly,Assembly Language,The death of optimizing compilers,http://cr.yp.to/talks.html#2015.04.16
696,Lobsters,assembly,Assembly Language,Why did the original code for FIND.COM use lop as a label instead of loop?,http://blogs.msdn.com/b/oldnewthing/archive/2015/04/16/10607806.aspx
697,Lobsters,assembly,Assembly Language,"Emulator 101 - A detailed, step by step guide to writing an emulator.",http://emulator101.com
698,Lobsters,assembly,Assembly Language,"8088 MPH, a demo for the 1981 IBM PC + CGA",http://www.youtube.com/watch?v=yHXx3orN35Y
699,Lobsters,assembly,Assembly Language,80x86 Opcodes are Encoded in Octal,http://reocities.com/SiliconValley/heights/7052/opcode.txt
700,Lobsters,assembly,Assembly Language,12-minute Mandelbrot: fractals on a 50 year old IBM 1401 mainframe,http://www.righto.com/2015/03/12-minute-mandelbrot-fractals-on-50.html
701,Lobsters,assembly,Assembly Language,This Is Just The Beginning Of What We Can Do On The Super Nintendo,http://blog.attractmo.de/post/111642896790/this-is-just-the-beginning-of-what-we-can-do-on
702,Lobsters,assembly,Assembly Language,Was C For Hipsters?,http://timkellogg.me/blog/2015/02/08/history-of-C/
703,Lobsters,assembly,Assembly Language,A Gentle Primer on Reverse Engineering,https://emily.st/2015/01/27/reverse-engineering/
704,Lobsters,assembly,Assembly Language,Hardware accelerated SHA-1,http://straymindcough.blogspot.com/2015/01/hardware-accelerated-sha-1.html
705,Lobsters,assembly,Assembly Language,Maze Generation In Thirteen Bytes (2012),http://trixter.oldskool.org/2012/12/17/maze-generation-in-thirteen-bytes/
706,Lobsters,assembly,Assembly Language,Branch-free FizzBuzz in Assembly,http://pepijndevos.nl/2015/01/03/branch-free-fizzbuzz-in-assembly.html
707,Lobsters,assembly,Assembly Language,Linux on an 8-bit micro?,http://dmitry.gr/index.php?r=05.Projects&proj=07.+Linux+on+8bit
708,Lobsters,assembly,Assembly Language,The performance cost of integer overflow checking,http://danluu.com/integer-overflow/
709,Lobsters,assembly,Assembly Language,Optimizing Tail Call Recursion,https://spin.atomicobject.com/2014/11/05/tail-call-recursion-optimization/
710,Lobsters,assembly,Assembly Language,Loo.py: transformation-based code generation for GPUs and CPUs,http://arxiv.org/abs/1405.7470
711,Lobsters,assembly,Assembly Language,Anatomy of a code tracer,https://medium.com/@oleavr/anatomy-of-a-code-tracer-b081aadb0df8
712,Lobsters,assembly,Assembly Language,How GameCube/Wii emulator Dolphin got a turbocharge,http://www.pcgamer.com/how-gamecubewii-emulator-dolphin-got-a-turbocharge/
713,Lobsters,assembly,Assembly Language,"CppCon 2014: Mike Acton ""Data-Oriented Design and C++"" - YouTube",https://www.youtube.com/watch?v=rX0ItVEVjHc
714,Lobsters,assembly,Assembly Language,The Megalomaniac Bore: Write your own Virtual CPU in C++ (4001 CPU),http://megalomaniacbore.blogspot.co.uk/2014/04/virtual-cpu-in-c-4001-cpu.html
715,Lobsters,assembly,Assembly Language,"Life, Death and Register Coloring (in Haskell)",https://github.com/orchid-hybrid/orchid-hybrid.github.io/blob/master/_posts/2014-09-21-register-graph.md
716,Lobsters,assembly,Assembly Language,Compiler's Frame Pointer Optimization,http://blogs.msdn.com/b/larryosterman/archive/2007/03/12/fpo.aspx
717,Lobsters,assembly,Assembly Language,GCR decoding on the fly,http://www.linusakesson.net/programming/gcr-decoding/index.php
718,Lobsters,assembly,Assembly Language,C as a portable assembly: porting RAEdit to 64-bit,http://rammichael.com/c-as-a-portable-assembly-porting-raedit-to-64-bit
719,Lobsters,assembly,Assembly Language,The Unofficial DynASM Documentation,https://corsix.github.io/dynasm-doc/index.html
720,Lobsters,assembly,Assembly Language,McSema: A native code to LLVM IR translation framework,http://blog.trailofbits.com/2014/08/07/mcsema-is-officially-open-source/
721,Lobsters,assembly,Assembly Language,Cache coherency primer,http://fgiesen.wordpress.com/2014/07/07/cache-coherency/
722,Lobsters,assembly,Assembly Language,IRC bot in ARM assembly,https://github.com/wyc/armbot
723,Lobsters,assembly,Assembly Language,x86 Foundations Course Launch,http://www.xorpd.net/x86-foundations-course-launch.html
724,Lobsters,assembly,Assembly Language,Dare - Dalvik Retargeting to .class,http://siis.cse.psu.edu/dare/index.html
725,Lobsters,assembly,Assembly Language,DOOM ported to Zylin CPU (ZPU),http://turbogrill.blogspot.ca/2014/06/doom-on-zpu.html
726,Lobsters,assembly,Assembly Language,Bare Metal StarFox clone on a Raspberry Pi,https://github.com/ICTeam28/PiFox
727,Lobsters,assembly,Assembly Language,KnightOS - an open source operating system for TI calculators,https://github.com/KnightOS/KnightOS
728,Lobsters,assembly,Assembly Language,Non-classical processor behavior: How doing something can be faster than not doing it,http://blogs.msdn.com/b/oldnewthing/archive/2014/06/13/10533875.aspx
729,Lobsters,assembly,Assembly Language,x86 assembler in Bash,http://lists.gnu.org/archive/html/bug-bash/2001-02/msg00054.html
730,Lobsters,assembly,Assembly Language,Rotor CPU - 16 RISC cores in Verilog,https://github.com/jbush001/RotorCPU
731,Lobsters,assembly,Assembly Language,Code written by Apple co-founder Steve Woz decades ago,http://mailp.in/Y6WE2w8v/
732,Lobsters,assembly,Assembly Language,Some small suggestions for the Intel instruction set,http://blog.cr.yp.to/20140517-insns.html
733,Lobsters,assembly,Assembly Language,The Birth & Death of JavaScript,https://www.destroyallsoftware.com/talks/the-birth-and-death-of-javascript
734,Lobsters,assembly,Assembly Language,Coq: The World's Best Macro Assembler? (Microsoft Research),http://research.microsoft.com/en-us/um/people/nick/coqasm.pdf
735,Lobsters,assembly,Assembly Language,Kernel 101 – Let’s write a Kernel,http://arjunsreedharan.org/post/82710718100/kernel-101-lets-write-a-kernel
736,Lobsters,assembly,Assembly Language,Refactoring with LZ77: compression is compilation,http://www.pvk.ca/Blog/2014/03/30/refactoring-with-lz77-compilation-is-compression/
737,Lobsters,assembly,Assembly Language,Editing binaries: easier than it sounds,http://danluu.com/edit-binary/
738,Lobsters,assembly,Assembly Language,SBCL: the ultimate assembly code breadboard,http://www.pvk.ca/Blog/2014/03/15/sbcl-the-ultimate-assembly-code-breadboard/
739,Lobsters,assembly,Assembly Language,The Littlest CPU Rasterizer,http://ginsweater.com/blog/2014/03/10/the-littlest-cpu-rasterizer/
740,Lobsters,assembly,Assembly Language,Spring 2014 Core War Tournament,http://www.retroprogramming.com/2014/02/the-spring-2014-core-war-tournament.html
741,Lobsters,assembly,Assembly Language,"Fast, less-complicated, lock-free Data Structures (2012)",http://www.akkadia.org/drepper/lt2012-hle.pdf
742,Lobsters,assembly,Assembly Language,"Introductory Intel x86: Architecture, Assembly, Applications, & Alliteration",http://opensecuritytraining.info/IntroX86.html
743,Lobsters,assembly,Assembly Language,yasp is a fully functional web-based assembler development environment,http://yasp.me
744,Lobsters,assembly,Assembly Language,Overkilling the 8-queens Problem,http://davidad.github.io/blog/2014/02/25/overkilling-the-8-queens-problem/
745,Lobsters,assembly,Assembly Language,64-bit Kernel From Scratch,http://davidad.github.io/blog/2014/02/18/kernel-from-scratch/
746,Lobsters,assembly,Assembly Language,A PIC microcontroller emulator,https://github.com/zhemao/pic_emu
747,Lobsters,assembly,Assembly Language,Applying Artificial Intelligence to Nintendo Tetris,http://meatfighter.com/nintendotetrisai/
748,Lobsters,assembly,Assembly Language,Manually Creating an ELF Executable,http://robinhoksbergen.com/papers/howto_elf.html
749,Lobsters,assembly,Assembly Language,A Great Old-Timey Game-Programming Hack,http://blog.moertel.com/posts/2013-12-14-great-old-timey-game-programming-hack.html
750,Lobsters,assembly,Assembly Language,8086tiny: a tiny PC emulator/virtual machine,http://www.megalith.co.uk/8086tiny/
751,Lobsters,assembly,Assembly Language,corkami - Reverse engineering & visual documentations,https://code.google.com/p/corkami/
752,Lobsters,assembly,Assembly Language,Chuck Moore: Programming a 144-computer Chip to Minimize Power,http://www.infoq.com/presentations/power-144-chip
753,Lobsters,assembly,Assembly Language,Minimalish assembly TCP HTTP server program for i386 Linux,http://canonical.org/~kragen/sw/dev3/server.s
754,Lobsters,assembly,Assembly Language,MikeOS - simple x86 assembly language operating system,http://mikeos.berlios.de
755,Lobsters,assembly,Assembly Language,Intel i7 loop performance anomaly,http://eli.thegreenplace.net/2013/12/03/intel-i7-loop-performance-anomaly/
756,Lobsters,assembly,Assembly Language,"Understanding ARM Assembly, Part 1",http://blogs.msdn.com/b/ntdebugging/archive/2013/11/22/understanding-arm-assembly-part-1.aspx
757,Lobsters,assembly,Assembly Language,How statically linked programs run on Linux,http://eli.thegreenplace.net/2012/08/13/how-statically-linked-programs-run-on-linux/
758,Lobsters,assembly,Assembly Language,x86 Instruction Encoding Revealed: Bit Twiddling for Fun and Profit,http://www.codeproject.com/Articles/662301/x86-Instruction-Encoding-Revealed-Bit-Twiddling-fo
759,Lobsters,assembly,Assembly Language,Why arrays are indexed from 0 is probably not what you've heard.,http://exple.tive.org/blarg/2013/10/22/citation-needed/
760,Lobsters,assembly,Assembly Language,Future instruction set: AVX-512,http://agner.org/optimize/blog/read.php?i=288
761,Lobsters,assembly,Assembly Language,The cltq story,http://kqueue.org/blog/2013/09/17/cltq/
762,Lobsters,assembly,Assembly Language,mov is Turing-complete,http://www.cl.cam.ac.uk/~sd601/papers/mov.pdf
763,Lobsters,assembly,Assembly Language,Reversing Sinclair's amazing 1974 calculator hack - half the ROM of the HP-35,http://files.righto.com/calculator/sinclair_scientific_simulator.html
764,Lobsters,assembly,Assembly Language,Operating System Development Series,http://www.brokenthorn.com/Resources/OSDevIndex.html
765,Lobsters,assembly,Assembly Language,Diagnosing and Fixing a Bug in Galaga,http://www.computerarcheology.com/wiki/wiki/Arcade/Galaga
766,Lobsters,assembly,Assembly Language,LLVM IR is better than assembly,https://idea.popcount.org/2013-07-24-ir-is-better-than-assembly/
767,Lobsters,assembly,Assembly Language,Quine Relay,https://github.com/mame/quine-relay
768,Lobsters,assembly,Assembly Language,Anatomy of a Compiler Bug,http://www.mikeash.com/pyblog/friday-qa-2013-06-28-anatomy-of-a-compiler-bug.html
769,Lobsters,assembly,Assembly Language,Pac Man's Split-Screen Level Analyzed and Fixed,http://www.donhodges.com/how_high_can_you_get2.htm
770,Lobsters,assembly,Assembly Language,Kernel double-fetch race condition exploitation on x86 – further thoughts,http://j00ru.vexillium.org/?p=1880
771,Lobsters,assembly,Assembly Language,Prince Of Persia Code Review,http://fabiensanglard.net/prince_of_persia/index.php
772,Lobsters,assembly,Assembly Language,Statically Recompiling NES Games into Native Executables with LLVM and Go,http://andrewkelley.me/post/jamulator.html#custom-abi
773,Lobsters,assembly,Assembly Language,Introduction to x64 Assembly,http://software.intel.com/en-us/articles/introduction-to-x64-assembly
774,Lobsters,assembly,Assembly Language,AOSUZI - How the NES Game Genie works,http://www.jfbillingsley.com/blog/?p=221
775,Lobsters,assembly,Assembly Language,Intel MMU's fault handling mechanism is Turing complete,https://github.com/jbangert/trapcc
776,Lobsters,assembly,Assembly Language,Manually creating an ELF executable,http://www.negrebskoh.net/howto/howto_elf_exec.html
777,Lobsters,assembly,Assembly Language,Go & Assembly,http://www.doxsey.net/blog/go-and-assembly
778,Lobsters,assembly,Assembly Language,Exploiting 64-bit Linux like a boss,http://scarybeastsecurity.blogspot.se/2013/02/exploiting-64-bit-linux-like-boss.html
779,Lobsters,assembly,Assembly Language,x86’s IDIV instruction trap,http://kqueue.org/blog/2012/12/31/idiv-dos/
780,Lobsters,assembly,Assembly Language,ODA - Online Disassembler,http://onlinedisassembler.com/odaweb/run_hex
781,Lobsters,assembly,Assembly Language,Java MBeanInstantiator.findClass 0Day Analysis,https://partners.immunityinc.com/idocs/Java%20MBeanInstantiator.findClass%200day%20Analysis.pdf
782,Lobsters,assembly,Assembly Language,How a crazy GNU assembler macro helps you debug GRUB with GDB,http://timetobleed.com/how-a-crazy-gnu-assembler-macro-helps-you-debug-grub-with-gdb/
783,Lobsters,assembly,Assembly Language,This Is Why They Call It a Weakly-Ordered CPU,http://preshing.com/20121019/this-is-why-they-call-it-a-weakly-ordered-cpu
784,Lobsters,assembly,Assembly Language,Detecting valgrind,http://repzret.org/p/detecting-valgrind/
785,Lobsters,assembly,Assembly Language,Binary instrumentation library for QEMU,https://projects.gso.ac.upc.edu/projects/qemu-dbi/wiki
786,Lobsters,assembly,Assembly Language,Getting Tricky With Shell Code,http://blog.fireeye.com/research/2012/09/getting-tricky-with-shell-code.html
787,Lobsters,assembly,Assembly Language,Heavily Annotated Tiny Implementation of Forth in ASM,http://www.retroprogramming.com/2012/09/itsy-documenting-bit-twiddling-voodoo.html
788,Lobsters,assembly,Assembly Language,The story of repz ret « repz ret,http://repzret.org/p/repzret/
789,Lobsters,assembly,Assembly Language,Raspberry Pi Operating Systems Development,http://www.cl.cam.ac.uk/freshers/raspberrypi/tutorials/os/
790,Lobsters,assembly,Assembly Language,Cache Lines Are The New Registers,http://simonask.tumblr.com/post/30645840195/cache-lines-are-the-new-registers
791,Lobsters,assembly,Assembly Language,X64 Deep Dive,http://www.codemachine.com/article_x64deepdive.html
792,Lobsters,assembly,Assembly Language,More human than human – Flame’s code injection techniques,http://www.cert.pl/news/5874/langswitch_lang/en
793,Lobsters,assembly,Assembly Language,How statically linked programs run on Linux,http://eli.thegreenplace.net/2012/08/13/how-statically-linked-programs-run-on-linux/
794,Lobsters,assembly,Assembly Language,This file is simultaneously a valid PE/PDF/HTML/JAR(CLASS+ZIP)/PY file,http://code.google.com/p/corkami/downloads/detail?name=CorkaMIX.zip
795,Lobsters,assembly,Assembly Language,The Infinitely Profitable Program,http://peetm.com/blog/?p=55
796,Lobsters,assembly,Assembly Language,Easy 6502,http://skilldrick.github.com/easy6502/index.html
