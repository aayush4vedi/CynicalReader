ID,Source,Tag_Code,Tag_Name,Title,Url
1,Lobsters,compsci,CSE,A Simple Constraint Programming Implementation,https://bor0.wordpress.com/2020/08/22/a-simple-constraint-programming-implementation/
2,Lobsters,compsci,CSE,"In Rust, ordinary vectors are values",http://smallcultfollowing.com/babysteps/blog/2018/02/01/in-rust-ordinary-vectors-are-values/
3,Lobsters,compsci,CSE,CheriABI: Enforcing Valid Pointer Provenance and Minimizing Pointer Privilege in the POSIX C Run-time Environment,https://www.microsoft.com/en-us/research/publication/cheriabi-enforcing-valid-pointer-provenance-and-minimizing-pointer-privilege-in-the-posix-c-run-time-environment/
4,Lobsters,compsci,CSE,Are CRDTs suitable for shared editing?,https://blog.kevinjahns.de/are-crdts-suitable-for-shared-editing/
5,Lobsters,compsci,CSE,QEMU version 5.1.0 released,https://www.qemu.org/2020/08/11/qemu-5-1-0/
6,Lobsters,compsci,CSE,Aspect-Oriented Programming,https://patents.google.com/patent/US6467086B1/en
7,Lobsters,compsci,CSE,REMS - Rigorous Engineering of Mainstream Systems,https://www.cl.cam.ac.uk/~pes20/rems/
8,Lobsters,compsci,CSE,History of Computer Architecture and RISC (Dave Patterson),https://www.youtube.com/watch?v=1FtEGIp3a_M
9,Lobsters,compsci,CSE,TensorFlow Datasets: The Bad Parts,https://determined.ai/blog/tf-dataset-the-bad-parts/
10,Lobsters,compsci,CSE,Cheap FPGA Development Boards,https://joelw.id.au/FPGA/CheapFPGADevelopmentBoards
11,Lobsters,compsci,CSE,"Geometric Folding Algorithms: Linkages, Origami, Polyhedra",https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-849-geometric-folding-algorithms-linkages-origami-polyhedra-fall-2012/
12,Lobsters,compsci,CSE,Historical Computers in Japan-Computer Museum,http://museum.ipsj.or.jp/en/computer/index.html
13,Lobsters,compsci,CSE,Aminet: Hosting freely distributable Amiga software,http://aminet.net/
14,Lobsters,compsci,CSE,Defunctionalization and Freyd’s Theorem,https://bartoszmilewski.com/2020/08/03/defunctionalization-and-freyds-theorem/
15,Lobsters,compsci,CSE,Incrementally Improving The DOM,https://blog.functorial.com/posts/2018-04-08-Incrementally-Improving-The-DOM.html
16,Lobsters,compsci,CSE,RANS: More advanced usage of regular expressions,https://sinya8282.github.io/RANS/
17,Lobsters,compsci,CSE,Kissat SAT Solver,http://fmv.jku.at/kissat/
18,Lobsters,compsci,CSE,Finite Vector Spaces as Model of Simply-Typed Lambda-Calculi,https://www.cis.upenn.edu/~stevez/papers/VZ14.pdf
19,Lobsters,compsci,CSE,Programming in Martin-Löf’s Type Theory: An Introduction (1990),http://www.cse.chalmers.se/research/group/logic/book/book.pdf
20,Lobsters,compsci,CSE,Corecursion and coinduction: what they are and how they relate to recursion and induction,https://www.cl.cam.ac.uk/archive/mjcg/plans/Coinduction.pdf
21,Lobsters,compsci,CSE,Slowsort - a pessimal sorting algorithm,https://arpitbhayani.me/blogs/slowsort
22,Lobsters,compsci,CSE,Computation graphs and graph computation,http://breandan.net/2020/06/30/graph-computation/
23,Lobsters,compsci,CSE,Bloom filters debunked: Dispelling 30 Years of bad math with Coq,https://gopiandcode.uk/logs/log-bloomfilters-debunked.html
24,Lobsters,compsci,CSE,Wolfsort is a stable adaptive hybrid radix sort,https://github.com/scandum/wolfsort
25,Lobsters,compsci,CSE,cl-aristid: Draw Lindenmayer Systems with Common LISP,https://github.com/FdelMazo/cl-aristid
26,Lobsters,compsci,CSE,A Simple Constraint Programming Implementation,https://bor0.wordpress.com/2020/08/22/a-simple-constraint-programming-implementation/
27,Lobsters,compsci,CSE,"In Rust, ordinary vectors are values",http://smallcultfollowing.com/babysteps/blog/2018/02/01/in-rust-ordinary-vectors-are-values/
28,Lobsters,compsci,CSE,CheriABI: Enforcing Valid Pointer Provenance and Minimizing Pointer Privilege in the POSIX C Run-time Environment,https://www.microsoft.com/en-us/research/publication/cheriabi-enforcing-valid-pointer-provenance-and-minimizing-pointer-privilege-in-the-posix-c-run-time-environment/
29,Lobsters,compsci,CSE,Are CRDTs suitable for shared editing?,https://blog.kevinjahns.de/are-crdts-suitable-for-shared-editing/
30,Lobsters,compsci,CSE,QEMU version 5.1.0 released,https://www.qemu.org/2020/08/11/qemu-5-1-0/
31,Lobsters,compsci,CSE,Aspect-Oriented Programming,https://patents.google.com/patent/US6467086B1/en
32,Lobsters,compsci,CSE,REMS - Rigorous Engineering of Mainstream Systems,https://www.cl.cam.ac.uk/~pes20/rems/
33,Lobsters,compsci,CSE,History of Computer Architecture and RISC (Dave Patterson),https://www.youtube.com/watch?v=1FtEGIp3a_M
34,Lobsters,compsci,CSE,TensorFlow Datasets: The Bad Parts,https://determined.ai/blog/tf-dataset-the-bad-parts/
35,Lobsters,compsci,CSE,Cheap FPGA Development Boards,https://joelw.id.au/FPGA/CheapFPGADevelopmentBoards
36,Lobsters,compsci,CSE,"Geometric Folding Algorithms: Linkages, Origami, Polyhedra",https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-849-geometric-folding-algorithms-linkages-origami-polyhedra-fall-2012/
37,Lobsters,compsci,CSE,Historical Computers in Japan-Computer Museum,http://museum.ipsj.or.jp/en/computer/index.html
38,Lobsters,compsci,CSE,Aminet: Hosting freely distributable Amiga software,http://aminet.net/
39,Lobsters,compsci,CSE,Defunctionalization and Freyd’s Theorem,https://bartoszmilewski.com/2020/08/03/defunctionalization-and-freyds-theorem/
40,Lobsters,compsci,CSE,Incrementally Improving The DOM,https://blog.functorial.com/posts/2018-04-08-Incrementally-Improving-The-DOM.html
41,Lobsters,compsci,CSE,RANS: More advanced usage of regular expressions,https://sinya8282.github.io/RANS/
42,Lobsters,compsci,CSE,Kissat SAT Solver,http://fmv.jku.at/kissat/
43,Lobsters,compsci,CSE,Finite Vector Spaces as Model of Simply-Typed Lambda-Calculi,https://www.cis.upenn.edu/~stevez/papers/VZ14.pdf
44,Lobsters,compsci,CSE,Programming in Martin-Löf’s Type Theory: An Introduction (1990),http://www.cse.chalmers.se/research/group/logic/book/book.pdf
45,Lobsters,compsci,CSE,Corecursion and coinduction: what they are and how they relate to recursion and induction,https://www.cl.cam.ac.uk/archive/mjcg/plans/Coinduction.pdf
46,Lobsters,compsci,CSE,Slowsort - a pessimal sorting algorithm,https://arpitbhayani.me/blogs/slowsort
47,Lobsters,compsci,CSE,Computation graphs and graph computation,http://breandan.net/2020/06/30/graph-computation/
48,Lobsters,compsci,CSE,Bloom filters debunked: Dispelling 30 Years of bad math with Coq,https://gopiandcode.uk/logs/log-bloomfilters-debunked.html
49,Lobsters,compsci,CSE,Wolfsort is a stable adaptive hybrid radix sort,https://github.com/scandum/wolfsort
50,Lobsters,compsci,CSE,cl-aristid: Draw Lindenmayer Systems with Common LISP,https://github.com/FdelMazo/cl-aristid
51,Lobsters,compsci,CSE,The Implementation of Functional Programming Languages (1987),https://www.microsoft.com/en-us/research/wp-content/uploads/1987/01/slpj-book-1987-small.pdf
52,Lobsters,compsci,CSE,Inside a Collaborative Text Editor,https://caolan.uk/articles/inside-a-collaborative-text-editor/
53,Lobsters,compsci,CSE,USENIX ATC '20 Technical Sessions,https://www.usenix.org/conference/atc20/technical-sessions
54,Lobsters,compsci,CSE,Eytzinger Binary Search,https://algorithmica.org/en/eytzinger
55,Lobsters,compsci,CSE,Decoding a JPEG Image using Python,https://yasoob.me/posts/understanding-and-writing-jpeg-decoder-in-python/
56,Lobsters,compsci,CSE,On the asymptotic complexity of sorting,https://eccc.weizmann.ac.il/report/2020/096/
57,Lobsters,compsci,CSE,Creating Randomness Without Math.random,https://healeycodes.com/creating-randomness/
58,Lobsters,compsci,CSE,CRDTs: The Hard Parts,https://martin.kleppmann.com/2020/07/06/crdt-hard-parts-hydra.html
59,Lobsters,compsci,CSE,What is hyper-automation? Demystifying a new buzzword,https://www.functionize.com/blog/what-is-hyper-automation/
60,Lobsters,compsci,CSE,The ACM Digital Library Should Remain Open,https://www.scott-a-s.com/acm-digital-library-should-remain-open/
61,Lobsters,compsci,CSE,Prototyping a Small Genetic Algorithms Library in Haskell (2019),https://dev.to/tobedetermined/prototyping-a-small-genetic-algorithms-library-in-haskell-17li
62,Lobsters,compsci,CSE,A Practical Introduction to Graphs (Network Diagrams),https://healeycodes.com/practical-intro-to-graphs/
63,Lobsters,compsci,CSE,Kosaraju's Algorithm for finding Strongly Connected Components,https://hassamuddin.com/blog/kosaraju/
64,Lobsters,compsci,CSE,ScaNN: Scalable Nearest Neighbors,https://github.com/google-research/google-research/tree/master/scann
65,Lobsters,compsci,CSE,David Patterson: Computer Architecture and Data Storage,https://lexfridman.com/david-patterson/
66,Lobsters,compsci,CSE,An introduction to Conflict-Free Replicated Data Types,https://lars.hupel.info/topics/crdt/01-intro.html
67,Lobsters,compsci,CSE,NGT: Nearest Neighbor Search with Neighborhood Graph and Tree,https://github.com/yahoojapan/NGT
68,Lobsters,compsci,CSE,EsoLangVM Compiler Infrastructure,https://github.com/shinh/elvm
69,Lobsters,compsci,CSE,Learning operating system development using Linux kernel and Raspberry Pi,https://s-matyukevich.github.io/raspberry-pi-os/
70,Lobsters,compsci,CSE,Handwriting Recognition Technology in the Newton's Second Generation “Print Recognizer” (2004),http://wwnc.newtontalk.net/2004/program/larryyaeger/slides-larryyaeger.pdf
71,Lobsters,compsci,CSE,Deobfuscated topological sort,https://zachahn.com/posts/1592795405/
72,Lobsters,compsci,CSE,Summer of Zoom – A curated list of remote conferences,http://oktatok.karolyrobert.hu/buday.gergely/summer-of-zoom/
73,Lobsters,compsci,CSE,Faster than radix sort: Kirkpatrick-Reisch sorting,https://sortingsearching.com/2020/06/06/kirkpatrick-reisch.html
74,Lobsters,compsci,CSE,How to make PageRank faster (with lots of math and a hint of Python),https://dev.to/karjudev/how-to-make-pagerank-faster-with-lots-of-math-and-a-hint-of-python-2e92
75,Lobsters,compsci,CSE,Computer science papers we love,https://github.com/papers-we-love/papers-we-love
76,Lobsters,compsci,CSE,How To Become A Hacker,https://zalberico.com/essay/2020/04/19/how-to-become-a-hacker.html
77,Lobsters,compsci,CSE,Building a computer in Conway's game of life,https://www.nicolasloizeau.com/gol-computer
78,Lobsters,compsci,CSE,Category Theory -- The math behind hyper-convergence automation,https://multix.sfo2.cdn.digitaloceanspaces.com/Category%20Theory%20TechBBQ.pdf
79,Lobsters,compsci,CSE,Masked Types for Sound Object Initialization (2009),https://www.cs.cornell.edu/andru/papers/masked-types.pdf
80,Lobsters,compsci,CSE,Beta introductory quantum computing textbook,https://www.scottaaronson.com/qclec.pdf
81,Lobsters,compsci,CSE,“Concurrent Buns” – A chef’s guide to concurrency verification (2009),https://johnwickerson.wordpress.com/2009/03/16/chefs/
82,Lobsters,compsci,CSE,Diffing Explorations,https://github.com/numist/Diffing-Explorations
83,Lobsters,compsci,CSE,Harnessing Vision for Computation (2008),https://www.gwern.net/docs/cs/2008-changizi.pdf
84,Lobsters,compsci,CSE,(call/cc this-class),https://pavpanchekha.com/esp/continuations.html
85,Lobsters,compsci,CSE,Graduate Student Solves Decades-Old Conway Knot Problem,https://www.quantamagazine.org/graduate-student-solves-decades-old-conway-knot-problem-20200519/
86,Lobsters,compsci,CSE,Happy 10th Birthday RISC-V,https://riscv.org/2020/05/happy-10th-birthday-risc-v/
87,Lobsters,compsci,CSE,Why isn't there a formal grammar for Markdown? (2014),https://roopc.net/posts/2014/markdown-cfg/
88,Lobsters,compsci,CSE,State of Loom,http://cr.openjdk.java.net/~rpressler/loom/loom/sol1_part1.html
89,Lobsters,compsci,CSE,Speed improvements using hash tables,https://blog.asrpo.com/hashtables
90,Lobsters,compsci,CSE,Comb the Hairball with BioFabric,http://www.biofabric.org/
91,Lobsters,compsci,CSE,BioFabric - Wikipedia,https://en.wikipedia.org/wiki/BioFabric
92,Lobsters,compsci,CSE,LibrettOS: a dynamically adaptable multiserver-library OS,https://dl.acm.org/doi/10.1145/3381052.3381316
93,Lobsters,compsci,CSE,Succinct Data Structures and Delta Encoding for Modern Databases,https://github.com/terminusdb/terminus-server/blob/dev/docs/whitepaper/terminusdb.pdf
94,Lobsters,compsci,CSE,Quantum JavaScript (Q.js),https://quantumjavascript.app/
95,Lobsters,compsci,CSE,C-Kermit 4.0.025 source code 1985/02/05,http://www.kermitproject.org/ckermit40.html
96,Lobsters,compsci,CSE,Insignificant Choice Polynomial Time,https://arxiv.org/abs/2005.04598
97,Lobsters,compsci,CSE,Creating a computer science canon: a course of “classic” readings in computer science (2003),http://cs.unomaha.edu/~stanw/papers/csci8550/p336-eisenberg.pdf
98,Lobsters,compsci,CSE,Looking for people who'd like to read CS papers together remotely,https://github.com/zx9w/read-together
99,Lobsters,compsci,CSE,Kotlingrad: Shape-Safe Differentiable Programming with Algebraic Data Types,https://github.com/breandan/kotlingrad
100,Lobsters,compsci,CSE,Decision Diagrams for Optimization,https://www.andrew.cmu.edu/user/vanhoeve/mdd/
101,Lobsters,compsci,CSE,A Guide to Big O notation,https://eaj.no/a-guide-to-big-o-notation
102,Lobsters,compsci,CSE,Concurrent Hash Tables,https://dl.acm.org/doi/pdf/10.1145/3309206
103,Lobsters,compsci,CSE,State Machine In Real Life,https://www.solipsys.co.uk/new/StateMachineInRealLife.html?te02lo
104,Lobsters,compsci,CSE,"Computers Do Not Make Art, People Do",https://cacm.acm.org/magazines/2020/5/244330-computers-do-not-make-art-people-do/fulltext
105,Lobsters,compsci,CSE,Can we compile C code into PowerPoint?,https://www.youtube.com/watch?v=LArkm4v5mWA
106,Lobsters,compsci,CSE,B-trees,https://shachaf.net/w/b-trees
107,Lobsters,compsci,CSE,Maybe Visual Programming is The Answer. Maybe Not,https://blog.metaobject.com/2020/04/maybe-visual-programming-is-answer.html
108,Lobsters,compsci,CSE,Git fractals - Sierpiński triangle,http://philippe.bruhat.net/stuff/git-fractals/sierpinski.html
109,Lobsters,compsci,CSE,The Poet of Logic Programming (interview with Robert Kowalski),https://thesearch.space/episodes/1-the-poet-of-logic-programming
110,Lobsters,compsci,CSE,Conversations with a six-year-old on functional programming (2018),https://byorgey.wordpress.com/2018/05/06/conversations-with-a-six-year-old-on-functional-programming/
111,Lobsters,compsci,CSE,The Pervert's Guide to Computer Programming Languages,https://www.youtube.com/watch?v=mZyvIHYn2zk
112,Lobsters,compsci,CSE,minerva: A 32-bit RISC-V soft processor,https://github.com/lambdaconcept/minerva
113,Lobsters,compsci,CSE,ionescu007/minlzma,https://github.com/ionescu007/minlzma
114,Lobsters,compsci,CSE,"Cozy, the collection synthesizer",https://github.com/CozySynthesizer/cozy
115,Lobsters,compsci,CSE,Writing an Emulator in JavaScript (and Interfacing with Multiple UIs),https://www.taniarascia.com/writing-an-emulator-in-javascript-chip8/
116,Lobsters,compsci,CSE,Modern 64k intro compression,https://www.youtube.com/watch?v=O5LfE_qNzes
117,Lobsters,compsci,CSE,Conflict-free Replicated Data Types,https://crdt.tech/
118,Lobsters,compsci,CSE,"Our Government Runs on a 60-Year-Old Coding Language, and Now It’s Falling Apart",https://onezero.medium.com/our-government-runs-on-a-60-year-old-coding-language-and-now-its-falling-apart-61ec0bc8e121
119,Lobsters,compsci,CSE,Quantum Country: A free introduction to quantum computing,https://quantum.country/
120,Lobsters,compsci,CSE,"Code as requirements, using generators",https://medium.com/@lmatteis/code-as-requirements-using-generators-ec02cb9e8c40
121,Lobsters,compsci,CSE,The predecessor function for Church Numerals in the Lambda Calculus,http://gregfjohnson.com/pred/
122,Lobsters,compsci,CSE,From conventional to institution-independent logic programming,https://academic.oup.com/logcom/logcom/article-abstract/27/6/1679/2917800
123,Lobsters,compsci,CSE,Why any Fundamental Improvement in Software has to be a Generalisation,https://blog.metaobject.com/2020/04/why-any-fundamental-improvement-in.html
124,Lobsters,compsci,CSE,Even Faster Math Functions,https://basesandframes.wordpress.com/2020/04/04/even-faster-math-functions/
125,Lobsters,compsci,CSE,Bits and Bytes: Fight or Flight,https://medium.com/@yasinehsan11/bits-and-bytes-fight-or-flight-3786842b56da
126,Lobsters,compsci,CSE,SIGBOVIK 2020,http://sigbovik.org/2020/proceedings.pdf
127,Lobsters,compsci,CSE,SIGBOVIK 2020 (Online),http://sigbovik.org/2020/
128,Lobsters,compsci,CSE,There's a Mathematician In Your Compiler,https://humanreadablemag.com/issues/2/articles/theres-a-mathematician-in-your-compiler
129,Lobsters,compsci,CSE,Libelf by Example,https://leanpub.com/libelfbyexample
130,Lobsters,compsci,CSE,Message from ACM Regarding Open Access to ACM Digital Library during Coronavirus,https://www.acm.org/articles/bulletins/2020/march/dl-access-during-covid-19
131,Lobsters,compsci,CSE,Lessons from the Unix stdio ABI: 40 Years Later,https://fingolfin.org/blog/20200327/stdio-abi.html
132,Lobsters,compsci,CSE,3 3 Strassen 's Subcubic Matrix Multiplication Algorithm,https://www.youtube.com/watch?v=ORrM-aSNZUs
133,Lobsters,compsci,CSE,Landmark Computer Science Proof Cascades Through Physics and Math,https://www.quantamagazine.org/landmark-computer-science-proof-cascades-through-physics-and-math-20200304/
134,Lobsters,compsci,CSE,PCLSRing: Keeping Process State Modular,http://fare.tunes.org/tmp/emergent/pclsr.htm
135,Lobsters,compsci,CSE,What do Finite Automata Tell Us?,https://thecomputation.com/2020/03/25/what-do-fa-tell-us.html
136,Lobsters,compsci,CSE,A Brief History of Quantum Computers,https://thecomputation.com/2020/03/19/brief-history-of-quantum-computing.html
137,Lobsters,compsci,CSE,Left recursion in recursive descent parsers a new solution?,/s/3pdhus/left_recursion_recursive_descent
138,Lobsters,compsci,CSE,Mechanized Reasoning about a Capability Machine,https://cs.au.dk/~birke/papers/iris-capabilities-prisc-conf.pdf
139,Lobsters,compsci,CSE,Foundations of Databases,http://webdam.inria.fr/Alice/pdfs/all.pdf
140,Lobsters,compsci,CSE,Monads for functional programming,https://homepages.inf.ed.ac.uk/wadler/papers/marktoberdorf/baastad.pdf
141,Lobsters,compsci,CSE,Equality Is Hard,https://www.craigstuntz.com/posts/2020-03-09-equality-is-hard.html
142,Lobsters,compsci,CSE,Understanding Parser Combinators,https://fsharpforfunandprofit.com/posts/understanding-parser-combinators/
143,Lobsters,compsci,CSE,Transferring Real Honey Into A Simulation,https://www.youtube.com/watch?v=yX84nGi-V7E
144,Lobsters,compsci,CSE,Syntactic Unification Is Easy,https://blog.witchoflight.com/2020/syntactic-unification/
145,Lobsters,compsci,CSE,A Networked World (Part 1),https://johncarlosbaez.wordpress.com/2015/03/27/spivak-part-1/
146,Lobsters,compsci,CSE,Meaningful availability,https://blog.acolyer.org/2020/02/26/meaningful-availability/
147,Lobsters,compsci,CSE,Introduction to Sorting Networks,https://hoytech.github.io/sorting-networks/
148,Lobsters,compsci,CSE,Toward Semantic Foundations for Program Editors,https://arxiv.org/pdf/1703.08694.pdf
149,Lobsters,compsci,CSE,Gagallium : Formal proof and analysis of an incremental cycle detection algorithm,http://gallium.inria.fr/blog/incremental-cycle-detection/
150,Lobsters,compsci,CSE,How These Things Work - A book about CS from first principles,https://reasonablypolymorphic.com/book/preface
151,Lobsters,compsci,CSE,Computers can be understood,https://blog.nelhage.com/post/computers-can-be-understood/
152,Lobsters,compsci,CSE,A paper algorithm notation,http://canonical.org/~kragen/sw/dev3/paperalgo
153,Lobsters,compsci,CSE,A Snake Egg Puzzle Solver,https://github.com/tuzz/snake-egg-puzzle
154,Lobsters,compsci,CSE,Journal for the Mathematics of Composition,https://compositionality-journal.org/
155,Lobsters,compsci,CSE,Genetic programming is waiting for better tools,https://www.youtube.com/watch?v=Z5f1SDv-SCk
156,Lobsters,compsci,CSE,Operating Systems: Threads,https://www.cs.uic.edu/~jbell/CourseNotes/OperatingSystems/4_Threads.html
157,Lobsters,compsci,CSE,"PCG, A Family of Better Random Number Generators",http://www.pcg-random.org/index.html
158,Lobsters,compsci,CSE,On Parallel Programming,https://penberg.org/blog/parallel.html
159,Lobsters,compsci,CSE,HackerRank Finds New Generation Gaps,https://www.i-programmer.info/news/99/13443.html
160,Lobsters,compsci,CSE,Research should not stop with the research paper,https://lemire.me/blog/2020/02/07/research-should-not-stop-with-the-research-paper/
161,Lobsters,compsci,CSE,"Combinatris: Tetris, but with SK combinators",http://dirk.rave.org/combinatris/
162,Lobsters,compsci,CSE,SlowerLogLog,https://www.evanmiller.org/slower-log-log.html
163,Lobsters,compsci,CSE,Doubling System Read Throughput with Only 26 Lines of Code,https://pingcap.com/blog/doubling-system-read-throughput-with-only-26-lines-of-code/
164,Lobsters,compsci,CSE,The Missing Semester of Your CS Education (MIT course),https://missing.csail.mit.edu/
165,Lobsters,compsci,CSE,Finding Mona Lisa in the Game of Life,https://kevingal.com/blog/mona-lisa-gol.html
166,Lobsters,compsci,CSE,DEC64: Decimal Floating Point,http://www.dec64.com/
167,Lobsters,compsci,CSE,Kube Explained: Part 2 - Containers,https://link.kelda.io/l-kube-explained-part-2
168,Lobsters,compsci,CSE,A (brief) retrospective on transactional memory (2010),http://joeduffyblog.com/2010/01/03/a-brief-retrospective-on-transactional-memory/
169,Lobsters,compsci,CSE,Reproducible computations with Guix,https://guix.gnu.org/blog/2020/reproducible-computations-with-guix/
170,Lobsters,compsci,CSE,A non-symmetric divide-and-conquer recursive formula for the convolution of polynomials and power series,https://arxiv.org/abs/1912.00452
171,Lobsters,compsci,CSE,Pair programming in Sentient,https://tuzz.tech/blog/pair-programming-in-sentient
172,Lobsters,compsci,CSE,Improving the ptrace(2) API and preparing for LLVM-10.0,https://blog.netbsd.org/tnf/entry/improving_the_ptrace_2_api
173,Lobsters,compsci,CSE,Working towards LLDB on i386,https://blog.netbsd.org/tnf/entry/working_towards_lldb_on_i386
174,Lobsters,compsci,CSE,Work Is Work,https://codahale.com/work-is-work/
175,Lobsters,compsci,CSE,Easy Visual Question Answering,https://victorzhou.com/blog/easy-vqa/
176,Lobsters,compsci,CSE,Tree-walking algorithms: Incrementally enumerating leaf nodes of an N-ary tree,https://devblogs.microsoft.com/oldnewthing/20200106-00/?p=103300
177,Lobsters,compsci,CSE,The Genuine Sieve of Eratosthenes,https://www.cs.hmc.edu/~oneill/papers/Sieve-JFP.pdf
178,Lobsters,compsci,CSE,The Role of Composition in Computer Programming,https://web.archive.org/web/20040331204752/http://www.dbmcintyre.pwp.blueyonder.co.uk/index_f/menu_f/j_f/apl95.pdf
179,Lobsters,compsci,CSE,Random Access Permutations,https://blog.edwardloveall.com/random-access-permutations
180,Lobsters,compsci,CSE,Walking the faster-than-light tightrope: quantum entanglement and the CHSH game,https://ahelwer.ca/post/2018-12-07-chsh/
181,Lobsters,compsci,CSE,Simulating physical reality with a quantum computer,https://ahelwer.ca/post/2019-12-21-quantum-chemistry/
182,Lobsters,compsci,CSE,Emulating Persistent Memory in the Linux Kernel with Different Page Sizes,https://www.williamwalcher.xyz/hacking-libvmmalloc-fun-profit/
183,Lobsters,compsci,CSE,Xor Filters: Faster and Smaller Than Bloom Filters,https://lemire.me/blog/2019/12/19/xor-filters-faster-and-smaller-than-bloom-filters/
184,Lobsters,compsci,CSE,Burritos for the Hungry Mathematician,http://emorehouse.web.wesleyan.edu/silliness/burrito_monads.pdf
185,Lobsters,compsci,CSE,Evolving Languages (5 Steps to Go),https://www.geeklan.co.uk/files/ossg-evolving-languages.pdf
186,Lobsters,compsci,CSE,The Four Stages of Objective-Smalltalk,https://blog.metaobject.com/2019/12/the-4-stages-of-objective-smalltalk.html
187,Lobsters,compsci,CSE,Storage Combinators in Go,https://github.com/xoba/sc
188,Lobsters,compsci,CSE,"Clang build bot now uses two-stage builds, and other LLVM/LLDB news",https://blog.netbsd.org/tnf/entry/clang_build_bot_now_usage
189,Lobsters,compsci,CSE,Prolog Problems,https://sites.google.com/site/prologsite/prolog-problems
190,Lobsters,compsci,CSE,Depending Less on Structure,https://dev.to/lmatteis/depending-less-on-structure-5bl8
191,Lobsters,compsci,CSE,"The Art of Computer Programming, Volume 4, Fascicle 5",https://www.amazon.com/Art-Computer-Programming-Fascicle-Preliminaries/dp/0134671791
192,Lobsters,compsci,CSE,"Toward more efficient computing, with magnetic waves",http://news.mit.edu/2019/computing-magnetic-waves-efficient-1128
193,Lobsters,compsci,CSE,Formality in requirements: new publication,https://bertrandmeyer.com/2019/11/14/formality-requirements-new-publication/
194,Lobsters,compsci,CSE,History of … one CPU instructions: Part 1. LDDQU/movdqu explained,https://software.intel.com/en-us/blogs/2012/04/16/history-of-one-cpu-instructions-part-1-lddqumovdqu-explained
195,Lobsters,compsci,CSE,Functional Perl release,https://marc.info/?l=perl5-porters&m=157442915530310&w=2
196,Lobsters,compsci,CSE,Hierarchical Hexagonal Clustering and Indexing,https://www.researchgate.net/publication/333438802_Hierarchical_Hexagonal_Clustering_and_Indexing
197,Lobsters,compsci,CSE,Grappling with infinity in constraint solvers,https://tuzz.tech/blog/grappling-with-infinity
198,Lobsters,compsci,CSE,Go Forth with TTL,https://www.youtube.com/watch?v=iNg5-Xb5pTg&t=1731
199,Lobsters,compsci,CSE,NaN Gates and Flip FLOPS,http://tom7.org/nand/
200,Lobsters,compsci,CSE,Solving Puzzles with Amb,https://thesmartnik.com/solving-pazzles-wth-amb.html
201,Lobsters,compsci,CSE,LLDB Threading support now ready for mainline,http://blog.netbsd.org/tnf/entry/lldb_threading_support_now_ready
202,Lobsters,compsci,CSE,On The Turing Completeness of PowerPoint,https://www.youtube.com/watch?v=sdkxWqsk17c
203,Lobsters,compsci,CSE,An Empirical Evaluation of Linear Probing Algorithms,https://github.com/senderista/hashtable-benchmarks
204,Lobsters,compsci,CSE,A sorted array with O(lg n) access and O(sqrt(n)) inserts and deletes,https://github.com/senderista/sorted-vec
205,Lobsters,compsci,CSE,"Data Structures and Algorithms Basics, Big O Notation & Time complexity",https://www.youtube.com/watch?v=y0kt0BI5IZ0
206,Lobsters,compsci,CSE,An Evening on Modern Programming Languages (2019-11-21),https://ossg.bcs.org/blog/event/modern-languages/
207,Lobsters,compsci,CSE,Stabilization of the ptrace(2) threads continued,http://blog.netbsd.org/tnf/entry/stabilization_of_the_ptrace_21
208,Lobsters,compsci,CSE,Falsehoods CS Students (Still) Believe Upon Graduating,https://www.netmeister.org/blog/cs-falsehoods.html
209,Lobsters,compsci,CSE,Markov Chains for Procedural Buildings,http://weigert.vsos.ethz.ch/2019/10/30/markov-chains-for-procedural-buildings/
210,Lobsters,compsci,CSE,Tamper evident logging (2009),http://tamperevident.cs.rice.edu/Logging.html
211,Lobsters,compsci,CSE,"EuroBSDCon 2019, Norway",http://www.youtube.com/playlist?list=PLskKNopggjc6NssLc8GEGSiFYJLYdlTQx
212,Lobsters,compsci,CSE,The Deadlock Empire,https://deadlockempire.github.io/
213,Lobsters,compsci,CSE,"monsonite/Suite-16 - Logic design, schematics and code for 16-bit TTL computer based on 4-bit slice",https://github.com/monsonite/Suite-16
214,Lobsters,compsci,CSE,Listen to an NP-Complete Problem,https://github.com/howonlee/audible-cos
215,Lobsters,compsci,CSE,Research based on the .NET Runtime,http://www.mattwarren.org/2019/10/25/Research-based-on-the-.NET-Runtime/
216,Lobsters,compsci,CSE,Quantum Supremacy Using a Programmable Superconducting Processor,https://ai.googleblog.com/2019/10/quantum-supremacy-using-programmable.html
217,Lobsters,compsci,CSE,Notes on Splicing CRDTs for Structured Hypertext,https://lord.io/blog/2019/splicing-crdts/
218,Lobsters,compsci,CSE,Searching for palindromic superpermutations,https://tuzz.tech/blog/palindromic-superpermutations
219,Lobsters,compsci,CSE,Liquid Types vs. Floyd-Hoare Logic,https://ucsd-progsys.github.io/liquidhaskell-blog/2019/10/20/why-types.lhs/
220,Lobsters,compsci,CSE,The Simple Essence of the Y Combinator (Explained in Python),https://lptk.github.io/programming/2019/10/15/simple-essence-y-combinator.html
221,Lobsters,compsci,CSE,Divide And Conquer Algorithms In Python,https://skerritt.blog/divide-and-conquer-algorithms/
222,Lobsters,compsci,CSE,Collection of articles on concurrent algorithms,http://www.1024cores.net/
223,Lobsters,compsci,CSE,All You Need to Know About Big O Notation [Python Examples],https://skerritt.blog/big-o/
224,Lobsters,compsci,CSE,Stabilization of the ptrace(2) threads,http://blog.netbsd.org/tnf/entry/stabilization_of_the_ptrace_2
225,Lobsters,compsci,CSE,How dictionaries are implemented in Python,https://www.data-structures-in-practice.com/hash-tables/
226,Lobsters,compsci,CSE,Threading support in LLDB continued,http://blog.netbsd.org/tnf/entry/threading_support_in_lldb_continued
227,Lobsters,compsci,CSE,Quantum computing for the very curious,https://quantum.country/qcvc
228,Lobsters,compsci,CSE,CSS Turing Machine,https://brandondong.github.io/css-turing-machine/
229,Lobsters,compsci,CSE,0xchan,https://0xchan.net/
230,Lobsters,compsci,CSE,A Couple of (Probabilistic) Worst-case Bounds for Robin Hood Linear Probing,https://www.pvk.ca/Blog/2019/09/29/a-couple-of-probabilistic-worst-case-bounds-for-robin-hood-linear-probing
231,Lobsters,compsci,CSE,How I take notes from technical books,https://eddyerburgh.me/how-i-take-notes-from-technical-books
232,Lobsters,compsci,CSE,Adding Trigonometric Optimizations in GCC,https://flusp.ime.usp.br/gcc/2019/03/26/making-gcc-optimize-some-trigonometric-functions/
233,Lobsters,compsci,CSE,"On Computable Numbers, with an Application to the Entscheidungsproblem [1936]",https://www.abelard.org/turpap2/tp2-ie.asp#index
234,Lobsters,compsci,CSE,Scott’s Supreme Quantum Supremacy FAQ,https://www.scottaaronson.com/blog/?p=4317
235,Lobsters,compsci,CSE,Default Disambiguation for Online Parsers,https://soft-dev.org/pubs/html/diekmann_tratt__default_disambiguation/
236,Lobsters,compsci,CSE,"Robot, a functional library for creating Finite State Machines",https://thisrobot.life/
237,Lobsters,compsci,CSE,Questionnaire software implementation,/s/yt7kxr/questionnaire_software_implementation
238,Lobsters,compsci,CSE,"At Dynamicland, The Building Is The Computer",https://tashian.com/articles/dynamicland/
239,Lobsters,compsci,CSE,My experience with high school computer science,https://tudorr.ro/blog/writing/2019/09/14/how-to-teach-programming/
240,Lobsters,compsci,CSE,James Gosling's Journey to Open Source,https://www.infoq.com/news/2019/09/apachecon-gosling-open-source/
241,Lobsters,compsci,CSE,Old Is the New New (2018),https://www.youtube.com/watch?v=AbgsfeGvg3E
242,Lobsters,compsci,CSE,Design patterns are from hell^2,http://realtimecollisiondetection.net/blog/?p=81
243,Lobsters,compsci,CSE,Philosophy of Computer Science,https://cse.buffalo.edu/~rapaport/Papers/phics.pdf
244,Lobsters,compsci,CSE,Certifying algorithm,https://en.wikipedia.org/wiki/Certifying_algorithm
245,Lobsters,compsci,CSE,"Optimizing Compilers for Parallel Computers, lecture by Frances E. Allen",https://www.youtube.com/watch?v=Qv-wXcUxrmE
246,Lobsters,compsci,CSE,BFS in a few lines of code using Go standard library,https://cybernetist.com/2019/03/09/breadth-first-search-using-go-standard-library/
247,Lobsters,compsci,CSE,Resilience Engineering Papers,https://github.com/lorin/resilience-engineering
248,Lobsters,compsci,CSE,DDSketch: A fast and fully-mergeable quantile sketch with relative-error guarantees,https://arxiv.org/abs/1908.10693
249,Lobsters,compsci,CSE,Pliant language and FullPliant operating system,http://www.fullpliant.org
250,Lobsters,compsci,CSE,A performance comparison of Judy to hash tables [2003],https://nothings.org/computer/judy/
251,Lobsters,compsci,CSE,Modulus without division,http://homepage.divms.uiowa.edu/~jones/bcd/mod.shtml
252,Lobsters,compsci,CSE,A Book from Alan Turing… and a Mysterious Piece of Paper,https://blog.stephenwolfram.com/2019/08/a-book-from-alan-turing-and-a-mysterious-piece-of-paper/
253,Lobsters,compsci,CSE,"GSoC 2019 Report: Adding NetBSD KNF to clang-format, Final",http://blog.netbsd.org/tnf/entry/gsoc_2019_report_adding_netbsd1
254,Lobsters,compsci,CSE,Anykernels meet fuzzing,https://www.youtube.com/watch?v=cSo6y0t8HOM
255,Lobsters,compsci,CSE,everything you ever wanted to know about terminals (but were afraid to ask),http://xn--rpa.cc/irl/term.html
256,Lobsters,compsci,CSE,Faster threshold queries with cache-sensitive scancount,https://lemire.me/blog/2019/08/16/faster-threshold-queries-with-cache-sensitive-scancount/
257,Lobsters,compsci,CSE,How to Print Floating-Point Numbers Accurately,http://kurtstephens.com/files/p372-steele.pdf
258,Lobsters,compsci,CSE,"Porting wine to amd64 on NetBSD, third evaluation report",https://blog.netbsd.org/tnf/entry/porting_wine_to_amd64_on1
259,Lobsters,compsci,CSE,Probabilistic Data Structure for Big Data Problems,https://www.se-radio.net/2019/02/se-radio-episode-358-probabilistic-data-structure-for-big-data-problems/
260,Lobsters,compsci,CSE,Awesome Static Analysis,https://matthias-endler.de/awesome-static-analysis/
261,Lobsters,compsci,CSE,2019 USENIX Annual Technical Conference,https://www.youtube.com/watch?v=lGn9TyozC4s&list=PLbRoZ5Rrl5le1mib65Vzj3t-AtszuIoLw
262,Lobsters,compsci,CSE,Deep Learning & Machine Learning (Advanced topics),http://www.youtube.com/playlist?list=PLlp-GWNOd6m4C_-9HxuHg2_ZeI2Yzwwqt
263,Lobsters,compsci,CSE,General Balanced Trees (1999),http://user.it.uu.se/~arnea/ps/gb.pdf
264,Lobsters,compsci,CSE,Twelve LaTeX packages to get your paper accepted,https://andreas-zeller.blogspot.com/2017/01/twelve-latex-packages-to-get-your-paper.html
265,Lobsters,compsci,CSE,Data Structures and Algorithms in JavaScript (Github repo and eBook),https://github.com/amejiarosario/dsa.js-data-structures-algorithms-javascript
266,Lobsters,compsci,CSE,Building Better Connections Between Systems Researchers and Practitioners,https://ssl.engineering.nyu.edu/blog/2019-08-12-bridging-the-gap
267,Lobsters,compsci,CSE,"2019 International Olympiad in Informatics (31st Olympiad, Host: Baku, Azerbaijan) - results",https://stats.ioinformatics.org/results/2019
268,Lobsters,compsci,CSE,Getting the GNU gdbserver to work,https://blog.netbsd.org/tnf/entry/getting_the_gnu_gdbserver_to
269,Lobsters,compsci,CSE,Fuzzing NetBSD Filesystems via AFL. [Part 2],http://blog.netbsd.org/tnf/entry/fuzzing_netbsd_filesystems_via_afl
270,Lobsters,compsci,CSE,"Enchancing Syzkaller Support for NetBSD, Part 2",https://blog.netbsd.org/tnf/entry/enchancing_syzkaller_support_for_netbsd
271,Lobsters,compsci,CSE,1kb purely functional web application library,https://kbrsh.github.io/moon
272,Lobsters,compsci,CSE,"GSoC 2019 Report: Adding NetBSD KNF to clang-format, Part 2",https://blog.netbsd.org/tnf/entry/gsoc_2019_report_adding_netbsd
273,Lobsters,compsci,CSE,Report Update: Incorporating the memory-hard Argon2 hashing scheme into NetBSD,http://blog.netbsd.org/tnf/entry/gsoc_2019_report_update_incorporating
274,Lobsters,compsci,CSE,Curated List Of Free Online Programming & Computer Science Courses,https://www.freecodecamp.org/news/free-programming-courses-august-2019/
275,Lobsters,compsci,CSE,Inventing Monads,https://blog.kabir.sh/posts/inventing-monads.html
276,Lobsters,compsci,CSE,Escaping Escaping,https://axelsvensson.com/escaping-escaping
277,Lobsters,compsci,CSE,Work-in-progress threading support in LLDB,https://blog.netbsd.org/tnf/entry/work_in_progress_threading_support
278,Lobsters,compsci,CSE,"Adapting TriforceAFL for NetBSD, Part 2",https://blog.netbsd.org/tnf/entry/adapting_triforceafl_for_netbsd_part1
279,Lobsters,compsci,CSE,Blockchain: What the hell is a Merkle Tree?,https://medium.com/@htkibar/blockchain-what-the-hell-is-a-merkle-tree-65a3071f1ddb
280,Lobsters,compsci,CSE,A brief introduction to Semantic Dictionary Encoding,https://hokstad.com/semantic-dictionary-encoding
281,Lobsters,compsci,CSE,A Brief Guide to A Few Algebraic Structures,https://argumatronic.com/posts/2019-06-21-algebra-cheatsheet.html
282,Lobsters,compsci,CSE,Shenanigans With Hash Tables,http://thume.ca/2019/07/29/shenanigans-with-hash-tables/
283,Lobsters,compsci,CSE,Plan 9 from Bell Labs Gets Early Support for the Raspberry Pi 4,https://abopen.com/news/plan-9-from-bell-labs-gets-early-support-for-the-raspberry-pi-4/
284,Lobsters,compsci,CSE,"Cold flows, hot channels",https://medium.com/@elizarov/cold-flows-hot-channels-d74769805f9
285,Lobsters,compsci,CSE,Decades-Old Computer Science Conjecture Solved in Two Pages,https://www.quantamagazine.org/mathematician-solves-computer-science-conjecture-in-two-pages-20190725/
286,Lobsters,compsci,CSE,Rhythm Dungeon: A Blockchain-based Music Roguelike Game,https://arxiv.org/abs/1907.00042
287,Lobsters,compsci,CSE,A Differentiable Programming System to Bridge Machine Learning and Scientific Computing,https://arxiv.org/abs/1907.07587
288,Lobsters,compsci,CSE,Natural Adversarial Examples,https://github.com/hendrycks/natural-adv-examples
289,Lobsters,compsci,CSE,Cities: Skylines is Turing Complete,https://medium.com/@balidani/cities-skylines-is-turing-complete-e5ccf75d1c3a
290,Lobsters,compsci,CSE,Some Reflections on Early History by J.C.R. Licklider,https://www.youtube.com/watch?v=SN--t9jXQc0
291,Lobsters,compsci,CSE,simdjson: Parsing gigabytes of JSON per second,https://github.com/lemire/simdjson
292,Lobsters,compsci,CSE,"Deep Dive into MQTT: History, Functionality, Future",https://www.ably.io/concepts/mqtt
293,Lobsters,compsci,CSE,"I was wrong about spreadsheets, and I’m sorry",https://reifyworks.com/writing/2017-01-25-i-was-wrong-about-spreadsheets-and-im-sorry
294,Lobsters,compsci,CSE,Chu construction on linear logic,http://boxbase.org/entries/2019/jul/15/chu-construction/
295,Lobsters,compsci,CSE,A physicist’s journey into cracking the bitcoin,https://hackernoon.com/a-physicists-journey-into-cracking-bitcoin-4631e57158cc
296,Lobsters,compsci,CSE,posit: thin triangle other tricks (REVEALED!),https://marc-b-reynolds.github.io/math/2019/02/06/Posit1.html
297,Lobsters,compsci,CSE,"SMT Solvers, Integer Linear Programming",https://shapr.github.io/posts/2019-07-10-smt-solvers.html
298,Lobsters,compsci,CSE,GSoC 2019 Report: Incorporating the memory-hard Argon2 hashing scheme into NetBSD,http://blog.netbsd.org/tnf/entry/gsoc_2019_report_incorporating_the
299,Lobsters,compsci,CSE,Spiking Neural Network (SNN) with PyTorch: towards bridging the gap between deep learning and the human brain,https://guillaume-chevalier.com/spiking-neural-network-snn-with-pytorch-where-backpropagation-engenders-stdp-hebbian-learning/
300,Lobsters,compsci,CSE,"LLDB: watchpoints, XSTATE in ptrace() and core dumps",http://blog.netbsd.org/tnf/entry/lldb_watchpoints_xstate_in_ptrace
301,Lobsters,compsci,CSE,ChampSim - trace-based simulator for a microarchitecture study,https://github.com/ChampSim/ChampSim
302,Lobsters,compsci,CSE,Category Theory in 10 Minutes,https://www.slideshare.net/JordanParmer/category-theory-in-10-minutes-77309719
303,Lobsters,compsci,CSE,Formatting floating point numbers,https://www.zverovich.net/2019/02/11/formatting-floating-point-numbers.html
304,Lobsters,compsci,CSE,"New form of logic. Not theory, have working models. Need help",https://app.box.com/s/4plplfbrhwr9qflosp8tir00r0pf1467
305,Lobsters,compsci,CSE,Deletion Without Rebalancing in Binary Search Trees,http://sidsen.azurewebsites.net/papers/ravl-trees-journal.pdf
306,Lobsters,compsci,CSE,Write your own fuzzer for NetBSD kernel! [Part 1],http://blog.netbsd.org/tnf/entry/write_your_own_fuzzer_for
307,Lobsters,compsci,CSE,Elements of Programming (2011),https://www.youtube.com/watch?v=Ih9gpJga4Vc
308,Lobsters,compsci,CSE,An online context-free language generator with BNF support and a tutorial,https://baturin.org/tools/bnfgen
309,Lobsters,compsci,CSE,"The how and why CPUs do “branch prediction""",https://danluu.com/branch-prediction/
310,Lobsters,compsci,CSE,"Porting NetBSD to HummingBoard Pulse, Part 1",https://blog.netbsd.org/tnf/entry/porting_netbsd_to_hummingboard_pulse
311,Lobsters,compsci,CSE,"Porting Wine to amd64 on NetBSD, first evaluation report",https://blog.netbsd.org/tnf/entry/porting_wine_to_amd64_on
312,Lobsters,compsci,CSE,Galactic Algorithms (2010),https://rjlipton.wordpress.com/2010/10/23/galactic-algorithms/
313,Lobsters,compsci,CSE,Bounds for sorting by prefix reversal (1978),https://people.eecs.berkeley.edu/~christos/papers/Bounds%20For%20Sorting%20By%20Prefix%20Reversal.pdf
314,Lobsters,compsci,CSE,What Is Dynamic Programming With Python Examples,https://skerritt.blog/dynamic-programming/
315,Lobsters,compsci,CSE,Greedy Algorithms,https://skerritt.blog/greedy-algorithms/
316,Lobsters,compsci,CSE,Graduate Student Solves Quantum Verification Problem,https://www.quantamagazine.org/graduate-student-solves-quantum-verification-problem-20181008/
317,Lobsters,compsci,CSE,snmalloc: A message passing allocator,https://github.com/microsoft/snmalloc/blob/master/snmalloc.pdf
318,Lobsters,compsci,CSE,Using Space Filling Fractals to Minimize Eye-Travel – TBF R&D,http://tbf-rnd.life/blog/2019/06/20/using-space-filling-fractals-to-minimize-eye-travel/
319,Lobsters,compsci,CSE,Modeling tower of hanoi in linear logic,http://boxbase.org/entries/2019/jun/17/hanoi/
320,Lobsters,compsci,CSE,The Post JavaScript Apocalypse (2017),https://www.youtube.com/watch?v=99Zacm7SsWQ
321,Lobsters,compsci,CSE,Why Logical Clocks are Easy,https://queue.acm.org/detail.cfm?id=2917756
322,Lobsters,compsci,CSE,A Simple Explanation of Information Gain and Entropy,https://victorzhou.com/blog/information-gain/
323,Lobsters,compsci,CSE,Robust-first computing: Demon Horde Sort,https://www.youtube.com/watch?v=lbgzXndaNKk
324,Lobsters,compsci,CSE,Infrequently Asked Questions in comp.lang.c (Parody),http://www.seebs.net/faqs/c-iaq.html
325,Lobsters,compsci,CSE,GRIN Compiler - whole program optimizer for lazy and strict functional languages,https://grin-compiler.github.io/
326,Lobsters,compsci,CSE,Crash-only software,https://en.wikipedia.org/wiki/Crash-only_software
327,Lobsters,compsci,CSE,metadsl: A Framework for Domain Specific Languages in Python,https://labs.quansight.org/blog/2019/05/metadsl-dsl-framework/
328,Lobsters,compsci,CSE,"A Self-Learning, Modern Computer Science Curriculum",https://functionalcs.github.io/curriculum/
329,Lobsters,compsci,CSE,B-threads: programming in a way that allows for easier changes,https://medium.com/@lmatteis/b-threads-programming-in-a-way-that-allows-for-easier-changes-5d95b9fb6928
330,Lobsters,compsci,CSE,Esoteric input systems; Edgewrite and my own theories,http://tbf-rnd.life/blog/2019/06/02/114/
331,Lobsters,compsci,CSE,Support Open Source Research,http://tbf-rnd.life/blog/2019/05/28/support-open-source-research/
332,Lobsters,compsci,CSE,"""Blocking without Locking"" or LFthreads: A Lock-Free, Thread Library (2005)",https://pdfs.semanticscholar.org/f3b6/cb395b63b4335592f7162bc5bc004afcb310.pdf
333,Lobsters,compsci,CSE,Project Oberon RISC5 CPU Emulator,https://pythonoberon.readthedocs.io
334,Lobsters,compsci,CSE,Esoteric input methods: Dasher and Morse,http://tbf-rnd.life/blog/2019/05/27/dasher-method-and-what-i-am-trying-to-accomplish/
335,Lobsters,compsci,CSE,"Compress objects, not cache lines: an object-based compressed memory hierarchy",https://blog.acolyer.org/2019/05/24/zippads/
336,Lobsters,compsci,CSE,Theory of the Pijul Version Control System,https://pijul.org/manual/theory.html
337,Lobsters,compsci,CSE,Beating up on qsort,https://travisdowns.github.io/blog/2019/05/22/sorting.html
338,Lobsters,compsci,CSE,Perfect and Fast Random Floating Point Numbers,https://experilous.com/1/blog/post/perfect-fast-random-floating-point-numbers
339,Lobsters,compsci,CSE,Famous paper rejections,http://www.fang.ece.ufl.edu/reject.html
340,Lobsters,compsci,CSE,"No rational number squares to 2, after D. Zeilberger",https://thehighergeometer.wordpress.com/2019/05/19/no-rational-number-squares-to-2-after-d-zeilberger/
341,Lobsters,compsci,CSE,I Got a Knuth Check for 0x$3.00,https://nickdrozd.github.io/2019/05/17/knuth-check.html
342,Lobsters,compsci,CSE,Porting NetBSD to the RISC-V,https://www.bsdcan.org/2019/schedule/events/1039.en.html
343,Lobsters,compsci,CSE,On Recursive Functions,https://deniskyashif.com/on-recursive-functions/
344,Lobsters,compsci,CSE,APEx: Accuracy-Aware Differentially Private Data Exploration,https://cs.uwaterloo.ca/~ilyas/papers/GeSIGMOD2019.pdf
345,Lobsters,compsci,CSE,Writing a producedural puzzle generator,https://www.snellman.net/blog/archive/2019-05-14-procedural-puzzle-generator/
346,Lobsters,compsci,CSE,SIPping and TIPping for faster search over sorted arrays,http://bigfastdata.blogspot.com/2019/05/sipping-and-tipping-for-faster-search.html
347,Lobsters,compsci,CSE,Nim programming language: version 0.19.6 released,https://nim-lang.org/blog/2019/05/13/version-0196-released.html
348,Lobsters,compsci,CSE,Append only development with React: an intro to Behavioral Programming,https://www.youtube.com/watch?v=cXuvCMG21Ss
349,Lobsters,compsci,CSE,Understanding the Basis of the Kalman Filter - Ramsey Faragher,https://courses.engr.illinois.edu/ece420/sp2017/UnderstandingKalmanFilter.pdf
350,Lobsters,compsci,CSE,react-behavioral: Behavioral Programming,https://lmatteis.github.io/react-behavioral/
351,Lobsters,compsci,CSE,Announcing Google Summer of Code 2019 projects,https://blog.netbsd.org/tnf/entry/announcing_google_summer_of_code1
352,Lobsters,compsci,CSE,Battletoads text decompression (huffman),https://forums.nesdev.com/viewtopic.php?t=8609
353,Lobsters,compsci,CSE,Self-taught Mathematician; an impossibility?,https://medium.com/@artagnon/self-taught-mathematician-an-impossibility-67d9b6893710
354,Lobsters,compsci,CSE,Minimalist Programming Languages (2014),http://chriswarbo.net/blog/2014-12-22-minimal_languages.html
355,Lobsters,compsci,CSE,LLDB: extending CPU register inspection support,http://blog.netbsd.org/tnf/entry/lldb_extending_cpu_register_inspection
356,Lobsters,compsci,CSE,OpenAFS Workshop 2019,https://openafs-workshop.org/
357,Lobsters,compsci,CSE,Design Patterns - JavaScript - Based on the Gang of Four book,http://designpatternsgame.com
358,Lobsters,compsci,CSE,Graceful degradation: Harvest and Yield in the age of microservices,https://dev.to/yonkeltron/graceful-degradation-harvest-and-yield-in-the-age-of-microservices-58cj
359,Lobsters,compsci,CSE,Sorting Algorithm Cheatsheet,https://www.interviewcake.com/sorting-algorithm-cheat-sheet
360,Lobsters,compsci,CSE,Nim: hot code-reloading at runtime on a compiled language,https://www.youtube.com/watch?v=7WgCt0Wooeo
361,Lobsters,compsci,CSE,Kernighan's lever (2012),https://www.linusakesson.net/programming/kernighans-lever/index.php
362,Lobsters,compsci,CSE,"Random Thoughts on Brain-Computer Interfaces, Productivity, and Privacy",https://guillaume-chevalier.com/random-thoughts-on-brain-computer-interfaces-productivity-and-privacy/
363,Lobsters,compsci,CSE,qgrep internals,https://zeux.io/2019/04/20/qgrep-internals/
364,Lobsters,compsci,CSE,Peeling Back the Darkness of M87,https://www.tacc.utexas.edu/-/peeling-back-the-darkness-of-m87
365,Lobsters,compsci,CSE,Duplicate and fake publications in the scientific literature: how many SCIgen papers in computer science?,https://hal.archives-ouvertes.fr/hal-00641906v2
366,Lobsters,compsci,CSE,A graphical introduction to dynamic programming,https://avikdas.com/2019/04/15/a-graphical-introduction-to-dynamic-programming.html
367,Lobsters,compsci,CSE,Wavelet Trees - an Introduction,https://alexbowe.com/wavelet-trees/
368,Lobsters,compsci,CSE,How is CUE different from jsonnet?,https://github.com/cuelang/cue/issues/33
369,Lobsters,compsci,CSE,LSTMs for Human Activity Recognition,https://guillaume-chevalier.com/lstms-for-human-activity-recognition/
370,Lobsters,compsci,CSE,OneFile - The world's first wait-free Software Transactional Memory,http://concurrencyfreaks.blogspot.com/2019/04/onefile-worlds-first-wait-free-software.html
371,Lobsters,compsci,CSE,"Kendo: Efficient, Deterministic Multithreading in Software (2009)",https://people.csail.mit.edu/mareko/asplos073-olszewski.pdf
372,Lobsters,compsci,CSE,Weakly Supervised Deep Detection Networks (WSDDN),http://www.atakans.com/posts/wsddn/
373,Lobsters,compsci,CSE,Random Forests for Complete Beginners,https://victorzhou.com/blog/intro-to-random-forests/
374,Lobsters,compsci,CSE,A gentle introduction to symbolic execution,https://blog.monic.co/a-gentle-introduction-to-symbolic-execution/
375,Lobsters,compsci,CSE,The Illustrated Word2vec,https://jalammar.github.io/illustrated-word2vec/
376,Lobsters,compsci,CSE,Lossless Data Compression with Neural Networks,https://bellard.org/nncp/
377,Lobsters,compsci,CSE,Robin Hood hashing: backward shift deletion,http://codecapsule.com/2013/11/17/robin-hood-hashing-backward-shift-deletion/
378,Lobsters,compsci,CSE,Systems Software Research is Irrelevant (2000),http://doc.cat-v.org/bell_labs/utah2000/utah2000.html
379,Lobsters,compsci,CSE,Don’t Use ISO/IEC 14977 Extended Backus-Naur Form (EBNF),https://dwheeler.com/essays/dont-use-iso-14977-ebnf.html
380,Lobsters,compsci,CSE,Oscar: A Practical Page-Permissions-Based Scheme for Thwarting Dangling Pointers (2017),https://www.usenix.org/system/files/conference/usenixsecurity17/sec17-dang.pdf
381,Lobsters,compsci,CSE,Racket School 2019,https://school.racket-lang.org
382,Lobsters,compsci,CSE,Why language-oriented programming? Why Racket?,https://beautifulracket.com/appendix/why-lop-why-racket.html
383,Lobsters,compsci,CSE,SIGBOVIK 2019,http://www.sigbovik.org/2019/
384,Lobsters,compsci,CSE,Before Unix: An Early History of Timesharing Systems (2016),https://www.youtube.com/watch?v=UYb6WqWBTE0
385,Lobsters,compsci,CSE,A Real-Time Wideband Neural Vocoder at 1.6 kb/s Using LPCNet,https://people.xiph.org/~jm/demo/lpcnet_codec/
386,Lobsters,compsci,CSE,A Simple Explanation of Gini Impurity,https://victorzhou.com/blog/gini-impurity/
387,Lobsters,compsci,CSE,Efficiently Detecting All Dangling Pointer Uses in Production Servers (2006),https://llvm.org/pubs/2006-DSN-DanglingPointers.pdf
388,Lobsters,compsci,CSE,Why are monoidal categories interesting?,https://jvns.ca/blog/2019/03/26/what-are-monoidal-categories/
389,Lobsters,compsci,CSE,NASA - Self-Reconfigurable Digital Circuits,https://www.nasa.gov/centers/ames/research/technology-onepagers/self-reconfigurable.html
390,Lobsters,compsci,CSE,WTF is Big O Notation?,https://rob.conery.io/2019/03/25/wtf-is-big-o-notation/
391,Lobsters,compsci,CSE,Turning the JVM into a Polyglot VM with Graal (2017),https://www.youtube.com/watch?v=oWX2tpIO4Yc
392,Lobsters,compsci,CSE,Study into exact real arithmetic Pt. 1&2,http://boxbase.org/entries/2019/mar/25/icreals-2/
393,Lobsters,compsci,CSE,Linear Fit Search,https://blog.demofox.org/2019/03/22/linear-fit-search/
394,Lobsters,compsci,CSE,AsiaBSDCon 2019 Proceedings,https://2019.asiabsdcon.org/proc-body-2019.pdf
395,Lobsters,compsci,CSE,"Microsoft, UW demonstrate first fully automated DNA data storage",https://news.microsoft.com/innovation-stories/hello-data-dna-storage/
396,Lobsters,compsci,CSE,An Introduction to Existential Types (2017),https://medium.com/@stephenebly/an-introduction-to-existential-types-25c130ba61a4
397,Lobsters,compsci,CSE,"LLVM8.0, Kernel Sanitizers and HAXM in NetBSD",http://netbsd.org/~kamil/netbsd_asiabsdcon2019_bof.html#slide1
398,Lobsters,compsci,CSE,"Gremlin: A Graph-based, Programming Language",https://www.slideshare.net/slidarko/gremlin-a-graphbased-programming-language-3876581
399,Lobsters,compsci,CSE,Dr. Alan Kay on the Meaning of Object-Oriented Programming,http://www.purl.org/stefan_ram/pub/doc_kay_oop_en
400,Lobsters,compsci,CSE,Papers and Algorithms in LLVM's Source Code,https://github.com/oilshell/blog-code/blob/master/grep-for-papers/llvm.txt
401,Lobsters,compsci,CSE,Presenting XXH3,http://fastcompression.blogspot.com/2019/03/presenting-xxh3.html
402,Lobsters,compsci,CSE,The Slot Map (2013),http://seanmiddleditch.com/data-structures-for-game-developers-the-slot-map/
403,Lobsters,compsci,CSE,Exploiting and Automated Detection of Vulnerabilities in Web Applications (2007),http://www.zemris.fer.hr/~sgros/publications/diploma_thesis/suhina_vanja_seminar.pdf
404,Lobsters,compsci,CSE,M-expression,https://en.wikipedia.org/wiki/M-expression
405,Lobsters,compsci,CSE,Worstsort,https://byorgey.wordpress.com/2019/02/16/worstsort/
406,Lobsters,compsci,CSE,Contradiction in divide by zero,http://boxbase.org/entries/2019/mar/11/contradiction-in-divide-by-zero/
407,Lobsters,compsci,CSE,Flow-based Programming,http://www.jpaulmorrison.com/fbp/
408,Lobsters,compsci,CSE,Generating Finite State Machines from Abstract State Machines (2002),https://www.microsoft.com/en-us/research/wp-content/uploads/2002/07/issta02.pdf
409,Lobsters,compsci,CSE,How many words do you need to describe all words,https://news.ycombinator.com/item?id=19331307
410,Lobsters,compsci,CSE,The Linear Time Algorithm for Finding Fibonacci Numbers is not Linear,https://catonmat.net/linear-time-fibonacci
411,Lobsters,compsci,CSE,Computer science in JavaScript: Linked list,https://humanwhocodes.com/blog/2019/01/computer-science-in-javascript-linked-list/
412,Lobsters,compsci,CSE,Keeping CALM: when distributed consistency is easy,https://blog.acolyer.org/2019/03/06/keeping-calm-when-distributed-consistency-is-easy/
413,Lobsters,compsci,CSE,Introduction to Theoretical Computer Science,https://introtcs.org/public/index.html
414,Lobsters,compsci,CSE,Domain Modeling with Abstract Algebra,https://medium.com/@reidev275/domain-modeling-with-abstract-algebra-47f8f9e0d012
415,Lobsters,compsci,CSE,Increasing coverage of signal semantics in regression tests,https://blog.netbsd.org/tnf/entry/increasing_coverage_of_signal_semantics
416,Lobsters,compsci,CSE,"Some opinions about “algorithms startups”, from a sample size of approximately 1",https://branchfree.org/2018/06/12/some-opinions-about-algorithms-startups-from-a-sample-size-of-approximately-1/
417,Lobsters,compsci,CSE,A Critical Review of Dynamic Taint Analysis and Forward Symbolic Execution,https://asankhaya.github.io/pdf/ACriticalReviewofDynamicTaintAnalysisandForwardSymbolicExecution.pdf
418,Lobsters,compsci,CSE,"How do we tell truths that might hurt? (Dijkstra, 1982)",https://www.cs.utexas.edu/users/EWD/ewd04xx/EWD498.PDF
419,Lobsters,compsci,CSE,The Physics of Software,http://www.physicsofsoftware.com/papers.html
420,Lobsters,compsci,CSE,The NetBSD Foundation participating in Google Summer of Code 2019,https://blog.netbsd.org/tnf/entry/the_netbsd_foundation_participating_in
421,Lobsters,compsci,CSE,Static Analysis for Inference of Explicit Information Flow (2008),http://www.cs.rpi.edu/~milanova/docs/paste08.pdf
422,Lobsters,compsci,CSE,A Gentle Introduction to Lambda Calculus - Part 1: Syntax,https://lucasfcosta.com/2018/07/29/An-Introduction-to-Lambda-Calculus-Part-1.html
423,Lobsters,compsci,CSE,Type systems and logic,https://codewords.recurse.com/issues/one/type-systems-and-logic
424,Lobsters,compsci,CSE,A Survey of Runtime Policy Enforcement Techniques and Implementations (2011),https://core.ac.uk/download/pdf/150083566.pdf
425,Lobsters,compsci,CSE,Diving into Merkle Trees,https://ordepdev.me/posts/diving-into-merkle-trees
426,Lobsters,compsci,CSE,List of unsolved problems in computer science,https://en.wikipedia.org/wiki/List_of_unsolved_problems_in_computer_science
427,Lobsters,compsci,CSE,Rahul Gopinath's Summary of His Research on Mutation Testing,http://rahul.gopinath.org/
428,Lobsters,compsci,CSE,Generating Combinations: Gosper's Hack,http://andy.kitchen/combinations.html
429,Lobsters,compsci,CSE,A Generalised Solution to Distributed Consensus,https://arxiv.org/abs/1902.06776
430,Lobsters,compsci,CSE,Fisher-Yates Shuffle,https://en.wikipedia.org/wiki/Fisher%E2%80%93Yates_shuffle
431,Lobsters,compsci,CSE,Incompleteness Ex Machina,https://www.scottaaronson.com/incompleteness.pdf
432,Lobsters,compsci,CSE,rANS on 6502,https://yupferris.github.io/blog/2019/02/11/rANS-on-6502.html
433,Lobsters,compsci,CSE,What is Differentiable Programming?,https://fluxml.ai/2019/02/07/what-is-differentiable-programming.html
434,Lobsters,compsci,CSE,A survey on dynamic and stochastic vehicle routing problems (2015),https://hal.inria.fr/hal-01224562/document
435,Lobsters,compsci,CSE,fantasyland/fantasy-land: Specification for interoperability of common algebraic structures in Java,https://github.com/fantasyland/fantasy-land
436,Lobsters,compsci,CSE,MIT Hacker Tools: a lecture series on programmer tools,https://hacker-tools.github.io/
437,Lobsters,compsci,CSE,Tutorial: Creating an LLVM Backend for the Cpu0 Architecture,http://jonathan2251.github.io/lbd/
438,Lobsters,compsci,CSE,Modern LZ Compression,https://glinscott.github.io/lz/index.html
439,Lobsters,compsci,CSE,Integration of the LLVM sanitizers with the base system,https://blog.netbsd.org/tnf/entry/integration_of_the_llvm_sanitziers
440,Lobsters,compsci,CSE,Quadtree vs Spatial Hashing - a Visualization (2014),http://zufallsgenerator.github.io/2014/01/26/visually-comparing-algorithms/
441,Lobsters,compsci,CSE,Nested data structures with functional lenses,https://yapee.svbtle.com/nested-data-structures-with-lens
442,Lobsters,compsci,CSE,Multi-Scale Turing Patterns,https://softologyblog.wordpress.com/2011/07/05/multi-scale-turing-patterns/
443,Lobsters,compsci,CSE,Checks and Balances: Constraint Solving without Surprises in Object-Constraint Programming Language,http://www.vpri.org/pdf/tr2015002_oopsla15_babelsberg.pdf
444,Lobsters,compsci,CSE,Coding the Matrix: Linear Algebra through Computer Science Applications,http://academictorrents.com/details/54cd86f3038dfd446b037891406ba4e0b1200d5a
445,Lobsters,compsci,CSE,What is soundness (in static analysis)?,http://www.pl-enthusiast.net/2017/10/23/what-is-soundness-in-static-analysis/
446,Lobsters,compsci,CSE,Using Hammock Graphs to Structure Programs (2004),https://biblio.ugent.be/publication/291746/file/451220.pdf
447,Lobsters,compsci,CSE,Data structures to name-drop when you want to sound smart in an interview,http://blog.amynguyen.net/?p=853
448,Lobsters,compsci,CSE,Visit CERN/LHC,https://visits.web.cern.ch/
449,Lobsters,compsci,CSE,Impossible Programs,https://codon.com/impossible-programs
450,Lobsters,compsci,CSE,C++ Compile-Time Exceptions -- Debugging C++ templates should be less surreal and horrible,https://blog.esciencecenter.nl/c-compile-time-exceptions-5443f5bf06fe
451,Lobsters,compsci,CSE,"Analog computation, Part 1: What and why",https://www.analogictips.com/analog-computation-part-1-what-and-why/
452,Lobsters,compsci,CSE,"Paper Review: Empirical Study on Crash Recovery Bugs in Large-Scale, Distributed Systems",https://muratbuffalo.blogspot.com/2019/01/paper-review-empirical-study-on-crash.html
453,Lobsters,compsci,CSE,Quantum computing as a field is obvious bullshit,https://scottlocklin.wordpress.com/2019/01/15/quantum-computing-as-a-field-is-obvious-bullshit/
454,Lobsters,compsci,CSE,L4Linux - Linux running on the L4 microkernel,https://l4linux.org/overview.shtml
455,Lobsters,compsci,CSE,The Oodle LZNIB Algorithm,http://cbloomrants.blogspot.com/2019/01/the-oodle-lznib-algorithm.html
456,Lobsters,compsci,CSE,The first report on LLD porting,http://blog.netbsd.org/tnf/entry/the_first_report_on_lld
457,Lobsters,compsci,CSE,Complexity Explorer,https://www.complexityexplorer.org/
458,Lobsters,compsci,CSE,How Radix trees made blocking IPs 5000 times faster,https://blog.sqreen.io/demystifying-radix-trees/
459,Lobsters,compsci,CSE,Finite State Entropy: A New Breed of Entropy Coder (2013),https://fastcompression.blogspot.com/2013/12/finite-state-entropy-new-breed-of.html
460,Lobsters,compsci,CSE,Building Blocks for Theoretical Computer Science,http://mfleck.cs.illinois.edu/building-blocks/
461,Lobsters,compsci,CSE,Interpreting Programs in Static Single Assignment Form (2004),http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.74.9046&rep=rep1&type=pdf
462,Lobsters,compsci,CSE,List of open source internships for students,https://github.com/tapaswenipathak/Open-Source-Internships
463,Lobsters,compsci,CSE,Data Structures and Functional Programming (ocaml and coq),https://www.cs.cornell.edu/courses/cs3110/2017fa/
464,Lobsters,compsci,CSE,In honor of Donald Knuth's 81 birthday Stanford uploaded 111 lectures on Youtube,http://www.youtube.com/playlist?list=PL94E35692EB9D36F3
465,Lobsters,compsci,CSE,Learning the Linux Kernel with tracing,https://www.youtube.com/watch?v=JRyrhsx-L5Y
466,Lobsters,compsci,CSE,The continuation passing transform and the Yoneda embedding,https://reperiendi.wordpress.com/2007/12/19/the-continuation-passing-transform-and-the-yoneda-embedding/
467,Lobsters,compsci,CSE,Reverse Engineering Machines with the Yoneda Lemma,http://blog.sigfpe.com/2006/11/yoneda-lemma.html
468,Lobsters,compsci,CSE,IBM Q System One,https://www.research.ibm.com/ibm-q/system-one/
469,Lobsters,compsci,CSE,Parallel Algorithms for Depth-First Search (1991),https://repository.upenn.edu/cgi/viewcontent.cgi?article=1444&context=cis_reports
470,Lobsters,compsci,CSE,Can you sign a quantum state?,https://arxiv.org/abs/1811.11858
471,Lobsters,compsci,CSE,Graphs are to categories as lists are to monoids,https://alhassy.github.io/PathCat/
472,Lobsters,compsci,CSE,Graph of NP-Complete Problems,https://adriann.github.io/npc/npc.html
473,Lobsters,compsci,CSE,Are all combinatorial problems susceptible to optimisation by caching?,/s/lvzzra/are_all_combinatorial_problems
474,Lobsters,compsci,CSE,Packrat Parsing: a Practical Linear-Time Algorithm with Backtracking (2002),https://pdos.csail.mit.edu/~baford/packrat/thesis/
475,Lobsters,compsci,CSE,An All-in-One DAG Toolkit,https://vaibhavsagar.com/blog/2017/06/10/dag-toolkit/
476,Lobsters,compsci,CSE,Leveraging Rust types for modular specification and verification,https://www.research-collection.ethz.ch/handle/20.500.11850/311092
477,Lobsters,compsci,CSE,Input Output Files in R from Cloud or Local storage,https://github.com/socialcopsdev/flyio
478,Lobsters,compsci,CSE,Algorithms by Jeff Erickson,http://jeffe.cs.illinois.edu/teaching/algorithms/#book
479,Lobsters,compsci,CSE,"A fluent, easy-to-use, object oriented Ruby HTTP/REST",https://github.com/gojektech/wrest
480,Lobsters,compsci,CSE,NetBSD entering 2019 with more complete LLVM support,http://blog.netbsd.org/tnf/entry/netbsd_entering_2019_with_more
481,Lobsters,compsci,CSE,Reversing an n-bit number in O(log n) time,https://medium.com/@ehudt/reversing-an-n-bit-number-in-o-log-n-time-9bf69363d452
482,Lobsters,compsci,CSE,Strings with hamming distance exactly 1,https://chaoxuprime.com/posts/2018-12-23-strings-with-hamming-distance-exactly-1.html
483,Lobsters,compsci,CSE,An enhanced HTTP client for Go,https://github.com/gojektech/heimdall
484,Lobsters,compsci,CSE,A stream processing framework to build stateless applications on Kafka in clojure,https://github.com/gojektech/ziggurat
485,Lobsters,compsci,CSE,DSMR: A Parallel Algorithm for Single-Source Shortest Path Problem (2016),http://iss.ices.utexas.edu/Publications/Papers/ICS2016.pdf
486,Lobsters,compsci,CSE,threadpool(9) -- an API for scheduling jobs on shared pools of threads,http://mail-index.netbsd.org/tech-kern/2018/12/26/msg024438.html
487,Lobsters,compsci,CSE,I hate the Pumping Lemma,https://bosker.wordpress.com/2013/08/18/i-hate-the-pumping-lemma/
488,Lobsters,compsci,CSE,A formally verified transformation to unify multiple nested clocks for a Lustre-like language,http://scis.scichina.com/en/2019/012801.pdf
489,Lobsters,compsci,CSE,Amoeba finds approximate solutions to NP-hard problem in linear time,https://phys.org/news/2018-12-amoeba-approximate-solutions-np-hard-problem.html
490,Lobsters,compsci,CSE,Fast vs. slow for engineers vs. theorists,https://twitter.com/polikarn/status/1073258037954007040
491,Lobsters,compsci,CSE,Exploring Quantum Neural Networks,http://ai.googleblog.com/2018/12/exploring-quantum-neural-networks.html
492,Lobsters,compsci,CSE,Best CS paper(s) that you read in 2018?,/s/otvlfc/best_cs_paper_s_you_read_2018
493,Lobsters,compsci,CSE,An introduction to gradient boosting,https://charlienewey.github.io/introduction-to-gradient-boosting/
494,Lobsters,compsci,CSE,Optimizing Siri on HomePod in Far‑Field Settings,https://machinelearning.apple.com/2018/12/03/optimizing-siri-on-homepod-in-far-field-settings.html
495,Lobsters,compsci,CSE,The NetBSD support update before the LLVM-8.0 branching point,http://blog.netbsd.org/tnf/entry/the_netbsd_support_update_before
496,Lobsters,compsci,CSE,Introducing NGS,https://hackernoon.com/introducing-ngs-d3d216d0daef
497,Lobsters,compsci,CSE,Foundations and Trends in Programming Languages: Program Synthesis,https://www.microsoft.com/en-us/research/wp-content/uploads/2017/10/program_synthesis_now.pdf
498,Lobsters,compsci,CSE,Rate-distortion optimization,https://fgiesen.wordpress.com/2018/12/10/rate-distortion-optimization/
499,Lobsters,compsci,CSE,Old Neglected Theorems Are Still Theorems,https://existentialtype.wordpress.com/2014/03/20/old-neglected-theorems-are-still-theorems/
500,Lobsters,compsci,CSE,Thoughts for a new minimal markup language,/s/chyhrd/thoughts_for_new_minimal_markup_language
501,Lobsters,compsci,CSE,Active Text for Structuring and Understanding Source Code (1996),https://pdfs.semanticscholar.org/7ff2/6dad3e5a3a4112e1ce1f291b09b89c91476d.pdf
502,Lobsters,compsci,CSE,The Swiss Army Knife of Hashmaps,https://blog.waffles.space/2018/12/07/deep-dive-into-hashbrown/
503,Lobsters,compsci,CSE,Uncertainty propagation in data processing systems,https://blog.acolyer.org/2018/11/23/uncertainty-propagation-in-data-processing-systems/
504,Lobsters,compsci,CSE,Formally Verified On-Line Diagnosis (1999),https://www.researchgate.net/profile/Neeraj_Suri/publication/2828216_Formally_Verified_On-Line_Diagnosis/links/00b495352419ec56d5000000/Formally-Verified-On-Line-Diagnosis.pdf?origin=publication_detail
505,Lobsters,compsci,CSE,CS631 - Advanced Programming in the UNIX Environment,https://stevens.netmeister.org/631/lecture14.pdf
506,Lobsters,compsci,CSE,How to Grow Neat Software Architecture out of Jupyter Notebooks,https://github.com/guillaume-chevalier/How-to-Grow-Neat-Software-Architecture-out-of-Jupyter-Notebooks
507,Lobsters,compsci,CSE,Functional programming bibliography?,/s/enbund/functional_programming_bibliography
508,Lobsters,compsci,CSE,A Highly Productive Implementation of an Out-of-Order Processor Generator,https://www2.eecs.berkeley.edu/Pubs/TechRpts/2018/EECS-2018-151.pdf
509,Lobsters,compsci,CSE,Reducing the delta with upstream version of sanitizers,https://blog.netbsd.org/tnf/entry/reducing_the_delta_with_upstream
510,Lobsters,compsci,CSE,The Arcane Algorithm Archive,https://www.algorithm-archive.org/
511,Lobsters,compsci,CSE,NP-hard does not mean hard,https://jeremykun.com/2017/12/29/np-hard-does-not-mean-hard/
512,Lobsters,compsci,CSE,Common Mistakes about Generational Garbage Collection,https://orbifold.xyz/garbage.html
513,Lobsters,compsci,CSE,From Nand to Tetris: Building a Modern Computer from First Principles,https://nand2tetris.org
514,Lobsters,compsci,CSE,Let's reinvent FRP (2017),http://vindum.io/blog/lets-reinvent-frp/
515,Lobsters,compsci,CSE,Every 7.8μs your computer’s memory has a hiccup,https://blog.cloudflare.com/every-7-8us-your-computers-memory-has-a-hiccup/
516,Lobsters,compsci,CSE,How physical addresses map to rows and banks in DRAM (2015),http://lackingrhoticity.blogspot.com/2015/05/how-physical-addresses-map-to-rows-and-banks.html
517,Lobsters,compsci,CSE,Two Approaches to Structured Concurrency,http://250bpm.com/blog:139
518,Lobsters,compsci,CSE,Virtual Reality [2016],http://vr.cs.uiuc.edu/
519,Lobsters,compsci,CSE,Computing History at Bell Labs,https://research.swtch.com/bell-labs
520,Lobsters,compsci,CSE,HICAMP: Architectural Support for Efficient Concurrency-safe Shared Structured Data Access,https://www.cs.princeton.edu/courses/archive/spring16/cos598F/p287-cheriton.pdf
521,Lobsters,compsci,CSE,Cliff Click is writing a new language: AA,https://github.com/cliffclick/aa
522,Lobsters,compsci,CSE,Regular Expression Matching Can Be Simple And Fast,https://swtch.com/~rsc/regexp/regexp1.html
523,Lobsters,compsci,CSE,Beating hash tables with trees? The ART-ful radix trie,https://www.the-paper-trail.org/post/art-paper-notes/
524,Lobsters,compsci,CSE,join(1) - relational database operator,https://man.openbsd.org/join.1
525,Lobsters,compsci,CSE,Aho-Corasick,https://brunorb.com/aho-corasick/
526,Lobsters,compsci,CSE,An Introduction to the Hitchhiker Tree,https://blog.datopia.io/2018/11/03/hitchhiker-tree/
527,Lobsters,compsci,CSE,NetBSD LLVM Sanitizers in The Bay Area,https://blog.netbsd.org/tnf/entry/netbsd_llvm_sanitizers_in_the
528,Lobsters,compsci,CSE,Plan 9 C compiler for RISC-V by Richard Miller,https://marc.info/?l=9fans&m=154076971426092&w=2
529,Lobsters,compsci,CSE,A Little Taste of Dependent Types,https://www.youtube.com/watch?v=VxINoKFm-S4
530,Lobsters,compsci,CSE,SYN packet handling in the wild,https://blog.cloudflare.com/syn-packet-handling-in-the-wild/
531,Lobsters,compsci,CSE,RobinHood: tail latency aware caching – dynamic reallocation from cache-rich to cache-poor,https://blog.acolyer.org/2018/10/26/robinhood-tail-latency-aware-caching-dynamic-reallocation-from-cache-rich-to-cache-poor/
532,Lobsters,compsci,CSE,SciLua: Scientific Computing with LuaJIT,http://scilua.org/
533,Lobsters,compsci,CSE,The Maude System,http://maude.cs.illinois.edu/w/index.php/The_Maude_System
534,Lobsters,compsci,CSE,Principles of Algorithmic Problem Solving,https://www.csc.kth.se/~jsannemo/slask/main.pdf
535,Lobsters,compsci,CSE,Zip Trees,https://arxiv.org/pdf/1806.06726
536,Lobsters,compsci,CSE,"Hand-rolling a minimal interpreted programming language from scratch: grammar, parser and evaluation",https://rbaron.net/blog/2018/10/05/Hand-rolling-a-minimal-interpreted-programming-language-from-scratch.html
537,Lobsters,compsci,CSE,QArt Codes (2012),https://research.swtch.com/qart
538,Lobsters,compsci,CSE,Consistency Models,http://jepsen.io/consistency
539,Lobsters,compsci,CSE,Survey of Approaches for Handling Static Analysis Alarms (2016),https://www.win.tue.nl/~aserebre/SCAM2016.pdf
540,Lobsters,compsci,CSE,Introduction to Locality-Sensitive Hashing,http://unboxresearch.com/articles/lsh_post1.html
541,Lobsters,compsci,CSE,"Hash, displace, and compress",http://cmph.sourceforge.net/papers/esa09.pdf
542,Lobsters,compsci,CSE,A Grad Student Solved a Fundamental Quantum Computing Problem,https://www.wired.com/story/a-grad-student-solved-a-fundamental-quantum-computing-problem/
543,Lobsters,compsci,CSE,Cache-Oblivious Algorithms and Data Structures (2002),http://erikdemaine.org/papers/BRICS2002/paper.pdf
544,Lobsters,compsci,CSE,"Aleph: A leaderless, asynchronous, byzantine fault tolerant consensus protocol",https://arxiv.org/pdf/1810.05256.pdf
545,Lobsters,compsci,CSE,"Local Minima, Saddle Points, and Plateaus",http://theorangeduck.com/page/local-minima-saddle-points-plateaus
546,Lobsters,compsci,CSE,Checkpointing and Consistent Recovery Lines: How We Handle Failure in Wallaroo,https://blog.wallaroolabs.com/2018/10/checkpointing-and-consistent-recovery-lines-how-we-handle-failure-in-wallaroo/
547,Lobsters,compsci,CSE,Real Differences between OT and CRDT for Co-Editors,https://arxiv.org/abs/1810.02137
548,Lobsters,compsci,CSE,List of Theoretical CS conferences and workshops,https://cstheory.stackexchange.com/q/7900/36569
549,Lobsters,compsci,CSE,"Noria: dynamic, partially-stateful data-flow for high-performance web applications",https://www.usenix.org/conference/osdi18/presentation/gjengset
550,Lobsters,compsci,CSE,Fractal Tree Index,https://en.wikipedia.org/wiki/Fractal_tree_index
551,Lobsters,compsci,CSE,Log(Graph): A Near-Optimal High-Performance Graph Representation,https://people.csail.mit.edu/jshun/papers/loggraph.pdf
552,Lobsters,compsci,CSE,Build Systems à la Carte,https://www.youtube.com/watch?v=BQVT6wiwCxM
553,Lobsters,compsci,CSE,Kinda okay generated text,https://blog.ftql.pw/posts/random-text/
554,Lobsters,compsci,CSE,CS 673 — Computational Creativity,http://axon.cs.byu.edu/Dan/673/
555,Lobsters,compsci,CSE,Programming-by-Example for Audio: Synthesizing Digital Signal Processing Programs,http://marksantolucito.com/dsp-pbe.pdf
556,Lobsters,compsci,CSE,Optimizing MiniZinc,https://www.hillelwayne.com/post/minizinc-2/
557,Lobsters,compsci,CSE,"Solvers, Synthesis, and Learning",https://cs.nyu.edu/~barrett/summerschool/seshia.pdf
558,Lobsters,compsci,CSE,An Introduction to Probabilistic Programming,https://arxiv.org/abs/1809.10756
559,Lobsters,compsci,CSE,Nand to CPU,https://blog.asrpo.com/nand2cpu
560,Lobsters,compsci,CSE,Pharo: A roadmap to solid evolution,https://www.slideshare.net/EstebanLM/pharo-a-roadmap-to-solid-evolution
561,Lobsters,compsci,CSE,"Diagramming datastructures, packet and on disk formats?",/s/2qcryb/diagramming_datastructures_packet_on
562,Lobsters,compsci,CSE,Foundations of Dataflow Analysis,https://chinmaydd.in/2018/09/22/FoundationsDFlow
563,Lobsters,compsci,CSE,Turing Machines (Stanford Encyclopedia of Philosophy),https://plato.stanford.edu/entries/turing-machine/
564,Lobsters,compsci,CSE,Constraint Solving with Minizinc,https://www.hillelwayne.com/post/minizinc/
565,Lobsters,compsci,CSE,You and Your Research (1986),https://jamesclear.com/great-speeches/you-and-your-research-by-richard-hamming
566,Lobsters,compsci,CSE,Performing Efficient Broad Crawls with the AOPIC Algorithm,https://intoli.com/blog/aopic-algorithm/
567,Lobsters,compsci,CSE,Whatever Happened to the Semantic Web?,https://twobithistory.org/2018/05/27/semantic-web.html
568,Lobsters,compsci,CSE,How libcorrect Implements Forward Error Correction,https://quiet.github.io/quiet-blog/2018/09/16/How-Libcorrect-Does-Forward-Error-Correction.html
569,Lobsters,compsci,CSE,"Functional Reactive Approach to Developing Small-Scale, Embedded Systems",http://www.psg.c.titech.ac.jp/frp_embedded.html
570,Lobsters,compsci,CSE,Moment-based quantile sketches for efficient aggregation,https://dawn.cs.stanford.edu/2018/08/29/moments/
571,Lobsters,compsci,CSE,Of Program Analysis and more,https://chinmaydd.in/2018/09/05/ProgramAnalysis
572,Lobsters,compsci,CSE,Functional Languages for Real-Time Control,https://www.cs.cmu.edu/~rbd/bib-arctic.html
573,Lobsters,compsci,CSE,Papers with Code,https://github.com/zziz/pwc
574,Lobsters,compsci,CSE,Yesterday's Computer of Tomorrow: The Xerox Alto (2017),https://www.youtube.com/watch?v=4m_GhapEBLQ
575,Lobsters,compsci,CSE,A celebration of code – 6 pieces of code that had an impact,https://www.reaktor.com/celebrationofcode/
576,Lobsters,compsci,CSE,"How to Match ""A B C"" where A+B=C with Regex",http://www.drregex.com/2018/09/a-regex-i-submitted-to-reddit-climbed.html
577,Lobsters,compsci,CSE,"A Brief, Animated Introduction to Programming with Python",https://ourcodestories.com/markm208/Playlist/16
578,Lobsters,compsci,CSE,pegdebug - visual and interactive debugging of peg parsing,https://mqnc.github.io/pegdebug/example/output.html
579,Lobsters,compsci,CSE,An optimal solution to the Towers of Hanoi Puzzle,https://web.archive.org/web/20040605074124/http://yupana.autonoma.edu.co/publicaciones/yupana/003/hanoi/hanoi_eng.html
580,Lobsters,compsci,CSE,Finishing leftover tasks from Google Summer of Code,https://blog.netbsd.org/tnf/entry/finishing_leftover_tasks_from_google
581,Lobsters,compsci,CSE,"50 times faster data loading for Pandas: no problem, using C++",https://blog.esciencecenter.nl/irregular-data-in-pandas-using-c-88ce311cb9ef
582,Lobsters,compsci,CSE,A Little Taste of Dependent Types (David Thrane Christiansen),https://www.youtube.com/watch?v=1BWYy2-WM-o
583,Lobsters,compsci,CSE,The Multi-Armed Bandit Problem and Its Solutions,https://lilianweng.github.io/lil-log/2018/01/23/the-multi-armed-bandit-problem-and-its-solutions.html
584,Lobsters,compsci,CSE,Fully Countering Trusting Trust through Diverse Double-Compiling [2009],https://www.dwheeler.com/trusting-trust/dissertation/html/wheeler-trusting-trust-ddc.html
585,Lobsters,compsci,CSE,Ideal Hash Trees (2001),https://infoscience.epfl.ch/record/64398/files/idealhashtrees.pdf
586,Lobsters,compsci,CSE,The Early History Of Smalltalk,http://worrydream.com/EarlyHistoryOfSmalltalk/
587,Lobsters,compsci,CSE,Production Ready Microservices at Scale in Ruby,https://www.youtube.com/watch?v=SJpKo2hz6ws
588,Lobsters,compsci,CSE,The Emperor's Old Clothes,http://delivery.acm.org/10.1145/360000/358561/p75-hoare.pdf
589,Lobsters,compsci,CSE,The Abstract Calculus,https://medium.com/@maiavictor/the-abstract-calculus-fe8c46bcf39c
590,Lobsters,compsci,CSE,The Evolutionary Origins of Hierarchy (2016),http://journals.plos.org/ploscompbiol/article?id=10.1371/journal.pcbi.1004829
591,Lobsters,compsci,CSE,Federated Learning,https://florian.github.io/federated-learning/
592,Lobsters,compsci,CSE,William Byrd on The Most Beautiful Program Ever Written,https://paperswelove.org/2017/video/will-byrd-most-beautiful-program/
593,Lobsters,compsci,CSE,CrowdTruth 2.0: Quality Metrics for Crowdsourcing with Disagreement,https://arxiv.org/abs/1808.06080
594,Lobsters,compsci,CSE,Collapsing Towers of Interpreters,/s/yj31ty/collapsing_towers_interpreters
595,Lobsters,compsci,CSE,Comprehensive Threadripper tests - memory vs cpu freq at capped power,http://lists.dragonflybsd.org/pipermail/users/2018-August/357856.html
596,Lobsters,compsci,CSE,What Did Ada Lovelace's Program Actually Do?,https://twobithistory.org/2018/08/18/ada-lovelace-note-g.html
597,Lobsters,compsci,CSE,Universal Method for Approximate Nearest-Neighbor Search Found,https://www.quantamagazine.org/universal-method-to-sort-complex-information-found-20180813/
598,Lobsters,compsci,CSE,"Kitsune: Efficient, General-Purpose Framework for Dynamic, Software Updating in C",http://kitsune-dsu.com
599,Lobsters,compsci,CSE,A Very Small SAT Solver,http://www.cse.chalmers.se/~algehed/blogpostsHTML/SAT.html
600,Lobsters,compsci,CSE,"Modern SAT solvers: fast, neat and underused (part 2 of N)",http://codingnest.com/modern-sat-solvers-fast-neat-and-underused-part-2-of-n/
601,Lobsters,compsci,CSE,Luna v1.4 released — a programming language with dual (textual/visual) representation,https://luna-lang.org
602,Lobsters,compsci,CSE,Those Memex Dreams Again,http://natecull.org/wordpress/2017/06/26/dataspace-0/
603,Lobsters,compsci,CSE,"GSoC 2018 Reports: Integrate libFuzzer with the Basesystem, Part 3",https://blog.netbsd.org/tnf/entry/gsoc_2018_reports_integrate_libfuzzer2
604,Lobsters,compsci,CSE,Dijkstra's in Disguise,https://blog.evjang.com/2018/08/dijkstras.html
605,Lobsters,compsci,CSE,Functional Bits: Lambda Calculus based Algorithmic Information Theory,https://tromp.github.io/cl/LC.pdf
606,Lobsters,compsci,CSE,Bounding data races in space and time – part I,https://blog.acolyer.org/2018/08/09/bounding-data-races-in-space-and-time-part-i/
607,Lobsters,compsci,CSE,Eller's Algorithm,http://www.neocomputer.org/projects/eller.html
608,Lobsters,compsci,CSE,GLB: GitHub’s open source load balancer,https://githubengineering.com/glb-director-open-source-load-balancer/
609,Lobsters,compsci,CSE,Herbie: Automatically Improving Floating Point Accuracy,https://herbie.uwplse.org/
610,Lobsters,compsci,CSE,Tries as the evolution of nothing,http://wordsandbuttons.online/tries_as_the_evolution_of_nothing.html
611,Lobsters,compsci,CSE,Introduction to µUBSan - a clean-room reimplementation of the Undefined Behavior Sanitizer runtime,https://blog.netbsd.org/tnf/entry/introduction_to_%C2%B5ubsan_a_clean
612,Lobsters,compsci,CSE,Data Structures for Text Sequences (1998),https://www.cs.unm.edu/~crowley/papers/sds.pdf
613,Lobsters,compsci,CSE,Floating (point) butterfly effect: Searching for tiny bugs that cause big problems,https://blog.esciencecenter.nl/floating-point-butterfly-effect-62ebe004200f
614,Lobsters,compsci,CSE,A Survey of Programming Languages and Platforms for Multi-Agent Systems (2006),https://vsis-www.informatik.uni-hamburg.de/getDoc.php/publications/259/bordini_informatica_final.pdf
615,Lobsters,compsci,CSE,"Modern SAT solvers: fast, neat and underused (part 1 of N)",http://codingnest.com/modern-sat-solvers-fast-neat-underused-part-1-of-n/
616,Lobsters,compsci,CSE,"Survey of Contemporary, Real-Time, Operating Systems (2004)",http://www.eng.auburn.edu/~baskiyar/MyArticles/Survey-of-RTOS-Informatica.pdf
617,Lobsters,compsci,CSE,"A Typed, Algebraic Approach to Parsing",http://semantic-domain.blogspot.com/2018/07/a-typed-algebraic-approach-to-parsing.html
618,Lobsters,compsci,CSE,A Practical Theory Of Programming,http://www.cs.toronto.edu/~hehner/aPToP/aPToP.pdf
619,Lobsters,compsci,CSE,Prospecting for Hash Functions,https://nullprogram.com/blog/2018/07/31/
620,Lobsters,compsci,CSE,Teenager Finds Classical Alternative to Quantum Recommendation Algorithm,https://www.quantamagazine.org/teenager-finds-classical-alternative-to-quantum-recommendation-algorithm-20180731/
621,Lobsters,compsci,CSE,Evolving Floorplans,http://www.joelsimon.net/evo_floorplans.html
622,Lobsters,compsci,CSE,"Given Enough Eyeballs, All Bugs Are Shallow? Revisiting Eric Raymond with Bug Bounty Programs",https://weis2016.econinfosec.org/wp-content/uploads/sites/2/2015/08/WEIS_2016_paper_76.pdf
623,Lobsters,compsci,CSE,[1807.08248] Subset Sum Made Simple,https://arxiv.org/abs/1807.08248
624,Lobsters,compsci,CSE,Efficiently Generating a Number in a Range,http://www.pcg-random.org/posts/bounded-rands.html
625,Lobsters,compsci,CSE,A Short Guide to Hard Problems,https://www.quantamagazine.org/a-short-guide-to-hard-problems-20180716/
626,Lobsters,compsci,CSE,When your data model means something else,http://www.pathsensitive.com/2018/07/when-your-data-model-means-something.html
627,Lobsters,compsci,CSE,Base Date? 17-Nov-1858? Julian Calendar? (1999),http://h41379.www4.hpe.com/wizard/wiz_2315.html
628,Lobsters,compsci,CSE,The Remote Monad,http://www.ittc.ku.edu/research/thesis/documents/justin_dawson_thesis.pdf
629,Lobsters,compsci,CSE,Blockchain for the Internet of Things: a Systematic Literature Review (2016),https://nexa.polito.it/nexacenterfiles/Blockchain%20for%20the%20Internet%20of%20Things%3A%20a%20Systematic%20Literature%20Review.pdf
630,Lobsters,compsci,CSE,Getting to Go,https://blog.golang.org/ismmkeynote
631,Lobsters,compsci,CSE,Accidentally Quadratic! mercurial changegroup application,https://accidentallyquadratic.tumblr.com/post/161243900944/mercurial-changegroup-application
632,Lobsters,compsci,CSE,Spiffy: Enabling File-System Aware Storage Applications,https://www.usenix.org/system/files/conference/fast18/fast18-sun.pdf
633,Lobsters,compsci,CSE,Optimisation Techniques,https://www.computist.xyz/2018/07/optimisation-techniques.html
634,Lobsters,compsci,CSE,Deriving the Y Combinator in JavaScript,https://enlight.nyc/y-combinator/
635,Lobsters,compsci,CSE,Escaped Text,https://rain-1.github.io/escaping.html
636,Lobsters,compsci,CSE,Inside ASCII (1978),https://trnsz.com/~jhj/misc/Inside_ASCII.pdf
637,Lobsters,compsci,CSE,“Breakthrough” algorithm exponentially faster than any previous one,https://www.seas.harvard.edu/content/breakthrough-algorithm-exponentially-faster-than-any-previous-one
638,Lobsters,compsci,CSE,"Functors, Applicatives, And Monads In Pictures","https://github.com/dbrattli/OSlash/wiki/Functors,-Applicatives,-And-Monads-In-Pictures"
639,Lobsters,compsci,CSE,Monads Made Simple,https://mpc.sh/blog/monads-made-simple/
640,Lobsters,compsci,CSE,The Federalist Papers: Author Identification Through K-Means Clustering,https://blog.jonlu.ca/posts/the-federalist-papers-author-identification-through-k-means-clustering
641,Lobsters,compsci,CSE,Looking at TDD: An Academic Survey,https://www.tedmyoung.com/looking-at-tdd-an-academic-survey/
642,Lobsters,compsci,CSE,"Lossy text compression, for some reason?! (2016)",https://www.youtube.com/watch?v=meovx9OqWJc
643,Lobsters,compsci,CSE,Bartosz Milewski's 'Category Theory for Programmers' compiled in EPUB,https://github.com/onlurking/category-theory-for-programmers
644,Lobsters,compsci,CSE,"If You’re Not Writing a Program, Don't Use a Programming Language",http://muratbuffalo.blogspot.com/2018/07/if-youre-not-writing-program-dont-use.html
645,Lobsters,compsci,CSE,Short introduction to programming in Self,https://www.youtube.com/watch?v=sgrlpUtrIR4
646,Lobsters,compsci,CSE,MKSANITIZER - bug detector software integration with the NetBSD userland,https://blog.netbsd.org/tnf/entry/mksanitizer_bug_detector_software_integration
647,Lobsters,compsci,CSE,Quantum Computing Expert Explains One Concept in 5 Levels of Difficulty,https://www.youtube.com/watch?v=OWJCfOvochA
648,Lobsters,compsci,CSE,Have you ever needed to generate a random number in code?,https://threadreaderapp.com/thread/1012719876706840578.html
649,Lobsters,compsci,CSE,A Personal History of Modeless Text Editing and Cut/Copy-Paste (2012),http://worrydream.com/refs/Tesler%20-%20A%20Personal%20History%20of%20Modeless%20Text%20Editing%20and%20Cut-Copy-Paste.pdf
650,Lobsters,compsci,CSE,High-Coverage Hint Generation for Massive Courses,https://people.eecs.berkeley.edu/%7Emangpo/www/papers/61a_hint_Iticse2017.pdf
651,Lobsters,compsci,CSE,The Arcane Algorithm Archive,https://www.algorithm-archive.org/
652,Lobsters,compsci,CSE,Georgia Tech's Online MOOC-based Master Program (Open edX Keynote),https://www.youtube.com/watch?v=-ETTblOvH6w
653,Lobsters,compsci,CSE,World's first commercial 5G network launches,https://www.techradar.com/news/worlds-first-5g-network-launches
654,Lobsters,compsci,CSE,Deep code search,https://blog.acolyer.org/2018/06/26/deep-code-search/
655,Lobsters,compsci,CSE,Codec2: a whole Podcast on a Floppy Disk,https://auphonic.com/blog/2018/06/01/codec2-podcast-on-floppy-disk/
656,Lobsters,compsci,CSE,Why teach kids to program? (2017),https://arp242.net/weblog/kids-programming.html
657,Lobsters,compsci,CSE,BQP is not contained PH,https://www.quantamagazine.org/finally-a-problem-that-only-quantum-computers-will-ever-be-able-to-solve-20180621/
658,Lobsters,compsci,CSE,All* perfect pangrams of English,https://medium.com/@FallingForFallacies/all-perfect-pangrams-of-english-8c8d0f621bee
659,Lobsters,compsci,CSE,Synthesizing Data Structure Transformations from Input-Output Examples,https://www.cs.rice.edu/~sc40/pubs/pldi15.pdf
660,Lobsters,compsci,CSE,Fibonacci Hashing: The Optimization that the World Forgot (or: a Better Alternative to Integer Modulo),https://probablydance.com/2018/06/16/fibonacci-hashing-the-optimization-that-the-world-forgot-or-a-better-alternative-to-integer-modulo/
661,Lobsters,compsci,CSE,List of Applications of Set Theory in Computer Science,https://www.quora.com/What-are-the-applications-of-set-theory-in-computer-science
662,Lobsters,compsci,CSE,"GSoC 2018 Reports: Kernel Undefined Behavior Sanitizer, Part 1",https://blog.netbsd.org/tnf/entry/gsoc_2018_reports_kernel_undefined
663,Lobsters,compsci,CSE,What UNIX shell could have been,https://rain-1.github.io/shell-2.html
664,Lobsters,compsci,CSE,"GSoC 2018 Reports: Integrate libFuzzer with the Basesystem, Part 1",https://blog.netbsd.org/tnf/entry/gsoc_2018_reports_integrate_libfuzzer
665,Lobsters,compsci,CSE,"GSoC 2018 Reports: Kernel Address Sanitizer, Part 1",http://blog.netbsd.org/tnf/entry/gsoc_2018_reports_kernel_address
666,Lobsters,compsci,CSE,Sudoku and Backtracking,https://hackernoon.com/sudoku-and-backtracking-6613d33229af
667,Lobsters,compsci,CSE,LAMBDAFICTATOR: From Imperative to Functional Programming via Automated Refactoring (2013),http://dig.cs.illinois.edu/papers/icse13tool-LambdaFicator.pdf
668,Lobsters,compsci,CSE,Introduction to fountain codes: LT Codes with Python,https://franpapers.com/en/algorithmic/2018-introduction-to-fountain-codes-lt-codes-with-python/
669,Lobsters,compsci,CSE,A Gentle Intro to PLT (Programming Language Theory),https://mpc.sh/blog/a-gentle-intro-to-plt/
670,Lobsters,compsci,CSE,Program to generate regexes that match numbers divisible by N,https://github.com/tchajed/div-regex
671,Lobsters,compsci,CSE,The Land Before Binary,https://medium.com/@bellmar/the-land-before-binary-cc705d5bdd70
672,Lobsters,compsci,CSE,SpaceSearch: A Library for Building and Verifying Solver-Aided Tools (2017),https://stefanheule.com/papers/icfp17-spacesearch.pdf
673,Lobsters,compsci,CSE,Graph Theory Crash Course,https://aaronlelevier.github.io/graph-theory-crash-course/
674,Lobsters,compsci,CSE,Coverage of signal routines in the kernel in the context of ptrace(2),https://blog.netbsd.org/tnf/entry/coverage_of_signal_routines_in
675,Lobsters,compsci,CSE,How to add numbers (part 2),https://robey.lag.net/2012/11/14/how-to-add-numbers-2.html
676,Lobsters,compsci,CSE,Learning Topic Models Provably and Efficiently,https://cacm.acm.org/magazines/2018/4/226373-learning-topic-models-provably-and-efficiently/fulltext
677,Lobsters,compsci,CSE,The Philosophy of Computational Complexity,https://ristret.com/s/qk8wpt/philosophy_computational_complexity
678,Lobsters,compsci,CSE,Analysis of Selected Aspects of GRAD (1974),http://www.jfsowa.com/computer/memo125.htm 
679,Lobsters,compsci,CSE,A new fast hash table in response to Google’s new fast hash table,https://probablydance.com/2018/05/28/a-new-fast-hash-table-in-response-to-googles-new-fast-hash-table/
680,Lobsters,compsci,CSE,How to add numbers (part 1),https://robey.lag.net/2012/11/07/how-to-add-numbers-1.html
681,Lobsters,compsci,CSE,"Failure Modes, dep author's view of vgo",https://sdboyer.io/vgo/failure-modes/
682,Lobsters,compsci,CSE,Type Safety in Three Easy Lemmas (2013),http://siek.blogspot.com/2013/05/type-safety-in-three-easy-lemmas.html
683,Lobsters,compsci,CSE,Optimally Robust Private Information Retrieval,https://cypherpunks.ca/~iang/pubs/orpir-usenix.pdf
684,Lobsters,compsci,CSE,Succinct Trees in Practice (2010),https://www.dcc.uchile.cl/~gnavarro/ps/alenex10.pdf
685,Lobsters,compsci,CSE,Algorithms Behind Modern Storage Systems,https://queue.acm.org/detail.cfm?id=3220266
686,Lobsters,compsci,CSE,Quantum Computing for Computer Scientists,https://www.youtube.com/watch?v=F_Riqjdh2oM
687,Lobsters,compsci,CSE,Out of the Tar Pit,http://curtclifton.net/papers/MoseleyMarks06a.pdf
688,Lobsters,compsci,CSE,An O(N) Sorting Algorithm: Machine Learning Sorting,https://arxiv.org/abs/1805.04272
689,Lobsters,compsci,CSE,"Introducing scdoc, a man page generator",http://sircmpwn.github.io/2018/05/13/scdoc.html
690,Lobsters,compsci,CSE,Common Knowledge Revisited (1995),https://www.cs.cornell.edu/home/halpern/papers/ck_revisited.pdf
691,Lobsters,compsci,CSE,The circuit less traveled,https://fosdem.org/2018/schedule/event/alternative_histories/
692,Lobsters,compsci,CSE,Refal: Programming with Pattern Matching and Term Rewriting (1968),https://en.wikipedia.org/wiki/Refal
693,Lobsters,compsci,CSE,Yad Studio: Markov Algorithms IDE and Interpreter,https://yad-studio.github.io
694,Lobsters,compsci,CSE,Ask: Algorithmic complexity in documentation,/s/sfenha/ask_algorithmic_complexity
695,Lobsters,compsci,CSE,Forking fixes in the context of debuggers,https://blog.netbsd.org/tnf/entry/forking_fixes_in_the_context
696,Lobsters,compsci,CSE,Announcing Google Summer of Code 2018 projects,https://blog.netbsd.org/tnf/entry/announcing_google_summer_of_code
697,Lobsters,compsci,CSE,Simulation of Biology,https://www.cc.gatech.edu/~turk/bio_sim/
698,Lobsters,compsci,CSE,Lessons from Building Static Analysis Tools at Google,https://cacm.acm.org/magazines/2018/4/226371-lessons-from-building-static-analysis-tools-at-google/fulltext
699,Lobsters,compsci,CSE,When do changes induce fixes? (On Fridays.) (2005),https://www.st.cs.uni-saarland.de/papers/msr2005/msr2005.pdf
700,Lobsters,compsci,CSE,Call for Papers | EuroBSDcon 2018,https://2018.eurobsdcon.org/call-for-papers/
701,Lobsters,compsci,CSE,ForwardCom: Forward compatible computer system,http://www.forwardcom.info/
702,Lobsters,compsci,CSE,Can Logic Programming Execute as Fast as Imperative Programming? (1990),http://www2.eecs.berkeley.edu/Pubs/TechRpts/1990/CSD-90-600.pdf
703,Lobsters,compsci,CSE,Compatible Time-Sharing System (1961-1973) Fiftieth Anniversary Commemorative Overview [2011-2012],http://multicians.org/thvv/compatible-time-sharing-system.pdf
704,Lobsters,compsci,CSE,A Tale of Two Fibonacci Lambda Functions,https://www.reddit.com/r/serverless/
705,Lobsters,compsci,CSE,Help needed: Static typing and algebra,/s/gjodxi/help_needed_static_typing_algebra
706,Lobsters,compsci,CSE,Papers from the Lost Culture of Array Languages,http://prog21.dadgum.com/114.html
707,Lobsters,compsci,CSE,MirBSD Korn Shell on Jehanne,http://www.mirbsd.org/permalinks/wlog-10_e20180415-tg.htm
708,Lobsters,compsci,CSE,Software Testing as Species Discovery (statistical properties of fuzzing campaigns),https://arxiv.org/abs/1803.02130
709,Lobsters,compsci,CSE,Automatic Protoboard Layout from Circuit Schematics (2013),https://dspace.mit.edu/bitstream/handle/1721.1/91847/894250012-MIT.pdf?sequence=2
710,Lobsters,compsci,CSE,"Fantas, Eel, and Specification (Fantasy Land Javascript)",http://www.tomharding.me/fantasy-land/
711,Lobsters,compsci,CSE,(Some of) my problems with correctness research,https://www.drmaciver.com/2018/04/some-of-my-problems-with-correctness-research/
712,Lobsters,compsci,CSE,Formal Specification and Verification of Interactive Systems with Plasticity for Nuclear Plants,https://tel.archives-ouvertes.fr/tel-01253619/document
713,Lobsters,compsci,CSE,Type-and-Example-Directed Program Synthesis (2015),http://www.cis.upenn.edu/~stevez/papers/OZ15.pdf
714,Lobsters,compsci,CSE,Consensus Protocols: Path to Atomic Broadcast,https://medium.com/@ifesdjeen/on-ways-to-agree-part-2-path-to-atomic-broadcast-662cc86a4e5f
715,Lobsters,compsci,CSE,Fuchsia is not Linux,https://fuchsia.googlesource.com/docs/+/master/the-book/
716,Lobsters,compsci,CSE,Making real-time collaboration over CloudKit and P2P networks possible using CRDTs and Swift.,https://github.com/archagon/crdt-playground
717,Lobsters,compsci,CSE,Function pipeline monoid,https://typeclasses.com/news/2018-04-a-monoid-is
718,Lobsters,compsci,CSE,Next generation video: Introducing AV1,https://people.xiph.org/~xiphmont/demo/av1/demo1.shtml
719,Lobsters,compsci,CSE,A catamorphic lambda-calculus interpreter,https://www.michaelpj.com/blog/2018/04/08/catamorphic-lc-interpreter.html
720,Lobsters,compsci,CSE,Some Minesweeper Conﬁgurations,http://web.mat.bham.ac.uk/R.W.Kaye/minesw/minesw.pdf
721,Lobsters,compsci,CSE,PubGrub: Next-Generation Version Solving,https://medium.com/@nex3/pubgrub-2fb6470504f
722,Lobsters,compsci,CSE,Programming with a Differentiable Forth Interpreter (2017),https://arxiv.org/pdf/1605.06640.pdf
723,Lobsters,compsci,CSE,Linux kernel memory-model (documentation & tooling),https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=1c27b644c0fdbc61e113b8faee14baeb8df32486
724,Lobsters,compsci,CSE,Ethereum's Compact Merkle Trie (Part I),https://nervous.io/clojure/crypto/2018/04/04/clojure-evm-iii/
725,Lobsters,compsci,CSE,Decentralizing Public Key Infrastructures with ClaimChains,https://arxiv.org/pdf/1707.06279.pdf
726,Lobsters,compsci,CSE,Computational Microscope,https://www.scientificcomputing.com/news/2018/04/team-uses-blue-waters-supercomputer-bring-subatomic-resolution-computational-microscope
727,Lobsters,compsci,CSE,Variability and Reproducibility in Software Engineering: Study of Companies that Built Same System,https://www.gwern.net/docs/statistics/bias/2009-anda.pdf
728,Lobsters,compsci,CSE,Awesome List of Distributed System Resources,https://github.com/rShetty/awesome-distributed-systems
729,Lobsters,compsci,CSE,Data Laced with History: Causal Trees & Operational CRDTs,http://archagon.net/blog/2018/03/24/data-laced-with-history/
730,Lobsters,compsci,CSE,The differences between tinkering and research (2016),http://togelius.blogspot.com/2016/04/the-differences-between-tinkering-and.html
731,Lobsters,compsci,CSE,Using Models at Runtime to Address Assurance for Self-Adaptive Systems (2014),https://arxiv.org/pdf/1505.00903.pdf
732,Lobsters,compsci,CSE,a lambda calculus for quantum computation,http://www.het.brown.edu/people/andre/qlambda/index.html
733,Lobsters,compsci,CSE,Rethinking Software Design,https://www.youtube.com/watch?v=blLhklI625s
734,Lobsters,compsci,CSE,How sorted array process faster than Unsorted array? (in short Branch Prediction),https://medium.com/@_neerajpal/how-sorted-array-process-faster-than-unsorted-array-in-short-branch-prediction-772c96e147b2
735,Lobsters,compsci,CSE,"On Ways To Agree: Links, Generals and Impossibility Problem",https://medium.com/@ifesdjeen/on-ways-to-agree-part-1-links-and-flp-impossibility-f6bd8a6a0980
736,Lobsters,compsci,CSE,Computer Science in Every High School,https://www.tealsk12.org/
737,Lobsters,compsci,CSE,Katahdin - a programming language where the syntax and semantics are mutable at runtime,http://chrisseaton.com/katahdin/
738,Lobsters,compsci,CSE,Synthesis-Based Loose Programming (2010),https://pdfs.semanticscholar.org/d272/645780501ccb188a9bb8b6814bf49cfe871c.pdf
739,Lobsters,compsci,CSE,It certainly looks bad for Uber,http://ideas.4brad.com/it-certainly-looks-bad-uber
740,Lobsters,compsci,CSE,Alan Kay's answer to Why is functional programming seen as the opposite of OOP,https://www.quora.com/Why-is-functional-programming-seen-as-the-opposite-of-OOP-rather-than-an-addition-to-it
741,Lobsters,compsci,CSE,Why we still can’t stop plagiarism in undergraduate computer science,https://kevinchen.co/blog/cant-stop-plagiarism-in-computer-science/
742,Lobsters,compsci,CSE,John Hennessy and David Patterson will receive the 2017 ACM A.M. Turing Award,https://www.acm.org/media-center/2018/march/turing-award-2017
743,Lobsters,compsci,CSE,[1803.06617] Towards an Area-Efficient Implementation of a High ILP EDGE Soft Processor,https://arxiv.org/abs/1803.06617
744,Lobsters,compsci,CSE,Persistence for the Masses: RRB-Vectors in a Systems Language (2017),https://public.sinusoid.es/misc/immer/immer-icfp17.pdf
745,Lobsters,compsci,CSE,Automatic Synthesis of Distributed Protocols (2017),https://www.cis.upenn.edu/~alur/Sigact17.pdf
746,Lobsters,compsci,CSE,Software Foundations - Vol 1-3,https://softwarefoundations.cis.upenn.edu/current/index.html
747,Lobsters,compsci,CSE,Ask L: Visualising the entire stack of abstractions from transistor to user,/s/sulia9/ask_l_visualising_entire_stack
748,Lobsters,compsci,CSE,Microkernels - The component-based operating systems,http://www.microkernel.info/
749,Lobsters,compsci,CSE,Various Models of Execution for Futures and Promises,http://dist-prog-book.com/chapter/2/futures.html
750,Lobsters,compsci,CSE,Attacking Merkle Trees with a Second Preimage Attack,https://flawed.net.nz/2018/02/21/attacking-merkle-trees-with-a-second-preimage-attack/
751,Lobsters,compsci,CSE,Beginning Functional Programming,https://www.grokacademy.com/lessons/beginning-functional-programming/
752,Lobsters,compsci,CSE,Message Passing and the Actor Model,http://dist-prog-book.com/chapter/3/message-passing.html
753,Lobsters,compsci,CSE,Finding the longest palindromic substring,https://interviewcache.com/blog/longest-palindromic-substring/
754,Lobsters,compsci,CSE,Explained Simply: How an AI program mastered the ancient game of Go,https://medium.com/@mngrwl/explained-simply-how-an-ai-program-mastered-the-ancient-game-of-go-62b8940a9080
755,Lobsters,compsci,CSE,Elementary Knightship Found,http://www.conwaylife.com/forums/viewtopic.php?t=3303
756,Lobsters,compsci,CSE,A Framework for Extending microKanren with Constraints (2016),https://arxiv.org/pdf/1701.00633.pdf
757,Lobsters,compsci,CSE,Lobste.rs access pattern statistics for research purposes,/s/cqnzl5/lobste_rs_access_pattern_statistics_for
758,Lobsters,compsci,CSE,Yet another definition of Intelligence,https://medium.com/@giacomo_59737/yet-another-definition-of-intelligence-9bbaaa73086d
759,Lobsters,compsci,CSE,"A Preview of Bristlecone, Google’s New Quantum Processor",https://research.googleblog.com/2018/03/a-preview-of-bristlecone-googles-new.html
760,Lobsters,compsci,CSE,LLDB restoration and return to ptrace(2),https://blog.netbsd.org/tnf/entry/lldb_restoration_and_return_to
761,Lobsters,compsci,CSE,Constructing human-grade parsers,http://duriansoftware.com/joe/Constructing-human-grade-parsers.html
762,Lobsters,compsci,CSE,J Software releases many APL/mathematical works under Creative Commons license,http://code.jsoftware.com/wiki/Community/Creative_Commons
763,Lobsters,compsci,CSE,An Efficient Snell's-Law Method for Optimal-Path Planning AcrossMultiple Two-dimensional Irregular Homogeneous-Cost Regions,http://faculty.nps.edu/ncrowe/snell2.htm
764,Lobsters,compsci,CSE,Computing With Random Pulses Promises to Simplify Circuitry and Save Power,https://spectrum.ieee.org/computing/hardware/computing-with-random-pulses-promises-to-simplify-circuitry-and-save-power
765,Lobsters,compsci,CSE,The threats to Artificial Intelligence,http://shamar.github.io/documents/2018_Milano_The-Delusions-of-Neural-Networks.pdf
766,Lobsters,compsci,CSE,Mathematics and Computation,https://www.math.ias.edu/avi/book
767,Lobsters,compsci,CSE,Understanding Dijkstra's Algorithm,https://aos.github.io/2018/02/24/understanding-dijkstras-algorithm/
768,Lobsters,compsci,CSE,"Wizards and warriors, part one",https://ericlippert.com/2015/04/27/wizards-and-warriors-part-one/
769,Lobsters,compsci,CSE,A Systematic Study of Automated Program Repair: Fixing 55 out of 105 Bugs for $8 Each (2012),https://web.eecs.umich.edu/~weimerw/p/weimer-icse2012-genprog-preprint.pdf
770,Lobsters,compsci,CSE,The Basic Toolbox,https://blog.regehr.org/archives/1578
771,Lobsters,compsci,CSE,A vendor neutral open approach to decoupled data synchronization,https://blog.ably.io/a-vendor-neutral-open-approach-to-decoupled-data-synchronization-26d8914cb28b
772,Lobsters,compsci,CSE,Scalable Bloom Filters,http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.62.7953&rep=rep1&type=pdf
773,Lobsters,compsci,CSE,I don’t understand Graph Theory.,https://medium.com/@vardanator/i-dont-understand-graph-theory-1c96572a1401
774,Lobsters,compsci,CSE,Gradual Typing,https://golem.ph.utexas.edu/category/2018/02/gradual_typing.html
775,Lobsters,compsci,CSE,Determining Cat Chirality,http://blog.dimview.org/math/2017/07/28/cat-chirality.html
776,Lobsters,compsci,CSE,IDEA - nonverbal algorithm assembly instructions,https://idea-instructions.com/
777,Lobsters,compsci,CSE,"""Pure Functional Programming in Excel"" by Felienne Hermans (2016)",https://www.youtube.com/watch?v=0yKf8TrLUOw
778,Lobsters,compsci,CSE,bhgv/Inferno-OS_Android - an Android port of Inferno OS,https://github.com/bhgv/Inferno-OS_Android
779,Lobsters,compsci,CSE,On the P vs NP question: a proof of inequality,https://arxiv.org/abs/1802.05484
780,Lobsters,compsci,CSE,The P-versus-NP page,http://www.win.tue.nl/~gwoegi/P-versus-NP.htm
781,Lobsters,compsci,CSE,Synthesis - An Efficient Implementation of Fundamental Operating System Services (1992),https://pdfs.semanticscholar.org/206a/4efe87abbea5f711a28397447b8ae2159d3b.pdf
782,Lobsters,compsci,CSE,To Dissect a Mockingbird: A Graphical Notation for the Lambda Calculus with Animated Reduction,http://dkeenan.com/Lambda/
783,Lobsters,compsci,CSE,Let’s Not Forget the ‘science’ in ‘computer Science’,https://cacm.acm.org/blogs/blog-cacm/225148-lets-not-forget-the-science-in-computer-science/fulltext
784,Lobsters,compsci,CSE,Rust's ownership model formally proven with Coq,https://dl.acm.org/citation.cfm?doid=3177123.3158154
785,Lobsters,compsci,CSE,"CCHR: The Fastest CHR Implementation, in C (2007)",https://lirias.kuleuven.be/bitstream/123456789/146633/1/cchr
786,Lobsters,compsci,CSE,POPL 2018 Tutorial (Computational Type Theory),https://existentialtype.wordpress.com/2018/01/15/popl-2018-tutorial/
787,Lobsters,compsci,CSE,A practitioner’s guide to reading programming languages papers,https://blog.acolyer.org/2018/01/26/a-practitioners-guide-to-reading-programming-languages-papers/
788,Lobsters,compsci,CSE,Alan Turing’s Manual for the Ferranti Mk. I,http://www.panix.com/~rst/turing.pdf
789,Lobsters,compsci,CSE,Stratified Synthesis: Automatically Learning the x64 Instruction Set (2016),https://raw.githubusercontent.com/StanfordPL/stoke/develop/docs/papers/pldi16.pdf
790,Lobsters,compsci,CSE,Genetic Programming + Proof Search = Automatic Improvement (2015),https://link.springer.com/content/pdf/10.1007%2Fs10817-017-9409-5.pdf
791,Lobsters,compsci,CSE,"Natural Synthesis of Provably-Correct, Data-Structure Manipulations (2017)",https://engineering.purdue.edu/~xqiu/natural-synthesis.pdf
792,Lobsters,compsci,CSE,FlexSC: Flexible System Call Scheduling with Exception-Less System Calls (2010),https://www.usenix.org/legacy/events/osdi10/tech/full_papers/Soares.pdf
793,Lobsters,compsci,CSE,Hyperkernel: Push-Button Verification of an OS Kernel (2017),https://homes.cs.washington.edu/~helgi/papers/hyperkernel.pdf
794,Lobsters,compsci,CSE,Using Self-Organizing Maps to solve the Traveling Salesman Problem,https://diego.codes/post/som-tsp/
795,Lobsters,compsci,CSE,“Dancing Links” pre-fascicle 5c of Knuth's TAOCP,https://www-cs-faculty.stanford.edu/~knuth/fasc5c.ps.gz
796,Lobsters,compsci,CSE,The Natural Lambda,http://cbloomrants.blogspot.com/2018/01/the-natural-lambda.html
797,Lobsters,compsci,CSE,Bela: an embedded platform for audio and sensor processing,https://www.geeklan.co.uk/files/oshug63-bela.pdf
798,Lobsters,compsci,CSE,Constraint Handling Rules: What Else? (2015),http://www.informatik.uni-ulm.de/pm/fileadmin/pm/home/fruehwirth/drafts/CHR-ruleml-keynote-online-2015r.pdf
799,Lobsters,compsci,CSE,My Favorite Algorithm: Linear Time Median Finding,https://rcoh.me/posts/linear-time-median-finding/
800,Lobsters,compsci,CSE,Ridiculously fast base64 encoding and decoding,https://lemire.me/blog/2018/01/17/ridiculously-fast-base64-encoding-and-decoding/
801,Lobsters,compsci,CSE,Flux - Visualizing Haskell Programs as Data-Flow Diagrams (2016),https://www.uni-ulm.de/en/in/pm/research/projects/flux/
802,Lobsters,compsci,CSE,A Primer on Boolean Satisfiability,https://homes.cs.washington.edu/~emina/blog/2017-06-23-a-primer-on-sat.html
803,Lobsters,compsci,CSE,The Lambda and the Kappa Architectures,https://muratbuffalo.blogspot.com/2018/01/the-lambda-and-kappa-architectures.html
804,Lobsters,compsci,CSE,The Power of Two Random Choices: A Survey of Techniques and Results (2001),http://www.eecs.harvard.edu/~michaelm/postscripts/handbook2001.pdf
805,Lobsters,compsci,CSE,Parasitic Computing,https://pdfs.semanticscholar.org/24bd/35f377212dfb846afe6abfee0cc6bf14964f.pdf
806,Lobsters,compsci,CSE,Refinement Types in ML (1991),https://www.cs.cmu.edu/~fp/papers/pldi91.pdf
807,Lobsters,compsci,CSE,Verifying Bubble Sort in Whiley,http://whiley.org/2017/12/19/verifying-bubble-sort-in-whiley/
808,Lobsters,compsci,CSE,What the Four Color Theorem Can Teach Us About Writing Software,http://alexkudlick.com/blog/what-the-four-color-theorem-can-teach-us-about-writing-software/
809,Lobsters,compsci,CSE,"List of Ways to Find Information, Flow Violations in Hardware and Software (Jan2018)",https://pastebin.com/ajqxDJ3J
810,Lobsters,compsci,CSE,"Counterpoint: Intel Weaknesses Known in 1990's; Ignored by ""Security Professionals""",https://news.ycombinator.com/item?id=16092183
811,Lobsters,compsci,CSE,The Intel 80x86 Processor Architectures: Pitfalls for Secure Systems (1995),https://pdfs.semanticscholar.org/2209/42809262c17b6631c0f6536c91aaf7756857.pdf
812,Lobsters,compsci,CSE,"SafeFS: Secure, Modular, Customizable, Software-Defined Filesystem (2016)",https://github.com/safecloud-project/safefs
813,Lobsters,compsci,CSE,Jehanne in 2017,http://jehanne.io/2018/01/06/jehanne-in-2017.html
814,Lobsters,compsci,CSE,"Robust and Efficient Elimination of Cache and Timing, Side Channels (2015)",https://arxiv.org/pdf/1506.00189.pdf
815,Lobsters,compsci,CSE,Racket-on-Chez Status: January 2018,http://blog.racket-lang.org/2018/01/racket-on-chez-status.html
816,Lobsters,compsci,CSE,"prom: A Flexible, Prolog-based make tool (1991)",https://pdfs.semanticscholar.org/1769/1bb51fcb8acaecf4e05a2e53225cb58c69ed.pdf
817,Lobsters,compsci,CSE,"Security Testing of a Secure, Cache Design (2016)",http://palms.ee.princeton.edu/system/files/HASP_vfinal.pdf
818,Lobsters,compsci,CSE,Call for Papers: MoreVMs 2018,https://2018.programming-conference.org/track/MoreVMs-2018
819,Lobsters,compsci,CSE,"Formally-Verified Interpreter for a Shell-like, Programming Language (2017)",https://hal-univ-diderot.archives-ouvertes.fr/hal-01534747/document
820,Lobsters,compsci,CSE,How To Find Arbitrage Opportunities In Python,https://dailycodingproblem.com/blog/2018/01/02/find-an-arbitrage.html
821,Lobsters,compsci,CSE,Happy extra rare new year + solution to leap second problem,http://boxbase.org/entries/2018/jan/1/rare_new_year/
822,Lobsters,compsci,CSE,OSSU - Path to a free self-taught education in Computer Science,https://github.com/ossu/computer-science
823,Lobsters,compsci,CSE,What was the best CS paper you read in 2017?,/s/frsikr/what_was_best_cs_paper_you_read_2017
824,Lobsters,compsci,CSE,Operating System Design Book Series,http://www.fysnet.net/osdesign_book_series.htm
825,Lobsters,compsci,CSE,My Favorite Deep Learning Papers of 2017,http://cachestocaches.com/2017/12/favorite-deep-learning-2017/
826,Lobsters,compsci,CSE,My favorite papers of 2017,http://www.nicolabortignon.com/my-favorite-4-papers-of-2017/
827,Lobsters,compsci,CSE,"Weird machines, exploitability, and provable unexploitability",http://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8226852
828,Lobsters,compsci,CSE,"Twizzer: An Operating System for Next-Generation, Memory Hierarchies (2017)",https://www.ssrc.ucsc.edu/Papers/ssrctr-17-01.pdf
829,Lobsters,compsci,CSE,BYTE Magazine Scans (1975-95),https://archive.org/details/byte-magazine
830,Lobsters,compsci,CSE,jschauma/cs631apue - CS631 Advanced Programming in the UNIX Environment,https://github.com/jschauma/cs631apue
831,Lobsters,compsci,CSE,Design Flow and Characterization Methodology for Dual Mode Logic (2015),http://www.eng.biu.ac.il/fishale/files/2012/10/Design-Flow-and-Characterization-Methodology-for-Dual-Mode-Logic.pdf
832,Lobsters,compsci,CSE,Data Structures Used in the OpenBSD Kernel (2012),http://kindsoftware.com/documents/reports/Britt12.pdf
833,Lobsters,compsci,CSE,Introduction to Software Verification,https://www.youtube.com/watch?v=dGsD_K-IAgA&t=680s
834,Lobsters,compsci,CSE,Driller - Augmenting Fuzzing Through Selective Symbolic Execution (2016),http://cs.ucsb.edu/~chris/research/doc/ndss16_driller.pdf
835,Lobsters,compsci,CSE,Dynamicland,https://dynamicland.org
836,Lobsters,compsci,CSE,Digital Computers: On Encoding Logical-Mathematical Formulas into the Machine Itself (1954),http://www.itu.dk/people/sestoft/boehmthesis/boehm.pdf
837,Lobsters,compsci,CSE,A Deeper Inspection Into Compilation And Interpretation,https://medium.com/basecs/a-deeper-inspection-into-compilation-and-interpretation-d98952ebc842
838,Lobsters,compsci,CSE,Fourteen Years of Software Engineering at ETH Zurich,https://arxiv.org/abs/1712.05078
839,Lobsters,compsci,CSE,Parsing with derivatives - Elegant matching of regular languages in clojure,http://blog.klipse.tech//clojure/2016/10/02/parsing-with-derivatives-regular.html
840,Lobsters,compsci,CSE,F9: Secure Microkernel for Deeply-Embedded Devices (2017),https://archive.fosdem.org/2017/schedule/event/microkernel_microkernel_for_embedded_devices/
841,Lobsters,compsci,CSE,Refinement Reflection: Complete Verification with SMT (2017),https://arxiv.org/pdf/1711.03842.pdf
842,Lobsters,compsci,CSE,Fuzzy Thinking: Fuzz Testing and Formal Grammar,https://maxhallinan.com/posts/2017/12/09/fuzzy-thinking/
843,Lobsters,compsci,CSE,Learning Combinatorial Algorithms Over Graphs (2017),https://arxiv.org/abs/1704.01665
844,Lobsters,compsci,CSE,Squeak Makes a Good Python Debugger (2017),https://www.timfelgentreff.de/public/uni/NiephausPX2017.pdf
845,Lobsters,compsci,CSE,"Construction and Formal Verification of Fault-Tolerant, Distributed, Mutual Exclusion (2017)",https://icfp17.sigplan.org/event/erlang-2017-papers-construction-and-formal-verification-of-a-fault-tolerant-distributed-mutual-exclusion-algorithm
846,Lobsters,compsci,CSE,"Sancus: A Low-Cost, Security Architecture for IoT Devices (2017)",https://www.esat.kuleuven.be/cosic/publications/article-2785.pdf
847,Lobsters,compsci,CSE,CuriOS: Improving Reliability through Operating System Structure (2008),https://www.usenix.org/legacy/events/osdi08/tech/full_papers/david/david_html/index.html
848,Lobsters,compsci,CSE,A Conjecture That Had To Be True,http://scpdweb.stanford.edu/free-stuff/live-webinars-lectures/donald-knuths-annual-christmas-lecture
849,Lobsters,compsci,CSE,Machine Learning for Systems and Systems for Machine Learning (2017),http://learningsys.org/nips17/assets/slides/dean-nips17.pdf
850,Lobsters,compsci,CSE,The Case for Learned Index Structures,https://www.arxiv-vanity.com/papers/1712.01208v1/
851,Lobsters,compsci,CSE,Learn Anything White Paper,https://github.com/learn-anything/learn-anything/wiki/White-Paper
852,Lobsters,compsci,CSE,Falsehoods programmers believe about programming,http://www.sicpers.info/2017/12/falsehoods-programmers-believe-about-programming/
853,Lobsters,compsci,CSE,Interview of Xavier Leroy ­— POPL 18,https://www.cs.cmu.edu/~popl-interviews/leroy.html
854,Lobsters,compsci,CSE,Verification of Erlang Programs using Abstract Interpretation and Model Checking (2001),https://pdfs.semanticscholar.org/8174/3408a73d77c83cc88d6d9be8f994a0d2f4f2.pdf
855,Lobsters,compsci,CSE,Stateful Contracts for Affine Types (2010),http://users.eecs.northwestern.edu/~jesse/pubs/affine-contracts/
856,Lobsters,compsci,CSE,Introspection for C and Its Applications to Library Robustness (2017),https://arxiv.org/pdf/1712.01163.pdf
857,Lobsters,compsci,CSE,How to Teach Programming (and Other Things),http://third-bit.com/teaching/
858,Lobsters,compsci,CSE,How to Design an Effective Lesson,https://vimeo.com/245351211
859,Lobsters,compsci,CSE,Type-Safe Redis Queries: Case Study of Type-Level Programming in Haskell (2017),https://arxiv.org/pdf/1708.09158.pdf
860,Lobsters,compsci,CSE,Bloom Filter Sort (bfsort),http://blog.stermon.com/articles/2017/12/06/bloom-filter-sort-bfsort
861,Lobsters,compsci,CSE,"The Habit Programming Language: The Revised, Preliminary Report (2010)",http://hasp.cs.pdx.edu/habit-report-Nov2010.pdf
862,Lobsters,compsci,CSE,How to Implement Regular Expressions in JavaScript using Derivatives,http://dpk.io/dregs/toydregs
863,Lobsters,compsci,CSE,Debugging Church Numerals in Haskell,http://www.hansdieterhiep.nl/tutorials/debugging-church-numerals-in-haskell/
864,Lobsters,compsci,CSE,New Version of Learn Anything released (Open Source website to learn anything with Interactive maps),/s/r73vux/new_version_learn_anything_released_open
865,Lobsters,compsci,CSE,"Testing Non-Interference, Quickly (2012)",https://www.cis.upenn.edu/~aarthur/testing-noninterference-icfp2013.pdf
866,Lobsters,compsci,CSE,Towards a User-Mode Approach to Partitioned Scheduling in seL4 Microkernel (2012),https://pdfs.semanticscholar.org/fb1a/bc5174ec17853c720420666c6df7c6a91121.pdf
867,Lobsters,compsci,CSE,"Quest - Lightweight, Predictable, and Dependendable Kernel for Multicore Processors (2012)",http://www.cs.bu.edu/fac/richwest/quest.php
868,Lobsters,compsci,CSE,"CrowdFlow: Efficient, Information-Flow Security (2013)",http://citeseer.ist.psu.edu/viewdoc/summary?doi=10.1.1.713.3783
869,Lobsters,compsci,CSE,"base_cs: Exploring the basics of computer science, every Monday, for a year.",https://medium.com/basecs
870,Lobsters,compsci,CSE,A Gentle Introduction to Erasure Codes,https://www.akalin.com/intro-erasure-codes
871,Lobsters,compsci,CSE,"The New QuickCheck: Random, Exhaustive, and Symbolic Testing Under One Roof (2012)",http://citeseer.ist.psu.edu/viewdoc/summary?doi=10.1.1.230.6416
872,Lobsters,compsci,CSE,"Synthesis of Statically-Analyzable, Accelerator Networks from Sequential Programs (2016)",https://people.eecs.berkeley.edu/~johnw/papers/ICCAD2016.pdf
873,Lobsters,compsci,CSE,A Type-Safe Apparatus Executing Higher-Order Functions in Conjunction with Hardware Error Tolerance,http://arro.anglia.ac.uk/581958/1/Kimmitt%20thesis_web.pdf
874,Lobsters,compsci,CSE,What is a Monad?,https://www.youtube.com/watch?v=t1e8gqXLbsU
875,Lobsters,compsci,CSE,Parallel Functional Programming Using D-Clean (2012),http://www.tnkcs.inf.elte.hu/vedes/Zsok_Viktoria_Tezisek_en.pdf
876,Lobsters,compsci,CSE,Model-Based Testing with Logical Properties vs State Machines (2011),https://www.researchgate.net/publication/235900230_Model_Based_Testing_with_Logical_Properties_versus_State_Machines
877,Lobsters,compsci,CSE,Simon Peyton Jones - Getting from A to B - Fast route finding on slow computers,https://www.youtube.com/watch?v=L1XDdy-hOH8
878,Lobsters,compsci,CSE,Is it possible to have useful functional types in a purely nominative type system?,/s/ehqip0/is_it_possible_have_useful_functional
879,Lobsters,compsci,CSE,DIABLO: Datacenter-in-a-Box Simulator Using FPGA's (2013),http://diablo.cs.berkeley.edu/about.html
880,Lobsters,compsci,CSE,The COGENT Case for Property-Based Testing (2017),http://www.ssrg.nicta.com.au/publications/csiro_full_text//Chen_OKKH_17.pdf
881,Lobsters,compsci,CSE,Few notes on the Binomial and Fibonacci heaps,http://blog.jakuba.net/2017/11/22/fibonacci-heap.html
882,Lobsters,compsci,CSE,"HydrOS: A Massively-Fault-Tolerant, Operating System",http://hydros-project.org/
883,Lobsters,compsci,CSE,Plan 9 Operating System for the Raspberry Pi - ported by Richard Miller (2012),https://www.youtube.com/watch?v=O7ZELOUIyvw
884,Lobsters,compsci,CSE,“Super Mario Brothers” is hard (2016),http://news.mit.edu/2016/mario-brothers-hard-complexity-class-pspace-0601
885,Lobsters,compsci,CSE,Privad: Practical Privacy in Online Advertising (2011),http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.210.4751&rep=rep1&type=pdf
886,Lobsters,compsci,CSE,Demystifying Floating Point Precision,https://blog.demofox.org/2017/11/21/floating-point-precision/
887,Lobsters,compsci,CSE,"Laddie - Language for Automated, Device Drivers (2008)",https://www.eg.bucknell.edu/~lwittie/research/Laddie.pdf
888,Lobsters,compsci,CSE,The LUA record type for Lua-powered DNS records,https://gist.github.com/ahupowerdns/1e8bfbba95a277a4fac09cb3654eb2ac
889,Lobsters,compsci,CSE,Much Ado About Nothing: Putting Java's Null in its Place (2008),https://www2.ccs.neu.edu/racket/pubs/dissertation-cobbe.pdf
890,Lobsters,compsci,CSE,OberonScript - A Lightweight Compiler and Runtime System for the Web (2006),https://www.microsoft.com/en-us/research/wp-content/uploads/2016/02/tr-2006-50.pdf
891,Lobsters,compsci,CSE,Automated Testing of Graphics Shader Compilers (2017),http://www.doc.ic.ac.uk/~afd/homepages/papers/pdfs/2017/OOPSLA.pdf
892,Lobsters,compsci,CSE,Fast exact integer divisions using floating-point operations,https://lemire.me/blog/2017/11/16/fast-exact-integer-divisions-using-floating-point-operations/
893,Lobsters,compsci,CSE,Souper: A Synthesizing Super-Optimizer (2017),https://arxiv.org/pdf/1711.04422.pdf
894,Lobsters,compsci,CSE,À la carte Entropy,http://shape-of-code.coding-guidelines.com/2017/11/15/a-la-carte-entropy/
895,Lobsters,compsci,CSE,What are some good/interesting papers in CS for a beginner?,/s/npo38i/what_are_some_good_interesting_papers_cs
896,Lobsters,compsci,CSE,"A Touch of Evil: High-Assurance, Cryptographic Hardware from Untrusted Components (2017)",https://acmccs.github.io/papers/p1583-mavroudisA.pdf
897,Lobsters,compsci,CSE,Runtime Checking of Concurrent Data Structures (2005),https://core.ac.uk/download/pdf/82158063.pdf
898,Lobsters,compsci,CSE,Package Management Sudoku,https://web.archive.org/web/20160326062818/http://algebraicthunk.net/~dburrows/blog/entry/package-management-sudoku/
899,Lobsters,compsci,CSE,De Bruijn sequences; leading/trailing zero bits counting,https://yurichev.com/blog/de_bruijn/
900,Lobsters,compsci,CSE,Functional Programming Jargon,https://functional.works-hub.com/blog/Functional-Programming-Jargon
901,Lobsters,compsci,CSE,Automatic Generation of Normalized Relational Schemas from Nested Key-Value Data,http://cs-www.cs.yale.edu/homes/dna/papers/schemagen-sigmod16.pdf
902,Lobsters,compsci,CSE,Gerard Huet Reflects On The History Of Theorem Provers,https://50ans.inria.fr/en/gerard-huet-languages-and-software/
903,Lobsters,compsci,CSE,"Implementing a key-value store, part 1: Linear Hashing",https://samrat.me/posts/2017-11-04-kvstore-linear-hashing/
904,Lobsters,compsci,CSE,Adventures in Programming Interviews: Misleadingly Simple NP-Hard Problem,https://hackernoon.com/adventures-in-programming-interviews-misleadingly-difficult-np-hard-problem-43092597018c
905,Lobsters,compsci,CSE,A Guide to Alloy (2007),http://www.doc.ic.ac.uk/project/examples/2007/271j/suprema_on_alloy/Final%20Report/LaTeX/report.pdf
906,Lobsters,compsci,CSE,"Locksmith - Practical, Static, Race Detection for C",http://www.cs.umd.edu/~mwh/papers/locksmith-journal.pdf
907,Lobsters,compsci,CSE,A look at some bounded queues - part 2,http://cbloomrants.blogspot.com/2011/07/07-30-11-look-at-some-bounded-queues.html
908,Lobsters,compsci,CSE,So you want to write a type checker...,http://languagengine.co/blog/so-you-want-to-write-a-type-checker/
909,Lobsters,compsci,CSE,Hard Things in Computer Science: Naming things,http://250bpm.com/blog:110
910,Lobsters,compsci,CSE,Best-Ever Algorithm Found for Huge Streams of Data,https://www.quantamagazine.org/best-ever-algorithm-found-for-huge-streams-of-data-20171024/
911,Lobsters,compsci,CSE,Free and non free books all can learn from,https://github.com/learn-anything/books
912,Lobsters,compsci,CSE,Security Analysis of x86 Processor Microcode (2014),https://www.dcddcc.com/docs/2014_paper_microcode.pdf
913,Lobsters,compsci,CSE,The World's Fastest Scrabble Program (1988),https://www.cs.cmu.edu/afs/cs/academic/class/15451-s06/www/lectures/scrabble.pdf
914,Lobsters,compsci,CSE,Big-O: how code slows as data grows,https://nedbatchelder.com/text/slowsgrows.html
915,Lobsters,compsci,CSE,Dynamic Programming: First Principles,http://www.flawlessrhetoric.com/Dynamic-Programming-First-Principles
916,Lobsters,compsci,CSE,Efficient Immutable Collections,https://michael.steindorfer.name/publications/phd-thesis-efficient-immutable-collections.pdf
917,Lobsters,compsci,CSE,How Error Correcting Codes and Reed-Solomon works,https://monades.roperzh.com/error-correction-reed-solomon/
918,Lobsters,compsci,CSE,Exploring lock-free Rust 1: Locks,https://morestina.net/blog/742/exploring-lock-free-rust-1-locks
919,Lobsters,compsci,CSE,How Merkle trees enable the decentralized Web,https://taravancil.com/blog/how-merkle-trees-enable-decentralized-web/
920,Lobsters,compsci,CSE,A visualisation of Langton's ant,http://langton-ant.s3-website-eu-west-1.amazonaws.com
921,Lobsters,compsci,CSE,The Electoral College and the knapsack problem,https://mike.place/2017/ecknapsack/
922,Lobsters,compsci,CSE,WTF is a Thread,https://www.schneems.com/2017/10/23/wtf-is-a-thread/
923,Lobsters,compsci,CSE,Tracing the Dynabook: A Study of Technocultural Transformations,https://tkbr.publishing.sfu.ca/dynabook/
924,Lobsters,compsci,CSE,Diff engine for Markdown,https://kristaps.bsd.lv/lowdown/diff.html
925,Lobsters,compsci,CSE,Gap Buffers: a data structure for editable text,https://routley.io/tech/2017/09/01/gap-buffer.html
926,Lobsters,compsci,CSE,Why should we teach programming (Hint: It’s not to learn problem-solving),https://computinged.wordpress.com/2017/10/18/why-should-we-teach-programming-hint-its-not-to-learn-problem-solving/
927,Lobsters,compsci,CSE,On termination,https://mail.haskell.org/pipermail/haskell-cafe/2003-May/004343.html
928,Lobsters,compsci,CSE,"Bryan Cantrill on ARC: A Self-Tuning, Low Overhead Replacement Cache",https://www.youtube.com/watch?v=F8sZRBdmqc0
929,Lobsters,compsci,CSE,The Lost Huffman Paper,http://cbloomrants.blogspot.com/2010/08/08-12-10-lost-huffman-paper.html
930,Lobsters,compsci,CSE,It's time for a new old language,https://www.youtube.com/watch?v=dCuZkaaou0Q
931,Lobsters,compsci,CSE,Big Integer Subtraction on the Power Architecture,http://exm.us/big-integer-subtraction.html
932,Lobsters,compsci,CSE,Bartosz Milewski's 'Category Theory for Programmers' compiled in PDF,https://github.com/hmemcpy/milewski-ctfp-pdf
933,Lobsters,compsci,CSE,"FaCT: Flexible, Constant-Time, Programming Language (2017)",https://cseweb.ucsd.edu/~dstefan/pubs/cauligi:2017:fact.pdf
934,Lobsters,compsci,CSE,isomorƒ: automated refactoring suggestions,https://isomorf.io/#!/syntax-picker/tours-ideas
935,Lobsters,compsci,CSE,"Menuet – A pre-emptive, real-time and multiprocessor OS written in assembly",http://www.menuetos.net/
936,Lobsters,compsci,CSE,Another tutorial for writing a Forth interpreter in assembly (Part 3),http://blog.asrpo.com/forth_tutorial_part_3
937,Lobsters,compsci,CSE,"x86 Proved: Coq Library for Modelling, Specification, Generation, and Proof for x86 Machine Code",https://x86proved.codeplex.com/
938,Lobsters,compsci,CSE,Epigrams on Programming (1982),http://www.developingandstuff.com/2015/02/epigrams-on-programming-highlighted.html
939,Lobsters,compsci,CSE,Locality sensitive hashing explained,https://medium.com/engineering-brainly/locality-sensitive-hashing-explained-304eb39291e4
940,Lobsters,compsci,CSE,"Vale: Verifying High-Performance, Cryptographic, Assembly Code (2017)",https://project-everest.github.io/assets/vale2017.pdf
941,Lobsters,compsci,CSE,Cooperative Software Development,http://faculty.washington.edu/ajko/books/cooperative-software-development/
942,Lobsters,compsci,CSE,"On Disk IO, Part 4: B-Trees and RUM Conjecture",https://medium.com/@ifesdjeen/on-disk-storage-part-4-b-trees-30791060741
943,Lobsters,compsci,CSE,Kaizen of Programming,http://250bpm.com/blog:102
944,Lobsters,compsci,CSE,Another tutorial for writing a Forth interpreter in assembly (Part 2),https://blog.asrpo.com/forth_tutorial_part_2
945,Lobsters,compsci,CSE,Stop Bashing COBOL: COBOL as a Research Theme,http://www.cs.vu.nl/Cobol/stop-bashing-cobol.pdf
946,Lobsters,compsci,CSE,Spinning Around In Cycles With Directed Acyclic Graphs,https://medium.com/basecs/spinning-around-in-cycles-with-directed-acyclic-graphs-a233496d4688
947,Lobsters,compsci,CSE,A Combinatory Compiler,https://crypto.stanford.edu/~blynn/lambda/sk.html
948,Lobsters,compsci,CSE,Design by Contract in Smalltalk (1996),https://www.researchgate.net/profile/Ernesto_Pimentel/publication/220278660_Design_by_Contract_in_Smalltalk/links/545364f70cf2bccc4909c69b/Design-by-Contract-in-Smalltalk.pdf
949,Lobsters,compsci,CSE,Text Editor: Data Structures,http://averylaird.com/programming/editor/2017/09/30/the-piece-table/
950,Lobsters,compsci,CSE,The Lux Programming Language [Strange Loop 2017],https://www.youtube.com/watch?v=T-BZvBWiamU
951,Lobsters,compsci,CSE,PRNG Reference,http://hclarke.ca/prng-reference.html
952,Lobsters,compsci,CSE,"Experimental Creative Writing with the Vectorized Word by Allison Parrish, Strange Loop 2017",https://www.youtube.com/watch?v=L3D0JEA1Jdc
953,Lobsters,compsci,CSE,Eliminating Input-Based Attacks by Deriving En/Decoders from Context-Free Grammars,http://spw17.langsec.org/papers/bieschke-automatic-unparsers.pdf
954,Lobsters,compsci,CSE,Microsoft Develops New Programming Language For Quantum Computers,"http://www.tomshardware.com/news/microsoft-quantum-computer-programming-language,35534.html"
955,Lobsters,compsci,CSE,"On Disk IO, Part 3: LSM Trees",https://medium.com/@ifesdjeen/on-disk-io-part-3-lsm-trees-8b2da218496f
956,Lobsters,compsci,CSE,Compression Decompressed,https://unwttng.com/compression-decompressed
957,Lobsters,compsci,CSE,Another tutorial for writing a Forth interpreter in assembly (Part 1),https://blog.asrpo.com/forth_tutorial_part_1
958,Lobsters,compsci,CSE,"Combined Static and Dynamic, Automated, Test Generation (2011)",https://pdfs.semanticscholar.org/b351/f99c0d579d7f4df2c79fd465bdf300045e63.pdf
959,Lobsters,compsci,CSE,Deep Dive Through A Graph: DFS Traversal,https://medium.com/basecs/deep-dive-through-a-graph-dfs-traversal-8177df5d0f13
960,Lobsters,compsci,CSE,Conservative Logic,http://52.7.130.124/wp-content/uploads/2015/07/ConservativeLogic.pdf
961,Lobsters,compsci,CSE,Robust-first Computing,http://robust.cs.unm.edu/
962,Lobsters,compsci,CSE,MindWeb – A Computer Science Bachelor Curriculum,https://mindweb.network/board/computer-science-a-full-bachelor-curriculum
963,Lobsters,compsci,CSE,Having an Effect,http://okmij.org/ftp/Computation/having-effect.html
964,Lobsters,compsci,CSE,The Asynchronous Computability Theorem,https://medium.com/@eulerfx/the-asynchronous-computability-theorem-171e9d7b9423
965,Lobsters,compsci,CSE,How complexity classes can help you avoid a bar fight!,https://www.dailydrip.com/blog/how-complexity-classes-can-help-you-avoid-a-bar-fight.html
966,Lobsters,compsci,CSE,Micro-Reboot: A Technique for Cheap Recovery (2004),https://www.usenix.org/legacy/event/osdi04/tech/full_papers/candea/candea.pdf
967,Lobsters,compsci,CSE,"Practical, Lock-Free Garbage Collection Using Reference Counting (2004)",http://www.non-blocking.com/download/gidpst05_lockfreegc_tr.pdf
968,Lobsters,compsci,CSE,There are Only Four Billion Floats – So Test Them All!,https://randomascii.wordpress.com/2014/01/27/theres-only-four-billion-floatsso-test-them-all/
969,Lobsters,compsci,CSE,Energy Efficiency across Programming Languages,https://sites.google.com/view/energy-efficiency-languages
970,Lobsters,compsci,CSE,"Monoids: what they are, why they are useful, and what they teach us about software",https://deque.blog/2017/09/13/monoids-what-they-are-why-they-are-useful-and-what-they-teach-us-about-software/
971,Lobsters,compsci,CSE,Morphological parsing and lemmatization in Elixir,https://github.com/xiamx/lemma
972,Lobsters,compsci,CSE,"Linux, OpenBSD, and Tasklier: A Comparative Complexity Analysis (2002)",http://www.dtic.mil/dtic/tr/fulltext/u2/a403525.pdf
973,Lobsters,compsci,CSE,"On Disk IO, Part 2: More Flavours of IO",https://medium.com/@ifesdjeen/on-disk-io-part-2-more-flavours-of-io-c945db3edb13
974,Lobsters,compsci,CSE,"Tarcil - High-Quality, Low-Latency Scheduling in Large, Shared Clusters (2014)",https://web.stanford.edu/group/mast/cgi-bin/drupal/system/files/2014.techreport.tarcil_0.pdf
975,Lobsters,compsci,CSE,"Firmament: Fast, Centralized Scheduling at Scale (2016)",https://www.cl.cam.ac.uk/~rnw24/papers/2016-osdi-firmament.pdf
976,Lobsters,compsci,CSE,Data structure: the treap!,https://jvns.ca/blog/2017/09/09/data-structure--the-treap-/
977,Lobsters,compsci,CSE,Dependent Types,https://hydraz.club/posts/2017-09-08.html
978,Lobsters,compsci,CSE,Technical Book on Deep Learning,https://github.com/tomepel/Technical_Book_DL
979,Lobsters,compsci,CSE,SICP PDF with Texinfo and LaTeX source,https://github.com/sarabander/sicp-pdf
980,Lobsters,compsci,CSE,Hacker Curriculum,http://www.hackercurriculum.org/
981,Lobsters,compsci,CSE,Map of Computer Science,https://www.youtube.com/watch?v=SzJ46YA_RaA
982,Lobsters,compsci,CSE,Documenting Architecture Decisions (2011),http://thinkrelevance.com/blog/2011/11/15/documenting-architecture-decisions
983,Lobsters,compsci,CSE,"Memory-Efficient, Hard, Real-Time, Garbage Collection (2003)",http://liu.diva-portal.org/smash/get/diva2:20899/FULLTEXT01.pdf
984,Lobsters,compsci,CSE,"On Disk IO, Part 1: Flavours of IO",https://medium.com/@ifesdjeen/on-disk-io-part-1-flavours-of-io-8e1ace1de017
985,Lobsters,compsci,CSE,Mison: A Fast JSON Parser for Data Analytics,https://www.microsoft.com/en-us/research/publication/mison-fast-json-parser-data-analytics/
986,Lobsters,compsci,CSE,Toward Certification for Free: Correct-by-Construction ML Oracles with Polymorphic LCF Style,https://hal.archives-ouvertes.fr/hal-01558252/document
987,Lobsters,compsci,CSE,My first fifteen compilers,http://composition.al/blog/2017/07/31/my-first-fifteen-compilers/
988,Lobsters,compsci,CSE,Great Ideas in Theoretical Science,http://www.cs.cmu.edu/~aada/courses/15251f15/www/schedule.html
989,Lobsters,compsci,CSE,"Software-based, Microarchitectural Attacks",https://gruss.cc/files/phd_thesis.pdf
990,Lobsters,compsci,CSE,"Separation, Virtual, Machine Monitors (VMM's) (2012)",https://pdfs.semanticscholar.org/a724/0f0070fcf2a2747231ddea2bab22b8e368b4.pdf
991,Lobsters,compsci,CSE,Painting Nodes Black With Red-Black Trees – basecs,https://medium.com/basecs/painting-nodes-black-with-red-black-trees-60eacb2be9a5
992,Lobsters,compsci,CSE,Type Tac Toe: Advanced Type Safety,http://chrispenner.ca/posts/type-tac-toe
993,Lobsters,compsci,CSE,Shor's Quantum Factoring Algorithm,http://algassert.com/post/1718
994,Lobsters,compsci,CSE,"Physics, Topology, Logic and Computation: A Rosetta Stone",http://math.ucr.edu/home/baez/rosetta.pdf
995,Lobsters,compsci,CSE,ealter/vim_turing_machine: An implementation of a Turing machine using only normal mode Vim commands,https://github.com/ealter/vim_turing_machine
996,Lobsters,compsci,CSE,BitFunnel: Revisiting Signatures for Search,http://danluu.com/bitfunnel-sigir.pdf
997,Lobsters,compsci,CSE,Writing Reusable Code Feedback at Scale with Mixed-Initiative Program Synthesis (2017),http://pages.cs.wisc.edu/~loris/papers/las17.pdf
998,Lobsters,compsci,CSE,Performance comparison: linear search vs binary search.,https://dirtyhandscoding.wordpress.com/2017/08/25/performance-comparison-linear-search-vs-binary-search/
999,Lobsters,compsci,CSE,Designing a Tree Diff Algorithm Using Dynamic Programming and A*,http://thume.ca/2017/06/17/tree-diffing/
1000,Lobsters,compsci,CSE,Game Development Using Design-by-Contract (2006),http://www.jot.fm/issues/issue_2006_09/article3/
1001,Lobsters,compsci,CSE,A follow up of the study of 4 Money class designs: why not having currencies as type parameters?,https://deque.blog/2017/08/22/a-follow-up-of-the-study-of-4-money-class-designs-why-not-having-currencies-as-type-parameters/
1002,Lobsters,compsci,CSE,Vigorous Public Debates in Academic Computer Science,http://queue.acm.org/detail.cfm?ref=rss&id=3132371
1003,Lobsters,compsci,CSE,Finding Fibonacci In Golden Trees,https://medium.com/basecs/finding-fibonacci-in-golden-trees-1c8967b1f47a
1004,Lobsters,compsci,CSE,How to Make Error Handling Less Error Prone,https://raw.githubusercontent.com/strangeloop/StrangeLoop2014/master/slides/sessions/Hopwood-HowToMakeErrorHandlingLessErrorProne.pdf
1005,Lobsters,compsci,CSE,Noether - Symmetry in Programming Language Design,https://tahoe-lafs.org/~davidsarah/noether-friam4.pdf
1006,Lobsters,compsci,CSE,"Radix Sort, Trie Trees, and Maps from Representable Functors",http://chrispenner.ca/posts/representable-discrimination
1007,Lobsters,compsci,CSE,Keynote: Why Functional Programming Matters,https://www.youtube.com/watch?v=1qBHf8DrWR8
1008,Lobsters,compsci,CSE,Microkernels are quite attractive to academic computer science researchers,https://utcc.utoronto.ca/~cks/space/blog/tech/AcademicMicrokernels
1009,Lobsters,compsci,CSE,Demystifying Dynamic Programming,https://medium.freecodecamp.org/demystifying-dynamic-programming-3efafb8d4296
1010,Lobsters,compsci,CSE,"Know your Times Tables, but... do you know your ""Hash Tables""?",http://www.zeroequalsfalse.press/2017/02/20/hashtables/
1011,Lobsters,compsci,CSE,"A study of 4 Money class designs, featuring Martin Fowler, Kent Beck and Ward Cunningham implementations.",https://deque.blog/2017/08/17/a-study-of-4-money-class-designs-featuring-martin-fowler-kent-beck-and-ward-cunningham-implementations/
1012,Lobsters,compsci,CSE,How to Simulate Cellular Automata with Shaders,http://www.alanzucconi.com/2016/03/16/cellular-automata-with-shaders/
1013,Lobsters,compsci,CSE,On Norbert Blum’s claimed proof that P does not equal NP,https://lucatrevisan.wordpress.com/2017/08/15/on-norbert-blums-claimed-proof-that-p-does-not-equal-np/
1014,Lobsters,compsci,CSE,"PAPAC-00, a Do-It-Yourself Paper Computer",http://ieeexplore.ieee.org/stamp/stamp.jsp?reload=true&arnumber=5222588
1015,Lobsters,compsci,CSE,Magic: the Gathering is Turing Complete (2012),http://www.toothycat.net/~hologram/Turing/HowItWorks.html
1016,Lobsters,compsci,CSE,A dive into spatial search algorithms,https://blog.mapbox.com/a-dive-into-spatial-search-algorithms-ebd0c5e39d2a
1017,Lobsters,compsci,CSE,Set Theory: the Method To Database Madness,https://medium.com/basecs/set-theory-the-method-to-database-madness-5ec4b4f05d79
1018,Lobsters,compsci,CSE,PIOS - Parallel Instructional Operating System,http://zoo.cs.yale.edu/classes/cs422/pios
1019,Lobsters,compsci,CSE,An Intro to Compilers (LLVM),https://nicoleorchard.com/blog/compilers
1020,Lobsters,compsci,CSE,A Solution of the P versus NP Problem,https://arxiv.org/abs/1708.03486
1021,Lobsters,compsci,CSE,Eff Directly in Ocaml (2017),http://kcsrk.info/papers/caml-eff17.pdf
1022,Lobsters,compsci,CSE,Papers I Like Pt 1,https://fgiesen.wordpress.com/2017/08/12/papers-i-like-part-1/
1023,Lobsters,compsci,CSE,"Implementing Algebraic Effects in C ""Monads for Free in C"" (2017)",https://www.microsoft.com/en-us/research/wp-content/uploads/2017/06/algeff-in-c-tr-v2.pdf
1024,Lobsters,compsci,CSE,Hypercomputation - Wikipedia,https://en.wikipedia.org/wiki/Hypercomputation
1025,Lobsters,compsci,CSE,Why does Sattolo's algorithm produce a permutation with exactly one cycle?,http://danluu.com/sattolo/
1026,Lobsters,compsci,CSE,How is coinduction the dual of induction?,https://www.joachim-breitner.de/blog/727-How_is_coinduction_the_dual_of_induction_
1027,Lobsters,compsci,CSE,Go Meta! - A Case for Generative Programming and DSL's in Performance-Critical Systems,http://drops.dagstuhl.de/opus/volltexte/2015/5029/pdf/19.pdf
1028,Lobsters,compsci,CSE,Fearless concurrency with hazard pointers ·,http://ticki.github.io/blog/fearless-concurrency-with-hazard-pointers/
1029,Lobsters,compsci,CSE,TypeScript's Type System is Turing Complete,https://github.com/Microsoft/TypeScript/issues/14833
1030,Lobsters,compsci,CSE,HALO - Haskell to Logic through Denotational Semantics,http://research.microsoft.com/en-us/um/people/simonpj/papers/verify/hcc-popl.pdf
1031,Lobsters,compsci,CSE,A Follow-up to “The Unreasonable Ineffectiveness of Machine Learning in Computer Systems Research”,https://www.sigarch.org/a-follow-up-to-the-unreasonable-ineffectiveness-of-machine-learning-in-computer-systems-research/
1032,Lobsters,compsci,CSE,Asynchronous Interrupts for Erlang-like thread killing in Gambit Scheme,http://webmail.iro.umontreal.ca/pipermail/gambit-list/2017-July/008727.html
1033,Lobsters,compsci,CSE,High Coverage Testing of Haskell Programs (2011),https://pdfs.semanticscholar.org/a6a5/972ffac9bc746b9bdea622a7fdaee1da40af.pdf
1034,Lobsters,compsci,CSE,Solving the Traveling Pacman Problem,https://medium.com/@robertgrosse/solving-the-traveling-pacman-problem-39c0872428bc
1035,Lobsters,compsci,CSE,Big-O and related notation,https://www.johndcook.com/blog/asymptotic_notation/
1036,Lobsters,compsci,CSE,OMG OMSCS: Is an Online Masters right for You?,https://schneems.com/2017/07/26/omscs-omg-is-an-online-masters-right-for-you/
1037,Lobsters,compsci,CSE,"Programmatically tag or reduce omnidirectional Internet log ""background noise""",https://github.com/Animus-Intelligence/omni
1038,Lobsters,compsci,CSE,"Verifying an I/O-concurrent, File System (2017)",https://dspace.mit.edu/bitstream/handle/1721.1/108986/986497806-MIT.pdf?sequence=1
1039,Lobsters,compsci,CSE,Extending Safe C Support in Leon (2017),https://infoscience.epfl.ch/record/227942/files/Extending%20Safe%20C%20Support%20In%20Leon.pdf
1040,Lobsters,compsci,CSE,"William Byrd on ""The Most Beautiful Program Ever Written""",https://www.youtube.com/watch?v=OyfBQmvr2Hc
1041,Lobsters,compsci,CSE,Why Are Coding Bootcamps Going Out of Business?,http://hackeducation.com/2017/07/22/bootcamp-bust
1042,Lobsters,compsci,CSE,Robocodes: Towards Generative Street Addresses from Satellite Imagery,https://research.fb.com/wp-content/uploads/2017/07/cvpr_ev_final_sent.pdf
1043,Lobsters,compsci,CSE,What are covariance and contravariance?,https://www.stephanboyer.com/post/132/what-are-covariance-and-contravariance
1044,Lobsters,compsci,CSE,O(n ln n) linearizability testing of distributed storages,http://rystsov.info/2017/07/16/linearizability-testing.html
1045,Lobsters,compsci,CSE,What to know before debating type systems (2010),http://blogs.perl.org/users/ovid/2010/08/what-to-know-before-debating-type-systems.html
1046,Lobsters,compsci,CSE,Gnod - The Global Network Of Discovery,http://www.gnod.com
1047,Lobsters,compsci,CSE,"Caernarvon - A High-Assurance, Smart Card OS for Electronic Visas",http://researcher.watson.ibm.com/researcher/files/us-msteiner/secure-token.IBM%20ICAO%20RFI%20os%2005182005pak%20.pdf
1048,Lobsters,compsci,CSE,No Instruction Set Computing (NISC),https://en.wikipedia.org/wiki/No_instruction_set_computing
1049,Lobsters,compsci,CSE,DynamicML - A Dynamically-Typed Version of SML/NJ (2012),http://www.zerny.dk/dynamic-ml.html
1050,Lobsters,compsci,CSE,Compile-time Typechecked Sum Types in Java,https://whbboyd.com/articles/compile-time-typechecked-sum-types-in-java.html
1051,Lobsters,compsci,CSE,Importance of Effort Estimation and how to get good at it,http://thecodeartist.blogspot.com/2017/04/effort-estimation.html
1052,Lobsters,compsci,CSE,The language of choice,https://codewords.recurse.com/issues/four/the-language-of-choice
1053,Lobsters,compsci,CSE,"Macros as Multi-Stage Computations - Type-Safe, Generative, Binding Macros in MacroML (2001)",http://www.cs.rice.edu/~taha/publications/conference/icfp01a.pdf
1054,Lobsters,compsci,CSE,What social medias and zombies have in common?,https://www.dailydrip.com/blog/what-social-medias-and-zombies-have-in-common.html
1055,Lobsters,compsci,CSE,What is abstraction anyway?,http://liamoc.net/posts/2017-07-08-abstraction.html
1056,Lobsters,compsci,CSE,Thoughts by Rust's Graydon on sub-Turing models of computation,http://graydon2.dreamwidth.org/236045.html
1057,Lobsters,compsci,CSE,Bloom Filters by Example,https://llimllib.github.io/bloomfilter-tutorial/
1058,Lobsters,compsci,CSE,10 Common Data Structures Explained with Videos + Exercises,https://medium.freecodecamp.org/10-common-data-structures-explained-with-videos-exercises-aaff6c06fb2b
1059,Lobsters,compsci,CSE,EXACT STRING MATCHING ALGORITHMS,http://www-igm.univ-mlv.fr/~lecroq/string/
1060,Lobsters,compsci,CSE,Where do Type Systems Come From?,http://blog.felipe.rs/2017/07/07/where-do-type-systems-come-from
1061,Lobsters,compsci,CSE,Two Perspectives on the End-to-End Principle,https://blog.nelhage.com/post/end-to-end-principle/
1062,Lobsters,compsci,CSE,Verifying a Simple Compiler with QuickCheck,http://www.dcc.fc.up.pt/~pbv/compcheck/
1063,Lobsters,compsci,CSE,Undefined Behavior in 2017,https://blog.regehr.org/archives/1520
1064,Lobsters,compsci,CSE,Practical parallelism,http://news.mit.edu/2017/speedup-parallel-computing-algorithms-0630
1065,Lobsters,compsci,CSE,"Kapil Vaswani - Simple, fast and safe manual memory management",https://www.youtube.com/watch?v=C07s5LTuTmE
1066,Lobsters,compsci,CSE,State Machines – Basics of Computer Science (2011),http://blog.markshead.com/869/state-machines-computer-science/
1067,Lobsters,compsci,CSE,SOTA-Py: Stochastic On-Time Arrival,https://github.com/mehrdadn/SOTA-Py/tree/master
1068,Lobsters,compsci,CSE,orlp/pdqsort -- Pattern-defeating quicksort,https://github.com/orlp/pdqsort
1069,Lobsters,compsci,CSE,"Purely algebraic abstractions have no meaning in common, only algebraic properties.",https://arcanesentiment.blogspot.co.uk/2017/06/purely-algebraic-abstractions.html
1070,Lobsters,compsci,CSE,Applied Formal Logic: The bug in Quick Search,https://maniagnosis.crsr.net/2017/06/AFL-bug-in-quicksearch.html
1071,Lobsters,compsci,CSE,A Business Card Universal Turing Machine,http://alvyray.com/CreativeCommons/BizCardUniversalTuringMachine_v1.6.pdf
1072,Lobsters,compsci,CSE,"William Byrd on Logic and Relational Programming, miniKanren",https://www.infoq.com/interviews/byrd-relational-programming-minikanren
1073,Lobsters,compsci,CSE,Welcome Inside the Head of Larry Wall - Joe Armstrong and Larry Wall,https://www.youtube.com/watch?v=SpH9BTMZKXc
1074,Lobsters,compsci,CSE,Frame-Based Editing,https://kclpure.kcl.ac.uk/portal/files/71018111/Frame_based_editing.pdf
1075,Lobsters,compsci,CSE,Myers Diff Algorithm - Code & Interactive Visualization,http://blog.robertelder.org/diff-algorithm/
1076,Lobsters,compsci,CSE,Line breaking (2014),http://xxyxyz.org/line-breaking/
1077,Lobsters,compsci,CSE,"An Orchestrated Survey on Automated, Software, Test-Case Generation (2013)",https://cs.stanford.edu/people/saswat/research/ASTJSS.pdf
1078,Lobsters,compsci,CSE,"Blueprint for an Embedded, Systems, Programming Language (2014)",http://www2.hawaii.edu/~depengli/Publication/sit-2014-paul.pdf
1079,Lobsters,compsci,CSE,Quaternion quantization,http://marc-b-reynolds.github.io/quaternions/2017/05/02/QuatQuantPart1.html
1080,Lobsters,compsci,CSE,3D Packing for SLS Printing,https://www.michaelfogleman.com/sls/
1081,Lobsters,compsci,CSE,"Tales of the Mirror World, Part 2: From Mainframes to Micros",http://www.filfre.net/2017/06/tales-of-the-mirror-world-part-2-from-mainframes-to-micros/
1082,Lobsters,compsci,CSE,Plain old graphs that solve your problems,https://www.zeroequalsfalse.press/2017/03/11/graphs/
1083,Lobsters,compsci,CSE,A Third Perspective on Hygiene,http://blog.brownplt.org/2017/06/20/scope-inference-hygiene.html
1084,Lobsters,compsci,CSE,Introducing Forest 1.0,https://medium.com/rigetti/introducing-forest-f2c806537c6d
1085,Lobsters,compsci,CSE,Programming-Language Theory Explained for the Working Programmer,https://www.leafac.com/prose/programming-language-theory-explained-for-the-working-programmer--principles-of-programming-languages/
1086,Lobsters,compsci,CSE,Foundations of Semantics and Model Checking in a Software Engineering Course (2015),http://ceur-ws.org/Vol-1385/paper4.pdf
1087,Lobsters,compsci,CSE,Restructor — a system / algorithm to automatically refactor entire code-bases,http://strlen.com/restructor/
1088,Lobsters,compsci,CSE,Sometimes Floating Point Math is Perfect,https://randomascii.wordpress.com/2017/06/19/sometimes-floating-point-math-is-perfect/
1089,Lobsters,compsci,CSE,liblb: A Study & Library of Load Balancing Algorithms,http://liblb.com
1090,Lobsters,compsci,CSE,Solving Graph Problems with City Bikes of Helsinki,https://medium.com/@lhartikk/solving-graph-problems-with-city-bikes-of-helsinki-c02a90584814
1091,Lobsters,compsci,CSE,Anonymization of System Logs for Privacy and Storage Benefits,https://arxiv.org/abs/1706.04337
1092,Lobsters,compsci,CSE,Panel: What's Next for Our Programming Languages?,https://www.infoq.com/presentations/panel-languages-future
1093,Lobsters,compsci,CSE,Formal Reasoning About Programs (draft book by Chlipala),http://adam.chlipala.net/frap/
1094,Lobsters,compsci,CSE,Facebook Research just published an awesome paper on learning hierarchical representations,https://medium.com/@nishantnikhil/facebook-research-just-published-an-awesome-paper-on-learning-hierarchical-representations-34e3d829ede7
1095,Lobsters,compsci,CSE,Why Graph Algorithms are fun (and relevant)!,https://www.dailydrip.com/blog/why-graph-algorithms-are-fun-and-relevant.html
1096,Lobsters,compsci,CSE,"Older Adults Learning Computer Programming: Motivations, Frustrations, and Design Opportunities",http://www.pgbovine.net/publications/older-adults-learning-programming_CHI-2017.pdf
1097,Lobsters,compsci,CSE,A (computational) linguistic farce in three acts,http://www.earningmyturns.org/2017/06/a-computational-linguistic-farce-in.html
1098,Lobsters,compsci,CSE,Antedating “datatype” all the way to Plankalkül,http://arcanesentiment.blogspot.com/2017/06/antedating-datatype-all-way-to.html
1099,Lobsters,compsci,CSE,MINIXCon 2017 Announcement,http://www.minix3.org/conference/2017/
1100,Lobsters,compsci,CSE,MOG (MIMD On GPU) : Run arbitrary parallel code on a GPU,http://aggregate.org/MOG/
1101,Lobsters,compsci,CSE,"We need a course on ""Mundane Data Types""",http://www.cs.uni.edu/~wallingf/blog/archives/monthly/2017-06.html#e2017-06-08T12_10_33.htm
1102,Lobsters,compsci,CSE,DeepMind Shows AI Has Trouble Seeing Homer Simpson's Actions,http://spectrum.ieee.org/tech-talk/robotics/artificial-intelligence/deepmind-shows-ai-has-trouble-seeing-homer-simpson-actions
1103,Lobsters,compsci,CSE,Data structure for triangle meshes,http://www.redblobgames.com/x/1722-b-rep-triangle-meshes/
1104,Lobsters,compsci,CSE,Efficient Algorithms for Sorting and Synchronization (1999),https://www.samba.org/~tridge/phd_thesis.pdf
1105,Lobsters,compsci,CSE,[1705.08807] When Will AI Exceed Human Performance? Evidence from AI Experts,https://arxiv.org/abs/1705.08807
1106,Lobsters,compsci,CSE,Three Interesting Algorithms you should know before you die,https://www.dailydrip.com/blog/three-interesting-algorithms-you-should-know-before-you-die
1107,Lobsters,compsci,CSE,A Few Billion Lines of Code Later: Using Static Analysis to Find Bugs in the Real World (2010),https://cacm.acm.org/magazines/2010/2/69354-a-few-billion-lines-of-code-later/fulltext
1108,Lobsters,compsci,CSE,Computer Science Educators beta (StackExchange),https://cseducators.stackexchange.com/
1109,Lobsters,compsci,CSE,"Floating Point Imprecision: or, why we had to make a regression release",http://blogs.asterisk.org/2016/06/01/float-conversion-bad-released-13-9-1-regression-fix/
1110,Lobsters,compsci,CSE,Float or double?,http://www.ilikebigbits.com/blog/2017/6/1/float-or-double
1111,Lobsters,compsci,CSE,I made a search engine to show the best paths for learning anything,https://learn-anything.xyz/
1112,Lobsters,compsci,CSE,Rosetta - A Solver-aided Programming Language That Extends Racket,https://emina.github.io/rosette/index.html
1113,Lobsters,compsci,CSE,"Oh My Gosh, It’s Covered in Rule 30s!",http://blog.stephenwolfram.com/2017/06/oh-my-gosh-its-covered-in-rule-30s/
1114,Lobsters,compsci,CSE,Functional Geometry,https://eprints.soton.ac.uk/257577/1/funcgeo2.pdf
1115,Lobsters,compsci,CSE,"Deep Learning Is Not Good Enough, We Need Bayesian Deep Learning for Safe AI",https://alexgkendall.github.io/computer_vision/bayesian_deep_learning_for_safe_ai/
1116,Lobsters,compsci,CSE,An Overview of Multi-Task Learning for Deep Learning,http://sebastianruder.com/multi-task/
1117,Lobsters,compsci,CSE,ALEXANDRIA: Large-Scale Formal Proof for the Working Mathematician,https://www.cl.cam.ac.uk/~lp15/Grants/Alexandria/
1118,Lobsters,compsci,CSE,"Full Free Book ""Annotated Algorithms in Python""",https://raw.githubusercontent.com/mdipierro/nlib/master/docs/book_numerical.pdf
1119,Lobsters,compsci,CSE,Typed Assembly Language (1998),https://www.cs.cornell.edu/talc/overview.html
1120,Lobsters,compsci,CSE,Should I use Chapel or Julia for my next project?,https://www.dursi.ca/post/julia-vs-chapel.html
1121,Lobsters,compsci,CSE,"How Your Data is Stored, or, The Laws of the Imaginary Greeks",https://medium.com/@yonatanzunger/how-your-data-is-stored-or-the-laws-of-the-imaginary-greeks-54c569c17a49
1122,Lobsters,compsci,CSE,How to test gradient implementations,http://timvieira.github.io/blog/post/2017/04/21/how-to-test-gradient-implementations/
1123,Lobsters,compsci,CSE,Everything that Works Works Because it's Bayesian: Why Deep Nets Generalize?,http://www.inference.vc/everything-that-works-works-because-its-bayesian-2/
1124,Lobsters,compsci,CSE,Automated deep neural network design with genetic programming,https://github.com/joeddav/devol
1125,Lobsters,compsci,CSE,Solving twenty-four puzzles,http://blog.plover.com/math/24-puzzle.html
1126,Lobsters,compsci,CSE,Cuckoo Filter: Practically Better Than Bloom,https://www.cs.cmu.edu/%7Edga/papers/cuckoo-conext2014.pdf
1127,Lobsters,compsci,CSE,On The Turing Completeness of MS PowerPoint,https://www.andrew.cmu.edu/user/twildenh/PowerPointTM/Paper.pdf
1128,Lobsters,compsci,CSE,"An Empirical Study of the Correctness of Formally-Verified, Distributed Systems",https://locore.cs.washington.edu/papers/fonseca-dsbugs.pdf
1129,Lobsters,compsci,CSE,Old graphs from new types,https://blogs.ncl.ac.uk/andreymokhov/old-graphs-from-new-types/
1130,Lobsters,compsci,CSE,An Intro to Integer Programming for Engineers: Simplified Bus Scheduling,https://blog.remix.com/an-intro-to-integer-programming-for-engineers-simplified-bus-scheduling-bd3d64895e92
1131,Lobsters,compsci,CSE,The Computer As A Communications Device,https://www.dropbox.com/s/4td8aj5gglf4qfj/The%20Computer%20As%20A%20Communications%20Device.pdf
1132,Lobsters,compsci,CSE,JVM Anatomy Park #11: Moving GC and Locality,https://shipilev.net/jvm-anatomy-park/11-moving-gc-locality/
1133,Lobsters,compsci,CSE,!!Con 2017: Finding Friends in High Dimensions,https://www.youtube.com/watch?v=kKRvEJrvvso
1134,Lobsters,compsci,CSE,Turing Patterns,http://www.degeneratestate.org/posts/2017/May/05/turing-patterns/
1135,Lobsters,compsci,CSE,So You Want To Write Your Own Language?,http://www.drdobbs.com/architecture-and-design/so-you-want-to-write-your-own-language/240165488
1136,Lobsters,compsci,CSE,Tree Oriented Programming,http://foswiki.cs.uu.nl/foswiki/pub/Swierstra/ResearchTalks/tree-oriented-programming-slides.pdf
1137,Lobsters,compsci,CSE,Writing correct systems in Rust with TLA+,https://github.com/spacejam/tla-rust
1138,Lobsters,compsci,CSE,New paint colors invented by neural network,http://lewisandquark.tumblr.com/post/160776374467/new-paint-colors-invented-by-neural-network
1139,Lobsters,compsci,CSE,Theoretical Computer Science Cheat Sheet,https://www.tug.org/texshowcase/cheat.pdf
1140,Lobsters,compsci,CSE,CDSChecker: A model checker for C11/C++11 atomics,http://plrg.eecs.uci.edu/software_page/42-2/
1141,Lobsters,compsci,CSE,Cuckoo Filter: a probabilistic datastructure for set membership queries,https://github.com/pawandubey/cuckoo_filter
1142,Lobsters,compsci,CSE,It’s Worth It: Leaving a Full-time Software Development Job at 18 to Learn Computer Science,https://themission.co/its-worth-it-a2cd7125ea98
1143,Lobsters,compsci,CSE,Your tl;dr by an ai: a deep reinforced model for abstractive summarization,https://metamind.io/research/your-tldr-by-an-ai-a-deep-reinforced-model-for-abstractive-summarization
1144,Lobsters,compsci,CSE,"Eprover — a free, efficient automatic theorem prover",https://wwwlehre.dhbw-stuttgart.de/~sschulz/E/E.html
1145,Lobsters,compsci,CSE,Announcing SyntaxNet: The World’s Most Accurate Parser Goes Open Source,https://research.googleblog.com/2016/05/announcing-syntaxnet-worlds-most.html
1146,Lobsters,compsci,CSE,Writing a damn fast hash table with tiny memory footprints,http://www.idryman.org/blog/2017/05/03/writing-a-damn-fast-hash-table-with-tiny-memory-footprints/
1147,Lobsters,compsci,CSE,"RTFM-core - Reactive, real-time, concurrency-safe language for IoT apps",https://www.diva-portal.org/smash/get/diva2:1013248/FULLTEXT01.pdf
1148,Lobsters,compsci,CSE,"A program that accepts exactly any desired finite set, in the right universe",http://jdh.hamkins.org/a-program-that-accepts-any-desired-finite-set-in-the-right-universe/
1149,Lobsters,compsci,CSE,A Better Software Engineering Course (2014),http://third-bit.com/2014/10/02/a-better-software-engineering-course.html
1150,Lobsters,compsci,CSE,"Alms - Sound, ML-like Language with Affine Types (2011)",http://users.eecs.northwestern.edu/~jesse/pubs/alms/
1151,Lobsters,compsci,CSE,Does Computational Complexity Restrict Artificial Intelligence (AI) and Machine Learning?,https://www.youtube.com/watch?v=p64CMGvKneQ
1152,Lobsters,compsci,CSE,How do we tell truths that might hurt? (Edsger Dijkstra),http://www.cs.virginia.edu/~evans/cs655/readings/ewd498.html
1153,Lobsters,compsci,CSE,LLDB: NetBSD Process Plugin enhancements,http://blog.netbsd.org/tnf/entry/lldb_netbsd_process_plugin_enhancements
1154,Lobsters,compsci,CSE,Identifying Almost Identical Files Using Contrxt Triggered Piecewise Hashing,http://dfrws.org/sites/default/files/session-files/paper-identifying_almost_identical_files_using_context_triggered_piecewise_hashing.pdf
1155,Lobsters,compsci,CSE,The Theory Behind Mp3 (2002),https://www.mp3-tech.org/programmer/docs/mp3_theory.pdf
1156,Lobsters,compsci,CSE,Six programming paradigms that will change how you think about coding,http://www.ybrikman.com/writing/2014/04/09/six-programming-paradigms-that-will/
1157,Lobsters,compsci,CSE,A High Performance ASIC for Cellular Automata (CA) Applications,http://www.smohanty.org/Publications_Conferences/2006/MohantyICIT2006.pdf
1158,Lobsters,compsci,CSE,Information Effects,http://dl.acm.org/authorize.cfm?key=6548200
1159,Lobsters,compsci,CSE,Computation and Truth,http://fexpr.blogspot.com/2015/05/computation-and-truth.html
1160,Lobsters,compsci,CSE,Proposal for a CompCert Superoptimizer,https://blog.regehr.org/archives/496
1161,Lobsters,compsci,CSE,Precise Verification of C Programs (2014) (dissertation),https://www.cs.ox.ac.uk/people/matt.lewis/thesis.pdf
1162,Lobsters,compsci,CSE,Common Lisp Standard Draft,http://cvberry.com/tech_writings/notes/common_lisp_standard_draft.html
1163,Lobsters,compsci,CSE,Typing nix: Gradual types and annotations,https://typing-nix.regnat.ovh/posts/gradual_and_annotations.html
1164,Lobsters,compsci,CSE,A dive into spatial search algorithms,https://medium.com/@agafonkin/a-dive-into-spatial-search-algorithms-ebd0c5e39d2a
1165,Lobsters,compsci,CSE,"DSL Engineering: Designing, Implementing and Using Domain-Specific Languages",http://voelter.de/data/books/markusvoelter-dslengineering-1.0.pdf
1166,Lobsters,compsci,CSE,Building Accurate Shipment Schedules: A Sorted Affair,https://flexport.engineering/building-accurate-shipment-timelines-a-sorted-affair-7ed25c8457c9
1167,Lobsters,compsci,CSE,Introduction to programming with dependent types in Scala,https://stepik.org/course/ThCS-Introduction-to-programming-with-dependent-types-in-Scala-2294/
1168,Lobsters,compsci,CSE,Dynamic Storage Allocation: A Survey and Critical Review (1995),http://www.cs.northwestern.edu/~pdinda/ics-s05/doc/dsa.pdf
1169,Lobsters,compsci,CSE,A Logical Relation for Monadic Encapsulation of State,http://iris-project.org/pdfs/runST.pdf
1170,Lobsters,compsci,CSE,Minimal and clean example implementations of data structures and algorithms in Python,https://github.com/keon/algorithms
1171,Lobsters,compsci,CSE,Predicting Financial Crime: Augmenting the Predictive Policing Arsenal,https://whitecollar.thenewinquiry.com/static/whitepaper.pdf
1172,Lobsters,compsci,CSE,"PL for SE, Part 1: “Programming Languages”",https://taliasplse.wordpress.com/2017/04/24/pl-for-se-part-1-programming-languages/
1173,Lobsters,compsci,CSE,Crates You Should Know: Rust Language Service,http://www.newrustacean.com/show_notes/crates_you_should_know/_3/index.html
1174,Lobsters,compsci,CSE,Glob Matching Can Be Simple And Fast Too,https://research.swtch.com/glob
1175,Lobsters,compsci,CSE,TCP/IP vs RINA (2013),http://www.martingeddes.com/think-tank/network-architecture-research-tcp-ip-vs-rina/
1176,Lobsters,compsci,CSE,Probablistic Graphical Models,https://ermongroup.github.io/cs228-notes/
1177,Lobsters,compsci,CSE,Massively reducing MoarVM Fixed Size Allocator contention,https://6guts.wordpress.com/2017/04/22/massively-reducing-moarvm-fixed-size-allocator-contention/
1178,Lobsters,compsci,CSE,Lazy I/O and graphs: Winterfell to King's Landing,https://jaspervdj.be/posts/2017-01-17-lazy-io-graphs.html
1179,Lobsters,compsci,CSE,An Empirical Study on the Correctness of Formally Verified Distributed Systems,https://homes.cs.washington.edu/~pfonseca/papers/eurosys2017-dsbugs.pdf
1180,Lobsters,compsci,CSE,The Early History Of Smalltalk,http://worrydream.com/EarlyHistoryOfSmalltalk
1181,Lobsters,compsci,CSE,Swift Enums Are “sum” Types. That Makes Them Very Interesting,http://mislavjavor.com//2017-04-19/Swift-enums-are-sum-types.-That-makes-them-very-interesting/
1182,Lobsters,compsci,CSE,Cache eviction: when are randomized algorithms better than LRU?,https://danluu.com/2choices-eviction/
1183,Lobsters,compsci,CSE,The Y Combinator in Six Steps,http://ebzzry.io/en/y/
1184,Lobsters,compsci,CSE,Daala demo pages,https://people.xiph.org/~xiphmont/demo/
1185,Lobsters,compsci,CSE,Taking Hash Tables Off The Shelf,https://medium.com/basecs/taking-hash-tables-off-the-shelf-139cbf4752f0
1186,Lobsters,compsci,CSE,OpenGL PBR,https://learnopengl.com/#!PBR/Theory
1187,Lobsters,compsci,CSE,Rope Science - An article series about advanced computer science concepts used in the Xi editor,https://github.com/google/xi-editor/tree/master/doc/rope_science
1188,Lobsters,compsci,CSE,How to Quantify (and Fight) Gerrymandering,https://www.quantamagazine.org/20170404-gerrymandering-math-standard/
1189,Lobsters,compsci,CSE,"A Scope Safe Universe of Syntaxes with Binding, Their Semantics and Proofs",http://gallais.github.io/pdf/draft_fscd17.pdf
1190,Lobsters,compsci,CSE,Bayesian networks and conditional independence,https://kaushikghose.wordpress.com/2017/04/13/bayesian-networks-and-conditional-independence/
1191,Lobsters,compsci,CSE,A living mesoscopic cellular automaton made of skin scales,http://www.nature.com/nature/journal/v544/n7649/full/nature22031.html
1192,Lobsters,compsci,CSE,OpenBSD imports new strstr() implementation from musl libc by Rich Felker,http://cvsweb.openbsd.org/cgi-bin/cvsweb/src/lib/libc/string/strstr.c?rev=1.7&content-type=text/x-cvsweb-markup
1193,Lobsters,compsci,CSE,On Verification for System Configurations Languages,https://www.youtube.com/watch?v=sjJxirqwXSE
1194,Lobsters,compsci,CSE,Leibniz: A digital scientific notation,https://github.com/khinsen/leibniz
1195,Lobsters,compsci,CSE,Mind Map of Knowledge and Study Plan for Learning Anything,https://github.com/nikitavoloboev/knowledge-map
1196,Lobsters,compsci,CSE,How to fake a sophisticated knowledge of wine with Markov Chains,http://www.onthelambda.com/2014/02/20/how-to-fake-a-sophisticated-knowledge-of-wine-with-markov-chains/
1197,Lobsters,compsci,CSE,Visual explanation of the last Google Codejam 2017 question,https://asrp.github.io/blog/gcj_qual2017
1198,Lobsters,compsci,CSE,The Unreasonable Ineffectiveness of Machine Learning in Computer Systems Research,https://www.sigarch.org/the-unreasonable-ineffectiveness-of-machine-learning-in-computer-systems-research/
1199,Lobsters,compsci,CSE,"Michael Kearns, Machine Learning and Social Norms",https://www.youtube.com/watch?v=lRIg_oMNF_c
1200,Lobsters,compsci,CSE,Understanding the Basis of the Kalman Filter,http://www.cl.cam.ac.uk/~rmf25/papers/Understanding%20the%20Basis%20of%20the%20Kalman%20Filter.pdf
1201,Lobsters,compsci,CSE,Curated list of Sentiment Analysis methods/implementations for scholars and developers alike,https://github.com/xiamx/awesome-sentiment-analysis
1202,Lobsters,compsci,CSE,Top Five Results of the Past 50 Years of Programming Languages Research,http://prl.ccs.neu.edu/blog/2017/04/04/top-five-results-of-the-past-50-years-of-programming-languages-research/
1203,Lobsters,compsci,CSE,In Which Our Protagonist Learns The Importance Of The Base Case,http://www.scq.ubc.ca/quarterly013/0103stripper.html
1204,Lobsters,compsci,CSE,The Algebraic Analog of P vs NP,https://samidavies.wordpress.com/2017/04/02/the-algebraic-analog-of-p-vs-np/
1205,Lobsters,compsci,CSE,"No Ifs, Ands, or Buts: Uncovering the Simplicity of Conditionals",http://www.subtext-lang.org/OOPSLA07.pdf
1206,Lobsters,compsci,CSE,PathNet: Evolution Channels Gradient Descent in Super Neural Networks,https://medium.com/@thoszymkowiak/deepmind-just-published-a-mind-blowing-paper-pathnet-f72b1ed38d46
1207,Lobsters,compsci,CSE,On The Turing Completeness of PowerPoint,https://www.youtube.com/watch?v=uNjxe8ShM-8
1208,Lobsters,compsci,CSE,On the Impossibility of Supersized Machines,https://philpapers.org/archive/GAROTI-3.pdf
1209,Lobsters,compsci,CSE,Myers diff in linear space: part 1,https://blog.jcoglan.com/2017/03/22/myers-diff-in-linear-space-part-1/
1210,Lobsters,compsci,CSE,"Compiling C to printable x86, to make an executable research paper",https://www.youtube.com/watch?v=LA_DrBwkiJA
1211,Lobsters,compsci,CSE,Combinator Recipes for Working With Objects in JavaScript,http://raganwald.com/2012/12/01/combinators-in-js.html
1212,Lobsters,compsci,CSE,Pratt Parsing Index and Updates,http://www.oilshell.org/blog/2017/03/31.html
1213,Lobsters,compsci,CSE,Tacotron: A Fully End-to-End Text-To-Speech Synthesis Model,https://arxiv.org/abs/1703.10135
1214,Lobsters,compsci,CSE,An Interview With Edsger W. Dijkstra,http://cacm.acm.org/magazines/2010/8/96632-an-interview-with-edsger-w-dijkstra/fulltext
1215,Lobsters,compsci,CSE,A beginner's guide to Big O notation (2009),https://rob-bell.net/2009/06/a-beginners-guide-to-big-o-notation
1216,Lobsters,compsci,CSE,OS Hardening Principles,http://etutorials.org/Linux+systems/secure+linux-based+servers/Chapter+3.+Hardening+Linux/Section+3.1.+OS+Hardening+Principles/
1217,Lobsters,compsci,CSE,Defeating AI image recognition,https://arxiv.org/pdf/1610.08401v1.pdf
1218,Lobsters,compsci,CSE,Bifurcan: impure functional data structures,https://github.com/lacuna/bifurcan
1219,Lobsters,compsci,CSE,Certifying a File System Using Crash Hoare Logic: Correctness in the Presence of Crashes,http://cacm.acm.org/magazines/2017/4/215044-certifying-a-file-system-using-crash-hoare-logic/fulltext
1220,Lobsters,compsci,CSE,How and why to learn about data structures,http://www.drmaciver.com/2017/03/how-and-why-to-learn-about-data-structures/
1221,Lobsters,compsci,CSE,Probabilistic Programming Summer School 2017,http://ppaml.galois.com/wiki/wiki/SummerSchools/2017/Announcement
1222,Lobsters,compsci,CSE,Quick tips for reducing the cognitive load of your code,https://hackernoon.com/quick-tips-for-reducing-the-cognitive-load-of-your-code-bb75d43b5676
1223,Lobsters,compsci,CSE,Replication Under Scalable Hashing,http://www.ssrc.ucsc.edu/papers/honicky-ipdps04.pdf
1224,Lobsters,compsci,CSE,jor1k: OpenRISC OR1K Javascript Emulator Running Linux With Network Support,http://s-macke.github.io/jor1k/demos/main.html
1225,Lobsters,compsci,CSE,Experiments in Handwriting Generation with a Neural Network,http://distill.pub/2016/handwriting
1226,Lobsters,compsci,CSE,Attention and Augmented Recurrent Neural Networks (2016),http://distill.pub/2016/augmented-rnns
1227,Lobsters,compsci,CSE,The 1960's elegance behind go's regexp,https://docs.google.com/presentation/d/1CwgyzSoz5lVFrgTWb67_ar5kkidW2crOItBOnxRH9uI/mobilepresent?slide=id.gcb9a0b074_1_0
1228,Lobsters,compsci,CSE,Beautiful Online SICP,http://sarabander.github.io/sicp/
1229,Lobsters,compsci,CSE,"Distill: a visual, interactive journal for machine learning research emphasizing human understanding",http://colah.github.io/posts/2017-03-Distill/
1230,Lobsters,compsci,CSE,"Zero Knowledge Proofs: An illustrated primer, Part 2",https://blog.cryptographyengineering.com/2017/01/21/zero-knowledge-proofs-an-illustrated-primer-part-2/
1231,Lobsters,compsci,CSE,ATRAC: Adaptive Transform Acoustic Coding for MiniDisc (1992)`,http://minidisc.org/aes_atrac.html
1232,Lobsters,compsci,CSE,Snowball,http://snowballstem.org/
1233,Lobsters,compsci,CSE,The Noisiest Block in the Neighborhood: Analyzing NYC Data with Mongolite,https://emptysqua.re/blog/analyze-noise-complaints-r-mongodb-mongolite/
1234,Lobsters,compsci,CSE,Ode to a Vyukov Queue,https://int08h.com/post/ode-to-a-vyukov-queue/
1235,Lobsters,compsci,CSE,Where Did Vue.js Come From?,https://www.joezimjs.com/javascript/where-did-vuejs-come-from/
1236,Lobsters,compsci,CSE,Patent US9038075 - Batch execution of system calls in an operating system,https://www.google.com/patents/US9038075
1237,Lobsters,compsci,CSE,"NSA, DOE say China's supercomputing advances put U.S. at risk",http://www.computerworld.com/article/3180984/high-performance-computing/spy-agency-doe-see-china-nearing-supercomputing-leadership.html
1238,Lobsters,compsci,CSE,Build a digital clock in Conway's Game of Life,http://codegolf.stackexchange.com/questions/88783/build-a-digital-clock-in-conways-game-of-life/111932
1239,Lobsters,compsci,CSE,Teach Yourself Computer Science,https://teachyourselfcs.com
1240,Lobsters,compsci,CSE,Playing the Game with PLT Redex,https://www.leafac.com/prose/playing-the-game-with-plt-redex/
1241,Lobsters,compsci,CSE,Elsa: a lightweight proof-checker,https://github.com/ucsd-progsys/elsa/blob/master/README.md
1242,Lobsters,compsci,CSE,Probabilistic Data Structures for Web Analytics and Data Mining,https://highlyscalable.wordpress.com/2012/05/01/probabilistic-structures-web-analytics-data-mining/
1243,Lobsters,compsci,CSE,An introduction to video coding,http://people.xiph.org/~tterribe/pubs/lca2012/auckland/intro_to_video1.pdf
1244,Lobsters,compsci,CSE,Problem Solving with Algorithms and Data Structures using Python,http://interactivepython.org/runestone/static/pythonds/index.html
1245,Lobsters,compsci,CSE,The mythology of programming language ideas,http://tomasp.net/blog/2017/programming-mythology/
1246,Lobsters,compsci,CSE,Stitch Fix Algorithms Tour,http://algorithms-tour.stitchfix.com/
1247,Lobsters,compsci,CSE,Hypothesis for Computer Science Researchers,http://hypothesis.works/articles/hypothesis-for-researchers/
1248,Lobsters,compsci,CSE,Interesting Theoretical CS videos,http://cstheory.stackexchange.com/questions/1198/what-videos-should-everybody-watch
1249,Lobsters,compsci,CSE,Living with Robots,https://www.samharris.org/podcast/item/living-with-robots
1250,Lobsters,compsci,CSE,Better Compression with Zstandard,http://gregoryszorc.com/blog/2017/03/07/better-compression-with-zstandard/
