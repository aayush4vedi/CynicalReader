ID,Source,Tag_Code,Tag_Name,Title,Url,ProcessdedTitle,WeightedContent,Content
1,Lobsters,education,Education,Ray Tracing in One Weekend,https://raytracing.github.io/books/RayTracingInOneWeekend.html,ray tracing one weekend,,clamp b n listing writecolorclamped colorh multisample writecolor function main also changed c highlight include camerah c int main image const auto aspectratio const int imagewidth const int imageheight staticcast imagewidth aspectratio c highlight const int samplesperpixel c world hittablelist world worldadd makeshared worldadd makeshared camera c highlight camera cam c render std cout imagewidth imageheight int j j j std cerr rscanlines remaining j std flush int imagewidth c highlight color pixelcolor int samplesperpixel auto u randomdouble auto v j randomdouble ray r camgetray u v pixelcolor raycolor r world writecolor std cout pixelcolor samplesperpixel c std cerr ndonen listing mainmultisample maincc rendering multisampled pixel zooming image produced see difference edge pixel image antialiasng classpixel diffuse material object multiple ray per pixel make realistic looking material start diffuse matte material one question whether mix match geometry material assign material multiple sphere vice versa geometry material tightly bound could useful procedural object geometry material linked go separate usual renderers aware limitation simple diffuse material diffuse object emit light merely take color surroundings modulate intrinsic color light reflects diffuse surface direction randomized send three ray crack two diffuse surface different random behavior figure lightbounce light ray bounce also might absorbed rather reflected darker surface likely absorption dark really algorithm randomizes direction produce surface look matte one simplest way turn exactly correct ideal diffuse surface used lazy hack approximates mathematically ideal lambertian reader vassillen chizhov proved lazy hack indeed lazy hack inaccurate correct representation ideal lambertian nt much work presented end chapter two unit radius sphere tangent hit point p surface two sphere center mathbf p mathbf n mathbf p mathbf n mathbf n normal surface sphere center mathbf p mathbf n considered inside surface whereas sphere center mathbf p mathbf n considered outside surface select tangent unit radius sphere side surface ray origin pick random point mathbf inside unit radius sphere send ray hit point mathbf p random point mathbf vector mathbf mathbf p figure randvec generating random diffuse bounce ray need way pick random point unit radius sphere use usually easiest algorithm rejection method first pick random point unit cube x z range reject point try point outside sphere c class public inline static random return randomdouble randomdouble randomdouble inline static random double min double max return randomdouble min max randomdouble min max randomdouble min max listing vecrandutil random utility function c randominunitsphere true auto p random plengthsquared continue return p listing randominunitsphere randominunitsphere function update raycolor function use new random direction generator c color raycolor const ray r const hittable world hitrecord rec worldhit r infinity rec c highlight target recp recnormal randominunitsphere return raycolor ray recp target recp world c unitdirection unitvector rdirection auto unitdirectiony return color color listing raycolorrandomunit maincc raycolor using random ray direction limiting number child ray one potential problem lurking notice raycolor function recursive stop recursing fails hit anything case however may long time long enough blow stack guard let limit maximum recursion depth returning light contribution maximum depth c highlight color raycolor const ray r const hittable world int depth c hitrecord rec c highlight exceeded ray bounce limit light gathered depth return color c worldhit r infinity rec target recp recnormal randominunitsphere c highlight return raycolor ray recp target recp world c unitdirection unitvector rdirection auto unitdirectiony return color color int main image const auto aspectratio const int imagewidth const int imageheight staticcast imagewidth aspectratio const int samplesperpixel c highlight const int maxdepth c render std cout imagewidth imageheight int j j j std cerr rscanlines remaining j std flush int imagewidth color pixelcolor int samplesperpixel auto u randomdouble auto v j randomdouble ray r camgetray u v c highlight pixelcolor raycolor r world maxdepth c writecolor std cout pixelcolor samplesperpixel std cerr ndonen listing raycolordepth maincc raycolor depth limiting give u image first render diffuse sphere classpixel using gamma correction accurate color intensity note shadowing sphere picture dark sphere absorb half energy bounce reflector see shadow worry fix sphere look pretty light real life light grey reason almost image viewer assume image gamma corrected meaning value transform stored byte many good reason purpose need aware first approximation use gamma mean raising color power simple case squareroot c void writecolor std ostream color pixelcolor int samplesperpixel auto r pixelcolorx auto g pixelcolory auto b pixelcolorz c highlight divide color number sample gammacorrect auto scale samplesperpixel r sqrt scale r g sqrt scale g b sqrt scale b c write translated value color component staticcast clamp r staticcast clamp g staticcast clamp b n listing writecolorgamma colorh writecolor gamma correction yield light grey desire image diffuse sphere gamma correction classpixel fixing shadow acne also subtle bug reflected ray hit object reflecting exactly instead whatever floating point approximation sphere intersector give u need ignore hit near zero c worldhit r infinity rec listing reflecttolerance maincc calculating reflected ray origin tolerance get rid shadow acne problem yes really called true lambertian reflection rejection method presented produce random point unit ball offset along surface normal corresponds picking direction hemisphere high probability close normal lower probability scattering ray grazing angle distribution scale phi phi angle normal useful since light arriving shallow angle spread larger area thus lower contribution final color however interested lambertian distribution distribution co phi true lambertian probability higher ray scattering close normal distribution uniform achieved picking point surface unit sphere offset along surface normal picking point sphere achieved picking point unit ball normalizing c randomunitvector auto randomdouble pi auto z randomdouble auto r sqrt z z return r co r sin z listing randomunitvector randomunitvector function figure randunitvec generating random unit vector randomunitvector dropin replacement existing randominunitsphere function c color raycolor const ray r const hittable world int depth hitrecord rec exceeded ray bounce limit light gathered depth return color worldhit r infinity rec c highlight target recp recnormal randomunitvector c return raycolor ray recp target recp world unitdirection unitvector rdirection auto unitdirectiony return color color listing raycolorunitsphere maincc raycolor replacement diffuse rendering get similar image image correct rendering lambertian sphere classpixel hard tell difference two diffuse method given scene two sphere simple able notice two important visual difference shadow le pronounced change sphere lighter appearance change change due uniform scattering light ray fewer ray scattering toward normal mean diffuse object appear lighter light bounce toward camera shadow le light bounce straightup part larger sphere directly underneath smaller sphere brighter alternative diffuse formulation initial hack presented book lasted long time proven incorrect approximation ideal lambertian diffuse big reason error persisted long difficult mathematically prove probability distribution incorrect intuitively explain co phi distribution desirable would look like lot common everyday object perfectly diffuse visual intuition object behave light poorly formed interest learning including intuitive easy understand diffuse method two method random vector first random length unit length offset hit point normal may immediately obvious vector displaced normal intuitive approach uniform scatter direction angle away hit point dependence angle normal many first raytracing paper used diffuse method adopting lambertian diffuse c randominhemisphere const normal inunitsphere randominunitsphere dot inunitsphere normal hemisphere normal return inunitsphere else return inunitsphere listing randominhemisphere randominhemisphere normal function plugging new formula raycolor function c color raycolor const ray r const hittable world int depth hitrecord rec exceeded ray bounce limit light gathered depth return color worldhit r infinity rec c highlight target recp randominhemisphere recnormal c return raycolor ray recp target recp world unitdirection unitvector rdirection auto unitdirectiony return color color listing raycolorhemisphere maincc raycolor hemispherical scattering give u following image image rendering diffuse sphere hemispherical scattering classpixel scene become complicated course book encouraged switch different diffuse renderers presented scene interest contain disproportionate amount diffuse material gain valuable insight understanding effect different diffuse method lighting scene metal abstract class material want different object different material design decision could universal material lot parameter different material type zero parameter bad approach could abstract material class encapsulates behavior fan latter approach program material need two thing produce scattered ray say absorbed incident ray scattered say much ray attenuated suggests abstract class c ifndef materialh define materialh include rtweekendh struct hitrecord class material public virtual bool scatter const ray rin const hitrecord rec color attenuation ray scattered const endif listing materialinitial materialh material class data structure describe rayobject intersection hitrecord avoid bunch argument stuff whatever info want use argument instead matter taste hittables material need know circularity reference c need alert compiler pointer class class material hittable class c c highlight include rtweekendh include rayh class material c struct hitrecord p normal c highlight sharedptr matptr c double bool frontface inline void setfacenormal const ray r const outwardnormal frontface dot rdirection outwardnormal normal frontface outwardnormal outwardnormal listing hitwithmaterial hittableh hit record added material pointer set material tell u ray interact surface hitrecord way stuff bunch argument struct send group ray hit surface particular sphere example material pointer hitrecord set point material pointer sphere given set main start raycolor routine get hitrecord call member function material pointer find ray scattered achieve must reference material sphere class returned within hitrecord see highlighted line c class sphere public hittable public sphere c highlight sphere cen double r sharedptr center cen radius r matptr c virtual bool hit const ray r double tmin double tmax hitrecord rec const override public center double radius c highlight sharedptr matptr c bool sphere hit const ray r double tmin double tmax hitrecord rec const oc rorigin center auto rdirection lengthsquared auto halfb dot oc rdirection auto c oclengthsquared radius radius auto discriminant halfb halfb c discriminant auto root sqrt discriminant auto temp halfb root temp tmax temp tmin rect temp recp rat rect outwardnormal recp center radius recsetfacenormal r outwardnormal c highlight recmatptr matptr c return true temp halfb root temp tmax temp tmin rect temp recp rat rect outwardnormal recp center radius recsetfacenormal r outwardnormal c highlight recmatptr matptr c return true return false listing spherematerial sphereh raysphere intersection added material information modeling light scatter reflectance lambertian diffuse case already either scatter always attenuate reflectance r scatter attenuation absorb fraction ray could mixture strategy lambertian material get simple class c class lambertian public material public lambertian const color albedo virtual bool scatter const ray rin const hitrecord rec color attenuation ray scattered const override scatterdirection recnormal randomunitvector scattered ray recp scatterdirection attenuation albedo return true public color albedo listing lambertianinitial materialh lambertian material class note could well scatter probability p attenuation albedop choice mirrored light reflection smooth metal ray randomly scattered key math ray get reflected metal mirror vector math friend figure reflection ray reflection reflected ray direction red mathbf v b design mathbf n unit vector mathbf v may length mathbf b mathbf v cdot mathbf n mathbf v point need minus sign yielding c reflect const v const n return v dot v n n listing reflection function metal material reflects ray using formula c class metal public material public metal const color albedo virtual bool scatter const ray rin const hitrecord rec color attenuation ray scattered const override reflected reflect unitvector rindirection recnormal scattered ray recp reflected attenuation albedo return dot scattereddirection recnormal public color albedo listing metalmaterial materialh metal material reflectance function need modify raycolor function use c color raycolor const ray r const hittable world int depth hitrecord rec exceeded ray bounce limit light gathered depth return color worldhit r infinity rec c highlight ray scattered color attenuation recmatptr scatter r rec attenuation scattered return attenuation raycolor scattered world return color c unitdirection unitvector rdirection auto unitdirectiony return color color listing raycolorscatter maincc ray color scattered reflectance scene metal sphere let add metal sphere scene c c highlight include materialh c int main image const auto aspectratio const int imagewidth const int imageheight staticcast imagewidth aspectratio const int samplesperpixel const int maxdepth world hittablelist world c highlight auto materialground makeshared color auto materialcenter makeshared color auto materialleft makeshared color auto materialright makeshared color worldadd makeshared materialground worldadd makeshared materialcenter worldadd makeshared materialleft worldadd makeshared materialright c camera camera cam render std cout imagewidth imageheight int j j j std cerr rscanlines remaining j std flush int imagewidth color pixelcolor int samplesperpixel auto u randomdouble auto v j randomdouble ray r camgetray u v pixelcolor raycolor r world maxdepth writecolor std cout pixelcolor samplesperpixel std cerr ndonen listing scenewithmetal maincc scene metal sphere give image shiny metal classpixel fuzzy reflection also randomize reflected direction using small sphere choosing new endpoint ray figure reflectfuzzy generating fuzzed reflection ray bigger sphere fuzzier reflection suggests adding fuzziness parameter radius sphere zero perturbation catch big sphere grazing ray may scatter surface surface absorb c class metal public material public c highlight metal const color double f albedo fuzz f f c virtual bool scatter const ray rin const hitrecord rec color attenuation ray scattered const override reflected reflect unitvector rindirection recnormal c highlight scattered ray recp reflected fuzz randominunitsphere c attenuation albedo return dot scattereddirection recnormal public color albedo c highlight double fuzz c listing metalfuzz materialh metal material fuzziness try adding fuzziness metal c int main world auto materialground makeshared color auto materialcenter makeshared color c highlight auto materialleft makeshared color auto materialright makeshared color c listing metalfuzzspheres maincc metal sphere fuzziness image fuzzed metal classpixel dielectric clear material water glass diamond dielectric light ray hit split reflected ray refracted transmitted ray handle randomly choosing reflection refraction generating one scattered ray per interaction refraction hardest part debug refracted ray usually first light refract refraction ray project tried put two glass ball scene got told right wrong yet soon image glass first classpixel right glass ball look odd real life right world flipped upside weird black stuff printed ray straight middle image clearly wrong often job snell law refraction described snell law eta cdot sintheta eta cdot sintheta theta theta angle normal eta eta pronounced eta eta prime refractive index typically air glass diamond geometry figure refraction ray refraction order determine direction refracted ray solve sintheta sintheta frac eta eta cdot sintheta refracted side surface refracted ray mathbf r normal mathbf n exists angle theta split mathbf r part ray perpendicular mathbf n parallel mathbf n mathbf r mathbf r bot mathbf r parallel solve mathbf r bot mathbf r parallel get mathbf r bot frac eta eta mathbf r costheta mathbf n mathbf r parallel sqrt mathbf r bot mathbf n go ahead prove want treat fact move rest book require understand proof still need solve costheta well known dot product two vector explained term cosine angle mathbf cdot mathbf b mathbf mathbf b costheta restrict mathbf mathbf b unit vector mathbf cdot mathbf b costheta rewrite mathbf r bot term known quantity mathbf r bot frac eta eta mathbf r mathbf r cdot mathbf n mathbf n combine back together write function calculate mathbf r c refract const uv const n double etaioveretat auto costheta dot uv n routperp etaioveretat uv costheta n routparallel sqrt fabs routperplengthsquared n return routperp routparallel listing refract refraction function dielectric material always refracts c class dielectric public material public dielectric double ri refidx ri virtual bool scatter const ray rin const hitrecord rec color attenuation ray scattered const override attenuation color double etaioveretat recfrontface refidx refidx unitdirection unitvector rindirection refracted refract unitdirection recnormal etaioveretat scattered ray recp refracted return true double refidx listing dielectric materialh dielectric material class always refracts update scene change left center sphere glass c auto materialground makeshared color c highlight auto materialcenter makeshared auto materialleft makeshared c auto materialright makeshared color listing twoglass maincc changing left center sphere glass give u following result image glass sphere always refracts classpixel total internal reflection definitely nt look right one troublesome practical issue ray material higher refractive index real solution snell law thus refraction possible refer back snell law derivation sintheta sintheta frac eta eta cdot sintheta ray inside glass outside air eta eta sintheta frac cdot sintheta value sintheta greater frac cdot sintheta equality two side equation broken solution exist solution exist glass refract therefore must reflect ray c etaioveretat sintheta must reflect else refract listing dielectric materialh determining ray refract light reflected practice usually inside solid object called total internal reflection sometimes waterair boundary act perfect mirror submerged solve sintheta using trigonometric quality sintheta sqrt costheta mathbf r cdot mathbf n c double costheta fmin dot unitdirection recnormal double sintheta sqrt costheta costheta etaioveretat sintheta must reflect else refract listing dielectric materialh determining ray refract dielectric material always refracts possible c class dielectric public material public dielectric double ri refidx ri virtual bool scatter const ray rin const hitrecord rec color attenuation ray scattered const override attenuation color double etaioveretat recfrontface refidx refidx unitdirection unitvector rindirection c highlight double costheta fmin dot unitdirection recnormal double sintheta sqrt costheta costheta etaioveretat sintheta reflected reflect unitdirection recnormal scattered ray recp reflected return true c refracted refract unitdirection recnormal etaioveretat scattered ray recp refracted return true public double refidx listing dielectric materialh dielectric material class reflection attenuation always glass surface absorbs nothing try parameter c auto materialground makeshared color auto materialcenter makeshared color auto materialleft makeshared auto materialright makeshared color listing scenedielectric maincc scene dielectric shiny sphere get image glass sphere sometimes refracts classpixel schlick approximation real glass reflectivity varies angle look window steep angle becomes mirror big ugly equation almost everybody us cheap surprisingly accurate polynomial approximation christophe schlick c double schlick double cosine double refidx auto return pow cosine listing schlick materialh schlick approximation yield full glass material c class dielectric public material public dielectric double ri refidx ri virtual bool scatter const ray rin const hitrecord rec color attenuation ray scattered const override attenuation color double etaioveretat recfrontface refidx refidx unitdirection unitvector rindirection double costheta fmin dot unitdirection recnormal double sintheta sqrt costheta costheta etaioveretat sintheta reflected reflect unitdirection recnormal scattered ray recp reflected return true c highlight double reflectprob schlick costheta etaioveretat randomdouble reflectprob reflected reflect unitdirection recnormal scattered ray recp reflected return true c refracted refract unitdirection recnormal etaioveretat scattered ray recp refracted return true public double refidx listing glass materialh full glass material modeling hollow glass sphere interesting easy trick dielectric sphere note use negative radius geometry unaffected surface normal point inward used bubble make hollow glass sphere c worldadd makeshared materialground worldadd makeshared materialcenter worldadd makeshared materialleft c highlight worldadd makeshared materialleft c worldadd makeshared materialright listing scenehollowglass maincc scene hollow glass sphere give image hollow glass sphere classpixel positionable camera camera like dielectric pain debug always develop mine incrementally first let allow adjustable field view fov angle see portal since image square fov different horizontally vertically always use vertical fov also usually specify degree change radian inside constructor matter personal taste camera viewing geometry first keep ray coming origin heading z plane could make z plane whatever long made h ratio distance setup figure camviewgeom camera viewing geometry implies h tan frac theta camera becomes c class camera public c highlight camera double vfov vertical fieldofview degree double aspectratio auto theta degreestoradians vfov auto h tan auto viewportheight h auto viewportwidth aspectratio viewportheight c auto focallength origin horizontal viewportwidth vertical viewportheight lowerleftcorner origin focallength ray getray double u double v const return ray origin lowerleftcorner u horizontal v vertical origin private origin lowerleftcorner horizontal vertical listing camerafov camerah camera adjustable fieldofview fov calling camera cam aspectratio sphere c int main world c highlight auto r co hittablelist world auto materialleft makeshared color auto materialright makeshared color worldadd makeshared r r materialleft worldadd makeshared r r materialright c camera c highlight camera cam aspectratio c render std cout imagewidth imageheight int j j j listing scenewideangle maincc scene wideangle camera give image wideangle view classpixel positioning orienting camera get arbitrary viewpoint let first name point care call position place camera lookfrom point look lookat later want could define direction look instead point look also need way specify roll sideways tilt camera rotation around lookatlookfrom axis another way think even keep lookfrom lookat constant still rotate head around nose need way specify vector camera vector lie plane orthogonal view direction figure camviewdir camera view direction actually use vector want simply project onto plane get vector camera use common convention naming view vup vector couple cross product complete orthonormal basis u v w describe camera orientation figure camviewup camera view direction remember vup v w plane note like fixed camera faced z arbitrary view camera face w keep mind use world specify vup convenient naturally keep camera horizontally level decide experiment crazy camera angle c class camera public camera c highlight lookfrom lookat vup c double vfov vertical fieldofview degree double aspectratio auto theta degreestoradians vfov auto h tan auto viewportheight h auto viewportwidth aspectratio viewportheight c highlight auto w unitvector lookfrom lookat auto u unitvector cross vup w auto v cross w u origin lookfrom horizontal viewportwidth u vertical viewportheight v lowerleftcorner origin w c c highlight ray getray double double const return ray origin lowerleftcorner horizontal vertical origin c private origin lowerleftcorner horizontal vertical listing cameraorient camerah positionable orientable camera change back prior scene use new viewpoint c hittablelist world auto materialground makeshared color auto materialcenter makeshared color auto materialleft makeshared auto materialright makeshared color worldadd makeshared materialground worldadd makeshared materialcenter worldadd makeshared materialleft worldadd makeshared materialleft worldadd makeshared materialright camera cam aspectratio listing scenefreeview maincc scene alternate viewpoint get image distant view classpixel change field view c camera cam vup aspectratio listing changefieldview maincc change field view get image zooming classpixel defocus blur final feature defocus blur note photographer call depth field aware using defocus blur among friend reason defocus blur real camera need big hole rather pinhole gather light would defocus everything stick lens hole certain distance everything focus think lens way light ray coming specific point focus distance hit lens bent back single point image sensor call distance projection point plane everything perfect focus focus distance aware focus distance focal length focal length distance projection point image plane physical camera focus distance controlled distance lens filmsensor see lens move relative camera change focus may happen phone camera sensor move aperture hole control big lens effectively real camera need light make aperture bigger get defocus blur virtual camera perfect sensor never need light aperture want defocus blur thin lens approximation real camera complicated compound lens code could simulate order sensor lens aperture could figure send ray flip image computed image projected upside film graphic people however usually use thin lens approximation figure camlens camera lens model need simulate inside camera purpose rendering image outside camera would unnecessary complexity instead usually start ray lens send toward focus plane focusdist away lens everything plane perfect focus figure camfilmplane camera focus plane generating sample ray normally scene ray originate lookfrom point order accomplish defocus blur generate random scene ray originating inside disk centered lookfrom point larger radius greater defocus blur think original camera defocus disk radius zero blur ray originated disk center lookfrom c randominunitdisk true auto p randomdouble randomdouble plengthsquared continue return p listing randinunitdisk generate random point inside unit disk c class camera public camera lookfrom lookat vup double vfov vertical fieldofview degree c highlight double aspectratio double aperture double focusdist c auto theta degreestoradians vfov auto h tan auto viewportheight h auto viewportwidth aspectratio viewportheight c highlight w unitvector lookfrom lookat u unitvector cross vup w v cross w u c origin lookfrom c highlight horizontal focusdist viewportwidth u vertical focusdist viewportheight v lowerleftcorner origin focusdist w lensradius aperture c ray getray double double const c highlight rd lensradius randominunitdisk offset u rdx v rdy return ray origin offset lowerleftcorner horizontal vertical origin offset c private origin lowerleftcorner horizontal vertical c highlight u v w double lensradius c listing cameradof camerah camera adjustable depthoffield dof using big aperture c lookfrom lookat vup auto disttofocus lookfromlookat length auto aperture camera cam lookfrom lookat vup aspectratio aperture disttofocus listing scenecameradof maincc scene camera depthoffield get image sphere depthoffield classpixel next final render first let make image cover book lot random sphere c highlight hittablelist randomscene hittablelist world auto groundmaterial makeshared color worldadd makeshared groundmaterial int int b b b auto choosemat randomdouble center randomdouble b randomdouble center length sharedptr spherematerial choosemat diffuse auto albedo color random color random spherematerial makeshared albedo worldadd makeshared center spherematerial else choosemat metal auto albedo color random auto fuzz randomdouble spherematerial makeshared albedo fuzz worldadd makeshared center spherematerial else glass spherematerial makeshared worldadd makeshared center spherematerial auto makeshared worldadd makeshared auto makeshared color worldadd makeshared auto makeshared color worldadd makeshared return world c int main image c highlight const auto aspectratio const int imagewidth c const int imageheight staticcast imagewidth aspectratio c highlight const int samplesperpixel c const int maxdepth world c highlight auto world randomscene c camera c highlight lookfrom lookat c vup c highlight auto disttofocus auto aperture c camera cam lookfrom lookat vup aspectratio aperture disttofocus render std cout imagewidth imageheight int j j j listing scenefinal maincc final scene give image final scene interesting thing might note glass ball really shadow make look like floating bug see glass ball much real life also look bit strange indeed seem float cloudy day point big sphere glass ball still lot light hitting sky reordered rather blocked next step cool ray tracer next light explicitly sending shadow ray light done implicitly making object emit light biasing scattered ray toward downweighting ray cancel bias work minority favoring latter approach triangle cool model triangle form model io worst almost everybody try get somebody else code surface texture let paste image like wall paper pretty easy good thing solid texture ken perlin code online andrew kensler cool info blog volume medium cool stuff challenge software architecture favor making volume hittable interface probabilistically intersection based density rendering code even know volume method parallelism run n copy code n core different random seed average n run averaging also done hierarchically pair averaged get image pair averaged method parallelism extend well thousand core little coding fun please send cool image insert acknowledgmentsmdhtml citing book consistent citation make easier identify source location version work citing book ask try use one following form possible basic data title series ray tracing one weekend series title book ray tracing one weekend author peter shirley editor steve hollasch trevor david black versionedition date url series http raytracinggithubio url book http raytracinggithubiobooksraytracinginoneweekendhtml snippet markdown ray tracing one weekend http raytracinggithubiobooksraytracinginoneweekendhtml html ray tracing one weekend latex bibtex cite misc title ray tracing one weekend author peter shirley year month july note small texttt http raytracinggithubiobooksraytracinginoneweekendhtml url http raytracinggithubiobooksraytracinginoneweekendhtml biblatex usepackage biblatex cite online title ray tracing one weekend author peter shirley year month july url http raytracinggithubiobooksraytracinginoneweekendhtml ieee ray tracing one weekend raytracinggithubiobooksraytracinginoneweekendhtml accessed mmm dd yyyy mla ray tracing one weekend raytracinggithubiobooksraytracinginoneweekendhtml accessed dd mmm yyyy peter shirley http githubcompetershirley steve hollasch http githubcomhollasch trevor david black http githubcomtrevordblack
2,Lobsters,education,Education,The Documentation System,https://documentation.divio.com/,documentation system,documentation system system make documentation better project product team successful video presentation,documentation system grand unified theory david laing secret need understood order write good software documentation one thing called documentation four tutorial howto guide technical reference explanation represent four different purpose function require four different approach creation understanding implication help improve documentation often immensely system documentation system outlined simple comprehensive nearly universallyapplicable scheme proven practice across wide variety field application simple principle govern documentation rarely ever spelled seem secret though put principle practice make documentation better project product team successful promise video presentation prefer watch video covering topic courtesy pycon australia video
4,Lobsters,education,Education,<wbr>BlockchainCommons/Learning-Bit<wbr>coin-from-the-Command-Line</wbr></wbr>,https://github.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line,wbr blockchaincommonslearningbit wbr coinfromthecommandline wbr wbr,learning bitcoin lightning command line http githubcomchristopheraintromaccommandline table content part one preparing bitcoin status part two using bitcoincli status part three bitcoin scripting status part four using tor status part five programming rpc status appendix status part five programming rpc status part six using lightningcli status http status work progress todomd origin author copyright license readmemd ccby financial support blockchain common github sponsor btcpay server contributing contributingmd contributor license agreement question support issue credit contributingmd contributor gorazdko javier vargas jodobear reviewer gwillem sponsor responsible disclosure reporting vulnerability christophera blockchaincommonscom,learning bitcoin lightning command line learning bitcoin command line tutorial working bitcoin lightning teach direct interaction server robust secure way begin cryptocurrency work note draft progress get feedback early reviewer yet ready use tutorial assumes minimal background use command line interface many tutorial available one mac user http githubcomchristopheraintromaccommandline table content part one preparing bitcoin status finished updated part two using bitcoincli status finished updated part three bitcoin scripting status finished updated btcdeb part four using tor status finished part five programming rpc status finished though work progress additional chapter appendix status finished end polished secondedition course currently stand looking review chapter thank help support want expand course also introduce programming rpc finally talk lightning material process move line review learning finish part five programming rpc status unfinished writing libwally chapter regularizing language chapter deciding swift part six using lightningcli status unfinished requires renumbering currently listed chapter editing point assuming lightning integrated standup point need tech use pretty basic level understanding lightning verifying lightning setup knowing lightning setup setting channel using lightning generating payment request paying invoice closing channel talking lightningd c good doc one developer http status work progress learning bitcoin command line currently active development writing progress current chapter functional need updated modern version bitcoincore additional chapter also need written fill intended scope empty chapter show current plan future work plan mainly drawn old issue found todomd obviously work progress used production task completed testing auditing origin author copyright license unless otherwise noted either readmemd file header comment content repository copyright blockchain common llc licensed ccby financial support learning bitcoin command line project blockchain common proudly notforprofit social benefit corporation committed open source open development work funded entirely donation collaborative partnership people like every contribution spent building open tool technology technique sustain advance blockchain internet security infrastructure promote open web financially support development projectname project please consider becoming patron blockchain common ongoing monthly patronage github sponsor also support blockchain common bitcoins btcpay server contributing encourage public contribution issue pull request please review contributingmd detail development process contribution repository require gpg signed contributor license agreement question support opensource opendevelopment community blockchain common resource provide direct support project question problem please use repository issue feature unfortunately make promise response time company requires support use project please feel free contact u directly option may able offer contract support one contributor might able point another entity offer contractual support need credit following people directly contributed repository add name getting involved first step learning contribute contributingmd documentation additional contribution listed role name contributor go nodejs section gorazdko rust section javier vargas c java lightning tor section jodobear appendix compiling bitcoin python section reviewer glen willem gwillem sponsor blockstream corporation responsible disclosure want keep software safe everyone discovered security vulnerability appreciate help disclosing u responsible manner unfortunately able offer bug bounty time ask offer u good faith use best effort leak information harm user data developer community please give u reasonable amount time fix issue publish defraud user u process discovery promise bring legal action researcher point problem provided best follow guideline reporting vulnerability please report suspected security vulnerability private via email christophera blockchaincommonscom use email support please create publicly viewable issue suspected security vulnerability following key may used communicate sensitive information developer name fingerprint christopher allen fdfe import key running following command individual fingerprint gpg recvkeys fingerprint ensure put quote around fingerprint contain space
5,Lobsters,education,Education,"An Architecture for Community Contribution, Speed and Modularity",https://jponline.github.io/looset-landing/an-architecture/,architecture community contribution speed modularity,main page art unix programming wiki architect let option open clean architecture kickstarter campaign backend babashka lezer frontend reagent redux flux reframe treating ui finite state machine test given gherkin syntax puppeteer devcards storybook speed kickstarter looset main page video demo tool kickstarter campaign,tell opinion software architecture plan looset watch source file change show real time dependency diagram code block viewer independent filesystem check main page started work looset yet thought bit architecture believe building metaphor bad talking software prefer grow metaphor think software living organism need constant care make better decision lot rule around create software use design pattern write test first tdd model according domain first ddd behavior first bdd solid hexagonal onion architecture layer module etc value mentioned prefer understand principle reflect direction like art unix programming summary principle stated wiki influenced two idea first heard martin fowler opposing statement architect responsible making big important initial decision said something architect let option open second got reading clean architecture uncle bob point farther module business rule module work plugin ie framework database work plugins started think decision let open structure plugin maybe system maybe programming language see project becoming reality contribute kickstarter campaign asking need able work free open source software general goal writing software extensibility accretion feature become slow dangerous existent feature project grow big readability easy read understand maintainability flexibility testability decoupling way change module break system different place robust handle well unexpected error looset specific goal community contribution speed modularity backend working clojure time constant match personal development philosophy community philosophy understand people might personal preference use different stack work better specific domain reason decided write looset module independent script program called using bash instance write basic analyzer clojure using babashka let open language specific analyzer written script language could seen sort micro service architecture one could decide use python write analyzer c even integrate project lezer clojure data map part philosophy data need shared across different language even front end make sense write clojure edn extensible data notation thinking general adoption write data file json also inspired git work frontend people would agree making decision frontend different making decision backend still want maximize community contribution modularity still letting option open decided write looset view independent web component used basic html page instance write component using clojurescript reagent let open language framework support exporting web component one could decide use angular vuejs write new functionality already created web app scratch without state management system redux flux reframe know important would say important library idea main point app state global change firing event subscribe component change still investigating going use way available web component framework decision structure app state also need done like normalized possible splitting domain entity basically would write database ui model component state also computing little possible rendering phase treating ui finite state machine test like test driven development approach good test structuring dependency testable way tend write bdd style using given gherkin syntax mostly write unit test backend think unit test valuable frontend already used puppeteer write endtoend test clicking button taking screenshots etc looset use basically production like environment firing event checking result app state another strategy sometimes viewed test use way develop prototype devcards use visualize component multiple state developing tweaking app state storybook seems good alternative work web component speed project performance top priority expect work huge amount data different project main concern fast going interact big project generating large graph address problem web worker background process generating cache visualization kickstarter created campaign validate interest also able invest amount time project requires campaign asks one time contribution amount nothing changed end month reach goal looset main page video demo tool kickstarter campaign last update aug
6,Lobsters,education,Education,Nyan Sat - Satellite Communications Challenge,https://nyan-sat.com/chapter0.html,nyan sat satellite communication challenge,background click next section antenny pcb antenny pcb document part pantilt gimbal product link rtlsdr product link product link imu product link motor driver product link oled screen optional product link,background guiding crash course satellite history well around world send receive data accompanying guide though strictly required set equipment used get everything going mean recommend buying equipment nt put together kit send reasonable price though supply limited list part click request kit also sticker tshirts nt want kit right continue next section antenny antenny pcb kit custombuilt pcb kit integrates multiple part allowing connect everything together single board wiring board hardware component rb antenny project combine bluetooth wifi support channel pwm driver motor driver maximum output maximum rb antenny board easily handle movement control nyansat antenna gimbal load custom code adjust however like onboard reserved channel connector allow extend basic nyansat setup rb custom made imu module oled screen gps module rb antenny board designed using altium designer assembled inhouse pick place machine manhattan new york def con even repurpose board future project requiring microcontrollers motor driver read antenny pcb completing antenny board found way enhance board designed antenny fix bug improves functionality reliability adaptable future development hardware antenny main improvement highlight antenny antenny follows reduced pcb size breakout unused gpio pin future development fixed gpio pull bug enhanced power output servo motor driver added beidougps beitian module connector pinout pcb board information antenny general setup please review document pinouts hardware requirement part covered detail chapter feel free skip ahead every part strictly required feel free get one interest pantilt gimbal small gimbal using pointing antenna specific direction track satellite across sky found multiple place spare one selling cost without one listen geosynchronous satellite low orbit satellite whizzing across pickup area second product link rtlsdr cheapest flexible sdr available product link lot feature tiny package microcontroller software expects product link imu inertial measuring unit tell software way antenna pointing helping point precisely product link motor driver nt able drive motor directly adapter board needed product link oled screen optional super simple display getting quick feedback device product link next chapter
7,Lobsters,education,Education,"MicroBlocks: Small, Fast, Human Friendly",http://microblocks.fun/,microblocks small fast human friendly,scratch micro bit calliope mini adafruit circuit playground express nodemcu stack make microblocks special live coding multitask naturally run everywhere unplug go next step get microblocks download chromebook app run microblocks chrome edge browser run microblocks chrome edge browser note running microblocks browser activity card learn,microblocks block programming language physical computing inspired scratch run microcontrollers micro bit calliope mini adafruit circuit playground express nodemcu stack many others make microblocks special live coding microblocks live environment click block run immediately right board try command see graph sensor value real time waiting code compile download multitask naturally want display animation controling motor problem microblocks let write separate script task run time code simpler write easier understand run everywhere microblocks run many different board script portable button sensor display block behave board relevant hardware microblocks even simulates micro bit led display tft display unplug go microblocks downloads code write like program unplug board good go make game fitness app lightup clothing go wherever next step get microblocks visit download page download microblocks app window macos linux raspberry pi chromebook get chromebook app run microblocks chrome edge browser also run microblocks chrome edge browser without installing anything note allow microblocks connect board need visit chrome flag page enable experimental web platform feature flag see running microblocks browser activity card visit learn section find activity card help get started explore project involving animation colorful led sound servo motor communication remote control internet thing
8,Lobsters,education,Education,Learning Rust: Mindsets and Expectations,https://ferrous-systems.com/blog/mindsets-and-expectations/,learning rust mindset expectation,learning rust comparing rust language attachment another language serve learning rust ownership borrowing lifetime learn rust effectively people industry fascinated rust three thing learn walk try run appreciate divergence turing completeness practice patience rumor outdated refer version language longer exists ownership borrowing memorysafe stay tuned newsletter trainer,often hear rust language complex difficult learn yes language complex identified existing mindset expectation serve obstacle learning process let discus obstacle alleviate first post learning rust comparing rust language learn first programming language likely hear observation know one programming language know statement make interesting point faulty assumption also applicable set language others instance take account language know one learning language share common set concept eg variable conditionals iteration data typing function may diverge widely beyond realm common ground language divergent others faulty assumption knowing one language allows know also live widespread phenomenon engineer devotion single language oftentimes engineer consider favorite language universally superior others coupling two problem see following pattern emerge people struggle one already expert language even language feel similar rust like c c go people often attempt implement thing rust way idiomatic different language even language significantly different scope behavior eg python javascript people often attempt implement relatively complex challenge grasped core rust concept eg attempting use modify existing library attempting rewrite script largescale program learning strategy approach invalid take far without immediate success difficult motivate continue short attachment another language serve interfere learning rust unsurprisingly concept unique rust cause pain learning process eg ownership borrowing lifetime learn rust effectively tandem pattern mentioned people industry fascinated rust rust aim accomplish hesitate learn hear rumor difficult thus try conversely observed promising pattern folk spoken folk success learning rust either u internet large tend common began learning process spending time rust core concept mentor trainer could help conceptualize important part language started small building successful project slowly increasing scope new programming came significantly different domain thus nt expectation rust would compare language three thing learning rust enjoyable effective experience based pattern observed suggest keep three thing mind learn walk try run mentioned experienced programmer may attempt implement relatively complex challenge addressing core rust concept surprising reasonable expect hit ground running especially work software developer write program fun token likely able dedicate limited amount time learning rust learning rust free time evaluating work whatever reason might try learn much possible quickly possible know might find frustrating slow take tiny step instead running fast sprint marathon nonetheless take heart developed understanding core concept fundamental take bigger step move complex project ease grace appreciate divergence turing completeness thing programming language suitable certain task others appreciate different language tool specific feature offer thing particularly effectively perhaps task open soup could certainly use chainsaw would nt prefer different tool process identifying similarity language beginning programmer journey outside comfort zone beginning discovery kind tool hold hand kind problem meant solve goal journey recognize master difference tool would point learning language really practice patience big picture rust young language undergone lot change last several year indeed many feature grown le complicated since early day existence rumor persisted regard hard learn rust likely rumor outdated refer version language longer exists throughout post reiterated fact time inherent process learning rust refer fact rust active development yes importantly refer patience noticed folk succeeded journey give time learning process see core concept like ownership borrowing deliver joy make easy comfortable write program memorysafe stay tuned next part series discus one rust unique philosophy aim practical helpful production also process learning language hope read onwards meantime please consider signing newsletter enlisting u trainer team
9,Lobsters,education,Education,Replacing YouTube & Invidious,https://secluded.site/replacing-youtube-invidious/,replacing youtube invidious,stepping away open source youtubedl mpv much preventing duplicate selecting quality embedding subtitle limiting downloads getting notification naming format writing script finished script automation crontab generator crontab guru,omar roth developer invidious recently wrote blog post stepping away open source never used official instance thought good opportunity create tool downloads video youtubers subscribed watch offline whatever manner prefer end youtubedl far reliable versatile option around since think project going anywhere mpv medium player choice relies youtubedl watching online content twitch youtube pornhub much conveniently youtubedl come tool flag needed exactly purpose scripting automating incredibly easy taking look man youtubedl reveals plethora option necessary preventing main thing downloading entire channel ensuring video downloaded downloadarchive save id video downloaded prevent downloaded required file path store list downloadarchive archive channel txt selecting default youtubedl downloads single file best quality audio video need mux together however prefer highest possibly quality mind waiting second longer ffmpeg combine audio video file format let user decide format prefer whether want focus storage efficiency quality basic option best worst bestvideo bestaudio download single file highest lowest quality videoaudio videoonlyaudioonly lot option finegrained control look mentioned want highest video highest quality audio use bestvideobestaudio downloading file muxed together format bestvideobestaudio embedding enjoy subtitle know many people section certainly ignored option fetching embedding subtitle get real subtitle someone transcribed manually use writesub youtube autogenerated subtitle may may horribly inaccurate use writeautosub selecting language sublang languagecode embedding embedsubs selecting format subformat desiredformat like using srt file first best beside like subformat srtbest srt preferred unavailable whatever highestquality format used embedded instead writesub writeautosub subformat srtbest sublang en embedsubs limiting switching method initial download pull channel video certainly want limited way dateafter playlistend serve nicely former download video published certain date latter download x number video dateafter playlistend getting yet good method getting notification new video simple way get notified script finished running notifysend one easiest pretty simple syntax well first string notification summary second longer description optionally pas icon name make look little better notifysend videoxgeneric downloads finished check youtube folder new video reason get icon generic name specified know command work system mine pas path icon file want naming final parameter look name file downloaded output provides templating functionality lot option use acceptable template might something like channeltitleext youtubedl templating format uploader title ext output uploader title ext writing want store video videosyoutube want archive record stored archive first line shebang creates directory already exist second enters youtube folder mkdir p homevideosyoutubearchives cd homevideosyoutube way reuse youtubedl command necessary parameter changed one place apply channel function intended exactly purpose formatted like functionname code named function dl mine look like dl youtubedl downloadarchive archive txt f bestvideobestaudio dateafter writesub writeautosub subformat srtbest sublang en embedsubs uploader title ext playlistend sleep backslashes end tell bash single command spanning multiple line sleep command wait second downloading next channel unlikely youtube ratelimit residential address still possible waiting bit continuing reduces likelihood note use archive path end youtubedl command let user define archive file named channel download video line using function would something like dl linustechtips http wwwyoutubecomuserlinustechtips result would directory structure youtube archive â linustechtipstxt linus tech tip still make playersmkv last line notification command notifysend videoxgeneric downloads finished check youtube folder new video finished script use right binbash mkdir p homevideosyoutubearchives cd homevideosyoutube dl youtubedl downloadarchive archive txt f bestvideobestaudio dateafter writesub writeautosub subformat srtbest sublang en embedsubs uploader title ext playlistend sleep dl ding http dl meute http dl vsauce http wwwyoutubecomuservsauce dl ardour http dl pewdiepie http wwwyoutubecomuserpewdiepie dl techaltar http dl avikaplan http wwwyoutubecomuseravikaplanmusic dl lukesmith http dl techlinked http wwwyoutubecomctechlinked dl robscallon http dl setheverman http wwwyoutubecomusersetheverman dl logosbynick http dl techquickie http wwwyoutubecomusertechquickie dl yanntiersen http wwwyoutubecomuseryanntiersenofficial dl andrewhuang http wwwyoutubecomusersongstowearpantsto dl aurahandpan http wwwyoutubecomuserjantzulu dl jamesveitch http dl brandonacker http wwwyoutubecomuserbrandonacker dl unboxtherapy http wwwyoutubecomuserunboxtherapy dl linustechtips http wwwyoutubecomuserlinustechtips dl michaelreeves http dl countrysquire http dl roomieofficial http wwwyoutubecomuserroomieofficial dl fridaycheckout http dl lastweektonight http wwwyoutubecomuserlastweektonight dl bingingwithbabish http wwwyoutubecomuserbgfilms notifysend icon downloads finished check youtube folder new video simple process store script wherever want take note directory run crontab e already cron utility installed try cronie repos paste edit homeuserpathtoscriptsh save exit profit pasted line run script every hour every day every week every month every year change frequency run crontab e edit line save crontab generator crontab guru might useful syntax confusing fun
10,Lobsters,education,Education,Multi Class Text Classification With Deep Learning Using BERT,https://towardsdatascience.com/multi-class-text-classification-with-deep-learning-using-bert-b59ca2f5c613,multi class text classification deep learning using bert,multi class text classification deep learning using bert natural language processing nlp hugging face bert tutorial data dataset explore preprocess encoding label train validation split berttokenizer encoding data tokenization bert tokenizer bert pretrained model data loader optimizer scheduler performance metric training loop loading evaluating model jupyter notebook github,multi class text classification deep learning using bertnatural language processing nlp hugging facemost researcher submit research paper academic conference faster way making result available finding selecting suitable conference always challenging especially young researchershowever based previous conference proceeding data researcher increase chance paper acceptance publication try solve text classification problem deep learning using bertalmost code taken tutorial difference datathe datathe dataset contains research paper title manually classified category ie conference downloaded hereexplore preprocessconfexplorepytable conference valuecounts figure may noticed class imbalanced address later onencoding labelslabelencodingpydf label dfconferencereplace labeldict train validation splitbecause label imbalanced split data set stratified fashion using class labelsour label distribution look like splittraintestsplitpyfigure encoding datatokenization process take raw text split token numeric data represent wordsconstructs bert tokenizer based wordpieceinstantiate pretrained bert model configuration encode datato convert title text encoded form use function called batchencodeplus proceed train validation data separatelythe parameter inside function title textaddspecialtokenstrue mean sequence encoded special token relative modelwhen batching sequence together set returnattentionmasktrue return attention mask according specific tokenizer defined maxlength attributewe also want pad title certain maximum lengthwe actually need set play safereturntensorspt return pytorchand need split data inputids attentionmasks labelsfinally get encoded data set create training data validation datatokenizerencodingpybert pretrained modelwe treating title unique sequence one sequence classified one five label ie conference bertbaseuncased smaller pretrained modelusing numlabels indicate number output labelswe really care outputattentionswe also need outputhiddenstatesbertpretrainedmodelpydata loadersdataloader combine dataset sampler provides iterable given datasetwe use randomsampler training sequentialsampler validationgiven limited memory environment set schedulerto construct optimizer give iterable containing parameter optimize specify optimizerspecific option learning rate epsilon etci found work well data setcreate schedule learning rate decrease linearly initial learning rate set optimizer warmup period increase linearly initial learning rate set optimizeroptimizerschedulerpyperformance metricswe use score accuracy per class performance metricsperformancemetricspytraining looptraininglooppyfigure evaluating modelloadingevaluatingpyfigure notebook found github enjoy rest weekend
12,Lobsters,education,Education,questions,https://questions.wizardzines.com/,question,question git question networking question system question question invitation open box thing nt know let go know already learned nt late tackle even thing still nt know learn one new thing today one thing time,question hello made site help identify thing nt know way learn new thing first find nt know try set question learn something new git question networking question system question question u lot thing computer nt know whole giant list thing nt know used feel overwhelming could even start list big often hard find time busy day learn something new invitation open box thing nt know made question site help giant list thing learn time problem set question invitation take minute open box thing nt know take small thing learn little intentionally made question little bit hard make likely able find something learn let go know already goal site chip away bit idea know already lot question fundamental thing program use every day work may know thing yet normal learned position absolute cs recently even though writing htmlcss year felt bit silly learned nt late know bit cs feel able tackle even thing still nt know learn one new thing today learn one thing set question great way ever learned anything one thing time also link reading attached question set find lot time energy want use learn thing nt time energy today still tomorrow
13,Lobsters,education,Education,Lisp Quickstart,https://cs.gmu.edu/~sean/lisp/LispTutorial.html,lisp quickstart,,let look little closely function random ask detail nature random typing describe random note single quote also beware clisp zeus describe function attempt connect http server mit provide nice documentation nt work right right first executed command prevent happening setf custom browser nil nil describe random random symbol random lie package commonlisp accessible package clos commonlisp commonlispuser exporting ext ffi posix readline regexp screen system name function property system doc ansicl documentation http wwwaimiteduprojectsiiipdoccommonlisphyperspecbodyfunrandomhtml information evaluate symbolplist random package commonlisp package named commonlisp nickname lisp cl import external symbol package clos export symbol package readline regexp posix exporting ffi screen clos commonlispuser ext system systemfunction random builtin system function argument list optional information evaluate disassemble random documentation clhs bodyfunrandomhtml lisp system either interpreter compiler though modern lisp system compiler automaticall compile code soon enter however compile code varies example clisp compiles pcode rather machine code kind like javac compiles class file rather machine code sbcl lispworks compile machine code interested seeing resulting compiled code look like disassemble function disassemble functionpointer clisp zeus defun factorial n n n factorial n factorial disassemble factorial disassembly function factorial const required argument optional argument rest parameter keyword parameter bytecode instruction load push jmpifnot minusp load push load dec push jsr push callsr skip ret const skip ret nil sbcl laptop defun factorial n n n factorial n factorial disassemble factorial disassembly factorial size byte origin bfd mov rcx threadbindingstackpointer noargparsing entry point mov rcx mov rcx lea eax test al jne cmp al jeq test al jne cmp byte ptr jnbe mov rdx xor edi edi mov ecx generic call rcx jle mov edx mov rsp rbp clc pop rbp ret mov rdx xor edi edi mov ecx generic call rcx jeq mov rdx mov edi mov generic call lea rbx sub rsp mov rax fdefinition factorial mov ecx mov rbx rbp mov rbp rbx call qword ptr cmovb rsp rbx mov rdi rdx mov rdx mov generic call jmp mov rax break error trap byte byte objectnotrealerror byte rax break invalid argument count trap nil lispworks running mason cluser defun factorial n lt n n factorial n factorial cluser disassemble factorial ld cmp bleu noop cmp ld jmp global fun system internalwrongnumberofarguments noop ld andn save sub ld call counter add st andcc bne mov cmp bge mov tsubcc bvs mov mov ld factorial ld jmpl mov andcc bne mov sra andncc bne wr mov noop noop rd andcc call mulscc mulscc mov mov mov rd sll srl orcc sra bge addcc ba cmp mulscc mulscc mulscc mulscc mulscc mulscc mulscc mulscc jmp mulscc andncc wr bne andcc call mulscc ba mulscc call mulscc call mulscc call mulscc mulscc orcc rd bge orcc sub bge addcc cmp bne mov mov mov jmp restore noop mov jmpl global fun system anystub mov cmp tsubcc mov ba mov mov jmpl global fun system anystub mov ba ld factorial mov jmp global fun system anystub restore
14,Lobsters,education,Education,Tutorial on multiple currency accounting,https://www.mathstat.dal.ca/~selinger/accounting/tutorial.html,tutorial multiple currency accounting,tutorial multiple currency accounting content introduction brief review doubleentry accounting singleentry accounting table net worth equity table table double entry accounting table table income expense table table fundamental accounting equation table foreign currency accounting issue singleentry foreign currency accounting double entry foreign currency accounting wrong way table table foreign exchange gain loss table table section calculating gain loss adjustment table table table table foreign currency accounting according ssap accounting nonmonetary current asset table official solution translation single currency table table table table table table table foreign currency accounting using currency trading account restoring symmetry foreign currency accounting section section table table table table table table table accounting currency trading account table table section table table table table table table section equivalence ssap table table example tracking exchange gain loss source realized unrealized gain loss example real estate table importance identity asset table fifo lifo adjusted cost base method australia table table table article australia translation issue independence viewpoint section table reference currency v equity currency table table section specific software gnucash section multiple currency accounting gnucash,tutorial multiple currency accounting author peter selinger selinger user dot sourceforge dot net written jun updated oct added section realized unrealized gain updated nov changed sectioning updated jan added australia info section updated jun fixed typo table reported alex chiang updated aug fixed typo table reported francisco milan campos content introduction accounting multiple currency tricky easy enough use exchange rate translate different currency thing get le obvious one take account exchange rate fluctuate time multicurrency transaction incur foreign exchange gain loss one account respecting fundamental accounting equation different accounting method give different result advantage disadvantage one need pick single reference currency importantly work nonexpert found surprisingly difficult find useful information subject searched online also consulted fifteen different accounting textbook uk canada book mentioned foreign currency contained single paragraph topic stating foreign currency transaction translated local currency also studied foreign currency support accounting software using gnucash quickly found software balance account correctly multiple currency involved much frustration additional thought research believe arrived understanding multiple currency accounting work wrote document resource might looking information information tutorial synthesis learned book learned accounting standard ssap figured since accounting expert sure incorrect terminology slipped document find mistake would happy send correction aside terminology issue reasonably certain concept described tutorial sound disclaimer accountant qualified offer kind accounting advice tutorial express opinion accounting multiple currency work claim anything accuracy legality information presented warrant correctness applicability way although cite accounting standard document claim tutorial conforms accepted accounting standard need accounting advice please consult professional accountant brief review doubleentry accounting singleentry accounting user accounting software fall two main class home user business user home user interested tracking asset liability asset money bank account cash pocket liability owe balance credit card account money owe neighbor account keep running total one particular type asset liability transaction increase decrease balance one account table singleentry personal accounting jan opening balance jan get paid balance jan buy food credit card balance jan withdraw cash balance jan pay credit card bill balance jan get paid balance jan buy food cash balance jan buy book cash balance table show example singleentry personal accounting three account us single currency canadian dollar note account balance shown yellow line transaction shown white line also note asset account positive number mean asset whereas liability account positive number mean liability thus transferring money one asset account another january lead increase one account decrease transferring money asset account liability account paying credit card bill january lead decrease account net worth equity person net worth equal total asset minus total liability word net worth effective amount money property compensating outstanding debt person net worth negative total liability exceed total asset called living one mean recommended business context net worth also called equity therefore first accounting equation asset liability equity going back example table note transaction like get paid january increase person net worth called income transaction like buy food buy book january decrease person net worth called expense still transaction withdraw cash january pay credit card bill january affect net worth following chart show transaction table time also show net worth separate column table personal accounting net worth shown jan opening balance jan get paid balance jan buy food credit card balance jan withdraw cash balance jan pay credit card bill balance jan get paid balance jan buy food cash balance jan buy book cash balance note accounting equation asset liability equity satisfied balance yellow line also individual transaction white line double entry accounting let u promote equity column table calling account table simple instance double entry accounting idea keep separate running total equity addition running total asset liability transaction must balanced mean must satisfy accounting equation historically ie computer used one purpose double entry accounting catch arithmetic error data entry error since transaction recorded least two place result addition subtraction could doublechecked simply checking whether account balanced today arithmetic mistake longer major issue although data entry error still however one important benefit doubleentry accounting namely give convenient way tracking classifying income expense income expense business important keep track asset liability also income expense example business need classify income according source necessary tax reason income different source may taxed differently also business reason help determine part business profitable assetliability method tracking finance money classified according location much money bank account much wallet contrast tracking income expense one must classify money according purpose much money spend food much book example table total money spent food given time period namely january january food bought cash credit card different payment method matter point view asset liability irrelevant point view expense convenient way track income expense split column equity table several column normally done fixed time period example one year called accounting period equity beginning time period called initial capital increase equity since beginning time period called income decrease called expense therefore second accounting equation equity capital income expense therefore split equity account three column called initial capital income expense income expense column subdivided account different type income expense keep example simple consider single income account called salary two expense account called food book table personal accounting incomeexpense tracking jan opening balance jan get paid balance jan buy food credit card balance jan withdraw cash balance jan pay credit card bill balance jan get paid balance jan buy food cash balance jan buy book cash balance limit number account one limit number different type income expense tracked using system note expense like liability recorded positive number even though contribute equity negatively also note initial capital account never change example business use type capital besides initial capital type changeable example somebody invests money business thereby becoming owner considered increase capital rather income thus general one capital account fundamental accounting equation putting together first second accounting equation asset liability equity equity capital income expense obtain following called fundamental accounting equation asset liability capital income expense reader check yellow white row table indeed satisfy equation remark equity sometimes called capital vice versa really sure correct terminology tutorial continue use term meaning introduced remark traditionally accountant like subtract use negative number accounting equation therefore often written asset expense capital income liability quantity lefthand side last equation sometimes called activa asset expense righthand side sometimes called passiva capital income liability reader easily verify two version accounting equation mathematically equivalent conceptually pedagogically find division location asset liability purpose capital income expense useful division activa passiva therefore tutorial continue use version accounting equation us subtraction foreign currency accounting issue singleentry foreign currency accounting handling foreign currency singleentry accounting simple asset liability account currency transferring money one account another simply use exchange rate effect time transfer suppose keep two kind cash pocket canadian dollar cad u dollar usd january cad u dollar january exchange cad usd bank day exchange rate cadusd january spend usd food january exchange usd cad day rate cadusd january spend cad food transaction easily accounted two asset account table singleentry foreign currency accounting jan opening balance cad usd jan exchange usd cad cad usd balance cad usd jan buy food usd balance cad usd jan exchange usd cad cad usd balance cad usd jan buy food cad balance cad usd example show foreign currency easy account long want keep track asset equally easy liability process currency transfer exchange rate easily automated software double entry foreign currency accounting wrong way thing get complicated also want keep track income expense illustrate follow method table add account initial capital expense since income example nt need income account live canada keep capital expense account canadian dollar course transaction affect one account amount translated canadian dollar know exchange rate january let u assume sake example exchange rate cadusd usd cad day table doubleentry foreign currency accounting naively jan opening balance cad usd cad cad jan exchange usd cad cad usd balance cad usd cad cad jan buy food usd cad usd cad balance cad usd cad cad jan exchange usd cad cad usd balance cad usd cad cad jan buy food cad cad balance cad usd cad cad note recorded transaction according exchange rate effect date transaction made remember accounting equation asset liability capital income expense please convince transaction white line indeed satisfies equation one take daily exchange rate account therefore white line balanced problem problem yellow line balanced example consider balance january started cad spent cad food still cad pocket yet cad something went wrong gained cad without record equity side balance sheet accounting system table violates fundamental accounting equation foreign exchange gain loss cad table called foreign exchange gain gain caused exchange rate fluctuation transaction example buy foreign currency sell later higher price enjoyed foreign exchange gain similarly lose money due exchange rate fluctuation called foreign exchange loss accounting purpose foreign exchange gain count income foreign exchange loss count expense accounting method table lack way track foreign exchange gain loss question need address therefore calculate foreign exchange gain loss record preferably keeping fundamental accounting equation intact calculating foreign exchange gain loss somewhat tricky gain loss occur transaction rather time interval transaction therefore immediately clear time entered balance sheet principle gain loss happen every time exchange rate change whether transaction clearly feasible record continuous basis example per second must better way another potential complication concept gain loss depends base currency therefore point view suppose cad usd exchange rate change cadusd cadusd canadian enjoyed gain equity increased cad cad american suffered loss equity decreased usd usd dependency base currency seems necessary also frustrating seems imply multicurrency accounting system symmetric way different currency treated fact possible design symmetric system see section calculating gain loss adjustment principle one could account foreign exchange gain loss way one account intractable arithmetic error adding adjusting entry yellow line table forcing balance obey accounting equation method shown table table foreign currency accounting adjustment jan opening balance cad usd cad cad cad jan exchange usd cad cad usd balance cad usd cad cad cad jan buy food usd cad usd cad adjustment cad balance cad usd cad cad cad jan exchange usd cad cad usd adjustment cad balance cad usd cad cad cad jan buy food cad cad balance cad usd cad cad cad calculate table simply look day balance yellow line force satisfy accounting equation according day exchange rate adjusting entry added produce desired number result yellow balance line balanced white transaction line note exchange loss cad january technically expense created special expense account instead recorded loss negative gain accordance accepted accounting principle state exchange gain loss directly offset method shown table undesirable several reason main problem additional adjusting entry balanced thus violating principle double entry accounting remove source redundancy effect since one constantly force account balance one longer notice difference currency fluctuation random arithmetical error moreover even account balance one point continually go balance exchange rate change even transaction occur thus adjustment entry really added continuously rather per transaction would undesirable thing another problem adjustment method make difficult add change transaction retroactively suppose want enter another transaction january future adjusting balance january recalculated would possible computer automatically elegant even seems manipulative instead simply recording transaction calculating transaction separation data entry analysis seems violated cause effect individual transaction difficult track foreign currency accounting according ssap accounting nonmonetary current asset method shown table bad doubleentry accounting multiple currency done look possible solution useful recall one account changing value nonmonetary asset imagine business buying selling oil let u assume oil current asset mean easily converted cash market therefore oil always accounted current market price different noncurrent asset realestate usually accounted historical cost suppose buy oil market price sell market price plus profit margin cad per barrel january buy barrel oil price cad per barrel january sell barrel cad market price still cad january price oil increase cad per barrel january sell barrel cad account follows table accounting nonmonetary current asset jan opening balance cad cad barrel cad cad cad jan buy barrel cad cad barrel cad balance cad cad barrel cad cad cad cad jan sell barrel cad cad barrel cad cad balance cad cad barrel cad cad cad cad jan revalue inventory cad barrel cad cad balance cad cad barrel cad cad cad cad jan sell barrel cad cad barrel cad cad balance cad cad barrel cad cad cad cad several thing note example first remark green column marked inventory account simply informational column recording number barrel oil currently current price column usually appear company account kept separately account contain value asset rather asset also note accounting method clearly distinguishes different source income cad income sale profit barrel sold profit margin cad cad capital gain price oil rose cad time barrel viewpoint multiple currency accounting remark barrel oil cumbersome carry wallet might nevertheless regarded kind currency make following observation account cad even though another currency involved namely barrel oil actually keep account currency oil asset account kept cad fluctuation price oil recorded cad reflected asset side balance sheet also incomeexpense side result account balanced time since oil asset account denominated cad barrel must separately keep inventory actual amount oil owned also current market price inventory shown green column example informational part account sheet take part balancing official solution translation single currency country code standard accounting practice deal foreign currency accounting searched case found web example document ssap canada uk fasb u understanding various countryspecific document le say thing example ssap state accounting period company may enter transaction denominated foreign currency result transaction normally translated company local currency using exchange rate operation date transaction occurred effect mean foreign currency treated precisely way nonmonetary asset ie accounted local currency use canadian dollar local currency example mean oil account table denominated cad barrel oil u dollar account foreign currency example also denominated cad usd using accounting method currency gain loss determined way kind capital gain loss namely revaluing account change exchange rate occurs illustrate reconsidering example table using ssap method note accounting principle used similar table table foreign currency accounting à la ssap jan opening balance cad cad usd cad cad cad jan exchange cad cad usd cad balance cad cad usd cad cad cad cad jan revalue usd cad usd cad cad balance cad cad usd cad cad cad cad buy food cad usd cad cad balance cad cad usd cad cad cad cad jan revalue usd cad usd cad cad balance cad cad usd cad cad cad cad exchange cad cad usd cad balance cad cad usd cad cad cad jan buy food cad cad balance cad cad usd cad cad cad compare carefully table first thing notice white yellow row balanced table case table equity side balance sheet right solid black line nothing changed except order transaction assetsliabilities side left solid black line usd account denominated cad therefore currency fluctuation january lead revaluation asset table green column informational disregarded balancing purpose summarize main point ssap method always one special reference currency typically company local currency account kept reference currency tally nonreference currency informational take part balancing fluctuation relative value nonreference currency reflected immediately corresponding asset account also currency gainloss account advantage method since entry one currency special software support multiple currency needed principle singlecurrency accounting software required account balanced disadvantage separate tally foreign currency exchange rate must kept green column example fact tally contain original source information whereas corresponding assetliability account contain derived calculated information sense foreign currency account kept local currency virtual account whose content entirely calculated account must revalued periodically question arises principle happen every transaction generating report many foreign currency account mean lot manual work relatively difficult add change transaction retroactively new transaction entered earlier date future currency gain loss must recalculated change future transaction future balance unsatisfying asymmetry accounting method one currency must given prominence others first three disadvantage alleviated using software support ssap accounting method case user enter data green column software able take care conversion revaluation calculating corresponding gain loss foreign currency accounting using currency trading account restoring symmetry foreign currency accounting section one main complaint ssap accounting method introduces apparent asymmetry requiring one currency singled reference currency would prefer work account directly denominated multiple currency seen section lead problem accounting equation let u investigate method restores symmetry also respecting accounting equation consider following simple scenario january asset cad usd exchange rate cadusd therefore total capital canadian dollar cad cad cad let u assume make transaction january exchange rate change cadusd cadusd cadusd three day following january recording balance yellow line ignoring transaction white line moment find record following le style table table cumulative exchange gain function exchange rate jan balance usd cad cad usd cad cad jan balance usd cad cad usd cad cad jan balance usd cad cad usd cad cad jan balance usd cad cad usd cad cad note change day day exchange gain change asset account initial capital account also note account balanced day one take day exchange rate account let u save work giving formula exchange gain instead calculating explicitly day let exchange rate given day x cadusd let corresponding balance exchange gain account formula term x must satisfy fundamental accounting equation asset liability capital income expense therefore must cad x usd cad easily solved x usd cad word balance exchange gain account given day exactly equal current value usd minus cad expressed canadian dollar simplify table expressing exchange gain difference multiple currency rather expressing value single currency table cumulative exchange gain expressed difference multiple currency jan balance usd cad cad usd cad usd cad jan balance usd cad cad usd cad usd cad jan balance usd cad cad usd cad usd cad jan balance usd cad cad usd cad usd cad note exchange gain shown table exactly identical shown table given day exchange rate example january table show usd cad equal amount cad shown table given day exchange rate cadusd expressing exchange gain term multiple currency altered substance recorded changed method recording note line table balanced independently current exchange rate indeed entry currency balanced separately cad cad cad also usd usd accounting currency trading account account denominated difference multiple currency like exchange gain account table known currency trading account following exact copy table except renamed exchange gain account usd trading table foreign currency accounting currency trading account jan balance usd cad cad usd cad usd cad jan balance usd cad cad usd cad usd cad jan balance usd cad cad usd cad usd cad jan balance usd cad cad usd cad usd cad important note currency trading account represent asset purpose currency trading account calculate foreign exchange gain loss convention gain recorded positively loss negatively therefore currency trading account kind income account currency trading account different account denominated two currency typically one currency reference currency one usual terminology called security thus example may say usd trading account hold security usd offset cad negative currency currency trading account reflects currency exchange made past ideal situation exchange rate never change balance supposed zero however exchange rate fluctuates value currency trading account fluctuation correspond exactly currency gain loss end accounting period one may move actual realized gain loss income expense account denominated reference currency let u illustrate use currency trading account redoing example section replace currency gain account currency trading account u dollar canadian dollar table foreign currency accounting currency trading account jan opening balance cad usd cad cad usd cad jan exchange usd cad cad usd usd cad balance cad usd cad cad usd cad jan buy food usd cad usd cad usd cad balance cad usd cad cad usd cad jan exchange usd cad cad usd usd cad balance cad usd cad cad usd cad jan buy food cad cad balance cad usd cad cad usd cad note transaction involve currency conversion like buy food january entered usual way double entry accounting transaction involve currency conversion like exchange january buy food january must go trading account conceptually exchanging canadian dollar u dollar moving canadian dollar trading account equivalent amount u dollar trading account however sign reversal money moved trading account given negative sign money moved given positive sign fixme standard convention sign trading account comparing use currency trading account table accounting method shown table note need periodic adjustment table january periodic revaluation asset table january eliminated indeed value trading account selfadjusting sensitive exchange rate since manual adjustment revaluation needed question record becomes moot point another consequence selfadjusting nature currency trading account penalty entering changing transaction retroactively unlike ssap system retroactive transaction effect future transaction balance currency trading account system retroactive currency transaction affect future balance future transaction respect effect different retroactive transaction also note using currency trading account method table need keep separate tally inventory foreign currency asset using ssap method table green column instead foreign currency asset held directly account another advantage currency trading account method provides flexibility tracking income expense currency exchange many application sufficient single currency trading account also possible several account instance one account foreign currency one account branch business one account customer make possible keep track foreign exchange gain loss attributed different source reason single currency trading account limited two currency possible set currency trading account account gain loss trade three currency balance account expressed sum difference amount participating currency summary main advantage using currency trading account multicurrency accounting foreign currency transaction entered account denominated directly foreign currency thus account sheet contains source information account balanced transaction balance respect accounting equation foreign exchange gain loss need calculated continuous basis instead calculated whenever convenient eg per accounting period transaction easily entered changed retroactively without causing change future transaction foreign exchange gain loss different source tracked independently see section example reference currency thus inherent asymmetry accounting method important conceptual fact remember currency trading account following purpose currency trading account perform conversion calculate gain loss value currency trading account change transaction time interval transaction equivalence ssap accounting method using currency trading account mathematically equivalent method ssap mean used generate financial report identical generated ssap indeed suppose generate financial report data table end january recorded following balance end january jan balance cad usd cad cad usd cad using exchange rate cadusd effect january translate balance cad note usd cad therefore usd cad cad translated balance sheet jan balance cad cad cad cad cad keeping mind currency trading account special kind income account representing foreign exchange gain translated balance sheet exactly identical endofday balance january obtained ssap method shown table therefore translation reference currency accounting method yield identical data generate identical financial report example tracking exchange gain loss source suppose canadian company selling good u customer book mostly kept canadian dollar invoice customer usd customer given day pay send invoice additional time may pas receive deposit usd cheque cad bank account foreign exchange gain loss occur exchange rate change invoice date date payment received converted cad suppose reason would like track foreign exchange gain loss percustomer basis example want determine whether would worthwhile tighten customer payment term easily done using one currency trading account customer table one currency trading account per customer jan opening balance cad usd cad usd cad usd cad jan invoice customer usd cad usd cad usd cad balance cad usd cad usd cad usd cad jan invoice customer usd cad usd cad usd cad balance cad usd cad usd cad usd cad jan payment customer usd cad cad usd usd cad balance cad usd cad usd cad usd cad jan payment customer usd cad cad usd usd cad balance cad usd cad usd cad usd cad trading account balance january show interaction customer resulted foreign exchange gain cad whereas interaction customer resulted foreign exchange loss cad fact particular foreign currency interaction finished ie outstanding currency exchange reflected fact usd balance corresponding currency trading account method used track foreign exchange gain loss associated division source care keep track example might want separate exchange gain loss different part business different country work even several country share currency realized unrealized gain loss far discussed method calculating gain loss currency transaction extension transaction type variablepriced asset barrel oil share stock gain loss also called capital gain loss practice often important distinguish realized unrealized gain loss one area distinction relevant taxation usually realized gain taxable exact determination whether particular gain loss realized unrealized often tricky rule vary country country section briefly discus issue show fit multicurrency accounting method general term variablepriced asset market fluctuation cause value asset change time change value called unrealized gain loss long still item sell item turn realized gain loss basic principle simple precise rule gainloss realized depend detail tax code accounting practice particular always obvious determine realized gain loss sell part asset calculation unrealized gain loss sometimes require guesswork depends fair market value asset yet sold asset unique traded daily basis house often impossible determine precise value usually better account item original purchasing price rather trying reevaluate time type asset currency stock easier evaluate hand realized gain loss always calculated exactly item sold exact sale price known example real estate let u start considering simple example real estate suppose two house street called house house b house similar opposite side street let u assume two house equal similar market value given time suppose january february buy house march buy house b april real estate agent estimate current market house worth point market price two house paid unrealized capital gain specifically unrealized gain house unrealized loss house b may sell house estimate house b keep also worth point realized gain house may pay tax amount minus expense depending applicable tax law time also total unrealized loss house b june decide sell house b longer unrealized gain loss realized loss sale house b together realized gain house result overall realized loss year scenario accounted trading account model unit cad canadian dollar hou house table realized unrealized gain loss first real estate example jan opening balance cad hou hou cad hou cad cad feb buy house cad hou hou cad balance cad hou hou cad hou cad cad mar buy house b cad hou hou cad balance cad hou hou cad hou cad cad apr balance cad hou hou cad hou cad cad may sell house cad hou hou cad realized gain cad cad balance cad hou hou cad hou cad cad jun sell house b cad hou hou cad realized loss cad cad balance cad hou hou cad hou cad cad number observation order first unrealized gain loss implicitly recorded trading account thus fluctuate automatically account evaluated different time example march two house valued therefore balance trading account converted cad corresponding unrealized gain day april two house valued therefore trading account balance worth second unrealized gain loss becomes realized may june witnessed explicit transaction namely moving corresponding amount trading account income account important point realized gain loss calculated implicitly accounting system must explicitly stated bookkeeper accountant argue desirable necessary feature example show calculation realized gain many case depends local law accounting practice therefore reasonable resolved human course calculation also automated done customizable rule question realized gain loss recorded example example following recorded immediately date sale however number transaction large might convenient calculate record realized gain loss le frequently example one might decide end accounting period pedantic would used two different unit currency house example hoa quantity house hob quantity house b two house similar entirely interchangeable different side street done would also created two separate trading account hoa hob similar done table case realized gain house would total content trading account house may would denominated pure cad day similarly realized loss house b would total content trading account house b june way possible avoid separate side calculation determining realized gain loss expense keeping larger number separate trading account importance identity asset see thing get complicated let u change realestate scenario slightly suppose decided sell house b may house june rather way around house similar may would sold house b resulting realized loss house b compared realized gain scenario sold house day hand june would sold house resulting realized gain house compared realized loss original scenario account updated scenario change table shown red table realized unrealized gain loss second real estate example jan opening balance cad hou hou cad hou cad cad feb buy house cad hou hou cad balance cad hou hou cad hou cad cad mar buy house b cad hou hou cad balance cad hou hou cad hou cad cad apr balance cad hou hou cad hou cad cad may sell house b cad hou hou cad realized loss cad cad balance cad hou hou cad hou cad cad jun sell house cad hou hou cad realized gain cad cad balance cad hou hou cad hou cad cad end year total realized loss two house regardless two scenario follow assuming tax year end december matter house sold first however thing different tax year end may wait several year selling second house case difference outgoing tax year gain first scenario loss second scenario therefore matter house sold first even house identical fifo lifo adjusted cost base method fortunately real estate transaction never question several house sold matter similar house house b still different address however thing simple several unit asset share stock actually indistinguishable accounting terminology indistiguishable asset called fungible asset let u redo example using share instead house also shorten number three zero suppose january february buy one share company march buy another share april check value share find worth total value spent buy unrealized capital gain may decide sell one share realized gain point answer depends precisely rule differ different country three common case country australia use firstinfirstout fifo rule rule share sold may considered share bought longest ago ie one bought february sale therefore result realized gain corresponds first realestate scenario first house bought first house sold country use lastinfirstout lifo rule name suggests rule share sold may considered share recently bought ie one bought march sale therefore result realized loss corresponds second realestate scenario country canada use method called adjusted cost base method weighted average method method realized gain loss computed based average cost share currently owned thus one would consider total number share total amount spent also called cost base average cost share therefore sale one share may therefore considered create realized loss cost base adjusted subtracting sold share also subtracting realized loss result called new adjusted cost base represents total historical cost remaining share sale current value used cost base next sale description fifo lifo method clear implementation multicurrency accounting model look almost exactly like two real estate example table one replace house share course longer separate asset account house house b instead single asset account company share fifo example shown table lifo example shown table complete example assumed last remaining share sold june table realized unrealized gain loss fifo jan opening balance cad sha cad sha cad cad feb buy one share cad sha sha cad balance cad sha cad sha cad cad mar buy one share cad sha sha cad balance cad sha cad sha cad cad apr balance cad sha cad sha cad cad may sell one share cad sha sha cad realized gain fifo cad cad balance cad sha cad sha cad cad jun sell one share cad sha sha cad realized loss fifo cad cad balance cad sha cad sha cad cad table realized unrealized gain loss lifo jan opening balance cad sha cad sha cad cad feb buy one share cad sha sha cad balance cad sha cad sha cad cad mar buy one share cad sha sha cad balance cad sha cad sha cad cad apr balance cad sha cad sha cad cad may sell one share cad sha sha cad realized loss lifo cad cad balance cad sha cad sha cad cad jun sell one share cad sha sha cad realized gain lifo cad cad balance cad sha cad sha cad cad fifo lifo method nontrivial overhead involved calculating realized gain loss calculation require looking back history share acquired figuring one already sold figuring remaining share first last respectively transaction realized gain loss need created sale seem convenient way reduce overhead fifo lifo method turn adjusted cost base method overhead account example adjusted cost base method end following table realized unrealized gain loss adjusted cost base jan opening balance cad sha cad sha cad cad feb buy one share cad sha sha cad balance cad sha cad sha cad cad mar buy one share cad sha sha cad balance cad sha cad sha cad cad apr balance cad sha cad sha cad cad may sell one share cad sha sha cad realized loss acb cad cad balance cad sha cad sha cad cad jun sell one share cad sha sha cad realized gain acb cad cad balance cad sha cad sha cad cad note like fifo lifo realized gain loss associated transaction however adjusted cost base system possible calculate amount realized gain loss without looking entire history purchase sale check example carefully discover adjusted cost base given time exactly equal cad portion trading account coincidence trading account precisely mirror historical cost share realized gain loss sale transaction therefore calculated simply looking trading account balance prior sale course work separate trading account kind share owned course trying convince use adjusted cost base method accounting use whichever method prescribed law country country realized capital gain taxed different rate depending long held asset country one income account realized gain example one realized gain taxable lower rate realized gain taxable higher rate clear one use adjusted cost base method situation would notion long held asset selling instead probably using fifo method illustrate adjusted cost base method may useful consider complicated example suppose start january january buy share stock per share january sell share per share january buy share per share january sell share per share using adjusted cost base method realized gain loss computed daily basis follows table realized unrealized gain loss second acb example jan opening balance cad sha cad sha cad cad jan buy share cad sha sha cad balance cad sha cad sha cad cad jan sell share cad sha sha cad realized gain acb cad cad balance cad sha cad sha cad cad jan buy share cad sha sha cad balance cad sha cad sha cad cad jan sell share cad sha sha cad realized gain acb cad cad balance cad sha cad sha cad cad therefore adjusted cost base system end january realized gain year still share adjusted cost base remarked discussion accounting rule fifo lifo adjusted cost base applies share also type asset notably inventory company sell oldest inventory first assumes accounting purpose effectively using fifo sell newest inventory first using lifo overall price rising lifo method result le reportable income therefore lower tax however according article lifo method frowned upon outside u rarely make sense hoard old inventory discussed capital gain loss context variablepriced asset similar discussion also applies variablepriced liability example suppose need pay invoice foreign currency currency decrease value amount pay also decrease term currency therefore experience unrealized gain turn realized gain actually pay invoice country like australia gain loss asset must reported separately gain loss liability australia called forex realisation event type respectively case one separate income account type realized gain loss conclusion say multicurrency accounting model used track realized gain loss variety accounting rule realized gain loss entered transaction specific rule fifo lifo adjusted cost base implemented system requires slightly different calculation done translation issue independence viewpoint section briefly mentioned concept foreign exchange gain loss apparently depends one choice reference currency canadian person asset cad usd perceive shift exchange rate cadusd cadusd gain whereas american person situation perceive shift loss international business difference viewpoint perception real important financial implication example gain taxed loss example suppose canadian company u subsidiary suppose u subsidiary asset cad usd simplicity also assume subsidiary transaction throughout year exchange rate january cadusd exchange rate december cadusd since subsidiary company american book naturally kept u dollar book would look like using accounting method currency trading account table book u subsidiary company jan opening balance cad usd usd cad usd dec closing balance cad usd usd cad usd preparing financial statement fiscal year u subsidiary translates opening closing balance usd using exchange rate cadusd january rate cadusd december translation table book u subsidiary company translated usd jan opening balance usd usd usd usd dec closing balance usd usd usd usd u subsidiary therefore suffered unrealized loss usd report canadian parent company financial report subsidiary might look like initial capital jan usd minus loss usd final capital dec usd parent company incorporate subsidiary financial statement book ssap requires parent company translates subsidiary statement reference currency cad parent company use exchange rate january translate initial capital use exchange rate december translate income expense final capital parent company might translate subsidiary financial statement initial capital jan usd cadusd cad minus loss usd cadusd cad final capital dec usd cadusd cad note addition correct u dollar canadian dollar fix parent company add book capital gain initial capital usd subsidiary company represents investment point view parent company risen value cad cad accounting period due rise value u dollar cad cad parent company must therefore adjust translated book subsidiary capital gain cad initial capital jan usd cadusd cad plus capital gain cad minus loss usd cadusd cad final capital dec usd cadusd cad note capital gain cad calculated based initial capital subsidiary company also note number add correctly subsidiary side capital gain parent side capital gain capital gain exists point view parent company whose reference currency cad point view subsidiary company whose reference currency usd visible capital gain finally note translation parent company need yearend financial statement subsidiary need detailed information subsidiary transaction suppose canadian parent company also canadian subsidiary assume comparison canadian subsidiary exactly amount type asset american subsidiary transaction second subsidiary financially identical first one except account equity cad therefore book look like table book canadian subsidiary company jan opening balance cad usd cad usd cad dec closing balance cad usd cad usd cad note main difference table initial capital carried different currency also affect initial balance trading account come preparing yearend financial report canadian subsidiary translate opening closing balance cad table book canadian subsidiary company translated cad jan opening balance cad cad cad cad dec closing balance cad cad cad cad financial report canadian subsidiary look like initial capital jan cad plus gain cad final capital dec cad parent company incorporate statement directly book since already canadian dollar example illustrates independence viewpoint important accounting principle end result point view parent company matter whether subsidiary keep track equity usd cad first case parent report capital gain cad partially offset currency exchange loss cad second case parent report currency exchange gain cad net gain case summary matter whether one first translates book new currency prepares financial report whether one first prepares report translates report new currency adding capital gain loss initial capital practice nationality subsidiary course make difference example area taxation example u subsidiary report net loss therefore taxed u however canadian parent taxed canada canadian subsidiary report gain therefore potentially taxed canada although case considered probably wo nt taxed gain unrealized tax partially offset lower tax canadian parent reference currency v equity currency note table make use trading account thus use accounting method treat multiple currency symmetric way reference currency sense ssap account kept single currency nevertheless course difference table american company typically record equity capital income expense usd canadian company cad therefore company favor particular currency however particular asymmetry caused way company choose denominate account built accounting system reason principle company could keep income expense capital account usd others cad accounting method currency trading account would problem accommodating however preparation singlecurrency financial report would somewhat trickier case capital gain loss would added report foreigndenominated capital account done method shown section specific software section provides pointer multiple currency accounting support specific accounting software package gnucash gnucash builtin support multiple currency prior version doubleentry accounting followed method described section wrong way currency gain loss calculated reporting system proper currency trading account could set manually supported exchange rate system transaction calculated hand version support currency trading account added enabled default see multiple currency accounting gnucash information enable also information older manual method
16,Lobsters,education,Education,A Better Cheatsheet,https://www.hillelwayne.com/post/cheatsheets/,better cheatsheet,teach workshop progressive cheatsheets starting point tla alloy alloy one tla cheatsheet cheatsheet theory first implementation etoolbox second implementation sample template sample output result reach greg wilson,teach workshop living spend lot time making better workshop one improvement made creating progressive cheatsheets discus motivation implementation high level picture progression cheatsheet click full size assuming know cheatsheets rather look one page essential entire book problem make lot better starting point currently run workshop two language tla alloy need cheatsheets already public cheatsheets use alloy one asis tla cheatsheet several page long cheatsheets one page past two nobody look step one make one page version tool choice latex typesetting dsl grew wildly beyond original niche best tool fine control layout le intrinsic quality everything else far far worse found cheatsheet template divide material section layout column latex computes layout content column nice know start much content needed best group could reorder section entire thing automatically reflow unfortunately latex finicky often end content overflowing column fixing weird latex error still better trying lay everything manually basic cheatsheets got going started running problem one make cheatsheets useless one made slower cheatsheet theory cheatsheets need dense information pack single page likely someone going find already know need student know exactly need might try apply wrong idea thing like using actually need choose switching function functionset notation thing like much bigger problem still learning material yet mental model know material relevant cheatsheet material covered yet two failure mode realize future material try use wrong place example writing set subset instead subseteq know relevant add much noise trouble locating relevant thing workshop long cover challenging material already stuffing entire discipline student brain need add difficulty top looked way fix problem first implementation direct solution hide anything covered yet instead giving student single cheatsheet give seven first lesson get cheatsheet cover first lesson second lesson get cheatsheet cover first second lesson way final version cheatsheet everything etoolbox package latex define switch newtoggle like newtoggle temporal logic create new maintex file import cheatsheet root document newtoggle topic newtoggle topic b newtoggle topic c input main toggletrue topic input main toggletrue topic b input main toggletrue topic c mean instance main previous switch active write iftoggle topic b content toggle true process normal toggle false skip rendering entire section sure thing student seeing stuff already covered solves problem nicely noise red herring better second implementation topic cheatsheet laid topic order lesson order think something like python function put variadic argument syntax right regular syntax even though one beginner topic advanced topic final cheatsheet might look like cheatsheet cover look like remove c b latex recalculate page layout earlier cheatsheet student see top left bottom left cheatsheet four topic bottom left c student got used seeing bottom left break habit relearn new location problem get worse add topic progression sheet might seem like minor problem like extra mental overhead student nothing actual material accidental difficulty essential difficulty want every piece content exact place every single cheatsheet thought would pretty tough tell latex layout doc content actually render chunk text seemed like expertlevel latex wizardry cheated newenvironment requires iftoggle passed point show normal color white hide text rowcolors white white hide table instead using raw iftoggle created new wrapping environment toggle true proceed normal false though make text environment white text still rendered meaning layout consistent sheet nobody see distracting get job done main downside work inside table something nested environment driving latex crazy wrap whole table requires block splitting table sort get benefit aesthetic worse eh want make progressive cheatsheets sample template produce sample output result first got test facebook workshop back november worked spectacularly people used progression start much easier time finding right material people used final version cheatsheet first group also fewer false negative tried use wrong concept consider big success three note though first gave next progression midlesson exercise people would try use material second half module quickly switched giving endofmodule exercise covered everything really easy forget pas progression added new slide lecture note new handout point collate hope enjoyed peek design process thinking wow person actually give crap teaching feel free reach interested corporate workshop join newsletter announcement new public workshop thanks lito nicolai greg wilson feedback
17,Lobsters,education,Education,Polyglot Documentation with Org-mode,https://www.rse.ox.ac.uk/tech_post/polyglot_documentation_with_org_mode/,polyglot documentation orgmode,orgmode orgmode website built revealjs babel babel research paper written orgmode babel fork path example output let talk simple computer program method print screen,important part teaching meeting student common ground find experience bring teaching incorporate new knowledge alongside already know teaching software engineering concept usually mean tailoring discussion programming language student familiar may explaining languageagnostic concept like objectoriented programming designing reusable function drawing graph student find example given unfamiliar language barrier understanding rse group work lot different programming language quick sample project worked university last year includes javascript c c ruby php swift python r matlab may others point pick different programming language time mean people teach developing teaching material could many commercial saas company document web apis could embed example code many language documentation let reader choose want see tool make easy like markdownfencedcodetabs extension python markdown parser good enough api sample really work tutorial content need talk code prose subtly different language also want maintain wholly separate fork material want one narrative languagespecific sample prose section necessary single source like able build version documentation tailored specific language sample code language necessary tweak discussion orgmode found possible writing document orgmode orgmode extensible format writing structured text hierarchical outline system markdownlike formatting syntax facility marking section todo item due date sample code particular language presenter note used presentation originally written venerable gnu emacs text editor orgmode parser exist vim visual studio code atom elsewhere using emacs parser possible export orgmode file multiple format including hugo website built latex suitable generating printed handout revealjs slide giving lecture crucially orgmode also tagging system section hierarchical outline tagged arbitrary word control tag get included excluded file exported orgmode build multilingual documentation babel another nifty capability orgmode babel designed reproducible research even research paper written orgmode babel babel add literate programming facility orgmode code block orgmode document babel run code incorporating result document even using result input code block tutorial material really good use testing code snippits situ without keep sync separate code file project fork path combining facility give u polyglot programming documentation document kept single orgmode file discussion appearing exactly multiple copy multiple programming language sample code segment languagespecific prose section tagged name language example c tagging sample code mean babel work run code syntax highlighting rule use make easier maintain code block document using tag prose mean excluding including language tag export choose sample code relevant discussion appears output example finally example describing classic hello world program three language c python ruby us different function print message though overall description program c also explain n thing end message string excludetags c python property headerargs result output option tag nil let talk simple computer program program put phrase hello world screen early version appeared book c programming language kernighan ritchie included demonstration prove compiler set correctly day hello world common example program every programming language give newcomer flavour language single contributor behaviour program function print text screen printf function c use printf print screen c beginsrc c include stdioh int main printf hello world n endsrc weird n string tell printf output newline character moving cursor start next line put method ruby use put print screen ruby beginsrc ruby put hello world endsrc print function python use print print screen python beginsrc python print hello world endsrc print screen playing fast loose terminology hello world program writes message stream called standard output often written stdout happens standard output stream usually displayed screen terminal application output rest document generated orgmode file c python tag excluded excludetags line start file result includes discussion example code relevant ruby programming language could similarly get version language let talk simple computer program program put phrase hello world screen early version appeared book c programming language kernighan ritchie included demonstration prove compiler set correctly day hello world common example program every programming language give newcomer flavour language single contributor behaviour program function print text screen put method use put print screen ruby print screen playing fast loose terminology hello world program writes message stream called standard output often written stdout happens standard output stream usually displayed screen terminal application
18,Lobsters,education,Education,How to Run a Live Coding Stream on Twitch using OBS,https://jordanlewis.org/posts/twitch-live-coding/,run live coding stream twitch using ob,large data bank twitter elsewhere online twitch twitter intro section ob trying set first stream ob configuration ob scene desktop desktop setup post video streamlabels whiteboard ipad green screen overlay demo video selfie noopkat blog starting soon later brb right back bye video twitch inspector stream key camera sony sigma desk setup post avermedia live gamer portable plus audio section logitech audio stream alert microphone blue yeti boom arm shock absorber pop filter desk setup post syncing audio video desktop sound capture soundflower loopback streaming twitch finally amruta doc stream alert streamlabs quodb sound stream alert audio section channel setup science technology tag programming educational engineering software development english panel free panel image emotes twitch affiliate banner image saving video creator dashboard playlist chatbot nightbot becoming twitch affiliate emotes shoutouts noopkat awesome post onetruecaptain jarsonmar mdlayher itsjayphillz occupypaulst sartak amruta charlie justin paul,reading post might interested trying hand live coding stream way sharing project relatable immediate way polished blog post teaching others programming way fun think live coding stream general interesting possible future form education entertainment contemplating starting stream sincerely hope month mark month anniversary first stream large data bank twitch live coding channel grown oneoff friday experiment regularly scheduled part life community dozen wonderful regular viewer chatter activity one top thing look forward every week learned lot along way detailed guide way set stream attempt stepping back sharing learning hope inspiring others try awesome hobby hope useful start journey streaming question answered blog post happy answer twitter elsewhere online also please send follow twitch twitter stream notification stream every friday pm et sunday time afternoon intro whatever reason wanting try streaming quite bit setup need front try feel daunting everyone go initial setup period though got important part post section ob awesome crossplatform free open source streaming software community us ob best friend streaming journey use control webcam desktop audio every element go final product livestream rest post focus configuration specific twitch like use twitch like culture developed time plenty people think youtube live appropriate professional content familiar youtube live discussion ob apply youtube twitch main difference configure ob send youtube account instead twitch stream setting yo trying set first stream really need stuff guide represents built gradually past month stream stream recommendation livecodingcurious try streaming barebones setup see like investing expensive gear diving hour configuration asset creation accomplish several hour weekend set single scene ob captured desktop background webcam corner microphone configured micaux need simple setup streaming coding cover make happen ob configuration section ignore extra scene various bell whistle good go ob configuration ob produce everything viewer see hear live video including desktop camera beautiful face voice stream alert overlay text information might want show viewer lot cover ob going try explain talk worked make something suit need flex creative muscle use idea starting place need dive ob play around everyone setup going different scene scene ob name particular layout video audio component stream typically see twitch streamer stay single scene stream game desktop whatever focus handy extra one intro outro stream something cover screen want take break main scene use bound global hotkeys switch without click around ob unfortunately sometimes hotkeys stop working stream yet figure exactly happens happen problem found workaround please let know primary scene couple child scene embedded several main scene deduplicate onscreen element one picture however spend vast majority stream one desktop scene desktop scene workhorse stream one active time consists fullscreen display capture source external monitor convenient leaf ambiguity catpured stream whole monitor leaf laptop screen free ob window monitoring chat anything else want look streaming without show viewer desktop setup post go detail way set desk two monitor convenient stream hooked sure manage without quick note font size make text editor font quite large make legible viewer take little get used use font editor provides visible horizontal line code next nothing compared amount context probably used seeing programming hamstringing worth though bigger font likely viewer able follow along stay engaged ask question learn fun also try remove many distracting element editor desktop possible streaming keep focus code meant disabling mac menubar dock removing vast majority toolbars ide besides desktop capture source back scene added several source face cam video source capture card information video source video section keyboard cam video source webcam pointed keyboard couple text box show recent subscriber follower onstream command text box updated automatically streamlabels app web page source connected streamlabs stream alert cover definitely start element quite lot work tweak thing way want kept configuration past couple month like way look whiteboard whiteboard scene meant showcase ipad full screen allowing draw thing stream demonstrate idea concept use concept app ipad along apple pencil drawing work pretty nicely know fill space bottom left since ipad widescreen aspect ratio like monitor put picture friend aileen drew make stream bit visually interesting scene reference facecam alert source desktop scene definitely use dry principle ob like software get tricky keep everything deduplicated ipad green screen overlay also set green screen configuration ipad overlay scene global hotkey give espn football announcer effect stream draw ipad line appear overlayed top whatever else stream time probably complex video element stream ob make pretty simple set added color key filter black background top raw ipad video feed set drawing app black background tweaked color key setting ob thing looked right use element nearly often like think pretty neat recorded demo video curious look also use occasionally stream selfie fullscreen version facecam copied name scene noopkat blog use scene turn camera moment find really fun switch scene look right camera talk bit switching back desktop view starting soon scene go soon stream turn ready start talking camera usually start stream minute time announced twitter stream leave time come muted mic used gif found internet someone typing people tell stream live even though nothing happening yet also music preroll talk music sound later brb put scene need step away stream moment use bathroom whatever added sound well think kind funny switch scene play right back sound sure sound think meme scene also gif people know stream still alive bye ending stream straightforward click stop streaming button ob rather cutting directly desktop stream nice switch video goodbye scene people know stop broadcast drew little goodbye picture ipad try remember put end stream easy forget lot try pack right end try talk right camera thank people stopping recap stream also typically try find streamer raid time twitch term sending viewer another stream ready stop add bunch extra mental overhead add sometimes forgetting toggle bye scene video bunch setting need tweak ob probably important one video output setting video setting control canvas output resolution size stream canvas computer resolution ob send twitch bigger output resolution bandwidth need stream bandwidth viewer need watch popular streamer get quality option twitch allows viewer watch lower quality streamer get option viewer watch resolution streamer stream canvas resolution differs output resolution ob need apply downscaling filter adding cpu load say set resolution seems like good mix bandwidth quality output setting control behavior encoder must tuned provide right mix quality cpu use generally higher bitrate better stream look network bandwidth cpu ob consume want find mix work use course ymmv experiment best way test stuff record sample video examine well use twitch inspector give modified stream key configure ob start streaming modified key able monitor upload bandwidth bitrate sustainably send twitch via inspector website without actually go live graph recent stream cut due internet issue think caused intense storm rolling brooklyn time see several instability graph unstable event good stable stream zero blip graph one slight annoyance inspector give bitrate bandwidth graph actually let play stream back make sure look good getting started really want test pipeline end end set private unlisted youtube live broadcast stream let see video test stream camera use sony camera sigma lens capture visage definitely need high quality camera get started streaming got one might well use quality immediately noticeable whatever camera use probably want make sure nice light shining beautiful face easiest way stream day sunlight make everyone look good streaming night need figure lighting different way talk cheapo diy softbox use desk setup post side note using usb webcam camera laptop need capture card convert camera hdmi output video stream ob use use avermedia live gamer portable plus hideous rather large trick also pas hdmi give option capturing game console ever decide stream something programming one thing note capture card introduce latency camera see output stream ob compensate added artificial latency microphone match capture card latency talk later audio section started logitech fabulous affordable webcam upgraded fancier sony figured put logitech good use pointing handsome keyboard letting viewer see soothing soothing asmr effect hand tapping key stream like add little bit extra mental load make sure remember type password leaked unimportant password couple time way though sure anyone taken time try figure video hopefully point learned lesson audio sound really important component stream besides video viewer want hear silky smooth voice depending trying stream might also want hear sound whatever computer also like include low volume background music stream ease transition silence take moment think also common touch add sound stream alert ob several place configure audio want start adding microphone yeti stereo microphone case micaux dropdown audio setting microphone use blue yeti mic popular choice good mix price quality mounted desk boom arm bring microphone close face without getting way keyboard shock absorber pop filter avoid distracting sibilant noise vibration furious typing desk bump might ensue wrote desk setup post advantage bringing mic close face boom allows lower gain microphone avoid noise voice even low gain though microphone sensitive pick noise like fan air conditioner partner phone call ob several filter apply microphone input help suppress background noise like compressor expander limiter noise suppression lot discussion ob forum around web rehash copious testing different setting level background noise come conclusion best filter noise suppression filter db almost certainly different try thing syncing audio video test stream notice issue synchronization mouth moving video sound speech tweak advanced audio property setting ob add delay microphone compensate latency capture card use webcam course vary depending setup way test using start recording feature ob recording clapping several time open video vlc play back slow motion trying line sharp sound clap image hand hitting kind hard think must movie producer use iconic clapboard hand probably much easier see exactly two half clapboard hit two hand desktop sound capture admit getting desktop capture sound right ob mac kind pain use soundflower open source kernel extension allows set audio output device program use input source allows ob listen computer sound output order also listen desktop sound need make aggregate device audio midi setup program include headphone soundflower device set computer output device new aggregate device created alternatively shell loopback rogue amoeba much easier way anyway get set want add soundflower loopback output device desktop audio device able see level device audio mixer bottom stream adjust fly streaming twitch finally okay tweaked ob liking set webcam microphone created scene actually go ahead start streaming first thing first need create twitch account one already twitch documentation quite good according expert tech writer colleague amruta check doc info got account set need find stream key twitch website enter ob stream setting done start live stream take deep breath smile camera hit start streaming button ob live fun stream alert stream alert fun way encouraging people follow subscribe channel someone follows subscribes gift sub raid host stream sends bit stream alert configured play gif sound display name person performed action along thing use streamlabs alert box stream alert easy use free configured alert box streamlabs website add stream browser source somebody interacts stream streamlabs send alert webpage source pointing thing le confusing sound streamlabs pretty good instruction site set follower alert look like stream blue background transparent lot fun picked bunch different gifs alert type personalize thing found movie quote quodb people say something related data bank found clip online created play people subscribe also streamlabs play random set keep thing fresh people follow sub sound stream alert besides exciting viewer stream alert also serve another purpose make noise know react exciting follow sub raid came way one problem though need make alert play stream headphone without playing twice troublesome desktop audio capture default browser source play audio directly stream mix output locally sound good viewer streamer able hear alert streaming need check control audio via ob box browser source set audio monitoring dropdown advanced audio property monitor output see action audio section output stream configured monitor audio careful though monitor audio audio output getting captured soundflower loopback viewer hear doubled sound avoid make sure monitoring device set headphone ob audio setting channel setup gotten stream going probably want use twitch tool fill page help give stream unique look branding help viewer understand stream several thing take care like rest setup probably want start simple enhance time see fit twitch give every stream opportunity list category since twitch started still primarily gaming website category individual game several nongaming category one live coder use called science technology use well category also great way finding programming streamer watch get inspired learn twitch also allows give stream tag way aid stream discovery help viewer know stream always tag stream programming educational engineering software development english tag somewhat hard tell viewer come via twitch analytics reference viewer breakdown one recent stream believe recommendation browse page view probably came stream category tag panel panel twitch way giving channel section panel image text fairly annoying abstraction honest panel image fixed size much control laid go text stream image give stream unified look feel eventually like pay artist make themed panel emotes found free panel image behance liked someone named anibal alvarez thanks anibal emotes add custom emotes subscriber use chat twitch become twitch affiliate emotes lingua franca expressing feeling twitch great way demonstrating support channel lot people like commission themed emotes channel artist like point uploaded funny picture someone added work slack image ancient alien guy see resemblance banner image also slot banner image twitch yet another asset probably want generate avoid default banner look twitch name laid repeating pattern plain colored background used previewapp make mine result predictably amateur really want replace image soon made far post figure person banner relates title stream congratulation nerd saving video one important thing note default twitch archive stream video need turn setting located channel setting page creator dashboard enabled setting video stream saved twitch server week video handy dandy export button allows permanently save video youtube download want reason export video youtube trim intro outro add playlist archival purpose end lot youtube content quickly method exactly sure whether super useful save hour hour content create streaming raw youtube stream video get several view time imagine somebody must find useful chatbot stream start accumulating viewer probably start notice frequently asked question new viewer start get tiresome answer channel chatbot set command viewer type get answer faq channel people love ask current project kind keyboard kind asking one webcam pointing time editor color scheme us command type project keyboard editor theme chat bot respond answer lot twitch bot like use nightbot good mix feature free easy use people love make twitch bot well notice one common project people programming channel actually needed anything fancy nightbot provides becoming twitch affiliate twitch affiliate program apply channel hit certain viewership followership metric becoming affiliate unlocks several feature stream signifiantly allowing viewer subscribe channel monthly fee grant emotes use chat room twitch good feeling supporting streamer affiliate stream also get couple feature stream like channel point currency accumulate watching stream redeem streamerdefined reward tried playing around channel point yet getting affiliate require work need follower average concurrent viewer per stream total broadcast minute least stream past day definitely put mind took month become twitch affiliate hardest requirement hitting stream month implies needing stream per week started streaming every friday one stream per week already quite bit mental effort added sunday stream well basically could hit affiliate twice week add time energy sure expecting outset found seeing friend colleague random stranger subscribe support stream really wonderful feeling motivates try hard make fun stream every week shoutouts want shout noopkat awesome post streaming setup well helped get started februrary another fantastic resource getting started streaming programming twitch thanks streamer collaborated creating setup onetruecaptain jarsonmar mdlayher itsjayphillz occupypaulst sartak thanks much everyone joined stream watch chat follow jeer subscribe channel great motivator support mean lot obviously fun without special thanks subscriber thanks amruta charlie justin paul sean reviewing post finally thanks becca rohrer putting yelling computer shared office room hour hour twice week especially quarantine must extremely annoying thank gracious tolerance support hobby mine love
19,Lobsters,education,Education,Visualizing and Understanding JPEG Format,https://github.com/corkami/formats/blob/master/image/jpeg.md,visualizing understanding jpeg format,jpeg jaypeg reference structure nonzero exception parameterless marker magic signature terminator entropycoded segment file start diagram rgb jpeg pdf download segment marker jpeg itu iso iec jpeg jpegls marker table cx dx ex fx motionjpeg quicktime file format trick multiple scan progression control,jpeg jaypeg jpeg joint photographic expert group image encoding jfif jpeg file interchange format file format storage reference official specification source tool source structure could simple structure nt exception jpeg file sequence typelengthvalue chunk called segment xff marker c length value length c type defined marker byte ff nonzero byte length big endian byte cover size whole segment length length cover length marker also mean segment byte long nonzero byte rule important data encoding would output ff byte literal encoded express ff byte data segment marker exception exception tlv structure jpeg overall structure scan segment ec possible right scan parameterless marker type marker parameterless length value marker magic signature offset called start image soi ff terminator end file called end image eoi ff restart marker ff optional indicator middle ec data entropycoded segment start scan properly defined tlvsegment right entropycoded segment start nt follow similar convention despite segment name likely enable ec grow size beyond usual byte limit represent file data fair see jfif format misleading wellstructured chunk unclear huge ec blob middle length unknown advance defined file way get length either decode fastforward scan forward ff byte restart marker followed data ff followed continue file start jpeg file start ff ff j f f lead following wrong assumption signature ff ff offset jfif offset read start image marker ff signature enforced offset segment application marker encoded ff length encoded data signature rest chunk little interest many jpegs nt ff segment offset exif information start like ff ff xx yy e x f diagram rgb jpeg dissected made segment soi dqt so dht so ec eoi observation signature way short human readable default header nt contain typical information dimension colorspace actually make optional quality quantization table unoptimized jfif structure pdf download official specification abbreviated format several jpgs transmitted without resharing header implemented knowledge segment marker jpeg reserved reserved tem temporary marker arithmetic coding resn reserved jpeg defined itu iso iec frame type supported libjpeg start frame baseline jpeg start frame extended sequential huffman start frame progressive huffman start frame lossless huffman libjpegunsupported see dht start frame differential sequential huffman libjpegunsupported start frame differential progressive huffman libjpegunsupported start frame differential lossless huffman libjpegunsupported see jpg start frame extended sequential arithmetic ca start frame progressive arithmetic cb start frame lossless arithmetic libjpegunsupported cc see dac cd start frame differential sequential arithmetic libjpegunsupported ce start frame differential progressive arithmetic libjpegunsupported cf start frame differential lossless arithmetic libjpegunsupported others jpg reserved jpeg extension libjpegunsupported dht define huffman table cc dac define arithmetic coding conditioning libjpegskipped restart marker parameterless scan data restart marker restart marker restart marker restart marker restart marker restart marker restart marker restart marker delimeters soi start image parameterless eoi end image parameterless da so start scan db dqt define quantization table dc dnl define number line libjpegskipped dd dri define restart interval de dhp define hierarchical progression df exp expand reference component fe com extension data comment jpeg extension itu iso iec application segment application segment jfif len jfxx len avi mjpeg application segment exifxmpxap application segment flashpix icc application segment kodak application segment flashpix application segment ricoh application segment gopro application segment pentaxqualcomm application segment spiff application segment mediajukebox ea application segment photostudio eb application segment hdr ec application segment photoshop ducky save web ed application segment photoshop save ee application segment adobe length ef application segment graphicconverter extension data section extension data libjpegunsupported extension data libjpegunknown extension data libjpegunknown extension data libjpegunknown extension data libjpegunknown extension data libjpegunknown extension data libjpegunknown see see lse extension data libjpegunknown fa extension data libjpegunknown fb extension data libjpegunknown fc extension data libjpegunknown fd extension data libjpegunsupported jpegls lossless start frame lse extension parameter defined iec jpeg core part file start atombox structure like typical ftyp atom eventually contains box length end file contains jfif segmentmarkers structure delimiters soc start codestream sot start tile sod start eoc end codestream overlap eoi fixed information segment siz image tile size functional segment cod coding style default coc coding style component rgn region interest qcd quantization default qcc quantization component poc progression order change pointer segment tlm tilepart length plm packet length main header plt packet length tilepart header ppm packed packet header main header ppt packed packet header tilepart header bitstream internal marker segment sop start packet eph end packet header informational segment crg component registration com comment cbd component bit depth definition mct multiple component transform mcc multiple component collection mco multiple component transformation ordering part secure jpeg sec secured codestream insec insecured codestream part jpeg wireless epc error protection capability epb error protection block esd error sensitivity descriptor red residual error descriptor marker table xa xb xc xd xe xf nul tem siz cod coc tlm plm plt qcd qcc rgn poc ppm ppt crg com sec epb esd epc red sot sop eph sod insec cx dht jpg dac dx soi eoieoc so dqt dnl dri dhp exp ex fx lse com motionjpeg quicktime file format real standard variant pure concatenation jpg image right eoi come new soi next frame see ffmpeg mjpeg codec motionjpeg real jfif start like jfif image ff mjpg tag standard jfif strucure marker ec motionjpeg b jfif start directly mjpg marker jfif marker various segment since mjpg header contains pointer quantization table huffman table start frame start scan ec data stuffed trick appx segment enforced offset despite specification even required lossless storage make jpeg store data losslessly use grayscale quality either width eight pixel duplicate padded data time jpeg image stored block split scan ec easily bigger comment segment limited store big jpeg comment split scan making jpeg progressive using custom scan via jpegtran multiple scan progression control
20,Lobsters,education,Education,The Pyret Code; or A Rationale for the Pyret Programming Language,http://pyret.org/pyret-code/index.html,pyret code rationale pyret programming language,pyret code rationale pyret programming language use java python racket ocaml haskell journal paper drscheme whalesong pyret ever fullfledged programming language bootstrapping phase lot kind way educational philosophy influence language example testing equality primitive pyret also research project paul graham next model come board bootstrap project join u filename suffix pirate supposedly said sing skull logo name bonny,pyret code rationale pyret programming language need better language introductory computing good introductory language make good compromise expressiveness performance simplicity featurerichness pyret evolving experiment space use java python racket ocaml haskell one enduring lesson racket project fullblown generalpurpose programming language particularly appropriate introductory education time language grows useful building largescale system tends accumulated many wart odd corner complex feature trip student journal paper drscheme old name drracket explains detail respect closest fellow traveler u pyreteers racketeer see work fact first version pyret merely lang racket nevertheless pyret represents departure racket near future least several reason wanted experiment syntax much many u love parenthesis fear racket always bump acceptance threshold due syntax delighted see growing adoption industry language like racket clojure maybe day parenphobia academic far hidebound industrial programmer wanted build really great runtime system web browser going racket whalesong proved nonstarter term performance racket many feature make efficient implementation today javascript hard building native javascript implementation option could see time technology change could change though pedagogy draw similar racketeer also diverges way reflecting somewhat different background preference team pyret embodies educational philosophy felt could easily experiment cleanslate design keep fitting work constraint racket ultimately racket lang facility though designed create new great prototyping ground quite enough support language creation process scale pyret need strong web runtime system also meant get enough racket ecosystem nevertheless represents state system today someday two grew closer together many u would rejoice pyret ever fullfledged programming language yes first pyret much powerful might realize pyret already fullyfledged enough selfhost compiler nontrivial realistic challenge mean run pyret browser load javascript code implement pyrettojavascript compiler ie compiles pyret type javascript run browser compiler produced pyrettojavascript compiler compiling pyrettojavascript compiler take look compiler bootstrapping phase get sense sophistication second underneath pyret powerful runtime system based decade research see user language point many language expose crippling limitation javascript runtime user eg halt longrunning computation yield control event loop etc language effectively let medium become part message whereas believe programmer especially earlystage student programmer confront complexity irrelevant often significantly interfere material trying learn imagine language said love give function call machine instruction set contain sorry yet equivalent come giving control computation top javascript contrast pyret uncompromising third want teach mediarich curriculum actually need pretty fullfeatured language least hood instance pyret builtin support reactive programming requires much sophisticated runtime system corresponding language feature one offer punted javascript support essentially eventloops firstclass entity language emphasized feature talking pyret focusing instead curriculum support broadly view building awesome teaching language useful design discipline necessarily entail feature typically expected mature language building language constantly confronted question next whether language designer therefore need mental framework guide choice might awesome language sharedmemory concurrency others might awesome language writing scientific computation concisely u awesome teaching language whenever confronted design implementation choice first ask would play specific context ask would impact longterm goal yet find actual contradiction two certainly reordered priority lot kind right focused introductory programming education highschool collegiate level often called roughly first year college pyret actively used everything highschool upperlevel collegiate course giving u tight feedback loop course even setting difference opinion need taught believe inheritance important taught early first semester utterly reject belief someone wisely said programming scale point teaching class inheritance student yet done anything interesting enough encapsulate inherit gone far start teaching turing machine unsurprisingly reject view well take dogmatic stance exactly early state type introduced pyret usual stateful operation discussed length eventually decided introduction programming must teach state pyret also optional annotation different instructor depending preference introduce type different time way educational philosophy influence language pyret driven design program htdp philosophy programming education one could almost view language designed make teaching htdp comfortable however also curricular idea extend run parallel htdp steadily writing programming programming language papl papl exclusively us pyret slowly turning definitive book teaching central idea include language offer rich set value instance image primitive value fully supported environment improves teaching several thing imagebased composition exercise often far interesting composition number animation game language offer syntactic support much possible htdp design recipe pyret offer explicit support template rethinking pedagogy template step design recipe support includes good data definition primitive including expression invariant therefore pyret support refinement currently checked dynamically future version may add static support highest priority particular allowing algebraic datatypes also object pyret offer significant flexibility expressiveness student able easily write example precursor writing code regard pyret borrows believe syntactically improves upon racket checkexpect family operation example testing student easily able escalate simple example sophisticated testing writing test oracle equality subtle language respect nuance student must understand meaning equality consequence especially regard observation presence state therefore pyret carefully developed equality primitive pyret also research project yes yes broadly speaking view much research effort specific novel goal mind described elsewhere document finding good solution achieve goal require innovation essence research research curricular side though may require language innovation indeed much possible want pyret remain language easy approach understand however also narrow meaning academia sense publishing lot paper ungoal almost antigoal every paper take month write month spending language curriculum view poor time tradeoff write paper sometime immediate focus shipping code textbook material immediate value student educator mean get technical innovation fine consider good tradeoff ultimately though research requires new thing want new thing sake long inspired quote paul graham difference design research seems question new versus good design new good research good new u design essential research optional actively dogfood pyret teacher actively teaching programmer actively building thing give u ongoing feedback point friction necessary done continue research publishing academic paper rather putting work educationally continue take back seat next currently hard work three important feature support static typing pyret conventional type system tagged union type checker resulting straightforward type error without complication associated type inference algorithm carefully designed pyret always typeable earlier type system good enough pretty happy one going table critical type storing realworld data pyret adding linguistic library support working effectively table papl use expose student thinking early model interactive computation based model currently revising updating way help better serve new educational program like stay abreast development get involved discussion please come board educational side pyret already used bootstrap project developing three new curriculum bootstrap curriculum corresponding standard introduction computer science several twist based pedagogy material c principle curriculum new u college board advanced placement exam physicsmodeling curriculum help teach student physic modeling medium programming like talk join u filename suffix arr pirate supposedly said lot sometimes sing note must pronounce guttural sound mistaken file written r programming language consider swashing buckler speak skull logo name yes bonny look closer lambda
21,Lobsters,education,Education,A Deep Introduction to JIT Compilers: JITs are not very Just-in-time,https://carolchen.me/blog/jits-intro/,deep introduction jit compiler jits justintime,jit compiler implemented fast julia pypy luajit graal chris jit compiler implemented fast julia pypy luajit graal programming language implemented jit julia jit compiler justintime jit take two pogo warm,familiar jits generally work get title referring recommend skimming going straight reading jit compiler implemented fast julia pypy luajit graal mentor chris took jit told compiler byte byte lowlevel scary actually fairly true fun learn compiler internals often useful programmer everywhere blog post give background programming language implemented jits work introduce implementation detail julia language though wo nt talk specific implementation detail optimization made traditional jits check jit compiler implemented fast julia pypy luajit graal read metatracing implemented graal support c extension relationship jits llvm programming language implemented run program either interpreted compiled way compilerinterpreter sometimes referred implementation language one language many implementation may heard thing like python interpreted really mean reference standarddefault implementation python interpreter python language specification cpython interpreter implementation python interpreter program directly executes code wellknown interpreter usually written c ruby python php written c function loosely model interpreter might work func interpret code string code print hello world print hello world else code x x print x variablex variablex print x compiler program translates code language another language though usually refers destination language machine code example compiled language c go rust func compile code string byte compiledcode getmachinecode code writetoexecutable compiledcode difference compiled interpreted language actually much nuanced c go rust clearly compiled output machine code file understood natively computer compile run step fully distinct however compiler translate target language sometimes called transpiling java example twostep implementation first compiling java source bytecode intermediate representation ir bytecode jit compiled involves interpretation python ruby also execute two step despite known interpreted language reference implementation actually compile source bytecode may seen pyc file anymore contain python bytecode bytecode interpreted virtual machine interpreter use bytecode programmer tend care le compile time creating bytecode language allows engineer specify bytecode efficient interpret possible bytecode language check syntax execution though could technically pas starting interpreter example show would want check syntax runtime sleep bad syntax beep boop beep boop another important note interpreted language typically slower various reason obvious executed higher level language overhead execution time main reason dynamicness language tend implement mean need many extra instruction decide next route data people still choose build interpreter compiler easier build suited handle thing like dynamic typing scope etc though could build compiler feature jit jit compiler nt compile code aheadoftime aot still compiles source code machine code therefore interpreter jits compile code runtime program executing give jits flexibility dynamic language feature maintaining speed optimized machine code output jitcompiling c would make slower adding compilation time execution time jitcompiling python would fast compilation executing machine code often faster interpreting especially since jit need write file disk writing expensive memoryramregister writing fast jits also improve speed able optimize information available runtime julia jit compiler justintime common theme compiled language statically typed mean programmer creates us value telling computer type information guaranteed compile time julia dynamically typed internally julia much closer statically typed function multiply x x end example julia function could used multiply integer float vector string etc julia allows operator overloading compiling machine code case productive variety reason wanted julia compiled language idiomatic programming mean function probably used combination type nt want compile something nt use yet since jitty real term code multiply julia compile function multiplies integer wrote multiply alreadycompiled code used added multiply another version function compiled observe compilation codellvm multiply generates llvm bitcode quite machine code lowerlevel intermediate representation define top within mul ret multiply see complicated get compile even one function aot compiled julia optimization made reduce combination would live compiled code even one used along control flow delegate define double double top within within promote within promote within convert within sitofp double within fmul double ret double general strategy assume type compilebehave based called type inferencing julia mildly us example lot compiler optimization made though none specific jits julia may better described lazy aot compiler simplicity kind jitting make easy julia also supply aot compilation also help julia benchmark well definitely tier language like python comparable c cite number always nuanced nt want get jit take two julia actually jittiest jit discus interesting jit actually compiles code right code need used time jits however pypy java j engine actually compiling code justintime compiling optimal code optimal time case time actually never case compilation occurs vast majority case compilation nt occur source code executed numerous time jit stay interpreter overhead compilation high valuable aspect play generating optimal code assembly instruction created equal compiler put lot effort generating welloptimized machine code usually possible human write better assembly compiler though would take fairly smart knowledgeable human compiler dynamically analyze code mean thing like knowing possible range integer key map thing computer could know partially executing program jit compiler actually thing interprets code first gather data execution thus jits expensive interpret add compilation time execution time make highly optimised compiled code timing compilation also dependent whether jit gathered enough valuable information cool part jits sort lying said jit implementation c could faster existing compiled implementation would feasible try jitcompiling c way described strict superset compiling language thus logically impossible compile code fast enough make compileprofileinterpreting time jit compiled c similarly julia statically compile function called would impossible make faster compiledc compiletime nonnegative generated machine code essentially pogo though jitting c feasible one find middle ground profile guided optimization pgo cutely uncommonly pronounced pogo instead profiling executing compile program pgo profiling run program recompile original program profiled data passed effective reducing compiledcode size improving branch prediction warm jits concept warming intepretation profiling time expensive jits start executing program slowly work towards peak performance jits interpreted counterpart like pypy jit without warmup performs much worse beginning execution due overhead profiling also reason jits consume signifcantly memory warmup add complexity measuring efficiency jit fine measuring performance generating mandelbrot set becomes painful serving web application first n request painfully slow complicated fact performance strictly increase pypy decides need compile many thing jits compiling function might slowdown middle also make benchmark result ambiguous check jitted language given time warmup also want know took unseemly amount time warmup optimizing compiled code warmup speed unfortunately zerosum least smallsum nature try get code compile sooner le data available compiled code efficient peak performance lower aiming higher peak performance course often mean higher profiling cost java javascript engine example jits put really good care warmup time may find language built academic us monstrous warmup time favour snazzy peak performance talk implementation tracing jits metatracing jits specifically luajit pypy introduces graalvm hotspot go deeper javascript engine go tiering sea node deoptimization inlining
22,Lobsters,education,Education,The true cost of knowledge,https://blog.royalsloth.eu/posts/the-true-cost-of-knowledge/,true cost knowledge,expensive knowledge research knowledge come spoon fed knowledge experience magic sauce book read next world eye sloth mastery note writing system software code comment http,ago pulled discussion speed magic optimization particular container within standard library coworker programming language choice claiming special container somehow magically performs better normal array used adding number every element within containerfor reason corporate world always find piece wisdom floating around standard library treated kind magic box performs order magnitude better whatever could ever program yourselfi believe witchcraft though memory access memory access unless figure efficient algorithm performing operation magic container going perform faster convinced person write actual program compare magic container every day array lo behold favorite optimization technique could summed doubt use loop iterate array proved right thing compiled le thing array solution performed slightly better averageit go show software industry excels regurgitating myth instead sitting thinking really hard problem hand partially blame culture pervasive money making industry like spoon feed scholar random bit trivia instead actually making think also know name higher educationwhen know nothing spoon fed knowledge great way become aware vast field around soon gather enough knowledge dangerous start realize gellmann amnesia effect real thing world broken since young people spoon fed knowledge tremendously large chunk life prone simply accept random piece knowledge found random blog fact rule live bit knowledge accumulated moving forward osmosis get point people believe voodoo computer operation somehow inaccessible mere mortalshow expensive knowledge live relatively well organized society knowledge actually free least priced point could consider freeformal education country free quite free pay relatively high tax free way anyone could attending school regardless income social status university lecture also public free attend anyone street usually happen still option someone willing listen learn something newdespite spending year school really learn much one thing learning internals specific thing interested whereas abstract learning general stuff interesting introduced new concept learned great deal math never used later pretty much brain made teflon whatever threw stickthe main problem see modern formal education trying compact ever growing knowledge chunk memorize repeat asked keep busy parent able work treat brain hard drive dumping fact reality selfprogrammable high performance cpu infinite potential preserving data rather poorly case wondering wordy description mean brain far far away dumping ground fact excels making abstract connection general never seen type problem solvingas richard hamming put excellent research talk inclined believe longhaul book leave essential important book tell everything want know everything want know much penguin usual reply want know essencerichard hamminglearning fact date somebody discovered something useful world knowledge click away good occasion mingle impress audience gala table mostly taking away brain space could used solving important problem mere memorization amount knowledge absolutely exploded past year possibly cram junk tiny brain compartmentof course statement enrage people land free spent thousand education time thing better explained elsewhere pretty good math teacher find thousand time better lecture internet made stranger educating others goodness heart best freewhere knowledge come thing accumulated year came mildly amusing idea call internet english class school actually learned english playing online game mindlessly browsing internet nowadays mostly communicating english despite native speaker knew wasting time internet would useful one day certainly notbut learn computer stuff learned program via shitty online tutorial building useless website building crappy website mind text editor mind blowing experiencei learned manage linux server tinkering old crappy laptop endlessly broken linux system also pushed useless website played system website appeared browseri learned rest reading book particular topic interested later talking coworkersthe actual knowledge came spending thousand hour front computer trying thing playing already discovered concept may well formulate insight great work spoon fed knowledge experience magic saucethe parameter equation also listed chronological order appear throughout life spoon fed knowledge obtained formal education reading book online tutorial picking brain experienced peopleexperience given enough spoon fed knowledge plenty hour knowledge turned experience suddenly mildly aware work based past scarsmagic sauce mix consists thought experience inspiration brewed year might well fit realm creativityyou free throw insanity mix make popwhich book read next writing question search engine choice provide hundred thousand result list top book x help career change perspective forever list accompanied tiny note telling author associated largebookstore buying link somehow help run blog order publish useful listsi checked library dead tree item found technical book bought read multiple time past year pretty good extremely valuable career reading deep dive topic interested great investment definitely read much possiblestill really suggest read book bought great investment point one day reach level realize knowledge book apply certain point sticking whatever book author say actually bad idea specific casesometimes even realize book author preaching actually harmful fact hurting entire industry poisoning bright mind false idea like advice well known person b sell book preaching comment harmful big code smellthe advice totally fine yes definitely structure program way code self explanatory one day happen work one multi million line long codebases people kept advice close heart year original developer long gone nobody know damn thing work certain architectural decision made nothing make sense documentation reflect current state code sure clean none smelly little commentsthe zealot argue people misunderstood book pushed people towards improving structure program opposed writing lengthy comment result naturally exact opposite people hesitant write comment writing comment become big bad wolf afraid big bad wolfthe best code ever written date contains lot comment fact particular codebase consists comment feedback got current maintainer mostly easy jump update business logic unknown possible future pitfall explained right comparison math software world really well defined thing math long equation full weird hieroglyph long put right stuff get right stuff everything exactly defined proven misconception thing behave unless trying divide zero bet software world feel closer creative writing sure rule best practice regard hardware behaves come actually defining structure program longer well defined thing maybe write like maybe know end boil experience personal preference author still decade long debate comment tab v space nonsensedo consider particular book bad book yes definitely helpful read first time made think structure program structure affect people team still consider holy bible programming type book everyone read stick whatever written lot fluff bad advice conflict example presented long treat another opinion piece tool toolbox finebut truly care craft special book mind called world eye sloth happen selling right buy mere really call professional without reading one sureok let get derailed bashing book seller ah yes cost knowledge much think book actually cost given average book programming cost would even live country inflated engineering salary great bargain gaining amount experience would cost year full time programming hand gain couple year reading amount book take together practicing thing readin reality actual cost book even lower best book could read free author website library still thing pull pirate hat closet actually get free either way fund please compensate author hard work writing lengthy book article like one hard time consumingin essence section even right formal education odds make fine modern world knowledge essentially free waiting picked pay year study masteryif knowledge free weird office debate time educated people believe magic library programming language choice rarely anybody go first principle really think stuff happens hood loop iterates array happens loop iterates linked list iterates magic array like container know guess passing knowledge teacher scholar hard despite technological advance quite figure yet passing knowledge hard teacher poor job scholar willing listen prefer live world magic library transforming ever growing knowledge actual understanding tremendous amount hard work usually take year really get master subject top software industry riddled used ol vacuum cleaner salesman trying get part pie keep making beginner friendly javascript course promising turn master craftsman matter hoursit crowded bar everybody yelling nobody anything value say filtering noise hard take year able recognize signal noiseso one become master field want make better sushi thing improving bit bit always yearning achieve continue climb trying reach top nobody know top iseven age decade work think achieved perfectionjiro sushi master age live learnnotes gellmann amnesia phenomenon expert believing news article topic outside field expertise even acknowledging article written publication within expert field expertise errorridden full misunderstandinga younger programming problem searched around solution first link great site called stackoverflow filled great solution problem amazingone day woke realized answer site actually plain wrong answer posted solve problem asker never stating pitfall approach know lot particular topic even realize copying flawed approach production codeuntil one day program crashing due running memory oops copying chunk memory multiple time solution someone provided stackoverflow know better time accepted solution worked asker tiny problem bit as slightly larger one study computer science maybe much useful might want read depth blog post writing system software code comment creator redis talking actual knowledge paper knowledge get finishing certain course degree profession simply work without finishing course obtaining paper software industry one say take year hour become proficient subject see http
23,Lobsters,education,Education,Looset - A promise to improve documentation and code knowledge,https://www.google.com/url?q=https://youtu.be/ktVpk1UukKA&sa=D&ust=1593688146969000&usg=AFQjCNH-hzZgVz-r-OetlQd-EIyQiXlxrA,looset promise improve documentation code knowledge,,
24,Lobsters,education,Education,Quantum Game 2,https://github.com/Quantum-Game/quantum-game-2,quantum game,quantum game quantumgameio faceboook medium piotr migdał philippe cochin chiara decaroli klem jankiewicz kuba strebeyko pawel janicki center quantum technology national university singapore quantum tensor braketvue quantum encyclopedia staredquantumgame installation yarn contribution issue issue,quantum game puzzle game photon superposition quantum measurement right browser true quantum mechanic underneath follow update twitter quantumgameio faceboook read blog post medium quantum game currently developed dr piotr migdał philippe cochin chiara decaroli klem jankiewicz kuba strebeyko pawel janicki others version game funded center quantum technology national university singapore current version us subcomponents quantum tensor javascript typescript package sparse tensor operation complex number npm package created game made way reusable braketvue quantum state operator visualizer vuejs quantum encyclopedia encyclopedia element concept quantum physic play old version source staredquantumgame installation need yarn installed cloning install dependency run contribution opensource project appreciate contribution issue please report error using issue please explicit wrong desired behavior screenshots help lot
25,Lobsters,education,Education,Wheel of Fortune for videocalls,https://blog.rebased.pl/2020/06/16/wheel-of-fortune.html,wheel fortune videocalls,wheel fortune github page ob setting scene le pink please black unsplash face krtek hiding background streaming virtual camera plugin module jitsi electron app meetjitsi gameplay project page twittercomrebased,rebased invested remote work year still keeping small office three big polish city people want work office meet coworkers good coffee local roastery situation meant working office highly discouraged fell back working home remote location away big city order least bit face time introduced daily online coffee call halfhour slot every day anyone join chat listen talking coping read saw spare time eventually get stale despite best effort inspired recurring quiz youtube occasionally watch cobbled together quick prototype wheel fortune game play call decided rewrite properly elm positive feedback comprehensive readme project github page detailing set video call platform choice let quick look set linux machine ob jitsi videocall platform ob ob open broadcaster studio excellent opensource program video recording especially live streaming install package manager may named obsstudio running first time pop autoconfiguration wizard either dismiss configure ob streaming using whatever setting detects really relevant afterwards go settingsvideo set output resolution higher aspect ratio best compatibility video call software return main interface see something similar panel layout configurable reorganized presentation window similar setting scene start launching wheel fortune browser choice separate window switch tab mistakenly enable developer tool undock separate window player see setting new puzzle problem also worked around ob scene switching devtools window foolproof using firefox screen top tab bar use vertical tab hidden single tab open hideous magenta background reason get rid return ob click plus button source panel select window capture exact name source depends o dialog follows give source name click ok next window allow select specific window set basic cropping choose dedicated browser window crop ui confirm ok scene look something like red frame indicate scene element movable resizable scale reposition quickly scale fill screen click press ctrlf le pink please next right click either scene element name source window select filter new window click plus select chroma key accept default name see effect control slider change key color type magenta move similarity dial back color correct minimal color bleeding value seems work may also want change smoothness closing window see game interface black background black launch favourite browser find nice background image download return ob add image source new picture default added top layer obscuring interface rearrange source list dragging selecting scene element using caret button want image bottom list chosen freely usable photo walt disney concert hall la unsplash additionally locked source using padlock icon accidentally moving longer possible face one thing still missing host video feed source panel add video capture source select webcam reorder position image somewhere obscure anything add crop filter show little surroundings possible next image show hiding behind krtek plushie positioned corner behind wheel graphic hiding background notice green background behind screenshot green screen easily buy photography equipment vendor ob offer option remove static background choice applying another chroma key filter remove green background integrate image notice discoloration plushie hat due lighting room uneven unlike real photo studio chroma key filter suffering completes scene setup instruction let move streaming part streaming exactly streaming close setting broadcast popular streaming platform could add server info click start streaming however working video chat slightly different goal constraint discus jitsi similar quirk restriction one thing taken ob camera present videocall enter virtual camera virtual camera virtual camera piece software usable application like real webcam take video input another source continuing linux need two piece one ob plugin either install package manager compile manually way scope second piece linux kernel module also likely available package manager load module first ensure use newly created device adding video group setting permission bit way scope install plugin restart ob use new option tool start feeding virtual camera device path must match module created video format matter click start make virtual camera film scene setup ob older version used crash ob clicking stop seems longer case may jitsi linux use jitsi meet electron app want app using browser version also acceptable jitsi special requirement available three major operating system use today launch join start room jitsi videobridge workbase server instance use freely available meetjitsi server video feed automatically pick available camera system virtual cam set use dropdown attached camera button find enable worry preview picture appears cropped like participant see full videocall program crop video optimized case single face somewhere center enable microphone interact browser devtools window control game invite people use console command add player list set puzzle start playing gameplay rule keybindings described detail project page quick recap enter spin letter reveal present player turn space move next player manually first time presented morning coffee call lot surprised face given rebased programmer experienced seniorlevels every one able implement really something version played day polished one available github quick javascript prototype cobbled weekend want release due poor quality later rewrite elm gave rise currently published version project still bit rough around edge could use work extensive testing go ahead set fun let u know github issue break like see added give u shout twittercomrebased set played team
26,Lobsters,education,Education,Ray Tracing in One Weekend,https://raytracing.github.io/books/RayTracingInOneWeekend.html,ray tracing one weekend,,clamp b n listing writecolorclamped colorh multisample writecolor function main also changed c highlight include camerah c int main image const auto aspectratio const int imagewidth const int imageheight staticcast imagewidth aspectratio c highlight const int samplesperpixel c world hittablelist world worldadd makeshared worldadd makeshared camera c highlight camera cam c render std cout imagewidth imageheight int j j j std cerr rscanlines remaining j std flush int imagewidth c highlight color pixelcolor int samplesperpixel auto u randomdouble auto v j randomdouble ray r camgetray u v pixelcolor raycolor r world writecolor std cout pixelcolor samplesperpixel c std cerr ndonen listing mainmultisample maincc rendering multisampled pixel zooming image produced see difference edge pixel image antialiasng classpixel diffuse material object multiple ray per pixel make realistic looking material start diffuse matte material one question whether mix match geometry material assign material multiple sphere vice versa geometry material tightly bound could useful procedural object geometry material linked go separate usual renderers aware limitation simple diffuse material diffuse object emit light merely take color surroundings modulate intrinsic color light reflects diffuse surface direction randomized send three ray crack two diffuse surface different random behavior figure lightbounce light ray bounce also might absorbed rather reflected darker surface likely absorption dark really algorithm randomizes direction produce surface look matte one simplest way turn exactly correct ideal diffuse surface used lazy hack approximates mathematically ideal lambertian reader vassillen chizhov proved lazy hack indeed lazy hack inaccurate correct representation ideal lambertian nt much work presented end chapter two unit radius sphere tangent hit point p surface two sphere center mathbf p mathbf n mathbf p mathbf n mathbf n normal surface sphere center mathbf p mathbf n considered inside surface whereas sphere center mathbf p mathbf n considered outside surface select tangent unit radius sphere side surface ray origin pick random point mathbf inside unit radius sphere send ray hit point mathbf p random point mathbf vector mathbf mathbf p figure randvec generating random diffuse bounce ray need way pick random point unit radius sphere use usually easiest algorithm rejection method first pick random point unit cube x z range reject point try point outside sphere c class public inline static random return randomdouble randomdouble randomdouble inline static random double min double max return randomdouble min max randomdouble min max randomdouble min max listing vecrandutil random utility function c randominunitsphere true auto p random plengthsquared continue return p listing randominunitsphere randominunitsphere function update raycolor function use new random direction generator c color raycolor const ray r const hittable world hitrecord rec worldhit r infinity rec c highlight target recp recnormal randominunitsphere return raycolor ray recp target recp world c unitdirection unitvector rdirection auto unitdirectiony return color color listing raycolorrandomunit maincc raycolor using random ray direction limiting number child ray one potential problem lurking notice raycolor function recursive stop recursing fails hit anything case however may long time long enough blow stack guard let limit maximum recursion depth returning light contribution maximum depth c highlight color raycolor const ray r const hittable world int depth c hitrecord rec c highlight exceeded ray bounce limit light gathered depth return color c worldhit r infinity rec target recp recnormal randominunitsphere c highlight return raycolor ray recp target recp world c unitdirection unitvector rdirection auto unitdirectiony return color color int main image const auto aspectratio const int imagewidth const int imageheight staticcast imagewidth aspectratio const int samplesperpixel c highlight const int maxdepth c render std cout imagewidth imageheight int j j j std cerr rscanlines remaining j std flush int imagewidth color pixelcolor int samplesperpixel auto u randomdouble auto v j randomdouble ray r camgetray u v c highlight pixelcolor raycolor r world maxdepth c writecolor std cout pixelcolor samplesperpixel std cerr ndonen listing raycolordepth maincc raycolor depth limiting give u image first render diffuse sphere classpixel using gamma correction accurate color intensity note shadowing sphere picture dark sphere absorb half energy bounce reflector see shadow worry fix sphere look pretty light real life light grey reason almost image viewer assume image gamma corrected meaning value transform stored byte many good reason purpose need aware first approximation use gamma mean raising color power simple case squareroot c void writecolor std ostream color pixelcolor int samplesperpixel auto r pixelcolorx auto g pixelcolory auto b pixelcolorz c highlight divide color number sample gammacorrect auto scale samplesperpixel r sqrt scale r g sqrt scale g b sqrt scale b c write translated value color component staticcast clamp r staticcast clamp g staticcast clamp b n listing writecolorgamma colorh writecolor gamma correction yield light grey desire image diffuse sphere gamma correction classpixel fixing shadow acne also subtle bug reflected ray hit object reflecting exactly instead whatever floating point approximation sphere intersector give u need ignore hit near zero c worldhit r infinity rec listing reflecttolerance maincc calculating reflected ray origin tolerance get rid shadow acne problem yes really called true lambertian reflection rejection method presented produce random point unit ball offset along surface normal corresponds picking direction hemisphere high probability close normal lower probability scattering ray grazing angle distribution scale phi phi angle normal useful since light arriving shallow angle spread larger area thus lower contribution final color however interested lambertian distribution distribution co phi true lambertian probability higher ray scattering close normal distribution uniform achieved picking point surface unit sphere offset along surface normal picking point sphere achieved picking point unit ball normalizing c randomunitvector auto randomdouble pi auto z randomdouble auto r sqrt z z return r co r sin z listing randomunitvector randomunitvector function figure randunitvec generating random unit vector randomunitvector dropin replacement existing randominunitsphere function c color raycolor const ray r const hittable world int depth hitrecord rec exceeded ray bounce limit light gathered depth return color worldhit r infinity rec c highlight target recp recnormal randomunitvector c return raycolor ray recp target recp world unitdirection unitvector rdirection auto unitdirectiony return color color listing raycolorunitsphere maincc raycolor replacement diffuse rendering get similar image image correct rendering lambertian sphere classpixel hard tell difference two diffuse method given scene two sphere simple able notice two important visual difference shadow le pronounced change sphere lighter appearance change change due uniform scattering light ray fewer ray scattering toward normal mean diffuse object appear lighter light bounce toward camera shadow le light bounce straightup part larger sphere directly underneath smaller sphere brighter alternative diffuse formulation initial hack presented book lasted long time proven incorrect approximation ideal lambertian diffuse big reason error persisted long difficult mathematically prove probability distribution incorrect intuitively explain co phi distribution desirable would look like lot common everyday object perfectly diffuse visual intuition object behave light poorly formed interest learning including intuitive easy understand diffuse method two method random vector first random length unit length offset hit point normal may immediately obvious vector displaced normal intuitive approach uniform scatter direction angle away hit point dependence angle normal many first raytracing paper used diffuse method adopting lambertian diffuse c randominhemisphere const normal inunitsphere randominunitsphere dot inunitsphere normal hemisphere normal return inunitsphere else return inunitsphere listing randominhemisphere randominhemisphere normal function plugging new formula raycolor function c color raycolor const ray r const hittable world int depth hitrecord rec exceeded ray bounce limit light gathered depth return color worldhit r infinity rec c highlight target recp randominhemisphere recnormal c return raycolor ray recp target recp world unitdirection unitvector rdirection auto unitdirectiony return color color listing raycolorhemisphere maincc raycolor hemispherical scattering give u following image image rendering diffuse sphere hemispherical scattering classpixel scene become complicated course book encouraged switch different diffuse renderers presented scene interest contain disproportionate amount diffuse material gain valuable insight understanding effect different diffuse method lighting scene metal abstract class material want different object different material design decision could universal material lot parameter different material type zero parameter bad approach could abstract material class encapsulates behavior fan latter approach program material need two thing produce scattered ray say absorbed incident ray scattered say much ray attenuated suggests abstract class c ifndef materialh define materialh include rtweekendh struct hitrecord class material public virtual bool scatter const ray rin const hitrecord rec color attenuation ray scattered const endif listing materialinitial materialh material class data structure describe rayobject intersection hitrecord avoid bunch argument stuff whatever info want use argument instead matter taste hittables material need know circularity reference c need alert compiler pointer class class material hittable class c c highlight include rtweekendh include rayh class material c struct hitrecord p normal c highlight sharedptr matptr c double bool frontface inline void setfacenormal const ray r const outwardnormal frontface dot rdirection outwardnormal normal frontface outwardnormal outwardnormal listing hitwithmaterial hittableh hit record added material pointer set material tell u ray interact surface hitrecord way stuff bunch argument struct send group ray hit surface particular sphere example material pointer hitrecord set point material pointer sphere given set main start raycolor routine get hitrecord call member function material pointer find ray scattered achieve must reference material sphere class returned within hitrecord see highlighted line c class sphere public hittable public sphere c highlight sphere cen double r sharedptr center cen radius r matptr c virtual bool hit const ray r double tmin double tmax hitrecord rec const override public center double radius c highlight sharedptr matptr c bool sphere hit const ray r double tmin double tmax hitrecord rec const oc rorigin center auto rdirection lengthsquared auto halfb dot oc rdirection auto c oclengthsquared radius radius auto discriminant halfb halfb c discriminant auto root sqrt discriminant auto temp halfb root temp tmax temp tmin rect temp recp rat rect outwardnormal recp center radius recsetfacenormal r outwardnormal c highlight recmatptr matptr c return true temp halfb root temp tmax temp tmin rect temp recp rat rect outwardnormal recp center radius recsetfacenormal r outwardnormal c highlight recmatptr matptr c return true return false listing spherematerial sphereh raysphere intersection added material information modeling light scatter reflectance lambertian diffuse case already either scatter always attenuate reflectance r scatter attenuation absorb fraction ray could mixture strategy lambertian material get simple class c class lambertian public material public lambertian const color albedo virtual bool scatter const ray rin const hitrecord rec color attenuation ray scattered const override scatterdirection recnormal randomunitvector scattered ray recp scatterdirection attenuation albedo return true public color albedo listing lambertianinitial materialh lambertian material class note could well scatter probability p attenuation albedop choice mirrored light reflection smooth metal ray randomly scattered key math ray get reflected metal mirror vector math friend figure reflection ray reflection reflected ray direction red mathbf v b design mathbf n unit vector mathbf v may length mathbf b mathbf v cdot mathbf n mathbf v point need minus sign yielding c reflect const v const n return v dot v n n listing reflection function metal material reflects ray using formula c class metal public material public metal const color albedo virtual bool scatter const ray rin const hitrecord rec color attenuation ray scattered const override reflected reflect unitvector rindirection recnormal scattered ray recp reflected attenuation albedo return dot scattereddirection recnormal public color albedo listing metalmaterial materialh metal material reflectance function need modify raycolor function use c color raycolor const ray r const hittable world int depth hitrecord rec exceeded ray bounce limit light gathered depth return color worldhit r infinity rec c highlight ray scattered color attenuation recmatptr scatter r rec attenuation scattered return attenuation raycolor scattered world return color c unitdirection unitvector rdirection auto unitdirectiony return color color listing raycolorscatter maincc ray color scattered reflectance scene metal sphere let add metal sphere scene c c highlight include materialh c int main image const auto aspectratio const int imagewidth const int imageheight staticcast imagewidth aspectratio const int samplesperpixel const int maxdepth world hittablelist world c highlight auto materialground makeshared color auto materialcenter makeshared color auto materialleft makeshared color auto materialright makeshared color worldadd makeshared materialground worldadd makeshared materialcenter worldadd makeshared materialleft worldadd makeshared materialright c camera camera cam render std cout imagewidth imageheight int j j j std cerr rscanlines remaining j std flush int imagewidth color pixelcolor int samplesperpixel auto u randomdouble auto v j randomdouble ray r camgetray u v pixelcolor raycolor r world maxdepth writecolor std cout pixelcolor samplesperpixel std cerr ndonen listing scenewithmetal maincc scene metal sphere give image shiny metal classpixel fuzzy reflection also randomize reflected direction using small sphere choosing new endpoint ray figure reflectfuzzy generating fuzzed reflection ray bigger sphere fuzzier reflection suggests adding fuzziness parameter radius sphere zero perturbation catch big sphere grazing ray may scatter surface surface absorb c class metal public material public c highlight metal const color double f albedo fuzz f f c virtual bool scatter const ray rin const hitrecord rec color attenuation ray scattered const override reflected reflect unitvector rindirection recnormal c highlight scattered ray recp reflected fuzz randominunitsphere c attenuation albedo return dot scattereddirection recnormal public color albedo c highlight double fuzz c listing metalfuzz materialh metal material fuzziness try adding fuzziness metal c int main world auto materialground makeshared color auto materialcenter makeshared color c highlight auto materialleft makeshared color auto materialright makeshared color c listing metalfuzzspheres maincc metal sphere fuzziness image fuzzed metal classpixel dielectric clear material water glass diamond dielectric light ray hit split reflected ray refracted transmitted ray handle randomly choosing reflection refraction generating one scattered ray per interaction refraction hardest part debug refracted ray usually first light refract refraction ray project tried put two glass ball scene got told right wrong yet soon image glass first classpixel right glass ball look odd real life right world flipped upside weird black stuff printed ray straight middle image clearly wrong often job snell law refraction described snell law eta cdot sintheta eta cdot sintheta theta theta angle normal eta eta pronounced eta eta prime refractive index typically air glass diamond geometry figure refraction ray refraction order determine direction refracted ray solve sintheta sintheta frac eta eta cdot sintheta refracted side surface refracted ray mathbf r normal mathbf n exists angle theta split mathbf r part ray perpendicular mathbf n parallel mathbf n mathbf r mathbf r bot mathbf r parallel solve mathbf r bot mathbf r parallel get mathbf r bot frac eta eta mathbf r costheta mathbf n mathbf r parallel sqrt mathbf r bot mathbf n go ahead prove want treat fact move rest book require understand proof still need solve costheta well known dot product two vector explained term cosine angle mathbf cdot mathbf b mathbf mathbf b costheta restrict mathbf mathbf b unit vector mathbf cdot mathbf b costheta rewrite mathbf r bot term known quantity mathbf r bot frac eta eta mathbf r mathbf r cdot mathbf n mathbf n combine back together write function calculate mathbf r c refract const uv const n double etaioveretat auto costheta dot uv n routperp etaioveretat uv costheta n routparallel sqrt fabs routperplengthsquared n return routperp routparallel listing refract refraction function dielectric material always refracts c class dielectric public material public dielectric double ri refidx ri virtual bool scatter const ray rin const hitrecord rec color attenuation ray scattered const override attenuation color double etaioveretat recfrontface refidx refidx unitdirection unitvector rindirection refracted refract unitdirection recnormal etaioveretat scattered ray recp refracted return true double refidx listing dielectric materialh dielectric material class always refracts update scene change left center sphere glass c auto materialground makeshared color c highlight auto materialcenter makeshared auto materialleft makeshared c auto materialright makeshared color listing twoglass maincc changing left center sphere glass give u following result image glass sphere always refracts classpixel total internal reflection definitely nt look right one troublesome practical issue ray material higher refractive index real solution snell law thus refraction possible refer back snell law derivation sintheta sintheta frac eta eta cdot sintheta ray inside glass outside air eta eta sintheta frac cdot sintheta value sintheta greater frac cdot sintheta equality two side equation broken solution exist solution exist glass refract therefore must reflect ray c etaioveretat sintheta must reflect else refract listing dielectric materialh determining ray refract light reflected practice usually inside solid object called total internal reflection sometimes waterair boundary act perfect mirror submerged solve sintheta using trigonometric quality sintheta sqrt costheta mathbf r cdot mathbf n c double costheta fmin dot unitdirection recnormal double sintheta sqrt costheta costheta etaioveretat sintheta must reflect else refract listing dielectric materialh determining ray refract dielectric material always refracts possible c class dielectric public material public dielectric double ri refidx ri virtual bool scatter const ray rin const hitrecord rec color attenuation ray scattered const override attenuation color double etaioveretat recfrontface refidx refidx unitdirection unitvector rindirection c highlight double costheta fmin dot unitdirection recnormal double sintheta sqrt costheta costheta etaioveretat sintheta reflected reflect unitdirection recnormal scattered ray recp reflected return true c refracted refract unitdirection recnormal etaioveretat scattered ray recp refracted return true public double refidx listing dielectric materialh dielectric material class reflection attenuation always glass surface absorbs nothing try parameter c auto materialground makeshared color auto materialcenter makeshared color auto materialleft makeshared auto materialright makeshared color listing scenedielectric maincc scene dielectric shiny sphere get image glass sphere sometimes refracts classpixel schlick approximation real glass reflectivity varies angle look window steep angle becomes mirror big ugly equation almost everybody us cheap surprisingly accurate polynomial approximation christophe schlick c double schlick double cosine double refidx auto return pow cosine listing schlick materialh schlick approximation yield full glass material c class dielectric public material public dielectric double ri refidx ri virtual bool scatter const ray rin const hitrecord rec color attenuation ray scattered const override attenuation color double etaioveretat recfrontface refidx refidx unitdirection unitvector rindirection double costheta fmin dot unitdirection recnormal double sintheta sqrt costheta costheta etaioveretat sintheta reflected reflect unitdirection recnormal scattered ray recp reflected return true c highlight double reflectprob schlick costheta etaioveretat randomdouble reflectprob reflected reflect unitdirection recnormal scattered ray recp reflected return true c refracted refract unitdirection recnormal etaioveretat scattered ray recp refracted return true public double refidx listing glass materialh full glass material modeling hollow glass sphere interesting easy trick dielectric sphere note use negative radius geometry unaffected surface normal point inward used bubble make hollow glass sphere c worldadd makeshared materialground worldadd makeshared materialcenter worldadd makeshared materialleft c highlight worldadd makeshared materialleft c worldadd makeshared materialright listing scenehollowglass maincc scene hollow glass sphere give image hollow glass sphere classpixel positionable camera camera like dielectric pain debug always develop mine incrementally first let allow adjustable field view fov angle see portal since image square fov different horizontally vertically always use vertical fov also usually specify degree change radian inside constructor matter personal taste camera viewing geometry first keep ray coming origin heading z plane could make z plane whatever long made h ratio distance setup figure camviewgeom camera viewing geometry implies h tan frac theta camera becomes c class camera public c highlight camera double vfov vertical fieldofview degree double aspectratio auto theta degreestoradians vfov auto h tan auto viewportheight h auto viewportwidth aspectratio viewportheight c auto focallength origin horizontal viewportwidth vertical viewportheight lowerleftcorner origin focallength ray getray double u double v const return ray origin lowerleftcorner u horizontal v vertical origin private origin lowerleftcorner horizontal vertical listing camerafov camerah camera adjustable fieldofview fov calling camera cam aspectratio sphere c int main world c highlight auto r co hittablelist world auto materialleft makeshared color auto materialright makeshared color worldadd makeshared r r materialleft worldadd makeshared r r materialright c camera c highlight camera cam aspectratio c render std cout imagewidth imageheight int j j j listing scenewideangle maincc scene wideangle camera give image wideangle view classpixel positioning orienting camera get arbitrary viewpoint let first name point care call position place camera lookfrom point look lookat later want could define direction look instead point look also need way specify roll sideways tilt camera rotation around lookatlookfrom axis another way think even keep lookfrom lookat constant still rotate head around nose need way specify vector camera vector lie plane orthogonal view direction figure camviewdir camera view direction actually use vector want simply project onto plane get vector camera use common convention naming view vup vector couple cross product complete orthonormal basis u v w describe camera orientation figure camviewup camera view direction remember vup v w plane note like fixed camera faced z arbitrary view camera face w keep mind use world specify vup convenient naturally keep camera horizontally level decide experiment crazy camera angle c class camera public camera c highlight lookfrom lookat vup c double vfov vertical fieldofview degree double aspectratio auto theta degreestoradians vfov auto h tan auto viewportheight h auto viewportwidth aspectratio viewportheight c highlight auto w unitvector lookfrom lookat auto u unitvector cross vup w auto v cross w u origin lookfrom horizontal viewportwidth u vertical viewportheight v lowerleftcorner origin w c c highlight ray getray double double const return ray origin lowerleftcorner horizontal vertical origin c private origin lowerleftcorner horizontal vertical listing cameraorient camerah positionable orientable camera change back prior scene use new viewpoint c hittablelist world auto materialground makeshared color auto materialcenter makeshared color auto materialleft makeshared auto materialright makeshared color worldadd makeshared materialground worldadd makeshared materialcenter worldadd makeshared materialleft worldadd makeshared materialleft worldadd makeshared materialright camera cam aspectratio listing scenefreeview maincc scene alternate viewpoint get image distant view classpixel change field view c camera cam vup aspectratio listing changefieldview maincc change field view get image zooming classpixel defocus blur final feature defocus blur note photographer call depth field aware using defocus blur among friend reason defocus blur real camera need big hole rather pinhole gather light would defocus everything stick lens hole certain distance everything focus think lens way light ray coming specific point focus distance hit lens bent back single point image sensor call distance projection point plane everything perfect focus focus distance aware focus distance focal length focal length distance projection point image plane physical camera focus distance controlled distance lens filmsensor see lens move relative camera change focus may happen phone camera sensor move aperture hole control big lens effectively real camera need light make aperture bigger get defocus blur virtual camera perfect sensor never need light aperture want defocus blur thin lens approximation real camera complicated compound lens code could simulate order sensor lens aperture could figure send ray flip image computed image projected upside film graphic people however usually use thin lens approximation figure camlens camera lens model need simulate inside camera purpose rendering image outside camera would unnecessary complexity instead usually start ray lens send toward focus plane focusdist away lens everything plane perfect focus figure camfilmplane camera focus plane generating sample ray normally scene ray originate lookfrom point order accomplish defocus blur generate random scene ray originating inside disk centered lookfrom point larger radius greater defocus blur think original camera defocus disk radius zero blur ray originated disk center lookfrom c randominunitdisk true auto p randomdouble randomdouble plengthsquared continue return p listing randinunitdisk generate random point inside unit disk c class camera public camera lookfrom lookat vup double vfov vertical fieldofview degree c highlight double aspectratio double aperture double focusdist c auto theta degreestoradians vfov auto h tan auto viewportheight h auto viewportwidth aspectratio viewportheight c highlight w unitvector lookfrom lookat u unitvector cross vup w v cross w u c origin lookfrom c highlight horizontal focusdist viewportwidth u vertical focusdist viewportheight v lowerleftcorner origin focusdist w lensradius aperture c ray getray double double const c highlight rd lensradius randominunitdisk offset u rdx v rdy return ray origin offset lowerleftcorner horizontal vertical origin offset c private origin lowerleftcorner horizontal vertical c highlight u v w double lensradius c listing cameradof camerah camera adjustable depthoffield dof using big aperture c lookfrom lookat vup auto disttofocus lookfromlookat length auto aperture camera cam lookfrom lookat vup aspectratio aperture disttofocus listing scenecameradof maincc scene camera depthoffield get image sphere depthoffield classpixel next final render first let make image cover book lot random sphere c highlight hittablelist randomscene hittablelist world auto groundmaterial makeshared color worldadd makeshared groundmaterial int int b b b auto choosemat randomdouble center randomdouble b randomdouble center length sharedptr spherematerial choosemat diffuse auto albedo color random color random spherematerial makeshared albedo worldadd makeshared center spherematerial else choosemat metal auto albedo color random auto fuzz randomdouble spherematerial makeshared albedo fuzz worldadd makeshared center spherematerial else glass spherematerial makeshared worldadd makeshared center spherematerial auto makeshared worldadd makeshared auto makeshared color worldadd makeshared auto makeshared color worldadd makeshared return world c int main image c highlight const auto aspectratio const int imagewidth c const int imageheight staticcast imagewidth aspectratio c highlight const int samplesperpixel c const int maxdepth world c highlight auto world randomscene c camera c highlight lookfrom lookat c vup c highlight auto disttofocus auto aperture c camera cam lookfrom lookat vup aspectratio aperture disttofocus render std cout imagewidth imageheight int j j j listing scenefinal maincc final scene give image final scene interesting thing might note glass ball really shadow make look like floating bug see glass ball much real life also look bit strange indeed seem float cloudy day point big sphere glass ball still lot light hitting sky reordered rather blocked next step cool ray tracer next light explicitly sending shadow ray light done implicitly making object emit light biasing scattered ray toward downweighting ray cancel bias work minority favoring latter approach triangle cool model triangle form model io worst almost everybody try get somebody else code surface texture let paste image like wall paper pretty easy good thing solid texture ken perlin code online andrew kensler cool info blog volume medium cool stuff challenge software architecture favor making volume hittable interface probabilistically intersection based density rendering code even know volume method parallelism run n copy code n core different random seed average n run averaging also done hierarchically pair averaged get image pair averaged method parallelism extend well thousand core little coding fun please send cool image insert acknowledgmentsmdhtml citing book consistent citation make easier identify source location version work citing book ask try use one following form possible basic data title series ray tracing one weekend series title book ray tracing one weekend author peter shirley editor steve hollasch trevor david black versionedition date url series http raytracinggithubio url book http raytracinggithubiobooksraytracinginoneweekendhtml snippet markdown ray tracing one weekend http raytracinggithubiobooksraytracinginoneweekendhtml html ray tracing one weekend latex bibtex cite misc title ray tracing one weekend author peter shirley year month july note small texttt http raytracinggithubiobooksraytracinginoneweekendhtml url http raytracinggithubiobooksraytracinginoneweekendhtml biblatex usepackage biblatex cite online title ray tracing one weekend author peter shirley year month july url http raytracinggithubiobooksraytracinginoneweekendhtml ieee ray tracing one weekend raytracinggithubiobooksraytracinginoneweekendhtml accessed mmm dd yyyy mla ray tracing one weekend raytracinggithubiobooksraytracinginoneweekendhtml accessed dd mmm yyyy peter shirley http githubcompetershirley steve hollasch http githubcomhollasch trevor david black http githubcomtrevordblack
27,Lobsters,education,Education,The Documentation System,https://documentation.divio.com/,documentation system,documentation system system make documentation better project product team successful video presentation,documentation system grand unified theory david laing secret need understood order write good software documentation one thing called documentation four tutorial howto guide technical reference explanation represent four different purpose function require four different approach creation understanding implication help improve documentation often immensely system documentation system outlined simple comprehensive nearly universallyapplicable scheme proven practice across wide variety field application simple principle govern documentation rarely ever spelled seem secret though put principle practice make documentation better project product team successful promise video presentation prefer watch video covering topic courtesy pycon australia video
29,Lobsters,education,Education,<wbr>BlockchainCommons/Learning-Bit<wbr>coin-from-the-Command-Line</wbr></wbr>,https://github.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line,wbr blockchaincommonslearningbit wbr coinfromthecommandline wbr wbr,learning bitcoin lightning command line http githubcomchristopheraintromaccommandline table content part one preparing bitcoin status part two using bitcoincli status part three bitcoin scripting status part four using tor status part five programming rpc status appendix status part five programming rpc status part six using lightningcli status http status work progress todomd origin author copyright license readmemd ccby financial support blockchain common github sponsor btcpay server contributing contributingmd contributor license agreement question support issue credit contributingmd contributor gorazdko javier vargas jodobear reviewer gwillem sponsor responsible disclosure reporting vulnerability christophera blockchaincommonscom,learning bitcoin lightning command line learning bitcoin command line tutorial working bitcoin lightning teach direct interaction server robust secure way begin cryptocurrency work note draft progress get feedback early reviewer yet ready use tutorial assumes minimal background use command line interface many tutorial available one mac user http githubcomchristopheraintromaccommandline table content part one preparing bitcoin status finished updated part two using bitcoincli status finished updated part three bitcoin scripting status finished updated btcdeb part four using tor status finished part five programming rpc status finished though work progress additional chapter appendix status finished end polished secondedition course currently stand looking review chapter thank help support want expand course also introduce programming rpc finally talk lightning material process move line review learning finish part five programming rpc status unfinished writing libwally chapter regularizing language chapter deciding swift part six using lightningcli status unfinished requires renumbering currently listed chapter editing point assuming lightning integrated standup point need tech use pretty basic level understanding lightning verifying lightning setup knowing lightning setup setting channel using lightning generating payment request paying invoice closing channel talking lightningd c good doc one developer http status work progress learning bitcoin command line currently active development writing progress current chapter functional need updated modern version bitcoincore additional chapter also need written fill intended scope empty chapter show current plan future work plan mainly drawn old issue found todomd obviously work progress used production task completed testing auditing origin author copyright license unless otherwise noted either readmemd file header comment content repository copyright blockchain common llc licensed ccby financial support learning bitcoin command line project blockchain common proudly notforprofit social benefit corporation committed open source open development work funded entirely donation collaborative partnership people like every contribution spent building open tool technology technique sustain advance blockchain internet security infrastructure promote open web financially support development projectname project please consider becoming patron blockchain common ongoing monthly patronage github sponsor also support blockchain common bitcoins btcpay server contributing encourage public contribution issue pull request please review contributingmd detail development process contribution repository require gpg signed contributor license agreement question support opensource opendevelopment community blockchain common resource provide direct support project question problem please use repository issue feature unfortunately make promise response time company requires support use project please feel free contact u directly option may able offer contract support one contributor might able point another entity offer contractual support need credit following people directly contributed repository add name getting involved first step learning contribute contributingmd documentation additional contribution listed role name contributor go nodejs section gorazdko rust section javier vargas c java lightning tor section jodobear appendix compiling bitcoin python section reviewer glen willem gwillem sponsor blockstream corporation responsible disclosure want keep software safe everyone discovered security vulnerability appreciate help disclosing u responsible manner unfortunately able offer bug bounty time ask offer u good faith use best effort leak information harm user data developer community please give u reasonable amount time fix issue publish defraud user u process discovery promise bring legal action researcher point problem provided best follow guideline reporting vulnerability please report suspected security vulnerability private via email christophera blockchaincommonscom use email support please create publicly viewable issue suspected security vulnerability following key may used communicate sensitive information developer name fingerprint christopher allen fdfe import key running following command individual fingerprint gpg recvkeys fingerprint ensure put quote around fingerprint contain space
30,Lobsters,education,Education,"An Architecture for Community Contribution, Speed and Modularity",https://jponline.github.io/looset-landing/an-architecture/,architecture community contribution speed modularity,main page art unix programming wiki architect let option open clean architecture kickstarter campaign backend babashka lezer frontend reagent redux flux reframe treating ui finite state machine test given gherkin syntax puppeteer devcards storybook speed kickstarter looset main page video demo tool kickstarter campaign,tell opinion software architecture plan looset watch source file change show real time dependency diagram code block viewer independent filesystem check main page started work looset yet thought bit architecture believe building metaphor bad talking software prefer grow metaphor think software living organism need constant care make better decision lot rule around create software use design pattern write test first tdd model according domain first ddd behavior first bdd solid hexagonal onion architecture layer module etc value mentioned prefer understand principle reflect direction like art unix programming summary principle stated wiki influenced two idea first heard martin fowler opposing statement architect responsible making big important initial decision said something architect let option open second got reading clean architecture uncle bob point farther module business rule module work plugin ie framework database work plugins started think decision let open structure plugin maybe system maybe programming language see project becoming reality contribute kickstarter campaign asking need able work free open source software general goal writing software extensibility accretion feature become slow dangerous existent feature project grow big readability easy read understand maintainability flexibility testability decoupling way change module break system different place robust handle well unexpected error looset specific goal community contribution speed modularity backend working clojure time constant match personal development philosophy community philosophy understand people might personal preference use different stack work better specific domain reason decided write looset module independent script program called using bash instance write basic analyzer clojure using babashka let open language specific analyzer written script language could seen sort micro service architecture one could decide use python write analyzer c even integrate project lezer clojure data map part philosophy data need shared across different language even front end make sense write clojure edn extensible data notation thinking general adoption write data file json also inspired git work frontend people would agree making decision frontend different making decision backend still want maximize community contribution modularity still letting option open decided write looset view independent web component used basic html page instance write component using clojurescript reagent let open language framework support exporting web component one could decide use angular vuejs write new functionality already created web app scratch without state management system redux flux reframe know important would say important library idea main point app state global change firing event subscribe component change still investigating going use way available web component framework decision structure app state also need done like normalized possible splitting domain entity basically would write database ui model component state also computing little possible rendering phase treating ui finite state machine test like test driven development approach good test structuring dependency testable way tend write bdd style using given gherkin syntax mostly write unit test backend think unit test valuable frontend already used puppeteer write endtoend test clicking button taking screenshots etc looset use basically production like environment firing event checking result app state another strategy sometimes viewed test use way develop prototype devcards use visualize component multiple state developing tweaking app state storybook seems good alternative work web component speed project performance top priority expect work huge amount data different project main concern fast going interact big project generating large graph address problem web worker background process generating cache visualization kickstarter created campaign validate interest also able invest amount time project requires campaign asks one time contribution amount nothing changed end month reach goal looset main page video demo tool kickstarter campaign last update aug
31,Lobsters,education,Education,Nyan Sat - Satellite Communications Challenge,https://nyan-sat.com/chapter0.html,nyan sat satellite communication challenge,background click next section antenny pcb antenny pcb document part pantilt gimbal product link rtlsdr product link product link imu product link motor driver product link oled screen optional product link,background guiding crash course satellite history well around world send receive data accompanying guide though strictly required set equipment used get everything going mean recommend buying equipment nt put together kit send reasonable price though supply limited list part click request kit also sticker tshirts nt want kit right continue next section antenny antenny pcb kit custombuilt pcb kit integrates multiple part allowing connect everything together single board wiring board hardware component rb antenny project combine bluetooth wifi support channel pwm driver motor driver maximum output maximum rb antenny board easily handle movement control nyansat antenna gimbal load custom code adjust however like onboard reserved channel connector allow extend basic nyansat setup rb custom made imu module oled screen gps module rb antenny board designed using altium designer assembled inhouse pick place machine manhattan new york def con even repurpose board future project requiring microcontrollers motor driver read antenny pcb completing antenny board found way enhance board designed antenny fix bug improves functionality reliability adaptable future development hardware antenny main improvement highlight antenny antenny follows reduced pcb size breakout unused gpio pin future development fixed gpio pull bug enhanced power output servo motor driver added beidougps beitian module connector pinout pcb board information antenny general setup please review document pinouts hardware requirement part covered detail chapter feel free skip ahead every part strictly required feel free get one interest pantilt gimbal small gimbal using pointing antenna specific direction track satellite across sky found multiple place spare one selling cost without one listen geosynchronous satellite low orbit satellite whizzing across pickup area second product link rtlsdr cheapest flexible sdr available product link lot feature tiny package microcontroller software expects product link imu inertial measuring unit tell software way antenna pointing helping point precisely product link motor driver nt able drive motor directly adapter board needed product link oled screen optional super simple display getting quick feedback device product link next chapter
32,Lobsters,education,Education,"MicroBlocks: Small, Fast, Human Friendly",http://microblocks.fun/,microblocks small fast human friendly,scratch micro bit calliope mini adafruit circuit playground express nodemcu stack make microblocks special live coding multitask naturally run everywhere unplug go next step get microblocks download chromebook app run microblocks chrome edge browser run microblocks chrome edge browser note running microblocks browser activity card learn,microblocks block programming language physical computing inspired scratch run microcontrollers micro bit calliope mini adafruit circuit playground express nodemcu stack many others make microblocks special live coding microblocks live environment click block run immediately right board try command see graph sensor value real time waiting code compile download multitask naturally want display animation controling motor problem microblocks let write separate script task run time code simpler write easier understand run everywhere microblocks run many different board script portable button sensor display block behave board relevant hardware microblocks even simulates micro bit led display tft display unplug go microblocks downloads code write like program unplug board good go make game fitness app lightup clothing go wherever next step get microblocks visit download page download microblocks app window macos linux raspberry pi chromebook get chromebook app run microblocks chrome edge browser also run microblocks chrome edge browser without installing anything note allow microblocks connect board need visit chrome flag page enable experimental web platform feature flag see running microblocks browser activity card visit learn section find activity card help get started explore project involving animation colorful led sound servo motor communication remote control internet thing
33,Lobsters,education,Education,Learning Rust: Mindsets and Expectations,https://ferrous-systems.com/blog/mindsets-and-expectations/,learning rust mindset expectation,learning rust comparing rust language attachment another language serve learning rust ownership borrowing lifetime learn rust effectively people industry fascinated rust three thing learn walk try run appreciate divergence turing completeness practice patience rumor outdated refer version language longer exists ownership borrowing memorysafe stay tuned newsletter trainer,often hear rust language complex difficult learn yes language complex identified existing mindset expectation serve obstacle learning process let discus obstacle alleviate first post learning rust comparing rust language learn first programming language likely hear observation know one programming language know statement make interesting point faulty assumption also applicable set language others instance take account language know one learning language share common set concept eg variable conditionals iteration data typing function may diverge widely beyond realm common ground language divergent others faulty assumption knowing one language allows know also live widespread phenomenon engineer devotion single language oftentimes engineer consider favorite language universally superior others coupling two problem see following pattern emerge people struggle one already expert language even language feel similar rust like c c go people often attempt implement thing rust way idiomatic different language even language significantly different scope behavior eg python javascript people often attempt implement relatively complex challenge grasped core rust concept eg attempting use modify existing library attempting rewrite script largescale program learning strategy approach invalid take far without immediate success difficult motivate continue short attachment another language serve interfere learning rust unsurprisingly concept unique rust cause pain learning process eg ownership borrowing lifetime learn rust effectively tandem pattern mentioned people industry fascinated rust rust aim accomplish hesitate learn hear rumor difficult thus try conversely observed promising pattern folk spoken folk success learning rust either u internet large tend common began learning process spending time rust core concept mentor trainer could help conceptualize important part language started small building successful project slowly increasing scope new programming came significantly different domain thus nt expectation rust would compare language three thing learning rust enjoyable effective experience based pattern observed suggest keep three thing mind learn walk try run mentioned experienced programmer may attempt implement relatively complex challenge addressing core rust concept surprising reasonable expect hit ground running especially work software developer write program fun token likely able dedicate limited amount time learning rust learning rust free time evaluating work whatever reason might try learn much possible quickly possible know might find frustrating slow take tiny step instead running fast sprint marathon nonetheless take heart developed understanding core concept fundamental take bigger step move complex project ease grace appreciate divergence turing completeness thing programming language suitable certain task others appreciate different language tool specific feature offer thing particularly effectively perhaps task open soup could certainly use chainsaw would nt prefer different tool process identifying similarity language beginning programmer journey outside comfort zone beginning discovery kind tool hold hand kind problem meant solve goal journey recognize master difference tool would point learning language really practice patience big picture rust young language undergone lot change last several year indeed many feature grown le complicated since early day existence rumor persisted regard hard learn rust likely rumor outdated refer version language longer exists throughout post reiterated fact time inherent process learning rust refer fact rust active development yes importantly refer patience noticed folk succeeded journey give time learning process see core concept like ownership borrowing deliver joy make easy comfortable write program memorysafe stay tuned next part series discus one rust unique philosophy aim practical helpful production also process learning language hope read onwards meantime please consider signing newsletter enlisting u trainer team
34,Lobsters,education,Education,Replacing YouTube & Invidious,https://secluded.site/replacing-youtube-invidious/,replacing youtube invidious,stepping away open source youtubedl mpv much preventing duplicate selecting quality embedding subtitle limiting downloads getting notification naming format writing script finished script automation crontab generator crontab guru,omar roth developer invidious recently wrote blog post stepping away open source never used official instance thought good opportunity create tool downloads video youtubers subscribed watch offline whatever manner prefer end youtubedl far reliable versatile option around since think project going anywhere mpv medium player choice relies youtubedl watching online content twitch youtube pornhub much conveniently youtubedl come tool flag needed exactly purpose scripting automating incredibly easy taking look man youtubedl reveals plethora option necessary preventing main thing downloading entire channel ensuring video downloaded downloadarchive save id video downloaded prevent downloaded required file path store list downloadarchive archive channel txt selecting default youtubedl downloads single file best quality audio video need mux together however prefer highest possibly quality mind waiting second longer ffmpeg combine audio video file format let user decide format prefer whether want focus storage efficiency quality basic option best worst bestvideo bestaudio download single file highest lowest quality videoaudio videoonlyaudioonly lot option finegrained control look mentioned want highest video highest quality audio use bestvideobestaudio downloading file muxed together format bestvideobestaudio embedding enjoy subtitle know many people section certainly ignored option fetching embedding subtitle get real subtitle someone transcribed manually use writesub youtube autogenerated subtitle may may horribly inaccurate use writeautosub selecting language sublang languagecode embedding embedsubs selecting format subformat desiredformat like using srt file first best beside like subformat srtbest srt preferred unavailable whatever highestquality format used embedded instead writesub writeautosub subformat srtbest sublang en embedsubs limiting switching method initial download pull channel video certainly want limited way dateafter playlistend serve nicely former download video published certain date latter download x number video dateafter playlistend getting yet good method getting notification new video simple way get notified script finished running notifysend one easiest pretty simple syntax well first string notification summary second longer description optionally pas icon name make look little better notifysend videoxgeneric downloads finished check youtube folder new video reason get icon generic name specified know command work system mine pas path icon file want naming final parameter look name file downloaded output provides templating functionality lot option use acceptable template might something like channeltitleext youtubedl templating format uploader title ext output uploader title ext writing want store video videosyoutube want archive record stored archive first line shebang creates directory already exist second enters youtube folder mkdir p homevideosyoutubearchives cd homevideosyoutube way reuse youtubedl command necessary parameter changed one place apply channel function intended exactly purpose formatted like functionname code named function dl mine look like dl youtubedl downloadarchive archive txt f bestvideobestaudio dateafter writesub writeautosub subformat srtbest sublang en embedsubs uploader title ext playlistend sleep backslashes end tell bash single command spanning multiple line sleep command wait second downloading next channel unlikely youtube ratelimit residential address still possible waiting bit continuing reduces likelihood note use archive path end youtubedl command let user define archive file named channel download video line using function would something like dl linustechtips http wwwyoutubecomuserlinustechtips result would directory structure youtube archive â linustechtipstxt linus tech tip still make playersmkv last line notification command notifysend videoxgeneric downloads finished check youtube folder new video finished script use right binbash mkdir p homevideosyoutubearchives cd homevideosyoutube dl youtubedl downloadarchive archive txt f bestvideobestaudio dateafter writesub writeautosub subformat srtbest sublang en embedsubs uploader title ext playlistend sleep dl ding http dl meute http dl vsauce http wwwyoutubecomuservsauce dl ardour http dl pewdiepie http wwwyoutubecomuserpewdiepie dl techaltar http dl avikaplan http wwwyoutubecomuseravikaplanmusic dl lukesmith http dl techlinked http wwwyoutubecomctechlinked dl robscallon http dl setheverman http wwwyoutubecomusersetheverman dl logosbynick http dl techquickie http wwwyoutubecomusertechquickie dl yanntiersen http wwwyoutubecomuseryanntiersenofficial dl andrewhuang http wwwyoutubecomusersongstowearpantsto dl aurahandpan http wwwyoutubecomuserjantzulu dl jamesveitch http dl brandonacker http wwwyoutubecomuserbrandonacker dl unboxtherapy http wwwyoutubecomuserunboxtherapy dl linustechtips http wwwyoutubecomuserlinustechtips dl michaelreeves http dl countrysquire http dl roomieofficial http wwwyoutubecomuserroomieofficial dl fridaycheckout http dl lastweektonight http wwwyoutubecomuserlastweektonight dl bingingwithbabish http wwwyoutubecomuserbgfilms notifysend icon downloads finished check youtube folder new video simple process store script wherever want take note directory run crontab e already cron utility installed try cronie repos paste edit homeuserpathtoscriptsh save exit profit pasted line run script every hour every day every week every month every year change frequency run crontab e edit line save crontab generator crontab guru might useful syntax confusing fun
35,Lobsters,education,Education,Multi Class Text Classification With Deep Learning Using BERT,https://towardsdatascience.com/multi-class-text-classification-with-deep-learning-using-bert-b59ca2f5c613,multi class text classification deep learning using bert,multi class text classification deep learning using bert natural language processing nlp hugging face bert tutorial data dataset explore preprocess encoding label train validation split berttokenizer encoding data tokenization bert tokenizer bert pretrained model data loader optimizer scheduler performance metric training loop loading evaluating model jupyter notebook github,multi class text classification deep learning using bertnatural language processing nlp hugging facemost researcher submit research paper academic conference faster way making result available finding selecting suitable conference always challenging especially young researchershowever based previous conference proceeding data researcher increase chance paper acceptance publication try solve text classification problem deep learning using bertalmost code taken tutorial difference datathe datathe dataset contains research paper title manually classified category ie conference downloaded hereexplore preprocessconfexplorepytable conference valuecounts figure may noticed class imbalanced address later onencoding labelslabelencodingpydf label dfconferencereplace labeldict train validation splitbecause label imbalanced split data set stratified fashion using class labelsour label distribution look like splittraintestsplitpyfigure encoding datatokenization process take raw text split token numeric data represent wordsconstructs bert tokenizer based wordpieceinstantiate pretrained bert model configuration encode datato convert title text encoded form use function called batchencodeplus proceed train validation data separatelythe parameter inside function title textaddspecialtokenstrue mean sequence encoded special token relative modelwhen batching sequence together set returnattentionmasktrue return attention mask according specific tokenizer defined maxlength attributewe also want pad title certain maximum lengthwe actually need set play safereturntensorspt return pytorchand need split data inputids attentionmasks labelsfinally get encoded data set create training data validation datatokenizerencodingpybert pretrained modelwe treating title unique sequence one sequence classified one five label ie conference bertbaseuncased smaller pretrained modelusing numlabels indicate number output labelswe really care outputattentionswe also need outputhiddenstatesbertpretrainedmodelpydata loadersdataloader combine dataset sampler provides iterable given datasetwe use randomsampler training sequentialsampler validationgiven limited memory environment set schedulerto construct optimizer give iterable containing parameter optimize specify optimizerspecific option learning rate epsilon etci found work well data setcreate schedule learning rate decrease linearly initial learning rate set optimizer warmup period increase linearly initial learning rate set optimizeroptimizerschedulerpyperformance metricswe use score accuracy per class performance metricsperformancemetricspytraining looptraininglooppyfigure evaluating modelloadingevaluatingpyfigure notebook found github enjoy rest weekend
37,Lobsters,education,Education,questions,https://questions.wizardzines.com/,question,question git question networking question system question question invitation open box thing nt know let go know already learned nt late tackle even thing still nt know learn one new thing today one thing time,question hello made site help identify thing nt know way learn new thing first find nt know try set question learn something new git question networking question system question question u lot thing computer nt know whole giant list thing nt know used feel overwhelming could even start list big often hard find time busy day learn something new invitation open box thing nt know made question site help giant list thing learn time problem set question invitation take minute open box thing nt know take small thing learn little intentionally made question little bit hard make likely able find something learn let go know already goal site chip away bit idea know already lot question fundamental thing program use every day work may know thing yet normal learned position absolute cs recently even though writing htmlcss year felt bit silly learned nt late know bit cs feel able tackle even thing still nt know learn one new thing today learn one thing set question great way ever learned anything one thing time also link reading attached question set find lot time energy want use learn thing nt time energy today still tomorrow
38,Lobsters,education,Education,Lisp Quickstart,https://cs.gmu.edu/~sean/lisp/LispTutorial.html,lisp quickstart,,let look little closely function random ask detail nature random typing describe random note single quote also beware clisp zeus describe function attempt connect http server mit provide nice documentation nt work right right first executed command prevent happening setf custom browser nil nil describe random random symbol random lie package commonlisp accessible package clos commonlisp commonlispuser exporting ext ffi posix readline regexp screen system name function property system doc ansicl documentation http wwwaimiteduprojectsiiipdoccommonlisphyperspecbodyfunrandomhtml information evaluate symbolplist random package commonlisp package named commonlisp nickname lisp cl import external symbol package clos export symbol package readline regexp posix exporting ffi screen clos commonlispuser ext system systemfunction random builtin system function argument list optional information evaluate disassemble random documentation clhs bodyfunrandomhtml lisp system either interpreter compiler though modern lisp system compiler automaticall compile code soon enter however compile code varies example clisp compiles pcode rather machine code kind like javac compiles class file rather machine code sbcl lispworks compile machine code interested seeing resulting compiled code look like disassemble function disassemble functionpointer clisp zeus defun factorial n n n factorial n factorial disassemble factorial disassembly function factorial const required argument optional argument rest parameter keyword parameter bytecode instruction load push jmpifnot minusp load push load dec push jsr push callsr skip ret const skip ret nil sbcl laptop defun factorial n n n factorial n factorial disassemble factorial disassembly factorial size byte origin bfd mov rcx threadbindingstackpointer noargparsing entry point mov rcx mov rcx lea eax test al jne cmp al jeq test al jne cmp byte ptr jnbe mov rdx xor edi edi mov ecx generic call rcx jle mov edx mov rsp rbp clc pop rbp ret mov rdx xor edi edi mov ecx generic call rcx jeq mov rdx mov edi mov generic call lea rbx sub rsp mov rax fdefinition factorial mov ecx mov rbx rbp mov rbp rbx call qword ptr cmovb rsp rbx mov rdi rdx mov rdx mov generic call jmp mov rax break error trap byte byte objectnotrealerror byte rax break invalid argument count trap nil lispworks running mason cluser defun factorial n lt n n factorial n factorial cluser disassemble factorial ld cmp bleu noop cmp ld jmp global fun system internalwrongnumberofarguments noop ld andn save sub ld call counter add st andcc bne mov cmp bge mov tsubcc bvs mov mov ld factorial ld jmpl mov andcc bne mov sra andncc bne wr mov noop noop rd andcc call mulscc mulscc mov mov mov rd sll srl orcc sra bge addcc ba cmp mulscc mulscc mulscc mulscc mulscc mulscc mulscc mulscc jmp mulscc andncc wr bne andcc call mulscc ba mulscc call mulscc call mulscc call mulscc mulscc orcc rd bge orcc sub bge addcc cmp bne mov mov mov jmp restore noop mov jmpl global fun system anystub mov cmp tsubcc mov ba mov mov jmpl global fun system anystub mov ba ld factorial mov jmp global fun system anystub restore
39,Lobsters,education,Education,Tutorial on multiple currency accounting,https://www.mathstat.dal.ca/~selinger/accounting/tutorial.html,tutorial multiple currency accounting,tutorial multiple currency accounting content introduction brief review doubleentry accounting singleentry accounting table net worth equity table table double entry accounting table table income expense table table fundamental accounting equation table foreign currency accounting issue singleentry foreign currency accounting double entry foreign currency accounting wrong way table table foreign exchange gain loss table table section calculating gain loss adjustment table table table table foreign currency accounting according ssap accounting nonmonetary current asset table official solution translation single currency table table table table table table table foreign currency accounting using currency trading account restoring symmetry foreign currency accounting section section table table table table table table table accounting currency trading account table table section table table table table table table section equivalence ssap table table example tracking exchange gain loss source realized unrealized gain loss example real estate table importance identity asset table fifo lifo adjusted cost base method australia table table table article australia translation issue independence viewpoint section table reference currency v equity currency table table section specific software gnucash section multiple currency accounting gnucash,tutorial multiple currency accounting author peter selinger selinger user dot sourceforge dot net written jun updated oct added section realized unrealized gain updated nov changed sectioning updated jan added australia info section updated jun fixed typo table reported alex chiang updated aug fixed typo table reported francisco milan campos content introduction accounting multiple currency tricky easy enough use exchange rate translate different currency thing get le obvious one take account exchange rate fluctuate time multicurrency transaction incur foreign exchange gain loss one account respecting fundamental accounting equation different accounting method give different result advantage disadvantage one need pick single reference currency importantly work nonexpert found surprisingly difficult find useful information subject searched online also consulted fifteen different accounting textbook uk canada book mentioned foreign currency contained single paragraph topic stating foreign currency transaction translated local currency also studied foreign currency support accounting software using gnucash quickly found software balance account correctly multiple currency involved much frustration additional thought research believe arrived understanding multiple currency accounting work wrote document resource might looking information information tutorial synthesis learned book learned accounting standard ssap figured since accounting expert sure incorrect terminology slipped document find mistake would happy send correction aside terminology issue reasonably certain concept described tutorial sound disclaimer accountant qualified offer kind accounting advice tutorial express opinion accounting multiple currency work claim anything accuracy legality information presented warrant correctness applicability way although cite accounting standard document claim tutorial conforms accepted accounting standard need accounting advice please consult professional accountant brief review doubleentry accounting singleentry accounting user accounting software fall two main class home user business user home user interested tracking asset liability asset money bank account cash pocket liability owe balance credit card account money owe neighbor account keep running total one particular type asset liability transaction increase decrease balance one account table singleentry personal accounting jan opening balance jan get paid balance jan buy food credit card balance jan withdraw cash balance jan pay credit card bill balance jan get paid balance jan buy food cash balance jan buy book cash balance table show example singleentry personal accounting three account us single currency canadian dollar note account balance shown yellow line transaction shown white line also note asset account positive number mean asset whereas liability account positive number mean liability thus transferring money one asset account another january lead increase one account decrease transferring money asset account liability account paying credit card bill january lead decrease account net worth equity person net worth equal total asset minus total liability word net worth effective amount money property compensating outstanding debt person net worth negative total liability exceed total asset called living one mean recommended business context net worth also called equity therefore first accounting equation asset liability equity going back example table note transaction like get paid january increase person net worth called income transaction like buy food buy book january decrease person net worth called expense still transaction withdraw cash january pay credit card bill january affect net worth following chart show transaction table time also show net worth separate column table personal accounting net worth shown jan opening balance jan get paid balance jan buy food credit card balance jan withdraw cash balance jan pay credit card bill balance jan get paid balance jan buy food cash balance jan buy book cash balance note accounting equation asset liability equity satisfied balance yellow line also individual transaction white line double entry accounting let u promote equity column table calling account table simple instance double entry accounting idea keep separate running total equity addition running total asset liability transaction must balanced mean must satisfy accounting equation historically ie computer used one purpose double entry accounting catch arithmetic error data entry error since transaction recorded least two place result addition subtraction could doublechecked simply checking whether account balanced today arithmetic mistake longer major issue although data entry error still however one important benefit doubleentry accounting namely give convenient way tracking classifying income expense income expense business important keep track asset liability also income expense example business need classify income according source necessary tax reason income different source may taxed differently also business reason help determine part business profitable assetliability method tracking finance money classified according location much money bank account much wallet contrast tracking income expense one must classify money according purpose much money spend food much book example table total money spent food given time period namely january january food bought cash credit card different payment method matter point view asset liability irrelevant point view expense convenient way track income expense split column equity table several column normally done fixed time period example one year called accounting period equity beginning time period called initial capital increase equity since beginning time period called income decrease called expense therefore second accounting equation equity capital income expense therefore split equity account three column called initial capital income expense income expense column subdivided account different type income expense keep example simple consider single income account called salary two expense account called food book table personal accounting incomeexpense tracking jan opening balance jan get paid balance jan buy food credit card balance jan withdraw cash balance jan pay credit card bill balance jan get paid balance jan buy food cash balance jan buy book cash balance limit number account one limit number different type income expense tracked using system note expense like liability recorded positive number even though contribute equity negatively also note initial capital account never change example business use type capital besides initial capital type changeable example somebody invests money business thereby becoming owner considered increase capital rather income thus general one capital account fundamental accounting equation putting together first second accounting equation asset liability equity equity capital income expense obtain following called fundamental accounting equation asset liability capital income expense reader check yellow white row table indeed satisfy equation remark equity sometimes called capital vice versa really sure correct terminology tutorial continue use term meaning introduced remark traditionally accountant like subtract use negative number accounting equation therefore often written asset expense capital income liability quantity lefthand side last equation sometimes called activa asset expense righthand side sometimes called passiva capital income liability reader easily verify two version accounting equation mathematically equivalent conceptually pedagogically find division location asset liability purpose capital income expense useful division activa passiva therefore tutorial continue use version accounting equation us subtraction foreign currency accounting issue singleentry foreign currency accounting handling foreign currency singleentry accounting simple asset liability account currency transferring money one account another simply use exchange rate effect time transfer suppose keep two kind cash pocket canadian dollar cad u dollar usd january cad u dollar january exchange cad usd bank day exchange rate cadusd january spend usd food january exchange usd cad day rate cadusd january spend cad food transaction easily accounted two asset account table singleentry foreign currency accounting jan opening balance cad usd jan exchange usd cad cad usd balance cad usd jan buy food usd balance cad usd jan exchange usd cad cad usd balance cad usd jan buy food cad balance cad usd example show foreign currency easy account long want keep track asset equally easy liability process currency transfer exchange rate easily automated software double entry foreign currency accounting wrong way thing get complicated also want keep track income expense illustrate follow method table add account initial capital expense since income example nt need income account live canada keep capital expense account canadian dollar course transaction affect one account amount translated canadian dollar know exchange rate january let u assume sake example exchange rate cadusd usd cad day table doubleentry foreign currency accounting naively jan opening balance cad usd cad cad jan exchange usd cad cad usd balance cad usd cad cad jan buy food usd cad usd cad balance cad usd cad cad jan exchange usd cad cad usd balance cad usd cad cad jan buy food cad cad balance cad usd cad cad note recorded transaction according exchange rate effect date transaction made remember accounting equation asset liability capital income expense please convince transaction white line indeed satisfies equation one take daily exchange rate account therefore white line balanced problem problem yellow line balanced example consider balance january started cad spent cad food still cad pocket yet cad something went wrong gained cad without record equity side balance sheet accounting system table violates fundamental accounting equation foreign exchange gain loss cad table called foreign exchange gain gain caused exchange rate fluctuation transaction example buy foreign currency sell later higher price enjoyed foreign exchange gain similarly lose money due exchange rate fluctuation called foreign exchange loss accounting purpose foreign exchange gain count income foreign exchange loss count expense accounting method table lack way track foreign exchange gain loss question need address therefore calculate foreign exchange gain loss record preferably keeping fundamental accounting equation intact calculating foreign exchange gain loss somewhat tricky gain loss occur transaction rather time interval transaction therefore immediately clear time entered balance sheet principle gain loss happen every time exchange rate change whether transaction clearly feasible record continuous basis example per second must better way another potential complication concept gain loss depends base currency therefore point view suppose cad usd exchange rate change cadusd cadusd canadian enjoyed gain equity increased cad cad american suffered loss equity decreased usd usd dependency base currency seems necessary also frustrating seems imply multicurrency accounting system symmetric way different currency treated fact possible design symmetric system see section calculating gain loss adjustment principle one could account foreign exchange gain loss way one account intractable arithmetic error adding adjusting entry yellow line table forcing balance obey accounting equation method shown table table foreign currency accounting adjustment jan opening balance cad usd cad cad cad jan exchange usd cad cad usd balance cad usd cad cad cad jan buy food usd cad usd cad adjustment cad balance cad usd cad cad cad jan exchange usd cad cad usd adjustment cad balance cad usd cad cad cad jan buy food cad cad balance cad usd cad cad cad calculate table simply look day balance yellow line force satisfy accounting equation according day exchange rate adjusting entry added produce desired number result yellow balance line balanced white transaction line note exchange loss cad january technically expense created special expense account instead recorded loss negative gain accordance accepted accounting principle state exchange gain loss directly offset method shown table undesirable several reason main problem additional adjusting entry balanced thus violating principle double entry accounting remove source redundancy effect since one constantly force account balance one longer notice difference currency fluctuation random arithmetical error moreover even account balance one point continually go balance exchange rate change even transaction occur thus adjustment entry really added continuously rather per transaction would undesirable thing another problem adjustment method make difficult add change transaction retroactively suppose want enter another transaction january future adjusting balance january recalculated would possible computer automatically elegant even seems manipulative instead simply recording transaction calculating transaction separation data entry analysis seems violated cause effect individual transaction difficult track foreign currency accounting according ssap accounting nonmonetary current asset method shown table bad doubleentry accounting multiple currency done look possible solution useful recall one account changing value nonmonetary asset imagine business buying selling oil let u assume oil current asset mean easily converted cash market therefore oil always accounted current market price different noncurrent asset realestate usually accounted historical cost suppose buy oil market price sell market price plus profit margin cad per barrel january buy barrel oil price cad per barrel january sell barrel cad market price still cad january price oil increase cad per barrel january sell barrel cad account follows table accounting nonmonetary current asset jan opening balance cad cad barrel cad cad cad jan buy barrel cad cad barrel cad balance cad cad barrel cad cad cad cad jan sell barrel cad cad barrel cad cad balance cad cad barrel cad cad cad cad jan revalue inventory cad barrel cad cad balance cad cad barrel cad cad cad cad jan sell barrel cad cad barrel cad cad balance cad cad barrel cad cad cad cad several thing note example first remark green column marked inventory account simply informational column recording number barrel oil currently current price column usually appear company account kept separately account contain value asset rather asset also note accounting method clearly distinguishes different source income cad income sale profit barrel sold profit margin cad cad capital gain price oil rose cad time barrel viewpoint multiple currency accounting remark barrel oil cumbersome carry wallet might nevertheless regarded kind currency make following observation account cad even though another currency involved namely barrel oil actually keep account currency oil asset account kept cad fluctuation price oil recorded cad reflected asset side balance sheet also incomeexpense side result account balanced time since oil asset account denominated cad barrel must separately keep inventory actual amount oil owned also current market price inventory shown green column example informational part account sheet take part balancing official solution translation single currency country code standard accounting practice deal foreign currency accounting searched case found web example document ssap canada uk fasb u understanding various countryspecific document le say thing example ssap state accounting period company may enter transaction denominated foreign currency result transaction normally translated company local currency using exchange rate operation date transaction occurred effect mean foreign currency treated precisely way nonmonetary asset ie accounted local currency use canadian dollar local currency example mean oil account table denominated cad barrel oil u dollar account foreign currency example also denominated cad usd using accounting method currency gain loss determined way kind capital gain loss namely revaluing account change exchange rate occurs illustrate reconsidering example table using ssap method note accounting principle used similar table table foreign currency accounting à la ssap jan opening balance cad cad usd cad cad cad jan exchange cad cad usd cad balance cad cad usd cad cad cad cad jan revalue usd cad usd cad cad balance cad cad usd cad cad cad cad buy food cad usd cad cad balance cad cad usd cad cad cad cad jan revalue usd cad usd cad cad balance cad cad usd cad cad cad cad exchange cad cad usd cad balance cad cad usd cad cad cad jan buy food cad cad balance cad cad usd cad cad cad compare carefully table first thing notice white yellow row balanced table case table equity side balance sheet right solid black line nothing changed except order transaction assetsliabilities side left solid black line usd account denominated cad therefore currency fluctuation january lead revaluation asset table green column informational disregarded balancing purpose summarize main point ssap method always one special reference currency typically company local currency account kept reference currency tally nonreference currency informational take part balancing fluctuation relative value nonreference currency reflected immediately corresponding asset account also currency gainloss account advantage method since entry one currency special software support multiple currency needed principle singlecurrency accounting software required account balanced disadvantage separate tally foreign currency exchange rate must kept green column example fact tally contain original source information whereas corresponding assetliability account contain derived calculated information sense foreign currency account kept local currency virtual account whose content entirely calculated account must revalued periodically question arises principle happen every transaction generating report many foreign currency account mean lot manual work relatively difficult add change transaction retroactively new transaction entered earlier date future currency gain loss must recalculated change future transaction future balance unsatisfying asymmetry accounting method one currency must given prominence others first three disadvantage alleviated using software support ssap accounting method case user enter data green column software able take care conversion revaluation calculating corresponding gain loss foreign currency accounting using currency trading account restoring symmetry foreign currency accounting section one main complaint ssap accounting method introduces apparent asymmetry requiring one currency singled reference currency would prefer work account directly denominated multiple currency seen section lead problem accounting equation let u investigate method restores symmetry also respecting accounting equation consider following simple scenario january asset cad usd exchange rate cadusd therefore total capital canadian dollar cad cad cad let u assume make transaction january exchange rate change cadusd cadusd cadusd three day following january recording balance yellow line ignoring transaction white line moment find record following le style table table cumulative exchange gain function exchange rate jan balance usd cad cad usd cad cad jan balance usd cad cad usd cad cad jan balance usd cad cad usd cad cad jan balance usd cad cad usd cad cad note change day day exchange gain change asset account initial capital account also note account balanced day one take day exchange rate account let u save work giving formula exchange gain instead calculating explicitly day let exchange rate given day x cadusd let corresponding balance exchange gain account formula term x must satisfy fundamental accounting equation asset liability capital income expense therefore must cad x usd cad easily solved x usd cad word balance exchange gain account given day exactly equal current value usd minus cad expressed canadian dollar simplify table expressing exchange gain difference multiple currency rather expressing value single currency table cumulative exchange gain expressed difference multiple currency jan balance usd cad cad usd cad usd cad jan balance usd cad cad usd cad usd cad jan balance usd cad cad usd cad usd cad jan balance usd cad cad usd cad usd cad note exchange gain shown table exactly identical shown table given day exchange rate example january table show usd cad equal amount cad shown table given day exchange rate cadusd expressing exchange gain term multiple currency altered substance recorded changed method recording note line table balanced independently current exchange rate indeed entry currency balanced separately cad cad cad also usd usd accounting currency trading account account denominated difference multiple currency like exchange gain account table known currency trading account following exact copy table except renamed exchange gain account usd trading table foreign currency accounting currency trading account jan balance usd cad cad usd cad usd cad jan balance usd cad cad usd cad usd cad jan balance usd cad cad usd cad usd cad jan balance usd cad cad usd cad usd cad important note currency trading account represent asset purpose currency trading account calculate foreign exchange gain loss convention gain recorded positively loss negatively therefore currency trading account kind income account currency trading account different account denominated two currency typically one currency reference currency one usual terminology called security thus example may say usd trading account hold security usd offset cad negative currency currency trading account reflects currency exchange made past ideal situation exchange rate never change balance supposed zero however exchange rate fluctuates value currency trading account fluctuation correspond exactly currency gain loss end accounting period one may move actual realized gain loss income expense account denominated reference currency let u illustrate use currency trading account redoing example section replace currency gain account currency trading account u dollar canadian dollar table foreign currency accounting currency trading account jan opening balance cad usd cad cad usd cad jan exchange usd cad cad usd usd cad balance cad usd cad cad usd cad jan buy food usd cad usd cad usd cad balance cad usd cad cad usd cad jan exchange usd cad cad usd usd cad balance cad usd cad cad usd cad jan buy food cad cad balance cad usd cad cad usd cad note transaction involve currency conversion like buy food january entered usual way double entry accounting transaction involve currency conversion like exchange january buy food january must go trading account conceptually exchanging canadian dollar u dollar moving canadian dollar trading account equivalent amount u dollar trading account however sign reversal money moved trading account given negative sign money moved given positive sign fixme standard convention sign trading account comparing use currency trading account table accounting method shown table note need periodic adjustment table january periodic revaluation asset table january eliminated indeed value trading account selfadjusting sensitive exchange rate since manual adjustment revaluation needed question record becomes moot point another consequence selfadjusting nature currency trading account penalty entering changing transaction retroactively unlike ssap system retroactive transaction effect future transaction balance currency trading account system retroactive currency transaction affect future balance future transaction respect effect different retroactive transaction also note using currency trading account method table need keep separate tally inventory foreign currency asset using ssap method table green column instead foreign currency asset held directly account another advantage currency trading account method provides flexibility tracking income expense currency exchange many application sufficient single currency trading account also possible several account instance one account foreign currency one account branch business one account customer make possible keep track foreign exchange gain loss attributed different source reason single currency trading account limited two currency possible set currency trading account account gain loss trade three currency balance account expressed sum difference amount participating currency summary main advantage using currency trading account multicurrency accounting foreign currency transaction entered account denominated directly foreign currency thus account sheet contains source information account balanced transaction balance respect accounting equation foreign exchange gain loss need calculated continuous basis instead calculated whenever convenient eg per accounting period transaction easily entered changed retroactively without causing change future transaction foreign exchange gain loss different source tracked independently see section example reference currency thus inherent asymmetry accounting method important conceptual fact remember currency trading account following purpose currency trading account perform conversion calculate gain loss value currency trading account change transaction time interval transaction equivalence ssap accounting method using currency trading account mathematically equivalent method ssap mean used generate financial report identical generated ssap indeed suppose generate financial report data table end january recorded following balance end january jan balance cad usd cad cad usd cad using exchange rate cadusd effect january translate balance cad note usd cad therefore usd cad cad translated balance sheet jan balance cad cad cad cad cad keeping mind currency trading account special kind income account representing foreign exchange gain translated balance sheet exactly identical endofday balance january obtained ssap method shown table therefore translation reference currency accounting method yield identical data generate identical financial report example tracking exchange gain loss source suppose canadian company selling good u customer book mostly kept canadian dollar invoice customer usd customer given day pay send invoice additional time may pas receive deposit usd cheque cad bank account foreign exchange gain loss occur exchange rate change invoice date date payment received converted cad suppose reason would like track foreign exchange gain loss percustomer basis example want determine whether would worthwhile tighten customer payment term easily done using one currency trading account customer table one currency trading account per customer jan opening balance cad usd cad usd cad usd cad jan invoice customer usd cad usd cad usd cad balance cad usd cad usd cad usd cad jan invoice customer usd cad usd cad usd cad balance cad usd cad usd cad usd cad jan payment customer usd cad cad usd usd cad balance cad usd cad usd cad usd cad jan payment customer usd cad cad usd usd cad balance cad usd cad usd cad usd cad trading account balance january show interaction customer resulted foreign exchange gain cad whereas interaction customer resulted foreign exchange loss cad fact particular foreign currency interaction finished ie outstanding currency exchange reflected fact usd balance corresponding currency trading account method used track foreign exchange gain loss associated division source care keep track example might want separate exchange gain loss different part business different country work even several country share currency realized unrealized gain loss far discussed method calculating gain loss currency transaction extension transaction type variablepriced asset barrel oil share stock gain loss also called capital gain loss practice often important distinguish realized unrealized gain loss one area distinction relevant taxation usually realized gain taxable exact determination whether particular gain loss realized unrealized often tricky rule vary country country section briefly discus issue show fit multicurrency accounting method general term variablepriced asset market fluctuation cause value asset change time change value called unrealized gain loss long still item sell item turn realized gain loss basic principle simple precise rule gainloss realized depend detail tax code accounting practice particular always obvious determine realized gain loss sell part asset calculation unrealized gain loss sometimes require guesswork depends fair market value asset yet sold asset unique traded daily basis house often impossible determine precise value usually better account item original purchasing price rather trying reevaluate time type asset currency stock easier evaluate hand realized gain loss always calculated exactly item sold exact sale price known example real estate let u start considering simple example real estate suppose two house street called house house b house similar opposite side street let u assume two house equal similar market value given time suppose january february buy house march buy house b april real estate agent estimate current market house worth point market price two house paid unrealized capital gain specifically unrealized gain house unrealized loss house b may sell house estimate house b keep also worth point realized gain house may pay tax amount minus expense depending applicable tax law time also total unrealized loss house b june decide sell house b longer unrealized gain loss realized loss sale house b together realized gain house result overall realized loss year scenario accounted trading account model unit cad canadian dollar hou house table realized unrealized gain loss first real estate example jan opening balance cad hou hou cad hou cad cad feb buy house cad hou hou cad balance cad hou hou cad hou cad cad mar buy house b cad hou hou cad balance cad hou hou cad hou cad cad apr balance cad hou hou cad hou cad cad may sell house cad hou hou cad realized gain cad cad balance cad hou hou cad hou cad cad jun sell house b cad hou hou cad realized loss cad cad balance cad hou hou cad hou cad cad number observation order first unrealized gain loss implicitly recorded trading account thus fluctuate automatically account evaluated different time example march two house valued therefore balance trading account converted cad corresponding unrealized gain day april two house valued therefore trading account balance worth second unrealized gain loss becomes realized may june witnessed explicit transaction namely moving corresponding amount trading account income account important point realized gain loss calculated implicitly accounting system must explicitly stated bookkeeper accountant argue desirable necessary feature example show calculation realized gain many case depends local law accounting practice therefore reasonable resolved human course calculation also automated done customizable rule question realized gain loss recorded example example following recorded immediately date sale however number transaction large might convenient calculate record realized gain loss le frequently example one might decide end accounting period pedantic would used two different unit currency house example hoa quantity house hob quantity house b two house similar entirely interchangeable different side street done would also created two separate trading account hoa hob similar done table case realized gain house would total content trading account house may would denominated pure cad day similarly realized loss house b would total content trading account house b june way possible avoid separate side calculation determining realized gain loss expense keeping larger number separate trading account importance identity asset see thing get complicated let u change realestate scenario slightly suppose decided sell house b may house june rather way around house similar may would sold house b resulting realized loss house b compared realized gain scenario sold house day hand june would sold house resulting realized gain house compared realized loss original scenario account updated scenario change table shown red table realized unrealized gain loss second real estate example jan opening balance cad hou hou cad hou cad cad feb buy house cad hou hou cad balance cad hou hou cad hou cad cad mar buy house b cad hou hou cad balance cad hou hou cad hou cad cad apr balance cad hou hou cad hou cad cad may sell house b cad hou hou cad realized loss cad cad balance cad hou hou cad hou cad cad jun sell house cad hou hou cad realized gain cad cad balance cad hou hou cad hou cad cad end year total realized loss two house regardless two scenario follow assuming tax year end december matter house sold first however thing different tax year end may wait several year selling second house case difference outgoing tax year gain first scenario loss second scenario therefore matter house sold first even house identical fifo lifo adjusted cost base method fortunately real estate transaction never question several house sold matter similar house house b still different address however thing simple several unit asset share stock actually indistinguishable accounting terminology indistiguishable asset called fungible asset let u redo example using share instead house also shorten number three zero suppose january february buy one share company march buy another share april check value share find worth total value spent buy unrealized capital gain may decide sell one share realized gain point answer depends precisely rule differ different country three common case country australia use firstinfirstout fifo rule rule share sold may considered share bought longest ago ie one bought february sale therefore result realized gain corresponds first realestate scenario first house bought first house sold country use lastinfirstout lifo rule name suggests rule share sold may considered share recently bought ie one bought march sale therefore result realized loss corresponds second realestate scenario country canada use method called adjusted cost base method weighted average method method realized gain loss computed based average cost share currently owned thus one would consider total number share total amount spent also called cost base average cost share therefore sale one share may therefore considered create realized loss cost base adjusted subtracting sold share also subtracting realized loss result called new adjusted cost base represents total historical cost remaining share sale current value used cost base next sale description fifo lifo method clear implementation multicurrency accounting model look almost exactly like two real estate example table one replace house share course longer separate asset account house house b instead single asset account company share fifo example shown table lifo example shown table complete example assumed last remaining share sold june table realized unrealized gain loss fifo jan opening balance cad sha cad sha cad cad feb buy one share cad sha sha cad balance cad sha cad sha cad cad mar buy one share cad sha sha cad balance cad sha cad sha cad cad apr balance cad sha cad sha cad cad may sell one share cad sha sha cad realized gain fifo cad cad balance cad sha cad sha cad cad jun sell one share cad sha sha cad realized loss fifo cad cad balance cad sha cad sha cad cad table realized unrealized gain loss lifo jan opening balance cad sha cad sha cad cad feb buy one share cad sha sha cad balance cad sha cad sha cad cad mar buy one share cad sha sha cad balance cad sha cad sha cad cad apr balance cad sha cad sha cad cad may sell one share cad sha sha cad realized loss lifo cad cad balance cad sha cad sha cad cad jun sell one share cad sha sha cad realized gain lifo cad cad balance cad sha cad sha cad cad fifo lifo method nontrivial overhead involved calculating realized gain loss calculation require looking back history share acquired figuring one already sold figuring remaining share first last respectively transaction realized gain loss need created sale seem convenient way reduce overhead fifo lifo method turn adjusted cost base method overhead account example adjusted cost base method end following table realized unrealized gain loss adjusted cost base jan opening balance cad sha cad sha cad cad feb buy one share cad sha sha cad balance cad sha cad sha cad cad mar buy one share cad sha sha cad balance cad sha cad sha cad cad apr balance cad sha cad sha cad cad may sell one share cad sha sha cad realized loss acb cad cad balance cad sha cad sha cad cad jun sell one share cad sha sha cad realized gain acb cad cad balance cad sha cad sha cad cad note like fifo lifo realized gain loss associated transaction however adjusted cost base system possible calculate amount realized gain loss without looking entire history purchase sale check example carefully discover adjusted cost base given time exactly equal cad portion trading account coincidence trading account precisely mirror historical cost share realized gain loss sale transaction therefore calculated simply looking trading account balance prior sale course work separate trading account kind share owned course trying convince use adjusted cost base method accounting use whichever method prescribed law country country realized capital gain taxed different rate depending long held asset country one income account realized gain example one realized gain taxable lower rate realized gain taxable higher rate clear one use adjusted cost base method situation would notion long held asset selling instead probably using fifo method illustrate adjusted cost base method may useful consider complicated example suppose start january january buy share stock per share january sell share per share january buy share per share january sell share per share using adjusted cost base method realized gain loss computed daily basis follows table realized unrealized gain loss second acb example jan opening balance cad sha cad sha cad cad jan buy share cad sha sha cad balance cad sha cad sha cad cad jan sell share cad sha sha cad realized gain acb cad cad balance cad sha cad sha cad cad jan buy share cad sha sha cad balance cad sha cad sha cad cad jan sell share cad sha sha cad realized gain acb cad cad balance cad sha cad sha cad cad therefore adjusted cost base system end january realized gain year still share adjusted cost base remarked discussion accounting rule fifo lifo adjusted cost base applies share also type asset notably inventory company sell oldest inventory first assumes accounting purpose effectively using fifo sell newest inventory first using lifo overall price rising lifo method result le reportable income therefore lower tax however according article lifo method frowned upon outside u rarely make sense hoard old inventory discussed capital gain loss context variablepriced asset similar discussion also applies variablepriced liability example suppose need pay invoice foreign currency currency decrease value amount pay also decrease term currency therefore experience unrealized gain turn realized gain actually pay invoice country like australia gain loss asset must reported separately gain loss liability australia called forex realisation event type respectively case one separate income account type realized gain loss conclusion say multicurrency accounting model used track realized gain loss variety accounting rule realized gain loss entered transaction specific rule fifo lifo adjusted cost base implemented system requires slightly different calculation done translation issue independence viewpoint section briefly mentioned concept foreign exchange gain loss apparently depends one choice reference currency canadian person asset cad usd perceive shift exchange rate cadusd cadusd gain whereas american person situation perceive shift loss international business difference viewpoint perception real important financial implication example gain taxed loss example suppose canadian company u subsidiary suppose u subsidiary asset cad usd simplicity also assume subsidiary transaction throughout year exchange rate january cadusd exchange rate december cadusd since subsidiary company american book naturally kept u dollar book would look like using accounting method currency trading account table book u subsidiary company jan opening balance cad usd usd cad usd dec closing balance cad usd usd cad usd preparing financial statement fiscal year u subsidiary translates opening closing balance usd using exchange rate cadusd january rate cadusd december translation table book u subsidiary company translated usd jan opening balance usd usd usd usd dec closing balance usd usd usd usd u subsidiary therefore suffered unrealized loss usd report canadian parent company financial report subsidiary might look like initial capital jan usd minus loss usd final capital dec usd parent company incorporate subsidiary financial statement book ssap requires parent company translates subsidiary statement reference currency cad parent company use exchange rate january translate initial capital use exchange rate december translate income expense final capital parent company might translate subsidiary financial statement initial capital jan usd cadusd cad minus loss usd cadusd cad final capital dec usd cadusd cad note addition correct u dollar canadian dollar fix parent company add book capital gain initial capital usd subsidiary company represents investment point view parent company risen value cad cad accounting period due rise value u dollar cad cad parent company must therefore adjust translated book subsidiary capital gain cad initial capital jan usd cadusd cad plus capital gain cad minus loss usd cadusd cad final capital dec usd cadusd cad note capital gain cad calculated based initial capital subsidiary company also note number add correctly subsidiary side capital gain parent side capital gain capital gain exists point view parent company whose reference currency cad point view subsidiary company whose reference currency usd visible capital gain finally note translation parent company need yearend financial statement subsidiary need detailed information subsidiary transaction suppose canadian parent company also canadian subsidiary assume comparison canadian subsidiary exactly amount type asset american subsidiary transaction second subsidiary financially identical first one except account equity cad therefore book look like table book canadian subsidiary company jan opening balance cad usd cad usd cad dec closing balance cad usd cad usd cad note main difference table initial capital carried different currency also affect initial balance trading account come preparing yearend financial report canadian subsidiary translate opening closing balance cad table book canadian subsidiary company translated cad jan opening balance cad cad cad cad dec closing balance cad cad cad cad financial report canadian subsidiary look like initial capital jan cad plus gain cad final capital dec cad parent company incorporate statement directly book since already canadian dollar example illustrates independence viewpoint important accounting principle end result point view parent company matter whether subsidiary keep track equity usd cad first case parent report capital gain cad partially offset currency exchange loss cad second case parent report currency exchange gain cad net gain case summary matter whether one first translates book new currency prepares financial report whether one first prepares report translates report new currency adding capital gain loss initial capital practice nationality subsidiary course make difference example area taxation example u subsidiary report net loss therefore taxed u however canadian parent taxed canada canadian subsidiary report gain therefore potentially taxed canada although case considered probably wo nt taxed gain unrealized tax partially offset lower tax canadian parent reference currency v equity currency note table make use trading account thus use accounting method treat multiple currency symmetric way reference currency sense ssap account kept single currency nevertheless course difference table american company typically record equity capital income expense usd canadian company cad therefore company favor particular currency however particular asymmetry caused way company choose denominate account built accounting system reason principle company could keep income expense capital account usd others cad accounting method currency trading account would problem accommodating however preparation singlecurrency financial report would somewhat trickier case capital gain loss would added report foreigndenominated capital account done method shown section specific software section provides pointer multiple currency accounting support specific accounting software package gnucash gnucash builtin support multiple currency prior version doubleentry accounting followed method described section wrong way currency gain loss calculated reporting system proper currency trading account could set manually supported exchange rate system transaction calculated hand version support currency trading account added enabled default see multiple currency accounting gnucash information enable also information older manual method
41,Lobsters,education,Education,A Better Cheatsheet,https://www.hillelwayne.com/post/cheatsheets/,better cheatsheet,teach workshop progressive cheatsheets starting point tla alloy alloy one tla cheatsheet cheatsheet theory first implementation etoolbox second implementation sample template sample output result reach greg wilson,teach workshop living spend lot time making better workshop one improvement made creating progressive cheatsheets discus motivation implementation high level picture progression cheatsheet click full size assuming know cheatsheets rather look one page essential entire book problem make lot better starting point currently run workshop two language tla alloy need cheatsheets already public cheatsheets use alloy one asis tla cheatsheet several page long cheatsheets one page past two nobody look step one make one page version tool choice latex typesetting dsl grew wildly beyond original niche best tool fine control layout le intrinsic quality everything else far far worse found cheatsheet template divide material section layout column latex computes layout content column nice know start much content needed best group could reorder section entire thing automatically reflow unfortunately latex finicky often end content overflowing column fixing weird latex error still better trying lay everything manually basic cheatsheets got going started running problem one make cheatsheets useless one made slower cheatsheet theory cheatsheets need dense information pack single page likely someone going find already know need student know exactly need might try apply wrong idea thing like using actually need choose switching function functionset notation thing like much bigger problem still learning material yet mental model know material relevant cheatsheet material covered yet two failure mode realize future material try use wrong place example writing set subset instead subseteq know relevant add much noise trouble locating relevant thing workshop long cover challenging material already stuffing entire discipline student brain need add difficulty top looked way fix problem first implementation direct solution hide anything covered yet instead giving student single cheatsheet give seven first lesson get cheatsheet cover first lesson second lesson get cheatsheet cover first second lesson way final version cheatsheet everything etoolbox package latex define switch newtoggle like newtoggle temporal logic create new maintex file import cheatsheet root document newtoggle topic newtoggle topic b newtoggle topic c input main toggletrue topic input main toggletrue topic b input main toggletrue topic c mean instance main previous switch active write iftoggle topic b content toggle true process normal toggle false skip rendering entire section sure thing student seeing stuff already covered solves problem nicely noise red herring better second implementation topic cheatsheet laid topic order lesson order think something like python function put variadic argument syntax right regular syntax even though one beginner topic advanced topic final cheatsheet might look like cheatsheet cover look like remove c b latex recalculate page layout earlier cheatsheet student see top left bottom left cheatsheet four topic bottom left c student got used seeing bottom left break habit relearn new location problem get worse add topic progression sheet might seem like minor problem like extra mental overhead student nothing actual material accidental difficulty essential difficulty want every piece content exact place every single cheatsheet thought would pretty tough tell latex layout doc content actually render chunk text seemed like expertlevel latex wizardry cheated newenvironment requires iftoggle passed point show normal color white hide text rowcolors white white hide table instead using raw iftoggle created new wrapping environment toggle true proceed normal false though make text environment white text still rendered meaning layout consistent sheet nobody see distracting get job done main downside work inside table something nested environment driving latex crazy wrap whole table requires block splitting table sort get benefit aesthetic worse eh want make progressive cheatsheets sample template produce sample output result first got test facebook workshop back november worked spectacularly people used progression start much easier time finding right material people used final version cheatsheet first group also fewer false negative tried use wrong concept consider big success three note though first gave next progression midlesson exercise people would try use material second half module quickly switched giving endofmodule exercise covered everything really easy forget pas progression added new slide lecture note new handout point collate hope enjoyed peek design process thinking wow person actually give crap teaching feel free reach interested corporate workshop join newsletter announcement new public workshop thanks lito nicolai greg wilson feedback
42,Lobsters,education,Education,Polyglot Documentation with Org-mode,https://www.rse.ox.ac.uk/tech_post/polyglot_documentation_with_org_mode/,polyglot documentation orgmode,orgmode orgmode website built revealjs babel babel research paper written orgmode babel fork path example output let talk simple computer program method print screen,important part teaching meeting student common ground find experience bring teaching incorporate new knowledge alongside already know teaching software engineering concept usually mean tailoring discussion programming language student familiar may explaining languageagnostic concept like objectoriented programming designing reusable function drawing graph student find example given unfamiliar language barrier understanding rse group work lot different programming language quick sample project worked university last year includes javascript c c ruby php swift python r matlab may others point pick different programming language time mean people teach developing teaching material could many commercial saas company document web apis could embed example code many language documentation let reader choose want see tool make easy like markdownfencedcodetabs extension python markdown parser good enough api sample really work tutorial content need talk code prose subtly different language also want maintain wholly separate fork material want one narrative languagespecific sample prose section necessary single source like able build version documentation tailored specific language sample code language necessary tweak discussion orgmode found possible writing document orgmode orgmode extensible format writing structured text hierarchical outline system markdownlike formatting syntax facility marking section todo item due date sample code particular language presenter note used presentation originally written venerable gnu emacs text editor orgmode parser exist vim visual studio code atom elsewhere using emacs parser possible export orgmode file multiple format including hugo website built latex suitable generating printed handout revealjs slide giving lecture crucially orgmode also tagging system section hierarchical outline tagged arbitrary word control tag get included excluded file exported orgmode build multilingual documentation babel another nifty capability orgmode babel designed reproducible research even research paper written orgmode babel babel add literate programming facility orgmode code block orgmode document babel run code incorporating result document even using result input code block tutorial material really good use testing code snippits situ without keep sync separate code file project fork path combining facility give u polyglot programming documentation document kept single orgmode file discussion appearing exactly multiple copy multiple programming language sample code segment languagespecific prose section tagged name language example c tagging sample code mean babel work run code syntax highlighting rule use make easier maintain code block document using tag prose mean excluding including language tag export choose sample code relevant discussion appears output example finally example describing classic hello world program three language c python ruby us different function print message though overall description program c also explain n thing end message string excludetags c python property headerargs result output option tag nil let talk simple computer program program put phrase hello world screen early version appeared book c programming language kernighan ritchie included demonstration prove compiler set correctly day hello world common example program every programming language give newcomer flavour language single contributor behaviour program function print text screen printf function c use printf print screen c beginsrc c include stdioh int main printf hello world n endsrc weird n string tell printf output newline character moving cursor start next line put method ruby use put print screen ruby beginsrc ruby put hello world endsrc print function python use print print screen python beginsrc python print hello world endsrc print screen playing fast loose terminology hello world program writes message stream called standard output often written stdout happens standard output stream usually displayed screen terminal application output rest document generated orgmode file c python tag excluded excludetags line start file result includes discussion example code relevant ruby programming language could similarly get version language let talk simple computer program program put phrase hello world screen early version appeared book c programming language kernighan ritchie included demonstration prove compiler set correctly day hello world common example program every programming language give newcomer flavour language single contributor behaviour program function print text screen put method use put print screen ruby print screen playing fast loose terminology hello world program writes message stream called standard output often written stdout happens standard output stream usually displayed screen terminal application
43,Lobsters,education,Education,How to Run a Live Coding Stream on Twitch using OBS,https://jordanlewis.org/posts/twitch-live-coding/,run live coding stream twitch using ob,large data bank twitter elsewhere online twitch twitter intro section ob trying set first stream ob configuration ob scene desktop desktop setup post video streamlabels whiteboard ipad green screen overlay demo video selfie noopkat blog starting soon later brb right back bye video twitch inspector stream key camera sony sigma desk setup post avermedia live gamer portable plus audio section logitech audio stream alert microphone blue yeti boom arm shock absorber pop filter desk setup post syncing audio video desktop sound capture soundflower loopback streaming twitch finally amruta doc stream alert streamlabs quodb sound stream alert audio section channel setup science technology tag programming educational engineering software development english panel free panel image emotes twitch affiliate banner image saving video creator dashboard playlist chatbot nightbot becoming twitch affiliate emotes shoutouts noopkat awesome post onetruecaptain jarsonmar mdlayher itsjayphillz occupypaulst sartak amruta charlie justin paul,reading post might interested trying hand live coding stream way sharing project relatable immediate way polished blog post teaching others programming way fun think live coding stream general interesting possible future form education entertainment contemplating starting stream sincerely hope month mark month anniversary first stream large data bank twitch live coding channel grown oneoff friday experiment regularly scheduled part life community dozen wonderful regular viewer chatter activity one top thing look forward every week learned lot along way detailed guide way set stream attempt stepping back sharing learning hope inspiring others try awesome hobby hope useful start journey streaming question answered blog post happy answer twitter elsewhere online also please send follow twitch twitter stream notification stream every friday pm et sunday time afternoon intro whatever reason wanting try streaming quite bit setup need front try feel daunting everyone go initial setup period though got important part post section ob awesome crossplatform free open source streaming software community us ob best friend streaming journey use control webcam desktop audio every element go final product livestream rest post focus configuration specific twitch like use twitch like culture developed time plenty people think youtube live appropriate professional content familiar youtube live discussion ob apply youtube twitch main difference configure ob send youtube account instead twitch stream setting yo trying set first stream really need stuff guide represents built gradually past month stream stream recommendation livecodingcurious try streaming barebones setup see like investing expensive gear diving hour configuration asset creation accomplish several hour weekend set single scene ob captured desktop background webcam corner microphone configured micaux need simple setup streaming coding cover make happen ob configuration section ignore extra scene various bell whistle good go ob configuration ob produce everything viewer see hear live video including desktop camera beautiful face voice stream alert overlay text information might want show viewer lot cover ob going try explain talk worked make something suit need flex creative muscle use idea starting place need dive ob play around everyone setup going different scene scene ob name particular layout video audio component stream typically see twitch streamer stay single scene stream game desktop whatever focus handy extra one intro outro stream something cover screen want take break main scene use bound global hotkeys switch without click around ob unfortunately sometimes hotkeys stop working stream yet figure exactly happens happen problem found workaround please let know primary scene couple child scene embedded several main scene deduplicate onscreen element one picture however spend vast majority stream one desktop scene desktop scene workhorse stream one active time consists fullscreen display capture source external monitor convenient leaf ambiguity catpured stream whole monitor leaf laptop screen free ob window monitoring chat anything else want look streaming without show viewer desktop setup post go detail way set desk two monitor convenient stream hooked sure manage without quick note font size make text editor font quite large make legible viewer take little get used use font editor provides visible horizontal line code next nothing compared amount context probably used seeing programming hamstringing worth though bigger font likely viewer able follow along stay engaged ask question learn fun also try remove many distracting element editor desktop possible streaming keep focus code meant disabling mac menubar dock removing vast majority toolbars ide besides desktop capture source back scene added several source face cam video source capture card information video source video section keyboard cam video source webcam pointed keyboard couple text box show recent subscriber follower onstream command text box updated automatically streamlabels app web page source connected streamlabs stream alert cover definitely start element quite lot work tweak thing way want kept configuration past couple month like way look whiteboard whiteboard scene meant showcase ipad full screen allowing draw thing stream demonstrate idea concept use concept app ipad along apple pencil drawing work pretty nicely know fill space bottom left since ipad widescreen aspect ratio like monitor put picture friend aileen drew make stream bit visually interesting scene reference facecam alert source desktop scene definitely use dry principle ob like software get tricky keep everything deduplicated ipad green screen overlay also set green screen configuration ipad overlay scene global hotkey give espn football announcer effect stream draw ipad line appear overlayed top whatever else stream time probably complex video element stream ob make pretty simple set added color key filter black background top raw ipad video feed set drawing app black background tweaked color key setting ob thing looked right use element nearly often like think pretty neat recorded demo video curious look also use occasionally stream selfie fullscreen version facecam copied name scene noopkat blog use scene turn camera moment find really fun switch scene look right camera talk bit switching back desktop view starting soon scene go soon stream turn ready start talking camera usually start stream minute time announced twitter stream leave time come muted mic used gif found internet someone typing people tell stream live even though nothing happening yet also music preroll talk music sound later brb put scene need step away stream moment use bathroom whatever added sound well think kind funny switch scene play right back sound sure sound think meme scene also gif people know stream still alive bye ending stream straightforward click stop streaming button ob rather cutting directly desktop stream nice switch video goodbye scene people know stop broadcast drew little goodbye picture ipad try remember put end stream easy forget lot try pack right end try talk right camera thank people stopping recap stream also typically try find streamer raid time twitch term sending viewer another stream ready stop add bunch extra mental overhead add sometimes forgetting toggle bye scene video bunch setting need tweak ob probably important one video output setting video setting control canvas output resolution size stream canvas computer resolution ob send twitch bigger output resolution bandwidth need stream bandwidth viewer need watch popular streamer get quality option twitch allows viewer watch lower quality streamer get option viewer watch resolution streamer stream canvas resolution differs output resolution ob need apply downscaling filter adding cpu load say set resolution seems like good mix bandwidth quality output setting control behavior encoder must tuned provide right mix quality cpu use generally higher bitrate better stream look network bandwidth cpu ob consume want find mix work use course ymmv experiment best way test stuff record sample video examine well use twitch inspector give modified stream key configure ob start streaming modified key able monitor upload bandwidth bitrate sustainably send twitch via inspector website without actually go live graph recent stream cut due internet issue think caused intense storm rolling brooklyn time see several instability graph unstable event good stable stream zero blip graph one slight annoyance inspector give bitrate bandwidth graph actually let play stream back make sure look good getting started really want test pipeline end end set private unlisted youtube live broadcast stream let see video test stream camera use sony camera sigma lens capture visage definitely need high quality camera get started streaming got one might well use quality immediately noticeable whatever camera use probably want make sure nice light shining beautiful face easiest way stream day sunlight make everyone look good streaming night need figure lighting different way talk cheapo diy softbox use desk setup post side note using usb webcam camera laptop need capture card convert camera hdmi output video stream ob use use avermedia live gamer portable plus hideous rather large trick also pas hdmi give option capturing game console ever decide stream something programming one thing note capture card introduce latency camera see output stream ob compensate added artificial latency microphone match capture card latency talk later audio section started logitech fabulous affordable webcam upgraded fancier sony figured put logitech good use pointing handsome keyboard letting viewer see soothing soothing asmr effect hand tapping key stream like add little bit extra mental load make sure remember type password leaked unimportant password couple time way though sure anyone taken time try figure video hopefully point learned lesson audio sound really important component stream besides video viewer want hear silky smooth voice depending trying stream might also want hear sound whatever computer also like include low volume background music stream ease transition silence take moment think also common touch add sound stream alert ob several place configure audio want start adding microphone yeti stereo microphone case micaux dropdown audio setting microphone use blue yeti mic popular choice good mix price quality mounted desk boom arm bring microphone close face without getting way keyboard shock absorber pop filter avoid distracting sibilant noise vibration furious typing desk bump might ensue wrote desk setup post advantage bringing mic close face boom allows lower gain microphone avoid noise voice even low gain though microphone sensitive pick noise like fan air conditioner partner phone call ob several filter apply microphone input help suppress background noise like compressor expander limiter noise suppression lot discussion ob forum around web rehash copious testing different setting level background noise come conclusion best filter noise suppression filter db almost certainly different try thing syncing audio video test stream notice issue synchronization mouth moving video sound speech tweak advanced audio property setting ob add delay microphone compensate latency capture card use webcam course vary depending setup way test using start recording feature ob recording clapping several time open video vlc play back slow motion trying line sharp sound clap image hand hitting kind hard think must movie producer use iconic clapboard hand probably much easier see exactly two half clapboard hit two hand desktop sound capture admit getting desktop capture sound right ob mac kind pain use soundflower open source kernel extension allows set audio output device program use input source allows ob listen computer sound output order also listen desktop sound need make aggregate device audio midi setup program include headphone soundflower device set computer output device new aggregate device created alternatively shell loopback rogue amoeba much easier way anyway get set want add soundflower loopback output device desktop audio device able see level device audio mixer bottom stream adjust fly streaming twitch finally okay tweaked ob liking set webcam microphone created scene actually go ahead start streaming first thing first need create twitch account one already twitch documentation quite good according expert tech writer colleague amruta check doc info got account set need find stream key twitch website enter ob stream setting done start live stream take deep breath smile camera hit start streaming button ob live fun stream alert stream alert fun way encouraging people follow subscribe channel someone follows subscribes gift sub raid host stream sends bit stream alert configured play gif sound display name person performed action along thing use streamlabs alert box stream alert easy use free configured alert box streamlabs website add stream browser source somebody interacts stream streamlabs send alert webpage source pointing thing le confusing sound streamlabs pretty good instruction site set follower alert look like stream blue background transparent lot fun picked bunch different gifs alert type personalize thing found movie quote quodb people say something related data bank found clip online created play people subscribe also streamlabs play random set keep thing fresh people follow sub sound stream alert besides exciting viewer stream alert also serve another purpose make noise know react exciting follow sub raid came way one problem though need make alert play stream headphone without playing twice troublesome desktop audio capture default browser source play audio directly stream mix output locally sound good viewer streamer able hear alert streaming need check control audio via ob box browser source set audio monitoring dropdown advanced audio property monitor output see action audio section output stream configured monitor audio careful though monitor audio audio output getting captured soundflower loopback viewer hear doubled sound avoid make sure monitoring device set headphone ob audio setting channel setup gotten stream going probably want use twitch tool fill page help give stream unique look branding help viewer understand stream several thing take care like rest setup probably want start simple enhance time see fit twitch give every stream opportunity list category since twitch started still primarily gaming website category individual game several nongaming category one live coder use called science technology use well category also great way finding programming streamer watch get inspired learn twitch also allows give stream tag way aid stream discovery help viewer know stream always tag stream programming educational engineering software development english tag somewhat hard tell viewer come via twitch analytics reference viewer breakdown one recent stream believe recommendation browse page view probably came stream category tag panel panel twitch way giving channel section panel image text fairly annoying abstraction honest panel image fixed size much control laid go text stream image give stream unified look feel eventually like pay artist make themed panel emotes found free panel image behance liked someone named anibal alvarez thanks anibal emotes add custom emotes subscriber use chat twitch become twitch affiliate emotes lingua franca expressing feeling twitch great way demonstrating support channel lot people like commission themed emotes channel artist like point uploaded funny picture someone added work slack image ancient alien guy see resemblance banner image also slot banner image twitch yet another asset probably want generate avoid default banner look twitch name laid repeating pattern plain colored background used previewapp make mine result predictably amateur really want replace image soon made far post figure person banner relates title stream congratulation nerd saving video one important thing note default twitch archive stream video need turn setting located channel setting page creator dashboard enabled setting video stream saved twitch server week video handy dandy export button allows permanently save video youtube download want reason export video youtube trim intro outro add playlist archival purpose end lot youtube content quickly method exactly sure whether super useful save hour hour content create streaming raw youtube stream video get several view time imagine somebody must find useful chatbot stream start accumulating viewer probably start notice frequently asked question new viewer start get tiresome answer channel chatbot set command viewer type get answer faq channel people love ask current project kind keyboard kind asking one webcam pointing time editor color scheme us command type project keyboard editor theme chat bot respond answer lot twitch bot like use nightbot good mix feature free easy use people love make twitch bot well notice one common project people programming channel actually needed anything fancy nightbot provides becoming twitch affiliate twitch affiliate program apply channel hit certain viewership followership metric becoming affiliate unlocks several feature stream signifiantly allowing viewer subscribe channel monthly fee grant emotes use chat room twitch good feeling supporting streamer affiliate stream also get couple feature stream like channel point currency accumulate watching stream redeem streamerdefined reward tried playing around channel point yet getting affiliate require work need follower average concurrent viewer per stream total broadcast minute least stream past day definitely put mind took month become twitch affiliate hardest requirement hitting stream month implies needing stream per week started streaming every friday one stream per week already quite bit mental effort added sunday stream well basically could hit affiliate twice week add time energy sure expecting outset found seeing friend colleague random stranger subscribe support stream really wonderful feeling motivates try hard make fun stream every week shoutouts want shout noopkat awesome post streaming setup well helped get started februrary another fantastic resource getting started streaming programming twitch thanks streamer collaborated creating setup onetruecaptain jarsonmar mdlayher itsjayphillz occupypaulst sartak thanks much everyone joined stream watch chat follow jeer subscribe channel great motivator support mean lot obviously fun without special thanks subscriber thanks amruta charlie justin paul sean reviewing post finally thanks becca rohrer putting yelling computer shared office room hour hour twice week especially quarantine must extremely annoying thank gracious tolerance support hobby mine love
44,Lobsters,education,Education,Visualizing and Understanding JPEG Format,https://github.com/corkami/formats/blob/master/image/jpeg.md,visualizing understanding jpeg format,jpeg jaypeg reference structure nonzero exception parameterless marker magic signature terminator entropycoded segment file start diagram rgb jpeg pdf download segment marker jpeg itu iso iec jpeg jpegls marker table cx dx ex fx motionjpeg quicktime file format trick multiple scan progression control,jpeg jaypeg jpeg joint photographic expert group image encoding jfif jpeg file interchange format file format storage reference official specification source tool source structure could simple structure nt exception jpeg file sequence typelengthvalue chunk called segment xff marker c length value length c type defined marker byte ff nonzero byte length big endian byte cover size whole segment length length cover length marker also mean segment byte long nonzero byte rule important data encoding would output ff byte literal encoded express ff byte data segment marker exception exception tlv structure jpeg overall structure scan segment ec possible right scan parameterless marker type marker parameterless length value marker magic signature offset called start image soi ff terminator end file called end image eoi ff restart marker ff optional indicator middle ec data entropycoded segment start scan properly defined tlvsegment right entropycoded segment start nt follow similar convention despite segment name likely enable ec grow size beyond usual byte limit represent file data fair see jfif format misleading wellstructured chunk unclear huge ec blob middle length unknown advance defined file way get length either decode fastforward scan forward ff byte restart marker followed data ff followed continue file start jpeg file start ff ff j f f lead following wrong assumption signature ff ff offset jfif offset read start image marker ff signature enforced offset segment application marker encoded ff length encoded data signature rest chunk little interest many jpegs nt ff segment offset exif information start like ff ff xx yy e x f diagram rgb jpeg dissected made segment soi dqt so dht so ec eoi observation signature way short human readable default header nt contain typical information dimension colorspace actually make optional quality quantization table unoptimized jfif structure pdf download official specification abbreviated format several jpgs transmitted without resharing header implemented knowledge segment marker jpeg reserved reserved tem temporary marker arithmetic coding resn reserved jpeg defined itu iso iec frame type supported libjpeg start frame baseline jpeg start frame extended sequential huffman start frame progressive huffman start frame lossless huffman libjpegunsupported see dht start frame differential sequential huffman libjpegunsupported start frame differential progressive huffman libjpegunsupported start frame differential lossless huffman libjpegunsupported see jpg start frame extended sequential arithmetic ca start frame progressive arithmetic cb start frame lossless arithmetic libjpegunsupported cc see dac cd start frame differential sequential arithmetic libjpegunsupported ce start frame differential progressive arithmetic libjpegunsupported cf start frame differential lossless arithmetic libjpegunsupported others jpg reserved jpeg extension libjpegunsupported dht define huffman table cc dac define arithmetic coding conditioning libjpegskipped restart marker parameterless scan data restart marker restart marker restart marker restart marker restart marker restart marker restart marker restart marker delimeters soi start image parameterless eoi end image parameterless da so start scan db dqt define quantization table dc dnl define number line libjpegskipped dd dri define restart interval de dhp define hierarchical progression df exp expand reference component fe com extension data comment jpeg extension itu iso iec application segment application segment jfif len jfxx len avi mjpeg application segment exifxmpxap application segment flashpix icc application segment kodak application segment flashpix application segment ricoh application segment gopro application segment pentaxqualcomm application segment spiff application segment mediajukebox ea application segment photostudio eb application segment hdr ec application segment photoshop ducky save web ed application segment photoshop save ee application segment adobe length ef application segment graphicconverter extension data section extension data libjpegunsupported extension data libjpegunknown extension data libjpegunknown extension data libjpegunknown extension data libjpegunknown extension data libjpegunknown extension data libjpegunknown see see lse extension data libjpegunknown fa extension data libjpegunknown fb extension data libjpegunknown fc extension data libjpegunknown fd extension data libjpegunsupported jpegls lossless start frame lse extension parameter defined iec jpeg core part file start atombox structure like typical ftyp atom eventually contains box length end file contains jfif segmentmarkers structure delimiters soc start codestream sot start tile sod start eoc end codestream overlap eoi fixed information segment siz image tile size functional segment cod coding style default coc coding style component rgn region interest qcd quantization default qcc quantization component poc progression order change pointer segment tlm tilepart length plm packet length main header plt packet length tilepart header ppm packed packet header main header ppt packed packet header tilepart header bitstream internal marker segment sop start packet eph end packet header informational segment crg component registration com comment cbd component bit depth definition mct multiple component transform mcc multiple component collection mco multiple component transformation ordering part secure jpeg sec secured codestream insec insecured codestream part jpeg wireless epc error protection capability epb error protection block esd error sensitivity descriptor red residual error descriptor marker table xa xb xc xd xe xf nul tem siz cod coc tlm plm plt qcd qcc rgn poc ppm ppt crg com sec epb esd epc red sot sop eph sod insec cx dht jpg dac dx soi eoieoc so dqt dnl dri dhp exp ex fx lse com motionjpeg quicktime file format real standard variant pure concatenation jpg image right eoi come new soi next frame see ffmpeg mjpeg codec motionjpeg real jfif start like jfif image ff mjpg tag standard jfif strucure marker ec motionjpeg b jfif start directly mjpg marker jfif marker various segment since mjpg header contains pointer quantization table huffman table start frame start scan ec data stuffed trick appx segment enforced offset despite specification even required lossless storage make jpeg store data losslessly use grayscale quality either width eight pixel duplicate padded data time jpeg image stored block split scan ec easily bigger comment segment limited store big jpeg comment split scan making jpeg progressive using custom scan via jpegtran multiple scan progression control
45,Lobsters,education,Education,The Pyret Code; or A Rationale for the Pyret Programming Language,http://pyret.org/pyret-code/index.html,pyret code rationale pyret programming language,pyret code rationale pyret programming language use java python racket ocaml haskell journal paper drscheme whalesong pyret ever fullfledged programming language bootstrapping phase lot kind way educational philosophy influence language example testing equality primitive pyret also research project paul graham next model come board bootstrap project join u filename suffix pirate supposedly said sing skull logo name bonny,pyret code rationale pyret programming language need better language introductory computing good introductory language make good compromise expressiveness performance simplicity featurerichness pyret evolving experiment space use java python racket ocaml haskell one enduring lesson racket project fullblown generalpurpose programming language particularly appropriate introductory education time language grows useful building largescale system tends accumulated many wart odd corner complex feature trip student journal paper drscheme old name drracket explains detail respect closest fellow traveler u pyreteers racketeer see work fact first version pyret merely lang racket nevertheless pyret represents departure racket near future least several reason wanted experiment syntax much many u love parenthesis fear racket always bump acceptance threshold due syntax delighted see growing adoption industry language like racket clojure maybe day parenphobia academic far hidebound industrial programmer wanted build really great runtime system web browser going racket whalesong proved nonstarter term performance racket many feature make efficient implementation today javascript hard building native javascript implementation option could see time technology change could change though pedagogy draw similar racketeer also diverges way reflecting somewhat different background preference team pyret embodies educational philosophy felt could easily experiment cleanslate design keep fitting work constraint racket ultimately racket lang facility though designed create new great prototyping ground quite enough support language creation process scale pyret need strong web runtime system also meant get enough racket ecosystem nevertheless represents state system today someday two grew closer together many u would rejoice pyret ever fullfledged programming language yes first pyret much powerful might realize pyret already fullyfledged enough selfhost compiler nontrivial realistic challenge mean run pyret browser load javascript code implement pyrettojavascript compiler ie compiles pyret type javascript run browser compiler produced pyrettojavascript compiler compiling pyrettojavascript compiler take look compiler bootstrapping phase get sense sophistication second underneath pyret powerful runtime system based decade research see user language point many language expose crippling limitation javascript runtime user eg halt longrunning computation yield control event loop etc language effectively let medium become part message whereas believe programmer especially earlystage student programmer confront complexity irrelevant often significantly interfere material trying learn imagine language said love give function call machine instruction set contain sorry yet equivalent come giving control computation top javascript contrast pyret uncompromising third want teach mediarich curriculum actually need pretty fullfeatured language least hood instance pyret builtin support reactive programming requires much sophisticated runtime system corresponding language feature one offer punted javascript support essentially eventloops firstclass entity language emphasized feature talking pyret focusing instead curriculum support broadly view building awesome teaching language useful design discipline necessarily entail feature typically expected mature language building language constantly confronted question next whether language designer therefore need mental framework guide choice might awesome language sharedmemory concurrency others might awesome language writing scientific computation concisely u awesome teaching language whenever confronted design implementation choice first ask would play specific context ask would impact longterm goal yet find actual contradiction two certainly reordered priority lot kind right focused introductory programming education highschool collegiate level often called roughly first year college pyret actively used everything highschool upperlevel collegiate course giving u tight feedback loop course even setting difference opinion need taught believe inheritance important taught early first semester utterly reject belief someone wisely said programming scale point teaching class inheritance student yet done anything interesting enough encapsulate inherit gone far start teaching turing machine unsurprisingly reject view well take dogmatic stance exactly early state type introduced pyret usual stateful operation discussed length eventually decided introduction programming must teach state pyret also optional annotation different instructor depending preference introduce type different time way educational philosophy influence language pyret driven design program htdp philosophy programming education one could almost view language designed make teaching htdp comfortable however also curricular idea extend run parallel htdp steadily writing programming programming language papl papl exclusively us pyret slowly turning definitive book teaching central idea include language offer rich set value instance image primitive value fully supported environment improves teaching several thing imagebased composition exercise often far interesting composition number animation game language offer syntactic support much possible htdp design recipe pyret offer explicit support template rethinking pedagogy template step design recipe support includes good data definition primitive including expression invariant therefore pyret support refinement currently checked dynamically future version may add static support highest priority particular allowing algebraic datatypes also object pyret offer significant flexibility expressiveness student able easily write example precursor writing code regard pyret borrows believe syntactically improves upon racket checkexpect family operation example testing student easily able escalate simple example sophisticated testing writing test oracle equality subtle language respect nuance student must understand meaning equality consequence especially regard observation presence state therefore pyret carefully developed equality primitive pyret also research project yes yes broadly speaking view much research effort specific novel goal mind described elsewhere document finding good solution achieve goal require innovation essence research research curricular side though may require language innovation indeed much possible want pyret remain language easy approach understand however also narrow meaning academia sense publishing lot paper ungoal almost antigoal every paper take month write month spending language curriculum view poor time tradeoff write paper sometime immediate focus shipping code textbook material immediate value student educator mean get technical innovation fine consider good tradeoff ultimately though research requires new thing want new thing sake long inspired quote paul graham difference design research seems question new versus good design new good research good new u design essential research optional actively dogfood pyret teacher actively teaching programmer actively building thing give u ongoing feedback point friction necessary done continue research publishing academic paper rather putting work educationally continue take back seat next currently hard work three important feature support static typing pyret conventional type system tagged union type checker resulting straightforward type error without complication associated type inference algorithm carefully designed pyret always typeable earlier type system good enough pretty happy one going table critical type storing realworld data pyret adding linguistic library support working effectively table papl use expose student thinking early model interactive computation based model currently revising updating way help better serve new educational program like stay abreast development get involved discussion please come board educational side pyret already used bootstrap project developing three new curriculum bootstrap curriculum corresponding standard introduction computer science several twist based pedagogy material c principle curriculum new u college board advanced placement exam physicsmodeling curriculum help teach student physic modeling medium programming like talk join u filename suffix arr pirate supposedly said lot sometimes sing note must pronounce guttural sound mistaken file written r programming language consider swashing buckler speak skull logo name yes bonny look closer lambda
46,Lobsters,education,Education,A Deep Introduction to JIT Compilers: JITs are not very Just-in-time,https://carolchen.me/blog/jits-intro/,deep introduction jit compiler jits justintime,jit compiler implemented fast julia pypy luajit graal chris jit compiler implemented fast julia pypy luajit graal programming language implemented jit julia jit compiler justintime jit take two pogo warm,familiar jits generally work get title referring recommend skimming going straight reading jit compiler implemented fast julia pypy luajit graal mentor chris took jit told compiler byte byte lowlevel scary actually fairly true fun learn compiler internals often useful programmer everywhere blog post give background programming language implemented jits work introduce implementation detail julia language though wo nt talk specific implementation detail optimization made traditional jits check jit compiler implemented fast julia pypy luajit graal read metatracing implemented graal support c extension relationship jits llvm programming language implemented run program either interpreted compiled way compilerinterpreter sometimes referred implementation language one language many implementation may heard thing like python interpreted really mean reference standarddefault implementation python interpreter python language specification cpython interpreter implementation python interpreter program directly executes code wellknown interpreter usually written c ruby python php written c function loosely model interpreter might work func interpret code string code print hello world print hello world else code x x print x variablex variablex print x compiler program translates code language another language though usually refers destination language machine code example compiled language c go rust func compile code string byte compiledcode getmachinecode code writetoexecutable compiledcode difference compiled interpreted language actually much nuanced c go rust clearly compiled output machine code file understood natively computer compile run step fully distinct however compiler translate target language sometimes called transpiling java example twostep implementation first compiling java source bytecode intermediate representation ir bytecode jit compiled involves interpretation python ruby also execute two step despite known interpreted language reference implementation actually compile source bytecode may seen pyc file anymore contain python bytecode bytecode interpreted virtual machine interpreter use bytecode programmer tend care le compile time creating bytecode language allows engineer specify bytecode efficient interpret possible bytecode language check syntax execution though could technically pas starting interpreter example show would want check syntax runtime sleep bad syntax beep boop beep boop another important note interpreted language typically slower various reason obvious executed higher level language overhead execution time main reason dynamicness language tend implement mean need many extra instruction decide next route data people still choose build interpreter compiler easier build suited handle thing like dynamic typing scope etc though could build compiler feature jit jit compiler nt compile code aheadoftime aot still compiles source code machine code therefore interpreter jits compile code runtime program executing give jits flexibility dynamic language feature maintaining speed optimized machine code output jitcompiling c would make slower adding compilation time execution time jitcompiling python would fast compilation executing machine code often faster interpreting especially since jit need write file disk writing expensive memoryramregister writing fast jits also improve speed able optimize information available runtime julia jit compiler justintime common theme compiled language statically typed mean programmer creates us value telling computer type information guaranteed compile time julia dynamically typed internally julia much closer statically typed function multiply x x end example julia function could used multiply integer float vector string etc julia allows operator overloading compiling machine code case productive variety reason wanted julia compiled language idiomatic programming mean function probably used combination type nt want compile something nt use yet since jitty real term code multiply julia compile function multiplies integer wrote multiply alreadycompiled code used added multiply another version function compiled observe compilation codellvm multiply generates llvm bitcode quite machine code lowerlevel intermediate representation define top within mul ret multiply see complicated get compile even one function aot compiled julia optimization made reduce combination would live compiled code even one used along control flow delegate define double double top within within promote within promote within convert within sitofp double within fmul double ret double general strategy assume type compilebehave based called type inferencing julia mildly us example lot compiler optimization made though none specific jits julia may better described lazy aot compiler simplicity kind jitting make easy julia also supply aot compilation also help julia benchmark well definitely tier language like python comparable c cite number always nuanced nt want get jit take two julia actually jittiest jit discus interesting jit actually compiles code right code need used time jits however pypy java j engine actually compiling code justintime compiling optimal code optimal time case time actually never case compilation occurs vast majority case compilation nt occur source code executed numerous time jit stay interpreter overhead compilation high valuable aspect play generating optimal code assembly instruction created equal compiler put lot effort generating welloptimized machine code usually possible human write better assembly compiler though would take fairly smart knowledgeable human compiler dynamically analyze code mean thing like knowing possible range integer key map thing computer could know partially executing program jit compiler actually thing interprets code first gather data execution thus jits expensive interpret add compilation time execution time make highly optimised compiled code timing compilation also dependent whether jit gathered enough valuable information cool part jits sort lying said jit implementation c could faster existing compiled implementation would feasible try jitcompiling c way described strict superset compiling language thus logically impossible compile code fast enough make compileprofileinterpreting time jit compiled c similarly julia statically compile function called would impossible make faster compiledc compiletime nonnegative generated machine code essentially pogo though jitting c feasible one find middle ground profile guided optimization pgo cutely uncommonly pronounced pogo instead profiling executing compile program pgo profiling run program recompile original program profiled data passed effective reducing compiledcode size improving branch prediction warm jits concept warming intepretation profiling time expensive jits start executing program slowly work towards peak performance jits interpreted counterpart like pypy jit without warmup performs much worse beginning execution due overhead profiling also reason jits consume signifcantly memory warmup add complexity measuring efficiency jit fine measuring performance generating mandelbrot set becomes painful serving web application first n request painfully slow complicated fact performance strictly increase pypy decides need compile many thing jits compiling function might slowdown middle also make benchmark result ambiguous check jitted language given time warmup also want know took unseemly amount time warmup optimizing compiled code warmup speed unfortunately zerosum least smallsum nature try get code compile sooner le data available compiled code efficient peak performance lower aiming higher peak performance course often mean higher profiling cost java javascript engine example jits put really good care warmup time may find language built academic us monstrous warmup time favour snazzy peak performance talk implementation tracing jits metatracing jits specifically luajit pypy introduces graalvm hotspot go deeper javascript engine go tiering sea node deoptimization inlining
47,Lobsters,education,Education,The true cost of knowledge,https://blog.royalsloth.eu/posts/the-true-cost-of-knowledge/,true cost knowledge,expensive knowledge research knowledge come spoon fed knowledge experience magic sauce book read next world eye sloth mastery note writing system software code comment http,ago pulled discussion speed magic optimization particular container within standard library coworker programming language choice claiming special container somehow magically performs better normal array used adding number every element within containerfor reason corporate world always find piece wisdom floating around standard library treated kind magic box performs order magnitude better whatever could ever program yourselfi believe witchcraft though memory access memory access unless figure efficient algorithm performing operation magic container going perform faster convinced person write actual program compare magic container every day array lo behold favorite optimization technique could summed doubt use loop iterate array proved right thing compiled le thing array solution performed slightly better averageit go show software industry excels regurgitating myth instead sitting thinking really hard problem hand partially blame culture pervasive money making industry like spoon feed scholar random bit trivia instead actually making think also know name higher educationwhen know nothing spoon fed knowledge great way become aware vast field around soon gather enough knowledge dangerous start realize gellmann amnesia effect real thing world broken since young people spoon fed knowledge tremendously large chunk life prone simply accept random piece knowledge found random blog fact rule live bit knowledge accumulated moving forward osmosis get point people believe voodoo computer operation somehow inaccessible mere mortalshow expensive knowledge live relatively well organized society knowledge actually free least priced point could consider freeformal education country free quite free pay relatively high tax free way anyone could attending school regardless income social status university lecture also public free attend anyone street usually happen still option someone willing listen learn something newdespite spending year school really learn much one thing learning internals specific thing interested whereas abstract learning general stuff interesting introduced new concept learned great deal math never used later pretty much brain made teflon whatever threw stickthe main problem see modern formal education trying compact ever growing knowledge chunk memorize repeat asked keep busy parent able work treat brain hard drive dumping fact reality selfprogrammable high performance cpu infinite potential preserving data rather poorly case wondering wordy description mean brain far far away dumping ground fact excels making abstract connection general never seen type problem solvingas richard hamming put excellent research talk inclined believe longhaul book leave essential important book tell everything want know everything want know much penguin usual reply want know essencerichard hamminglearning fact date somebody discovered something useful world knowledge click away good occasion mingle impress audience gala table mostly taking away brain space could used solving important problem mere memorization amount knowledge absolutely exploded past year possibly cram junk tiny brain compartmentof course statement enrage people land free spent thousand education time thing better explained elsewhere pretty good math teacher find thousand time better lecture internet made stranger educating others goodness heart best freewhere knowledge come thing accumulated year came mildly amusing idea call internet english class school actually learned english playing online game mindlessly browsing internet nowadays mostly communicating english despite native speaker knew wasting time internet would useful one day certainly notbut learn computer stuff learned program via shitty online tutorial building useless website building crappy website mind text editor mind blowing experiencei learned manage linux server tinkering old crappy laptop endlessly broken linux system also pushed useless website played system website appeared browseri learned rest reading book particular topic interested later talking coworkersthe actual knowledge came spending thousand hour front computer trying thing playing already discovered concept may well formulate insight great work spoon fed knowledge experience magic saucethe parameter equation also listed chronological order appear throughout life spoon fed knowledge obtained formal education reading book online tutorial picking brain experienced peopleexperience given enough spoon fed knowledge plenty hour knowledge turned experience suddenly mildly aware work based past scarsmagic sauce mix consists thought experience inspiration brewed year might well fit realm creativityyou free throw insanity mix make popwhich book read next writing question search engine choice provide hundred thousand result list top book x help career change perspective forever list accompanied tiny note telling author associated largebookstore buying link somehow help run blog order publish useful listsi checked library dead tree item found technical book bought read multiple time past year pretty good extremely valuable career reading deep dive topic interested great investment definitely read much possiblestill really suggest read book bought great investment point one day reach level realize knowledge book apply certain point sticking whatever book author say actually bad idea specific casesometimes even realize book author preaching actually harmful fact hurting entire industry poisoning bright mind false idea like advice well known person b sell book preaching comment harmful big code smellthe advice totally fine yes definitely structure program way code self explanatory one day happen work one multi million line long codebases people kept advice close heart year original developer long gone nobody know damn thing work certain architectural decision made nothing make sense documentation reflect current state code sure clean none smelly little commentsthe zealot argue people misunderstood book pushed people towards improving structure program opposed writing lengthy comment result naturally exact opposite people hesitant write comment writing comment become big bad wolf afraid big bad wolfthe best code ever written date contains lot comment fact particular codebase consists comment feedback got current maintainer mostly easy jump update business logic unknown possible future pitfall explained right comparison math software world really well defined thing math long equation full weird hieroglyph long put right stuff get right stuff everything exactly defined proven misconception thing behave unless trying divide zero bet software world feel closer creative writing sure rule best practice regard hardware behaves come actually defining structure program longer well defined thing maybe write like maybe know end boil experience personal preference author still decade long debate comment tab v space nonsensedo consider particular book bad book yes definitely helpful read first time made think structure program structure affect people team still consider holy bible programming type book everyone read stick whatever written lot fluff bad advice conflict example presented long treat another opinion piece tool toolbox finebut truly care craft special book mind called world eye sloth happen selling right buy mere really call professional without reading one sureok let get derailed bashing book seller ah yes cost knowledge much think book actually cost given average book programming cost would even live country inflated engineering salary great bargain gaining amount experience would cost year full time programming hand gain couple year reading amount book take together practicing thing readin reality actual cost book even lower best book could read free author website library still thing pull pirate hat closet actually get free either way fund please compensate author hard work writing lengthy book article like one hard time consumingin essence section even right formal education odds make fine modern world knowledge essentially free waiting picked pay year study masteryif knowledge free weird office debate time educated people believe magic library programming language choice rarely anybody go first principle really think stuff happens hood loop iterates array happens loop iterates linked list iterates magic array like container know guess passing knowledge teacher scholar hard despite technological advance quite figure yet passing knowledge hard teacher poor job scholar willing listen prefer live world magic library transforming ever growing knowledge actual understanding tremendous amount hard work usually take year really get master subject top software industry riddled used ol vacuum cleaner salesman trying get part pie keep making beginner friendly javascript course promising turn master craftsman matter hoursit crowded bar everybody yelling nobody anything value say filtering noise hard take year able recognize signal noiseso one become master field want make better sushi thing improving bit bit always yearning achieve continue climb trying reach top nobody know top iseven age decade work think achieved perfectionjiro sushi master age live learnnotes gellmann amnesia phenomenon expert believing news article topic outside field expertise even acknowledging article written publication within expert field expertise errorridden full misunderstandinga younger programming problem searched around solution first link great site called stackoverflow filled great solution problem amazingone day woke realized answer site actually plain wrong answer posted solve problem asker never stating pitfall approach know lot particular topic even realize copying flawed approach production codeuntil one day program crashing due running memory oops copying chunk memory multiple time solution someone provided stackoverflow know better time accepted solution worked asker tiny problem bit as slightly larger one study computer science maybe much useful might want read depth blog post writing system software code comment creator redis talking actual knowledge paper knowledge get finishing certain course degree profession simply work without finishing course obtaining paper software industry one say take year hour become proficient subject see http
48,Lobsters,education,Education,Looset - A promise to improve documentation and code knowledge,https://www.google.com/url?q=https://youtu.be/ktVpk1UukKA&sa=D&ust=1593688146969000&usg=AFQjCNH-hzZgVz-r-OetlQd-EIyQiXlxrA,looset promise improve documentation code knowledge,,
49,Lobsters,education,Education,Quantum Game 2,https://github.com/Quantum-Game/quantum-game-2,quantum game,quantum game quantumgameio faceboook medium piotr migdał philippe cochin chiara decaroli klem jankiewicz kuba strebeyko pawel janicki center quantum technology national university singapore quantum tensor braketvue quantum encyclopedia staredquantumgame installation yarn contribution issue issue,quantum game puzzle game photon superposition quantum measurement right browser true quantum mechanic underneath follow update twitter quantumgameio faceboook read blog post medium quantum game currently developed dr piotr migdał philippe cochin chiara decaroli klem jankiewicz kuba strebeyko pawel janicki others version game funded center quantum technology national university singapore current version us subcomponents quantum tensor javascript typescript package sparse tensor operation complex number npm package created game made way reusable braketvue quantum state operator visualizer vuejs quantum encyclopedia encyclopedia element concept quantum physic play old version source staredquantumgame installation need yarn installed cloning install dependency run contribution opensource project appreciate contribution issue please report error using issue please explicit wrong desired behavior screenshots help lot
50,Lobsters,education,Education,Wheel of Fortune for videocalls,https://blog.rebased.pl/2020/06/16/wheel-of-fortune.html,wheel fortune videocalls,wheel fortune github page ob setting scene le pink please black unsplash face krtek hiding background streaming virtual camera plugin module jitsi electron app meetjitsi gameplay project page twittercomrebased,rebased invested remote work year still keeping small office three big polish city people want work office meet coworkers good coffee local roastery situation meant working office highly discouraged fell back working home remote location away big city order least bit face time introduced daily online coffee call halfhour slot every day anyone join chat listen talking coping read saw spare time eventually get stale despite best effort inspired recurring quiz youtube occasionally watch cobbled together quick prototype wheel fortune game play call decided rewrite properly elm positive feedback comprehensive readme project github page detailing set video call platform choice let quick look set linux machine ob jitsi videocall platform ob ob open broadcaster studio excellent opensource program video recording especially live streaming install package manager may named obsstudio running first time pop autoconfiguration wizard either dismiss configure ob streaming using whatever setting detects really relevant afterwards go settingsvideo set output resolution higher aspect ratio best compatibility video call software return main interface see something similar panel layout configurable reorganized presentation window similar setting scene start launching wheel fortune browser choice separate window switch tab mistakenly enable developer tool undock separate window player see setting new puzzle problem also worked around ob scene switching devtools window foolproof using firefox screen top tab bar use vertical tab hidden single tab open hideous magenta background reason get rid return ob click plus button source panel select window capture exact name source depends o dialog follows give source name click ok next window allow select specific window set basic cropping choose dedicated browser window crop ui confirm ok scene look something like red frame indicate scene element movable resizable scale reposition quickly scale fill screen click press ctrlf le pink please next right click either scene element name source window select filter new window click plus select chroma key accept default name see effect control slider change key color type magenta move similarity dial back color correct minimal color bleeding value seems work may also want change smoothness closing window see game interface black background black launch favourite browser find nice background image download return ob add image source new picture default added top layer obscuring interface rearrange source list dragging selecting scene element using caret button want image bottom list chosen freely usable photo walt disney concert hall la unsplash additionally locked source using padlock icon accidentally moving longer possible face one thing still missing host video feed source panel add video capture source select webcam reorder position image somewhere obscure anything add crop filter show little surroundings possible next image show hiding behind krtek plushie positioned corner behind wheel graphic hiding background notice green background behind screenshot green screen easily buy photography equipment vendor ob offer option remove static background choice applying another chroma key filter remove green background integrate image notice discoloration plushie hat due lighting room uneven unlike real photo studio chroma key filter suffering completes scene setup instruction let move streaming part streaming exactly streaming close setting broadcast popular streaming platform could add server info click start streaming however working video chat slightly different goal constraint discus jitsi similar quirk restriction one thing taken ob camera present videocall enter virtual camera virtual camera virtual camera piece software usable application like real webcam take video input another source continuing linux need two piece one ob plugin either install package manager compile manually way scope second piece linux kernel module also likely available package manager load module first ensure use newly created device adding video group setting permission bit way scope install plugin restart ob use new option tool start feeding virtual camera device path must match module created video format matter click start make virtual camera film scene setup ob older version used crash ob clicking stop seems longer case may jitsi linux use jitsi meet electron app want app using browser version also acceptable jitsi special requirement available three major operating system use today launch join start room jitsi videobridge workbase server instance use freely available meetjitsi server video feed automatically pick available camera system virtual cam set use dropdown attached camera button find enable worry preview picture appears cropped like participant see full videocall program crop video optimized case single face somewhere center enable microphone interact browser devtools window control game invite people use console command add player list set puzzle start playing gameplay rule keybindings described detail project page quick recap enter spin letter reveal present player turn space move next player manually first time presented morning coffee call lot surprised face given rebased programmer experienced seniorlevels every one able implement really something version played day polished one available github quick javascript prototype cobbled weekend want release due poor quality later rewrite elm gave rise currently published version project still bit rough around edge could use work extensive testing go ahead set fun let u know github issue break like see added give u shout twittercomrebased set played team
51,Lobsters,education,Education,"Create wonderful things, be good, have fun",https://www.charlieharrington.com/create-wonderful-things-be-good-have-fun,create wonderful thing good fun,make klutz press book good learning stuff juggling complete klutz klutz book spiralbound new old apple iie klutz book come required material jon siracusan klutz book hilarious art klutz book embrace beginner mindset behind klutz press wikipedia john cassidy bookit wayback machine mindstorms book note create wonderful thing good fun,create wonderful thing good fun credo klutz press important book publisher childhood summer hobbes ol buddy let going exploring make klutz press book good learning stuff heard klutz likely seen debut juggling complete klutz highly suggest seeking copy keep mind book juggling complete klutz amazing attribute spiralbound hilarious drawing come attached three reallife bean bag book superpower book klutzworthy pun day sister owned devoured treasured klutz title kid nothing better getting new klutz book ok maybe super nintendo game unlike replay super mario rpg klutz book require nostaglia goggles think magic klutz book spiralbound book learning stuff able open stay flat old computer manual computer like commodore commodore new old apple iie knew much manual spiralbound spellbinding nt see spiralbound book without knowing much printing cost imagine expensive also look slightly worse bookshelf especially going grammable color pattern look nt klutz book come required material little paper football came table top football guide classic lunchroom sport revered grail mine remember dad took sheetrock knife made small incision plastic case attached book football could slid explicit rule football must either case used game much like inexorable jon siracusan rule airpods obey airpods instantly lost forever side note people love making small cut plastic case thing easily return pristine condition nt understand people like wripping case shred instantly anyway back klutz book including juggling bean bag yarn friendship bracelet real harmonica klutz press book gave everything needed get hand dirty active learning something like playing learning etcetera klutz book hilarious art look paper airplane stuck teacher hair klutz particular art direction spoke child goofy people guide made feel like okay klutz brings important reason klutz book special klutz book embrace beginner mindset beginner mind many possibility expert mind shunryū suzuki everyone start klutz matter mean okay make mistake even funny fact funny fun learn new thing klutz making mistake fun path wonderful thing behind klutz press according wikipedia klutz press founded three friend palo alto apocryphal story john cassidy recent stanford grad working high school teacher brought bucket tennis ball handwritten instruction juggling remedial reading class laugh learning genuine reading genuine juggling ensued inspired cassidy buddy stanford publish juggling complete klutz new company klutz press juggling complete klutz sold million copy googling klutz press somewhat challenging day klutz acquired company called nelvana million klutz became subsidiary scholastic inc latter merger good match book scholastic book fair also rank heavily childhood memory learning love reading company feel comfortable owning klutz press pizza hut thanks delicious bookit reading program brought dozen delicious cheese personal pan pizza parent could nt decide hated loved pizza hut nowadays klutzcom redirects scholastic website unclear outofprint available voluminous klutz catalog find genuine klutz book kit snag quickly luckily able find good interview cassidy wayback machine klutz height power influence kid mind choice quote cassidy company culture klutz press term laid back take back seat nobody teaching style talk kid fun math like talking two different side universe climb mountain nothing ca nt tackle kid nt learn much listening reading need get elbowdeep subject touch feel smell reminds seymour paypert mindstorms book work logo turtle machine check note book article explains bit business klutz book sell le low price book accompanying stuff viewed book toysnovelties retailer bookseller interesting carring large printing run copy v usual child book importantly final word cassidy hang spoon nose cassidy boast take lot pride create wonderful thing good fun wanted write decided adopt credo life motto learned much klutz press kid still learning thank john cassidy team making wonderful book juggling finally starting get pretty good always klutz
52,Lobsters,education,Education,Slingcode is a personal computing platform in a single html file,https://slingcode.net/,slingcode personal computing platform single html file,personal computing platform single html file make run share web apps web browser add home screen share apps peertopeer private video screencasts nostalgia hack contribute clojurescript check codebase inspiration situated software trusted third party security hole wikipedia ikutaro kakehashi make slc instead credit crispin copyright licensetxt,slingcode personal computing platform single html fileyou make run share web apps ityou nt need complicated tool use web browseryou nt need server hosting ssl certificate run web appsyou put slingcode web site run usb stick laptop phone nt need internet connection workyou add home screen phone browser easily access library program goyou share apps peertopeer webtorrentit private share chooseor rightclick slingcodehtml save link download html file onto computervideovideo find screencasts hereaboutthere server component slingcode apps stored web browser local storage completely offline move apps browser using peertopeer send receive feature also export app zip file import another slingcode instance upload app onto regular web hosting deploy online computer software data nostalgiaremember computer fun kid could type basic listing magazine make magic light sound computer belonged could understand software running iti trying recreate magic slingcode get rid tooling dependency hosting problem make coding fun help bridge gap idea running codei built teach kid code without complex setup need day trying recreate simple environment learned code mum apple iie back chris made thisyou find online hack contributeslingcode built clojurescript get started contributing slingcode check codebase run make need node java installedinspiration situated software software designed particular social situation context small piece loosely joined way making software situated software nt technological strategy much attitude closeness fit software group user refusal embrace scale generality completeness unqualified virtue clay shirky situated software original vision many personal computing pioneer pc intended personal property owner would total control understanding software running pc including ability copy bit pc software complexity internet connectivity unresolved incentive mismatch software publisher user pc owner substantially eroded reality personal computer personal property nick szabo trusted third party security hole trick fix problem rather problem want bram cohen kakehashi musical training wanted musical instrument accessible professional well amateur like also wanted inexpensive intuitive small simple wikipedia ikutaro kakehashi alternative mvp simple lovable complete slc skateboard slc product faster walking simple many people love complete product need addition fun practical jason cohen make slc insteadcreditsthanks crispin joel testing giving brilliant feedback early versionssome technology library slingcode us clojurescript clojurecodemirror web based code editor componentreact reagent rendering user interfacejszip wrangling zip fileswebtorrent peertopeer file transferniceware turning hex phrasesbugout peertopeer communication wrote library tweetnacljs managing base addresseslocalforage browser side storagezxing qr code scanningmimetypes managing content typesurlsearchparams managing query stringsshadowcljs making compilation phase simplenpm managing dependenciesfontawesome iconsthanks copyrightslingcode copyright chris mccormick mit software license see licensetxt detail
53,Lobsters,education,Education,Teaching Code Review,http://third-bit.com/2020/04/06/teaching-code-review.html,teaching code review,style guide tidyverse style guide,taught code review time computer science student yet data scientist method used give learner halfpage program short checklist point thing look minute go code mark number checklist line violates rule go class compare evaluation mine help understand interpret point checklist repeat exercise another piece code checklist hopefully closer agreement evaluation mine seen interpret checklist item give homework exercise larger piece code full page maybe longer longer checklist item item checklist come straight source like python style guide tidyverse style guide others require higherlevel thinking eg function split function combined example short python program supposed count stop word list string stop def count ln n range len ln line ln stuff linesplit word stuff print word j stopscount word j true n n return n import sys line sysstdinreadlines print number line len line n count line print number n expect learner say use two blank line function definition line line using true false redundant x true x x false x import line top file commentedout print statement removed variable ln j given clearer name outer loop count loop index line list rather line latter allow u get rid variable reason store result linesplit temporary variable inner loop count use directly since set stop word global variable written upper case use increment counter n would probably also point rather reading input list line looping give count stream process line one one since might want use count program day put two line bottom handle input conditional executed script imported rather counting often word occurs list stop word stopscount turn stop word set use check word readable efficient last thing show code look like problem fixed import sys stop def count reader n line reader word linesplit word stop n return n name main n count sysstdin print number n yet learner code review checklist github seems like natural next step
54,Lobsters,education,Education,Picking a Language for Introductory CS - Why I don't like Python,http://dynamicsofprogramming.blogspot.com/2019/02/problems-with-python-for-introductory-cs.html,picking language introductory c nt like python,introduction matter covering key concept type constant many novice might understand scope private discourage bad habit dynamic typing pandasdataframexs cute trick teach right way low overhead small program hold complexity bay early error reporting ease learning language recent redmonk language ranking apl j interesting first semester assignment factor earlier post people choose python give early feedback rule broken alzhrhani et al choice trinity university,introduction purpose blog post explore issue related selection first programming language c major originally started intention raising question related rapid adoption python currently happening c department across u however decided make general score variety different language generally restrict comment language top redmonk know people used introductory programming course easily imagine people using purpose matter many factor go faculty department pick language different department educator weigh differently thing feel really important get way nt teach language sake language instead language mean tell computer want way vehicle u teach student fundamental concept really care concept tend carry across language time language technology constantly createdupdated old one tend decline usage others replace day software development polyglot activity single language dominates development landscape even popular language appear well job posting developer nt obvious pick essential student know contrast versioncontrol system git currently clear winner decision language use challenging factor considered picking language instruction short list post following ability cover important concept enforcing good practice student nt develop bad habit low overhead small program ability solve reasonable problem without introducing much complexity early error reporting make easy learn language ability write thing interesting first semester bonus point open multiplatform preferably open source one thing point specifically considering intent student intend go gain deeper knowledge programming software development computer science general interested introduction programming course terminal specialized particular application course different learning outcome vary greatly based intended audience since also think advantage teaching language occasionally mention thing would likely relevant part focus covering key concept critical remember c especially early class really want teach concept language vehicle teaching end goal nt trying teach student java python c trying teach structure logic formal grammar solve problem way experience shown scalable maintainable granted nt going get point scaling large code base maintaining software team year matter laying foundation lot concept reasonable programming language good job teaching thing like function conditional execution iteration found across language interest however concept think important teach early language equally successful type notion type significant programming language language bring foreground others force student aware part difference statically typed language dynamically typed language statically typed language make student aware type right bat dynamically typed language require little coaxing addition topic like subtyping parametric polymorphism ca nt really explained introduced dynamically typed language depending oo concept covered could significant omission difference manifest subtle way consider difference repl experience dynamically typed language like python statically typed language like scala python repl executing expression statement print produce exactly result scala repl produce different result large part scala repl show type expression response something like int nt based typing system language relates deeper decision implement repls example javascript console google chrome produce slightly different output evaluating expression printing nt show type default creator java jshell utility also made decision show type despite statically typed language jshell also different response two command python repl particularly poor decision distinguish two say particularly poor know year experience one thing student often struggle difference printing returning value useful repl help make distinction make completely clear consider following repl session python def return def print compare equivalent scala code scala def int scala int scala def println unit scala one think going help student understand difference returning value printing one constant one find significant many novice might understand language way express variable ca nt change part want say c edge use const critical good c programming c also lack immutable collection imperative language regard functional language might better pure functional language nt let student see nonconst value regard scala get high mark language instructor really explore role mutation area python completely fall making value constant python way beyond novice javascript bad introduced const scope speaking addition javascript also feel scope significant concept programming one challenging novice programmer understand language commonly used block scope exception tend scripting language created writing small program therefore simplified system like global scope function scope ecmascript committee realized really nt good thing language used develop larger program introduced let const basically replace var unfortunately python php still lack block scope python also another odd behavior default argument closely related scoping come back later private oo done early would also argue private really important concept cover visibility option helpful making member private big part allows oo simplify life large code base hide away certain detail know certain part state modified small region code practice matter le everything made immutable goal teaching concept language nt construct something make lot harder teach area javascript bad one could argue prototype based javascript always something odd duck regard teaching student javascript start going make moving language challenging term oo however newest addition javascript make feel like classbased oo language including ability declare private member python still weak notion private convention imagine student question asking something important nt language take seriously discourage bad habit firmly believe choice first programming language critical another key reason hard break bad habit unlearn thing rule applies thing programming recall high school physic teacher telling physic also experienced area programming learning experience working student learned program line numbered basic goto primary control structure even moving pascal c c college remnant style adopted basic still present many year many reader familiar following quote edsger dijkstra practically impossible teach good programming student prior exposure basic potential programmer mentally mutilated beyond hope regeneration take long time break away habit instilled learning code linenumbered basic saw close early teaching career student also learned code way think took two year finally convince style programming used good one missed lot potential learning stuck old style thing student could defend style good style result could make work challenging deal certainly nt think unique student dynamic typing area worry student picking poor habit modern programming language goto nt problem anymore many newer language nt support example student stumble across web use language feature student ca nt accidentally start using without seeing example however abusing type something student easily fall indeed language major library basically tell student okay simplest example probably heterogeneous collection dynamically typed language student assignment store multiple name age could easily set something like pat bob betty even index element name following odd index age easily make work make work hard convince style programming convention lead brittle code hard maintain likely break challenge convincing student right thing type becomes especially challenging see example library use class one behavior find particularly disturbing function dynamic language return different type based value input unfortunately nt uncommon dynamically typed language even though produce code nearly impossible maintain one example pandasdataframexs method python panda library used extensively data science statically typed language tend make clear type behavior problematic making painful done result student unlikely accident find way make work cute trick another habit nt want encourage novice programmer cute trick type solution way writing thing tend produce code hard read maintain one example jump using shortcircuit logic operator thing logic language truthy falsey value instead actual booleans example something like result functhatisfalseyonfailure defaultvalue instead using conditional expression type code hide really going us operator something clearly nt boolean logic teach right way feel already hear reader saying nt need language help enforce good style teach student thing right way enforce approach avoid bad habit unfortunately think ignores much student learn source classroom personally think good student learn source real goal set lifelong learning learning student resource probably viewed positive acknowledge happens outside control student going see probably adopt whatever language allows even nt tell popular language likely happen low overhead small program seen debate personally like language used introductory programming class low overhead small program area scripting language like python javascript shine traditional language fall java particularly horrible regard traditional hello world program involves large number keywords ca nt possibly explain student first day class would argue teaching environment like bluej greenfoot created java note love greenfoot used teaching nonmajors really prefer use language hello world read something like println hello world aspect need explaining double quote making string literal pretty much every programming language going something like also fond repls read evaluate print loop scripting language shine though even java jshell first day talk language like nothing better drop student repl let play around mentioned though repl experience created equal term teaching provide information help student understand going others also point scripting language nt language score well functional language statically typed dynamically typed variety also tend repls support style closer scripting language language like java c hold complexity bay limiting complexity nt first day hello world every practical language going advanced method dark corner language good nt force instructor introduce want complexity refer come lot form vary language concession language creator made early make language practical others advanced feature benefit professional development complicate life developer element inherent programming model language would argue another area java fall one simple example fit last point every java application requires least one usage static keyword static really challenging explain novice programmer slightly subtle example distinction primitive object type java motivation java simple java created needed primitive make language sufficiently performant sacrificed purity object model put primitive type enable program written java run faster learned smalltalk making every value object big drag performance would seriously hamper adoption wonder might also factor late adoption python slightly older java nt see broad adoption many year java become dominant language computer gotten much faster understand mean problem primitive consider issue converting double string ints java thing inevitably come nt probably either intentionally subconsciously created example avoid double x need int would use cstyle cast like int x conversion however string want int need use integerparseint conversion later semester probably teach student use java collection get explain ca nt declare list int instead list integer instructor pray student ever try create list string array generic type nt explain ca nt thing thing going come naturally going slow instructor also nt anything artifact early history language see scala also statically typed language compiles jvm handle situation conversion integer done xtoint stoint reason never trouble explaining student student chooses make array list int nt problem either interestingly scala without sacrificing speed either reason scala compiler smarter compiles thing primitive whenever implementation detail never come would matter get point trying highperformance computing feel c also fall area exposing complexity early mostly area memory model memory handling really ca nt push c far going start discussing reference pointer memory handling thing student really need learn understand graduate personally nt want take time course early error reporting one fundamental rule education early feedback good true software development well whether talking finding change need made product building error code earlier find thing le cost deal believe applies student find error student benefit error message get early opposed finding something wrong later one thing like discus different type error tell hierarchy syntax runtime logic error point syntax error generally preferred get nice error message telling problem logic error worst get little assistance finding error developer really prefer language programming style turn many error possible syntax error produce logic error possible another place dynamically typed language like javascript python score poorly produce syntax error error student going see runtime logic error wo nt pop run code use input cause offending path executed javascript particularly bad trying get thing work nt even get many runtime error lot mistake become logic error professional environment developer deal building suite unit test testing something talk cover testable code unit testing framework help student proper development language lack syntax error becomes something introduces extra unnecessary complexity early ease learning language back java gained momentum question language fresh grad going use first job simple c c time c nt diverged nearly much c today department could easily give student deep coverage language likely use first job even rise java degree could structured introduce student every language significant usage look recent redmonk language ranking feel like student could easily use almost top language first job indeed graduate working language well top job come programming live polyglot world nt even trying teach student every language might use first job many possibility instead need strive lay foundation student learn diverse set language enable pick new language quickly personally think would helpful language learn make easier pick language going exposed program instead harder instructor later course able draw parallel language feature language used next language student learn definitely facilitate learning property language help student move language far know nt rigorous study done topic unfortunate completely understand case largescale educational experiment challenging well influenced lot different variable creating study language feature influence larger noise would challenging going throw idea feel language lead well language one nt odd either syntax semantics student move variety language paradigm without surprised new language let start easy part use language nt syntactically different one learn next people would likely agree nt start apl j see argument schemeracket well point every language strike matter total weight pro con dynamic typing schemeracket bigger killer syntax reason listed everyone place different weight thing certainly big positive schemeracket even go argue language many control structure nt seen place could problem well example python support else clause loop wo nt see language use boolean operator shortcut mentioned could seen fail well semantic side think scope significant told ta rice university student get java third semester two semester python many find block scope confusing outside python php ruby block scope standard rule given scope something beginning student struggle first language handle differently others seems problematic future growth python also unusual handling default parameter function consider following code def foo b bappend return b foo foo scope b inside foo memory allocated level declaration foo remembered one invocation next yet find another language semantics default value function semantic side language different model oo norm also red flag javascript recently gained class oo model javascript still prototype based different every language significant use today python also odd element oo model like need list self first argument method see might see nice advantage teaching showing object available student move another language yet one thing handle differently lastly feel strongly graduating student exposed multiple paradigm programming major never cover anything ooimperative style java c find much harder pick language later either nt objectoriented focus functional instead imperative reason actually like idea multiparadigm language course one keep mind multiparadigm break lot thing looking make thing complex interesting first semester assignment one reason java took education space relative ease student would write graphical code especially using applet applet long since died ability put interesting assignment still strong interesting mean many thing go well beyond graphic today include thing like playing data robotics socially relevant problem regardless detail general requirement strong library support hopefully way bringing library nt overly complicate thing area jvm language python excel really lowlevel language like c tend fall amount code required anything interesting often quite large factor number factor impact thought picking language introductory programming personally also appreciate language run multiple platform hopefully open source language generally better allowing student work machine regardless o tooling free cost also really like language work well discus depth earlier post also like use language accompanying tool used professionally nt top language fine top reality single language dominates today whatever language pick ability learn language significant knowing specific language thing big teaching language teaching environment course c major reason pretty simple student year limited number hour since want use language nt feel comfortable spending much time teaching something know nt used anywhere outside classroom also realize language used industy nt fixed choose teach college impact one thing people consider pick language new project whether hire enough developer sufficient talent know college teach language likely adopted industry quite certain broad adoption java college played major factor dominance industry similarly current growth python inevitably fuelling professional adoption pick language teach might ask language want software run life written nt think want bank elevator ride using language perhaps pick different one people choose python language seems taking early c education right python actually prompted write post worry particular choice introductory language doubt python real advantage fact low overhead broad library support enable student interesting thing unfortunately fall area one worry inability cover certain topic consider significant possibility student pick bad habit language nt prevent perhaps standard argument hear python simple easy student learn completely agree python easy language experienced programmer pick nt clear easy experienced programmer learn easy beginning developer learn learning program nt syntax learning new way thinking structure logic general semantics syntax language enforces structure give early feedback rule broken could actually useful novice evidence provided alzhrhani et al found student large data sample struggle python c indeed would argue moving language provides error checking one provides le error checking generally easier going way assistance language write good code especially beneficial novice language help student build mental model semantics programming could actually significant simple syntax feel compelled mention another common argument python teach indentation definitely truth ca nt say find motivating especially since python lack block scope indented block indicate reality autoformatting tool language without significant whitespace well developed company strict style guide easily enforced software contrast automatically cleaning poor type usage program written dynamically typed language far complex problem way true challenge teaching introductory programming using python probably summed well term frequently seen discussion python program nt take much reading python come across term pythonic asked python programmer function return different type based argument value like x panda datasets told unpythonic problem pythonic unpythonic advanced concept dealing student still trying understand basic conditionals iteration function simply nt prepared comprehend pythonic instead good coding done convention student need language enforce good style choice gotten far already shown great perseverance current age short attention span might wondering language would pick teaching actually like scala language course using scala role trinity university almost year complaint said post language perfect find pro scala definitely outweigh con older blog post discus detail part thought first year using scala list highlight repl scripting interface static type checking lot syntax error instead runtime error logic error type error prevent lot issue student never see nullpointerexception syntaxsemantics allow coverage thing care including constmutability block scope oo subtyping parametric type etc access full jvm library expressive syntax combined library allow give interesting assignment nt take thousand line code solid apis include link type argument return value cover multithreading networking cover topic without language forcing talk thing ready cover yet uniform oo syntax without primitive fairly standard oo model multiparadigm student nice path c haskell java etc
55,Lobsters,education,Education,Games with PPB: Jumping Panda edition,https://www.youtube.com/watch?v=jfFQPWWrbpQ,game ppb jumping panda edition,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature
56,Lobsters,education,Education,"On Coding, Ego and Attention",https://josebrowne.com/on-coding-ego-and-attention/,coding ego attention,nothing everything ego distractor relative deprivation daisaku ikeda taming ego distraction kevin kelly sam yang nassim taleb scientific method yuval noah harari carl sagan putting task center david brook shunryo suzuki josebrownex eric juan anisa julian dan hackernews,thought coding ego attention learned get way learning link ego attentionif good software engineer mean good thinker becoming better one mean improving way think right well little shame saying taken decade coding get finally focus attention improving way think instead learning yet another library framework programming languageat certain point thing got way growth nothing problem solving everything actually happening mind engaged engaging problemon metalevel coding making observation identifying relationship observation result little hypothesis u test hmm thing might causing thing moment without getting way example one little hypothesis get proven falseon day seem get right problemsolving feel almost effortless frictionless size familiarity complexity problem make difference knot stomach remain curious remain open wherever thing go result iterating way solution fun exciting incredibly rewardingon bad day exact opposite trueit clear know rather think different daysso two question good day bad one exactly differently good day follows learned metacognition coding put simply thinking thinking coding optimize itlet start looking enemyego distractorin silicon valley talk lot distraction cost distraction clearly felt well understood attention focus major factor engineering output le distraction mean production better software better meeting better team etc etchowever focus call external distractors phone excess meeting open office slack email etc external distractors without doubt major contributor would say manageable distraction put phone away find quiet place work even block dedicated time focus calendardespite come grip reality dealing external distractors easy part biggest distractor time head egomy ego creates tight bond work identity linking self worth well job creates need track performance keep score spinning mental process consume valuable resource make staying task difficultas soon sit anything matter u scoring process start distraction beginsi might suddenly feel urge grab snack subconsciously ignore uncertainhard part problem instead focus easy familiar part distraction followed thought like figured good enough think break production ego distraction putting uncertainty till later buy temporary relief protect ego perceived threat thing like hard problem possibility failing publicly negative feedback become threat linked identitythis ego distraction action check phonesrelative deprivationno concept show universal power ego distraction clearly phenomenon known relative deprivation theory talk called nt go harvard journalist malcolm gladwell find surprising pattern looked stem degree completion rate university country rate interesting fact student ranking consistently predicts student end degree regardless prestigious university graduation rate consistent student ranked top class get half degree student bottom get le percent degree middle share harvardu randomu rate consistent possible rate stay smarter school produce graduate dumber school le common sense would suggest completion rate school filter smartest student country higher lower amount student finish right nope samemalcolm make case persistence stem simply function cognitive ability function relative standing class nt matter already proven one smartest student planet still throttle effort based ranked instead capable arepsychologists call phenomenon relative deprivation top student convincing everyone else stop trying great engineer convincing rest stop tryingthis ego distraction action self comparison determining effort feel like ahead continue put effort feel like determine worth effortwe know impossible lead every race know answer question room idea going yet important race important question hear important room say strongly compare others true continue learn might daisaku ikeda discussion youthso instead unfriending smart friend stop subconsciously throttling performancetaming ego distractionin zen buddhism powerful mental model deal problem ego distraction brilliantly called shoshin beginner mind beginner mind rejecting expert mindset embracing one life long studentthe problem expertise much know part obviously good problem sharp flatting learning curve come adopting expert mindsetwith expertise come judgment expectation slows learning process start making prediction reality instead allowing reality surprise usa soon expert prediction start differ reality terrible thing begin happen ability think clearly psychologist call motivated reasoning instead making observation hypothesizing start picking side even looking evidence good start ignore evidence nt align expert judgment become difficult work anyone committed preservation ego becomes enemythe irony long remember thought goal mastery thought knowing meant senior pro expert wrongi know pro amateur know gracefully recover mistake kevin kellythat pro shorten feedback loop make mistake learn continue without hesitating trying avoid making mistake activates motivated reasoning reality take energy focused learning waste trying preserve misguided expert identity incorrect best incomplete biasesthis cost ego distraction ego mastery exist opposite end continuum one lean towards ego one mastery sam yangbeginner mind powerful thinking tool planet metacognitive blueprint allows building confidence avoiding egoic distractionsbeginner mind accepts fact absolute knowledge infinite thus keeping score waste time instead striving expertise embrace idiocy strives approach every problem conversation task like student like sponge ready absorb reality ready surprised ready fail quickly ready learn quickly try remind group week idiot know nothing good fortune knowing nassim talebthe scientific methodi nt think coincidence beginner mind mirror founding principle science modern science based latin injunction ignoramus know assumes nt know everything even critically accepts thing think know could proven wrong gain knowledge concept idea theory sacred beyond challenge yuval noah harari sapienslearning simply iterative cycling knowing knowing mastery simply accumulation momentum accumulation knowledge like riding bike speed stored use later time oscillation left pedal right pedal knowing knowing build momentum make pedaling easier goto think speed accumulated think stop pedaling somehow maintain speed yet exactly expert begin think becomes dogmatic loses momentum learning curve begin flattenon hand student know confuse mere accumulation speed accumulation knowledge expert start coast student continues pedal difference science way thinking much body knowledge carl saganputting task centerin mental abc pitching worldrenowned baseball psychologist pitching coach h dorfman say discipline put task center dorfman describes two locale pitcher universe mound mound mound thinking two thing pitch selection pitch location find thinking anything else get moundthis tame ego distractionthe ego trick always make personal make put center sit solve problem trick ask problem related question type question must avoid asking personal type question instead thinking cause bug instead ask bug wisdom realizing personal question distraction realize selfevaluation get u closer actually solving problem objective must work keeping task center instead creating distance u task imagining task somewhere something hard make personal ball ball problem problem idea idea pull request pull requesti deliberately create psychological distance whenever catch ego thing simple reorientation disarms ego distraction mine personalized result concentration uninterrupted learning better collaboration great workvocation cure selfcenteredness work well pay attention task david brook second mountaindealing ego distraction improved attention taught love problem solving process taught love respect learning process result productive le anxious better teammate better friend better thinkerin way taken selfimposed boot neck allowed space bring back fun excitement used first learning code kid back actually complete instead anxiously awaiting day could finally call expert new goal everything possible stubbornly remain student beginner mind many possibility expert shunryo suzuki zen masterthanks taking time read alone something thought well ego distraction something noticed perhaps prominent distractors get way would love hear tip cope internal distraction stay taskplease share thoughtsfeedback comment shoot message josebrownexspecial thank awesome human taking time review early draft post eric juan anisa julian dansee discussion comment hackernews
57,Lobsters,education,Education,Questions to help people decide what to learn,https://jvns.ca/blog/2020/06/14/questions-to-help-you-learn/,question help people decide learn,http questionswizardzinescom question udp question socket goal help people learn zines formative assessment v summative assessment formative assessment summative assessment sumana thread idea build flashcard learn learn flashcard container good thing flashcard problem flashcard people dislike question match mental model get rid multiple choice next step get reminded little schemer switch sidebyside format call question instead flashcard keep learned something button building small thing hard http questionswizardzinescom,last month working way help people evaluate learning figure learn next past week built new iteration http questionswizardzinescom today set question question udp question socket still work progress working quite wanted write got goal help people learn first let talk goal interested helping people trying learn specific material trying teach want help people learn want learn done lot writing blog post zines felt like missing something people really learning wanted learn could tell learned felt like wanted kind quiz test sure look like formative assessment v summative assessment let take quick detour terminology two kind assessment teacher use school formative assessment evaluation used modify teaching learning activity improve student attainment summative assessment used determine grade grade pretty pointless teaching care got socket formative assessment could take kind evaluation help decide exactly teach next seems useful got interested building kind formative assessment tool thanks sumana reminding term asked twitter thread ever taken class online offline given quiz first could use check understanding topic start help got reply theme took away reply quiz remind many people bad school experience people like using quiz direct learning skip x section already know thing one person said took quiz got low score beginning helped realize actually know course content well thought one thing learned told know something bad experience lot people idea build flashcard learn first idea reframe test way learn instead something tell know help learn something new built set flashcard various topic first set built flashcard container want try try look like basically question click card see answer card categorize knew learned something confusing meant kind category know learn anything idea answer contain enough information could actually learn little bit hopefully inspired go learn interested good thing flashcard positive feedback got flashcard fun people liked able reflect learned end fast complete maybe minute problem flashcard problem bothering word flashcard lot baggage want strongly associated language learning memorization use flashcard really resonate format constrained sometimes wanted include information answer space ui bit confusing people figure supposed click card flip people dislike question match mental model probably important thing learned making flashcard really matter well question match reader mental model started writing question taking statement normally make topic turning question sometimes really work example working think statement http request part body header request method path requested relatively unobjectionable think http request ask part http request answer body header request method url requested turn totally different everyone think http request part might think part first line header body part optional part first line header maybe optional body way weird asked part http request lot example like people reacted badly question asked match think topic learned asking question get held higher standard well match reader mental model making statement example think would better question every http request header yes rfc requires host header set even maybe little tricky probably least one client implementation world sending request without header even though http request header course ok questionanswer match reader mental model mental model incorrect model correct think match get rid multiple choice thing learned flashcard lot people dislike multiple choice thought much honestly really like multiple choice either decided get rid next step get reminded little schemer remember little schemer kicking around head actually read whole thing kept hearing people talking first page little schemer heard reminded lot trying question answer goal get question right instead think goal think whether know answer yet learn go switch sidebyside format kept similar questionanswer format switched sidebyside format like little schemer like putting question answer next see time forget question make sense put question answer page easily go back look previous question want basically like give reader control think important call question instead flashcard also renamed project question really think learning flashcard constantly ask question topic understand figure answer question repeat understand topic well want coming right question hard lot hopeful providing folk bunch question answer think help decide want learn next keep learned something button released first set question udp include learned something button noticed something weird lot people tweeting thing like got got bit worried whole idea help people identify thing could learn saying got felt like focusing thing already knew ignoring important thing question maybe could learn something new added learned something button back question spent way much time building fun svgcss animation played pressed button far seems worked see people commenting learned something le got building small thing hard usual building small simple thing take time expect concept question answer seems really simple already learned lot building think still lot learn format excited learn love know thought like try http questionswizardzinescom
58,Lobsters,education,Education,SageMath Mathematical Software System,https://www.sagemath.org/,sagemath mathematical software system,python python switch wiki,mission creating viable free open source alternative magma maple mathematica matlab since version released january sagemath using python information see python switch wiki
59,Lobsters,education,Education,Coding with kids,https://dev.solita.fi/2020/06/12/coding-with-kids.html,coding kid,foreword started turtle roy turtle roy powershell babysitter telling story scratch scratching lego mindstorms lego boost lego boost star war droid commander making portable flappy bird game micro bit educational foundation instruction tech save u arcade coder looking sphero guidance mastering art python using book learn python rpg python code combat codingame creating first home page hard way afterwords codeorg,foreword always loved tinker robotics electronics software hacker mentality break something figure work build something knowledge gathered play thing created kid tried combine thing love people love blog making kid professional developer showcase done past year hope encourages people try something similar child code permission share child harmed hopefully see later process started turtle roy firstborn four year old could read thought might go try teach coding reading asked want teach computer draw opened turtle roy let choose shape turtle course princess showed could draw flower princess clear setshape princesslarge let halfleaf repeat sequence fd lt let leaf sequence halfleaf lt halfleaf let flower repeat leaf flower finally printed command made marking let try draw course age four nowhere near using variable making function fun time commanding turtle draw something fd lt rt color time happy spend total several hour world turtle roy unfortunately saved code piece drew back definitely fun cheap way test child programming powershell babysitter lie love powershell love much tried teach firstborn made small function speaks aloud given output stored script powershell profile profilecurrentuserallhosts function speakaloud cmdletbinding param parameter mandatory true valuefrompipeline string texttospeak writehost texttospeak addtype assemblyname systemspeech speak newobject systemspeechsynthesisspeechsynthesizer speakspeak texttospeak speakdispose done asked kid wanted speak computer learn math showed could make mathematical equation let computer compute computer would print output say aloud robotlike speech synthesizer fun even though speak native language might possible change language age six seven kid enthusiastic powershell wanted stay home using powershell instead coming grocery parent would bet quite unique thing told parent telling story scratch one alltime favorite kid scratchjr play store scratch ide designed especially kid necessary much programming sense work story telling allows child put cute figure different scene orchestrate different character scracthjr way make short movie programming language even interactive game get grip like proudly present one child latest piece art red dragon playing soccer cat well screen capture video also hasslefree educator need understand anything programming open attitude towards trying thing scratching lego firstborn month old decided need lego robot went bought mindstorms well turned interested robotics younger brother really enthusiastic building anything bought lego mindstorms lego boost lego boost star war droid commander mindstorms neither u liked much programming mindstorms deconstructed rebuilt several time rather used readymade controller use manually controlled electronics automated robot outofthebox programming environment feel somehow clumsy possibility run micropython yet tested might era mindstorms come later since guy missing year still recommended age lego boost lego boost awesome suggestion age year le provides storylike environment build robot give robot different characteristic get instruction book lego boost instead come tablet software tell build different robot piece scratch ide introduces idea lego model absolute example build frankie cat decorate wish want hat hat want bowtie even teach frankie birthday party teach play harmonica awesome lot building deconstructing programming happen time everything even packaged way six year old could well honest programming experience lot lego experience package made hope child time world rebuild lego boost star war droid commander lego boost awesome newer lego boost star war droid commander something beyond boy definitely star war fanboys color opinion matter package include instruction book instead use tablet use lego app droids app comprehensive package original boost whole star war universe three droids adventure build three droids one programmable brick time bit awkward software development process lego boost star war droid commander following venture galaxy find somebody problem move programmable brick one droid another deconstruct part droid like arm gonk droid build new adjustment implement software scratch actually help poor fellow distress recall first grade aged boy sit next thing eight hour straight builddeconstructprogram repeatable parent needed trick eat something cycle went picture lego boost app ide making portable flappy bird game micro bit bbc micro bit armbased creditcardsized microcomputer designed education opensourced developed educational foundation publishes guide found claim million child would using school library home cost around euro pretty impressive list feature computer price tag two button three count reset led matrix accelerometer magnetometer light sensor temperature sensor radio microusb connector bluetooth low energy pin io two official code editor microsoft makecode micropython used makecode could also found android apple app child might need help connecting device tablet learning thing like flashing board besides actual coding could also done yet scratch first project simplified version flappy bird device instruction kid thrilled could thing used pretty impressive amount time playing flappy bird led matrix tech save u far understood designed created micro bit educational foundation also provides extension kit seems lot interesting electronics support coding hobby like arcade coder also interesting electronics project like building synthesizer really fun frustrating provides infernal sound looking sphero sphero provides robot good feeling maybe even good feel like complete product provided bluetooth connectivity used computer tablet program sturdy really impressive set feature hard time figuring would like sphero bolt sphero rvr surprisingly expensive compared example tech save u product community behind ide sphero providing also codesharingplatform instruct sphero robot drawing route programming scratch javascript interestingly even guidance connect mentioned micro bit sphero rvr picture spheros example program child showcase could done provides matrix animation spinning around scrolling text led matrix finally end celebrating goal turning around standing one place scratch code done kid yet done instead youngest pack made first computer program age three using finger draw robot color line dictate color led matrix missing video still surely imagine bolt ball move back forth instruction long story short awesome still kind gathering dust house know actual reason maybe reason could complete found would really like build robot contrast old project built top netduino look two sphero robot compare surely get mean maybe missing angle approach rvr since could add thing like robotic arm nevertheless kind would personally like look meadow instead sphero building robot make process comprehensive time could hard kid mastering art python needed learn python work project implemented space invader clone pygame twist replaced alien face kid loved choose dad trying catch spaceship natural move ask wanted learn making software like course wanted overall python really good language learning programming plenty source learning supported many situation simple get started come much le boilerplate code example java c would come help kid focus actual thing distracted important necessary feature many language using book learn python considered learn programming already knew scratch powershell turtle roy decided could go comprehensive direction lend book library always programming book lot word interested every one cherrypicked example project written english translated kid finnish one example using turtle import make drawing robot knew build house could command python commandline provide exactly house fun process end result rather boring instead present piece software faster implement provided much fun many occasion generating funny phrase idea really simple make array word like subject deed object mix randomly provide unexpected phrase use family name subject make even funnier hastily translated version implementation finnish english subject dad mother deed eats kick burn lift object lion bicycle airplane ice cream random import randint def pickword word wordcount len word pickedword randint return word pickedword print pickword subject pickword deed pickword object endn lead phrase like dad eats lion mother kick airplane sinful deed dad burn ice cream rpg python quickly learning implement software python turned control character roleplaying game python using code combat besides python also support javascript kid quite quickly get grip game missing translation new feature require parent support kid way code combat implemented way support problemsolving learning algorithm learning basic objectoriented programming implemented kind domain specific language use given command equipment give character option example hero cleave sword without sword also tried go check could find something codingame could unfortunately seems challenge still bit hard maybe get back year creating first home page hard way last maybe least making home page told easiest way make home page make word document save html file know anything home page might know plenty problem arise approach instead taught kid painful route took year ago basically opened notepad another screen made index document using simplest possible syntax title two word body sentence hosted azure blob storage static website feature enabled allows serve static html file blog storage check costed figured le seems like cheap way start needle say kind boring approach maybe come back later website construction like webpage back ninety afterwords summary kid knew program different language school need know read start programming done drawing sphero scratchjr also able teach try learn type approach necessarily require reading skill later python great choice first real programming language widely supported easy learn supporting source mention earlier codeorg used school seems great deal material learning art coding also section younglings starting age four hello ruby book linda liukas also loved child feel also helped child learning think like programmer board game called robogem played school home definitely teach give instruction machine strong recommendation three learning source mentioned basic idea make sure nerd show possible later make decision want building something together still nothing beat lego
60,Lobsters,education,Education,"I’m a Developer. I Won’t Teach My Kids to Code, and Neither Should You",https://getpocket.com/explore/item/i-m-a-developer-i-won-t-teach-my-kids-to-code-and-neither-should-you,developer teach kid code neither,simplifying javascript,illustration natalie matthewsramo recent latenight formula run passed large display book teaching child code seen book around never large display directed toward elementaryaged child book part flood coding camp afterschool code club apps designed teach kindergartener rudiment equipping child futureproof skill easy see parent push coding child better way prepare kid future ruled software training build everything going automated much safer one automating learning code good learning earlier better product may teach kid specific coding language actually little work creating software former coworker mine trained coding boot camp motto coding new literacy sentiment heart programming book game description one popular book say starting coding early essential prepare kid future give impression teaching kid code somehow equivalent teaching read course ridiculous coding new literacy parent literate know read kid programmer idea kind skill programmer need coding book kid present coding set problem correct solution child master syntax able make thing quickly easily way programming work programming messy programming mix creativity determination developer syntax certain skill taught young early career wrote code configure run group remote server code worked great least thought hour later phone dinged middle night telling group server failed staggering bed laptop ran code replace broken server hour later different group failed syntax problem server would never built first place problem much deeper isolating solving took several week many night interrupted sleep coding like try something see work try problem straightforward would automated least solved opensource code left difficult task creating something unique book teach solve problem one seen want kid learn syntax want learn solve problem dive deep issue creative teach one day son concerned chair wobbly looked helped isolate problem one screw loose found one many leftover hex wrench showed screw back curious would happen screwed way screw came ended taking chair way apart putting back together couple time often mismatching piece satisfied job finished try something see work try course getting something working first step building software next step make code clear reusable neat early career wrote feature gave senior developer review took one look sloppy spacing mismatched line erratic naming convention said working syntax valid still wrong good coder get something work want good feeling quality hardest thing many developer master welldesigned code feel good work ugly code make developer involuntarily cringe best developer learn fuse abstract logic sensitivity artist learning trust aesthetic feeling much part development algorithm coding pattern wife recently made sugar cooky son every time mixed ingredient would pause look dough talk texture color smooth get part mixed evenly rolled dough son felt surface watched wife showed get everything even thin hardest part though cutting shape like kid instinctively pushed cutter right middle rolledout dough every time would try explain place shape next order maximize roll every measuring ingredient gauging mixed dough smoothness consistency placing precision cut minimize something quality hard teach difference merely executing step following recipe something well passed feel experience every time involve kid work something value teaching thing well preparing write code teaching teaching world full interesting thing discover showing passionate look ephemeral sense quality everything best part even become skill used nearly career every hobby every life force kid learn syntax reinforce idea something blatantly employable skill valuable adult learn syntax kid learn embrace curiosity joe morgan writes lot code author simplifying javascript
61,Lobsters,education,Education,Everything you need to know for your AWS CloudPractioner Certification,https://knowledge-book-six.now.sh/2020/06/05/aws-notes/#sqs-examples-rabbitmq---think-of-it-as-message-broker-service,everything need know aws cloudpractioner certification,aws cloud practioner take exam exam guide cloud computing benefit cloud computing type cloud computing cloud computing model global infrastructure region az availability zone edge location get data fast upload data fast gov cloud govcloud instance aws console ami amazon machine image autoscaling elastic load balancer bucket cloudfront rds aws lambda pricing model demand reserved instance spot instance dedicated billing pricing aws free service auto scaling cloudformation elastic bean opswork amplify appsync codestar note aws support plan aws marketplace aws trusted advisor check consolidated billing aws cost explorer aws budget tco calculator aws landing zone aws resource group tagging aws quickstart aws cost usage report aws networking aws service aws service aws compute service aws storage service aws business centric service aws enterprise integration aws logging service common initial aws security thing customer take care thing aws take care aws compliance program two popular one aws artifact aws inspector aws waf web application firewall aws shield aws penetration testing permitted service prohibited service amazon guard duty service km key management system envelope encryption readmore amazon macie security group v nacls network access control list aws vpn virtual private network aws sitetosite vpn aws client vpn name different service get confused aws connect service v sn sqs example think message broker service queue message guaranteed delivery nlb v alb v clb attach fork twitter email,aws cloud practioner certification mostly used people get understanding aws service take exam take exam pearson vue online cost min question passing score valid year exam guide exam mostly comprises cloud concept security technology billing pricing total question mutiple choice multiple response question cloud computing practice using network remote server hosted internet store manage process data rather using local server personal computer benefit cloud computing upfront cost paying server pay demand economy sale simply save alot money since many people using cloud scale scale based need click button service deployed maintenance cost go global minute since global region cloud server hosted type cloud computing saas software service basically complete product ran managed service provider example salesforce gmail googledocs paas platform service focusing deploying application without worrying managing infrastructure example heroku netlify etc iaa infrastructure service building block providing computer access storage need etc example aws gcp azure cloud computing model cloud fully hosted cloud startup hybrid onpremise public cloud bank onpremise private cloud sensitive data stored aws global infrastructure million active customer using aws total availability zone geographic region around world region physical location multiple availabilty zone availability zone az one discrete data location owned aws edge location data center owned trusted partner aws region aws geographically distinct location multiple data center region two az useast north virginia largest aws region service almost always become available first region service available region see billing information az availability zone region two az az data center ran owned aws le latency az edge location get data fast upload data fast data center owned trusted partner aws direct connection aws network location serve request cloudfront request going either service routed nearest edge location automatically transfer accelaration api gateway endpoint also use aws edge network allows low latency matter ever located gov cloud aws service allows customer host sensitive controlled unclassified information type workload operated u citizen u soil follow several compliance guideline govcloud instance order create instance head aws console choose follow along make sure select amazon linux ami select type since offered free tier follow along make sure set iam role lastly make sure billing alert turned either use ssh session manager get instance also get sessionsmanager going system manager sessionsmanager open simple bash shell help access instance ami amazon machine image create image going management console clicking action selecting image basically creates copy allows launch multiple server autoscaling allows ensure multiple instance multiple server running also allows meet demand web traffic order configure located management console elastic load balancer elbs allows reroute traffic especially update application bucket usually global bucket usually region specific block storage used store file cloudfront cdn cloudfront basically cotent delivery network make easier company distribute content hook bucket deliver content around world rds relational database service used setup relational database example sql psql amazon aurora would default setting service auto scaling aws lambda serverless framework allows run simple function think cronjobs pricing model four different pricing model demand low cost flexible charge per hr short term good first time apps prototype upfront payment reserved instance good committed application standard saving change ri attribute best long term schedule reserve instance commitment like year aws ri shared multiple account even sell unused instance spot instance think hotel offer discount fill spot like hotel aws us similar approach maximize usage idle server condition instance terminated anytime instance get terminated dont get charged partial hour usuage terminate instance charged hour ran good application feasible low usage provides saving dedicated expensive instance built tenant customer useful large enterprise offered demand reserved billing pricing aws free service iam identity access management used creating user role auto scaling cloudformation elastic bean opswork amplify appsync codestar aws cost explorer note service bold free provision aws service cost money aws support plan basic support email developer tech support via email reply within third party support general guidance business tech support via chatphone support third party production system le response time business downtime enterprise tech support via chatphone personal concierge tam technical account manager response time le business downtime aws marketplace place thousand software listing independant software vendor product free use charge becomes part aws bill aws trusted advisor check advises customer security saving money performance service limit fault tolerance free trusted advisor check enterprise business trusted advisor check consolidated billing one master account member account cost explorer tool visualizing usage also offer volume discount use cheaper get aws cost explorer allows visualize usage multiple account aws budget first two budget free charge allows setup alert exceed limit set three type alert budget usage instance reservation alert support rds redshift elastic cache manage budget aws budget dashboard budget api get notified email chatbot tco calculator total cost ownership calculator allows show much save shifting aws tool allows build report exec show much save approximation purpose aws landing zone meant enterprise automatically provision configure new account via service catalog template us sso aws resource group tagging tag word phrase act metadata organizing aws resource resource group collection resource share one tag resource group display following detail group resource based metric alarm configuration setting aws quickstart prebuilt template offered aws aws partner help deploy popular stack aws allows reduce manual effort divided three step reference architecture deployment aws cloudformation template automate configure deployment guide explaining architecture implementation detail aws cost usage report allows generate detailed report aws cost get spreadsheet highlighting cost report stored use athena turn queryable database quicksight analyzing aws networking region geographic location network vpc isolated space aws launch aws resource az data center aws resource security group act firewall instance level internet gateway enables access internet nacls act firewall subnet level route table determine network traffic subnets directed subnets logical partition ip network multiple smaller network segment aws database service dynamodb nosql keyvalue database example cassandra really fast read write access documentdb nosql document database compatible mongodb rds relational database service support multiple engine mysql postgres mariadb popular db auroradb mysql fast psql fast fully managed database run copy database used expensive db aurora serverless run needed neptune graph database redshift columnar database petabyte warehouse elastic cache redis memecached database aws provisioning service elastic beanstalk think heroku service used deploying scaling web application service deployed java python c etc perfect deploying webapps opswork configuration management service provides managed instance chef puppet layer like tier tier cloudformation iaa infrastructure code json yaml aws quickstart ready made template launch configure aws compute network service aws marketplace place buy sell software service aws cloud aws compute service elastic compute cloud highly configurable server ec elastic container service docker service highly scalable high performance good microservices fargate chose like might chose ec define aws run service like lambda since dont pay eks kuberenetes service make easy deploy manage scale lambda serverless upload code function aws run code elastic beanstalk upload code rest good developer want upload apps aws batch batch processing schedule batch job aws storage service simple storage service object store simply upload file glacier low cost storage good archiving data long term backup storage gateway hybrid solution premisis cloud storage eb elastic block storage hard drive cloud attach instance ssds hdds efs elastic file storage file storage moutable multiple instance time snowball way moving data premise aws snowball edge tb better version additional feature snowmobile allows move petabyte data datacenter wheel aws business centric service amazon connect cloud based call center service setup minute later save call furhter analysisyou even route call based defined rule workspace secured managed virutal desktop workdocs aws version sharepoint collaborate share document chime think skype business call meeting workmail managed aws email service like microsoft outlook exchange us imap protocol pinpoint marketing campaign targetted sending email sm notification s simple email service cloud based email sending service used send email notification good webapps support sending email notification html format email option quicksight think qliksense tableau allows visualize data aws enterprise integration direct connect dedicated gigabit connection premise aws vpn site site connecting premise aws client vpn connecting client aws network storage gateway hybrid storate service enables premise application use aws cloud storage good backup archiving disaster recovery migration data processing ad active directory aws directory service microsoft active directory also known aws managed microsoft ad enables workload aws related resource use managed ad aws cloud aws logging service cloudtrail logging service log api call sdk cli aws service created service spun instance launched sagemaker notebook detects developer misconfigurations detects malicious activity automates response cloudwatch collection multiple service like storage solution log store type log cloudwatch metric timeseries data log cloudwatch event trigger event based condition taking snapshot server cloudwatch alarm trigger notification based metric cloudwatch dashboard create visualization based metric common aws initial iam identity access management simple storage swf simple workflow service sn simple notification system sqs simple queue service s simple email service ssm simple system manager rds relation database service vpc virtual private cloud vpn virtual private network cfn cloud formation waf web application firewall mq amazon activemq asg autoscaling group tam technical account manager elb elastic load balancer alb application load balancer nlb network load balancer elastic cloud compute ec elastic container service ecr elastic container repository eb elastic block storage elf elastic file storage emr elastic mapreduce eb elastic beanstalk e elastic search eks elastic kubernetes service mks managed kafka service iot internet thing ri reserved instance aws security shared responsibility model customer responsible security cloud securing data using right configuration anything customer touch get access secured aws hardward operation managed service global infrastructure thing customer take care iam customer data o network firewall configs maintaining encryption protocol thing aws take care software hardware service aws provides aws compliance program set internal policy procedure company comply rule regulation uphold reputation two popular one aws artifact cost self service portal demand access aws compliance report aws inspector aws inspector tool run security benchmark specific instance popular one run ci center internet security benchmarksit even inspect network check port open running aws waf web application firewall allows protect web application common exploit write rule allow traffic based content http request use ruleset aws trusted secuirty partner either attached cloudfront application load balance alb common attack include injection broken authentication sensitive data exposure xml external entity xxe broken access control security misconfigurations x cross site scripting insecure deserialization using component known vulnerability insufficient logging monitoring aws shield managed ddos distributed denial service protection service safeguard application running aws aws customer benefit automatic protection aws shield standard charge route traffic cloudfront using aws shield protects attack application transport network also paid tier known shield advance cost upfront commitment give extra protection support available amazon route amazon cloudfront elb aws global accelarator elastic ip amazon elastic compute cloud netword load balancer aws penetration testing authorized service allows simulate cyber attack computer system performed evaluate security system permitted service instance nat gateway elb rds cloudfront aurora api gateway aws lambda lambda edge function lightsail resource prohibited service dns zone walking via amazon route hosted zone do denial service ddos simulated do simulated ddos port flooding protocol flooding request flooding amazon guard duty service id intrustion detection system ip intrustion protection system device software monnitors network system malicious activity policy violation guard duty threat detection service continuously monitor malicious suspicious activity unauthorized behavior us machine learning analyze following aws log cloudtrail log vpc flow log dns log alert finding automate incident response via cloudwatch event party software km key management system managed service make easy create control encryption key used encrypt data km multitenant hsm hardware security model many aws service intergrated use km encrypt data simple checkbox km us envelope encryption envelope encryption encrypt data data protect protect encryption key encrypt data key master key additional layer security readmore amazon macie macie fully managed service continuously monitor data access activity anomaly generates detailed alert detects risk unqthorized access inadvertent data leak us machine learning analyze cloudtrail log provides following alert anonymized access config compliance credential loss data compliance file hosting identity enumeration information loss location anomaly open permisson privilege escalation ransomware service disruption suspiscious activity security group v nacls network access control list security group network access control list nacls act firewall instance level act firewall subnet level implicitly denies traffic create allow rule example allow instance access port create allow deny rule aws vpn virtual private network allows create secure private tunnel network device aws global network aws sitetosite vpn securely connect premise network branch office site vpc aws client vpn securely connect user aws premise network name different service get confused cloudformation iaa infrastructure service used setup template scripting yaml json cloudtrail log api call awsservices blame cloudfront cdn content delivery network used distribute content video static asset etc cloudwatch collection multiple service cloudsearch search engine site ecommerce aws connect service direct connect dedicated fiber optic connection data center aws let say enterprise want direct connection premise datacenter aws might use service connect aws want add extra layer security might need vpn connection amazon connect call center service medium connect new version elastic transcoder convert video different format let say video need transcode different format might useful service even add watermark insert intro infront every video elastic transcoder oldway aws elemental mediaconvert newway transcodes video streaming format transcodes video tostreaming format overlay image insert video clip extract caption data better robust ui sn v sqs connect apps via message sn us pubsub model also known publisher subscriber model sends notification subscriber via protocol http email sqs sm generally used sending plaintext email triggered via aws service best example billing alert retry sending case failure http good webhooks internal email triggering lambda function sqs example rabbitmq think message broker service queue message guaranteed delivery place message queue application pull queue using aws sdk retain message day send sequential order parallel ensure one message sent ensure message delivered least really good delayed task queueing email readmore nlb v alb v clb application network classic layer request layer ip protocol data layer layer http http traffic tcp tl traffic extremeperformance required example netflix intended applicationsthat built within classic network routing rule usability one load balancer capable handling million requestsper second maintaining ultralowlatencies nt use target group attach waf webapp firewall optimized sudden volatile traffic patternswhile using single static ip address per az attach acm amazon certification manager ssl manager anyways need know aws cloud practitioner exam hope found helpful think missed anything mispelled anything feel free fork repo create pr always available twitter email
62,Lobsters,education,Education,Documenting With MediaWiki,https://secluded.site/documenting-with-mediawiki/,documenting mediawiki,nixnet documentation episode admins mediawiki downloading installing guide wikipedia mozilla moving mediawiki site root mobile view minerva neue mobilefrontend skin extension discussion page structureddiscussions echo installing structureddiscussions subpages privacy policy term service subpages mozilla arch linux mine well syntax highlighting codemirror installing editing vim simple plugin wikitext syntax highlighting libvirt debian awesome idea kev quirk,much chagrin hardly posted anything past couple week partly due university summer class starting partly due putting work nixnet documentation listening episode admins decided change thing infrastructure planning instead automating thing document first writing extensive documentation look automating portion setup like hardening server directly following installation end decided use mediawiki downloading installing mediawiki straightforward process next step configuring course guide think useful see someone else configuration get idea well especially considering many extension go setting maybe le obvious one first thing localsettingsphp wgscriptpath different wikis take vastly different approach fill variable w default view something entirely different wikipedia child use wiki well good default configuration url appearing examplecomwikiindexphp title page bad practise seo want page easily discoverable url need bit shorter easiest way found add six line nginx config set wgscriptpath empty string location tryfiles uri uri rewrite location rewrite rewrite indexphp title args snippet tell nginx rewrite site base url remove indexphp title similar approach mozilla done result cleaner url comply seo best practises setup avoids moving mediawiki site root mobile see lot mediawiki instance without good mobile version keeping number extension really understand setting incredibly easy give everyone much better experience minerva neue skin designed specifically use mobile device also much aggressive optimisation though editing terrible experience also look great desktop mobilefrontend extension used detect reader device serve either configured desktop skin minerva neue could serve different skin mobile found minerva neue look best far set need download skin extension need add line config file side note love dynamic mediawiki especially downloads providing copypaste extraction command use wildcards put correct directory awesome recommend putting rest extension wfloadextension mobilefrontend go wherever want together better wgmfdefaultskinclass skinminerva wgmfautodetectmobileview true skin extension place line config save reload link bottom wiki called mobile view click see minerva phone mobilefrontend automatically serve force default theme clicking desktop view location left vector default right minerva neue discussion default discussion page mediawiki work unless already used quite odd new people structureddiscussions extension come comparison enabling left without structureddiscussions right said left work people know given default mediawiki editor raise barrier entry right much userfriendly work exactly one would expect structureddiscussions dependency easy add echo notification others included default installing structureddiscussions add following line localsettingsphp rest extension wfloadextension echo wfloadextension flow running following command necessary mediawiki database need modification support extension general talk page user talk page want structured discussion enabled one run one personally recommend php maintenancepopulatecontentmodelphp wikisomewiki tablerevision php maintenancepopulatecontentmodelphp wikisomewiki tablearchive php maintenancepopulatecontentmodelphp wikisomewiki tablepage php maintenancepopulatecontentmodelphp wikisomewiki tablerevision php maintenancepopulatecontentmodelphp wikisomewiki tablearchive php maintenancepopulatecontentmodelphp wikisomewiki tablepage add actually enable extension temporarily disable comment know affect talk page already exist flow discussion configuration wgnamespacecontentmodels nstalk flowboard wgnamespacecontentmodels nsusertalk flowboard one feature making heavy use privacy policy term service page subpages allows create page entitled parentchild child automatically link back parent top seen mozilla arch linux wikis right header mine well enabling quite simple add following line config enable subpages namespaces wgnamespaceswithsubpages nsmain true syntax final configuration change made far enable syntax highlighting default editor codemirror installing add line config done place extension always wfloadextension codemirror enables default allows user disable wgdefaultuseroptions usecodemirror editing final tip edit pretty much mediawiki instance vim including wikipedia simple plugin drawback found unless store password config enter every time close reopen vim also give vim wikitext syntax highlighting creating mediawiki page offline day ago wiki completely offline taking disk image backup still wrote majority libvirt debian page waited highlighting really nice posted part awesome idea kev quirk want participate write something every day day post link social medium hashtag
63,Lobsters,education,Education,Exploring Git,https://muhammadraza.me/2019/Exploring-Git/,exploring git,git let begin exploring git git actually work happens run happens run tree commit directed acyclic graph twitter twitter facebook,use git every day project made life easier allowing u collaborate others efficientlythus helped u produce great software impacting life every day git simplest term git distributed version control system allows u keep track file help u collaborate efficiently working software project git created linus torvalds development linux kernel primarily written c language python shell perl tcl let begin exploring git order begin start creating git repo named test git init test command creates local repo named test machine contains git folder contains metadata drwxrxrx hackerman hackerman may drwx x x hackerman hackerman may drwxrxrx hackerman hackerman may git blog focusing object ref since important part git directory git branch config description head hook applypatchmsgsample commitmsgsample fsmonitorwatchmansample postupdatesample preapplypatchsample precommitsample premergecommitsample preparecommitmsgsample prepushsample prerebasesample prereceivesample updatesample info exclude object info pack ref head tag directory file git actually work explaining everything work hood using simple diagram see three thing working directory staging area local repo run git add creates snapshot file working put file staging area run git commit command save snapshot file permanently local repo happens run git add filename run git add command take file staging area save file copy object directory file represented blob binary large object name file generated using hashing algorithm calculated using content file case represented object seen using following command git show prettyraw happens run git commit filename run git commit take file staging save permanent snapshot local repo run git commit command two object created tree commit tree represented commit represented furthermore notice also tree represents directory structure run git lstree tree prompt u information tree type file contains file named hellotxt tree represented blob object refers moreover file permission also tracked git represented case git intelligent change file name raw data deleted new tree created object therefore allows u change file name easily without losing raw data besides object directory also ref contains branch branch name act reference commit contains sha pointing commit automatically updated whenever make change commit file repo git work hood furthermore git us data structure called directed acyclic graph really interesting see git work made collaboration easier developer hope enjoyed post think missed thing feel free dm twitter feel share among friend colleague interesting link liked article think others read please share twitter facebook
64,Lobsters,education,Education,UNSW seL4 teaching videos,http://www.youtube.com/playlist?list=PLbSaCpDlfd6qLbEsKquVo3--0gwYBmrUV,unsw teaching video,,
65,Lobsters,education,Education,How To Become A Hacker,https://zalberico.com/essay/2020/04/19/how-to-become-a-hacker.html,become hacker,document esr become hacker lot learn asking question ask good question afraid thing understand learning program learn learn python hard way cracking coding interview computer actually work code dream machine hacker designing data intensive application research forever computer science programming interview leetcode role job phoenix project hacking art exploitation lot learn hacker news essay twitter le wrong disputing definition translation part part russian translation,document thirteen starting high school read esr blog post become hacker excited learn community programmer working together build thing across internet led try installing fedora core eventually ubuntu learned lot troubleshooting trying get thing actually work ended critical developing skill helped get job read python wrote trivial program decided wanted study computer science understand computer actually work pretty influential post time sure wanted growing suburb buffalo ny pretty isolating lucky dad programmed apple ii college fun background hacker spirit know lot modern software development liked computer played know much possible even look understand search space large lot unknown unknown hard even find good source information learn able select good source information requires existing knowledge without guidance experienced person difficult think thing probably better internet developed way even option sift sixteen year later thought fun write version become hacker supplement esr original something would liked read thirteen focus aspect would found helpful lot post programming related topic rallying cry trying persuade adopt specific programming language framework operating system specific way thing post le make suggestion tempered view goal fill niche think would liked read esr original post read one first lot learn beginning remember reading article book understanding lot jargon normal thing first seem incomprehensible slowly become understandable exposed dig thing understand good keep reading powering looking thing understand asking question esr also good post ask good question everyone learns something first time point thing slowly build comfortable basic remember understanding little detail like knowing enter command terminal run cd stood change directory pick thing exposure play exposed experience accumulate lucky enough live area community people interested software able learn faster afraid thing understand learning something new complicated often feel difficult first feel easy may something already know may really testing knowledge lot easier read solve physic problem think make sense solve problem tool read struggle good sign mean really learning focusing similar type thing become easier get better think even bit advantage completely new people develop little bit experience becomes easy comfortable thing already know rather learn something new lead getting stuck plateau repeatedly thing already know like person play one song guitar always play one song new person everything hard really option learning something complicated first time feel little painful get used feeling since good thing mean growing let scare away think smart enough since much learn lot different avenue go computer thing like computer graphic security machine learning algorithm mobile web infrastructure etc mindset allow grow get comfort zone learn new thing critical learning program learn learning program reading book programming like learning skydive reading book skydiving probably need read book beginning need place start stick unless also writing little program alongside carpenter get better building thing writer get better writing thing programmer get better programming thing mean read book good book extremely valuable easy fall trap read book programming without actually anything easier read difficult come something program vacuum starting agree esr python good language start nice site online called learn python hard way focused beginner us exercise along way teach beginning syntax hard understand lot time spent focused learning since every programming language different syntax seem different start get handle syntax general structure problem solved data structure used eventually get comfortable common data structure discussion turn higher level abstraction general design infrastructure make thing easier manage scale easier change future learning data structure important next step getting handle syntax language able write simple program core data structure pretty well detailed cracking coding interview book along example problem confusingly language tend different name implementation data structure python call hash table dictionary example language implementation core data structure even unique name troubleshooting debugging also core programming skill programming actually debugging like debugging problem probably good sign get discouraged search around lot try understand something documentation reading work hitting unexpected error environment normal reflection ability software work constantly undocumented error bug little detail hard get right example open source project github sort build system handle getting software configured run thing like pulling dependency code requires work along executing necessary command actually get thing running download interesting project github try run probably hit unexpected error process often documented running error working problem normal something experienced programmer deal lucky seen type problem seen people hit error like think something wrong thing lot competing tool even industry around build system trying make better make thing confusing beginner since real standardization right way configure software run varies depending programming environment language computer actually work remember frustrated hard find information computer actually worked everything looked talked computer unhelpful oversimplified analogy disk filing cabinet file nothing could actually read understand thing really worked transported past would able actually explain build one electrical computer engineering software specifically still lot value understanding hardware aspect interesting best book recommend code charles petzold walk basic starting electrical bit way history boolean logic circuit design actual drawing simple circuit store bit memory build historical context discovery built small cpu also go assembly basic computer graphic author really clear writer teacher book surprisingly readable amount detail historical context recommend dream machine mitchell waldrop hacker steven levy narrative story make easier learn remember thing think context discovery help learning thing actually work tool fun good know tool spend forever customizing thing arguing little detail really matter much customizing tool fun way learn starting seen people spend enormous amount time generates relatively little value compared actually writing program solve problem learning craft programming general good example book currently designing data intensive application think focusing customizing tool much hold back worry much thing like vim emacs o using learn core skill anywhere biggest disagreement esr post said playing linux really valuable way learn lot troubleshooting largely work well spend hour thing like trying get wireless internet function getting laptop suspend successfully even getting ui show thing little better started trying install gentoo never actually succeeded troubleshooting skill really instrumental allowing get job fun play different o definitely encourage think requirement probably easier learn macos linux though since existing tooling target environment programmer using one two one specific tool worth mentioning version control specifically git worth spending time getting comfortable basic probably something focus programming bit research forever easy procrastinate researching option forever starting project fun read explore available good little also get stuck forever doubt pick popular project around use one popular probably decent community learn around probably stable least substantial le likely abandoned computer science really enjoyed studying computer science think still probably best way go opportunity particularly live suburban area like without lot software people around possible think probably good try get best c program also lot class available good program online life like mine high school hard actually take advantage home programming interview learning naive solution getting good grade working cool programming project naive solution well programming interview good position programming interview competitive company need get comfortable problem leetcode cracking coding interview book programming interview require lot practice distinct skill develop go entire c degree still know program also get c degree still able programming interview probably default case learning program learning well programming interview take focused time c help direction focused project lambda school probably better programming side maybe end better overall lot learning role job lot different kind role software engineer sre site reliability engineer focused infrastructure code running writing software focused internal tool devops devs focus tooling required automate software built tested read phoenix project fun narrative story illustrating role interact user like developer support engineer helping user apis running bug configuration issue people focus game engine people focus vr computer graphic people write new computer language new compiler role even specialization depending product used new tool created solve new problem computer security also interesting area know much think esr dismissive post also hard place start requires lot existing understanding thing work know thing broken remember picking book early know enough time really understand hacking art exploitation course also starting company building role way founder lot learn lifetime long time specialization forever dive different thing play lot new thing fun along way esr talk joining local linux user group least realistic read post really many get anywhere easily since young drive online community find interesting think would found interesting hacker news ycombinator news site startup incubator bay area comment hit miss good one really good lot people industry hang paul graham jessica livingston founder ycombinator paul writes lot interesting essay twitter largely dependent following great place want hard know follow starting look everyone follow start le wrong programming focused decent amount overlap rationality community programming community like lot writing definitely something would liked found around time found become hacker example post like lot disputing definition article book liked linked page remember esr responding email sent getting ipod work fedora core around time read post pretty sure richard stallman responded email sent around time thought nice spirit continuing feel free reach specific question like translation thanks contribution interested reader post translated language japanese part part russian russian translation
66,Lobsters,education,Education,Introduction to Program Synthesis,http://people.csail.mit.edu/asolar/SynthesisCourse/index.htm,introduction program synthesis,introduction program synthesis anouncements course description grading project form,introduction program synthesis anouncements recitation scheduled optional recitation friday pm room office hour scheduled office hour weekly thursday pm nearby lounge elevator pset posted pset posted found pset posted pset posted found pset posted pset posted found course description course aim give introduction program synthesis new field intersection programming language formal method ai course explore number fundamental question around problem automatically discover program user expects particular class explore following question intention question user convey intent increase likelihood synthesizer produce desired program even specification ambiguous incomplete interplay program search program verification ensure program synthesize actually deemed correct potentially brittle verification mechanism use verifier advantage help synthesize program faster interplay program synthesis deep learning reconcile symbolic technique traditionally used synthesis verification deep learning explore question context learningtosynthesize differentiable programming paradigm program synthesis beyond software engineering course also discus application program synthesis beyond automated programming domain one generalize small number example produce interpretable model grading course graded based three handson assignment well final project get apply concept learned course problem choice sign receive graduate credit course three problem set involve additional problem suitable graduate student expected read original paper course material derived final project also additional requirement term depth expected project assignment assignment assignment project psets due posted day late penalty point per day maximum day project important part grade term project student demonstrate mastery topic covered course project apply concept course new problem explore new techniqes project grade based following benchmark team composition must register team wednesday feb form onepage project proposal proposal describe plan project proposal include information preliminary work towards project example reference paper read related plan tool decided use project presentation oral presentation last week class report outcome project project report report seven page format provided project graded based quality execution originality scope necessary positive result order obtain full credit graduate v undergraduate credit getting graduate credit course expectation term originality project higher undergraduate credit particular getting undergraduate credit project simply compare existing technique example applies existing tool problem interested describes result sufficient graduate credit expect technical novelty involve exploring variation existing technique application problem technique applied project grade depend whether result positive negative well executed webpage earlier version course found
67,Lobsters,education,Education,The Six Levels of Interaction with a System,https://www.charlieharrington.com/the-six-levels-of-interaction-with-a-system,six level interaction system,learning car six level interaction system stratecherystyle excalidraw web app wait whystyle apple iie level nonuse level use level monitor level maintain level repair level build example nonuse use monitor maintain repair build repair rebuild fact line level meant porous nonuse use monitor maintain repair build right way learn new system note instructional design khan academy jeremy howard rachel thomas fastai deep learning course next asked lifelong learner footnote,recently borrowed friend car awesome along key gave u uh proviso couple quid pro car take expensive kind gas trunk nt always open outside dash say taillight need add oil every mile might need oil change nodded throughout yup need premo gas trunk weird okay taillightlightsnotalright good know oil yes oil thing car need meanwhile caught thinking wow really know lot car one nt dad know take car apart put back together know get star super mario sure learned stuff car growing changed flat tire pinch helped dad replace brake pad monstrous suburban sorta payed attention helped change oil old blue beloved sky blue blazer fact never owned car adult life hello cityliving intermittent unavoidable road trip semicontent customer zipcar never forced face reality learning car sure like even starting fantasize acquiring rusted hulk old volkswagon beetle depositing via crane garage workshop lair tearing apart rebuilding anew first principle rediscover invention internal combustion manufacture one prettysweet ride fantasy come well told beetle relatively straightforward engine beginner though quite sure exactly mean quite frankly alltofamiliar headspace intimidated mention changing oil brain race ahead rebuilding car scratch order understand needed change oil entirely different car jump way wanting understand thing first principle maybe mostlysuccessful ideal aspire learned programming adult patternmatching complex system certainly able productive system far advance knowing build scratch nt interface brings following shower thought six level interaction system six level interaction system nonuse use monitor maintain repair build yes zeroindexed obviously want see ben thompson stratecherystyle diagram thanks excalidraw web app excellent box drawing tool add wait whystyle little stick figure funny enough concentriccircle approach probably make sense anyway yes vintage apple logo color literally help hard enough write another post apple iie let go level onebyone continuing use car example level nonuse ca nt use system nt know drive car level use use primary purpose system know drive car safely go reverse pas driver test level monitor know observe secondary signal system car know occasionally review dashboard thing like engine light nt necessarily know signal know thing probably mention someone like mechanic hey guarantee level maintain comfortable enough previous monitoring signal handyness word routine maintence system add washer fluid get low replace dead battery add air tire gas station level repair know fix subsystem overall system necessary important one probably one break often change tire replace brake pad fix broken headlight level build know tear apart system completely rebuild scratch understand subsystem make work together take apart volkswagon beetle put back together levitate example sure charlie worked conveniently car example stuff great question investing nonuse nt invest anything use invest money able checkin return monitor compare return alternative investment maintain make slight adjustment based alternative repair fix gaping hole major problem investing strategy build design custom investment strategy anyone else okay admittedly repair rebuild blended bit think fine fact line level meant porous level could probably serious level stuff even level nonuser probably know enough popculture context clue level user proper motivation let try another example using desktop computer nonuse nt know use computer evil use use computer stuff go online write document print use spreadsheet play minecraft monitor notice browser slower normal running hard drive space maintain empty trash bin delete old unused apps repair remove sketchy ad company browser extension parent computer restore computer data backup drive build take apart computer install new hard drive reinstall operating system suppose example transitioned noncomputeruser way computer technician patently obvious level understanding even beyond level skill able take apart computer install something new like hard drive even work memory work physic truth onion infinite outer level may prove useful encounter unknown system often money made advanced level sell skill lower leveler going fix cavity going pay expert level dentist pinch desertisland pinch sure could figure castawaystyle dentistry yet desert island nt want take time go beyond level kindagross system teeth situation floss mostly every day put squarely level bet making time level work worth given effort compared toothless friend preceeding level right way learn new system nt know one hand knowledge stack previous prerequiste knowledge probably helpful know arithmetic tackling algebra hand ever want use something use system primary intended purpose maybe worth digging deeper least initially learn drive nt start box car part skeleton frame burned cheverolt much wish got behind wheel watching countless vhs tape instructional material learned drive straightup level car question consider goal answer guide set north star onionlevelspectrumchartthing note instructional design great course great teacher take strong viewpoint towards question sal khan khan academy seems take former approach stacking layer prerequisite knowledge nugget knowledge graph go counting category theory everywhere inbetween approach make learning math trackable digestible relying momentum quick win gameification keep student motivated whereas jeremy howard rachel thomas fastai deep learning course go straight level making student feel comfortable using deep learning cool thing first start peeling back layer good word choice think given context complexity beneath surface case finding right way motivate student right answer fact adore course project even think failed student case khan academy lost motivation much learn enough time completely mathlife much want case fastai became selfconscious linear algebra skill well past level stuff next asked lifelong learner sixlevels thing brilliant new grand unified theorem learning system course probably butchering existing theorem oversized coffeetablesized book mental model nt point mental model reuse thereom still going call help think priority system want become level next year car probably still watch youtubes figure put oil footnote actual quid pro quos exchanged merely wanted quote genie
68,Lobsters,education,Education,Remote education does not require giving up rights to freedom and privacy,https://www.fsf.org/blogs/community/remote-education-does-not-require-giving-up-rights-to-freedom-and-privacy,remote education require giving right freedom privacy,end year zoom proctoru proctorio examity increased use remote communication email list collaborative resource page student revolt online proctoring data protection procedure entirely infallible added stress student inequality issue privacy concern cory doctorow open letter australian student group petition free conferencing video implementation class zoom new york city banned zoom usage microsoft team facebook messenger room service weschool temporary platform etherpad nextcloud discourse recommendation list major difference community turned school choice jitsi meet gnulinux group offer publicly advocacy matter donating remote communication email list creative common attribution,country around world beginning long slow recovery coronavirus school university may continue struggle give student quality education using remote communication service end year need continue class exam school administrator ended relying proprietary conference tool like zoom stay connected unfortunately turning contracting proctoring business name like proctoru proctorio examity monitor testing exam increased use proprietary testadministering software dangerous development software proprietary nature inherent purpose exposing student case family data proctor scheme like user end sacrificing personal information biometric data software proprietary possibility understanding work besides leaking personal data could also create security concern deliver bad quality test result requiring student cede control entire computer test proctoring company fundamentally unjust worse sure nonfree software dependency accompanying surveillance technique rolled back social distancing guideline longer enforced important decision made education sector first foremost ethically motivated free software foundation fsf started free communication working group initiative include remote communication email list well collaborative resource page documenting sharing free communication tool help spread awareness ethical choice made also assisting educational professional offering class online using free software reading many story activism education larger community want share inspired motivated u need people like around world vocal critical infringement user freedom area remote learning student revolt online proctoring educational institution scrambling offer remote learning online proctoring company used well fall business require student identify valid id give consent access browser history course consent hardly meaningful since student given option take test without monitoring mean either submit monitoring flunk exam student made give tour bedroom desk anything proctor demand order establish cheatsafe environment asked waive right company record webcam microphone student keystroke screen mouse movement even facial expression student also forced consent organization right retain much gather student computer bedroom daily mail report examity fine print note student handed data risk data protection procedure entirely infallible report centered around added stress student inequality issue well naturally privacy concern cory doctorow highlighted issue software design allows organization hijack student hardware leaving outside control even exam finished user want stop student australia took matter hand forcing institution global medium recognize issue hand thirteen group australian national university anu wrote open letter calling university find alternative approach acceptable student anu open letter gained traction medium australian student group followed lead washington post report faculty group california also recognized privacy digital right student could sacrificed purpose expediency takehome final exam netherlands student university tilburg started petition use proctoring software currently signed almost time free conferencing video implementation class seen many report danger using proprietary conferencing tool like zoom recently zoom gotten enough negative attention new york city banned zoom usage school sadly favor equally dangerous nonfree microsoft team recently launched facebook messenger room service also receiving fair share criticism hope yet government institution expressing concern actively looking preserve people freedom italy weschool organization dedicated digitization italian school decided opt jitsi proprietary tool like zoom help teacher bring class online nt know full extent commitment freedom effort provide platform teacher aiming respect student freedom videoconferencing significant part education laudable nearly two million student connect collaborate learn via video help organization france temporary platform built french government offering teacher employee french ministry national education access free software application like etherpad nextcloud discourse tool also recommendation list free software tool help u get social distancing san antonio de benageber near valencia spain one free software advocate made major difference community javier sepulveda informed child school intended continue teaching weekly lesson using proprietary videoconferencing software realizing isolated decision affecting child javier turned school choice towards free software instead convincing teacher set jitsi meet instance virtual private server vps enough resource able offer server school well also continues work local english school singlehandedly mitigating spread proprietary software community together local gnulinux group proceeded set another server could offer publicly advocacy matter logical seek remote connection time let forget business filling pocket decision made urgency wrong open student personal information proprietary software company require student use specific company proprietary product order get credit javier put need make decision based welfare child young people future stake example show advocacy matter small success need make difference give others confidence take stand time accept decision unique position placed stand continue fight right lay bare issue solution organization struggling make right decision support effort sharing knowledge giving feedback institution making decision right wrong donating fsf organization fighting freedom speaking publicly success success story share share remote communication email list would happy help story heard illustration copyright free software foundation inc zoë kooyman licensed creative common attribution international license
69,Lobsters,education,Education,A Programmer's Guide to Find and Replace,https://about.sourcegraph.com/blog/a-programmers-guide-to-find-and-replace,programmer guide find replace,find replace find replace editor find replace outside editor local machine making largescale code change tractable find replace editor regular expression posix extended regular expression capturing group keyboard macro multiselect emacs vim intellij defined file v code sublime text intellij pretty cool stuff semantic refactoring language server protocol ecosystem language server find replace outside editor grep sed function ripgrep codemod codemod ast jscodeshift recast comby comby hole syntax combylive beyond local machine google call lsc largescale change devotes entire chapter campaign wrapped error campaign documentation reading,much programmer boil automating tedium work like spend life focusing design beautiful abstraction algorithm get dirty quickly whether newbie seasoned engineer chance struggle daytoday task seem take longer one recurring challenge find replace find replace encompasses huge variety renames refactors transformation might want apply code name example making change public api updating downstream consumer changing function signature updating every call site converting bunch data one format another eg xml json identifying fixing common antipatterns improve code quality hand would mindnumbing assistance turn wide variety findandreplace tool many tool varying degree applicability expressivity easeofuse easeoflearning scalability pick right one begin may go progression like start manual findreplace maybe regex editor bite bullet finally learn grep sed longer constrained bound editor get annoyed wth grep sed find tool like ripgrep rg codemod maybe dive rabbit hole parser slog reading ast spec writing tree traverser quest ever greater efficiency discover comby awesome new patternmatching language code use execute really really large crucial change across organization code post cover leg journey new get introduction many tool use slay monster tedium along programming journey already veteran odysseus feel free skip last two part post covering comby largescale code change campaign cover find replace editor find replace outside editor local machine making largescale code change tractable find replace editor code editor offer sort findandreplace facility basic level literal string substitution enables find instance foo replace bar however many case want apply general change pattern replace one word another adding argument function fixing common antipattern standardizing library usage transforming data one format call tool express pattern transformation regular expression commonly used patternmatching language regular expression commonly abbreviated regex code editor support regex searching commonly toggled using button icon symbol regexes stuff like description regex match match find symbol name starting foo foow foobar barfoo find character double quote hello world hello world find reference field certain variable basew basepath basepath different dialect regex post use posix extended regular expression unfamiliar need quick refresher overview syntax alphanumeric character generally interpreted literally mean zero preceding character mean one preceding character mean zero one preceding character match single character character set example abc match either b c azaz match upper lowercase letter match character set many shorthand character class also exist match alphanumeric character match literal period use w match alphanumeric character underscore equivalent w match nonalphanumeric character match single character whitespace eg space tab match nonwhitespace character b match word boundary also group part regex group treated single unit abc match abc abcabc abcabcabc regex notion capturing group findreplace operation capturing group capture part overall match referenced replacement pattern example regex replacement pattern reverse order argument function call input output myfunc foo bar myfunc bar foo regex myfunc w w replacement pattern myfunc regex literal parens escaped unescaped parens capture part match correspond argument function one thing note regex abundance special character character special meaning mean need escape want literally match character would nt bad fact character also occur abundantly code mean regex often include many escape sequence add grouping mix soon end something quite unreadable alleviate readability issue number regex visualizer use understand going even visualization however regexes often difficult read write may take multiple attempt debugging session arrive correct incantation properly express findandreplace pattern like apply keyboard macro multiselect one way address readability issue regexes editor use keyboard macro instead keyboard macro feature editor eg emacs vim intellij let record keystroke replay later describe change like make set keystroke keyboard macro much easier execute regex findandreplace let say want add additional parameter call site function errorutilhandler defined file emacs describe change like make following keystroke ctrlx begin recording macro ctrls errorutilhandler search pattern ctrlaltn ctrlb jump one character end parens default space value add default value new argument ctrle move cursor end line ctrlx finish recording macro recorded macro replay keystroke cx e hold e apply repeatedly another example involving data transformation say want turn html table like table tr td john td td td tr tr td alice td td td tr tr td pat td td td tr table json list like name john age name alice age name pat age keyboard macro emacs type ctrlx begin recording macro ctrls ctrlf move cursor john ctrl space ctrla ctrlw delete everything line prior john altf put double quote around john ctrl space ctrls ctrlw delete everything end john space altf space put quote around add comma ctrla ctrln move cursor beginning next line ctrlx finish recording macro look like real time related feature editor eg v code sublime text intellij multiselect enables creation multiple cursor selection short clip using multiselect v code tackling htmltojson transformation pretty cool stuff multiselect keyboard macro multiselect powerful supported editor also work best change relatively simple limited file opened editor semantic refactoring many editor editor plugins support refactoring code using knowledge language semantics refactoring capability built using compiler library achieve degree accuracy precision intellij family ides support semantic refactoring supported language language server protocol aim enable ecosystem language server provide semantic capability across many editor language consult editor documentation plugin ecosystem see semantic refactoring supported language semantic refactoring sometimes go different name like intellisense code intelligence structural search replace downside semantic refactoring specific language separate integration language must created mean frequently language working may unsupported editor choice especially true language something like html shell innumerable yaml json xml schema even language supported transformation must described term modification parsed ast making arbitrary modification ast requires writing code involves significant time investment consequently semantic refactoring tool often provide outofthebox transformation cover common type refactorings renaming function adding additional parameter transformation fit one readymade template extremely accurate powerful tool make broad change across file editor workspace transformation fall one template luck find replace outside editor thus far focused findandreplace inside editor feature powerful constrained able edit editor number reason make code modification outside editor editor nt make easy apply type transformation want might modifying file place editor nt available eg server might applying change across file want open editor might want apply largescale change across code nt exist local machine general rule larger universe code care whether universe large proprietary codebase universe open source likely need find replace outside editor need add tool toolbox grep sed grep program scan text file linebyline print line match regular expression sed tool match transforms text using regular expression extremely versatile useful tool programmer toolbox suppose adding additional parameter errorutilhandler function need update call site function pas default value extra argument oneliner grep sed grep lre errorutilhandler xargs sed e shandler handler default value fit one line clearest thing world let break part description grep using grep generate list filename may contain specified pattern feed sed actual replacing necessary performance reason running sed file repository slow lre l flag tell grep print filename r flag tell grep recursive search current directory e flag tell grep use extended regex syntax use throughout post errorutilhandler regex pattern selects match like errorutilhandler serverepobadge note regex nt match expression want replace exactly purpose filter small enough set filename pas sed unix pipe forward standard output previous command standard input following command xargs program wrap command map standard input command line argument sed take filename command line argument necessary map output grep command line argument sed sed sed transforms content file using regex replacement pattern flag tell sed modify file place rather printing transformed content standard output e flag tell sed used extended regex syntax shandler handler default value specifies replacement pattern bit doozy let break even actually expression sed language substitute command character immediately specifies delimiter separate argument case make character want long consistent first argument handler regular expression matching group capture argument function call second argument handler default value replacement pattern reference regex capture group clear mud nt alone grep sed powerful tool super beginnerfriendly ripgrep rg newer alternative grep faster userfriendly default eg nt need remember set flag like get behavior want oneliner rewritten ripgrep instead grep rg l errorutilhandler xargs sed e shandler handler default value better still little gnarly good part reason grep sed considered hard regexes hard codemod one way alleviate pain finding replacing regular expression interactively approach taken codemod would use codemod add additional argument errorutilhandler call site codemod extension go errorutilhandler errorutilhandler default value part description codemod codemod command turn multiline matching nice getting sed match multiple line bit pain search recursively current directory extension go restrict search file ending go errorutilhandler find regex capturing group errorutilhandler default value replace pattern run command codemod prompt accept reject make edits change interactivity nice difficult write regexes work correctly first try decide need refine regex exit codemod remember place pick left also option manually editing given match useful handling edge case regex replacement pattern wrong thing codemod also python api expressing interactive transformation python code useful describing complex change import codemod codemodquery runinteractive certain editor editor plugins support semantic refactoring commandline tool library support modifying code transforming ast javascript world two popular tool jscodeshift recast similar tool exist language fantastic change complex enough require full expressivity type safety editing ast downside learn new tool language tool might yet exist language may lack certain feature describing change term transformation ast probably write code learn structure language ast transformation hard time touching textual part source code represented ast example content string literal comment comby another way alleviate pain regular expression nt require diving deepend languagespecific semantic analysis use textual pattern matching language suited code comby fairly new tool introduces simple new syntax matching common pattern code aim expressive userfriendly regex domain comby oneliner handle adding extra argument errorutilhandler rg l errorutil xargs comby inplace errorutilhandler errorutilhandler default value part description rg l errorutil use ripgrep print name code file contain errorutil xargs pipe filename comby comby inplace edit file inplace comby cli errorutilhandler match pattern submatches argument using comby hole syntax errorutilhandler default value replace pattern reference submatched hole contrast relative readability comby example regex wrote sed earlier post comby also express pattern expressed regex consider following call site errorutilhandler someotherfunction blah call site would selected earlier regular expression nt account nested parens could update regex account one layer nested parens errorutilhandler w w w doublenested parens triplenested parens perfectly valid code accomodate make regex longer matter long made still could nt full capture trying describe difficulty point general limitation regular expression express nestable bookend pattern form delimiter stuff delimiter pattern everywhere code string constant foo function call foo bar control block array literal regular expression express pattern comby make easy example description comby invocation reverse function argument order comby myfunc myfunc convert html table json comby tr td td td td tr update go error handling use wrapped error comby fmterrorf head tail err fmterrorf head w tail err comby advantage summed two word expressivity ergonomics expressivity capture pattern involve nested delimiters inexpressible regex ergonomics unlike regex comby special character comby pattern generally readable writable comby also support interactive mode using review flag like codemod play around live demo combylive due newness comby yet widely adopted regexbased tool like grep sed strong start predict supplant regex use case coming year beyond local machine findandreplace file local machine one thing situation need apply transformation across universe code exists beyond local file working company might something like adopting consistent logging standard across service application working open source might updating caller deprecated library function hundred downstream dependency either case trivial becomes intractable large enough scale problem widespread especially across large software organization increase severity coming year interdependent universe code continues expand google call lsc largescale change devotes entire chapter flamingo book software engineering google various name heard include largescale refactoring largescale codemods code shepherding code change campaign call simply campaign anecdote startling inside organization even small campaign take month even year execute google invested million dollar create internal dev infrastructure enable campaign completed tractably many development organization created tool vein typically afford invest much tool google tool usually specific organization created rarely released publicly campaign hearing thing different development team decided try build general solution hairy problem largescale code transformation starting sourcegraph initiate execute campaign sourcegraph example suppose organization decided want standardize error handling across codebase particular want use wrapped error go code mean want ensure instance fmterrorf use w format verb rather without campaign shepherding tool would involve cloning repository onebyone running findreplace script locally manually pushing branch opening pull request repository affected change lot tedious repetition occupy multiple day time campaign create json file named wrappederrorsactionjson following content scopequery repo githubcomsourcegraph fmterrorf step type docker image combycomby args inplace fmterrorf head tail err fmterrorf head w tail err matcher go work scopequery field selects set repository run change step field specifies sequence command docker container run repository case using comby docker container find instance fmterrorf end err format string replace w using src cli run src action exec f wrappederrorsactionjson createpatchset clone repository sandbox apply transformation upload patchset sourcegraph also print link click turn patchset campaign clicking link create campaign enter title description campaign click create draft examine pull request click publish verified proposes desired change repository sourcegraph single dashboard monitor progress pull request campaign example used comby simplest thing use campaign support findreplace tool run local command docker container comby codemod grep sed custom script fair game campaign currently beta available sourcegraph version later read campaign documentation learn reading interested learning tool covered post useful resource
72,Lobsters,education,Education,A Game Designer Walks Into NASA Astronaut Training,https://www.youtube.com/watch?v=RRduBxiW6ho,game designer walk nasa astronaut training,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature yow jennifer scheurle game designer walk nasa astronaut training youtube,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature yow jennifer scheurle game designer walk nasa astronaut training youtube
73,Lobsters,education,Education,Matching binary patterns with Erlang,https://dev.to/l1x/matching-binary-patterns-11kh,matching binary pattern erlang,complete example creating request sending receiving processing response first bit processing response rest http githubcommnperlangntp http,erlang easy construct binary bitstrings matching binary pattern running mitchell perilstein excellent work ntp erlang thought going use explain bitstrings binary work erlang two concept bitstring sequence zero bit number bit need divisible binary number bit divisible syntax follows element specifies certain segment bitstring segment set contiguous bit binary necessarily byte boundary reallife example let unpack bit going worth knowing whole syntax value sizetypespecifierlist value sizetypespecifierlist alternatively ei value value size valuetypespecifierlist value sizetypespecifierlist mean reallife example value size bit four value bit size specify type specifier typespecifierlist list type specifier order separated hyphen dash default value used omitted type specifier following type specifier supported type integer float binary byte bitstring bit default integer byte shorthand binary bit shorthand bitstring signedness signed unsigned matter matching type integer default unsigned endianness big little native nativeendian mean endianness resolved load time either bigendian littleendian depending native cpu erlang machine run endianness matter type either integer float default big complete example one simplest protocol ntp header file look like following used request response let craft request first createntprequest based header structure see integer li integer version number integer mode stratum poll precision need set first value rest bit let try wild creating request request sending receiving use erlang builtin function one genudp pretty comprehensive lowlevel udp implementation want open local socket indicates pick random local port activefalse mean need receive ok socket genudp open binary active false genudp send socket request ok address port resp genudp recv socket ok processing response first bit response binary need slice dice similarly created request resp first get first bit restbinary resp li li version version mode mode work rest header bit tricky bitstring syntax easy manage processing response rest finally matching mandatory field resp making sense value requires bit legwork first need utility function binary fraction erlang function arity differentiates function following binfrac bin binfrac bin binfrac frac frac binfrac bin n frac binfrac bin bsr n frac bin band n function implement one process response return value interested offset unix epoch processntpresponse ntpresponse ntpresponse nowms now nowus erlang timestamp nowtimestamp nowms now transmittimestamp xmti binfrac xmtf li li vn version mode mode stratum stratum poll poll precision precision rootdelay rootdel rootdispersion rootdisp referenceid referencetimestamp rtsi binfrac rtsf originatetimestamp otsi binfrac otsf receivetimestamp rcvi binfrac rcvf transmittimestamp transmittimestamp clientreceivetimestamp nowtimestamp offset transmittimestamp nowtimestamp wit process response precision originatetimestamp offset please note first step ntp workflow implement complete ntp protocol take consideration bunch detail next time might look implement simple server like dns erlang michael original work http githubcommnperlangntp date version elixir port http
74,Lobsters,education,Education,How Users Read on the Web (1997),https://www.nngroup.com/articles/how-users-read-on-the-web/,user read web,research people read website user read email newsletter scannable text keywords subheading list one idea inverted pyramid half word count credibility important credibility increased outbound hypertext link detested marketese measuring effect improved web writing measured usability better usability promotional writing control condition concise text scannable layout objective language combined version promotional language imposes cognitive burden full report eyetracking report user read web,research people read website found percent test user always scanned new page came across percent read wordbyword update newer study found user read email newsletter even abruptly read website result web page employ scannable text using highlighted keywords hypertext link serve one form highlighting typeface variation color others meaningful subheading clever one bulleted list one idea per paragraph user skip additional idea caught first word paragraph inverted pyramid style starting conclusion half word count le conventional writing found credibility important web user since unclear behind information web whether page trusted credibility increased highquality graphic good writing use outbound hypertext link link site show author done homework afraid let reader visit site user detested marketese promotional writing style boastful subjective claim hottest ever currently prevalent web web user busy want get straight fact also credibility suffers user clearly see site exaggerates measuring effect improved web writing measure effect content guideline identified developed five different version website basic information different wording site navigation user perform task different site shown table measured usability dramatically higher concise version better scannable version better combined three idea improved writing style single site result truly stellar better usability site version sample paragraph usability improvement relative control condition promotional writing control condition using marketese found many commercial website nebraska filled internationally recognized attraction draw large crowd people every year without fail popular place fort robinson state park visitor scott bluff national monument arbor lodge state historical park museum carhenge stuhr museum prairie pioneer buffalo bill ranch state historical park definition concise text half word count control condition six bestattended attraction nebraska fort robinson state park scott bluff national monument arbor lodge state historical park museum carhenge stuhr museum prairie pioneer buffalo bill ranch state historical park scannable layout using text control condition layout facilitated scanning nebraska filled internationally recognized attraction draw large crowd people every year without fail popular place fort robinson state park visitor scott bluff national monument arbor lodge state historical park museum carhenge stuhr museum prairie pioneer buffalo bill ranch state historical park objective language using neutral rather subjective boastful exaggerated language otherwise control condition nebraska several attraction mostvisited place fort robinson state park visitor scott bluff national monument arbor lodge state historical park museum carhenge stuhr museum prairie pioneer buffalo bill ranch state historical park combined version using three improvement writing style together concise scannable objective six mostvisited place nebraska fort robinson state park scott bluff national monument arbor lodge state historical park museum carhenge stuhr museum prairie pioneer buffalo bill ranch state historical park somewhat surprising u usability improved good deal objective language version better expected user would like version better promotional site indeed thought performance metric would kind language turned four performance measure time error memory site structure also better objective version promotional version conjecture explain finding promotional language imposes cognitive burden user spend resource filtering hyperbole get fact people read paragraph start nebraska filled internationally recognized attraction first reaction thought slows distracts using site full report full eyetracking report user read web available download
76,Lobsters,education,Education,Conversations with a six-year-old on functional programming (2018),https://byorgey.wordpress.com/2018/05/06/conversations-with-a-six-year-old-on-functional-programming/,conversation sixyearold functional programming,janis habilitation thesis brent,sixyearold son walked yesterday reading time reading part janis habilitation thesis unsure even start decided answer straightforwardly reading long story free theorem persisted free theorem never one shrink pedagogical challenge thought moment began know function function like machine put something one end something come end example maybe put number number one bigger come put three four come put six seven come clearly made sense continued type function machine tell kind thing put kind thing come maybe put number get number maybe put list number get number interrupted excitedly maybe could put word yes exactly maybe put word get word maybe function machine put function machine get function machine gasped astonishment idea putting function machine function machine concluded free theorem say something always true function machine know type know anything inside seemed bit beyond fair free theorem interesting polymorphism involved definitely want go whole conversation given different idea hey good idea game said called function machine game think function machine tell thing put function machine tell come guess function machine immediately liked game huge hit want play time played driving party yesterday played morning shower far correctly guessed tried bit tough realized case may understand intuitively function trouble expressing word also problem started using obvious variant guesser think know function player switch role person came function specifies input order test whether guesser able produce correct output also surprisingly difficult guess though get right eventually think stuck idea function something arithmetical input trouble coming sort arithmetic procedure would result matter put simply occurred machine might care input interestingly many student functional programming class semester also confused constant function learning lambda calculus really wanted substitute input somewhere upsetconfused fact bound variable occur body round guessing function wanted come function guess knew would sometimes function great sometimes make sense usually idea function change time course sincerity denies fun either way finally understood came function something like inspired think kindergarten class learning pair number added definitely one better parenting day brent assistant professor computer science hendrix college functional programmer mathematician teacher pianist follower jesus
77,Lobsters,education,Education,The OAuth Bible [2016],https://github.com/Kong/mashape-oauth/blob/master/FLOWS.md,oauth bible,oauth bible nijikokun kong mashape analytics hey guardian table content terminology signed request one legged two legged three legged echo xauth twolegged threelegged refresh token tip trick tool source terminology reference w http enwikipediaorgwikirsa algorithm signed request signature base string twitter note encoding signature note oauth header complex thing oauth onelegged note r signed oauth twolegged signed signed oauth threelegged signed signed note oauth echo oauth xauth note oauth twolegged note client credential resource owner password oauth threelegged fun fact http localhostoauthcodecallback scopeuser oauth refresh token tip trick generating access token refresh key example tool guardian grant simov oauthd source authorizing oauth oauth bitbucket oauth documentation oauth extended flow oauth oauth consumer request oauth example oauth guide oauth diagram oauth wiki oauth oauth oauth list service provider oauth echo oauth echo advanced api xauth implementing signin web application flow quickstart authentication mechanism understanding web server oauth flow csrf oauth resource owner flow,oauth bible tried make understandable possible party reading mean wording reference terminology used may reflect technical paper resource excuse may wish understand degree understanding legal technical jargon created love nijikokun mashape team behing os api management layer kong mashape analytics visualizing monitoring api traffic hey interested simplifying process consume oauth service like twitter facebook github thousand check guardian built simplicity security ease use mind allowing consume oauth single request table content reference terminology signed request oauth one legged two legged three legged echo xauth twolegged threelegged refresh token tip trick tool source terminology reference signed signature string made several http request element single string include request method url query parameter encrypted key consists consumersecret tokensecret case may key plaintext may use simply consumersecret rsa encryption consumer secret usually given application secret token starting oauth handshake consumer key key usually given alongside consumer secret oauth handshake nonce uid uniquely generated id given length using charset default usually character long oauth token token sent server endpoint refer either request access token oauth token secret secret generally sent response certain token used exchange refreshing query part url contains keyvalue data invoked symbol key value seperated sign datastore seperated symbol querylooks likethis parameter argument snippet information name reference oauthtoken helloworld oauthtoken parameter argument helloworld value plaintext signature encryption method plain text human readable text w signature encryption method secure hash algorithm method encrypted text w http enwikipediaorgwikirsa algorithm signature encryption method secure hash algorithm coupled public private key may seen used github account one point also ssh service provider information datasource supplying use twitter example service signature method oauth accepted encryption method one following plaintext value information relation something parameter url uri location internet resource locator signed request section regard oauth signing request signature section look signature process handled parameter used reference flow signing request application take information given gathered generated place single location two way transporting information oauth header query string generate string must gather required parameter value used inside string directly others indirectly encryption encoding signature signature base string gathering method request url request case oauth echo verifying credential uri query string joined together symbol would look like without encryption example twitter post http includeentities signing key signature base string encrypted salt called signing key joining oauth consumer secret token secret character like note sometimes case rsa xauth signing key may consumer secret symbol appended insight check line mashapeoauthliboauthjs encoding signature last able encode signature using two string information read terminology guide would know three way plaintext hmac rsa method slightly different plaintext ignore encoding simply pas along signature key encoding method output key binary update base step get encoded final signature string complex side encoding security rsa method encode generated private key signature base note line mashapeoauthtestsoauthjs may clear use generated private key encode signature base service side verify public key generated alongside private key encoded string passed oauthsignature oauth header oauth header part signed request contains oauthsignature oauthsignaturemethod parameter value single string separated generally comma space supported service stick comma default unless told otherwise service named authorization oauth bearer flow may change oauth mac bearer similar method header built oauth parameter sorted name complex thing example taken twitter getting request token post oauthrequesttoken useragent themattharris http client host apitwittercom accept authorization oauth oauthcallback http oauthconsumerkey oauthnonce oauthsignature oauthsignaturemethod oauthtimestamp oauthversion oauthcallback twitter invoke respond authentication step happens service tell successfully confirmed information oauthcallbackconfirmed token de facto situation let see example response ok date thu oct gmt status ok contenttype texthtml contentlength pragma nocache expires tue mar gmt cachecontrol nocache nostore mustrevalidate vary acceptencoding server tfe oauthcallbackconfirmedtrue great response oauthtoken oauthtokensecret oauthcallbackconfirmed parameter perfect use oauthtokensecret creating signature access token oauthtoken authenticating request generally oauthtoken sent along query parameter oauthtoken token go authenticate endpoint oauth request give back oauthtoken oauthverifier used well access token request oauth onelegged commonly known twolegged actually one legged one step thus standing one leg note google requires unorthodox nonoauth parameter must added query string url request called xoauthrequesterid r also deprecated favor application sends signed request service giving oauthtoken empty string oauthconsumerkey oauthtimestamp oauthnonce oauthsignature oauthsignaturemethod oauthversion optional service validates grant access resource application utilizes requested resource probably quickest method consuming oauth implementation however come security drawback decide whether best application oauth twolegged real twolegged oauth implementation lucrative like finding diamond rough also avoid user authentication step follow flow oauth application sends signed request request token oauthconsumerkey oauthtimestamp oauthnonce oauthsignature oauthsignaturemethod oauthversion optional grant application request token oauthtoken oauthtokensecret additional parameter argument exchange request token access token signed request oauthtoken request token oauthconsumerkey oauthtimestamp oauthnonce oauthsignature oauthsignaturemethod oauthversion service grant access token token secret argument generally step application us oauthtoken oauthtokensecret access protected resource actual flow oauth see extra security measure place make sure secure access connection made without bothering user authorize detail oauth threelegged flow full experience grand finale whole shebang fullflow oauth complex excluding two variant user interaction middle flow usually cause confusion application sends signed request request token oauthconsumerkey oauthtimestamp oauthnonce oauthsignature oauthsignaturemethod oauthversion optional oauthcallback grant application request token oauthtoken oauthtokensecret oauthcallbackconfirmed additional parameter argument send user authorize url using prompt user authorize grant access user grant access directs back application oauthtoken oauthverifier exchange request token verifier access token signed request oauthtoken request token oauthconsumerkey oauthtimestamp oauthnonce oauthsignature oauthsignaturemethod oauthversion oauthverifier service grant access token token secret argument generally step application us oauthtoken oauthtokensecret access protected resource note step oauthverifier set failed oauth implementation probably requires oauthtoken sent rarely seen exist secure oauth implementation far yet little complicated seeing user part handshake must interact interface transaction oauth echo necessarily common oauth implementation exists created raffi twitter us two extra header initial request token step validate user behalf delegation essentially service thirdparty delegator authenticate verify user originating service twitter origin service application sends signed request along data oauthconsumerkey oauthtimestamp oauthnonce oauthsignature oauthsignaturemethod oauthversion optional oauthcallback along two additional header xauthserviceprovider xverifycredentialsauthorization service take additional header validates origin service service validates given information return protected resource information could storing image generating url returning information oauth xauth xauth way desktop mobile apps get oauth access token user email password still oauth thirdparty ask credential origin service authenticate xauth process give back readonly readwrite access token limitation apply twitter spec direct message read access provided must use full oauth flow threelegged note user credential never kept application requesting application request user credential application creates signed request access token oauthconsumerkey oauthtimestamp oauthnonce oauthsignature oauthsignaturemethod oauthversion optional oauthcallback along additional parameter xauthmode clientauth xauthusername xauthpassword xauthpermission optional scope requested token service validates user detail grant access token oauthtoken oauthtokensecret application us access token retrieve protected resource oauth twolegged far easiest explain called client credential authorization flow also basically resource owner password flow without username password appended encoded query passed along body unless service state url case wrong note using basic need additionally pas along authorization header bearer type basic value use clientid clientsecret encoded authorization basic clientid clientsecret client credential application make request service granttype clientcredentials nt using authorization header service responds access token accesstoken expiresin tokentype resource owner password basically oauth without signing complication let application request credential shown resource owner also known user application make request service using given credential query string body granttype password username password look like granttypepassword usernamemyusername passwordmypassword nt using authorization header must passed well clientid clientsecret would become granttypepassword usernamemyusername passwordmypassword clientidrandomstring clientsecretrandomsecret service responds access token detail expiration information accesstoken expiresin tokentype oauth threelegged threelegged cut lot clutter like twolegged longer thing complex signing request fun fact scope spec space seperated ie user pullrequest nobody followed left state constant wonder next api tackle us application redirects user service authorization clientid redirecturi responsetype state optional unique identifier protect csrf scope optional data application access example authorization url notencoded readability http oauthserviceloginoauthauthorize redirecturihttp localhostoauthcodecallback scopeuser user log service grant application access service redirects user back redirecturi code state application take code exchange access token clientid clientsecret code redirecturi optional see granttype authorizationcode clientid clientsecret valid service invoke callback redirecturl contains accesstoken accesstoken expiresin refreshtoken application store accesstoken use subsequent request various manner dependent service generally value stored session cookie placed request authorization bearer accesstoken header string bearer header authorization bearer name could bearer oauth mac oauth refresh token accesstoken sometimes time limited lifetime expectancy assume expiresin parameter passed along access token response stage whether live forever decay certain amount time expired token used service respond session expired invalid response error mean must use refreshtoken along previously obtained parameter generate new one lot easier whole flow create request service refresh token uri granttype refreshtoken scope optional new scope previously defined refreshtoken clientid clientsecret service validates responds following parameter accesstoken issuedat refreshtoken optional server may revoke reissue refresh token tip trick generating access token refresh key instead encrypting information using sort reversible string lot secure simply utilize method generation nonce string uuid randomly selected character specific length example var oauth require mashapeoauth oauth accesstoken oauthnonce length default tool guardian simplify consuming oauth single request grant authentication middleware express built guardian simov oauthd oauth provider server plugins engineered towards provider specific source long windy list place tracked specific information regarding certain leg auth specification excluding original rfc revision authorizing oauth flickr documentation oauth bitbucket bitbucket documentation oauth documentation twitter documentation oauth extended flow oauth oauthphp oauth consumer request oauth example termie oauth guide heuniverse oauth diagram oauth wiki oauth dzone oauth google documentation oauth nerdbank list service provider wikipedia oauth echo mobypicture oauth echo twitter advanced api vimeo developer xauth twitter xauth documentation implementing signin twitter signin documentation ietf web application flow github quickstart salesforce authentication mechanism geoloqi understanding web server oauth flow salesforce csrf springsource oauth ietf resource owner flow hybris
78,Lobsters,education,Education,Back to Basics (2001),https://www.joelonsoftware.com/2001/12/11/back-to-basics/,back basic,string work c strcat kernighan ritchie real number strcat strcat strcat strcat mystrcat fucked string null terminated pascal string strcat buffer overflow strlen strcat malloc malloc malloc free malloc malloc malloc malloc strcat stan eisenstat realloc realloc lg n string stringbuilder wrote select author book select author book book book author pointer select author book strcat malloc,spend lot time site talking exciting big picture stuff like net versus java xml strategy lockin competitive strategy software design architecture forth stuff layer cake way top layer got software strategy think architecture like net individual product software development product like java platform like window go lower cake please dlls object function lower point thinking line code written programming language still low enough today want think cpu little bit silicon moving byte around pretend beginning programmer tear away knowledge built programming software management get back lowest level von neumann fundamental stuff wipe mind moment think byte think biggest mistake people make even highest architectural level come weak broken understanding simple thing lowest level built marvelous palace foundation mess instead nice cement slab got rubble palace look nice occasionally bathtub slide across bathroom floor idea going today take deep breath walk please little exercise conducted using c programming language remember way string work c consist bunch byte followed null character value two obvious implication way know string end string length without moving looking null character end string zero store arbitrary binary blob like jpeg picture c string c string work way microprocessor unix c programming language invented asciz string type asciz meant ascii z zero end way store string fact one worst way store string nontrivial program apis operating system class library avoid asciz string like plague let start writing version code strcat function appends one string another void strcat char dest char src dest dest dest src study code bit see first walking first string looking nullterminator find walk second string copying one character time onto first string kind string handling string concatenation good enough kernighan ritchie problem problem suppose bunch name want append together one big string char bigstring never know much allocate bigstring strcat bigstring john strcat bigstring paul strcat bigstring george strcat bigstring joel work right yes look nice clean performance characteristic fast could scale well million string append would good way code us shlemiel painter algorithm shlemiel guy joke shlemiel get job street painter painting dotted line middle road first day take paint road finish yard road pretty good say bos fast worker pay kopeck next day shlemiel get yard done well nearly good yesterday still fast worker yard respectable pay kopeck next day shlemiel paint yard road shout bos unacceptable first day ten time much work going help say shlemiel every day get farther farther away paint extra credit real number lame joke illustrates exactly going use strcat like since first part strcat scan destination string every time looking dang null terminator function much slower need scale well lot code use every day problem many file system implemented way bad idea put many file one directory performance start drop dramatically get thousand item one directory try opening overstuffed window recycle bin see action take hour show clearly linear number file contains must shlemiel painter algorithm somewhere whenever something seems like linear performance seems nsquared performance look hidden shlemiel often hidden library looking column strcats strcat loop exactly shout nsquared happening fix smart c programmer implemented mystrcat follows char mystrcat char dest char src dest dest dest src return dest done little extra cost returning pointer end new longer string way code call function decide append without rescanning string char bigstring never know much allocate char p bigstring bigstring p mystrcat p john p mystrcat p paul p mystrcat p george p mystrcat p joel course linear performance nsquared suffer degradation lot stuff concatenate designer pascal aware problem fixed storing byte count first byte string called pascal string contain zero null terminated byte store number pascal string limited byte length null terminated occupy amount memory asciz string great thing pascal string never loop figure length string finding length string pascal one assembly instruction instead whole loop monumentally faster old macintosh operating system used pascal string everywhere many c programmer platform used pascal string speed excel us pascal string internally string many place excel limited byte also one reason excel blazingly fast long time wanted put pascal string literal c code write char str yep count byte hand hardcode first byte string lazy programmer would slow program char str hello str strlen str notice case got string null terminated compiler well pascal string used call fucked string easier calling null terminated pascal string ratedg channel use longer name elided important issue earlier remember line code char bigstring never know much allocate since looking bit today ignored done correctly figured many byte needed allocated right amount memory otherwise see clever hacker read code notice allocating byte hoping enough find clever way trick strcatting byte string byte memory thus overwriting stack frame changing return address function return executes code hacker wrote talking say particular program buffer overflow susceptibility number one cause hack worm olden day microsoft outlook made hacking easy enough teenager ok programmer lameasses figured much memory allocate really c make easy let go back beatles example char bigstring never know much allocate char p bigstring bigstring p mystrcat p john p mystrcat p paul p mystrcat p george p mystrcat p joel much allocate let try right way char bigstring int strlen john strlen paul strlen george strlen joel bigstring char malloc remember space null terminator eye glazeth probably ready change channel already blame bear get really interesting scan string figuring big scan concatenating least use pascal string strlen operation fast maybe write version strcat reallocates memory u open another whole worm memory allocator know malloc work nature malloc long linked list available block memory called free chain call malloc walk linked list looking block memory big enough request cut block two block one size asked extra byte give block asked put leftover block back linked list call free add block freed onto free chain eventually free chain get chopped little piece ask big piece big piece available size want malloc call timeout start rummaging around free chain sorting thing merging adjacent small free block larger block take day end result mess performance characteristic malloc never fast always walk free chain sometimes unpredictably shockingly slow clean incidentally performance characteristic garbage collected system surprise surprise claim people make garbage collection imposes performance penalty entirely true since typical malloc implementation kind performance penalty albeit milder smart programmer minimize potential distruption malloc always allocating block memory power size know byte byte byte byte etc reason intuitive anyone play lego minimizes amount weird fragmentation go free chain although may seem like waste space also easy see never waste space program us twice much memory need big deal suppose wrote smart strcat function reallocates destination buffer automatically always reallocate exact size needed teacher mentor stan eisenstat suggests call realloc always double size memory previously allocated mean never call realloc lg n time decent performance characteristic even huge string never waste memory anyway life get messier messier byteland glad write c anymore great language like perl java vb xslt never make think anything like deal somehow occasionally plumbing infrastructure stick middle living room think whether use string class stringbuilder class distinction compiler still smart enough understand everything trying accomplish trying help u write inadvertent shlemiel painter algorithm last week wrote implement sql statement select author book fast data stored xml case everybody understand talking rolling around cpu day assertion might make sense relational database implement select author book relational database every row table eg book table exactly length byte every field always fixed offset beginning row example record book table byte long author field offset author stored byte etc code move next record result query basically pointer one cpu instruction faaaaaaaaaast let look book table xml xml blah blah book book title ui design programmer title author joel spolsky author book book title chop suey club title author bruce weber author book book quick question code move next record point good programmer would say well let parse xml tree memory operate reasonably quickly amount work done cpu select author book bore absolutely tear every compiler writer know lexing parsing slowest part compiling suffice say involves lot string stuff discovered slow lot memory allocation stuff discovered slow lex parse build abstract syntax tree memory assumes enough memory load whole thing relational database performance moving record record fixed fact one cpu instruction much design thanks memory mapped file load page disk actually going use xml preparse performance moving record record fixed huge startup time preparse performance moving record record varies based length record still hundred cpu instruction long mean use xml need performance lot data little bit data fast xml fine format really want best world come way store metadata next xml something like pascal string byte count give hint thing file parse scan course use text editor edit file mess metadata really xml anymore three gracious member audience still point hope learned something rethought something hope thinking boring firstyear computerscience stuff like strcat malloc actually work given new tool think latest top level strategic architectural decision make dealing technology like xml homework think transmeta chip always feel sluggish original html spec table badly designed large table web page shown quickly people modem com dang fast crossing process boundary nt guy put display driver kernelspace instead userspace thing require think byte affect big toplevel decision make kind architecture strategy view teaching first year c student need start basic using c building way cpu actually physically disgusted many computer science program think java good introductory language easy get confused boring stringmalloc stuff learn cool oop stuff make big program ever modular pedagogical disaster waiting happen generation graduate descending u creating shlemiel painter algorithm right left even realize since fundamentally idea string deep level difficult even quite see perl script want teach somebody something well start lowest level like karate kid wax wax wax wax three week knocking kid head easy
79,Lobsters,education,Education,The Quorum Programming Language,https://quorumlanguage.com/,quorum programming language,code area output area,try quorum enter quorum code press run program saveloadembedcode areaoutput area
80,Lobsters,education,Education,Stop Making Students Use Eclipse,https://nora.codes/post/stop-making-students-use-eclipse/,stop making student use eclipse,insulates student defer learning deal ides integrated problem moving forward backwards sideways missing semester c education,using java python professional ide like intellij idea netbeans pycharm eclipse good first introduction programming computer science student whether field become web developer system software engineer academic computer science researcher ides jgrasp provide educationspecific tooling like automatic generation visualization improving comprehensibility software write linked list run code jgrasp see diagram linked list screen jgrasp educationfocused ide used integrated intellij idea ides though primarily serve two purpose student first javafocused curriculum insulates student javac command line program command line environment second catch basic mistake allows student defer learning finnicky language requirement deemed core curriculum like import file naming requirement crucially believe real problem student written statement need understand philosophy behind putting public class file public class even mean deal ides whole purpose ide provide integrated environment even name also provides homogeneous environment instructor instruct rather teaching student install java platformspecific programmer editor platform say install ide open click new project valuable introductory course avoids wasting class time lower barrier entry crucial introduce inconvenient detail eventually experience student first second year c class student tend grasp basic control structure write branch loop function use basic data structure like list map acm guidance c curriculum agrees recommend focus basic structure programming language problem solving unless figured operate computer outside confines ide taught none curriculum seen personal experience reading syllabus provided student place student get past myriad barrier constitute use computer modern day student use window taught file system caseinsensitive filesystems probably taught file system concept operating system course student use mac o taught dsstore directory irrelevant project submission student learning java know javac compiler java virtual machine least take course compiler nobody focus thing like ascii unicode program interoperate share distribute program student write introductory c curriculum focus abstract idea programming use ides accomplish problem okay student taught write code solve problem math instead grapple intricate detail eldrich monstrosity modern operating system surely good thing issue kevlin henney fond saying software nothing detail student understand file ever edited text anything microsoft word realize edit code outside ide able crucial work selfdirected learning hallmark computer science success student ever programmed java using bespoke learning library provided professor take much longer necessary figure language library approach field move fast one serious problem also undermines ability learn classroom setting going forward among fellow student merely expected merely attend every class reading problem set homework prepared learn networking git project management knowledge disconnected real world teaching someone use git difficult never taught file logical unit composed byte metadata teaching someone importance agile methodology difficult never distributed piece software even professor friend importantly though limit ability peer learn software engineering class budgeted week teach basic version control skill take twoday detour teach window user get rid crlfs commits teach mac user remove dsstore file repository get everyone set eclipse egit wasted time professor schedule time student outside class demonstrate code many student able submit code form successfully run professor computer wasted time professor student undermines important lesson portability good practice ultimately core belief student need know use computer program serious way moving forward backwards sideways clear talking mit talking cmu uc berkeley oh sorry cal even talking stanford talking place slacs four five c professor polytechnic university everywhere else place computer science computer engineering might different major even really different department different building different school move forward build computer science program prepare student build future recognize acm telling u since two three track computer science might call theoretical computer science might call computer engineering might call software engineering move forward giving student taste three enter field letting specialize wish sympathetic idea getting student programming quickly important provide standardized environment vm perhaps using something like replit ideone perhaps similar software designed specifically education use language teach fundamental paradigm interested like scheme python please please java provide support student interested thing mean teaching assistant paying help student beyond answering question homework even effective python scheme curriculum level would big improvement enough need teach student computer first foray programming take time teach student unix command line really really committed window reason powershell great piece software show student thing familiar graphical file manager instance interact new command line skill programming language interact commit teaching standardized environment student access ubuntu lts great people computer run vm school provide computer adventurous window user use wsl course mathematics foundation computer science blending perspective practical element important student learning algorithm implement real world student building software analyze appropriately alongside purely mathematical understanding model computing come exposure weird programming language like haskell erlang prolog elm etc hard change lot department especially faculty writted production software decade used nonunix o long time think good reason force student figure stuff student good understanding theory competence standard unix environment language choice exposure language better professor better engineer better web developer let improve field future computing commenter lobster pointed great resource mit around learning tooling build system missing semester c education
81,Lobsters,education,Education,CMU 15-819 - Homotopy Type Theory,http://www.cs.cmu.edu/~rwh/courses/hott/,cmu homotopy type theory,synopsis requirement academic integrity,synopsis graduate research seminar homotopy type theory hott recent enrichment intuitionistic type theory itt include higherdimensional type dimensionality type refers structure path constructive witness equality pair element type form type identity type general type infinite dimensional sense exhibit nontrivial structure dimension element path element path path finite level moreover path level exhibit algebraic structure higher groupoid meaning always null path witnessing reflexivity inverse path witnessing symmetry concatenation path witnessing transitivity grouplike law hold higher homotopy specifically higherdimensional path witnessing associative unital inverse law operation altogether mean type weak significance higherdimensional structure type lie concept typeindexed family type family exhibit structure fibration mean path two index lift transport mapping corresponding instance family fact equivalence thinking path constructive witness equality amount saying equal index give rise equivalent type hence univalence equal element universe family valued thus example think interval type two endpoint connected path iindexed family type must assign equivalent type endpoint contrast type b booleans consists two disconnected point bindexed family type may assign unrelated type two point b similarly mapping another type must assign connected point endpoint interval whereas mapping b free assign arbitrary point two booleans preservation principle central structure hott many case path structure type becomes trivial beyond certain dimension called level type convention level start continue indefinitely lowest level path structure type degenerate element element equal type said contractible essentially singleton next higher level type path two element contractible level mean two element equal element type subsingleton hproposition next level type path path element contractible two element equal one way type set whose type path equality relation hprop continuing way type level groupoids level finite level itt capable expressing set type level type may element two element may considered equal one way large swath constructive mathematics may formulated using set hence amenable representation itt computing application among others require set example often necessary suppress distinction among element type avoid overspecification called proof irrelevance traditionally itt enriched ad hoc treatment proof irrelevance introducing universe proposition computational content hott proposition type level requiring special treatment distinction type arise propositional truncation type render degenerate path structure type level ensuring two element equal sense path propositional truncation one example higher inductive type one defined specifying generator element also higherdimensional path propositional truncation type one includes element type addition path two element rendering equal limiting case quotient type certain path element introduced according whether deemed related higher inductive type also permit representation higherdimensional object sphere arbitrary dimension type simply specifying connectivity property example topological circle consists base point path starting ending point topological disk may thought two half circle connected higher path fill interior circle higher path structure type set neither construction product two circle univalence axiom implies equivalence type isomorphism isomorphism determines path universe containing type since two type equivalent many way example distinct bijections two set univalence give rise type set rather higher level dimension univalence axiom mathematically efficient allows u treat equivalent type equal hence interchangeable context informal setting identification often made convention formal homotopy type theory identification true equation requirement class open phd student undergraduate graduate student permission instructor course selfcontained wellprepared student background formal logic prior experience simple type theory letter grade assigned class taken expectation fulfilling course requirement degree credit full participation required student pas course student required complete assigned homework timely manner later one week assigned review teaching assistant please send homework pdf favonia student required participate weekly notetaking process week two student responsible preparing typeset course note distributed lecture monday please register student piazza web page linked academic integrity unless explicitly instructed otherwise homework exam work solely may shared borrowed person course permitted draw upon assignment solution previous instance course use course material assignment program obtained web site external source preparing work may discus homework assignment student class must adhere whiteboard policy end discussion whiteboard must erased must transcribe take anything written board discussion must able reproduce result solely discussion
82,Lobsters,education,Education,Scheme from Scratch,http://peter.michaux.ca/articles/scheme-from-scratch-introduction,scheme scratch,prerequisite k r apue assembly language step step third edition light enjoyable introduction providing sufficient level assembly knowledge sicp implement scheme scratch scheme original lambda paper ieee scheme standard scratch scheme scratch implementation incremental approach compiler construction chibi scheme jvm net clr parrot llvm integer,design implementation programming language fascinates programming language enables text file accurately communicate another person problem solution control computer execution influence language feature set way programmer think problem solution endlessly captivating idea world programming language amazing particularly interested implementing higherlevel language lowerlevel language think attracted math school construction new idea based small set axiom seems like good clear thinking building highlevel programming language appeal article may first many recording scratching itch apparently need scratching seem ignore even try book scheme implementing interpreter compiler always seems find way hand want implement scheme scratch interpreter compiler jit etc want see happens may enjoy following along prerequisite exploration novice programmer tutorial introduction novice language implementor enthusiast perspective novice language implementor enthusiast experience programming unix unixlike system linux bsd mac o x fine used common developer tool like gcc make copy k r little dog eared cherished might even copy apue prior exposure intel assembly language need assembly master general knowledge register stack heap basic instruction jeff duntemann assembly language step step third edition light enjoyable introduction providing sufficient level assembly knowledge someone even mention sicp head fill thought master magician casting alluring spell sicp spent lot time bedside table done many exercise really thing like sicp showed implementation scheme scheme chicken egg paradox bother wonder implement scheme scratch scheme many version scheme original lambda paper show various ancestor seen thread mentioned paper sicp implement several version scheme main language used sicp macro sicp show implementation lazy scheme official ieee scheme standard de facto rnrs standard totally clear make scheme scheme going worry much exactly language must enough scheme earn name know need least sexpressions garbage collection symbol firstclass lexically scoped procedure proper tail call scratch mean implement scratch upon foundation build scheme working physical computer operating system assembler linker c compiler scheme interpreter compiler another highlevel language least scratch implies building towards scheme lowerlevel system already another highlevel language philosophically write program language could implementing scheme assistance another highlevel language system already scheme use need implement scheme system scheme least pretend could enjoy implementing assume working computer bit intel processor unixlike operating system assembler linker interesting lowlevel detail building towards scheme system level one missing scope discussion perhaps grey area whether system c compiler want use build scheme unixlike system c compiler operating system tool probably written mostly c many highlevel language like scheme implemented c working c definitely working lowerlevel working scheme testament lowlevel c c often referred portable assembly given thing take c compiler gcc one available tool scheme scratch implementation many possible way implement scheme scratch bootstrap scheme quick dirty scheme interpreter implemented c le line implement many feature slow execution enough interpreter bootstrap u world scheme compiling scheme scheme assembly compiler written scheme first executed bootstrap scheme later self compiling see incremental approach compiler construction compiletoc scheme scheme c compiler written scheme provides great portability c intermediate language way machine code byte code vm scheme embeddable scheme virtual machine based bytecode compiler interpreter written ansi c portable see chibi scheme example jit engine scheme embeddable scheme engine based justintime compiler sophisticated garbage collection sure written c compiling scheme platform scheme compile scheme target platform like jvm net clr parrot llvm targeting existing platform lot education fun would missed certainly count scratch necessary write target platform also see big itch know long take scratch come surely fun implementing scheme scratch next article integer
83,Lobsters,education,Education,Setting up an email server in 2020 with OpenSMTPD and Dovecot,https://prefet.ch/blog/2020/email-server/,setting email server opensmtpd dovecot,setting email server opensmtpd dovecot sequel preparation email work agent thunderbird imap obsolete smtp dovecot postfix exim opensmtpd security tl http http starttls mitm happens let encrypt server vps openbsd freebsd netbsd gandi bad dns record essential reverse dns mx lookup mx spf sender policy framework required spf spec dkim domainkeys identified mail mandatory dkim spec dmarc domainbased message authentication reporting conformance must dmarc spec mda dovecot dovecot network hashed user mta opensmtpd opensmtpd openbsd blog user network sender rewriting scheme download bad vulnerability spam filter rspamd rspamd testing mx lookup smtp diagnostics email working dkim validator cc bysa,setting email server opensmtpd dovecot want set email server case welcome many reason run custom email server ranging privacy concern provider like google wanting fun andor learning since assume already found reason beware messy topic available documentation even messier could take get work properly compiled guide according experience attempt make dark art accessible mileage may vary considerably hope find useful guide aimed people comfortable linux bsd command line done take look sequel idea extend setup last updated preparation setting email relatively complex compared eg static website need configure one two server program need shoehorn modern security feature email stoneage design start explaining general structure mail server setup email work program involved exchange email called agent officially different type agent mua msa mta mda mra fortunately reasonable treat mra msa part mua mta respectively mail user agent mua simply client device home use send receive email guide assumes already favourite program eg thunderbird nowadays fashionable use web interface email also beyond scope guide mail delivery agent mda program watch server copy mailbox manages inbox remembers message nt read keep copy draft etc open mailbox mua connect server mda using imap protocol one obsolete mail transfer agent mta responsible making message arrive right destination send email mua pas server mta turn pas recipient mail server likewise someone sends email another server mta receive hand mda read later case mta speaks smtp protocol guide mda dovecot popular choice role mta exist several option popular postfix exim however guide us newer lesserknown opensmtpd experience much easier set postfix exim complex configuration geared towards largescale email provider whereas opensmtpd beginnerfriendly security base email system horribly insecure still need ducttape security feature context security two meaning spam protecion privacy protection encryption spam protection also mean two thing defending spammer preventing email get flagged spam former optional latter big provider google microsoft use infamously strict spam filter decide server spammer almost nothing spam protection technique discussed detail course guide privacy protection important century nt want random router internet read email may contain sensitive information private conversation account password reset link therefore try make sure email transported encrypted channel two option encryption mandatory opportunistic encryption mandatory encryption practical clientserver communication serverserver provided imaps smtps wrap imap smtp protocol tl way http http serverserver communication option opportunistic encryption form starttls communication encrypted party agree short unencrypted discussion last part vulnerable mitm attack anyone along path email server discussion alter exchange block use encryption sometimes actually happens practice way make sure starttls used case refuse exchange unless server agree use encryption unfortunately risky approach ca nt recommend server support encryption unbelievable right example received airline booking confirmation full personal detail made billiondollar company sent across internet without protection guide includes intructions enable encryption assumes already tl certificate find guide get one let encrypt free remember need renew every month using selfsigned certificate may work nt recommend rest guide assume public fullchain tl certificate etcsslcertsexamplecompem private encryption key etcsslprivateexamplecompem server obviously need server run mta mda host home reliable option rent one data center vps guide written linux server mind theory also work bsds openbsd freebsd netbsd etc minimal adaptation server must online must root ssh access must static ip address tcp network port must open especially check last one may need explicitly ask home isp server provider enable port often close prevent spam usually web interface also must domain name call examplecom necessary basically everything dns record tl certificate mta network configuration etc nt one yet choose many registrar rent one personally use recommend gandi note bad idea use domain like foobarcom control foo part bar part case spammer control quxbarcom could negatively affect reputation eye email provider lastly setting email server also choice using system user virtual user system user email arrives john examplecom mta mda expect exists john unix user server deliver virtual user much flexibility use email managed single unix usergroup called vmail create follows gnu coreutils groupadd vmail useradd g vmail vmail busybox addgroup vmail adduser g vmail vmail bsd clue similar dns record must set necessary dns record usually possible domain registrar web interface may take change propagate internet recommend section rest tomorrow firstly already andor aaaa record associate domain examplecom server ip address email essential also reverse dns set correctly renting server remotely often provider configuration tool otherwise create ptrtype dns record although beyond scope guide done recommend testing dns record using mx lookup online tool mx inform rest internet server email server create mx mail exchanger dns record domain note dot end domain name examplecom mx examplecom message sent email address ending examplecom sender query dns mx record examplecom find domain name case examplecom look ip address using aaaaa record domain name record must associated cname record must directly translatable ip address may multiple mx record containing different domain name preference number example sender try mx record lower number first server unavailable try higher number multiple mail server good idea thus declare follows examplecom mx examplecom mx server sending email domain examplecom try send ip address first fails move number sender randomly choose one useful load balancing although probably overkill private server spf sender policy framework spf feature help prevent spammer impersonating server attempt get around blacklist security feature required nowadays nt use probably get flagged spam spf work specifying ip address authorized send email domain name must publish information txttype dns record spftype also exists following content examplecom txt mx everything version list verification mechanism spam filter try given order end say reject email previous mechanism fail see spf spec detail recommend using mx mechanism tell verifier look aaaaa address domain mx record allows add remove change server without needing update record dkim domainkeys identified mail dkim comprehensive form antiimpersonation like spf practically mandatory modern era add cryptographic signature email server receiver spam filter verify using email content public key need publish dns record implement spf dkim despite overlap set dkim create rsa keypair using openssl utility openssl genrsa pathtodkimprivatekey openssl rsa pathtodkimprivatekey pathtodkimpublickey minimum size bit recommend bit bigger better dns involved ca nt stretch bit without causing discomfort server think go without saying keep private key private importantly dkim dns record attached directly domain examplecom instead belong subdomain form selector domainkeyexamplecom selector alphanumeric string choose eg today date remember choice later configuring dkim signer change key keep old record around old email still verified dkim policy must published txt record follows pubkey public rsa key mi ab stored pathtodkimpublickey newlines removed selector domainkeyexamplecom txt t p pubkey version must first tag flag t enables strict mode recommended dkim spec meaning email sent subdomains immediately fail verification optional tag block use old algorithm dmarc lastly domainbased message authentication reporting conformance dmarc technically optional highly recommended make look legitimate eye google microsoft modify behaviour spf dkim also provides advice receiver one email fails verification enable create yet another txt record similarly dkim must belong subdomain dmarcexamplecom give following content admin email address choosing may may belong domain dmarcexamplecom txt preject spreject aspfs adkims rufmailto admin version tag must come first followed p sp control unverified message coming main domain subdomains respectively unsurprisingly reject mean delivery refused none asks let anyway quarantine tell filter take closer look put spam folder percentage say many email apply policy next aspfs adkims enable strict mode spf dkim block subdomains passing test finally asks filter create forensic report type verification fails ruf give address send doubt see dmarc spec mda dovecot dovecot popular imap server focused lightweight simple secure extensive uptodate documentation flexible scalable keep well lastest security bestpractices installed dovecot via package manager probably lot configuration file etcdovecot directory want delete yes rm rf crap dovecot simple configure nt care put setting chaos etcdovecot make thing unnecessarily confusing network create new configuration file etcdovecotdovecotconf start filling detail tl certificate making clear unencrypted connection unacceptable ssl required sslcert etcsslcertsexamplecompem sslkey etcsslprivateexamplecomkey sslminprotocol sslpreferserverciphers yes disableplaintextauth yes final disableplaintextauth option tell dovecot reject password sent unencrypted mean must hashed sent encrypted connection next tell dovecot protocol use expect follows protocol lmtp imap service lmtp unixlistener lmtp user vmail group vmail service imaplogin inetlistener imap port inetlistener imaps port lmtp local mail transport protocol basically smtp exchange within single server trusted network email received dovecot start child process vmail usergroup deliver message recipient since set ssl required earlier client get mail starttls handshake successful imap exchange connect via imaps force use encryption therefore optionally remove one two inetlisteners according preference user next need inform dovecot email address handle message create file etcdovecotusers describes user line similar format etcpasswd user password uid gid homedir guide using vmail user account leave uid gid homedir field blank storing email vmail home directory user field email address excluding examplecom fact include guide assumes smallscale server managing one domain exclude create password hash put password field follows server fast lot ram doveadm pw using potato doveadm pw entered password simply copypaste entire hash string outputted program password field dovecot need file describing user account two separate occasion check whether client logging imap server valid given right password handled passdb block configuration know email address server responsible given userdb block configuration function nt necessarily fulfilled user file map multiple email address one acccount multiple account one email address simplicity though use user file passdb driver passwdfile args usernameformat n etcdovecotusers args usernameformat n etcdovecotusers userdb driver passwdfile args usernameformat n etcdovecotusers overridefields uidvmail gidvmail homehomevmail n driver option set kind table dovecot expect tell use file passwdlike format described possibility include eg sql database option available args depend chosen driver passdb block hashing algorithm given scheme usernameformat n say user file contains name name examplecom userdb block force use vmail vmail account tell dovecot put data homevmail n n mean address eg mail name examplecom stored homevmailname dovecot know store message need specify format store maillocation maildir maildir two standard mailbox format choose maildir mbox highly recommend maildir modern ancient mbox format maildir say subfolder use ensure homevmail owned vmail vmail dovecot write access mta opensmtpd opensmtpd mta openbsd project known focus security minimalism compared mtas joy set thanks intuitive configuration syntax tothepoint manual guide opensmtpd version newer older version used substantially different syntax problem opensmtpd take look maintainer blog contains lot useful information big help writing guide user begin delete content etcsmtpdaliases file exists map recipient address system user case using vmail everyone let dovecot manage detail simply writing vmail create new file etcsmtpdpasswds fill according following format name examplecom hash generate password hash command user sure use password every account dovecot smtpctl encrypt password like dovecot delete content main config file etcsmtpdsmtpdconf start putting following table alias etcsmtpdaliases table passwds etcsmtpdpasswds network write domain name single line etcsmtpdmailname name opensmtpd use introduce server important match reverse dns domain name server ip examplecom whatever continue etcsmtpdsmtpdconf importing tl certificate pki prefetch cert etcsslcertsexamplecompem pki prefetch key etcsslprivateexamplecomkey tell opensmtpd key use sender rewriting scheme prevents forwarded email breaking spf looking like spam sr key sr key backup optional read recommended change key every year case need ensure email last month still verified using old one change simply move backup slot month important secret ca nt guessed otherwise anyone send mail server recommend generating key randomly follows head c devurandom next define spam filter follows last line work need download build filterrspamd adapter binary created opensmtpd official maintainer set rspamd service next section responsible spam filtering dkim signing filter rdns phase connect match rdns disconnect dns error filter fcrdns phase connect match fcrdns disconnect dns error filter rspamd procexec etcsmtpdfilterrspamd overstate importance first two line block hundred spam attempt least never blocked anything legitimate far thing left tell opensmtpd port listen incoming traffic come two part first listen port incoming message domain coming email server inbound listen port tl pki examplecom filter rdns fcrdns rspamd action recv lmtp varrundovecotlmtp rcptto virtual alias match domain examplecom action recv line say listen port interface providing optional tl using certificate examplecom passing everything three filter definer earlier making tl mandatory bad idea server use tl line defines action called recv relay email dovecot lmtp socket rcptto virtual making sure dovecot actually accept message line simply say incoming mail domain action recv applied unless spam filter rejected secondly listen port smtps andor port starttls message getting sent email client rest world require user authentication outbound listen port smtps pki examplecom auth passwds filter rspamd listen port tlsrequire pki examplecom auth passwds filter rspamd action send relay sr match auth action send difference line port protocol demand mandatory tl connection user authenticate according password file created earlier filter end dkim signing outgoing mail line triggered successful authentication unsurprisingly relay email destination sr end enables using sr setting earlier opensmtpd program setup need handle untrusted connection mtas send message since like server software may vulnerability important keep uptodate possible spam filter rspamd rspamd modern spam filtering solution many feature could spend hour tweaking guide however keep short really interested ability add server dkim signature outgoing message besides according limited experience smallscale server spam filtering nt essential long tell opensmtpd check reverse dns described however much experienced people disagree basically purpose nt touch rspamd default configuration except creatingediting file etcrspamdlocalddkimsigningconf following content selector dkim selector chose dns record allowusernamemismatch true domain examplecom path pathtodkimprivatekey selector selector make sure dkim privatekey file readable readable rspamd rspamd allowing username mismatch necessary opensmtpd tell rspamd username dkim signer actually expects username examplecom course nt forget start necessary daemon testing everything set time test finger crossed mentioned earlier check correctness dns using mx lookup tool use website test opensmtpd smtp diagnostics tool decent email client include option set server email account guide excludes instruction vary lot client client asked login type choose plainnormalunencrypted password nt worry clientserver connection tlsencrypted nobody able steal next test sending receiving message use aptlynamed email working website specifically test spf dkim dmarc working correctly using dkim validator everything good far congratulation come big scary final test sending email one big guy google microsoft spam filter strict get great company probably use aipowered accountaware filter put anything identifiable test email example name john smith put john smith message send addres like johnsmith examplecom something failed investigating either one daemon misconfigured problem domain name andor dns record research get nt give everything work congratulation proud administrator private email server fun nt forget update tl certificate dkim sr key p please nt spam ruin everyone else prefetch licensed cc bysa
84,Lobsters,education,Education,xero's irc ref,https://notes.neeasade.net/xeros-irc-ref.html,xero irc ref,,may vary network network example network go ten use etc founder full access chanserv function automatic opping upon entering channel make person sop automatic opping upon entering channel make parson aop automatic opping upon entering channel automatic halfopping automatic voicing special privilege may opped may join channel nick access list access level
85,Lobsters,education,Education,Stop Teaching C [to C++ beginners],https://www.youtube.com/watch?v=YnWhqhNdYyk,stop teaching c c beginner,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature cppcon kate gregory stop teaching c youtube,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature cppcon kate gregory stop teaching c youtube
86,Lobsters,education,Education,Math and coding resources for homeschooling,https://welikemath.ml/,math coding resource homeschooling,math coding kid math level math level math level math fun coding resource math level dragonbox apps bedtime math website app bedtime math printables wuzzit trouble apps especially wuzzit trouble jr math playground dreambox learning math level beast academy printables bedtime math website app bedtime math printables dragonbox apps wuzzit trouble apps modified tchisla math playground common core sheet dreambox learning khan academy math level art problem solving alcumus euclidea tchisla wuzzit trouble apps mathigon dragonbox apps expii solve khan academy youtube channel tanton thinking mathematics advanced math arthur benjamin mental math dr matrix martin gardner book numberphile welch lab eigenchris mathologer math resourcesfun age number devil mathical book prize winner vi hart youtube video epsilon camp programming scratch hour code khan academy coding bat cargo bot project euler codecademy,math coding kid apps website like math level math level math level math fun coding resource math level dragonbox apps game style apps teach mechanic working number algebra geometry algebra geometry apps great fun worth bedtime math website app daily onlineapp problem many pound food panda eat year variation level prek adult bedtime math printables longer activity require creativity material good many level wuzzit trouble apps especially wuzzit trouble jr fun game build number sense player flexibly think target number combination sum multiple positive negative math playground online game kid play independently game simple factpractice race others complex reasoning good independent practice dreambox learning math lesson practiceassessment gamelike environment feel like gamebased homework le dry math level beast academy printables print puzzle game worksheet half hour paperandpencil work full curriculum textbook unusual challenging puzzle game useful alongside book others used separately bedtime math website app daily onlineapp problem many pound food panda eat year variation level prek adult bedtime math printables longer activity require creativity material good many level dragonbox apps game style apps teach mechanic working number algebra geometry algebra geometry apps great fun worth wuzzit trouble apps fun game build number sense player flexibly think target number combination sum multiple positive negative modified tchisla use app paper restrict operation one student already know efficient way solve puzzle addition subtraction multiplication division practice section app good sequence easier problem math playground online game kid play independently game simple factpractice race others complex reasoning good independent practice common core sheet choose math topic print worksheet come answer key straightforward practice new skillsmethods dreambox learning math lesson practiceassessment gamelike environment feel like gamebased homework le dry khan academy complete set video problem aligned common core standard system diagnostics help find strength weakness target practice find dry skillslearning inspiration entertainment math level art problem solving alcumus challenging math problem free aops also offer paid selfpaced teacherled course high quality math program euclidea fun challenging geometric construction challenge best year history using digital tool anyone try solve challenge geometry student try prove solution true tchisla fun challenging gain fluency math fact understand many way represent number seeing multiple way solve problem critical skill math success enjoyment wuzzit trouble apps fun game build number sense player flexibly think target number combination sum multiple positive negative excellent gameplay easy challenging mathigon excellent animated interactive textbook cover select math topic far dragonbox apps game style apps teach mechanic working number algebra geometry algebra geometry apps great fun worth expii solve weekly set wacky problem emphasis good writeups solution good explanation anyone solves problem correctly invited enter solution vote solution khan academy complete set lecture problem set system diagnostics help find strength weakness target practice find dry aligned common core standard skillslearning inspiration entertainment youtube channel excellent animation explaining key point several math topic grade including calculus advanced mathematics tanton thinking mathematics internet video course curriculum new perspective different math topic lot explore advanced math arthur benjamin mental math arthur benjamin explains impressive mental math series video dr matrix martin gardner book book explains amazing language number curiosity numberphile youtube channel lot fun math video best one explains engima code breaking way make clear electrical circuit needed therefore problem led computer welch lab series complex number one history math well others eigenchris extremely advanced stuff important series tensor tensor calculus mathologer often assumes trig calculus video best around math resourcesfun age number devil fun novel lot math read aloud younger grade grok complex math grade mathical book prize winner want combine reading math fiction nonfiction prize winner age vi hart youtube video fun recreational mathematics start hexaflexagons find others based view count epsilon camp also set math resource including book textbook programming want try coding favorite resource scratch create program simplified graphical environment designed young people extensive community hour code coding challenge walk make game khan academy basic intermediate programming javascript assisted environment coding bat good kid taking computer science ap want practice explanation good place figure foundation strong lacking cargo bot practice algorithmic thinking ipad puzzle game challenging puzzle solving project euler hundred challenging programming problem require math insight solve middle school adult codecademy tutorial learning program grade adult
87,Lobsters,education,Education,ARM GCC Inline Assembler Cookbook,http://www.ethernut.de/en/documents/arm-inline-asm.html,arm gcc inline assembler cookbook,arm gcc inline assembler cookbook document gcc asm statement c code optimization input output operand recipe inline assembler preprocessor macro c stub function replacing symbolic name c variable replacing symbolic name c function forcing usage specific register using register temporarily using constant register usage common pitfall instruction sequence defining variable specific register executing thumb status assembly code size label preprocessor macro external link http gccgnuorgonlinedocs copyright document history,arm gcc inline assembler cookbook document gnu c compiler arm risc processor offer embed assembly language code c program cool feature may used manually optimizing time critical part software use specific processor instruction available c language assumed familiar writing arm assembler program arm assembler programming tutorial c language tutorial either sample tested gcc version work earlier version gcc asm statement let start simple example following statement may included code like c statement nop example asm mov move content register register word nt much nothing also known nop operation statement typically used short delay stop adding example right away c code keep reading learn may work expected inline assembly use assembler instruction mnemonic use writing pure arm assembly code write one assembler instruction single inline asm statement make readable put instruction separate line asm mov mov mov mov special sequence linefeed tab character keep assembler listing looking nice may seem bit odd first time way compiler creates assembler code compiling c statement far assembler instruction much appear pure assembly language program however register constant specified different way refer c expression general form inline assembler statement asm code output operand list input operand list clobber list connection assembly language c operand provided optional second third part asm statement list output input operand explain third optional part list clobber later next example rotating bit pass c variable assembly language take value one integer variable right rotates bit one store result second integer variable rotating bit example asm mov result value ror result r value r x asm statement divided colon four part assembler instruction defined single string literal mov result value ror optional list output operand separated comma entry consists symbolic name enclosed square bracket followed constraint string followed c expression enclosed parenthesis example us one entry result r comma separated list input operand us syntax list output operand optional example us one operand value r x optional list clobbered register omitted example shown initial nop example trailing part asm statement may omitted unused inline asm statement containing assembler instruction also known basic inline assembly statement containing optional part called extended inline assembly unused part followed one used must left empty following example set current program status register arm cpu us input output operand asm msr cpsr p p r status even code part may left empty though empty string required next statement creates special clobber tell compiler memory content may changed clobber list explained later take look code optimization asm memory insert space newlines even c comment increase readability asm mov result value ror result r rotation result value r x rotated value clobber code section operand referenced percent sign followed related symbolic name enclosed square bracket refers entry one operand list contains symbolic name rotating bit example result refers output operand c variable value refers input operand c variable x symbolic operand name use separate name space mean relation symbol table put simple choose name without taking care whether name already exists c code however unique symbol must used within asm statement already looked working inline assembler statement written author may noticed significant difference fact gcc compiler support symbolic name since version earlier release rotating bit example must written asm mov ror r result r value operand referenced percent sign followed single digit refers first second operand forth format still supported latest gcc release quite errorprone difficult maintain imagine written large number assembler instruction operand renumbered manually inserting new output operand stuff still look little odd nt worry beside mysterious clobber list strong feeling something else missing right indeed nt talk constraint string operand list like ask patience something important highlight next chapter c code optimization two possible reason want use assembly language first c limited getting closer hardware eg c statement directly modifying processor status register second reason create highly optimized code doubt gnu c code optimizer good job result far away handcrafted assembler code subject chapter often overlooked adding assembly language code using inline assembler statement code also processed c compiler code optimizer let examine part compiler listing may generated rotating bit example ldr sp x x mov ror tmp x str sp tmp compiler selected register bit rotation could selected register two register one c variable may explicitly load value store result another listing generated different compiler version different compile option mov ror x compiler selected unique register operand using value already cached passing result following code get picture often becomes worse compiler may even decide include assembler code decision part compiler optimization strategy depend context assembler instruction used example never use output operand remaining part c program optimizer likely remove inline assembler statement nop example presented initially may candidate well compiler useless overhead slowing program execution solution add volatile attribute asm statement instruct compiler exclude assembler code code optimization remember warned use initial example revised version nop example revised asm volatile mov trouble waiting u sophisticated optimizer rearrange code following c snippet left several last minute change j x optimizer recognize two increment impact conditional statement furthermore know incrementing value cost one arm instruction thus rearrange code j x save one arm instruction result guarantee compiled code retain sequence statement given source code may great impact code demonstrate following code intends multiply c b one may modified interrupt routine disabling interrupt accessing variable reenable afterwards look like good idea asm volatile mr cpsrnt orr msr cpsrc cc c b may fail asm volatile mr cpsrn bic msr cpsrc cc unfortunately optimizer may decide multiplication first execute inline assembler instruction vice versa make assembly code useless solve help clobber list explained clobber list example cc informs compiler assembly code modifies register update condition code flag btw using hard coded register typically prevent best optimization result general pas variable let compiler choose adequate register beside register name cc condition register memory valid keyword tell compiler assembler instruction may change memory location force compiler store cached value reload executing assembler instruction must retain sequence content variable unpredictable executing asm statement memory clobber asm volatile mr cpsrnt orr msr cpsrc cc memory c b safe asm volatile mr cpsrn bic msr cpsrc cc memory invalidating cached value may suboptimal alternatively add dummy operand create artificial dependency asm volatile mr cpsrnt orr msr cpsrc x b cc c b safe asm volatile mr cpsrn bic msr cpsrc x c cc code pretend modify variable b first asm statement use content variable c second preserve sequence three statement without invalidating cached variable essential understand optimizer affect inline assembler statement something remains nebulous better reread part moving next topic input output operand learned input output operand described symbolic name enclosed square bracket followed constraint string turn followed c expression parenthesis constraint need probably know every assembly instruction accepts specific operand type example branch instruction expects target address jump however every memory address valid final opcode accepts offset contrary branch exchange instruction expects register contains target address case operand passed c inline assembler may c function pointer thus passing constant pointer variable inline assembly statement inline assembler must know represented assembly code arm processor gcc provides following constraint constraint usage arm state usage thumb state f floating point register available h available register g immediate floating point constant available h g negated available immediate value data processing instruction eg orr operand constant range eg swi operand j indexing constant eg ldr pc operand constant range eg sub operand k inverted shifted l negated constant range eg sub operand l r register eg push operand constant range power eg mov ror operand constant multiple range eg add sp operand valid memory address n available constant range eg lsl operand available constant multiple range eg add sp operand r general register eg sub available w vector floating point register available x operand constraint character may prepended single constraint modifier constraint without modifier specify readonly operand modifier modifier specifies writeonly operand usually used output operand readwrite operand must listed output operand register used output output operand must writeonly c expression result must lvalue mean operand must valid left side assignment c compiler able check input operand guessed readonly note c compiler able check whether operand reasonable type kind operation used assembler instruction problem detected late assembly stage well known weird error message even claim found internal compiler problem immediately reported author better check inline assembler code first strict rule never ever write input operand need operand input output constraint modifier trick shown next example asm mov value value ror value r similar rotating bit example presented rotates content variable value right one bit opposite previous example result stored another variable instead original content input variable modified modifier may supported earlier release compiler luckily offer another solution still work latest compiler version input operator possible use single digit constraint string using digit n tell compiler use register nth operand starting zero example asm mov ror r value value constraint tell compiler use input register used first output operand note however nt automatically imply reverse case compiler may choose register input output even told may remember first assembly listing rotating bit example two variable compiler used register variable asm statement asm mov result value ror result r value r x generated code ldr sp x x mov ror tmp x str sp tmp problem case may fatal output operator modified assembler code input operator used situation code depends different register used input output operand must add constraint modifier output operand following code demonstrates problem asm volatile ldr nt str nt r rdv r table r wdv memory value read table another value written another location table compiler would chosen register input output output value would destroyed first assembler instruction fortunately modifier instructs compiler select register output value used input operand recipe inline assembler preprocessor macro order reuse assembler language part useful define macro put include file using include file may produce compiler warning used module compiled strict ansi mode avoid write asm instead asm volatile instead volatile equivalent alias macro convert long value little endian big endian vice versa define byteswap val asm volatile eor ror bic mov ror eor lsr r val val cc c stub function macro definition include assembler code whenever referenced may acceptable larger routine case may define c stub function byte swap procedure time implemented c function unsigned long byteswap unsigned long val asm volatile eor ror bic mov ror eor lsr r val val return val replacing symbolic name c variable default gcc us symbolic name function variable c assembler code specify different name assembler code using special form asm statement unsigned long value asm clock statement instructs compiler use symbolic name clock rather value make sense global variable local variable aka auto variable symbolic name assembler code replacing symbolic name c function order change name function need prototype declaration compiler accept asm keyword function definition extern long calc void asm calculate calling function calc create assembler instruction call function calculate forcing usage specific register local variable may held register instruct inline assembler use specific register void count void register unsigned char counter asm code asm volatile eor l counter code assembler instruction eor clear variable counter warned sample bad situation interferes compiler optimizer furthermore gcc completely reserve specified register optimizer recognizes variable referenced longer register may reused compiler able check whether register usage conflict predefined register reserve many register way compiler may even run register code generation using register temporarily using register passed operand need inform compiler following code adjust value multiple four us scratch register let compiler know specifying clobber list furthermore cpu status flag modified ands instruction thus cc added clobber asm volatile ands nt eor nt addne r len len cc hard coding register usage always bad coding style better implement c stub function use local variable temporary value using constant use mov instruction load immediate constant value register basically limited value ranging asm mov flag flag also larger value used rotating given range even number bit word result n n mentioned range x even number range rotation x may set case bit folded bit resp last least binary complement value may given using mvn instead mov sometimes need jump fixed memory address may defined preprocessor macro use following assembly code ldr jmpaddr bx work legal address value constant fit example smart assembler convert mov bx nt fit example assembler load value literal pool ldr bx word inline assembly work way instead using ldr simply provide constant register value asm volatile bx r jmpaddr depending actual value constant either mov ldr variant used jmpaddr defined resulting code similar mvn bx real world complicated may happen need load specific register constant let assume want call subroutine want return another address one follows branch useful embedded firmware return main case need load link register assembly code ldr lr jmpaddr ldr main bx idea implement inline assembly solution asm volatile mov lr bx r main jmpaddr still problem use mov work long value jmpaddr fit resulting code get pure assembly code nt fit need ldr instead unfortunately way express ldr lr jmpaddr inline assembly instead must write asm volatile mov lr bx r main r jmpaddr compared pure assembly code end additional statement using additional register ldr ldr mov lr bx register usage always good idea analyze assembly listing output c compiler study generated code following table compiler typical register usage probably helpful understand code register alt name usage first function argument integer function result scratch register second function argument scratch register third function argument scratch register fourth function argument scratch register register variable register variable register variable register variable register variable rfp register variable real frame pointer sl stack limit fp argument pointer ip temporary workspace sp stack pointer lr link register workspace pc program counter common pitfall instruction sequence developer often expect sequence instruction remains final code specified source code assumption wrong often introduces hard find bug actually asm statement processed optimizer way c statement may rearranged dependency allow chapter c code optimization discus detail offer solution defining variable specific register even variable forcibly assigned specific register resulting code may work expected consider following snippet int foo int int register int asm asm mov return compiler instructed use local variable initialized parameter inlined assembly statement set finally returned however may go completely wrong remember compiler recognize happening inside inline assembly optimizer smart c code generating following assembly code foo mov mov bx lr instead returning value returned passed function happed well final code still contains inline assembly statement c code optimizer decided required directly return parameter instead assigning variable fixed register mean c compiler use variable still tell compiler variable modified inside inline assembly operation given example need extend asm statement output operator asm mov l c compiler aware modified generate expected result foo push lr mov mov pop pc executing thumb status aware depending given compile option compiler may switch thumb state using inline assembler instruction available thumb state result cryptic compile error assembly code size case compiler correctly determine size assembler instruction may become confused assembler macro better avoid case confused assembly language macro c preprocessor macro fine use latter label within assembler instruction use label jump target however must jump one assembler instruction another optimizer know nothing branch may generate bad code preprocessor macro inline assembly instruction contain preprocessor macro preprocessor instruction nothing else string constant assembly code must refer value defined macro see chapter using constant external link thorough discussion inline assembly usage see gcc user manual latest version gcc manual always available http gccgnuorgonlinedocs copyright copyright c harald kipp permission granted copy distribute andor modify document term gnu free documentation license version later version published free software foundation think something nt explained clearly enough even wrong please let know document history date ymd change thanks fixed first constant example constant must input operand corrected example code specific register usage added new pitfall section topic sven köhler corrected pitfall section constant parameter moved usage section enh added preprocessor macro pitfall added history
88,Lobsters,education,Education,Cost Matters: Why Lambda School should have a lower success rate than college,https://www.chrisstucchio.com/blog/2020/why_lambda_school_should_have_a_50_percent_success_rate.html,cost matter lambda school lower success rate college,msm article basic math single gamble kelly criterion concrete example lambda school rutgers university tweet thread measured according criterion lambda school austen allred basic math sorting rule lowering cost failure allows one accept lower success rate intuitive example wikipedia lambda school college exist never raise conversion rate indian software developer lower quality western one elsewhere detail conclusion austin allred austen,lambda school recently come fire mainstream medium success rate smaller well founder nerd article imply lambda school somehow ripping student possibly um tricking hedge fund paying education though real mechanism provided actually joking nerd part msm article found literally talk nt enough friend critique height innumeracy intrinsic reason lambda school institution high success rate blog post going really simple probability expose important tradeoff observed people ignoring many different context lambda school moocs business elsewhere article decision theory lambda school recent controversy lambda school lower success rate make good jumping point let math basic math single gamble suppose opportunity make gamble make gamble probability p winning win gamble earn payoff w whereas lose earn payoff l example gamble might attend lambda school go college buy click via google adwords may may buy product landing page payoff win w would higher paying job sale website loss losing l would time money spent tuition money paid google click easy compute expected value gamble e gamble p w l assuming risk aversion fairly typical w l large take gamble whenever e gamble simple arithmetic discover gamble positive sum whenever wl p repeated game use kelly criterion similar rule going focus nonrepeated case post another useful rearrangement break even p l wl sound simple right important note different way alter parameter make gamble worthwhile increase w make payoff attractive increase p make winning bet likely decrease l make cost losing lower latter case actually pretty important consider limiting case l case finite probability p winning something even nt win lose nothing good bet take regardless low p far nothing groundbreaking right concrete example lambda school rutgers university let consider lambda school cook oversimplified example assume applicant currently earns assume student successful via lambda school salary increase furthermore assume value time graduation also use year time horizon lambda school month program valuing time mean cost unsuccessful attempt lambda school l lambda school succeeds winning payoff job earning student pay lambda school year yielding net pay earn full excess original pay year year total w net wl implying even probability success reasonably good deal student let examine rutgers choosing rutgers alma mater following number tweet thread learn cost rutgers year program x lost income additionally tuition state assume generous financial aid adding another total paid whether gamble pay mean w l yield implying even success probability going rutgers bad deal student rutgers need approximately success probability student break even note actual success rate rutgers measured according criterion lambda school play number lot take year time horizon play outcome beyond fail success etc really hard escape extreme cost advantage isas provide lambda school nt cost much people nt succeed reason austen allred constantly talk alignment incentive basic math sorting rule let suppose multiple gamble choose enter say n gamble n representing particular gamble moreover gamble know success probability p particular gamble example might choosing student admit lambda school rutgers another example might choosing adwords landing page matched adwords wish bid cpc faced task choosing gamble want take armed decision rule came simple way decide wl p accept gamble lowering cost failure allows one accept lower success rate let u consider set gamble let assume p suppose simplicity implies positive sum gamble one p choose gamble according rule choose gamble overall success probability set gamble thought regular university cost failure high suppose reduced cost failure say instead case positive sum gamble one p average success rate gamble lower cost core economics lower cost something make sense lower quality standard something intuitive example wikipedia lambda school college topic educational institution consider favorite wikipedia duckduckgo institution high failure rate quite often search something find looking obviously wikipedia sense bad consumer simply search lot thing nt find reason obvious wikipedia free useful time take second search something average second search per useful result win contrast college success rate exist taking ten thousand dollar student providing little value return much worse even though success rate lambda school operates somewhere extreme wikipedia college lot cheaper college particular people nt succeed mean socially optimal result perspective student lambda school admit student success rate drop significantly college understand sentiment high failure rate problem hopefully example wikipedia provides intuition low cost method education valuable even success rate low never raise conversion rate example someone major travel website told customer acquisition funnel consists paying google adwords costperclick basis people reach site certain fraction make purchase suppose several different ad channel ie keywords bid customer convert profit channel available cpc conversion rate cost per conversion meaning profit people coming channel b cpc conversion rate cost per conversion meaning profit people coming channel c cpc conversion rate cost per conversion making channel money losing assuming channel provide equal traffic bid placed channel b c unprofitable bid placed suppose price adwords fall channel cost b c cost point cost per conversion channel c dropped time channel c get switched however net result conversion rate dropped profit margin dropped net result traffic increased new low margin barely profitable user low conversion rate new user drag average even add profit bottom line flip side phenomenon difficult raise conversion rate imagine sitewide improvement result conversion rate every channel increasing price remained raise conversion rate channel c lowering cost per conversion making profitable average conversion rate go mere improvement old conversion rate channel c twice size channel conversion rate would actually go hand important look aggregate number scenario improving conversion rate increased sale additional sale significantly lower margin still increase profit indian software developer lower quality western one made argument elsewhere detail give short summary cost american developer approximately cost similar indian developer experience lived india many year plenty indian developer data scientist good u seeking employee know good company everyone leaving connect people yet reputation indian developer among american quite low people commonly talk outsourced project run team idiot generally strong criticism indian developer general never experience also subject anyone hire india level hiring rigor subject american reconcile two view simply observing lower cost failure eg making bad hire economically optimal allow higher rate failure mean indian company competing american company lower hiring bar logic drag average quality indian developer similarly low quality american developer would simply get hired developer thus indian software engineering market lower quality simply low cost allowed larger pool people enter note singling india lived worked many year conclusion interplay individual success probability cost failure aggregate success probability complex simply innumerate say austin allred never ok success rate cost failure drop lambda school socially optimal success rate also drop clear believe austen probably know merely attempting placate innumerate journalist simple economics tell u lower cost failure failed attempt made cost failure go critique reduced success rate hopelessly innumerate
89,Lobsters,education,Education,Advanced Scheme: Some Naughty Bits,https://people.csail.mit.edu/jhbrown/scheme/,advanced scheme naughty bit,advanced scheme naughty bit mit sipb slide macro slide macro slide continuation slide continuation slide selected resource general scheme resource hygienic macro continuation nondeterministic programming scheme jhbrown csailmitedu,advanced scheme naughty bit ran twonight seminar aegis mit sipb introducing feature scheme nt usually covered undergraduate class mit first night covered hygienic macro second continuation hygienic macro elegant mechanism developing new syntax continuation powerful controlflow construct nearly controlflow structure including exception coroutines thread backtracking may derived macro introduced first set slide followed continuation second used second set implement variety controlflow construct top scheme culminating implementation cooperative multithreading nondeterministic prologesque programming mechanism slide slide slightly errorcorrected presentation class please let know find error macro slide presented january slide fairly tightlyfocused tutorial official hygienic macro system macro slide presented january tried different approach year presenting common lispstyle defmacro syntactic closure syntactic closure alan bawden jonathan rees addition official hygienic macro think interesting talk way continuation slide presented january cooperative threading implementation end particularly lame hopefully conveys idea well enough continuation slide presented january mildly tweaked threading example lame ever corresponding source code selected resource general scheme resource hygienic macro continuation nondeterministic programming scheme jeremy h brown lt jhbrown csailmitedu gt
90,Lobsters,education,Education,Resources for Staff-plus engineers,https://lethain.com//staff-plus-eng-resources/,resource staffplus engineer,first day cto vp engineering network meeting people staffplus engineer becoming staffplus engineer operating staffplus engineer engineering strategy product strategy book irrational exuberance best book talk cindy sridharan twitter best tech talk best tech talk best tech talk paper morning paper read academic article read paper paper love acm sigops hall fame award list irrational exuberance paper collection nice thing,working first day cto vp engineering one valuable thing build list resource folk especially continue learning exploration recently focused question mean staff staffplus engineer get gathered collection resource folk looking grow role network almost unanimously staffplus engineer valuable learning resource book blog talk paper instead network peer mentor one hour develop engineer best bet would meeting people similar role staffplus engineer folk description role becoming staffplus engineer folk sharing story becoming staffplus engineer operating staffplus engineer engineering strategy article engineering strategy general example engineering strategy also many great resource facet strategy well example marty cagan series product strategy book although found many folk read many book asked staff engineer valuable resource inevitably mentioned personal mentor book blog post tech talk might mention related specific problem changed larger papery format book recommended looking even recommended book list abound including irrational exuberance best book talk staffplus engineer chatted generally mentioned giving talk valuable listening talk certainly excellent talk cindy sridharan twitter best source amazing talk particular write ups best tech talk best tech talk best tech talk paper relatively staffplus engineer avid reader computer science paper however familiar handful foundational paper small subset spend time reading paper tend get quite bit aspire join category frequent paper reader better place adrian colyer morning paper send summary computer science paper every weekday interested getting foundational exposure wellknown paper first read one read academic article peter klein read paper keshav jump list recommended paper probably best place find highquality paper read paper love also run meetups discus paper resource acm sigops hall fame award list irrational exuberance paper collection nice thing research resource found piece quite fit anywhere think good worth looking nonetheless find please send way
91,Lobsters,education,Education,"Xv6, a simple Unix-like teaching operating system",https://pdos.csail.mit.edu/6.828/2019/xv6.html,simple unixlike teaching operating system,simple unixlike teaching operating system introduction operating system engineering source text unix version pdf webbased version feedback top home,simple unixlike teaching operating system introduction teaching operating system developed summer mit operating system course operating system engineering ported riscv new undergraduate class source text latest source text available via git clone git git clone git unix version inspired unix lion commentary unix edition john lion peer peer communication isbn edition june following useful read original code processor handbook digital equipment corporation pdf made scanned image textsearchable webbased version indexed instruction name feedback interested using used course would love hear anything make easier adopt like hear also interested hear worked well nt rus cox rsc swtchcom frans kaashoek kaashoek mitedu robert morris rtm mitedu reach u pdoscsailmitedu question comment regarding send email ta listscsailmitedu top home last updated friday edt
92,Lobsters,education,Education,Knowledge Graphs,https://arxiv.org/abs/2003.02320,knowledge graph,donate arxiv simon foundation member organization,donate arxiv please join simon foundation generous member organization supporting arxiv giving campaign september contribution fund improvement new initiative benefit arxiv global scientific community
93,Lobsters,education,Education,Big-O Notation in One Picture,https://twitter.com/kamranahmedse/status/1235708842610212864,bigo notation one picture,,detected javascript disabled browser would like proceed legacy twitter yes
94,Lobsters,education,Education,"About UC Berkeley's ""Beauty and Joy of Computing"" curriculum (2017)",https://bjc.berkeley.edu/curriculum/,uc berkeley beauty joy computing curriculum,computer science principle ap c principle,computer science principle college board ap c principle curriculum framework organized around seven big idea thing learn six computational thinking practice thing every conforming curriculum must teach curriculum may differ amount emphasis given slice pie nt really quantitative suggestive snapshot bjc stand much overlap idea practice creativity idea creating practice similarly abstraction idea abstracting practice think first pie representing text curriculum material second pie representing expect student spend time circle center pie indicate idea programming practice creating center bjc intersect others first big idea bjc proudly programmingheavy believe snap programming language use allows u reach diverse audience beginner may initially think interested programming combine ease use visual programming expressive power previously found sophisticated textbased language go far beyond c principle requirement featuring advanced technique recursion higher order function view abstraction central idea computer science emphasize use abstraction context programming includes control abstraction generalize programming pattern data abstraction isolate implementation abstract data type use secondary emphasis global impact social implication computing use reading classroom discussion explore various aspect topic unit course detail topic teaching goal two remaining four topic implicit explicit approach student exercise creativity programming project nt talk extent topic similarly student develop algorithm program nt often treat algorithm separate topic except teaching analysis algorithm asymptotic order growth final category topic data internet important covered thoroughly possible coverage take form programming activity rather example using commercial database software practice phrase computational artifact meant encompass video slide deck blog program music create computer creating think far important practice important artifact computer program precisely student writing game program example two act creation happening student interested making game display creativity design game creates game creating program also display creativity design program structure latter real computer science idea abstraction central inseparable idea programming practice abstraction central programming constantly encourage student use layer abstraction structure programming project connecting computing mean connecting hobby connecting industry science importantly u student connect computing social implication secondary focus almost important practice analyzing program debugging predicting behavior someone else code thinking efficiency would emphasize skill end serf ultimate goal creating program work nearly interested analyzing artifact program two remaining practice important le emphasized bjc like csp curriculum use pair programming student constantly talking partner sharing work beginning course teach process pair programming discussion social implication computing student communicate idea communicating collaborating nt unique computer science
95,Lobsters,education,Education,Visual explanations of mathematics,https://agilescientific.com/blog/2020/2/25/visual-explanations-of-mathematics,visual explanation mathematics,nicholas rougeur beautiful interactive version edward tufte whole book often equation example myriad equation volume geophysics elucidate indeed barely even illustrate case worse obfuscate might think mathematics dry steeped convention way equation byrne showed u better daniel fleisch book maxwell equation,like look even cooler nicholas rougeur beautiful interactive versionthis classic example edward tufte modern saint visualization call visual explanation wrote whole book subject written subject example see evan post graphic repay careful study figure chart merely illustrate elucidatetoo often equation example myriad equation volume geophysics elucidate indeed barely even illustrate case worse obfuscate might think mathematics dry steeped convention way equation byrne showed u bettera year ago attempt broaden geophysical knowledge bought copy daniel fleisch book maxwell equation excellent others series good especially liked annotated equation lightened annotation version put separate visual layer
96,Lobsters,education,Education,C++ Frequently Questioned Answers,https://yosefk.com/c++fqa/fqa.html,c frequently questioned answer,c frequently questioned answer c fqa lite fqa c faq lite fqa faq table content defective c fqa error defective c compile time encapsulation recompilation bad idea outstandingly complicated grammar contextfree undecidable simple example way locate definition different run time encapsulation c run time encapsulation binary implementation rule reflection serialization complicated type system ca nt pas function virtual inheritance complicated typebased binding rule le helpful unbelievably complicated static binding quite sane defective operator overloading operator overloading garbage collection wo nt happen defective exception constructor c exception raii ca nt never duplicate facility array string address object initialize print generate littered evil falsely real programming language mixing c c highlevel builtin type correction compiler error message slow build time ability manual memory management overloaded exception operator overloading copying emulate reference count defective metaprogramming facility clubbed death limited way macro nt compile forever abused rat nest unhelpful standard library stlfilt functionality defective inlining inlining context c llvm gcc starting version tell implicitly called generated function information hiding big picture issue c practical language faq c perfect language faq string vector template garbage collection smart pointer ambiguity grammar duplication functionality big deal oo faq support c class recompiling slow big deal generic programming faq template cryptic compiler error message extremely long compilation time c better ada visual basic c fortran pascal smalltalk language faq cobol us c faq even notice long take learn ooc faq type encapsulation feature c business perspective faq lot small class virtual function dynamic binding central ooc faq nt missouri give simple reason function dynamic binding make big difference faq c backward compatible ansiiso c faq sometimes c standardized faq get copy ansiiso c standard faq interview question could ask would let know candidate really know stuff faq faq mean evil faq sometimes use socalled evil construct faq evil many important know technical definition good oo good class design faq business consideration important one boundary checking garbage collection notion good business perspective tell people complain word faq misleading emphasizes question rather answer start using different acronym faq class object class faq happens happens happens object faq interface good faq opengl fftw qt functor encapsulation faq stay away c help tradeoff safety v usability faq prevent programmer violating encapsulation seeing part class faq encapsulation security device faq correction hardly encapsulation difference keywords faq forwarddeclarationofstruct thing inline function people deal inline function faq discussing history actual implementation simple example procedural integration faq better way function improve performance faq first faq nt getting benefit function help tradeoff safety v speed faq wrong good language implementation recompile reliably parse use function instead plain old macro faq evil usual tell compiler make nonmember function faq discussion tell compiler make member function faq another way tell compiler make member function faq inline member function defined outside class best put keyword next declaration within class body next definition outside class body faq reference support duplicate feature reference faq different worm happens assign reference faq operator overloading happens return reference faq operator overloading template evil impractical mean faq bad joke reseat reference make refer different object faq use reference use pointer faq duplicate feature good answer question reseating ridiculous colon syntax reuse initialization code different constructor default constructor overload dot overloaded operator handle object pointer reference pointertoapointer faq encapsulation advantage c class recompiled control allocation deallocation object constructor deal constructor faq recompilation calling code practical perfection encapsulation difference faq hairy one constructor class call another constructor class initialize object faq faq advice default constructor always faq recompiled frequently constructor get called create array object faq evil need constructor use initialization list assignment faq move initializers common function use pointer constructor faq invoke implementation class defining constructor invoke function derived class named constructor idiom faq separation allocation initialization know private member returnbyvalue mean extra copy extra overhead faq developer nt ca nt initialize member data constructor initialization list faq advice class data member getting linker error faq virtual function table static initialization order fiasco faq work hard prevent static initialization order fiasco faq garbage collection nt constructonfirstuse idiom use static object instead static pointer faq prevent initialization order fiasco data member faq described need worry initialization order fiasco variable builtinintrinsic type faq pretty clear picture nt need performance handle constructor fails faq c exception yet another yet another hard named parameter idiom faq class written used thousand time getting error declaring object via faq interview nontrivial destructors memory management deal destructors faq c garbage collection raii c theory practice ca nt throw exception order local object destructed faq order object array destructed faq bother overload destructor class faq way handle error explicitly call destructor local variable faq better thing fiddling many ugly bit c want local die close scope created call destructor local want faq ok ok already wo nt explicitly call destructor local handle situation faq ugly code ca nt wrap local artificial block faq reuseoriented world avoid nontrivial constructor c class metaphysical encapsulation forwarddeclared much better explicitly call destructor allocated object faq code using class managing memory object recompiled frequently placement would use faq memory pool deal memorymapped hardware top secret information write destructor need explicitly call destructors member object faq le useful garbage collection write derived class destructor need explicitly call destructor base class faq relying destructor throw exception detects problem faq faq exception way force allocate memory specific memory area faq use clike structs instead programming problem domain assignment operator self assignment faq worry self assignment faq overload operator unnecessary copying built language ok ok already handle selfassignment faq case happen operator overloading deal overloading faq template exception clean care performance benefit operator overloading faq raise ugly iron head matlab verilog systemc actually work example operator overloading faq builtin string type exploiting modelingtheuniverseusingtypesystems encapsulation exception transferring support overloading make class look ugly nt supposed make code clearer faq defined readable way inspect operator overloaded faq overload let compare two using string comparison faq evil create tothepowerof operation faq claim c applicable everywhere puzzle okay tell operator override operator override faq exception allocate object guideline rule thumb overloading operator faq uservisible functionality create subscript class faq allocate nt class interface look like arrayofarray faq still nt get nt class interface look like arrayofarray faq costly design class outside interface first inside data first faq change unmanaged environment overload prefix postfix form operator faq efficient faq optimize temporary really interesting question friend faq almost useless use c interface definition forward declaration pure abstract class friend violate encapsulation faq previous faq overloaded operator advantagesdisadvantages using function faq mean friendship nt inherited transitive reciprocal faq class declare member function function faq way inputoutput via iostream cstdio use instead traditional faq overloaded pretty surreal program go infinite loop someone enters invalid input character faq exception return first argument zombie object get skip invalid input character faq funky syntax work faq input seem process past end file faq program ignoring input request first iteration faq many exception builtin string container end output line faq suppress behavior provide printing faq ca nt member class everything type encapsulation obfuscation nt always use method rather function faq previous faq provide input faq two faq back answer provide printing entire hierarchy class faq open stream binary mode faq reopen binary mode faq writeread object class tofrom data file faq send object class another computer eg via socket tcpip ftp email wireless link etc faq keep expectation low ca nt open file different directory faq tell key key pressed user press enter key faq make key pressed user echoed screen faq move cursor around screen faq trend clear screen something like faq nt assume screen change color screen faq ansi standard freestore management delete pointer pointedtodata faq garbage collection raii unnecessary copying objectoriented safe pointer twice faq managed environment pointer allocated pointer allocated faq duplicate c facility use instead trustworthy old faq constructor destructors operator overloading possible nontrivial constructor use pointer allocated via faq ugly sin automatic heap compaction need check faq worse convince older compiler automatically check see return faq undefined order need check faq two step happen say faq decoupling encapsulation memory leak constructor throw exception faq allocate unallocate array thing faq default constructor evil forget deleting array allocated via faq drop deleting array builtin type etc faq avoiding mismatch one zero violate rule compiler know object destructed faq legal moral member function say faq spirit c confusion allocate multidimensional array using faq correction previous faq code soooo tricky error prone nt simpler way faq interface class specific nt way make generic faq another way build template faq choosing c array whose length specified runtime faq evil force object class always created via rather local global object faq defeat purpose simple reference counting faq provide reference counting copyonwrite semantics faq provide reference counting copyonwrite semantics hierarchy class faq absolutely prevent people subverting reference counting mechanism faq evil faking use garbage collector c faq ca nt clever adore two kind garbage collector c faq ca nt reasonably way get info garbage collector c faq exception error handling way improve software quality faq cargo cult ca nt handle error leak lost constructor overloaded operator unlikely handle constructor fails faq avoid ugly handle destructor fails faq handle resource constructor may throw exception faq disk record error message boost change stringlength array prevent memory leak even ifwhen someone throw exception faq throw faq without exception object keyword mean would use faq throw polymorphically faq throw object many time copied faq care exception handling seems make life difficult clearly problem faq fail realize lack garbage collection raii assumption many try block faq const correctness correctness faq nt correctness related ordinary type safety faq every possible hole evil try get thing correct sooner later faq mean faq pseudoperformanceaware correct faq answer difference faq mean faq reference pointer evil answer make sense faq compile mean faq stupid duplication mean faq religion stupid duplication member function faq break little piece generated twice single template relationship returnbyreference member function faq dumb deal overloading faq want member function make invisible change data member faq break many case inline optimizing mean lost optimization opportunity faq many c user way located old chunk compiler allow change pointed faq mean ca nt change faq getting error converting faq inheritance basic inheritance important c faq multiple inheritance would use inheritance faq pretty good job express inheritance c faq compatibility ok convert pointer derived class base class faq nt use inheritance difference faq ca nt derived class access thing base class faq little comment pretty daring protect derived class breaking change internal part base class faq told never use protected data instead always use private data protected access function good rule faq okay exactly decide whether build protected interface faq practical inheritance virtual function member function faq performanceoriented c achieve dynamic binding yet also static typing faq proper inheritance one worst amazingly long build cycle difference non member function called faq instability garbage collection faster build cycle temporary memory object happens hardware call function many layer indirection much overhead faq member function derived class call function base class faq heterogeneous list object code need classspecific thing object seems like ought use dynamic binding ca nt figure faq destructor faq constructor faq inheritance proper inheritance substitutability hide member function public base class faq random thing random thing next answer converting work ok nt work faq problem parkinglotof kindof parkinglotof faq natural array kindof array faq previous faq nt know big deal lack garbage collection arrayofderived isnotakindof arrayofbase mean array bad faq evil advocating kindof faq parking lot example add movie format medium player aligned option isisnot kindof dilemma faq povray phd mathematics sure circle kind ellipse mean marshall cline stupid c stupid oo stupid faq natural language map directly natural language transparently automatically claim perhaps inherit faq problem nt anything circle ellipsis good silly example faq obsessed know making sure could depend nt term like circle ellipse defined mathematically faq readability efficiency generality pseudocompatibility public interface kindof faq assumption inheritance abstract base class big deal separating interface implementation faq separate interface implementation c like faq portable way abc faq virtual pure virtual member function faq strictly speaking define copy constructor assignment class contains pointer abstract base class faq could generated automatically raii destructor choosing contradict paint drown inheritance mother never told okay non function base class call function faq last faq confuses different strategy way use function going faq use protected virtuals instead public virtuals faq nt want benefit many snow example talking someone use private virtuals faq ridiculous wrong reason many many base class constructor call function object nt derived class override function get invoked faq correction really compatible new kind pointer previous faq okay way behavior dynamic binding worked object within base class constructor faq allocation stack know garbage collection exception safety getting mess destructors calling object base class destructor end ignoring override derived class going faq symmetrical dangling reference derived class redefine override member function non base class faq umpteen unintended side effect overloading steroid meaning faq nightmare c template mean virtual table unresolved external faq interacts badly need table set class wo nt inherited faq directly call little comment cryptic compile time error message good thing practice strongly encrypted slowly set member function wo nt overridden derived class faq nothing comment explained backfire inheritance multiple virtual inheritance least useless section organized faq told never use multiple inheritance right faq common way time multiple inheritance nt bad faq support objectoriented programming discipline using multiple inheritance faq really provide example demonstrates guideline faq fancy name simple way visualize tradeoff faq give another example illustrate discipline faq previous problem virtual inheritance necessarily recommended dreaded diamond faq tell compiler keep single subobject hierarchy use virtual inheritance faq user implementers type attribute deal lowlevel detail mean delegate sister class via virtual inheritance faq diamondlike hierarchy virtual inheritance special consideration need know use virtual inheritance faq special consideration need know inherit class us virtual inheritance faq faq advice fqa advice special consideration need know use class us virtual inheritance faq dreaded diamond already forced u ca nt bothered one time exact order constructor multiple andor virtual inheritance situation faq exact order destructors multiple andor virtual inheritance situation faq mix c c mixing c c need know mixing c c code faq thirdparty library c interface include standard c header file c code faq tweak include nonsystem c header file c code faq modify c header file easier include c code faq wash hand call nonsystem c function c code faq aware automated copypaste mechanism create c function callable c code faq exception builtin userdefined type throw exception linker giving error cc function called cc function faq mangled mature pas object c tofrom c function faq evil ridiculous c function directly access data object c faq feel like machine c opposed c faq notice pointer member function type pointertomemberfunction different pointertofunction faq pas pointertomemberfunction signal handler x event callback system call start threadtask etc faq unrelated keep getting compile error type mismatch try use member function interrupt service routine faq previous use talk hardware trouble taking address c function faq nt different type much syntax making little sense compile time assertion avoid syntax error calling member function using pointertomemberfunction faq evil nt create use array pointertomemberfunction faq add evil compiler error message convert pointertomemberfunction faq article digital mar language convert pointertofunction faq need something like functionpointers flexibility andor threadsafety another way faq marketroid functor heck functionoid would use one faq closure boost lambda library thread make functionoids faster normal function call faq template idea behind template faq com code way template cryptic error message evil syntax semantics class template faq need lookup evil beyond typesafe container array syntax semantics function template faq problem default constructor destructor latter followed former exception eliminate explicitly select version function template get called faq parameterized type faq genericity faq template function something special template type write template us special code one specific type faq huh provide example template specialization nt use faq identically previous faq code template function way get benefit template specialization without duplicating source code faq template template specialization must slow program right faq theory people previous faq boost lambda library pointer aliasing problem template overloading right faq error message inherent problem const ca nt separate definition template class declaration put inside cpp file faq avoid linker error template function faq previous faq question speed template c keyword help template linker error faq evil avoid linker error template class faq get linker error use template friend faq human hope understand overly verbose templatebased error message faq linked better getting error templatederivedclass us nested type inherits templatebaseclass faq parameterized class definition insanely complicated getting error templatederivedclass us member inherits templatebaseclass faq previous faq virtual function previous problem hurt silently possible compiler silently generate wrong code faq fqa error send email abuse applicable numerical computing turing tarpit superset chernobyl sometimes base class constructor must information actual object type dispatching virtual function constructor mention c builtin type c complangcmoderated mention new kind pointer enough cancel c encapsulation original context special case ndimensional array allocated dynamically answer answer conversion code data pointer common say yossi kreinin,c frequently questioned answer single page version c fqa lite c generalpurpose programming language necessarily suitable special purpose fqa stand frequently questioned answer fqa called lite question answer found c faq lite single page version include metadata section fqa faq table content defective c list major language defect c q structured similarly c faq lite link original faq answer fqa error found reader defective c page summarizes major defect c programming language listing minor quirk would take eternity fair item could design choice bug example programming language nt provide garbage collection combination thing make problematic example lack garbage collection make c exception operator overloading inherently defective therefore problem listed order importance subjective anyway different people hit hardest different problem instead defect followed one complementary defect defect cause problem next defect list make worse compile time encapsulation naturally written c code changing private member class requires recompilation code using class class used instantiate member object class rule course applied recursively make c interface unstable change invisible interface level still requires rebuild calling code problematic code controlled whoever make change shipping c interface customer bad idea well least relevant code controlled team people problem frequent rebuilds large part would nt bad almost language c outstandingly complicated grammar outstandingly interpreted literally popular language contextfree nearly contextfree grammar c undecidable grammar like compiler parser probably know mean kind thing simple example showing problem parsing c aa bb cc object definition function declaration turn answer depends heavily code statement context show intuitive level c grammar quite contextsensitive practice mean three thing first c compiles slowly complexity take time deal second nt compile error message frequently incomprehensible smallest error human reader would nt notice completely confuses compiler three parsing c right hard different compiler interpret differently tool like debugger ides periodically get awfully confused slow compilation interacts badly frequent recompilation latter caused lack encapsulation mentioned problem amplified fact c way locate definition ok parse aa bb cc need find whether cc defined object type let locate definition cc move right would work modern language cc either defined module already compiled imported another module either already compiled must first time bump module let compile course next time need compile program need compile module matter many time module used c thing different module file contain many different definition small part definition way tell file cc defined file must parsed order understand definition responsible arrange file sensible string c code course compiled file include bunch header file include file include directive basically issue copyandpaste operation c preprocessor inherited c without change compiler par result copyandpaste operation compile program need compile file number time used file cause two problem first multiplies long time take compile c code number time used program second way figure recompiled change code check include file changed since last build set file rebuild generated inspection usually superset file really must recompiled according c rule dependency definition file include definition nt really need since people ca nt spend time removing redundant inclusion compiler support precompiled header saving result parsing popular header file binary file quickly loading instead recompiling scratch however work well definition almost never change typically thirdparty library waited time code base recompiles time run test program next problem kick run time encapsulation programming language rule defining valid program example valid program nt divide zero access element array length valid program nt necessarily correct example delete file asked move however invalid program necessarily incorrect element array question happens invalid program demonstrates invalidity performing meaningless operation answer something like exception raised program run managed environment answer anything happen program run somewhere else particular c c designed run managed environment think pointer cast theory could run practice run elsewhere happens c program array frequently access something address would contain element since nt contains something else happens located sometimes tell source code sometimes ca nt anyway really lucky program crash keep running hard time understanding end crashing misbehaving later nt scare debugged couple buffer overflow feel confident wait get many megabyte machine code many month execution time real fun start ability piece code modify random object fact try access unrelated array indicates c run time encapsulation since nt compile time encapsulation either one wonder call objectoriented two possible answer warped perspective marketing nt mutually exclusive leave claim objectoriented aside fact language run unmanaged environment ca nt really called bug managed environment check thing run time prevent illegal operation translates certain though frequently overestimated performance penalty performance nt important managed environment way go critical deal difficulty debugging however c compared c example make much harder already binary implementation rule invalid program finally crash enters infinite loop go sleep forever left basically binary snapshot state common name core dump make sense order find bug sometimes debugger show call stack point crash frequently information overwritten garbage thing help debugger figure thing may overwritten figuring meaning partially corrupted memory snapshot definitely pleasant way spend one time unmanaged environment done know source code map binary object code bad c ton rule compiler us different one think exception handling various kind inheritance virtual function layout standard library container c standard binary language implementation rule either order magnitude simpler practice compiler use rule another reason making c code hard debug abovementioned complicated grammar since debugger frequently ca nt deal many language feature place breakpoints template parse pointer casting command data display window etc lack standard abi application binary interface another consequence make shipping c interface team customer impractical since user code wo nt work unless compiled tool build option already seen another source problem instability binary interface due lack compile time encapsulation two problem debugging c code using c interface nt show project grows complicated term code human interaction late wait could nt deal problem programmatically could generate c wrapper c interface write program automatically shoveling core dump deciphering noncorrupted part using something called reflection well actually could nt reasonable amount time reflection impossible programmatically iterate method attribute base class class portable way defined c standard likewise impossible programmatically determine type object dynamically allocated object justified extent performance penalty rtti statically allocated globals could start globals could decipher lot memory pointed feature sort program access structure program particular structure collectively called reflection c nt mentioned make generating wrapper c class shoveling memory snapshot pain small fraction thing c programmer missing due single issue wrapper useful work around problem shipping c interface could automatically handle thing like remote procedure call logging method invocation etc common application reflection serialization converting object byte sequence vice versa reflection handle type object code iterate attribute compound object need special case basic type c must maintain serializationrelated code andor data structure every class involved perhaps could deal problem programmatically debugger manage display object somehow debug information emitted format supported tool chain describes member class offset object base pointer sort metadata stuck c perhaps could parse information thus nonstandard working reflection several thing make pretty hard compiler produce debug information optimize program aggressively enough release build debug information format documented c complicated type system c standard compilerspecific builtin type structure enumeration union class single multiple virtual nonvirtual inheritance const volatile qualifier pointer reference array typedefs global member function function pointer template specialization type integral constant partially specialize template pattern matching type structure example specialization std vector myretardedtemplate arbitrary value template base class particular derived instantiation recursively wellknown practice documented book inner typedefs lot kind type naturally representing type used c program say debug information easy task trivial yet annoying manifestation problem expansion typedefs done debugger show object compiler produce error message another reason cryptic may think stringtostringmap tool enlighten actually nt read impossible count line std map std basicstring char std chartraits char std allocator char std basicstring char std chartraits char std allocator char std le std basicstring char std chartraits char std allocator char std allocator std pair std basicstring char std chartraits char std allocator char const std basicstring char std chartraits char std allocator char wait c support wide variety explicit implicit type conversion nice set rule describing cartesian product type specifically conversion handled pair type example function accepts const std vector const char supposed mean reference immutable vector pointer immutable builtin string std vector char object mutable vector mutable builtin string ca nt pas function type nt convertible admit nt make sense function guarantee wo nt change anything guarantee nt even mind anything changed still c type system get way sane workaround copy vector extremely simple example virtual inheritance userdefined conversion operator etc conversion rule still worst problem complicated type system worst problem complicated typebased binding rule type lie core c binding rule binding mean finding program entity corresponding name mentioned code c compiler compiles something like f b even ab relies argument type figure version f operator call includes overload resolution f int int f int double handling function template specialization template class void f vector int template class void f double argumentdependent lookup adl order figure namespace f b f compiler succeeds translates source code object code nt mean equally successful think ab called compiler thought called compiler fails translates source code error message human also fail understand error message multiple screen listing available overload thing like operator le helpful way c faq item related unbelievably complicated static binding like overload resolution adl template specialization presumably people get depressed ask question silently give short complicated type system interacts badly overloading multiple function name compiler figure use based argument type nt confuse overriding virtual function though far perfect follow rule quite sane c standard probably worst kind overloading defective operator overloading c operator overloading problem c function overloading incomprehensible overload resolution rule example overloaded operator return result value naively returning reference object allocated new would cause temporary object leak code like abc evaluated c nt garbage collection since folk inefficient much better code copy massive temporary object hope optimized friend clever compiler course wo nt happen time soon like several feature c operator overloading necessarily bad thing happens interact really badly thing c lack automatic memory management one thing making operator overloading le useful another thing defective exception consider error handling overloaded operator constructor ca nt use return value settingreading error flag may quite cumbersome throwing exception could good idea case c exception good nt ca nt usual another c feature ohsoefficient manual memory management use exception write exceptionsafe code code free resource control transferred point failure throw point explicit error handling done catch vast majority resource happens memory managed manually c solve supposed use raii meaning pointer smart wrapped class freeing memory destructor design copying semantics exception safe c code almost infeasible achieve nontrivial program course c exception flaw following still c misfeatures example abovementioned lack reflection special case exception mean catch exception ca nt get call stack describing context thrown mean debugging illegal pointer dereferencing may easier figuring exception thrown since debugger list call stack many case former bottom line throwcatch useful longjmpsetjmp btw former typically run faster mere existence make rest code run slower almost never acknowledged c aficionado two feature flaw interoperability true vast majority c feature duplicate facility need array c use clike arr c std vector array class written std vector appeared c standard need string use char std string prestandard string class need take address object use clike pointer c reference need initialize object use clike aggregate initialization c constructor need print something use clike printf call c iostream call need generate many similar definition parameter specifying difference use clike macro c template course thing many way almost language c feature duplication quite special first many way thing usually purely syntactic option directly supported compiler compute ab ab different language second probably noticed pattern c add feature duplicating functionality already c bad feature nt interoperate well ca nt printf iostream vice versa code mixing std string char littered cast call std string cstr etc made even worse pretty amazing fact new c feature actually inferior old c one many aspect best part c devotee dare refer c feature evil frequently actually resort finger pointing name calling someone us c code mention using plain c time falsely claim c compatible c one strength c evil real reason leave c syntax c course marketing absolutely technical reason parse clike syntax order work existing c code since code compiled separately example mixing c programming language nt harder mixing c c good example since stated goal similar c almost popular language way work c code imo old syntax kept strictly commercial purpose market language nontechnical manager programmer known better nt understand difference syntax compatibility existing code simply asked whether old code compile new compiler maybe thought would easier learn pile new syntax also smaller pile old syntax new syntax either way c got widespread exploiting misconception well nt matter anymore kept old stuff matter new stuff nt really new either obsessively built way exposing c infrastructure underneath purely wrong design decision made without axe grind example c highlevel builtin type c pretty lowlevel language atomic type supposed fit machine register usually one sometimes two compound type designed occupy flat chunk memory size known compile time design virtue make relatively easy estimate performance resource consumption code hardtocatch lowlevel bug sooner later happens unmanaged environment relatively simple correspondence source code definition machine memory help debug problem however highlevel language supposed used developmenttimecost executiontimecost ratio high need thing like resizable array keyvalue mapping integer nt overflow gadget emulating lowlevel language possible invariably painful since tool nt understand core type program c nt add builtin type c correction higherlevel type must implemented userdefined class template defect c class template manifest full glory lack syntactic support higherlevel type ca nt initialize std vector initialize std map something like b large integer constant like small part problem cryptic multiline multiscreen compiler error message debugger ca nt display standard c type slow build time unheard anywhere outside c world larger part problem example simple piece code using c standard library followed error message produced gcc quiz problem code typedef std map std string std string stringtostringmap void print const stringtostringmap dict stringtostringmap iterator pdictbegin p dictend p std cout p first p second std endl error message testcpp function void print const stringtostringmap error conversion std rbtreeconstiterator std pair const std basicstring char std chartraits char std allocator char std basicstring char std chartraits char std allocator char nonscalar type std rbtreeiterator std pair const std basicstring char std chartraits char std allocator char std basicstring char std chartraits char std allocator char requested decision avoid new builtin type yield problem ability throw anything without ability catch later class exception builtin base class exception class treated specially compiler could solve problem c exception others however costly problem new highlevel builtin type probably lack easytouse container need new builtin type syntax c compiler complicated data structure ca nt manipulated easily manual memory management similarly lowlevel builtin type c manual memory management inherited c without change mandatory addition duplicate syntax newdelete normally call mallocfree nt course overloaded similarly case lowlevel builtin type make sense lowlevel language nt work add higherlevel feature manual memory management incompatible feature exception operator overloading make working nontrivial data structure hard since worry life cycle object wo nt leak die someone still need common solution copying since dangerous point object die done make copy become owner copy control life cycle owner c concept represented syntax owner object responsible deallocate dynamically allocated chunk memory resource standard practice c assign resource fancy name memory time owner object supposed prevent resource leak nt prevent access dead object copying slow nt work need many pointer object example want module see modification object alternative solution copying using smart pointer class could emulate automatic memory management maintaining reference count whatnot implement pointer class many different type program encouraged use defective metaprogramming facility roughly two kind metaprogramming code generates code code process code second kind practically impossible c code ca nt reliably process source code due extremely complicated grammar ca nt portably process compiled code reflection section first kind code generation generate c code within c program using c macro c template use macro risk getting clubbed death c fanatic irrational behavior left aside people point c macro pretty lame bad template probably even worse limited way macro nt however opposite also true compile forever way metaprogramming routinely abused thing nt designed rat nest bizarre syntactic problem would nt necessarily bad c nt rely metaprogramming essential programming task one reason c c common practice use static binding overload resolution etc implement polymorphism dynamic binding ca nt take arbitrary object run time print many program take arbitrary type compile time print object type one common broken application metaprogramming ultimate purpose able print arbitrary object run time abstract base class wrapping object arbitrary type several class one large project struct obj virtual void print std ostream const template class struct objimpl obj wrapped virtual void print std ostream const wrapped wrap int object objimpl int string object objimpl std string store collection obj print entire collection using dynamic polymorphism void printthem const std vector obj object int int objectssize object print std cout print wrapped ints string etc std cout std endl typically layer syntax involved get idea sort code nt really work requires relevant overload operator visible point objimpl defined nt happen unless routinely sort include directive according rule compiler compile code correctly rule violated complain silently generate wrong code basic reason rely poor c metaprogramming feature everyday task abovementioned ideological decision avoid adding highlevel builtin type example template core unhelpful standard library thing defined c standard library template relatively sophisticated one causing user deal quite sophisticated manifestation problem template discussed particular special program called stlfilt exists decrypting error message related c standard library bad nt patch debug information similar way another problem standard library functionality large part library duplicate functionality c standard library available c program main new thing container algorithm like max adjacentdifference nt count functionality book standard library nt support listing directory opening gui window network socket may think thing nonportable well standard library nt matrix regular expression either use standard library code one reason compiles slowly large binary image library extensively us defective inlining first let define term inlining context compiler refers technique implementing function call instead generating sequence calling implementation function compiler integrates implementation point call made inlining context c refers way define function order enable opposed force implementation call function decision whether actually use opportunity made compiler major problem c way enable inlining place definition function header file recompiled source nt way recompilation source avoided higherlevel object file format way done llvm gcc starting version approach linktime inlining one aspect whole program optimization supported modern compiler recompilation source could also avoided simpler way c way locate definition instead recompiling seen nt crude support inlining designed traditional implementation c tool chain mind would nt bad nt used time people define large function inline two reason care emotionally performance never actually measure someone told inlining speed thing forgot tell slow another reason simply annoying define function noninline since way place full function definition cpp file prototype h file write prototype twice small change example class method return object type defined class need extra namespace qualification cpp file since outside namespace class much easier body written right h file making code compile slowly recompile frequently changing function body trigger recompilation nt even need actually write inline function get benefit large subset inline function program implicitly called generated function common design pattern c code huge class sometimes single pseudoglobal object class case get drawback global variable everybody pointer thing modifies expects others see change get benefit global variable since thing allocated stack program crash buffer overflow ca nt find object debugger time many object typically kept pseudoglobal collection anyway huge class constructor destructor operator course people create destroy object sometimes even assign handled compiler handled compiler generating gigantic pile code point would call userdefined function magic name operator crash somewhere point get see kilobyte assembly code debugger generated source code line try figure variable nt like assigned guessing class member offset assembly listing looking symbolic name member corresponding try guess forgot fact object assigned using default operator added something like builtin pointer member class would nt work could caused problem implicit generation function problematic slows compilation inflates program binary get way debug problem implicitly calling function whether implicitly generated arguably even worse see code like af b c even abc thanks operator overloading nt know whether object passed reference value see information hiding latter case object copied implicitly called function former case possible implicit type conversion involved mean nt really understand program unless know relevant information relevant overload type way fact ca nt see whether object passed reference value point call another example implicit stuff happening c one problem automatically generated function constructor destructors must regenerated add private member class changing private part class trigger recompilation brings u back square big picture issue part deal big somewhat sad picture c practical language faq sure perfect mature wellsupported good business fqa c mature sense different compiler interpret differently c module built different vendor work c wellsupported sense development tool c lack feature unreliable compared language thing make one ask first one trying time situation likely change follows c definition c complicated program people understand c specification leaf aspect crucial interoperability module calling convention c huge installed base since solving problem backwardcompatibly impossible wo nt solved c perfect language faq nt practical seen perfect academy practical business fqa language perfect requirement perfect language inconsistent instead perfection good language provide consistency usability called practical point view language user c different designed perfection language give feature c give metafeatures instead builtin string vector give template instead garbage collection give smart pointer way theoretically implement perfect efficient generic string practice turn nightmare since many different kind string smart pointer etc perfect way work c sacrifice usability perfection however despite obsession perfection c practical language designer perspective rather user point view practical thing c based c helped language gain popularity also main reason inconsistency language ambiguity grammar declarationdefinition type nameobject name duplication functionality different feature pointersreferences constructorsaggregate initialization macrosconstantstemplates filesnamespaces c sacrifice consistency popularity practical approach help increase number c user nt help user get job done big deal oo faq objectoriented programming best known way develop complex system invented customer kept demanding increasingly complex system fqa objectoriented programming useful lot thing useful likely want support built language course nobody know build complex system general case special case oop help thing help ultimately simple way deal complexity surprising think exist reliable process produce anything people willing pay law business powerful law nature powerful kind builtin language support objectoriented programming including support big advantage c class single biggest problem c class private member written header file changing requires recompiling code using important practical purpose make private member part interface c built recompilation slow order magnitude slower virtually language class built make recompilation frequent event business perspective mean two thing c developer spend significant amount time recompilation cycle c interface provided customer vendor cause major headache version upgraded code wo nt recompiled software fail creative way luckily c interface hard provide effectively party must use compiler setting quite typically c module interface written c big deal generic programming faq generic programming allows create component easy use widely applicable reusable efficient using make code faster reduces amount error creating nonprocess poetic description solving hard problem follows waking night thing probably questionable business perspective faq fond people use nt cut create one must like solve puzzle generic component generic probably find offtheshelf one need fqa generic programming context c refers template template hard use define implement due cryptic compiler error message extremely long compilation time remarkable hostility symbolic debugging code browsing data inspection usability problem solved using offtheshelf component template mostly applicable container smart pointer contain point almost anything constraint input le trivial time either nt really need polymorphism better dynamic polymorphism example kind get c virtual function case benefit separate compilation worth overhead dynamic binding dwarfed complexity dispatched operation template form code generation hence nt make code faster slower compared code write manually tend make larger since compiler generates code many time although theoretical way avoid find solving someone else problem evil c macro least control expanded people like solve puzzle usually prefer interesting puzzle template greatest puzzle earth code mean even compiler frequently disagree practical people avoid fiddling problem nobody actually want solved template interesting inside world c real world c better ada visual basic c fortran pascal smalltalk language faq answering question helpful business consideration dominate technical consideration specifically availability compile time run time environment tool developer important consideration people nt get techie weenie endangering employer interest fqa answering question helpful real question language best specific purpose purpose defined business consideration seems worth technical consideration seems possible particular purpose may limit availability developer tool etc constraint necessary meet one thing always true use c use c particular someone gave c interface thin layer wrapper hide using c instead c several practical benefit faster development cycle reduced complexity better support tool debugger higher portability interoperability c option c probably better option another thing always true use managed environment behavior wrong program defined using save lot trouble c like c designed unmanaged environment behavior wrong program undefined unmanaged environment make hard locate fault impose limit damage done undetected fault theory c implementation run managed environment practice nt innumerable compatibility issue yet another thing almost always true picking new language easier experienced c programmer working c result exceeding complexity c people think point comparing programming language example business consideration dominate technical consideration free start new project cobol common businessoriented language us c faq lot lot lot people organization excellent business since lot developer available fqa empirical study indicate people drink beer c developer rule developer understand language different people nt count understand code two thing fault exceptional complexity c wide popularity driving horde people nt consider professional competence personal priority competent developer spend much time dealing problem created language instead original problem subset developer even notice large number developer least advantage motivating development tool dealing c code however design language make notoriously hard produce tool problem motivation ca nt quite remedy compare quality code browsing c ides ides language get idea look languagespecific ides generalpurpose programming ides extension generalpurpose text editor c loses everywhere nt look small example try large program especially one using cuttingedge template library long take learn ooc faq month become proficient year local mentor people wo nt make ca nt learn andor lazy changing way think consider good hard fqa month become proficient get impossible know c keep surprising one forever example code cout p p volatile pointer hint experienced people might expect unexpected implicit type conversion involved people better learning others also true language easier learn use others c one hardest reward extra effort spent learning likely extra effort spent using find hard work c trying another language may good idea subvert way think programming definition good context fit c might beneficial ask common sense example compilation time really cost nothing development time cheap compilation server ghz cpu around run time really priceless nt user keystroke limit speed much data processing anyway efficient c construct really implementation template exception endless copying conversion reasoning behind c may consistent assumption almost never hold learning oo nothing learning c probably better learn oo using different language example oo support c almost parody oo concept example encapsulation supposed hide implementation detail user class c implementation hidden neither compile time change private member must recompile calling code run time overwrite memory object stored find lot implementation class although unpleasant way feature c business perspective faq fqa practical implementation c run managed environment increasing defect rate potential damage undetected defect providing c interface software component impossible practice due lack compile time run time interoperability c extremely inconsistent complicated increasing learning curve defect rate c compiler typically fail comply intricate standard reducing portability c compilation slow frequent increasing development time defect rate people write cryptic dangerous code avoid recompilation example use global variable instead adding argument function saving hour per rebuild x developer hour downtime c lack standard type representing basic data structure like string array list one standard many nonstandard one making harder reuse code interface work different kind string reducing speed due run time type conversion thing mentioned faq false practical purpose despite huge installed base tool dealing c code poor interoperability disaster case problem language definition c interface usually complicated lot small class implicitly generated function like constructor destructors code bundled interface template definition mentioned providing c interface someone outside team hard practice private member many purpose effectively part interface operator overloading almost always counterintuitive one try understand functionality left shift operator print thing always counterintuitive one try estimate performance go figure multiplies two integer two matrix especially inside template definition locate bug lethal one hide place like operator hard see c nt reduce safetyvsanything tradeoff since extremely unsafe support undefined behavior c like buffer overflow add many new scenario undefined result like invisibility template specialization point usage complexity reduces chance someone actually know program prove correctness tradeoff old code call new code almost popular language example c ancient qsort function probably calling new code speak item really supposed describe benefit oo nontechnical people c likely give user benefit oo virtual function dynamic binding central ooc faq sure make c objectoriented language nt switch c c unless need virtual function fqa probably consider c objectoriented language c debugger nt try asking show object located random place example carefully define objectoriented c fit definition dynamic binding central language since otherwise old code ca nt call new code making code reuse hard virtual function one form dynamic binding supported c function pointer inherited c another one switching language c necessarily good idea missouri give simple reason virtual function dynamic binding make big difference faq oo could reuse old code new code call oo old code call new code reuse even source code old code available fqa unclear faq get wrong time technically accurate dynamic binding old code calling new code exists outside oo countless example scale ranging c qsort function operating system run program written long code system special thing oo well work object case dynamic binding mean old code call new code also pass state encapsulated object receiving method call needed new code work also happens outside oo oo excellent unifying framework dealing kind thing especially good oo environment omission fact faq much typical technical inaccuracy specifically difference theory practice come old code available source form calling new code practice code generated c source portable limiting scenario reuse actually work worse even c implementation running hardware operating system rarely compatible actually old code call new code must limit small subset language c one good one andor old new code built tool setting c backward compatible ansiiso c faq almost declaration function without parameter mean different thing c c sizeof x likely yield different value fqa pair word almost compatible almost meaningless many technical purpose compatibility binary thing compatible hand several meaning question compile c code c compiler answer numerous difference way code interpreted thing reported compiler silently misinterpreted however real problem since compile c code c compiler question call c code c code answer yes special c call c code virtually popular language today environment based c making easy beneficial support question call c code c code answer sometimes possible c code expose c interface class exception even problem like making sure c global constructor destructors invoked many platform provide way work question easier c programmer learn use c another new language possibly objectoriented answer c hard learn use hardest part related c subset new part way interact old part question c program likely contain bug similar littering c program like buffer overflow answer yes willing sacrifice performance gain stability managed environment might suit need want improve stability program without sacrificing neither development time run time probably ca nt particular highlevel c compatible lowlevel c come damage caused lowlevel error c standardized faq yes iso standard adopted faq mention twice adopted unanimous vote fqa yes document specifying c mean lot implementation vendor signed important thing standardization however practical implication let examine c standard specify source code translated unlike code built java source compiled c code usually run one hardwareos configuration c standard address interoperability implementation unlike code built c source compiled c code able call c code built compiler setting different implementation implement exception global initialization destruction virtual function rtti mangling convention etc etc differently c standard leaf interoperability implementation like c standard c order magnitude simpler wo nt problem practice c standard define term like module library program translation unit roughly latter mean preprocessed source file deliver dynamicallystatically linked library problem global initialization destruction rtti exception c standard specify machinereadable definition c grammar question whether given sequence character legal c undecidable building tool reliably processing c code including compiler extremely hard c standard long time today different c compiler interpret c code differently frequent source problem static binding figuring function call generated given statement compiler implement name resolution affected namespaces function operator overloading template signature matching specialization implicit type conversion type qualifier inheritance differently neither standard document common sense easily tell compiler right may think compiler eventually catch standard vendor trying time tool still frequently disagree question c mean well next version standard supposed adopted giving vendor work compiler writer really much time hand ccli c standardized may le practical benefit might used expect standard get copy ansiiso c standard faq get ready spend money list link follows fqa get ready throw away money seriously going copy document incomprehensible document may useful language lawyer planning sue people responsible language particular implementation want build working software practical accept fact implementation standardcompliant many dark area find frontend bug example many time nifty expensive tool crash trying process complicated c code compiler used actually problem lost maze c feature competitor already released working product written without complication document also useful metaprogramming compilersdebuggersprofilersverifiers want write tool dealing c code standard may help chill passion throw away much time interview question could ask would let know candidate really know stuff faq nontechnical person managerhr ask technical person help judge technical competence candidate technical person faq one source good question separating truly competent people poser fqa good interview question probably nt mention anything unique c ultimately looking people good call cooperative thing talk call practical think call intelligent best question relevant candidate largest last project answer give lot information good answer almost impossible fake may also need people prior knowledge relevant work since nt time trained gain experience sure case despite fact people looking good learner ask specific question question highlevel software organization issue like oo may useful question lowlevel software construction issue like pointer may useful issue specific c asking thing specific c useful first many thing useless practical purpose best avoided whether someone know thing correlated quite loosely proficiency many excellent developer nt confronted particular obscure c feature yet successfully forgot chance going reject good candidate second good candidate actually knowing answer may prefer employer asking relevant practical question chance good candidate going reject third people look complicated way solve problem show intelligence tend stumble dark area tool use time know answer many cspecific question wo nt know answer many almost nobody question rank people best possible candidate later find people poor practitioner faq mean evil faq mean feature avoided whenever possible strong word supposed help people change old thinking fqa mean feature satisfies following condition inherited c easy abuse especially interacts new c feature cause problem abused especially interacts new c feature c provides one facility duplicating functionality feature replacing original problem new much complicated problem example macro pointer array meet definition corresponding c solution const template reference smart pointer vectorstring class include file almost meet definition except c nt duplicate functionality namespaces parallel notion module ca nt used locate definition consequently faq call include file evil hand function overloading nt come c duplicate facility like template specialization default argument etc enough faq call function overloading evil still function overloading commonly abused leading major problem c user likely different definition evil user nt care whether something came c whether c tried offer duplicate facility forcing user deal original one since still language user typically care easy abuse causing trouble abused part lot lot part c like feature faq call evil language good user language designed promoted sometimes use socalled evil construct faq course evil mean usually undesirable sometimes choose set bad option evil feature best option universal rule think point faq typical c devotee get quite agitated fqa course choice built language example abc evil array keyword standard char argv evil pointer need evil define define usable interface header file inclusion guard note evil array write int supposedly le evil std vector ca nt find c brand new feature duplicating functionality evil old c feature inferior latter many way worse avoid neither feature faq call evil one user would call evil code nt use feature nt mean someone else code live nt example may try avoid exception c operator new well code thirdparty library throw exception catch basic assumption behind c extra feature ca nt problem missing feature many feature c particular many duplicate one real world analogy imagine dog twelve leg pale compared reality important know technical definition good oo good class design faq practitioner business consideration important one precise technical definition good may lead developer ignore consideration dangerous fqa whether important technical definition good particular good oo good class design good formal term universal example work company important consider beneficial something ultimately company order define good however technical definition oo formal mean tell whether something good oo may able reason whether something oo necessarily interesting may interesting reason believe oo good tool job may want make sure actually get benefit expect may also interesting someone call something oo may wonder whether use term whether know talking getting obsessive precise definition bad way make decision also bad ignore definition blindly go hype example people promoting c keep telling good oo c support oo try find oo actually mean suddenly turn important nt little strange beneficial practitioner gain familiarity oo system c oo definition encapsulation inheritance polymorphism trinity interpreted special way allowing c considered oo example claim environment lacking boundary checking garbage collection oo environment sound outrageous people accustomed c many perspective make lot sense anyone overwrite object encapsulation disposing object lead dangling reference memory leak system objectoriented ability tell kind object located given place time say software work object one ca nt find one supposed debug software people claim c objectoriented therefore good may worth checking whether notion good similar business perspective example tell people complain word faq misleading emphasizes question rather answer start using different acronym faq people get life changing term used understood many people pointless people longer care origin term directly associate right meaning fqa people accustomed express idea certain way work trying convince use new way serf useful purpose could use opportunity ask nitpicking question wisdom applied c example would someone deprecate static variable translation unit scope demand people use anonymous namespaces get identical behavior instead use opportunity point time writing fqa appears le popular acronym faq google search yield result wikipedia search still changing fqa something else document option place class object one stated goal c support objectoriented programming page introduces c class outline tactic use defeat purpose class faq oo software fundamental building block class type representation set state much like c struct set operation changing state moving one state another class similar builtin type sense example int hold bunch bit provides operation like fqa correct theoretical definition equally applicable oo language different come specific practical aspect particular implementation class create object happens longer needed job figure one unused deallocate bad happens bug pointer object invalid random bit pattern point dead object program crash worse array object outofbounds index crash modification random object call encapsulation bad happens changeaddremove private value without changing interface code using class recompiled bet call encapsulation bad nt like c class object faq chunk memory certain semantics semantics defined class object fqa also defined bug cause code overwrite data object without bothering use interface defined class people think real programmer write code without bug need upgrade human brain still sound interesting memory c program apparently broken chunk storing object various class defined semantics look promising example could ask debugger kind object located chunk inspect data point could even take one step implement thing like garbage collector check whether object used looking pointer place supposed store pointer unfortunately ca nt tell class c object given pointer run time debug crashed c program find pointer somewhere gut nt know type guess point completely obvious way pair adjacent integer look like hexadecimal memory listing little endian bit machine two adjacent integer might point twointeger structure part threeintegerandafloat structure might two unrelated number happen adjacent ca nt automatically collect garbage c program interface good faq good hide detail user see simpler picture also speak language user developer customer fqa um sometimes want interface expose many detail speak language machine although probably common generic answer something like interface good get user somewhere example using opengl render nifty stuff real time frame rate fftw delivers well fastest fourier transform west qt develop crossplatform gui crossplatform wo nt mean looking like abandoned student project writing stuff scratch lot work using library save lot work apparently learning interface library going pay many people negative example consider algorithm std foreach get u anywhere compared bare loop except need define functor class bad interface learning nt make easier achieve anything useful encapsulation faq prevention unauthorized access stuff idea separate implementation may changed interface supposed stable encapsulation force user rely interface rather implementation make changing implementation cheaper since code user wo nt need changed fqa nice theoretical definition let talk practice property c keywords private protected actually implement encapsulation keywords cause compiler produce error message upon access nonpublic member outside class however cause compiler prevent unauthorized access buggy code example upon buffer overflow debug crashed misbehaving c program forget encapsulation one object memory cost change private part trigger recompilation code includes class definition typically order magnitude code actually using class everything end including everything key moneysaving insight businessfriendlylooking faq put every time change class definition recompiling program using another simple observation c compiles slowly get put two two together right kid c class developer get paid primarily wait recompilation want software easy change stay away c class c help tradeoff safety v usability faq c stuff either stored structs safety problem encapsulation declared static file implementing interface usability problem way many instance data c class many instance data many object encapsulation nonpublic member fqa wildly wrong chance faq author nt know extremely low ca nt use file stdioh hwnd windowsh fact widely used andor decent c library without noticing faq claim wrong need multiple instance encapsulation c use forward declaration struct header file define implementation file actually better encapsulation c class still runtime encapsulation memory accidentallymaliciously overwritten least compiletime encapsulation nt recompile code using interface change implementation fact crude c technique approximating class better support class built c language really shameful apparently shameful faq distort fact attempt save face else reader would wonder whether point c class fqa hereby declares go path therefore mention forward declaration basically make impossible calling code reserve space object compile time mean struct declared header file c class sometimes allocated efficiently forwarddeclared struct however really different tradeoff safety v efficiency escape tradeoff either caller know detail size object compile time break compiletime encapsulation nt ca nt handle allocation anyway real answer original question c help tradeoff safety v usability eliminating c extremely unsafe every pointer used modify every piece memory point code c extremely unusable due cryptic syntax incomprehensible semantics endless rebuild cycle tradeoff silly c programmer prevent programmer violating encapsulation seeing private part class faq nt bother fact programmer know inner working class nt problem problem code written depend inner working fqa right besides people always access code machine preventing people seeing code sense access understand obfuscation encapsulation encapsulation security device faq encapsulation error prevention security preventing purposeful attack fqa depends kind encapsulation managed environment rely support run time encapsulation make technically impossible code access private part object implement security mechanism c encapsulation evaporates run time almost nonexistent even compile time use define private public including header file encapsulation correction hardly encapsulation course security application security harder encapsulation capital e question amusing wonder whether manifestation deep respect business value software engineering option equally hilarious difference keywords struct class faq default struct member base class public class default private never rely default otherwise class struct behave identically important thing developer feel keywords struct conveys feeling member supposed read modified code using class feel like one use class method mess state directly difference important one decide keyword use fqa struct c keyword class added c easier actually making language objectoriented good job come feeling newbie heard oo good check emotional discussion keyword used faq similar two duplicate c feature heated argument best option use case becomes pointersreferences arraysvectors yawn way forwarddeclarationofstruct thing work c better class without virtual function time inline function inline function pet feature people think care performance nt bother measure deal inline function faq inlining function call mean compiler insert code function calling code technically different logically similar expansion define macro may improve performance compiler optimizes callee code context calling code instead implementing function call however performance impact depends lot thing one way say function inline use inline keyword nt matter way use compiler might actually inline function might giving hint sound vague good let compiler generate better andor debuggable code fqa summarize compiler right inline inline function whether declared inline several way nt make inline function meaningless term impossible make sense without discussing history actual implementation c language tool chain compiler assembler linkers straightforward c implementation originally work like first compiler generates assembly code source file separately without looking source file assembler convert assembly code object file object mean sequence byte talk object oriented example function one kind object byte encode machine instruction compiler used implement value byte making object almost completely finalized stage kind unknown address object object refers address another object say function call another function assembler ca nt compute actual value byte making function call instruction done linker allocates object basically concatenating linker resolve reference function call address object mean way inline function include definition header file otherwise compiler nt see code function linker ca nt inlining see byte sequence would decompile first explains need include source code inline function header file nt explain need inline keyword way explicitly declare function inline compiler free ignore hint point well point compiler ca nt tell included function one written source file c preprocessing work compiler see one large file code unless explicitly declare included function inline generate code like normal function linker complain multiple definition code compiled many modern compiler including c c compiler compiler transforms source code intermediate representation lower source language higher assembly language make possible inlining link time either perlibrary wholeprogram basis machine code generated final linkage step even delayed run time called time compilation way nt split function inline inlined compiler get decide actually inlined rest ca nt inlined instead let compiler make decision function unfortunately meaning c c defined old sort implementation mind newer sophisticated implementation around ca nt change simple example procedural integration faq example function calling another function inlining may save copying parameter pas function copying result return stuff also disclaimer saying example many different thing happen fqa basically code may portable performance typically example inlining function may make code faster slower depending lot thing discussed next faq one reason leave decision compiler understands target platform better also reason leave decision human compiler nt really know target platform well know target processor entire system nt understand problem solving ca nt tell many time piece code likely run etc anyway problem helping compiler optimize code adding hint code especially portable code quite hard many thing similar inlining respect example loop unrolling unroll keyword forcing loop unrolling inline keyword exists better way enable opposed force inlining cc inline function improve performance faq sometimes sometimes nt simple answer inlining make code faster eliminating function call overhead slower generating much code causing instruction cache miss may make larger replicating callee code smaller saving instruction used implement function call may inflate code innermost loop causing repeated cache miss may improve locality reference loop compiling relevant code adjacent address may also irrelevant performance system cpubound see told simple answer fqa however relatively simple answer legitimate question need language feature effect undefined see first faq section also relatively simple useful rule saying function short code andor typically called compile time constant argument code computes constant typically good candidate inlining long function typically worse candidate inlining function call overhead negligible compared thing function actually main problem inlining large code size becomes dominant usually good idea explicitly enable inlining short function performance consideration reason c place code header file enable inlining run time performance may may improve compile time performance guaranteed drop mean changing code becomes hard mean best change mean leave wrong thing unfixed debugger handle inlined code pretty poorly typically ca nt inspect local variable inlined function even step source code line debugging optimized production build becomes harder debugging special debug build always possible bug wo nt reproduce build mention spend time building binary application cpu bound nt getting benefit using unsafe language like c except extra quality time debugger inline function help tradeoff safety v speed faq straight c could implement encapsulation using void user ca nt access underlying data instead user call function access data casting void right type first typeunsafe also costly since simplest access involves function call c use inline accessors private data safe fast fqa today c inline function faq probably nt consider current c standard straight wonder afaik backported c together const useless thing irrelevant question completely wrong argument inline accessors private function form highspeed encapsulation first tale void wrong use forward declaration achieve holy grail compile time type safety second good language implementation inline small cstyle accessors link time third private provides little encapsulation change private member recompile code using class fourth frequently private member straightforward public accessors verbose way implement public member since changing representation almost impossible andor hardly useful quite rare case possible useful property language facility allowing overload objmember syntax could solve problem c nt property could refactor code automatically anything could reliably parse c world code considered good thing plenty private int n public int n const return n thus better int n question like lot lot c code practically nothing use inline function instead plain old define macro faq macro evil particular macro expanded parameter evaluated expansion copied interpreted character sequence preprocessor c expression therefore parameter expression side effect macro mention several time macro expand buggy code instance get incremented many time generated code may slow use expression like functiontakingagestocompute macro argument besides inline function check argument type fqa yeah c macro picnic see thing argument type write inline function computing maximal value two argument template inline function say try std max short n function argument passed value reference value may cause extra copying reference may slow code due aliasing problem forcing compiler actually spill value memory order pas code inlined function performance benefit another problem c macro nt frequently inline function better macro though problem macro turn severe many case usual get interesting job choosing duplicate c facility flawed unique way tell compiler make nonmember function inline faq prepend inline keyword prototype place code header file unless used single cpp file else get error unresolved external linker fqa faq decision avoid discussion reason leading requirement wrong clearly people nt understand underlying implementation issue wo nt survive live miserable life competent c developer c underlying stuff tends climb basement repeated attempt make one lying pile hard urgent mindnumbing lowlevel problem therefore legitimate excuse telling totally weird language requirement explaining exists brevity see faq lengthy discussion performance inline function pretty good evidence brevity hardly motivation tell compiler make member function inline faq declare function class usual definition add inline keyword prototype definition must header file fqa yep similar nonmember function another way tell compiler make member function inline faq yes writing code right body class instead writing declaration defining outside class way nt even use inline keyword easier write class harder read interface mixed implementation remember reuseoriented world think welfare many many user class fqa popular language force write bare interface header file separately implementation containing information interface source file somehow language make type interface hard use may language parsable therefore ides ohsointeresting job extracting interface implementation use thing like class view window inspect interface unless use template operator overloading many ides even chance working c code writing inline function inside class definition wo nt really hurt user even ides probably inline short function implementation descriptive comment return x le documentation return value x coordinate lot implementation detail hide eye casual observer inlining likely bad idea anyway inline member function defined outside class best put inline keyword next declaration within class body next definition outside class body faq best practice use definition outside class blah blah blah argues faq passionately issue observable semantics practical standpoint blah blah blah fqa programmer typically good ability keep many detail head good many nt realize ability finite litter brain idiotic best practice nt even affect observable semantics code expense thinking something else write code something else may include really important thing like purpose meaning code nt care sort discussion find attack software professional buzzing buzzword bad practice send link page distract use time gained distraction go buy buzzer talk back reference page c reference duplicate language feature introduced order support duplicate feature reference faq alias object another name called implementation frequently identical pointer nt think reference pointer reference object fqa c reference like c pointer except following difference use value refmember ptr member etc sense ref behaves like ptr must initialized point object otherwise code wo nt compile initialization ca nt make point another object ca nt take address reference like pointer forming pointer pointer reference arithmetic take address object pointed reference pointer arithmetic obj strange phrase like reference object used quite frequently c community claim useful hide fact c pointer reference similar language unnecessary complication context claim simply false example wide class bug come accessing dangling reference reference object already destroyed reference object another name happen name destroyed object inaccessible take previously assigned pointer access destroyed object c also break rule access destroyed global object name destructor another global object different worm happens assign reference faq reference object course assign referent object fqa mean ca nt understand effect statement simple ab without knowing whether reference nice feature complementary reference make wonder mean operator overloading make wonder mean careful work way quagmire c code happens return reference faq assign return value function useful operator overloading array index value array object class overloaded operator returning reference fqa exactly reference exist c reference essential supporting c operator overloading c facility assigning result function call function return pointer assign pointed object need use asterisk dereferencing pointer different assigning builtin operator might say reference serve generic purpose make pointer object feel like object purpose achieved typedef tstruct operator overloading turn useful though essential template duplicate facility solving problem c macro creating new frequently costly complicated problem example operator overloading heart stl userdefined iterators must interface c pointer interoperability stl algorithm achieved operator overloading operator overloading also useful providing userdefined container string vector duplicating functionality builtin string array c introduces duplicate facility order introduce duplicate facility apologist try convince everyone old facility evil explain removing old facility impractical mean faq called method chaining return reference object class used iostream cout endl method chaining method operator slick way use method chaining simulate named parameter asetwidth x setheight fqa like object reference instead pointer method chaining natural objectoriented language good aware problem related high level discussion concerned design method chaining sign abstraction violation example want user object able arbitrary operation return value low level discussion concerned coding way report error except throwing exception always desirable inferring rule like method chaining evil issue probably exaggeration entire design relying method chaining may raise question example iostream library io formatting frequent source runtime error error checked statement like cout b c method chaining used iostream also make formatting quite hard consider io manipulator implementation named argument using method chaining particularly bad joke reseat reference make refer different object faq ca nt reference object fqa ca nt portable c reference probably implemented pointer compiler c operator get address pointer stored particular ref give address referent object one work around extremely rarely need emerge especially source code part program unavailable reference stored inside object figure offset based size member class hosting object modify pointer p myobj severe abstraction violation nt portable c make sure way achieve purpose particular way involving paying money vendor code unavailable source form frequently better idea clever hack like use reference use pointer faq use reference unless ca nt especially interface particular reference ca nt point null ca nt sentinel reference c programmer may dislike fact ca nt tell whether modified value local reference something else form information hiding good program language problem rather machine fqa duplicate feature good answer question c programmer use reference denote pointer ca nt null point single object rather array using pointer case confuses people assume pointer used case nt want confuse people use reference pas argument function turn sometimes want pas null pointer function change reference pointer throughout code c code end containing load pointer reference without apparent reason choice made particular case choose use reference make sure nt need null pointer pointer arithmetic reseating ca nt array reference ca nt store reference container class would require uninitialized reference andor pointer reference ca nt member reference classesstructs must initialized constructor using ridiculous colon syntax make harder reuse initialization code different constructor problem propagates class using class member since ca nt provide default constructor smart pointer object overloaded operator smart reference ca nt overload dot wo nt able easily switch something smart later probably rarely bad since smart pointer rarely good choose use pointer make sure nt confuse c programmer pointer object class overloaded operator lead code like parr get annoying many case compiler wo nt warn pointer left uninitialized may lead error harder debug simple null pointer dereferencing mention security hole enough possibility c program make separate issue problem mean many situation must choose two almost equally bad alternative many people successfully use c pointer c nt mean always choosing pointer reference c produce new problem c feature c programmer habit interacting badly pointer turn nt invalidate argument pointer better reference easy see whether sideeffect local course behavior reference information hiding kind information would like hidden nt information hiding making easy figure program hiding side effect basic crosscutting semantical aspect imperative language make code closer language problem handle object pointer reference pointertoapointer faq handle something identifying giving access object term meant vague omitting implementation detail handle pointer index array database key etc handle often encapsulated smart pointer class fqa one common way implement handle c relies incomplete type typedefs typedef struct foostate foo definition struct foostate included file implementing foo file using probably closest thing encapsulation get unmanaged environment particular important advantage compared c class definition foostate changed calling code nt recompiled c class changing private member trigger recompilation user code shortens rebuild cycle allows provide stable binary interface simplifying upgrade many scenario module defining foo control allocation deallocation object c class user responsible allocation must choose stack global data free store aggregation inside another object particular foostate may contain pointer real state structure allowing transparent reallocation structure c handle technique also way better smart pointer trick c addition readability problem posed operator overloading bare pointer smart pointer tedious coding involved smart pointer provide little encapsulation overloaded operator must return either bare pointer smart pointer mean last smart pointer must return bare pointer compilation never end latter easy achieve template like many useful thing end returning bare pointer object c class way convoluted average c code implementing heavy class unlike example simple object representing value like point space using cstyle handle typically much better pointer reference object c class quite surprising considering fact supporting oo language level one main motivation behind c constructor section constructor create c object well large number problem deal constructor faq constructor initializes object given chunk memory arbitrary undefined state way init function may acquire resource like memory file etc ctor common abbreviation fqa right constructor initialize object particular constructor nt allocate chunk memory used storing object done code calling constructor compiler thus know size memory chunk needed store object class value substituted sizeof myclass point class used mean knowing member public private key reason changing private part c class definition requires recompilation calling code effectively making private member part public interface design c constructor extremely impractical smallest change trigger largest recompilation cycle would le problem c compiled fast automatic way detect code compiled outdated class definition nt nt one many example c ignores practical consideration attempt achieve theoretical perfection language feature never ever impose performance penalty compare approach taken objectoriented language normally choose true decoupling interface sacrificing efficiency allocation language provide way optimize allocation public data let improve performance actually need without illusion encapsulation real encapsulation rest system difference list x list x faq yes big one first statement declares object type list second declares function returning object type list fqa sure quite semantic difference bad accompanied equally noticeable syntactic difference question became frequently asked one problem hard tell c constructor call cc function declaration case discussed constructor without argument relatively moderate manifestation problem memorize stupid special case constructor call look like function call except argument case parenthesis must omitted ton weird rule c grammar another one nt make much difference argument thing get really hairy consider statement f b c ought function declaration b c surely class look capital letter um wait naming convention object make statement constructor call let look definition b c give u answer question ever looked c definition manually using tool ides check fun sure one thing template specialization integer parameter instantiation us size class defined using multiple inheritance virtual function parameter value nt make definition lookup easy get incomprehensible error message c compiler sympathetic parsing c fullblown industrial strength nightmare one constructor class call another constructor class initialize object faq factor common code private function case use default parameter merge constructor calling placement new inside constructor bad although seem job case fqa ca nt one many good reason avoid constructor anyway one constructor may problematic another reason must name class fact dealing overloading c overload resolution huge worm ok surely use faq advice factor common code unless follow another faq advice one suggesting use ugly colon syntax initializing member variable ca nt move thing function mood breaking rule clever trick may right time look real problem skill really needed breaking c rule calling placement new probably bad idea c rule good pretty bad astonishingly inconsistently complicated kind rule get away breaking maze hack doomed collapse enough weight c bury entire project happens anyway invest energy artificial syntactic problem many real one default constructor fred always fred fred faq default constructor one called without argument either take none defines default value fqa yep rule default constructor one called default user class nt specify parameter another neat thing default constructor get generated default example author class fred nt write constructor c compiler automatically generate default constructor nt see fred fred still exists invisible c function great readability debugging happen thing example copy constructor think use c simply avoid feature nt like rude awakening invisible compilergenerated stuff lethal class acquires resource frequently memory penny pound want write c class learn pretty much everything plenty code generated caller side course generate near rest class definition c compiler would know definition good way tell may scattered across many source file author damn plea c like c respect way narrow search range definition entity based name andor namespace anywhere program particular mean default constructor automatically generated point class used scratch yet another reason c code compiles slowly needed order generate code default constructor generated default hope follow call default constructor class member turn may take autogeneration add private member default constructor generated calling code must regenerated yet another reason c code must recompiled frequently constructor get called create array fred object faq default constructor nt code wo nt compile use std vector call constructor use std vector anyway since array evil sometimes need case initialize element fred arr fred fred need call constructor default finally use placement new take ugly declaration cast careful align storage right ca nt done portably hard make exceptionsafe see evil array use std vector get complicated stuff right fqa asking simple question ok let start making way pile rule exception amendment excuse given syntax like myclass arr compiler generate loop calling default constructor myclass pick time barf bag handy look generated assembly code two nice thing sometimes compiler emit loop even clear default constructor nothing automatically generated default constructor get inline call constructor member latter thing nt really need array single object bottom line program get bigger bigger nt know nt anything syntax like std vector fred arr fred get translated call copy constructor practice theory thing could happen general c excellent theory functionally equivalent calling fred time faq nt mention normally slower though typically number must fetched memory allocated copied object instead passed register inlined assembly code course std vector fixed size known compile time le efficient builtin array anyway one reason prefer builtin array initializing array multiple fred object force replicate initializer produce biggest possible initialization code compiler likely notice thing repeat code n time hand class nothing constructor init function call loop another reason avoid constructor horror story faq tell placement new true however nt mention std vector always allocates memory free store standard container use allocating memory stack example want one write placement new necessary make container work c class without default constructor yet another reason avoid constructor anyway saying use std vector get horrible placement new stuff right little strange consider following assumption one must apparently hold c guy want people build container class placement new required right hard use c guy nt want people build container class nt std vector built language thing like aggregate initialization could work maybe could get rid ohsoevil array maybe ca nt expect consistency promoter language language constructor use initialization list assignment faq initialization list efficient except builtin type initializers avoid construction empty object overhead cleaning assignment thing ca nt initialized using assignment like member reference const member thing without default constructor best always use initialization list even nt sake symmetry exception rule need exhaustive list search feeling fqa good reason avoid initialization list ca nt write kind code initialization list local variable reuse result computation loop basically c initializer land must speak crippled dialect without reward effort ca nt move initializers common function reuse initialization code want pas pointer one member constructor another member must make sure constructor called first constraint get complicated help manage constraint compiler produce annoying warning order initializers differs order declare class member even nt matter efficiency argument wrong common case default constructor member nothing typically compiler attribute code initializer list source code line example one opening brace constructor body program crash inside initializer ca nt easily tell one using symbolic debugger different rest c colon syntax plain ugly trouble initialization list like duplicate language feature ca nt really avoid using example class without default constructor relatively heavy one never use initialization list useful rule best answer usual good answer however initialization list really le useful probably good avoid unless ca nt particular avoiding reference const member lightweight default constructor class may help use pointer constructor faq people think ca nt since object fully initialized know rule example always access member inside constructor body opening brace never access member derived class calling virtual function function call invoke implementation class defining constructor derived class sometimes use member initialize another member initializer list sometimes ca nt must know order member initialized fqa right problem questionable scenario come tricky c thing like initialization list virtual function call constructor avoid initialization list use plain old assignment initialization function call constructor body sure member used one problem solved use init function instead constructor virtual function call invoke function derived class another problem solved alternative avoiding dark corner c spend time learning example memorize rule defining order initialization rely heavily code way people need understand andor maintain code get pretty good thing wo nt end one around knowing ton useless obscure stuff ask increase weight organization win big either way least long nobody chooses path physical aggression deal problem create named constructor idiom faq static function named constructor returning object class example way two constructor returning point object one getting rectangular coordinate float another getting polar coordinate also float c constructor could nt name would ambiguous overloading fast regular constructor use similar technique enforce allocation policy like object allocated new fqa three cheer almost like c init function step right direction namely way nt overloading problem get rid pesky separation allocation initialization client code nt really know private member anymore thing left ditch whole class thing use c pointer incomplete type object handle way actually modify private member without recompiling calling code use real objectoriented language problem nt exist first place returnbyvalue mean extra copy extra overhead faq necessarily truly exhausting though necessarily exhaustive list example follows many story virtually commercialgrade compiler clever thing fqa let enumerate possibility using boring binary logic care performance nt care performance first case necessarily good answer nt want code littered thing like returnbyvalue later wonder commercialgrade compiler emits huge slow code performancecritical place performance one goal better writing code way making easy possible predict performance without knowing infinite amount detail specific compiler use production code experience optimization probably noticed another thing c compiler work hard optimizing c subset pretty dumb come cspecific part compiler writer probably happy correctly parse c code somehow lower c backend optimize stuff c level basically get performance need c today optimizers best wasting time c nt care performance also wasting time using c horde programming language designed managed environment wo nt problem coming undefined behavior kind vast majority language way simpler consistent c get another huge burden back course boring binary logic fails represent developer think care performance although vague idea actual performance program people use von neumann model access memory using pointer actually index individual byte think computer call low level typically le aware thing like instruction cache make big program slow simd instruction set give performance gain way beyond generic template implementation numerical algorithm assembly language optimizers general example restrict help optimization const nt people engage lengthy discussion complicated highlevel optimization ultimate goal generic code compiled efficient program smart compiler never exist people welcome waste much time thinking returnbyvalue optimization wish long prevents causing actual damage ca nt initialize static member data constructor initialization list faq must define data explicitly static myclass gmynum fqa meaningless static member global variable respect allocation life cycle difference name lookup access control instantiated initialized per program run initialization list initialize member object instantiated object happen le time per program run one possible reason making question frequently asked assign static variable body constructor gnumobjs people trying follow advice use crippled c subset available initialization list might attempt translate statement initializerlike gnumobjs gnumobjs something nt work probably look way initializers used initialize thing instantiated per object subset c available initialization list make impossible almost anything class static data member getting linker error faq must define data explicitly static myclass gmynum fqa beyond annoying quite weird first glance look reasonable c thick layer syntax top c basic simpleton mechanism instance definition lookup still done using header file holding random declaration object file holding arbitrary definition function declared anywhere n time defined anywhere time compiler ca nt let define something becomes global variable cassembly level header file static int gmynum way get multiple definition file class definition included consequently c syntax defined way forcing solve compiler problem choosing source file stuffing definition frequently choice trivial since class implemented single source file convention rule compiler use simplify definition lookup explanation nt make syntax weird undefined external error nicer least seems make sense realize ton definition compiled cassembly globals c must placed header file consider virtual function table template class definition compiled time header file get included linker must throw away copy keep one copy different different compiler setting andor preprocessor flag problem wo nt bother check turn c ca nt implemented top linker support c linker must support generate n time throw away copy feature documented bug instead issuing multiple definition error gnu linkers called linkonce something support c must add feature linker bad nt think adding typesafe linkage checking consistency definition used different object file conclusion technical reason whatsoever even inside twisted c universe make syntax harder user case hand reason make syntax easier either would introduce inconsistency rest language static initialization order fiasco faq subtle frequently misunderstood source error hard catch occur main called error happen constructor global object defined xcpp access directly indirectly global object defined ycpp order initialization object undefined see problem case error may triggered rebuild simple fqa stupid look c nt define order initialization global object c let write code depends order initialization global object c nt mechanism automatically detect error neither compile time run time c nt make slightest effort help debug problem example go figure actual order object initialized duplicate language feature one ca nt simply say avoid new broken c feature language work hard get trouble particular case probably good rule consider reason avoid instantiating global object nontrivial constructor one nothing instead use plain old c aggregate initialization worry fiasco business quite nasty c initializers passed compilation linkage problem linker creates snapshot initial state global variable failure mode initialization code main corresponding cleanup code called main want clean reinitialize thing without exiting main people calling getenv accessing command line using platformspecific trick code called main improve life people working project program contains huge bulk slow initialization code c statement like point p get translated byte representing integer executable c statement like point p get translated code storing p benefit except getting large program starting slowly people believe need nontrivial global constructor else make user call initialization function work module fact experienced user prefer initialize module explicitly rather autonomously kicking possibly crashing program dependency issue mention printing message popping configuration dialog implicit thing tend become quite explicit day least need quoting faq favorite expression say prevent static initialization order fiasco faq using construct first use idiom myclass getmyobj static myclass p new myclass return p solution may leak another solution working around problem creates problem fqa instantiating global object constructor nothing prevents kind fiasco technique faq frequently referred implementation singleton design pattern btw put quote wherever like one example singleton design pattern following problem mentioned faq leak memory possibly resource c people love talk memory one kind resource overlooking fact account resource actually used program special nongeneric thing like garbage collection may appropriate manage suddenly forget come construct first use business practitioner may find intolerable memory leak reported tool designed detect leak even platform capable disposing garbage left program automatically people interested theoretical discussion may enjoy recommendation violate c rule regarding memory management found standard practice slow mention thread safety plain c global initialized plain c explicit initialization function accessing quite easy function argument may faster fetch may case call function inlined nt necessarily help though contains hidden statement nt see well think clever function manages call new global boolean sometimes called guard variable check time access global need access two globals find interesting list symbol program using program like nm filter output using c name demangler like cfilt may find lot guard variable something kind name c global initialization destruction support broken usual idiom faq solves problem creating worse problem nt constructonfirstuse idiom use static object instead static pointer faq solves one problem creates another problem namely avoid resource leak program crash achieved constructonfirstuse destroyafterlastuse someone access dead object using new mean never destroy least guaranteed last use actually third approach solving problem initialization destruction order nontrivial cost faq author feel lazy busy explain go buy c faq book read fqa faq right variant known meyers singleton also broken probably hardest work around least new variant delete object delete getmyobj increasingly ugly may yield working though unmaintainable program static variable technique c record pointer destructor global array wo nt able control order destruction always order construction reversed nt want control order construction wanted work right approach enough energy spare time repeat free advice use explicit initialization cleanup function realize initialization destruction sequence part design module program hard get state mind think initialization somehow work opposed really interesting thing program afterwards steady state maybe analogy hardware help simplified model synchronous hardware design two tree signal basically wire reaching almost every place system clock synchronizes thing done steady state reset upon initialization conditioned common milestone hardware design getting reset right buy hardware large portion devoted initialization reboot enters reasonable state ca nt biological computer like human brain way nt read c faq book really nt time c fqa book moment bother read modern c design also offer solution buy faq book find third solution involves singleton instantiated hairy template global data structure keeping priority registering atexit callback turn call atexit detects dark area c c standard nobody thought anyone would ever third way sure cost really nontrivial prevent static initialization order fiasco static data member faq using technique described except using static member function instead global function reason long list example follows well discussion performance fqa difference static data member global variable except name lookup access control either use broken slow technique faq avoid nontrivial constructor live happily ever point separate discussion static data member plain global variable well except mentioning static data member brand new c feature particularly nice c recommends wrap syntax another layer syntax safety alternative approach safety use zero layer c syntax need worry static initialization order fiasco variable builtinintrinsic type faq yes use function call initialize int g f way f access g dependency problem fqa exactly code nt compile c seem pretty clear picture nt rule thumb answer general version question need worry use c feature available c also yes plain c safe mind nt need performance always switch safer higherlevel language least c nt pretend highlevel make le promise ca nt keep like go ahead use whatever code like initialize global variable see highlevel language handle constructor fails faq throw exception fqa right q ship fire drown fire stop immediately seriously c exception leading candidate title worst way handle run time error ever invented constructor ca nt return value even though nt technically return object merely initialize chunk memory passed could return status information despite cc limitation one return value per function technical justification yet another reason avoid constructor nothing also yet another illustration hard use c feature avoid others want class nt need exception want handle error constructor also notable c standard library nt handle error constructor overloaded operator pose problem using exception example consider ifstream ofstream named parameter idiom faq useful application method chaining work around fact c c nt keyword argument better combining parameter string bit mask work like file f openfile languageabusetxt useweirdlinebreakrules true writelotsofgorydetails true averagenumberofexcuses zillion sizable implementation two class friend method returning whatnot omitted method call inlined speed overhead code size may slightly increase long story fqa let closer look named parameter idiocy implementation faq push parameter temporary structure normally slower argument passing multiple method call inlined picnic either compare assembly code generated printf iostream call doubt way compare notion slightly used designer c way implement require author class write lot code ultimately nothing ok theory class written used thousand time practice class keep changing forever used couple place nt matter long use c theory belongs would justified extent made thing easier user nt try reading header file class openfile figuring open file openfile class people start storing object class passing around could good idea case except class stupid functionlike name enhancing readability could use different implementation chaining method class file avoiding second class way ca nt detect error easily point see parameter get one one syntactic sugar bitter kind raise two question first nt keyword argument c much easier implement compiler virtually feature c added c way useful second reason work c problem accepting fact nt keyword argument using structure parameter way least making clear use structure parameter example openfileparams params paramsusenormallinebreaks true paramsquitfiddlingwithsyntax true file file trivial constructor fileopen growuptxt params handle error without help c exception nt solve problem code speed size least code class code using class reasonably readable writable seem new problem unless someone considers fact code pretty close c longer rely c method chaining problem abusing c syntax order cover deficiency c syntax thus creating real problem attempt solve nonproblems popular hobby among c professional let check make sense imagining someone spent better part day writing wrapper code trivial thing let try help someone explain accomplished someone else assume someone mind entirely buried c quirk writing um see opening file wrote interface screen code sheesh embarrassing getting error declaring foo object via foo x bar faq hurt sit simple explanation nt really declare object foo x foo bar complete explanation caring professional future actually declares function named x returning foo single argument x function type function argument returning bar nt get excited nt extrapolate obscure common nt worship consistency wise faq actually say quoted thing fqa use computer useful work probably immune braincrippled syntax painful thing like braincrippled semantics sitting necessary find comfortable similar reason nt worry professional future much look boring stupid nt feel like understanding really think programming supposed kind thing someone reject interview nt know answer question like lucky escaped horrible working environment anyway reason curious find happens turn faq answer present arbitrary rule nt help understand anything statement ambiguous read constructor call declaration peculiar function compiler know let try see apparently key problem order tell function declaration constructor call need know whether thing parenthesis object type make parsing f b nontrivial example thing complicated fact bar present problem function declaration constructor call worse time darn thing accepts argument ca nt use figure well c arbitrary rule help compiler necessarily user thing empty parenthesis function declaration unless entirely impossible list special case follows x declares function x defines object bar interpreted function declaration mean argument type object whole statement actually function declaration think problem foo bar c grammar fubar language designed orderly way ambiguity relatively simple way make sure none use formal grammar specification feed program generates parser language checking consistency grammar way yaccbison one mature program kind newer one feature represent complicated grammar afaik generic tool capable representing extremely complicated inconsistent actually undecidable c grammar could help user people promoting c realized consistency grammar something worship technical property far easier achieve deal consequence example one drop ocean problem complexity c grammar guarantee compiler error message remain cryptic debugger stay ignorant ides unhelpful compared available language forever destructors destructors one many piece puzzle c memory management deal destructors faq destructor abbreviated dtor die member function used release resource example semaphore frequently resource memory allocated new destructor free delete fqa yep c garbage collection make memory manually managed resource diehard c programmer firmly believe raii acquiring resource constructor releasing destructors silver bullet resource management problem approach many object point piece data one owner owner dy destructor promptly blow piece data even smaller little piece common way around copying example load large file representing object model xml document something find interesting leaf tree model xml tree whatever want release memory whole model free space processing part need either convince model object nt stuff leaf copy stuff latter way easier try convince owner std list let couple node go jurisdiction one reason cause garbage collection outperform manual memory management course garbage collection never master debugging tool extent anywhere near expertise reach manual memory management time le bug practice choose right tradeoff two common counter argument resource memory system afford garbage collection well surely resource memory surely c code run system afford garbage collection argument yet another evidence c theory practice resource memory must released deterministically usually nt handled well c destructors anyway c destructor ca nt handle error return value ca nt throw exception order local object destructed faq reverse order construction stuff declared last destroyed first fqa make sense sure want write code depends order object array destructed faq reverse order construction last element destroyed first fqa sort make sense surely nt want write code depends one way nt forget use delete delete free array allocated new otherwise stupid thing bother check number element pointed pointer destructors wo nt get called actually theory could worse behavior undefined overload destructor class faq destructors never parameter return value supposed call destructors explicitly could nt use parameter return value anyway fqa want overload destructors like c overloading sure lack return value pity way handle error let hope wo nt happen shall explicitly call destructor local variable faq nt destructor called end scope second call nasty thing like crashing program something fqa standard question ask case like syntax never useful compile anyway call destructor local variable make sure call constructor object go scope example amiserablefileclass file use file want close close method fileamiserablefileclass open another file new file amiserablefileclass amiserablefileclass miserable file class close method might feel need close ugly way try avoid people wo nt understand nt better thing fiddling many ugly bit c want local die close scope created call destructor local really want faq see next faq simple solution nt call destructor fqa ever get situation promoting especially disgusting product c programming language better way handle get excited try find le disgusting product center moneymaking around relax nt call destructor reason destructor call compile nt perhaps sharing u could help calm ok ok already wo nt explicitly call destructor local handle situation faq talking tip simply surround object artificial block amiserablefileclass file file object dy fqa ugly code supposed better ugly code calling destructor constructor level version cryptic least easy see get called ugly piece code truth many actual c programmer artificial block nt code artificial readable ca nt wrap local artificial block faq absolutely something like adding close method amiserablefileclass close file destructor achieve effect destructor call without calling destructor taboo get faq also point hard write close function destructor nt try close closed file fqa change amiserablefileclass better using ugly code work around deficiency faq brave new reuseoriented world class stable interface ca nt change seriously happen class available source form sincerely believe notsoappetizing call destructor call constructor method legal c indeed fail understand problem mentioning answer problem destructors close function respect one way around avoid nontrivial constructor destructors always use init close function next replace c class metaphysical encapsulation forwarddeclared c structs actually yield stable binary interface save recompilation next replace c c execution time matter one many sane safe language development time matter nt feel much better explicitly call destructor allocated object new faq ca nt unless object allocated placement new object created new must deleted two thing remember call destructor free memory fqa translation delete way explictly call destructor also deallocates memory also call destructor without deallocating memory ugly useless case question like exactly delete probably cross fine line separating question everyone claiming know c able answer question identifying people much crelated garbage brain people quite productive simply calling new delete without thinking much two step involved knowing two step probably big deal interesting thing two step idea code using class managing memory object main reason c code recompiled frequently placement new would use faq many us placement new example allocate object particular location pas pointer location placement new like c p new place c args nt use unless really care object life say memorymapped hardware device like timer want timer object particular location beware job make sure address allocate object properly aligned enough space object also responsible calling destructor p c fqa size relatively easy deal sizeof alignment painful advice care object allocated nt make object class constructor destructors stuff way create memory pool code like c pool n take care alignment type safety class c constructor going get called n time statement slow stupid want someone use placement new pool call destructors constructor finish running slow stupid cryptic use char pool n sizeof c platformspecific addition handle alignment wo nt able easily inspect pool debugger object pool wrong type etc mind call placement new deal memorymapped hardware realize constructor going directly modify state hardware even get right yes way get wrong boring enumerate one unmaintainable way write kind code think intuitive think constructor creating timer come hardware already physically oh initializes nt use function init name instead constructor enough trouble thinking semantics hardware interface would anyone want add complexity c problem least faq finally disclosed top secret information explicitly calling destructors write destructor need explicitly call destructors member object faq called implicitly reverse order declaration class fqa pay attention detail member pointer something allocated new pointer destructor purely metaphysical entity nothing physically observable called job call delete pointer call destructor pointed object pointed object technically member class pointer difference intuitive feeling part class formal definition term member one reason making const le useful changing object pointed member change object experienced c programmer find natural since c approach issue relatively uniform tough luck using c lot point obvious would nt ask question first place nifty thing called garbage collection around nearly half century run time system automatically figure object pointed anything collect garbage check quite nice write derived class destructor need explicitly call destructor base class faq done implicitly reverse order appearance class inheritance list virtual inheritance complicates matter destruction class member fqa faq say someone relying complicated detail finalization order need information outside scope faq remark probably refers useful information like location mental institution drug prescription seriously usenet language faq already place normally visited language lawyer need obscure information get job done legitimate reason writing c compiler case feel miserable cheer could worse example imagine misery people use compiler destructor throw exception detects problem faq dangerous discussed faq exception fqa nt ca nt return error code either however many system send email word bummer support email address want destructor detect problem make close function way force new allocate memory specific memory area faq oh yes pool pool pool pool pool pool please forgive time ca nt summarize faq saying almost long previous answer totally control feel like fasten seat belt grab barf bag follow link knock fqa oh nooooooo nt know system one kind memory andor real time requirement ca nt use traditional malloc implementation trust going hate day heard pool pool arbitrary size limit object object everybody going paranoia attack set limit huge value memory start thinking right limit turn extremely hard figure seemingly independent module related memory requirement say handle mutually exclusive situation like use memory need hairy logic compute value perconfiguration basis mean building several version program maybe creating script computing value build time going hate day heard pool absolutely sure ca nt create single allocator managing memory least nt allocate object class constructor pool use clike structs instead refuse give admit pretty lowlevel thing instead want keep pretending programming problem domain reason think c class help go ahead punishment crime discussed throughout fqa assignment operator section operator rather strange possible thing people frequently ask self assignment question listed faq self assignment faq assigning object directly indirectly example void f c x c xy void g c x f x x fqa tricky part assignment operator may overloaded expected overload class resource frequently memory obtained new incidentally exactly case self assignment may lead trouble next question also show faq definition self assignment unfortunately conservative self vague concept worry self assignment faq nt operator probably misbehave severely upon selfassignment yetanothersocalledsmartpointer yetanothersocalledsmartpointer operator const yetanothersocalledsmartpointer p delete p p new thethingpointedbythesmartpointer pp return self assignment first delete p dereference nasty fault handled self assignment fqa oh fault nt nt question listed programming language faq planet mean time language different nt lose feeling guilt check c cause problem language daring call objectoriented garbage collection nt spend time writing stupid function deallocating stuff copying stuff function alike c get write kind code c nt garbage collection problem arises people creating object going dispose especially overload operator thing like abc without even keeping pointer temporary object created subexpressions evaluated c answer owner object chunk allocated memory let operator destructor worry freeing memory common manifestation quite unique language design decision unnecessary copying happens object passed function returned value cut larger data structure self assignment problem another manifestation thing object passed pointersreferences garbagecollected automatically self assignment setting pointer value would harmless worst part actually case self assignment xx example consider std vector pushback someone pass object vector vpushback vback pushback may need allocate memory may cause free buffer already us destroying argument self object end really smart get smart pointer container class right bad still worse good container built language ok ok already handle selfassignment faq adding test like return copying member input object deallocating member fqa avoids destruction function argument via selfdestruction operator however case happen consider std vector pushback performance important simplicity generality one way deal family problem document pas user code illegal push element vector vector need copy element explicitly simplicity generality important performance use language automatically tracking reference object guaranteeing used object wo nt get destroyed operator overloading section operator overloading way make code readable long reader nt care code actually deal operator overloading faq overloaded operator provide intuitive interface user class also allow template work equally well class builtin type idea call function using syntax c operator function defined accept parameter userdefined type giving operator userdefined meaning example matrix add const matrix x const matrix matrix operator const matrix x const matrix matrix useadd const matrix const matrix b const matrix c return add add b c matrix useplus const matrix const matrix b const matrix c return b c fqa operator overloading provides strong source code encryption time needed figure ab actually mean exponential function number type implicit conversion template specialization overloaded operator version involved also one way template malfunction equally miserably userdefined builtin type braindeadpseudotypesafeiterator support syntax p p used like builtin template algorithm like std foreach however could also work without operator overloading example global increment function iterator type implement pointer type using global template wrapper calling p mean operator overloading pure syntactic sugar even nt consider template pile toxic waste rather live without syntactic sugar added language like c together grain salt example ab fails good way return error status language strongly typed ab always return object type example matrix natural bad matrix value anyway whole point ab also write abc need test addition statement ab much better add b throwing exception upon error bad idea language supporting exception opposed merely providing nonlocal goto using throwtrycatch syntax care exception safety every bit code allocation result matrix live allocated dynamically new returned reference supposed clean particular keep list temporary created abc returned value copy constructor going copy lot matrix bad care performance nt surely would nt mind smaller run time overhead garbage collection mention run time boundary checking kind safety belt probably choose different language first place operator overloading necessarily bad idea actually keep promise readability need least three thing comprehensible overload resolution rule easytouse exception easytouse automatic memory management c offer none benefit operator overloading faq exploit intuition user class code speak language problem instead language machine learn faster make le error fqa keyword faq answer exploit intuition tell ab work problem domain right c nt take machine long raise ugly iron head start talking barbaric language mean make listen want program problem domain use language designed problem domain prototype numerical algorithm matlab like c matrix library design hardware verilog like systemc c hardware description primitive library next best alternative use generalpurpose language operator overloading metaprogramming feature actually work typically worse may cheaper specialpurpose tool used le people generalpurpose one vendor must charge user higher price make happy one people think nothing specialpurpose language ca nt done equally well better using wonderful metaprogramming facility awesome language x typically wrong strong programmer productive operating assumption unless xc operator overloading feature sure make c equally adaptable problem domain achieved making wrong tool every job example operator overloading faq real hypothetical many concatenates couple std string object napoleonsbirthday increment object class date b multiplies two number access ith element userdefined array class object x p dereferences smart pointer actually represents address disk record dereferencing seek location disk fetch record x fqa c operator overloading bad way implement thing equally bad way implement almost everything come mind string general purpose highlevel language good builtin string type text processing common task particular string extremely common type function parameter builtin string type kind interface use kind string user spend time converting string type even char std string standard string type lot lot nonstandard one interaction operator overloading fails hide example dir file compiles std string dir char file fails compile char dir std string file exploiting intuition user date date mean add day minute second question especially interesting someone severe modelingtheuniverseusingtypesystems attack defined time class incremented second date class incremented day implicit conversion know date incremented day interval mean one day use int instead date encapsulation exactly number built language stop pretending programming problem domain approach perfectly legitimate see discussion string array built language use tricky data structure resizable array built language good enough making look like array necessarily good idea example people might want find definition operator search oh using ide actually understands c syntax select opening bracket ask definition never worked smart pointer disk record wish c weenie used operating system implement file system using advanced technique way whenever dereferencing would fail either error would nt reported exception would mishandled weenie would lose file would good everybody basically operator overloading use case fall one following category thing ca nt implemented well unless built language array string number smart pointer thing like reference counting thing tricky nt confused builtin type interface different smart pointer thing like disk access complicated data structure thing obscure nt implemented incrementing date unclear amount time transferring output stream hexadecimal mode without option restore previous mode however nt mean operator overloading never useful language actually support operator overloading make class look ugly nt supposed make code clearer faq supposed make code using class clearer example may claim operator int le readable getat int surely arr readable arrgetat realize reuseoriented world usually yes faq say usually many people use class one writes code one person think good majority user fqa guy living reuseoriented world noble character bad stuck planet earth nt seem particular orientation last time checked planet class write used exclusively majority rest used two three people get write class used n people n typically array class something little bit le trivial functionality earth considered good interaction people component error likely insert faq favorite pseudobusinessoriented statement defect rate course nt mean claim make sense example user figure class use interface must defined readable way look readable used user probably need understand implementation even code longer bug might take bug piece code may end corrupting data c people inspect left data order find original error unreadable andor complicated implementation good idea even reuseoriented world last least arrgetat bad operator overloaded faq overloaded ca nt overload c operator sizeof ca nt overload c operator overload everything else fqa restriction example ca nt global operator overload overload operator using class member function necessarily bad overload operator let compare two char using string comparison faq least one parameter overloaded operator must userdefined type even could nt use class like std string array evil fqa c nt let good reason could would make sure program compiled consistently sense operator called everywhere context calling operator char argument two operator defined two different module unfortunately problem almost equally severe userdefined type example std map nt overloaded operator printing ostream define one library linked together single program result unpredictable ranging linktime error program printing map using code mine array evil mantra chanting author c standard library defined std ifstream constructor accepting const char std string nt define operator const char std string either std ifstream std string dir file cstr give break faq say std stringlike class std string majority audience stuck one many many stringlike class developed one added c standard library would laugh quite bitterly create operator tothepowerof operation faq ca nt overload operator already c without changing number argument associativity precedence think wrong consider problem p mean time result dereferencing p could define operator make expression ambiguous know operator overloading syntactic sugar always define function instead overload pow could overload operator work wrong precedence associativity fqa sure lot grammar c making unambiguous addition almost impossible fact informally speaking finite amount good syntax language valid argument advocate domainspecific language make short simple syntax map stuff useful domain argue language syntax lisp smalltalk forth example language almost syntax however funny argument used c faq hardly compatible claim c applicable everywhere huge amount completely pointless complication c grammar like constructorfunction declaration puzzle operator overloading nt provide anything fundamental syntactic sugar talking make syntactic cyanide overload pow somebody tell point overloading want obfuscation tool use allow keep source unobfuscated form may handy time besides nt std pow afaik allowed add name std namespace add global function pow lose precious transparency std pow x never call version pow pow x point idea overload bitwise exclusive mean power stupid wonder get idea someone decided overload bitwise left shift mean print file wait minute oh well okay tell operator override operator override faq want help user confuse overload operator make life user easier fqa translation nt overload c operator nt overload c function either c overload resolution always end confusing user ca nt add error handling without using horrible c exception ca nt allocate object simply efficiently guideline rule thumb overloading operator faq rule thumb listed actually say use common sense basically rule making overloaded operator behave similarly builtin operator define make associative nt change parameter etc faq warns list exhaustive interpreted strict rule ca nt exception fqa rule thumb thing simple functionality hard get right linguistically compiler use common sense time thinking get syntactic sugar questionable taste implementing uservisible functionality instead people customer employer colleague friend ultimately care also much fun create subscript operator matrix class faq use operator get two index j nt use operator get one index code listing follows fqa oh dear writing matrix class condolence define subscript operator prepared answer many question allocate result operator map expression like ab c optimized implementation several operation example multiplyadd writing matrix class overloaded operator instead prototyping code matlab like implementing prototype c run fast anybody tell code instead figuring ab c actually work nt matrix class interface look like arrayofarray faq arrayofarray alternative us operator return array object turn operator returning single element approach likely worse performance issue optimal layout matrix memory say faq maybe say something else similar talk lot issue fqa ca nt implement arrayofarray syntax single function call c operator need return temporary object operator mean extra work instead writing function write whole class function returning object also mean extra work user read interface also mean extra work compiler chance compiler planet earth optimize temporary object close zero mean also extra work machine running code achieve syntactic sugar reasoning frequently used optimize entire matrix class overloaded operator schedule nt depend performancerelated claim memory layout stuff still nt get nt matrix class interface look like arrayofarray faq make checking argument changing data structure harder faq explains still done claim compiler optimize temporary nt like fact lot work fqa fqa primarily nt like fact lot work would also like point compiler probably optimize temporary key performancecritical data structure extremely costly change matter much encapsulation use optimization depend representation checking argument always hard operator overloading would operator error found return set global error flag throw c exception option really acceptable anyway want waste time without getting useful work done way much fun getting operator sort work faq fqa agree design class outside interface first inside data first faq outside course long discussion accessors one linkedlist class follows groundbreaking conclusion reached give accessors element list infrastructure say pointer first node fqa question operator overloading kind accessors want class final code way design think code single good way design class kind software sometimes interface important thing sometimes implementation sometimes designing kind thinking sometimes need think data order figure kind interface ultimately possible implement efficiently sometimes must figure interface first make sure whole thing actually useful frequently think possibly iteratively refine idea implementation important always change reason may emerge implementing boringly trivial thing nothing one way nothing software industry obsessively seek best way spell iteration element list living way faq mention billionline app c nt scale many line code sense large monolithic c application one code run single address space hardly maintainable claim may made language well problem especially severe language assuming unmanaged environment buffer overflow module may silently corrupt data module b lot unmanaged code breaking process save several ton bacon course build system beginning way retrofitting extremely expensive overload prefix postfix form operator faq like iter operator p iter operator int p postfix version return something equivalent copy made operator call fqa silly syntax nt overload operator please read follow boring rule syntax semantics help soften blow user even fall asleep forget whole thing lucky efficient faq builtin type may faster userdefined type need create copy compiler may fail optimize likely overhead small pick habit using fqa oh suddenly allmighty compiler ca nt optimize temporary actually picked habit point picked even useful habit avoiding overloaded c operator really interesting question performance ab c compared db c da compared optimized multiplyandaddmatrices b c function friend question friend declaration short answer probably nt need friend declaration friend faq class declare class andor function friend declaration allows friend access nonpublic class member unaccessible code outside class fqa word friend refines access control provided private keyword mean almost useless simply private almost useless specifically fails provide encapsulation therefore little comment define interface module developed independently want interface stable better use c interface definition c insist using c forcing module built tool relying private provide encapsulation bad idea changing private member trigger recompilation client code use forward declaration andor pure abstract class provide stable interface work internal interface different class module stuck c using private surely better defining member public way someone easily tell member accessed outside class clarity good however little reason ob fine detail access control internal interface time distinction private public good enough describe want feel strong urge split tightly coupled function several class friend make member public course possible argue forever bad design allow everyone access member bad design tightly coupled class however internal class module nothing nothing le module reasonable size access control big deal module huge huge problem either way especially c compiles forever nt localize damage run time error therefore friend totally useless external interface almost useless internal interface friend violate encapsulation faq contrary enhance used properly course example use split code two class data inaccessible code class use syntactic variant member function think friend part class interface instead something outside class fqa encapsulation c nt encapsulation access control code outside class using private member class compile neither compile time encapsulation stable binary interface run time encapsulation safe memory access violate case two class discussed previous faq argument sound convincing think c class good way define important stable interface system syntactic variant business probably overloaded operator c syntax make impossible define overloaded operator class member unless first argument object class since c us stream obj print thing many class declare friend operator example argument interesting think c operator overloading good advantagesdisadvantages using friend function faq advantage allow designer choose objfunc func obj lower maintenance cost disadvantage require code achieve dynamic binding nonmember function ca nt virtual designer syntax choice func obj dynamic binding needed func delegate protected virtual member objfunc fqa listen carefully excellent opportunity learn c approach writing software choosing two equivalent syntactic form called design availability many form right choice expected lower maintenance cost make sense seen headline engineer replaced objfunc func obj profit skyrocket researcher win turing award discovering new way replace objfunc func obj say loud real choice obj stream stream obj something like really operator overloading memberglobal function distinction matter syntactically say objprint stream instead shifting stream amount bit object something mean friendship nt inherited transitive reciprocal faq mean class derived friend class nt automatically become friend trust kid friend friend friend nt automatically become friend trust friend friend class declaring another class friend nt automatically become friend class trust anyone call friend fqa real life analogy scary detailed discussion friend access member one reason avoid friend possible benefit little extra clarity benefit dwarfed extra obfuscation everyone sure friend mean come class hierarchy stuff class declare member function friend function faq use member function unless must use friend function example may need friend operator overloading fqa faq say last see operator overloading way faq advice may simplified use observation c operator overloading pain neck inputoutput via iostream cstdio section explains benefit iostream typesafe io library mean save keystroke type code use iostream instead traditional cstdio faq four reason increase type safety iostream compiler know type thing print stdio figure run time format string reduce number error stdio type object pas must consistent format string iostream remove redundancy format string ca nt make error printing object userdefined type iostream overload operator support new type old code wo nt break stdio wo nt let extend format string syntax seems way support kind thing way avoiding conflict different extension printing stream userdefined type implement stream class deriving base class provided iostream file extended real class fqa ask kind manner told assignment number convert evil printf x statement std cout std hex std setfill std setw x std dec std endl even commit environmental crime namespace pollution adding using namespace std removing pesky std verbosity still amazing achievement accidental follows one basic flaw c way thinking everything type axiom example hex special type hex stream every strange object sent cout faq explains thinking good faq wrong type safety good thing gain performance last time checked nt really gain typical iostream implementation slower bulkier typical stdio implementation anyway nt io bottleneck oh get type safety supposed help compiler catch error important people never actually look print need population surely justify crud gcc get parse compiling c hello world problem well time spent waiting compile easier fix runtime printf problem compiletime iostream problem compiler helpfully listing hundred overloaded left shift operator maybe everything type good thing let print object userdefined type believe concentrate second chance achieve enlightenment earth prevents printing userdefined object printf write helper function get pointer object print give function special name nt shovel list overload anymore verbose function call separate statement unlike funky left shift operator well look simple statement printing integer care verbosity printing stream userdefined type well claim valid sense way define custom file nothing fact real class real class welldefined term c class look pretty surreal compared class defined almost language ever seen anyway stdio could provide way define custom file instance providing read write callback author nt bother ability define custom stream justify problem iostream feature unique iostream ability achieved relatively sane oo way almost way done many language saner c io library saner iostream iostream thing gain extra typing extra long build cycle error message extra large program image get shift file object integer program go infinite loop someone enters invalid input character faq probably something like int std cin without checking error attempt read stuff std cin wo nt actually read anything stream entered erroneous state presumably wrote program still keep trying use something like std cin instead fqa yep iostream way handle input error reason nt throw exception really bad really bad c exception nt return error code either overloaded operator return first argument neat operator call chaining work set error bit dreaded zombie object pattern faq condemns convincingly check error using std cin like object overloaded operator void void convertible bool also check endoffile condition way actually check errororendoffile condition operator call chain le detail error context left simple safe efficient elegant oh iostream state bit example std hex transfer hex mode people frequently forget undo effect especially entertaining print number like good decimal ten hexadecimal sixteen well found bug reason went undetected typesafe almighty paranoid c compiler use std dec get stream back decimal mode um actually transfer decimal mode necessarily back nt know mode hexed get interesting people print number userdefined object statement count hexing maintain effect userdefined object printed get std cin skip invalid input character faq example std cout give credit card number std cin n std cout nt mess written c std cinclear std cinignore std numericlimits std streamsize max n fqa oops forgot test end file brave user hit ctrld whatever take close standard input given terminal program enter infinite loop overloaded operator error handling compatible std cinignore std numericlimits std streamsize max n speaks ca nt invent use case getting work done funky std cin foo syntax work faq istream overloaded operator void compiler call operator boolean context expects condition example void converted boolean operator return null nothing left read format error occurred previously fqa nothing funky ugly boring also scary many people think programming using complicated syntax simple thing without even getting right tell endoffile condition format error operator void operator bool apparently compiler implicitly convert booleans number numeric context nt want compile wait actual book called imperfect c arguing operator void way go either way delete file would compile surely nt want mean fact statement completely moronic nt matter morone right get equal opportunity exciting world c programming let catch error compile time evil people spread rumor problem undecidable keep trying input seem process past end file faq stream nt know reached end file actually try read past end file instance stream object may read character entered interactively using keyboard impossible tell fqa right nothing iostream except fact iostream handle io error silly way discussed program ignoring input request first iteration faq nondigits left input buffer ignore using call like std cinignore std numericlimits std streamsize max n fqa nt fact many question handling input format problem ring bell silent treatment error wrong stuff like parsing better handled language good support exception builtin string container help live without exception least library treat error reasonably iostream interface operator call chain make error handling awkward get end output line std endl n faq former additional sideeffect flushing output buffer therefore latter probably work faster fqa latter also shorter unless using namespace std many people probably ask question think endl end line way normally done given platform say emit crlf window lf unix endl behaves way n suppress behavior open file pas io binary iostream b flag fopen provide printing class fred faq adding friend std ostream operator std ostream const fred fred operator ca nt member class need object second argument first one fqa yeah yeah c stupid syntax let forget moment real problem semantical start question provide printing class formulation encourages give answer spirit everything type indeed kind answer given faq way print object class really question want single output format class instance might want textual format people binary format machine could several textual format even integer printed using different base really want develop maintain layer syntax needed make thing like hex dec sort work define named function printing friend thing also questionable due respect might want print several different output channel without creating adapter class derived ostream one simple reason heretical behavior performance ostream may slow thing like realtime logging create accessors data want print different output method wo nt need part class may stable interface encapsulation already made data public one read printing stringstream providing accessors violates obfuscation encapsulation abandon friend part operator part remaining part faq answer create global function accepting kind stream object object class printing make good advice particular may better method reason making better friend however unlike friend method may polymorphic might useful nt always use printon method rather friend function faq always method may useful class hierarchy example case would normally protected public people think friend violates encapsulation therefore prefer operator call public method class even though class hierarchy basic assumption wrong end writing extra code nt solve real problem confuses people fqa make thing clear printon method something like void fred printon std ostream const faq right important thing creating extra layer code nothing delegating work layer code pesky habit many people feel good design mean lot code lot layer actually meaning bad design fact friend really needed compensate syntactical limitation c well problem whole friend operator approach discussed previous faq main theme main theme message designer listen voice c overlord originally inspired create n layer functionality stop provide input class fred faq adding friend std istream operator std istream fred fred fqa defective technique symmetrical operator thing discussed use opportunity look advanced defect approach beginner defect go two faq back complicated problem come source simple problem idea type want exactly one output function looking like bit shift operator therefore create complicated problem need complicated type luckily c come one complicated type system solar system example simpler system consider std map standard iostream mean operator reading writing also standard think know answer matter create template operator printing kind map happy unless integrate code single program time later used intuitive name operator printing function normally rename one two special case really going ugly instance template break think everything printed even nt printmap std cout map mymap std endl ugly even seasoned c developer pretty low standard real fun start two people overload specialize whatever call operator special case type conflicting way instance know print std map std string know print std map int question get print std map std string int compiler trouble c compiler trouble immediately empty bowl dumping nice large stinky error message right face happy happy joy joy dear colleague provide printing entire hierarchy class faq create protected virtual method class override printing call friend operator fqa fantastic except protected friend operator part course use plain public virtual method instead open stream binary mode faq open stream std io binary flag way stream translate n target platform representation line termination may different instance window us crlf fqa fopen pas b character option string whole issue pretty annoying especially work binary file system n actually translated forget open binary everything work port program system n actually translated find case open file binary however fault c fault distributed nature human race fails standardize simplest thing many program may screw binary file due family issue instance many ftp client unless explicitly told otherwise reopen std cin std cout binary mode faq portable way fqa probably fault different incompatible system rather c programming language writeread object class tofrom data file faq read section serialization fqa fqa nt section serialization short summary rude awakening standard serialization mechanism c furthermore way define reasonable custom one since reflection way figure structure arbitrary object given pointer way create object class given name sort id etc however many custom package serialization typically thousand source code line requiring use hairy macrostemplates serialized class member roll dump whole snapshot process file nonportable way may cheapest thing frequently sound send object class another computer eg via socket tcpip ftp email wireless link etc faq read section serialization fqa keep expectation low ca nt open file different directory testdat faq expands tab character use say backslash followed fqa escape certain thing somehow perfectly legitimate unlike fact c standard library way open directory example tell key key pressed user press enter key faq c standard nt even assume system keyboard portable way fqa good c standard reason provide standard interface system keyboard make key pressed user echoed screen faq ca nt see fqa yep system nt screen sure nt support one interestingly c standard assumes system persistent file separate output error stream even interestingly assumes might need unicode output locale surprised find strange place device carrying dead code supporting feature live move cursor around screen faq using whichever way work system related c standard fqa spotted trend clear screen something like clrscr faq c standard systemspecific fqa window socket regular expression see c standard nt assume screen network controller hardware regular expression matching lame standard library another one thing making using c joy change color screen faq depends system c standard nt refer fqa ansi standard ugly character sequence send coutstdout nt need call special function many terminal support freestore management page one hard boring dangerous thing c force manually killing object right time one dirty job delete p delete pointer p pointedtodata p faq would p keyword deletewhateverispointedby similarly free called freewhateverispointedby fqa really right keyword empty string nt need object live long someone use becomes unaccessible longer used anyone die making sure actually happens job course garbage collection may time consuming average andor worst case sure implementation new better respect though least garbage collection managed pointer heap compaction newdelete bare pointer piece memory used block small satisfy actual allocation request accumulate effectively run memory nice situation called external memory fragmentation try production code supposed long mention unlimited uptime fun make mistake one single mistake deletion either run memory program crash corrupt data many experienced c programmer everything avoid explicit call new instead use raii constructor new destructor delete eventually lead lot unnecessary copying ca nt point data inside data structure since data structure may die kill data whether someone point make copy data keep believing manual memory management make c program fast managing life death object big deal perhaps language nt objectoriented safe delete pointer twice faq nt nt program may crash corrupt data work test nt mean always work nt fqa delete pointer still point place difference place marked free systemspecific way second call delete probably try mark free may problematic longer free actually someone already allocated object wiped second delete call still someone allocate object overwrite object destroyed immorally way fail say code marking block free assuming taken may count memory right place pointed block start pointer contain metadata longer contains etc happens managed environment first nt delete anything environment second never deletes anything unless nobody point never stuck pointer pointing graf dead object may already inhibited freshly created object good whatever project memory management one stated goal nice something nt really want free pointer allocated new delete pointer allocated malloc faq ca nt nt program may crash corrupt data work test nt mean always work nt fqa many duplicate c facility new malloc ugly using mismatching function allocation deallocation le ugly want like using opening parenthesis closing bracket count something like work reliably use new instead trustworthy old malloc faq newdelete call constructordestructor new type safe malloc new overridden class fqa virtue new mentioned faq virtue constructor destructors operator overloading garbage see happens garbage collection type safety issue really tiny normally cast void returned malloc right pointer type assign typed pointer variable may annoying far unsafe oh using trustworthy old malloc make possible use equally trustworthy old realloc bad nt shiny new operator renew something still new bad enough justify deviation common style used throughout language even language c particular class nontrivial constructor misbehave fatal way simply malloc object use new throughout code people rarely overload operator new probably wo nt get way much overload new always ask stop use realloc pointer allocated via new faq guess ca nt realloc may end copying memory c object nt like memory copied without getting notified like copy constructor operator handle copying way think mallocreallocfree use heap newdelete fqa fact renew whatever call one reason use custom allocator instead new allocate uninitialized memory malloc use placement new call constructor code thing usually ugly sin hard get right get way debugger many c object live happily ever moved realloc different set object always get broken pointing old place intersection set nonempty since object keep pointer special case sort solved copy constructor operator solution simply implement copying pointer set correctly however general case ca nt solved ca nt move c object destroy old one unless prove pointer left old location ca nt proved automatically general case halting problem ca nt automatic heap compaction could solve external fragmentation problem implementation us two heap one malloc one new stink sometimes want somehow replace malloc something else nice able malloc twice malloc new two heap probably mean fragmentation point two heap never seen done actually legal need check null p new fred faq would bad new throw exception nt insert test place unless using old compiler still work around exception thrown fqa c exception frequently worse code simply straightforwardly crash least latter case good chance find call stack happened disabling exception support latest greatest compiler sometimes good idea really write code handling outofmemory condition gracefully easy task simply catching c exception first probably avoid recursion c nt throw stack overflow exception know program ca nt behave gracefully memory second going memory take account need memory might need reserve advance nt many choice case exit error message instead hard crashing show message saying enough memory could user please close program retry maybe user want program quit done without exception exception sort handy approach abort current operation exception good way develop robust code actually want deal gracefully outofmemory situation probably noticed rarely done way league reason exception many way make subtle error error handling code aspect application important usually better making handling aspect explicit clear convince older compiler automatically check new see return null faq pas callback function throwing exception std setnewhandler work except global variable calling new set handler way make sure handler set first even set constructor global variable variable necessarily first one constructed fqa wonder want new throw exception desire may indication certain kind mindset hmmm let conduct test happy faq solution actually bothered fact constructor global variable may run memory without throwing exception option scare probably mean like hairy thing main undefined order including throwing catching exception confirms worst fear hope get habit time happen work project contrary think global constructor nt get complicated approach apparently little bit practical really puzzled absolutely sure want new throw exception need check null delete p faq delete already nt could get test wrong spend time testing execution path required testing methodology fqa apparently faq written imbecile ca nt test null nt test code writing see worked mechanically test branch testing methodology want really create vivid image member faq target audience imagination think idiot cover execution path poor creature must artifically create case p null without rest program crash tricky enough inconsistent rest data mental capability programmer get clear picture faq designed extraterrestrial intelligence struggling many difficulty c actually reason mean time lifetime people actually made something easy maybe inspired example free also accepts null pointer pretty inconsistent spirit language surprised first found two step happen say delete p faq p first step p second operator delete p fqa ugly syntax nt especially fact ab operator b delete p operator delete p semantics consistent decoupling allocation operator new construction decoupling break encapsulation without admitting caller must know size object class compile time mean must know private member order increase efficiency straightforward implementation ca nt justintime compilation optimization know size compile time optimize allocation c code recompiled time p new fred fred memory leak fred constructor throw exception faq compiler effectively generates trycatch block around constructor call exception thrown catch part deallocates memory rethrows exception fqa throw exception constructor make sure caught custom allocator used kind look like new poolalloc fred nt throw exception implicit trycatch around new one illustration fact exception increase size code even nt use one good thing compiler flag disabling exception allocate unallocate array thing faq allocate p new n deallocate delete p using delete p error fqa default constructor one work without argument one reason avoid nontrivial constructor alternatively rather create problem solve one replace evil array std vector forget deleting array allocated via new n faq infect program incurable decease something like corrupt data die fqa want realize idiocy rule full glory consider new call malloc allocator pass block size allocated pointer passed delete size delete know free block right size little much store size somewhere nt course ca nt bothered figure number object pointed pointer like divide stored size sizeof p making actual use type safety call destructors properly wait deal data corruption nt worst possible effect resource leak due fact destructors called best part operator new allocates little bit memory asked order store number frigging object place also done way effect equivalent delete us call destructors allocated object since new nt store number allocates amount memory told becomes clear mismatching new delete operator lead data corruption bottom line c store number object block new called twice new called rather introduce lethal bug program use information help get right call hospitality drop deleting array builtin type char int etc faq ca nt may think int trivial destructor destructors example someone replaces operator new operator delete way incompatible mismatching newdelete call fqa yeah think use array int typedef someone change typedef smartintclass instead plain old int think brain thinking exciting useful thing like serious answer language two set similar matching operator programmer better avoiding mismatch operator fact really one delete operator wait make zero may reason switch different language violate rule language p new fred n compiler know n object destructed delete p faq sing along kind magic two common way used friend compilerimplementing magician one allocate extra memory store number object one use associative array mapping pointer size fqa may wonder clever magician nt rely malloc magic end block size stored twice ask new byte new asks malloc byte malloc asks sbrk whatever gut byte answer course modularity translation implementor c language bother figure detail malloc easier option leave implementor c language simply portably implement new top c runtime byte memory surely good enough reason magic next thing know call exploiting security hole o utilize unused processor memory resource magic legal moral member function say delete faq long sure object allocated new pointer used anything delete fqa bit weird probably cause many people get alarmed start anxiously looking place might touch deleted object likely le exotic access dangling reference force user class allocate object new misguided spirit c therefore another source confusion least provide static method allocates object new declare destructors private document intent control allocation want anyway want impress people real magic actual functionality yet another syntactic exercise allocate multidimensional array using new faq answer long large code listing fqa operator new c decided new new sufficient many stupid reason decide way anyway two option allocate flat array manage ndimensional indexing manually generating onedimensional index using expression like xy width allocate array array correction dimension need allocate new loop iteration allocate new n second way get naturallooking indexing worse performance le speed space may convenient need onedimensional array twoormoredimensional array different length even probably better fake flatter kind array ugly way care performance way nt make best try safe language previous faq code soooo tricky error prone nt simpler way faq sure define matrix class dirty work good obvious anyone familiar star trek reference follows fqa nt see star trek moving dirty work single place nt make work simple course better work many multidimensional array class seen happens someone try convert mean ca nt single place unless place compiler way need performance ca nt really encapsulate layout multidimensional array need thing like get one column right one row flatindexrowwidth instead computing thing like x rowwidth every time innermost loop try define kind function like incrementbyrow really believe make possible transparently change representation later thus turning optimization carefully developed representation pessimizations go ahead define optimize horde tiny function keep lying make code readable data representation important bad many people believe important thing data hide behind code interface always change data representation later may right majority case likely wrong important case matrix class specific fred nt way make generic faq course use template fqa way code run slowly also compile slowly another way build matrix template faq use std vector instead bare pointer fqa also use numerous array class implemented std vector introduced c standard library long c became widely used alternatively also use numerous matrix class implemented std matrix introduced c standard library actually make std matrix introduced c standard library explain c standard includes std vector class quite similar builtin array different include std matrix class would quite similar builtin array different difficult question good bad nt std matrix provided le optimal builtin array answer consider type conversion dynamic resizing literal value telling size array run time c development ethical judgment everybody tell good bad choosing ugly disgusting take real wisdom c array whose length specified runtime faq would yes std vector actually ca nt builtin array wait minute first index builtin array example new runtimeval compiletimeval know array evil fqa std vector array class look like array try initialize pas array function expecting vector get huge compiler error message builtin array nt behave like c inherits following rule type c size type always known compile time get sizeof rule useful c together rule violated c make quite easy mentally map source code assembly code sort estimate run time performance c longer useful telling meaning c code nearly impossible mention reasoning performance anyway length builtin array part type could dynamic would violate exuseful rule ca nt however builtin pointer point array length defined run time p pointing runtimeval object ca nt array type runtimeval mean ca nt allocate array stack unless compiler decides almost violate exuseful rule support way gnu cc example builtin c array inherited c without change well except constructordestructor call new addition malloc stuff kind care detail best place look material c one many example illustrating know c order really understand c force object class always created via new rather local globalstatic object faq define constructor private provide public function return pointer object allocated new go fancy name named constructor idiom fqa want force allocating local efficient new would nt worry delete either cost change private member class code using get recompiled wait want avoid recompilation case named constructor idiom defeat purpose change private member still trigger rebuild either drop c class store state c struct place forward declaration header file full definition implementation file wrap exact solution code extra c class c evil latter way known pimpl idiom pimpl apparently stand pointer implementation idiom make world move especially design pattern idiom idiom design pattern something simple reference counting faq two large code listing given quote listing change order statement followed bold claim way simple reference counting fqa simple reference counting using language reference counting garbage collection probably nt care want simple complicated broken reference counting using c creating smart pointer class smart array class smart multidimensional array class wrapping private constructor public function returning smart pointer object smart array object make sure object actually pointed smart pointer reference counting entirely worthless congratulation wasted lot lot time emulate garbage collection top c well code nt compile fast would builtin garbage collection smart pointer template error message bit cryptic smart pointer template tricky case like cyclic reference still fail deal despite smart pointer template every class write extra code wrapping constructor whole thing nt play well existing library use different smart pointer template want reference counting c provide reference counting copyonwrite semantics faq class keep data structure pointed member pointer data method want modify object check reference count data shared several object data must cloned modification fqa ultimately trying achieve care lot efficiency care lot high level abstraction piece code probably easy solution sure code maybe want efficiency place high level abstraction place use two different language really code best solution probably write little language hard sound strange think apparently must write lot code nt lot would nt problem pretty specific domain high level language support right builtin facility looking copyonwrite string something string processing c favor stop right use language decent builtin string really good existing highlevel language job basically metaprogramming want something directly related specific meaning program want object pretty much arbitrary class behave certain way mean want new language compiler system support metaprogramming well two approach really pretty close c metaprogramming nightmare facility poor lot strange feature already language must interoperate warned path lead gate madness clarification saying metaprogramming likely solution want copyonwrite average would probably overengineering however case indeed overengineering faq solution way go probably user code explicitly copy object upon modification enough code involved make tedious c solution also get tedious metaprogramming could appropriate provide reference counting copyonwrite semantics hierarchy class faq writing lot code like code code code lot code code two screen code boy fun code fqa solution another hierarchy class might one project happens faq solution done permethod basis nt even way iterate method class c mention transparently instrument method class custom logic like copyonwrite code code code code help code think rather become farmer seriously going discus nightmare faq proposed solution follow link faq answer want check would like point possible transparently environment good support metaprogramming example language let write code implement object attribute modification simpler option andor automatically generate wrapper class intercept method changing object complicated option either way end code solve problem instead n n number class involved absolutely prevent people subverting reference counting mechanism faq ca nt usually nt yes pretty much faq say sometimes ca nt mean warped universe two hole armor first smartptr probably operator return bare reference object end dumb p smartp sort closed using several approach worse others unique way way get bare pointer syntax like smartpoperator returning dumb second hole someone dangling reference smartptr ca nt prevented even returning smartptrptr overloaded operator c reference remember new feature use instead evil pointer nothing overload prevent someone taking reference smartptr use code review figure actually going smart pointer fqa ca nt fake nt think quote attributed cray c nt safe memory management faking safe memory management lead still unsafe memory management important bonus obfuscation absolutely prevent people subverting reference counting mechanism using programming language absolutely prevents people subverting builtin memory management mechanism use garbage collector c faq sure let compare smart pointer technique garbage collection portable typically efficient handle cyclic reference work better others library nt need explicitly change pointer dumb smart anything like however sometimes object leak c garbage collector ca nt tell pointer random bit sequence happens look like pointer fqa assuming live free country stop using garbage collector c sure minor obstacle example nt really work still free country nt suppose use garbage collection mean worried interference real time requirement using c use safe language instead look c faq admits garbage collection efficient c smart pointer place correct cyclic reference single correctness problem mention random bit pattern vanishes managed environment problem think need use c deal fact nt garbage collection must manage memory manually deal fact example happens two library relying different garbage collector supposed work program happens code incompatible garbage collection clever thing pointer like onebasedarray int malloc arrsize destructors c garbage collector nt know freeing ca nt finalization function happy custom allocator c programmer adore much malloced object point object allocated custom pool destructor outer object pointer going called going deallocate pointed object pool c feel pain ca nt reasoned starting fight big mistake want use c must learn love way particular manage memory manually two kind garbage collector c faq conservative hybrid garbage collector conservative one look bit sequence looking like pointer hybrid one require programmer specify layout information explicitly code still traverse call stack conservatively look pointer garbage collector may cause memory leak bit pattern looking like pointer misinterpreted proof block pointed pointer still use illegal program may confuse garbage collector word used faq keeping pointer outside allocated block ca nt programmer behave reasonably fqa let start different question problem garbage collection c answer way inspect state c program tell block use environment designed support garbage collection checking program reach block using one pointer currently keep memory c ca nt first nt know program keep pointer real run time type information second pointer nt point block used compute pointer point block unsafe pointer arithmetic along come memory leak confusion happens garbage collection confused tell happens free object still use result crash data corruption think confused legitimate euphemism context oh confused think kill program unreasonable programmer well adjusting pointer point allocated block one efficient way implement onebased instead zerobased array among thing course allocate extra element avoid violating rule people nt know rule although part language definition enforced widespread implementation nt become part mental model developed programmer gain familiarity language work one implement onebased array way one nt see reason work experience consistently tell people c pointer kind integer formally reason illegal like duh happens want garbage collection people language lawyer practice matter de facto standard called de facto get info garbage collector c faq fqa nt bother garbage collection worked c would hear c around decade hundred thousand c programmer megaton c code zillion memory management bug someone implemented working solution problem become rich famous garbage collector would everywhere think nt see many around exception error handling page c exception error handling facility may worse dereferencing null pointer upon error way try catch throw improve software quality faq le statement code wo nt check error time call function conditional statement known contain bug statement le test ship better product faster fqa cargo cult programming conditional statement errorprone used handle complicated scenario action result many different outcome affect next action order make error le probable one simplify model desired behavior software problem complexity lead statement keyword using different keywords going solve problem exception supposed simplify error handling model based assumption case function detected error ca nt handle propagate caller finally highlevel enough caller reached actually make decision pop error message try different action etc despite promise approach inherent problem social problem exception people aware different error may happen code code nt deal error people rarely think particular aspect application ultimately aspect unlikely handled well technical problem function essentially nothing upon error except propagating error caller still ca nt completely unaware error may need release resource acquired returning caller may lead error must also handled finally practice exception support runtime overhead significant code size overhead even exception never raised run time even mentioned code c devotee may claim otherwise check compiling code without exception support compiler nt flag compile code c c instead unacceptable resourceconstrained system still many case benefit exception important problem example language manages memory automatically problem releasing acquired resource becomes small one care file etc tiny part resource used program resource memory language throw exception violate rule example upon outofbounds array access exception help find lot bug especially get call stack exception purpose application automated testing andor used quickanddirty internal tool opposed product end user kind exception need handle error almost kind language even resume execution point exception raised fixing problem point caught c exception offer none feature exceptionsafe c code ca nt handle error happen try release resource exceptionunsafe c code leak resource frequently memory throw exception call stack lost mean even separating code several process executing code like int upon error better way handle error c exception least memory going reclaimed operating system typically save snapshot process open debugger see error happened recommendation ban exception probably edge think lot using c exception feature implicitly depends constructor overloaded operator way report error c call exception unlikely give benefit people get exception language c call class unlikely give benefit oo handle constructor fails faq guess location question faq answer throwing exception alternatively mark object zombie using kind validity flag check flag calling code maybe member function object latter solution tends get ugly fqa inability gracefully handle error c constructor one good reason avoid constructor nothing use initialization function instead c exception graceful way handle error especially constructor member object constructor throw exception want catch constructor normally ugly colon syntax get much uglier way c standard library nt throw exception constructor except one thrown operator new example supposed test whether ofstream object zombie pas filename constructor handle destructor fails faq actually ca nt beyond logging problem file like particular throw exception problem destructors called exception thrown function propagating error caller clean resource destructor also called situation exception already thrown throwing another one result call terminate killing process see else could c ambiguity exception two want caught strictly speaking make throw exception destructor unless sure wo nt called result exception already thrown rarely sure fqa right terminate solomonstyle conflict resolution carried end see exception graceful way handle error nt throw exception destructors actually mean nt call function destructors unless sure nt throw exception c compiler wo nt check ca nt language nt force function declare whether throw exception one good reason avoid destructors nothing like constructor operator ca nt handle error handle resource constructor may throw exception faq well destructor class get called destructors successfully constructed subobjects get called conclusion resource allocated constructor assigned subobjects example call new constructor nt use bare member pointer hold result use smart pointer like std autoptr also define smart pointer class point thing like disk record groovy use typedef make syntax using smart pointer easier fqa warning cyclic dependency c feature detected see exception must language handle error function fail look like function constructor operator turn need constructor work exception unless every piece memory acquire immediately assigned smart pointer code exception safe known resource allocation initialization raii c community supposed good thing smart pointer picnic virtually automatic device something like smart simple fast name sure use typedef simplify syntax someone else end many different type name thing may annoy people perfectly ok compiler spit error message simply substitute full type name typedef name write program filter error message seriously syntax smart pointer small problem big problem semantics see bare pointer know work smart pointer work lot way boost library allow instantiate hundred different smart pointer class single template made going see next version c standard going figure whether program manages resource correctly littered smart pointer different kind especially case nontrivial scenario like case ownership right duty dispose resource passed object object cyclic reference code whatever every single piece software smart ca nt trust thing like p p x software becomes unmanageable change stringlength array char prevent memory leak even ifwhen someone throw exception faq want work string use something like std string instead char otherwise lot exception catch lot code manage memory fqa faq right one thing char nasty kind string using text processing tedious anything entirely trivial string std string better char using different language c text processing one good builtin string type still better however part exception really come operator new char use malloc instead configure compiler disable exception throw faq c allows throw object arbitrary type however probably nt throw object builtin type example derive exception class std exception throw temporary object class fqa yep c allows throw anything bad ca nt really catch later way catch arbitrary exception use catch nt let find thrown even catch illegal memory access system make finding code like throw c grand throw anything lot fun find occasion uncaught exception crash program faq advice thus good one opposed language decision allow throw anything typical example twisted notion generality used throughout language design decision completely incomprehensible unless realize basic axiom c language must force compiler writer treat class specially example common base class userdefined class least one virtual function could quite handy incompatible implicit axiom c designer gain following bizarre rule apparently nothing except illusion generality whatever mean throw without exception object throw keyword mean would use faq mean throw last caught exception may handy catch exception object add context information rethrow way get something like stack trace feature also allows factor several exception handler function called catch block inside function list handler various special case prefix try throw fqa rethrowing last exception useful feature many language would equally useful c c exception good particular use kind feature throughout code get call stack insult language user unless kind logical call stack context information equivalent list c function see debugger point exception thrown call stack provided language using c want figure current call stack may better rely platformspecific trick reading frame pointer using inline assembly traversing linked list pointed translating instruction pointer using symbol table litter code statement duplicating information already throw polymorphically faq suppose baseex exception class derivedex exception class inherited baseex following code might work expect void f baseex e throw e void g derivedex e try f e catch derivedex std cout derived exception caught std endl program enter catch block nt throw polymorphically statement throw e throw object e baseex type e context object thrown baseex get caught derivedex prefer behavior easily get virtual void raise throw base class derived class calling eraise instead throw e way derivedex raise called context function e type derivedex fqa let see use c exception moreover hierarchy exception class moreover pas exception object function way relying implicit upcast look like lot confidence knowledge c feature along come c beat common sense startling inconsistency language almost virtue maybe time learn value simplicity write something readable behavior throw look static type argument expression somewhat surprising considering behavior catch respect inheritance extent made possible throw practice probably better remove complexity example rather add complexity mixing dynamic binding virtual static binding throw human might need understand code know want memorize quirk c try warp mind think term used compiler construction peanut gallery perspective behavior throw catch consistent look thing known compile time relationship class ignore thing known run time actual type object basically c behaves way except virtual dynamiccast typeid think throw object many time copied faq zero universal answer compiler make sure thrown object provides copy constructor even nt actually copy anything fqa care performance c exception probably good exception support translates huge mountain code executable slows function call throughout program nt care performance would nt ask question think care performance never actually measure look performance implication technique use code feel free entertain fake answer suit emotional need exception handling seems make life difficult clearly problem faq course problem habit may prevent utilizing power c exception handling return code style people may put try block around every function call exception error code java style using tryfinally instead raii cluttering code cleanup statement organizing exception around location error rather reason way need handle error many time convert type exception categorizing error using data member exception class rather type way catch error handle given catch block rethrow exception test using different exception class different subsystem faq decides repeat point previous probably create impression many wrong mindset using bare pointer instead smart pointer class special case avoiding raii admits faq ca nt fight temptation list yet another wrong mindset confusing bug run time error someone pass null pointer function illegal code must fixed throwing exception without fixing calling code nt solve problem wrong mindset well fqa yeah know human always fail realize problem keep asking wrong question give helpful powerful language shooting foot clearly flawed mind must fixed let look little closer impressive list wrong mindset compiled faq return code style surely wrong way use exception one best way use c exception otherwise chance manage resource correctly high course using real return code somewhat cleaner exception thrown thirdparty library java style suited quite well managed environment like java socalled resource fact memory need tryfinally block stuff like file style problematic c lack garbage collection raii force wrap everything smart pointer language builtin dumb pointer truth c exception ca nt win organizing exception around location error rather reason suppose parser system would prefer single parseerror exception separate class htmlparseerror configfileparseerror two different module may raise exception similar reason rarely reason else different module obvious exception rule error detected language level thing like arrayindexoutofboundsexception luckily c language run time environment detect error nt need discus kind thing categorizing error using data member exception class rather type necessarily bad c centered around assumption represent almost anything using type class hierarchy template pattern matching popular statically typed language however assumption frequently refuted reality sticking counterproductive many case instance subsystem throw exception single class figure kind error looking object member even inspecting error string may end le problem compared case several dozen class exception inheritance tree special case modeling aspect program using language static type system may may optimal using different exception class different subsystem wow nasty course subsystem share exception class important common type subsystem system world written close coordination implementers way finish tower babel time language good way pas object arbitrary type subsystem trust u people advocating language without common string type sure know thing two issue using bare pointer instead smart pointer class staring language standard library operator new return smart pointer abc type std string something discus anyone manually emulate highlevel language top lowlevel one throughout one code confusing bug run time error absolutely nothing exception equally applicable run time error handling strategy unless course environment throw exception upon event like null pointer dereferencing c nt many try block faq maybe return code mindset even though syntactically use exception many special case problem organize code differently reduce amount try block faq list several case ca nt solve problem get mentor fqa alternatively stop throwing c exception wo nt catch const correctness const keyword make write program twice depending luck const correctness faq oh great thing declare object const prevent modified example pas std string object function const pointer reference function wo nt modify wo nt copied way happens object passed value fqa interesting vector pointer object let see vector declared const const std vector ca nt modify vector modify object pointer declared const std vector const modify vector object suppose vector nonconst object want pas function accepts const vector const object oops ca nt vector two different unrelated type far compiler concerned c weenie actually nt make sense think create temporary vector right type copy pointer compile fine since silently convertible const const correctness increasing readability program protecting error without performance penalty way using const c quite likely good idea questionable c feature const probably visible damage avoided piece code using const force every piece touching use const else wo nt able work object give funny part every piece code using const force every piece touching use either else wo nt able pas object one const particle one anticonst particle big shiny explosion constcast code since const hardwired language way pas temporary function get nonconst reference example standard library iterator constiterator using const usually safer bet avoiding const correctness related ordinary type safety faq one form type safety think const std string almost separate type lack certain operation string like assignment find type safety useful also like const correctness fqa related ordinary type safety pretty complicated way const volatile special case type system type qualifier relation qualified type nonqualified type different relation type language one many complication implicit conversion overload resolution rule work smoothly simple case especially complication break pretty hard whenever pointerlike object pointer get two const qualifier one pointer one pointed value awkward unreadable pointer pointer three const qualifier may need cryptic explicit cast least syntax level constness smart pointer thing stuff every possible hole pointer evil syntax iterator constiterator saying const iterator say iterator immutable point exercise implement vectorlike class get storage pointer user constcorrect way support attaching constant mutable storage area course vector const pointer compiled different bulk identical assembly code vector mutable pointer least compiler writing program twice better also happens constiterator one family example try get thing const correct sooner later faq soon possible add const piece code trigger change every place related fqa right since ca nt get tar pit best strategy climb right middle make comfortable beginning kidding actually agree faq see also advice avoiding const const fred p mean faq pointer const fred object object ca nt changed example ca nt call method qualified const fqa right nt count debug code const cast away snap pretty much like everything else c mutable keyword creating member modified method qualified const course someone another nonconst pointer fred object constqualified method may modify data pointed member pointer reference pointer kept thing pointed member pointer etc pointer aliasing issue one reason compiler ca nt really optimize code see pointer declared const figure alias nt need const declaration help explain difference data flow analysis type qualification next pseudoperformanceaware person advocate declaring every local integer const see also correct faq answer question difference const fred p fred const p const fred const p faq first example object immutable second example pointer immutable third example immutable fqa um right remember const make program readable const fred x mean faq reference immutable fred object fqa similar pointer immutable fred object however faq hold reference pointer religion specifically belongs pointer evil faction dutifully replicates explanation given answer pointer case replacing pointer reference fred const x make sense faq say change object reference never change reference anyway always refer single object nt write declaration confuses people fqa compile wait nt really want know whether nt bother disallow special case template instantiation like add const parameter type fact reference would fail anything like another lame excuse far language user concerned fred const x mean faq equivalent const fred x question form use nobody answer organization without understanding need lot business scenario producing need one form others discussion take full screen text fqa yawn another stupid duplication c come business scenario produce need form const declaration organization employ people ca nt memorize form check declaration mean admit drown c even somehow know sure general program c megaton syntax fred const x mean faq faq replicates previous answer replacing reference pointer probably religion thing fqa yawn another stupid duplication c faq const member function faq declared appending const prototype class member function kind method may called const object error caught compile time without speed space penalty fqa discussed break little piece class similar pointer sense user change state object use object change state speed space penalty may check symbol table program want know many function generated twice single template const nonconst template parameter count function identical code except extra const qualifier version others relationship returnbyreference const member function faq const member function returning reference class member use const reference many time compiler catch violate rule sometimes wo nt think fqa course think complete utter nonsense somebody c designer nt usual const compiler becomes dumb level indirection appear instance keep member reference thing point considered part object decide whether want return reference const nonconst const member accessor choice may eventually lead constcast deal constoverloading faq two member function single difference prototype trailing const compiler select function based whether argument const instance class subscript operator may two version one returning mutable object one returning const object latter version also qualified const fqa please try avoid feature particular get set function name constoverloaded good idea replicate code subscript operator add two const qualifier return value argument yet another example const forcing write program twice well likely problem one came class subscript operator smart array probably unlike std vector end much replicated code iterator constiterator want const member function make invisible change data member faq legitimate use case would user nt see change using interface class example set class may cache last lookup possibly speed next lookup use mutable keyword declare member want change way compiler nt mutable use constcast set like however try avoid lead undefined behavior object originally declared const fqa compiler probably support mutable today may still need constcast tweak type system supporting const break many case may problem combined fact constcast designed work object declared const opposed declared nonconstant passed function const reference pointer numerous reason making constcast safer practice theory people rarely declare object const compiler writer unlikely add special case compiler support const object c class hard work unlikely pay example allocating global const cstyle structure aggregate initializer readonly memory easy c class constructor hard constructor must able write object upon initialization use writable memory later make readable typically supported object file format operating system could translate c code cstyle aggregate initializer spending lot effort handle case compiler inline code constructor however simple rule making close impossible compiler writer use opportunity provided standard implement const object differently object case optimizing dereferencing const pointer rule exist might nonconst pointer location case object declared const pointer fact compiler allowed work assumption could great likely actually yield performance benefit const worked extent making use constcast unnecessary current state affair creates another source uncertainty programmer constcast mean lost optimization opportunity faq theoretically yes practice compiler know value used piece code modified optimize access value example fetch machine register however compiler ca nt sure value pointed const pointer modified aliasing problem pointer object necessarily constant proving opposite almost always impossible compiler ca nt prove ca nt speed access value example us value fetched register someone modified original memory location compiler change meaning program us outdated value fqa three cheer faq really time answer describes actual state affair understand deeply touched met many c user give different answer question know way reason performance think answer theory basically compiler figure part code modify data know data wo nt get modified piece code running use fact otherwise ca nt difference constqualifications make let say really sure anyway time argue exact phrasing lifetime realistic statement appears performance c code thing worth noting aliasing problem impede performance generic library compiler example consider vector pushback vector try append object storage free space left allocate larger chunk copy old object append new one new object thus copied wherever vector storage right object located old chunk vector try efficient use realloc may may free old memory object may wiped realloc good vector creates another copy hop parameter temporary hop temporary vector storage everyone happy certain amount clock cycle theoretically yes practice quite nice summary c compiler allow change int pointed const int faq point something const pointer mean ca nt use pointer change object nt mean object ca nt changed accessible way pointer fqa exactly related previous faq surprisingly c even make sense object declared seems like right place say done anyone take existing object point thus redefine done weird ca nt really work could done many place incompatible way const fred p mean p ca nt change faq example could change nonconstant fred q pointing object fqa question like previous one getting error converting foo const foo faq would invalid dangerous suppose foo point array pointer used modify pointed object suppose c would allow pas array function expects const foo array pointer ca nt used modify pointed object suppose function fill array bunch pointer constant object look perfectly good context function passed array pointer constant object got array pointer used modify const object declaration array allow modification good thing get compile time error instead nt use cast work around fqa wonderful discussing evil builtin pointer anyway let talk smart c array class ca nt pas std vector function expecting const std vector const function clearly say going modify anything neither vector pointed object ca nt pas mutable vector mutable object function promise modify either inheritance basic section outline c support oo concept inheritance confuse c oo inheritance important c faq sure new thing oo add top basic notion abstract data type fqa slightly different reason c us inheritance implement runtime polymorphism allow use two object different class way order work class roughly must inherited common base class also possible implement polymorphism without inheritance system may simply allow call method object without knowing type code work object actually method right name argument system may still support inheritance le central oo system encouraging polymorphism former kind said statically typed sense use object explicitly defined interface visible compile time approach wellestablished many pro con approach c choice use approach legitimate sense yield relatively usable consistent result however c inheritance designed support many thing leading le usable le consistent result particular inheritance complicates already complicated name lookup many way unique c multiple inheritance quite mess hand many handy feature left example multimethods dynamic type information allowing list interface supported class latter special case lacking reflection would use inheritance faq tool specifying behavior system people think two dimension instance cat mammal tail aggregation data abstract data type support dimension inheritance add support dimension fqa appropriate faq pretty good job listing situation something something else intuitive level using inheritance still wrong inheritance formal concept formal concept nt map directly english word nobody know number dimension people use think yet example imagine black cat black color black object table table thing table nobody know thinking natural language reduced couple dimension unknown number dimension thing unknown number dimension whatever dimension mean programming language tool people use program machine even knew thinking work could build thinking machine still need programming language machine one supposed told quickly reliably cheaply opposed supposed creative thinker programming language must precise map directly natural language use inheritance formal device understand exactly work luckily programming language reasonably easy c least try restrict subset understand express inheritance c faq using public syntax class car public vehicle private protected inheritance different fqa yeah different replace public keyword private protected keyword faq probably mean different le related oo semantically may wonder colon syntax concept inheritance well connection obvious inheritance c adding keywords c reduces compatibility c grammar language prevent using keywords identifier punctation come rescue technique retrofitting feature grammar overloading keywords consider static fair many language problem grammar big deal ok convert pointer derived class base class faq public inheritance yes definition object derived class object base class fqa moreover nt think someone going know going work expected nt use inheritance whole point inheritance allow exactly code work object base class fact passed object arbitrary derived class making possible want inheritance nt really help confuse user class course public inheritance also used mind numbing template metaprogramming trick like template derive instantiation recursively template argument judgment whether reasonable usage language feature left reader difference public private protected faq private class member friend protected also derived class friend public everybody fqa exactly part inheritance protected useful relatively rarely ca nt derived class access private thing base class faq protects change base class letting rely implementation detail fqa however nt protect recompilation derived class change made base class access control keywords little comment c keep mind design interface especially supposed used outside team want supply c interface pretty daring exposing base class except pure abstract one data member may good idea protect derived class breaking change internal part base class faq class two interface public protected protect user nt expose data member similarly protect derived class protected data member provide protected inline accessors instead fqa dear design guru listen carefully try understand one writing get set function every member take time reading time instead used get something done two get set member pretty close public nontrivial representation change becomes impossible since ability set particular member part contract three property language thing look like member fact accessors nt hurt many language allowing use plain member case class becomes popular want change without breaking contract make member property reason c even remotely interesting language user know c programmer obsessed useless wrapper code performance never measure protected inline part kinda funny told never use protected data instead always use private data protected access function good rule faq always rule nt work real world nt time make life easy everyone spend time making easy important people people equal important people called customer fqa thanks needed know going make life easier everyone writing horde get set function prioritize make life easier important people please customer writing get set function competitor using newest visual refactoring tool today actually faq mention probably need get set function really protect derived class change basic assumption lot layer make life easy time create layer still ridiculous team actually lot time real world job turn simple working fast prototype program incomprehensible broken slow product think dealing important task time write pile wrapper code okay exactly decide whether build protected interface faq many useful guideline example grow nt thing jeopardize schedule invest time thing ultimately pay fqa find advice useful nt idiot lucky avoid pushing sharp object body rather annoying c faq dare tell people practical nt add third useful builtin type language already integer float say string dictionary talk difference theory real world inheritance virtual function page virtual function rare example c feature neither part c completely selfdefeating virtual member function faq important thing c look oo perspective virtual function derived class provide new implementation function base class someone call virtual function object derived class new implementation called even caller us pointer base class nt even know particular derived class derived class completely override implementation augment explicitly calling base class implementation addition new thing fqa new oo using c first example good idea still want start learning oo feel nt really understand generic statement example attempting show actually useful note fqa unlikely best oo tutorial web suppose program play movie different format matter format want interface window menu option resize window control color balance etc define class movie virtual function like nextframe pixel width height format implemented derived class like mpegmovie divxmovie code implementing interface option etc work movie object calling right nextframe function without stuff like formatmpeg mpegnextframe else place formatindependent code easier read much easier change want add new format fact easy get nt change anything last sentence made laugh probably seen representationspecific supposedly generic interface turned someone actually tried create second third implementation laugh silently loud soon find surrounded newbie cluttering code idiotic condition wizard said nothing really generic anyway let forget whole pseudogeneric issue moment focus c flavor polymorphism instead nt know horde language something like virtual normally something better virtual function problem keyword obscure notation even ca nt look derived class say function virtual keyword optional overloading make even harder see function actually override base class implementation forget const prototype becomes unrelated virtual function name seasoned oo pro might point lack multimethods invariantscontracts checking complaint longer remember seemed valid oh poor rtti nonexisting reflection go however compared c feature virtual function excellent make useful thing easy get type le compared c would create vtable struct thing like pthis vptr f base pthis args instead c p f args brevity come price c make pay promptly compile time overhead therefore practitioner using c ignoring performanceoriented brainwashing array pointer object virtual method soooo slow array structs inline function soooo fast using single c feature potential le harm good frequently right thing course using c code characterized complicated structure dynamic behavior even better idea c achieve dynamic binding yet also static typing faq static typing mean function virtual called compiler check function call valid according statically defined interface dynamic binding mean code generated statically checked function call may actually call many different implementation figure one call run time basically c allows many thing done upon virtual function call long thing follow specified protocol base class definition fqa important keep mind compiler check whether implementation follows protocol certain extent pretty easy create derived class look legitimate insert find method specified base class fact insert nt really insert anything anywhere find nt find anything break code using derived class via pointer base class object code insert something wo nt find crash faq whole section proper inheritance natural fact ca nt find error static typing would nt bad c nt crash hard instance run time boundary checking andor would support dynamic contract checking andor clear type system would make specifying interface le pain currently zillion trouble ranging builtin string type endless kind type relationship conversion rule dynamic binding critical feature build extensible software generalpurpose programming language form particular c function pointer unlike dynamic binding static typing strictly necessary many benefit code may easier people read compiler validate optimize due information specified type well many drawback thing may hard model static type system frequently code read write etc language level c nt support dynamic typing opposed binding static type system one worst c programmer think feel compiler incredible service finding virtually bug hidden motif include need rationalize amazingly long build cycle avoid writing test program verbose ugly boring c code want favor catching thinking habit difference virtual nonvirtual member function called faq nonvirtual function resolved compile time virtual function resolved run time compiler must generate code runtime resolution code must able look object find version function defined class object usually done creating table virtual function class vtable object class implicitly generated member pointer vptr initialized point class vtable constructor implement virtual function call compiler generates code similar would produce c expression p vptr funcptr dereferences object pointer fetch vptr fetch function pointer fixed offset call function pointer exact cost depends complicated stuff like page fault multiple inheritance etc fqa practice cost almost never big deal unless call virtual function innermost loop code processing data saying cost ignored goodlooking generic design centered around virtual call innermost loop invalid practical purpose saying nt think thing like page fault figure afford virtual piece code c implementation polymorphism pretty efficient one kind price pay efficiency instability interface binary level add new derived class system without recompiling old derived class ca nt add virtual function base class without recompilation rule straightforward usage virtual function many situation think recompilation zero cost try get vendor desktop software recompile run different processor architecture many oo language avoid problem one way justintime compilation instead generating code fetching function pointer fixed vtable offset wait see updated base class definition program load time generate offset another option use le efficient flexible lookup mechanism hash table typically coupled lack static typing many benefit drawback technique avoid huge amount reallife problem binary interface stability ca nt switch different oo language better oo support think interface stability one aspect probably also get garbage collection faster build cycle ton useful thing work around problem many ugly way example single virtual function getting string void telling famous example achieving binarylevel stability way ioctl system call unixlike system another approach add new class new function derived class implement many different abstract base class com queryinterface function work way thing pretty better nothing virtual function deliver need stable interface nt ashamed reach conclusion performanceaware people squeak something try get busy something else like implementing std valarray actually compile fast code using simd instruction host processor without creating temporary memory object give couple century long break happens hardware call virtual function many layer indirection much overhead faq lot code listing explaining previous answer detail fqa hardware probably meant binarylevel software popular binary instruction encoding lot variant processor implementing processor integrated many different system kind memory architecture even write assembly code ca nt tell exactly going executed course ca nt higherlevel language compiled assembly many different way level indirection typically two one fetch vptr object another one fetch function vtable one approach could save level indirection keeping vtable inside object value instead pointer make object larger proponent virtual method correctly point overhead inevitable situation use virtual function nt know function call compile time course different way implement decision making slightly different performance characteristic given platform care tiny difference though probably fix higher level moving decision outside innermost loop cost possibly replicating common code fiddling low level implementing decision lot boring work rewrite measure rewrite measure little gain member function derived class call function base class faq reason pretty lowlevel discussion follows name mangling callbyname v callbyslotnumber code listing double underscore fqa class derived function derived f type base f call f implementation base class base compiler ignore actual type object low level vtable call base f way nonvirtual function normally called think every oo language pretty natural heterogeneous list object code need classspecific thing object seems like ought use dynamic binding ca nt figure faq surprisingly easy say faq statement followed surprisingly long answer fqa nt know surprising whole one point polymorphism classspecific thing object without thinking heterogeneous work class object derive common base class extremely easy unless planned ahead run element std list base call virtual method classspecific thing without thinking many different class object actually belong etc example std list shape constiterator pshapesbegin eshapesend p e p p draw window offtopic stl way saying foreach p shape pretty ugly nt destructor virtual faq rule thumb virtual function strictly speaking need want someone able derive class class create object new delete via pointer base class fqa situation rule thumb good enough reported planet use rule thumb suppress compiler warning bad c compiler nt use rule silently could simply make destructor virtual case virtual constructor faq idiom allowing pointer base class use create object right derived class implement providing virtual function like virtual base create const virtual base copy const implement like derived derived create const return new derived derived derived copy const return new derived note return derived base called covariant return type compiler nt fqa language builtin support thing interesting thing make possible like serialization without writing special code class roughly called reflection find method class runtime including normally called virtual constructor ca nt virtual create object dispatch function call based type another option recursively get list member class createcopy hard imagine useful programming experience come working c covariant return type nice joke admittedly narrow audience though c let tighten specification return value perfectly legitimate base class said return base surely implement contract always return derived particular base c nt let loosen specification argument shown legitimate symmetrical reason c overloading declare virtual function look like function base class kind change argument type c think create new unrelated virtual function rather override one base class since c overloading based function return type symmetrical problem c lot kind static typing little consistency fair language similar interaction overloading dynamic binding probably copied c however language rarely encourage design depends availability overloading work like stl andor based microscopic detail overload resolution mechanism like boost library inheritance proper inheritance substitutability section using inheritance code really work compiles unlike oo related section faq much material applicable decent oo system c hide member function public base class faq nt even think nt desire probably result muddy thinking fqa due respect precious programming language probably result muddy thinking question talk overriding base class function private section derived class trivially reliably detectable compile time get excited wrong compile answer c random thing compile random thing nt language definition sloppy think compiler writer made job easy making hard c probably hardest language compile among popular today c pointlessly sloppy reason faq get excited become clear next answer basically derived class override function private violate substitutability principle longer true object derived class fully support interface base class however technically function base class still accessible cast pointer derived class object base class call function vtable pretty muddy nt people define overridden virtual function private convey message object derived class never used directly purpose class interact framework work object base class pointer faq get overly hysterical practice polarity answer probably right converting derived base work ok nt derived base work faq nt let pretend work see happens suppose dog pas function void f pet p f ok since dog derived pet function p new cat perfectly legitimate since cat derived pet dog pointing cat object bark crash program misbehave severely since cat may virtual function scratchfurniture slot vtable actually faq us scarier example launch nuclear missile result mistake imho nothing beat following classic department status underattack launchnuclearmissiles best industry practice use peer review increase quality nuclear missile launching code fqa yep level indirection static typing interact nonobvious way another incarnation problem making impossible cast const basically always nt mean always problem many case know something legitimate compiler nt example know filled vector pet bunch dog could nt use vector dog wanted pas function working vector pet seen compiler would nt let pas vector dog function expecting vector pet good reason ended vector pet filled dog want fetch dog vector element typed pet use cast would nt bad case would nt cause many people develop habit aggressive casting compiler shut andor c would catch illegal cast operation run time moral static typing compiler validate code according set rule specifying property type relationship hard static type system get way partially compensates validating interface interface specification modeled statically see particular consider example stuff dog object vector pet pointer compiler insisted looser typing compiler wo nt prevent someone else adding cat pointer vector code fetching pet vector casting dog misbehave saying static typing bad think dynamic typing bad lucky one step away quite noticeable increase productivity pick dynamically typed language give try parkinglotofcar kindof parkinglotofvehicle faq plane one kind vehicle nt want someone park car parking lot fqa english apparently answer yes oo answer natural language strict definition kindof anything else matter oo system formal precise definition kindof b kind b object whatever work correctly compile programming language natural language particular good programming language nt try look natural attempt make hard understand formal precise dumb stuff machine actually ever wondered earth c expression b object smart pointer template class parameter know mean array derived kindof array base faq think array implementation parking lot see answer follows previous faq fqa note ability compiler figure whether something kindof something else limited particular seems work better type related inheritance base derived class type related qualifier const nonconst way instantiated template example vector apparently kindof const vector const nothing allconst vector could nt allnonconst vector compiler nt know one way around duck typing nt bother specify relationship type pas object function work object whatever ask raise run time error otherwise walk like duck duck nt define duck interface duck follow get object call method walklikeaduck c nt duck typing would require compiler rely nontrivial notsolightweight run time mechanism kind go spirit c run time mechanism used implement exception trivial mind one could claim duck typing incompatible spirit c involves runtime dispatching virtual function efficient le flexible much likely trigger recompilations big deal many situation one could claim duck typing c way leaf specification interface template provide static duck typing bad pile toxic waste scope discussion narrow even briefly describe one could claim duck typing fail run time someone provided object wrong type nothing prevents someone simply passing null pointer c function ca nt handle crash much harder code safe dynamic language ever true reason making duck typing incompatible c way nothing axiom go like something useful case nt map almost directly c worth adding c example application axiom design c lack garbage collection handle memory resource nonrealtime application application code consequence axiom would nt bad feature c add c good arrayofderived isnotakindof arrayofbase mean array bad faq yes array evil normally use std vector instead array enlightened oo specialist everyone likely maintain code fully understand interaction kindof array may use fqa huh array vector synonym context kindof issue cult advocating replacement c feature problem new shiny c feature much worse problem proper inheritance casting array easier casting vector try vector vecofsomethingelsethant seriously one weird question strange answer circle kindof ellipse faq sometimes frequently nt example ellipse let change size way making asymmetrical circle point derive circle ellipse someone try use ellipse really point circle object way make work gracefully either calling code get error form even though something possible ellipse circle object obey caller become invalid circle breaking legitimate piece code expect valid circle fqa like parking lot example sense kindof english mean many different thing incompatible precise definition kindof used oo important point interface protocol implementation must follow people think inheritance merely another form binding compiler call function using new syntax point view everything legitimate long program compiles whatever end user expects way inheritance make programming harder another kind syntax decipher restrictive interface protocol approach make programming easier implement bunch protocol correctly extend program without tweaking code example add movie format medium player work really follow protocol sort circle kindof ellipse well almost nt call function medium player crash numerous family example natural language oo term aligned nt mean oo bad mean formal good computer programming parking lot represents one family collection circleellipse represent another one parametric representation one family positive example inheritance likely proper record type cplusplusprogrammer field programmer plus couple new orthogonal member headagainstthewallbangingfrequency option circle isisnot kindof ellipse dilemma faq well need get rid original claim get back consistency either ellipse setsize function make circular ellipse object noncircular inheritance make possible call function circle object even choose live fact circle object become noncircular code working circle object deal trying keep claim cover problem something reasonable like calling abort setsize called circle object fixing argument going solve problem ultimately break assumption behind calling code fqa faq answer apparently correct complete incidentally nt exclusively c oo general one solution setsize return new ellipse object way circle setsize return circle unless new size asymmetrical case return ellipse one possible benefit efficiency circle le parameter ellipsis lot operation bunch object rather object represented circle object actually represented way redundant ellipse object roll oo implement inheritance instead directly relying language feature avoid creation new object instead dynamically change type example setsize may change vptr point ellipse vtable new size asymmetrical kind thing implemented povray ray tracer written c fact ca nt portable way c inheritance probably nt mean c inheritance underpowered surprise need kind thing lifetime must well thoughtout make really work rare case go ahead use function pointer instead inheritance implement probably people would classify limitation symptom deeper problem much logic built compiler little way implement compile time logic user code debatable phd mathematics sure circle kind ellipse mean marshall cline stupid c stupid oo stupid faq mean different thing intuition wrong sense lead make wrong decision inheritance right way think kindof b kind always substitute b fqa like question formulated show spirit general faq quite entertaining sort thing could legitimately quote answer instead summarizing sure would nice dandy notice disturbing claim intuition wrong instead admitting oo natural language nt map directly natural language faq actively try persuade change way use natural language word make thinking oocompatible next ship patch apply dna sticker saying designed c programming skull think point worth discussion representative whole notion good c world c try make program look natural see add thing plus sign error handled transparently resource managed automatically one highlevel language efficient make single error program finding becomes nightmare really called ab expression really happens upon error object deallocate know nobody keeping pointer pointer smart look use library using bare pointer one using different smart pointer class really going basic rule c break nt make promise ca nt keep nt say inheritance equivalent way people think kindof introduce beginning term substitutability nt pretend manage resource automatically fact responsibility everyone follow nontrivial protocol work single error fatal make visible resource acquired released really manage automatically garbage collection reference counting otherwise refuse may perfectly legitimate time admit changing term productive waiting everyone change course circleellipse problem example making promise ca nt kept faq claim oo capturing way think example perhaps ellipse inherit circle faq probably example would radius accessor would compatible assumption likely part circle protocol use radius compute area fqa think easy see slightly different related example stupid claim triangle rectangle two identical vertex rectangle triangle vertex probably sound equally stupid people major reason making people would think claim stupid go ahead derive triangle rectangle vice versa nt think fact making claim implementing inheritance idea inheritance yet another kind syntax purpose save couple line code derived class may accomplish deriving triangle rectangle compiler ca nt check inheritance correct really hard c aficionado accept compiler ca nt check something inheritance writing code follows protocol making possible call code function written work object follow protocol thus reusing calling code possibly lot code much couple line saved derived class inheritance guarantee substitutability compiler wo nt able catch error type checking assumes provide substitutability let use pointer derived class object context expecting base class object pointer confuse people frequently including also expect substitutability especially since compiler agrees letting pas ellipse circle required really nt need substitutability nt really need public inheritance either problem nt anything circle ellipsis good silly example faq see example improper inheritance basically equivalent circleellipse case inheritance bad base class provides functionality derived class ca nt provide ellipse case asymmetrical resizing problem inheritance case come without substitutability breaking basic assumption shared programmer using class compiler automatically allows use object derived class base class object expected fqa exactly people obsessed compiletime error checking repeat compiler static type checking object class derived ok legitimate parameter function f base based assumption check whoever wrote derived made substitutable base say compiler static type checking based assumption check compiler static type checking based assumption check translation correctness interesting program checked compile time programmer supposed know keep forgetting ultimately better spend time type safety thing like making sure nobody cast vector iterator underlying writing test checking code behaves correctly run time judge could depend nt term like circle ellipse defined mathematically faq class circle ellipse different definition c code defining class program definition circle ellipse look validate inheritance keep thinking mathematical connotation let replace class name foo bar moment compiler defined meaning circle ellipse recall inherits mean substitutable kind precise definition definition get right answer using previous faq fqa exactly ca nt implement mathematical notion circle programming language implement definition possibly called circle bunch definition model aspect mathematical circle certain extent reason correctness program talk definition original mathematical notion lot suffering inflicted talented programmer upon originates hope implement ultimate something example ultimate circle class capture aspect mathematical circle never define circle class ultimate search ultimate something programming probably search ultimate programming language arguably c language one result search try meet huge amount conflicting requirement key one readability efficiency generality c code well pseudocompatibility c result largescale nightmare moral story simple design best tool everything get tool good nothing bright side probably possible define good circle class program try make good program rather implement mathematical notion meaning circle depends program sortedlist exactly public interface list sortedlist kindof list faq quite unlikely instance consider list insert defined insert element end list good way implement sortedlist insertion end usually make list unsorted substitutability principle specified behavior function name parameter type exactly public interface syntactic sense enough proper inheritance specified run time behavior must fqa yep compile time type checking guarantee proper inheritance operate assumption guaranteed language come contract checking base class specifies behavior using input output constraint computed run time run time environment automatically evaluate constraint method derived class called simulate behavior c writing lot code namely base class public nonvirtual insert method calling protected virtual oninsert method insert wrapper check whether oninsert follows protocol using bunch asserts call oninsert since lot code frequently bad waste time writing waste much time reading together people benefit necessarily worth trouble run time test standalone integrated larger system greatly increase quality code making run time testing simple painless pay especially compared work spent compile time error detection inheritance abstract base class c abstract base class bad c standard however quite poor oo standard big deal separating interface implementation faq interface important thing possessed company defining interface hard throwing together implementation easy designing interface take lot time done people paid lot money would nt want valuable artifact clobbered implementation detail would fqa interface decoupled implementation one implementation interface way code using interface work implementation example code may used render document screen printer file excellent widely acknowledged basic fact amazing faq answer fails mention faq claim relative importance interface implementation unbelievable interface class searchengine public search document pointed url inputurls stream search query string emit url sorted relevance outputurls stream maxresults url virtual void find const string query istream inputurls ostream outputurls int maxresults took minute turn throw together implementation nt take second according faq argument go nt like example complicated interface real search engine think matchscore facerecognition suspectimage testimage fft outputarray inputarray size text ocr imagewithhandwriting render screen htmlpage write file buffer size idea implementation trivial come working extremely stupid application example program text book course many interface decoupled implementation hide much complicated implementation andor one implementation andor want change implementation without affecting client code surprisingly enough c abstract class actually allow achieve thing course nt fix many hard problem c real run time type information example adding function abstract class change binary interface frequently unacceptable abstract class better nothing opposed many c feature fact worse nothing separate interface implementation c like faq use abstract base class fqa mean like want able work many different implementation selected run time abstract base class way go alternatively roll abstract base class using structure containing function pointer emulating vtables result extra code portable c binary calling convention given processor architecture tend shared tool c one nt need dynamic implementation selection use header file forward declaration type type defined implementation file way change implementation detail without recompiling calling code ca nt c private member particular build several version program different implementation interface without recompiling entire program abc faq abstract base class logically corresponds abstract concept animal specific animal like rat skunk weasel correspond implementation class derived animal technically class least one pure virtual function abstract ca nt object abstract class create object class derived implement pure virtual function fqa abc also especially annoying abbreviation couple thing ca nt c abstract base class supported oo language ca nt iterate method abstract base class neither compile time run time ca nt easily utilize decoupling interface implementation automatically generating wrapper class log function call pack argument send object another process andor another machine also ca nt ask random object whether implement given interface language term whether class derived given abstract base class language use heavily c possible nt realize might want thing even memorized elaborate argument proving thing done hey least abstract class nt make anything worse already c quite achievement c feature pure virtual member function faq virtual function normally implementation base class always must implemented derived class make nonabstract syntax virtual result funcname args declaration make class abstract illegal create object class derived class nt implement least one pure virtual function still abstract derived class without unimplemented pure virtual function instantiated create object class fqa syntax ridiculous may wonder virtual result funcname args mean well mean nothing nt compile one possible motivation syntax save keyword pure abstract new keywords le c compatible c c code written new keyword introduced well strictly speaking either two thing compatible ignore moment c c grammar disallow use keywords identifier problem shared majority programming language however c huge amount new keywords make one wonder rarely used explicit mention export keyword many different us keyword static fact collapsed single keyword instead using new keywords new us use silly standard reserved namespace name prefixed two underscore single underscore followed capital letter reserved compiler way mostly done explicit builtin explicit would define include shinynewuselesscxxfeatures trailing h course way give normally looking keyword people need nt break code nt proposal next c standard let define two keywords token sequence composed two keywords express anything actually one keyword enough verbose wo nt ever need new keywords pure virtual syntax example show readability loss small price pay forward backward downward compatibility achieved using approach define copy constructor assignment operator class contains pointer abstract base class faq nt want make deep copy pointer nothing special case want make deep copy pointer normally class owns abstract base class virtual copy assign method call copy constructor assignment operator fqa small example c force write code could generated automatically avoid problem avoiding ownership approach lifetime management raii figuring need virtual function implementing easy people understand c well trouble people using c nt understand well c lethal combination looking nice simple surface lot trap installed surface waiting victim chance victim good understanding underlying problem c understanding easy see um make deep copy since owner object pointed two owner going wiped twice destructor nt want let copy object costly safe um ca nt copy object nt know type wait object know type need help u copying need add virtual copy function hierarchy class good thing interface became stable adding function became royal pain causing recompilation calling code problem reasoning little whatever ultimately trying achieve program many people think program way programming language work wo nt see coming something wrong nt mean people primarily focused programming language productive others course nt uniformly le productive either people programming language focus spend time choosing func obj objfunc nt depends person people change complicating matter course problem exists computer language generally software system generally formal system basically ice thing compatible human common sense cold water fall rule governing system contradict common sense special c well c thin ice covered paint water deep enough drown inheritance mother never told note section name copied verbatim faq document based assumption mother told thing inheritance okay nonvirtual function base class call virtual function faq sometimes suppose class animal nonvirtual getawfullyexcited method system animal similarly void animal getawfullyexcited makeexcitednoises animal make different noise cout come dance endl animal always warn people dance danceexcitedly animal dance differently orderly hierarchy animal getting excited according standard procedure unique way fqa trouble whole thing c ca nt easily tell function overridden ca nt override mean default ca nt explicitly say virtual enable overriding unless derive class base class virtual function override function virtual keyword becomes optional even function base class virtual still override except binding static call function pointer statically typed base base class implementation called call derived derived class implementation called different kind overriding naturally one link chain derived class back question generally ok common base class implementation call function defined derived class many case exactly want however specific case c virtual function may become hard figure function virtual sometimes better separate animal pure virtual function emotionalbehavior method taking animal calling function implement various common ritual probably good idea add rule local coding convention document class relatively small simple point creating code splitting several class thing c class many method virtual especially part complex hierarchy lot overriding kind end making people wonder piece code called last faq confuses different strategy way use virtual function going faq yes two different strategy related use virtual function first case common nonvirtual method base class use virtual method implement part differ second case virtual method implemented differently derived class call common nonvirtual method base class common bit also implemented somewhere else necessarily base class sometimes use strategy class one method method ok fqa well sort yeah really learn nothing lengthy discussion follows quite directly first principle virtual function allow different derived class implement method differently function including nonvirtual called various place something totally obvious rule deserve pompous name strategy faq common software engineering community especially c subculture let look example probably seen method create new object class derived common base method useful caller nt aware different derived class example createmoviereader filename method check file type creates mpegreader avireader whatever whoever call createmoviereader nt care many different kind reader worth special term accompanied whole discussion well term factory method design pattern sometimes abstract base class nothing factory method name abstract factory design pattern name used people reveal lot example people living close north pole twodigit number name snow clearly reason visual diet composed primarily snow know lot different kind snow never confuse tree come across lifetime point many name tree tree know dark high thing messy stuff sticking tell u something intellectual diet people calling trivial combination basic language construct strategy pattern course people love c look different string class way implement still new one much snow play disclaimer knowledge anthropology approximately zero therefore better consider north pole example hypothetical make critical decision assuming literally true use protected virtuals instead public virtuals faq well first avoid strict rule saying never always rule thumb experience tell time virtual function best made public two notable exception first function supposed called base class way described previous two faq second public overloaded nonvirtuals call protected nonoverloaded virtuals idiom class base public void overloadingtotallyrules int x butwedontwanttooverloadvirtualfunctionsint x void overloadingtotallyrules short x butwedontwanttooverloadvirtualfunctionsshort x protected virtual void butwedontwanttooverloadvirtualfunctionsint int virtual void butwedontwanttooverloadvirtualfunctionsshort short solves important problem overloading totally rule nt want overload virtual function public overloaded nonvirtuals call protected nonoverloaded virtuals idiom make life easy class user implementors derived class clearly author base class absolutely must clobber code nonsense make everyone life better think reduced maintenance cost benefit many selfish code grinder fqa simple answer question trivially following definition without need create taxonomy rule exception c access control clarity want make clear part class supposed used implementation detail make easier understand code prevents people using bit might want change later therefore nt think anyone outside class hierarchy going use virtual method make protected otherwise make public particular start protected change public turn wrong special case particularly interesting one kind function call another kind function idiom remember snow example well deep inside pile snow coining name individual snowflake wonder function passed parameter configure operation idiom probably nt objectoriented importantly idiom nonsolution problem overloading got extra layer code piling ultimately people read code figure program layer indirection adding functionality confuse occupy shortterm memory instead actually useful detail simply avoid overloading case talking reducing maintenance cost nt actually reduce maintenance cost know someone use private virtuals faq probably never confuses people nt think private virtuals ca nt overridden fqa faq right behavior private virtual ridiculous compiles wrong reason note many many thing c primarily confuse people one excellent reason avoid c altogether joking nothing funny well maybe funny c developer confused living cruel kind humor base class constructor call virtual function object nt derived class override virtual function get invoked faq suppose base class called base calling virtual function f constructor object derived class called derived created base virt called base base derived f reason base base executes object still type base becomes object type derived code derived derived entered wonder c work way consider fact derived f could access uninitialized member class derived could called base base run derived derived initializes member derived luckily c nt let happen preventing subtle error fqa actually happens derived derived call base base set vptr point derived vtable setting vptr calling base base would nt work base base set vptr point base vtable base base nt know called order ultimately initialize derived object code base base derived derived compiled separately correction object still type base really mean valid argument describing mechanism implementation order explain behavior system system built people people behavior supposed make sense nt explained looking implementation instead need user problem system sometimes problem seem inevitable whenever possible best discus certain behavior reasonable situation perceived user talk implementation absolutely necessary however argument rarely applicable c first c make little sense user perspective make sense perspective language designer provided several axiom questionable value added language must look compatible c although nt really compatible builtin type found c unless new kind pointer etc example reasonable base base ca nt call derived f well sort depends think way c handle object construction general reasonable base base call virtual method base f simply saying f often want question irrelevant c something becomes technically possible sideeffect language mechanism tends legal example private virtual previous faq compile answer simple second reason describe behavior term implementation run time error cause c program crash way undefined semantical specification level theoretically possible read entire code program find semantically illegal code practice find error looking execution program lucky snapshot final state death trying understand thing behave way ca nt without understanding implementation okay way simulate behavior dynamic binding worked object within base class constructor faq yes idiom course namely dynamic binding initialization idiom one option virtual init function called construction another option second hierarchy class nt always work sorry could nt make code listing like lot hierarchy class find solution interesting please follow link faq answer first approach problem requiring extra function call upon initialization rely selfdiscipline programmer selfdiscipline especially important exception thrown init make sure release allocated object properly wrap construction init call single create function returning pointer object latter rule allocation stack fqa seem making progress let see got rid allocation stack longer need know private member class garbage collection exception safety would longer problem either bad c class memory management ca nt changed trying another programming language getting mess destructors calling virtual object base class destructor end ignoring override derived class going faq protected compiler protected could access member already destroyed compiler let want base base called type object changed derived base fqa thanks protection least behavior symmetrical protect access destroyed object dangling reference general case next time derived class redefine override member function nonvirtual base class faq nt experienced programmer sometimes various reason remember uservisible effect version function must identical fqa trade secret experienced programmer umpteen time compile particular case nt seem unintended side effect feature elaborate design nonsense using name base class shadowed function name etc redefinitionlookinglikeanoverride overloading steroid even le useful even higher obfuscation potential one zillion various name binding rule bit c making impossible decipher code actually called f x meaning warning derived f char hide base f double faq think mean going die like derived f char nt override base f double hide word make impossible call base f double via derived time derived f char called via base fqa going die warns faq well according popular theory u however interesting fact nt seem belong c surely depressing aware data showing causal relationship using c suicide lethal brain damage really hiding name lethal bug sure make program obscure duh c worst thing happen someone call base f char base f double derived f char get called similar thing happen overloading without inheritance involved really know implicit conversion rule different type predict happens pas int overloaded f function char double version bet ca nt thing get little bit complicated normal person c overloading nightmare using naive stupid depending one experience many language statically dynamically typed nt compile time overloading based argument type ever heard programmer using language complain become enthusiastic c overloading problem overloading solve ok suppose improves clarity questionable claim really think overloading come together ton implicit conversion rule type system ton special case cvqualifiers pointersarraysreferences single multiple inheritance template overloading come extra ton rule still make program clear compile time polymorphism say mean c template see happy debugging pal mean virtual table unresolved external faq well know unresolved external mean function global variable code declares us never defines virtual table global variable declared implicitly typical c implementation class least one virtual function normally forget define virtual function get unresolved external error saying function missing many implementation forget first virtual function whole virtual table become unresolved implementation define virtual table translation unit first virtual function implemented fqa gaaa define static class variable explicitly cpp file nt define vtables explicitly sooo stupid shocked wait second let recover ok work c really thing header file defining class cpp file implementing function convention according rule definition class member spread across several translation unit translation unit turn spread across several file including inherited c interacts badly new feature c example consider virtual function probably need table similar global c variable course nt want c programmer implement table manually way c else point virtual keyword vtable implemented cpp file class vtables solution nt need vtable unless virtual function well one function first one place vtable near definition function good place wo nt get included twice user get multiple definition error anyway static class variable stuff well um seems good place class could consist single static member anchor sea source code floating file system oh well user choose place duplicate type class membername variable definition little bit typing bad wonder virtual function implemented body class though always wondered course generate many vtables throw away copy one way template wo nt work linker supporting c maybe nt allow implement noninline function body class brave decision add feature linker anyone knowledgeable history subject welcome enlighten however knowledge history subject ca nt possibly make whole business seem le stupid language user set class wo nt inherited faq constructor private object created public function delegating constructor alternatively comment fact nt want class inherited inherit class hunt kill third solution warning one rot brain inherit class private virtual base class private constructor declares class friend way someone try inherit need directly call base class constructor wo nt compile since constructor private add extra word memory size object though fqa c nt final probably nt big deal especially considering fact final would little comment like private little comment commentinsteadofakeyword probably best approach approach yield cryptic compile time error message many people c community believe cryptic compile time error message good thing probably reasonable care theory early fault detection good ignore practice easy fault detection good running program easier deciphering strongly encrypted c compiler error message tend come large cascade real experience language help one stick bizarre point view c compiles slowly people never worked anything else nt think running program easy c code also hard debug people develop fear run time error set member function wo nt overridden derived class faq use final comment instead final keyword technical solution important thing work fqa c private nothing comment recognized compiler real answer follows function virtual nt overridden faq already explained lack virtual keyword effectively equivalent final keyword c nt allow override nonvirtual method would consistently require use virtual keyword virtual function declaration would pretty clear function nt overridden case look nontechnical solution overriding problem consider banning nonvirtual override organization nt give one deep thought quite frequently try fix c banning feature others rule backfire ca nt know whether coding convention work organization believe huge disciplined organization coding convention really followed primary effect programmer feeling anger guilt another nice option people mindlessly following best practice wreaking havoc orderly way saying nonvirtual override seems useless largely independent rest language first glance using look like good thing inheritance multiple virtual inheritance section multiple inheritance inheritance virtual function among useful least useless c feature c multiple inheritance end spectrum section organized faq faq section contains highlevel issue meaning purpose language construct lowlevel issue detailed semantics implementation language construct order sure understand highlevel stuff delving lowlevel stuff fqa fqa section organized exactly like fqa section copying structure faq section faq note two level discussion equally applicable c featuresprogramming languagessoftware systemsformal definition world located elsewhere reason reason c multiple inheritance make little sense even c standard word case express useful highlevel idea using actual feature used implement multiple inheritance c rare people end using abusing fail use right unclear right mean context faq apparently belief situation fixed explaining right mean let sit back watch told never use multiple inheritance right faq people really bother know without knowing want done fqa rage may provoke sympathy met people nt seem anything useful compensate getting others way telling job ultimate goal apparently stop useful work around particular language feature really never used rare however language feature used really rarely careful consideration common c multiple inheritance one two kind problem multiple inheritance static dynamic static problem compiletime name lookup suppose derive class c class b method called name one get called someone call name using pointer c object override name class c override name b name happens two name function accept argument type happens nt dynamic problem way object class c actually built run time effect related basically c object contain subobject b subobject two completely unrelated pointer c object silently upcast write code assuming get object derived b cast b program crash worse done first cast object c b since without knowing definition c way figure location b subobject given location subobject one trap even pretty experienced c programmer fall memorize sharp edge stay away whole thing pick poison time multiple inheritance nt bad faq sure sometimes always using multiple inheritance lower kind cost case use nt nt blame multiple inheritance good workman never blame tool fqa time poorly designed language feature could sometimes option available c even worse let clarify whole blame issue choose use tool suitable job nt blame tool well actually blame vendor tool advertised something nt c ever advertised way example support objectoriented programming well nt even need discus programming language exactly tool accurately described well language key difference tool language context blame choice probably nt choose speak english order communicate people speaking english bunch people something people called network effect example want work project reason nothing computer linguistics project us c use c choice difference language tool still would nt blame english hard learn inconsistent whatever would well difference programming language natural language latter um natural nobody blame former actually designed someone well usually difference cost error people usually recover bad english computer tend le tolerant seem ground blame language blame tool general case course may like whole attitude blaming thing etc everybody free feel way feel like something nothing good workman irksome sound mind discipline using multiple inheritance faq long answer saying thing first normally achieve polymorphism base class code reuse second class multiply inherit normally pure abstract third consider using bridge pattern nested generalization alternative mi described fqa guideline pretty good except maybe nested generalization really way work around deficiency c object system rather reasonable way model anything like discipline without reasoning actual problem hand faq guideline special case nt use design would work one programming language footnote especially language c specifically faq guideline pretty much summarize rule using multiple inheritance java design would implementable least two language good sign reasoning behind avoiddesignstiedtoonelanguage rule something really good many language would design depends something available one language probably bad probably depends bad thing point people loving unique feature language x scream reasoning completely moronic already knew promised reasoning would nt refer specific problem hand nt bright real reasoning discipline one nice thing base class pure way nt think whole class question related reimplementation method example inherit rectangularwindow rectangle window rectangle nt pure perfectly good resize method method still good rectangularwindow want resize window implementation base class obviously wo nt ca nt really override rectangle resize method nt virtual problem reusing code base class multiple inheritance frequently break code however following guideline wo nt necessarily eliminate problem multiple inheritance mentioned provide example demonstrates guideline faq long discussion example different kind vehicle different kind engine faq proposes use mi bridge pattern nested generalization bridge pattern mean vehicle object keep pointer engine object user pas many different kind engine object vehicle class nested generalization mean many class derived vehicle like plane derived class bunch class derived represent different kind engine like oilpoweredplane tradeoff discussed great detail fqa bridge pattern fancy name special case aggregation member object virtual function look good since um vehicle engine stuff hence multiple inheritance look wrong since oilpoweredplane nt kind oilpoweredengine nt feel like arguing faq lengthy statement since issue nt worth case deal definition nontrivial object model relatively rare enough time consider stuff really want model support think different possibility define model check possibility really support stuff think trying memorize special case call pattern whatever object model basically like trying formalize common sense nt really work still blasphemy let look one nonproblem mentioned faq fact aggregation bridge pattern ca nt specialize algorithm specific combination vehicle engine exhibit special behavior language support multimethods trivial multimethods like virtual function dispatched run time based type argument first argument c emulate multimethods using double dispatching ugly especially becomes triple quadruple kind dispatching still possible simple way visualize tradeoff faq matrix cute smilies ya nt apply naively cute matrix omitted avoid copyright problem well cuteness problem fqa warning known way represent common sense tabular form time writing therefore choose store cute matrix anywhere brain risk give another example illustrate discipline faq yes consider case land water vehicle also need support amphibious vehicle case symmetric previous example multiple inheritance becomes preferable still make sure really want asking various question list question follow link faq fqa um symmetry interesting aspect focus anyway amphibious vehicle land vehicle water vehicle oiled powered plane plane oil powered engine yes multiple inheritance seems appropriate yes wise think thing ultimately want object model support defining use opportunity show model problem effectively using multiple inheritance implementation multiple interface class without really using c multiple inheritance thus avoiding problem saying always better real c multiple inheritance sometimes class amphibiousvehicle class watervehicleimpl public watervehicle watervehicleimpl amphibiousvehicle p save p similarly landvehicleimpl class derived watervehicle watervehicleimpl water landvehicleimpl land public amphibiousvehicle water land watervehicle getwatervehicleif return water landvehicle getlandvehicleif return land way write code multiple inheritance bad get even uglier want simulate virtual inheritance bad watervehicle landvehicle inherit nonabstract base class vehicle necessarily recommended call get function instead implicit upcast may considered good bad problem collision name member base class good dreaded diamond faq circle inheritance graph simplest case inherited base join inherited circle graph may look like diamond imagination work way problem join object two base subobjects data member kept twice diamond called dreaded resulting ambiguity resolved example join object refer x variable inherited base tell compiler one mean using x x upcast join base pick one two base subobjects first casting pointer almost always right thing right thing usually tell compiler keep single subobject fqa c programmer nt understand would anyone say pjoin context base expected good reason avoid two subobjects base join feel thing getting pointlessly complicated point may indication good taste hierarchy use virtual inheritance faq top dreaded diamond derive base say class public virtual base class public virtual base note define join ca nt convince compiler keep single base subobject whatever definition tell define class derived base must plan ahead support circle inheritance graph fqa let put aside question whether support option one two base subobjects good thing concentrate way c give choose option top diamond annoying think entire hierarchy define class close top either derived class several base subobjects one forcing user implementers derived class deal problem virtual inheritance general special case generic c principle specifying everything term type attribute well user deal lowlevel detail related underlying language feature implementation mean delegate sister class via virtual inheritance faq diamondlike hierarchy virtual inheritance base two virtual function f g implement f implement g f call g simply saying g verbosely equivalently base g without knowing anything existence powerful technique fqa powerful exactly way ca nt done equally well better way clear average developer say care enlightened wizard variant set wizard consists single person mediocre droids rankandfile well leave interesting discussion personality aside leave aside order point people whose programming ability admire ca nt bothered learn quirk c anywhere near level level turn nt anywhere near complete knowledge wonderful language special consideration need know use virtual inheritance faq usually virtual inheritance good idea virtual base class class derived little data btw even data using virtual inheritance still better nonvirtual inheritance example two base subobjects member end two pointer different subobjects comparing would tell two different object nt level quote careful careful fqa yeah vewy vewy caweful faq advice special case advice inheritance data base class interacts badly mi faq correctly point data base class nt solve problem special consideration need know inherit class us virtual inheritance faq derived class call constructor virtual base class directly particular virtual base class default constructor call constructor explicitly initialization list constructor derived class base class follows faq advice data virtual base class base class probably trivial default constructor nt care issue define derived class fqa base class follows fqa advice avoid nontrivial constructor use initialization function needed nt worry initialization derived class virtual base class either special consideration need know use class us virtual inheritance faq nt use downcast using clike syntax derived pbase use dynamiccast derived pbase answer unfinished according todo remark fqa problem seems virtual inheritance offset must added pbase make pderived depends class derived derived like join class dreaded diamond example compiler ca nt generate code adding constant offset cstyle cast come class hierarchy upcasting downcasting code silently compile wrong program despite fact c already forced u inform compiler virtual inheritance definition class involved cast operation definition join class nt necessarily visible context cast operation compiled nt compiler produce error message generates correct code used dynamiccast answer simple c compiler compiles random meaningless thing ca nt bothered one time exact order constructor multiple andor virtual inheritance situation faq fqa nt want summarize would anyone want know well except maybe suppress stupid compiler warning order thing initialization list matching actual order construction well would use initialization list exact order destructors multiple andor virtual inheritance situation faq reverse order construction fqa right probably nt write code depends thing colleague may get annoyed mix c c question mixing c c may harder expect name language easier say mixing c c stay tuned need know mixing c c code faq check vendor documentation frequently rule must compile main c compiler must link everything c linker c c compiler compatible probably mean vendor version need read rest section c function call c function vice versa compile c code c compiler may need change code may also find bug way good thing unless nt c code source form course fqa little chance successfully apply rule unless understand underlying technical problem rule try address problem thing c translated c straightforwardly mostly exception thing translated several way initialization global variable main finalization main mangling name overload template function virtual function call constructor prototype layout derived class rtti list quite large many language easy mix c feature however unlike c also come formal defacto standard defining abi application binary interface sourcelevel interface c interoperability c standard nt bother thing cause problem particular c function explicitly called kind thing addressed rest question section however global initialization finalization sequence never explicitly called hence requirement compiling main linking program c compiler need use c c compiler vendor true theory practice c compiler given hardwareos configuration interoperate smoothly c compiler long c subset calling convention involved however requirement almost always must mixing c c example thirdparty library c interface involved think mixing c c easier mixing c c nt amazing situation one excellent reason follow faq advice compile c code c compiler c code portable reason keep c code c compilation time better accessibility name mangling function bundled shared library easier call etc include standard c header file c code faq like include cstdio std printf like std n nt like std get way standard name accessed compile old c code c compiler following also work include stdioh printf std n due magic namespaces want include nonstandard c header see next question fqa um printf std printf work get printf standard seems little point mentioning magic namespaces particular case nt really seem anything reason global unmangled extern c printf also made accessible via namespace std c standard mysterious amusing perhaps faq meant magic standard want include nonstandard c header basically tweak way compiler vendor tweaked standard c header include nonsystem c header file c code faq like extern c include fooh fooh header change make inclusion c easier fqa reason c function name mangled c overloading printf known linkers debugger etc printf c may several function name compiler make unique name using encoding argument type example gnu c compiler generates assembly function called c source code defining int printf const char different c compiler name mangling differently one many reason making incompatible theoretically may difference c c function extern c way tell c compiler c function deal difference practice problem name mangling bad extern c compiled different compiler modify c header file easier include c code faq like ifdef cplusplus extern c endif void foo void bar ifdef cplusplus endif ew macro evil wash hand done fqa together usual ifndef define endif trinity used preprocessor directive define single interface seven directive contain zero information specific interface nt help compiler thing compiler language like locating implementation interface want wash hand preprocessor directive touch c time left anything else hand work bathroom call nonsystem c function f int char float c code faq prefix prototype extern c declare declare whole bunch c function surrounding declaration extern c block fqa yeah already nt matter whether declaration header file neither c c syntax aware header file preprocessorrelated thing header file automated copypaste mechanism create c function f int char float callable c code faq prefix declaration definition extern c ca nt one f ccallable function since c overloading fqa oh simple function throw exception nt think going escape easily tried gnu c c compiler c function call c function call c function throw exception ca nt even catch first c function mention disposing resource allocated c function make sure catch possible exception ccallable c function way c exception builtin userdefined type ca nt catch arbitrary exception check kind exception run time operator new throw exception enjoy linker giving error cc function called cc function faq probably forgot extern c linker look mangled c name instead unmangled c name fqa quiz typical c linker try check whether unmangled c name defined fact ask something like forget extern c hint actually simple thing frequently would question asked see one advantage using c get work mature industrialstrength tool chain pas object c class tofrom c function faq use class fred c ifdef cplusplus typedef struct fred fred otherwise define extern c function accept fred faq contains two screen code illustrating point including ansi k r c function prototype note way c code able tell whether two pointer class object point object c code wo nt pointer base class object compared pointer derived class object compiler may need pointer arithmetic comparison c done implicitly expression p q compiled note convert pointer object class void compare neither c c compiler able right pointer adjustment fqa please nt follow advice faq keep telling evil preprocessor proudly present really nasty scheme defining type name mean different thing based preprocessor flag close evil preprocessor abuse get especially pointer equality subtlety involved ridiculous seriously shoot foot simply comparing two pointer object objectoriented language pretty straightforward solution header file supposed used c declare struct fredobj something use different name fred people least figure name mean sheesh c implementation file define structure hold single member fred object nt lead runtime overhead extra syntax needed dereferencing worth benefit compare pointer fun safety really need return object class derived fred define structure single member type fred never mind tiny runtime overhead using class hierarchy implement functionality simple tiny runtime overhead comparable actual work done class throw class hierarchy away stop messing life innocent user people make everything cryptic dangerous c function directly access data object c class faq yes class virtual function nonpublic member object contains value faq outline way inheritance virtual function implemented level allowing pointer arithmetic order access member data c clearly illegal case fqa may mean many thing particular version c c compiler compiler actually standardconforming compiler even normally provision made make easy short answer socalled pod type basically mean structure defined using c syntax people professional language lawyer reasonable case breaking rule entirely moronic act play around language see inside retrieve data class definition available binary form may want check action legal first implementing debugger like case writing legitimately nonportable code case could also ask c function directly access private data object c class often add define private public preprocessor directive top cpp file work quite portably depend layout c class particular compiler people want c code directly access data c class object speed something probably nt enough real problem artificial problem create teach good lesson pretty soon feel like machine c opposed c faq c highlevel language c see every clock cycle spent hand c work higher level abstraction write compact program course still write bad code idea prevent bad programmer make possible reasonable one write superior code fqa question presumably people try mix c c extern c function implemented c throw exception initialization stuff main never get called compare pointer c class object c nt work nt know even start figuring real question probably feel like underneath machine close opposed c c higherlevel language c damage caused lowlevel error still limited still think pointer object life cycle integer endianness many thing top huge amount thing done implicitly like global initialization destruction stack unwinding basederived class pointer adjustment many thing combine lowlevel error single deep wide tar pit programmer middle good highlevel language allows forget many small detail program execution good lowlevel language allows control many small detail program execution c much highlevel language good lowlevel language either remark seeing every cycle spent c program really believe faq author know ca nt see since pretty basic fact ca nt see every cycle spent assembly program case know exact target processor variant system configuration zillion thing faq probably poetical remark factual inaccuracy concentrate moderate problem failing mention arguably severe one consider c code p objgetvec begin runtime code unclear depends whether obj value reference latter may slower c would clear another issue code correct getvec return reference std vector object maybe correct return value certainly wrong compiler wo nt even warn wo nt notice problem code without checking definition getvec hard figure much time c program run hard even tell supposed typical highlevel language pointer member function basically lack function object closure c type pointertomemberfunction different pointertofunction faq nonmember function void f int f type void int nonstatic member function void c f int c f type void c int fqa ahem line noise creep rest section anyway reason type different member function accepts hidden parameter type function pointer derived type argument return value obviously selfdocumenting bit syntax c say function get parameter type c pas pointertomemberfunction signal handler x event callback system call start threadtask etc faq nt member function ca nt used without object class whole thing ca nt work write nonmember function wrapping pointertomemberfunction call example thread creation callback usually void argument could pas object pointer argument callback nonmember callback would cast void actual type call object method function like signal use callback without void argument anything similar case choice save pointer object global variable callback get object pointer global variable call method static member function used context c callback expected extern c although compiler would probably work without extern c standard say nt work fqa picture painted faq nt pretty reality get even worse code write example may want call method object select method call run time compile time would really mean want pas pointertomemberfunction callback question scenario faq problem passing object pointer actually pointer member function anyway fullblown use case passing object pointer via void argument enough wrap two pointer object pointer function pointer structure pas void structure callback unpack structure callback simple quite verbose pretty much like implementing function call assembly illustrates fact c lowlevel language python object obj method func want someone expecting callback call objfunc create callback object expression objfunc simple highlevel language equally easy verbose never ever would save pointer object global variable worry making threadlocal relevant etc problem c single concept callable object instead unrelated lowlevel mechanism calling function example nonmember function pointer work differently member function pointer ubercompetent people actually think get away casting void c p int type void c int know need pas first parameter work many compiler need pas pointer virtual function outsmarting compiler usually dumb especially c compiler really one function call mechanism different kind function pointer convertible implement adapter varying degree clumsiness regarding staticmembersascallbacks issue implementation us different binary calling convention c function c static member function call support inform developer consume mindaltering chemical work keep getting compile error type mismatch try use member function interrupt service routine faq special case previous question fqa use opportunity surprise point handling interrupt c done well anything else much compliment really worth noting one problem c unjustified criticism example people scream something like handling interrupt c possibly followed false claim c highlevel language yeah right maybe remark mental health stuff people nt know talking make people believe c look like bad thing one nt know talking clarification course nt throw exception interrupt handler call new etc course job c would better nt special interrupt course many c feature damage use talk hardware elsewhere saying criticize something either accompany claim reasoning chance convince people least one worth effort trouble taking address c function faq mmmm trying take address order use c function pointer nt well nt nt try cast way wo nt work fqa faq nt answer question instead assumed knew problem answered different question well could also ask original question different reason specifically already aware fact c f different type f nt know spell type something semantically sensible ca nt get syntax right c much syntax making little sense well nt know type c f either depends argument know something like c way find type arbitrary c expression template class void showtype const int eatflamingdeath void testfunc showtype c f compiler say something like void showtype thetypeyouwantedtofigureout array negative size allowed case thetypeyouwantedtofigureout substituted type c f best part large compile time assertion movement promoting plethora arcane macro template like showtype cause compiler fail error message hopefully mentioning something related problem kind thing best practice c nt life amazing avoid syntax error calling member function using pointertomemberfunction faq typedef making type name readable define macro making obj func syntax readable ewww macro evil hundred posting complangc say faq layer syntax proposed could save traffic fqa faq actually proposes use old ohsoevil c macro cover brand new syntax introduced c fqa avoid comment advice since target easy amazing part hundred message fact people ca nt get c syntax right amazing part fact people wanted use pointer member function despite fact pretty useless really need quite frequently delegate functors closure well anything represents code functionan expression data objectbound local variable c nt support thing well perhaps complangc poster tried implement something like top c object member function pointer maybe even something generic template inheriting abstract base class involved yeah sound quite like favorite passtime c developer create use array pointertomemberfunction faq first add typedef macro use funcptrtype arr c f c g c h fqa hey using evil c array like std vector funcptrtype arr arrpushback c f arrpushback c g arrpushback c h much better wait till see full type name arr compiler error message convert pointertomemberfunction void faq seems work platform nt make legal fqa listen faq nt language lawyer talk really nt going work check article lot material c member function pointer warning stuff used scare little child bottom line unlike global function pointer member function pointer address first instruction function implementation apparently exception compiler digital mar company behind language compiler generates thunk code handle difference various dispatching mechanism virtual v statically dispatched function different kind inheritance us address thunk code represent member function pointer quote article implementation nt everyone else way really nt cast thing void ca nt even sensibly cast nonmember function pointer convert pointertofunction void faq stop nt tell worked illegal fqa c c strongly separate code data many language hardware processor implementation pointer data object pointer function however vast majority implementation size going possible convert function pointer void somewhere else convert back call function violates language rule code assuming complement integer ieee floating point chance kind code actually fail interesting platform low admittedly codepointersarejustlikedatapointers assumption le useful signednumberscanbedividedusingrightshift assumption though typically one would nt kind cast need something like functionpointers flexibility andor threadsafety another way faq functionoid need fqa functionoid rhyme marketroid term local faq used instead standard term functor heck functionoid would use one faq mean function steroid course faq go describe class single virtual function called doit object class basically like function except pas argument constructor keep state call without threadunsafe global variable discussion lengthy didactic lot example nt say something like oh yeah problem follow link real faq answer see fqa functionoid functor normally called basically manual emulation closure closure save little class people create order functionpointerplussomecontext example following code try use higherorder function foreach language without closure c completely ridiculous struct printer std ostream printer std ostream template class void operator const x const x std endl void printthem const std vector int std foreach thembegin themend printer std cout clearly loop would nt nearly bad however closure could something like void printthem const std vector int std foreach thembegin themend lambda x std cout x std endl would still verbose smaller problem std mentioning twice least stupid printer class replaced code generated implicitly compiler check monstrous boost lambda library designed work around lack closure c desperate attempt make higherlevel function kind defined algorithm entirely useless tried gcc would nt compile without default template nesting depth limit enough library got screen error message single line code using thing see also thread especially part explain cout endl work cout endl nt get quick search fails miserably continue reply make functionoids faster normal function call faq sure instead virtual function use inline member function make code using functionoid template fqa way functionoid compile slower normal function call though mention loss flexibility run time run time speed impact obsolete approach inlining used c discussed compile time speed impact c template discussed fact job make sure thing inlined properly family scenario one problem lack closure c discussed template page c template one largest cannon aim foot c arsenal offer template solve problem c macro creating order magnitude problem idea behind template faq template describes build definition class function basically one application typesafe container many many fqa let get bit specific faq answer applicable c macro lisp macro ml functors function like eval found many interpreted language o code generates assembly instruction used handle interrupt run time plain code generation writing program print source code purpose device metaprogramming writing code work code creating piece code basically built rule yet interesting difference question specify rule difference approach used c template use integral constant type represent difference use class function definition represent rule first decision prevents generating code dynamically parameter compiletime entity second decision prevents almost everything else nt get use programming language generate code thing write code thing factored made parameter ca nt simple useful set basically class automatically generated class wrapper remote procedure call instead normal local function call called proxy stub com terminology many term even computing factorial integer parameter done using much code abusing language mechanism people useful work proud able accomplish beyond fundamental limitation template follow tradition c feature interacting poorly template ca nt compiled code well template code generated parameter compile c like c defines way locate compiled code definition given name consequently template definition placed include file recompiled translation unit time instantiated even exact instantiation used n file problem amplified tremendous complexity c grammar complicated part probably template making recompilation slow code nt compile get cryptic error message compile might wonder mean interaction c type system pointer array reference constant literal function operator overload resolution function class template specialization selection builtin userdefined implicit conversion argumentdependent name lookup namespaces inheritance dynamic binding thing kick sheer length list convincing neither human program say ide chance unprecedented syntactic power poor support metaprogramming necessarily big deal lot lot thing without unless work c example builtin list dictionary c standard library provides template use recompile definition kind dictionary time use source file fact code c standard library belongs conceptually historically separate library called stl stand standard template library example std vector faq recommends use instead evil c array come use c chance going deal lot obscure metaprogramming facility syntax semantics class template faq add parameter definition class template typename class array use parameter definition class arr n use class substituting parameter array int faq give code listing instead using word example simple fqa wow sound easy bad wrong two way first thing follow straightforward model faq discus couple case like need resort typename keyword lookup nondependent name case illustrate ca nt take definition class parameterize thing making template expect work way tricky second case nobody would ever write class generated template manually template still used metaprogramming facility offered c course also c macro limitation template nt vice versa least compile fast c community macro considered evil feature ever using treated sin somewhere speeding blasphemy anyway majority us template beyond typesafe container actually fall second category let look previously mentioned compiletime factorial example trivial compared nifty stuff like type list template int n struct factorial enum value n factorial value template struct factorial enum value code generates class order compute factorial n talk syntax semantics class template equally disturbing human make little sense compiler internally represent class using sizable data structure compile time computation technique tends take lot compile time tool hammer template every problem look like nail also hammer hammer oh want use template kind c lexer part compiler converting text token parser check whether make meaningful statement code like vector vector int try declare inefficient implementation array wo nt compile need space two character concatenation look like right bitwise shift operator one harmless albeit confusing awkward interaction c feature syntax semantics function template faq pretty similar class template plus usually omit template parameter compiler figure function argument instance write swap function swapping two value type integer string set file system yes faq actually mention swapping filesystem object way instantiation function template called template function fqa addition problem class template engaged battle wit ohsosmart compiler figuring template parameter function argument example std max compiles x int fails compile float short see point template make algorithm work value many different type facilitating code reuse fact x le code std max x short nt mean nt want reuse code instance reuse std swap swap couple file system implement class filesystem default constructor creating new empty disk partition copy constructor copy file given filesystem newly created partition destructor wipe operator latter followed former handle error use exception might get extra disk partition created destroyed especially pas filesystem object around much code small price pay reusing line code std swap commercialgrade compiler even eliminate copy note function template template function useful bad people confuse two careful c terminology example nt confuse object file compiled code object belong class turn nt confused instantiation class template substituting template parameter called instantiation result process also instantiation creating object called construction good bad news terminology easy part explicitly select version function template get called faq time nt need compiler guess us argument guess function none use f int sometimes want force compiler choose different type would choose default example g instantiate g int want g long force compiler call g long explicit instantiation g long type conversion g fqa good reason avoid kind clever behavior get way try figure program actually nt always author thought would overloading template specialization one kind behavior go figure function actually called let assume moment problem important thing write code expressing author intent clearly sense cluttered lowlevel detail like version function called case picture presented faq look fair need explicitly specify parameter compiler information guess nt like guess truth complicated sometimes function one argument template defines constraint argument happens std max x float template want two argument type compiler think type int even though intent seems clear probably want treated number type x compiler ca nt make decision interfere case choose two almost equally unreadable alternative explicit instantiation explicit type conversion two option explicit instantiation syntax defined c opposed type conversion inherited c typically worse first way code using function force implemented template although nt really care make harder get rid pesky template feel like second need interfere disambiguate arises inside another template may use following syntax hideous even c standard atemplate f long c feature generally interact poorly template set record interacting poorly parameterized type faq way say class template fqa hmm need two way saying genericity faq way say class template nt confuse generality fqa hmm need three way saying apparently c promoter consider template excellent unique feature despite obscurity availability much better metaprogramming facility many language many different synonym probably needed illuminate killer feature many different direction template function something special template type int std string write template us special code one specific type faq first make sure good thing case generally observable behavior special version want add identical general case otherwise helping user special case consistent generic case template void foo int fqa observable behavior mean different thing different people particular many c user tend observe performance nt care performance still use language wo nt detect run time violation language rule like outofbounds array index probably wasting time consequently specialization vector bool spaceefficient storing bit instead byte cost speed individual bit harder access whole byte found stl version good idea ultimately confuses performanceaware user user want vector bit user implement vector bit stl could supply one inconvenient ca nt simple mental model describing vector really mean addition specialization actually pretty dangerous trap responsibility make sure specialization visible compiler included point template used case get kind vector bool instantiated program triggering undefined behavior typically pas vector first kind function compiled work vector second kind crash specializing others template likely lead disaster ca nt make sure specialization visible code nt write library actually assume specialize template define best avoided really want use specialization take account function template nt support partial specialization want special version type vector class template template function support overloading follows different rule one workaround implement single function template working delegate call static method template class template class void f const x fimpl f x way class fimpl defined using partial specialization layer cryptic syntax could considered tolerable ultimately way accomplish something really useful could forget done actually easy program without complication almost always complication get nothing except reducing maintainability get see time compilation error deep chain template delegating trivial work debugging run time error becomes real nightmare basically choose simple interface simple implementation cstyle cryptic interface cryptic implementation tradeoff huh provide example template specialization nt use foo bar faq instance stringify value different type using template generic version boil ostringstream x might want define specialization handle type ostream output operator nt like set output precision floating point number etc fqa mean value type formatted identically example integer printed using decimal digit prefer hexadecimal define class hexint template course handle different integral type including userdefined one use stringify hexint int x might need partial specialization stringify hexint see previous faq save trouble explicitly passing template parameter hexint use creator function template hexint hexint const compiler figure stringify hexint x specifying number leading zero format string using advanced c typebased technique left exercise reader done quite work indeed order print integer time relax let compiler concentrate cleverly figure thing want figure usually print stuff debugging long build time may annoying sure better using visual debugger get see line noise generated template meanwhile quite likely whatever real job someone else probably kind competitor already done result contain mature generic efficient printing infrastructure really really minor usability maintainability problem certainly nt c template specialization friend code template function way get benefit template specialization without duplicating source code faq factor common code specialize helper function called common code two screen source code attached illustration fqa factoring common code helper function indeed useful kind thing virtually every programming language existence question faq seems indicate people get unbelievably confused template lose hope anything useful know applicable much exaggeration template template specialization must slow program right faq guessed wrong maybe compilation become slightly slower compiler end figuring type everything usual nifty c optimization fqa guessed right compilation become intolerably slow like faq lying talking state affair theory c belongs slight slowdown compilation even worth discussing everything slight lot time hand try build c program modern c program full template compare time took execution time practical problem making program generated template slow compared handwritten alternative first compiler generates code sometimes linker throw away extra copy sometimes nt size program increase particular linker nt chance throw away function identical assembly level source code level think vector int vector void possible implement template way avoiding problem using implementation specialization yielding assembly code tedious almost never done two identical function almost always take time execute single function called twice instruction cache useful gadget frequently overlooked many people care theoretical efficiency without actually measuring performance second people work template use type hammer saying almost everything consider hexint class previous faq specifically wrap simple value builtin type userdefined type class type used select right specialization whatnot fact used specify extreme example boost lambda library creates structure representing entire function substructure representing addition substructure representing constant etc theoretical performance fan may think structure get optimized clever compiler practice almost always close impossible socalled pointer aliasing problem local variable x clear nobody change code function compiler lot thing x like stuffing register even completely optimizing push x structure hard see modified go figure pointer structure especially pas object separately compiled function compiler allocate memory slot x make sure memory cell get updated x modified memory cell get read chance could changed someone else code working template relying type compile time dispatching end lot memory loadstore operation run time since type nt really go away anyway huge amount scenario take care optimize complicated templatebased code well compiler writer rarely bother lucky get parsing right even unlikely porting one compiler another chance compatibility problem come semantics code using template template overloading right faq sense inspected compiler resolve name figure version f called f x sense rule different specifically sfinae substitution failure error rule argument type match exactly template considered overload resolution nt compiler wo nt try apply conversion way would function instead discard template fqa aside fact acronym sfinae interpreted literally nt seem describe supposed describe sound little bit easy example exact match mean let look real life example taken gnu implementation c standard library tried make short distinct stupid thing involved hard get tired middle stop probably indication get main point thing actually complicated department complication best avoided stupid thing upon time vector int iterator plain old typedef int gnu stl course dangerous people might use std vector array object serious abstraction violation could get arrested jurisdiction beginning century guy behind gnu stl decided fix creating class template called normaliterator template serf strict typedef wrap existing iterator type int delegate operation existing type converted int many important benefit previous implementation example much longer error message stupid thing may know two kind iterators defined stl container iterator constiterator inherent problem const const iterator constiterator stl wanted consistent would also define volatileiterator constvolatileiterator nobody would even look stl would nt necessarily bad nt also need two kind normal iterators int const int stupid thing course gnu stl guy nt want define normalconstiterator making conversion hard excellent thing making hard completely different thing instead decided support automatic conversion different instantiation normaliterator course delegating conversion wrapped type template normally delegate useful work someone else job obfuscation way compare const nonconst iterators using operator elegant prototype template typename iteratorl typename iteratorr typename container inline bool operator const normaliterator iteratorl container lh const normaliterator iteratorr container rh stupid thing stl provides another seemingly unrelated service user defines global relational operator work argument type compare object without knowing anything point probably guess answer course delegate work someone else time existing relational operator using interesting identity b b way define relational operator get rest free stupid thing except ca nt subject overload resolution template kick remember rule considering template argument type match prototype exactly well compare normal iterators type example wrapping int beautiful prototype match argument exactly generic relational operator oops ambiguous overloading solution define third overload matching type even exactly using single template parameter iterator instead two possibly differ situation considered unambiguous frankly beyond basic intuition saying must show compiler type pattern similar argument possible nt know nt list stupid thing first make feel case ignorance bliss apparently situation look discouraging even inside c universe indicated following rather sad comment found one header file gnu stl probably decipher unless stupid thing already faded memory note follows left righthandside iterators allowed vary type conceptually cvqualification comparison cvqualified noncvqualified iterators valid however greedy unfriendly operator std relops make overload resolution ambiguous scope nt provide overload whose operand type someone remind generic programming gaby could amusing implementor standard library language complaining language file delivered user nt mindnumbing people think better c gnu stl author welcome waste entire life chasing solving problem overload resolution template specialization whatever name rest trying avoid template overloading sound like good advice followed extent even forced use c ca nt separate definition template class declaration put inside cpp file faq accept fact say faq template code recipe generating code given parameter order compile code must first generated take knowing template definition definition parameter passed compiler nt know anything code outside file compiling file called separate compilation place template definition header file else compiler wo nt get chance see definition need time expert calm yes oversimplified know nt need answer anyway fqa two problem placing template definition header file may bother get recompile time file included disclose source code user let concentrate first problem second minor anyway source code template nt necessarily easier understand disassembled object code first problem get idea magnitude consider fact iostreambased hello world program requires gnu c compiler parse byte contrary claim faq turn need make source code template available compiler reason problem suppose c compiler could use rule locate compiled definition class given name example std vector int always located file outputroottemplatesstdvectorinto way used vector int vector double compile vector twice used vector int twice compiler could avoid recompilation would make sense since compile different class time compile template unfortunately ca nt work c compiler ca nt parse std vector int without parsing entire preprocessed output generated include vector parsing done compiled source file take compilation time generating code std vector int several time small part problem compiler writer nt bother solve since still parsing bottleneck basic problem inherited c compiler ca nt look definition instead arrange include file preprocessor copyandpaste definition single huge bulk containing everything relevant well many irrelevant thing compilation source file c still compiles fast grammar simple many newer language define concept class also rule help compiler locate definition instead parsing c programmer enjoy worst world avoid linker error template function faq probably nt make definition template available compiler point template used implement template cpp file three solution move definition h file may increase size compiled code unless compiler smart enough add explicit instantiation cpp file example template void foo int cause compiler generate code foo int linker find include cpp file defining template cpp file using template feel weird live read previous faq fqa solution create new problem moving code h file even code size nt increase compilation time going recompile template scratch time used template one hardest part c compile nice faq least acknowledges code size might increase though practice certainly bad faq nt mention question speed template replicated code mean time spent fetching code instruction cache explicit instantiation one big step back c macro suppose parameterized preprocessor macro expands definition container class one difference macro equivalent template someone us one class someone must also make sure macro actually expanded somewhere appropriate parameter must provide expansion otherwise linker error template compiler supposed generate needed instantiation transparently except almost impossible accomplish along come solution moving u back square one including definition point usage share problem first two option use template h file may include cpp file defining h file getting problem option benefit option transparency gone quite similarly option job make definition template available wherever template used c keyword export help template linker error faq designed eliminate need make definition template available compiler point usage currently one compiler supporting keyword future unknown advice futuristic programmer follows show way make code compatible compiler support export nt using guess wonder evil c preprocessor among thing faq advises define export certain condition fqa help want know ok export keyword help template linker error way song peace help stop bullet penetrating foot help like keyword findbugs telling compiler find report bug piece code would help bug rest c make keyword impossible support useful way would actually yield faster compilation compared case template definition included header file compiler nt bother support future keyword unknown useless spot someone following faq advice ifdef extraterrestrialcompiler call ambulance warning patient likely reached agitated state might escape people qualified deal situation arrive try occupy patient mind discussion fact defining keywords illegal c propose consult lawyer try design couple keywords together look synonym dictionary imagine printed popular font stuff like improvise gon na soon avoid linker error template class faq like error template function explained previous answer fqa yep get linker error use template friend faq class template c declaring friend like foo f compiler assumes global function f returning foo probably meant different thing namely function template template class foo f want instantiation f friend instantiation c two way around declare function template definition class add friend declaration friend foo f define friend function template inside body class fqa solution syntax unrelated semantics extent remarkable even c mean talking instantiation template function use keyword like example top head template keyword say c way uncompromisingly ugly especially example mentioned faq operator even nt problem placing definition header file seemingly cleaner second way actually cryptic break one thing c normally count declaration function type look like definition without body change meaning prototype adding body instead declaring function declared defined function template last least fact problem exists indication readability problem c grammar many people would guess original declaration refers function function template one supposed navigate swamp arbitrary syntax course one nt expect kind readability get natural language programming language course formal language behave counterintuitively time people deal formal language quite successfully possible keep reasonably compact model key rule one mind case even bump behavior nt make sense first glance think course course know feel understand c compiler actually neither c user human hope understand overly verbose templatebased error message faq free tool converting compiler error message humanreadable one work many compiler example follows snippet stl decryptor suppressed stl standard header message fqa oh really templatebased error message hmm nt compiler writer produce clean error message first place single tool clean mess created many different compiler people must quite lazy andor stupid actually error message cryptic template cryptic compiler ca nt really much better today tool mentioned without name linked faq called stlfilt faq nt mention name output mention stl work ca nt improve generic template error message filter stlrelated message know stl implemented specific case need couple tool like stlcompilationtimereducer stldebuginformationbeautifier set yet another proof generic metaprogramming facility better way implement container build language wish implement template library nt forget implement tool filtering error message user get well cool tool flavor compiler getting error templatederivedclass us nested type inherits templatebaseclass faq hurt sit compiler nt look nondependent name one nt mention template parameter dependent base class inherited nested class typedef base class b access using dependent name like b ca nt use nondependent name like plain prefix dependent name typename keyword compiler nt know b type think two specialization one defining nested class one defining global variable fqa illustrates two generic problem c grammar first class template parameterized class definition crazy c name lookup get crazier inside template nt assume take c class definition factor bunch parameter get working template definition second telling c type name c objectfunction name insanely complicated interacts badly template constructor everything else possible reaction user faq attempt anticipate running away may justified sitting probably good developer tend test code even compiler nt spit error message wrong thing silently instance used type called global namespace test find error stupid compiler behavior feel like pain people think extremely slow c compiler spend time finding bug nt bother test result people relax save tear c runtime error getting error templatederivedclass us member inherits templatebaseclass faq reason identical previous faq workarounds different convert f f add statement using b f class definition using fully qualified name like done previous faq b f also work except function virtual case compiler use static binding dynamic binding fqa yep case member function similar case nested type additional bonus interacting badly virtual function faq hilarious comment spirit nt mean template inheritance nt work name lookup work differently c like ca nt write code ca nt tell sure particular name part mean previous problem hurt silently possible compiler silently generate wrong code faq yes compiler might call function use type global namespace instead meant example fqa horrible language silently misinterpret mean may sound language creative imprecise human mind formal language aside people frequently misunderstand formal language form relatively simple model help understand problem c except simple part c misunderstand pretty frequently also test code creating program check want bunch case c except compiles forever write notable amount code implement simplest test c code end tested pretty rarely fqa error page list factual errorsinaccuracies c fqa find one please send email right publish correction either giving credit anonymously according choice factual error mean statement proved wrong refuted practically feasible test positive example say c compiler may generate slower code c source c compiler unless exception support fact commercially significant compiler wrong nt bother one already checked say c grammar undecidable formally prove decidable wrong advice nt bother one negative example say template mostly applicable container know many way use template really qualitative argument call us call abuse like arguing whether sed applicable numerical computing matter common sense get nowhere formal definition turing tarpit inform inconsistent sometimes problem c lowlevel highlevel work sometimes think highlevel lowlevel work message land bit bucket think lowlevel highlevel work c suboptimal tried free call inconsistency think fact c superset c mean c ca nt inferior c go visit chernobyl buy radioactive cat leg wing codenamed cat nt expect agree sometimes base class constructor must information actual object type eugene toder fqa answer dispatching virtual function constructor based following statement base base nt know called order ultimately initialize derived object wrong since virtual inheritance ca nt work way particular afaik cfront first c compiler always passed constructor parameter telling whether initializes base class object derived class object matter kind inheritance involved yossi error also inconsistent information fqa specifically fqa mention following faq virtual inheritance programmer must directly initialize virtual base class object derived class even immediate base class inherits indirectly someone derives another class class derived virtual base class still programmer initialize virtual base class object derived already contains code maybe base class contain code problem first place nt want use virtual base class initialization code derived want use initialization code derived therefore constructor derived must know whether ultimately initializes derived object object child class order conditionally execute initialization code constructor code must generated twice context think fqa answer still value sense may actually intuitive c programmer faq answer basically say c prevents potential certain error accessing uninitialized member derived class silently something different thought would special fact memorized normally c nt try prevent access uninitialized data fqa answer say c thing naturally efficiently following underlying implementation set vptr point correct vtable spend cycle tiny amount c frequently conservative run time cost arguably consistent rest c easier remember course nt make erroneous statement fqa correct c bool builtin type c usenet posting complangcmoderated said c nt add builtin type c bool yossi statement false wait good mean one quoted posting fqa mention c add builtin type essentially new kind pointer reference pointer member nt say defective c false assertion appears fails mention bool context anywhere unlike previous item error nt invalidate reasoning text appears specifically context erroneous statement discussion highlevel builtin type nt map directly c type way bool primarily size known compile time define private public enough cancel c encapsulation andreas krey pointed also need define protected public define class struct latter fail work code like template class class x keyword struct used template parameter list may problem related interaction access control name lookup another thing failed mention original context defining keywords nt legal c work implementation preprocessing separate pas unaware keywords treat identifier never worked implementation differently define private public still illegal c useful debugging print private data without changing header file recompiling hour illustrate c encapsulation useless security latter original point special case ndimensional array allocated dynamically new array dimension except first known compile time allocate array dynamically new c array flat sequence object type case object dimensional array dimension nt known compile time dimensional array would nt possible describe c type knowing first dimension run time nt create problem joe zbiciak found answer fails mention answer still incorrect say way allocate ndimensional array dynamically however special case third way conversion code data pointer common fqa say conversion function pointer void pointer rare independently illegal though supported many machine patrick walton counter actually done time dynamic linking dlsym posix platform return void even code pointer getprocaddress window return void even data pointer interesting platform violate standard opposite way case posix lot pain involved making required interface work system function pointer longer data pointer wonder neither window posix defined two function one returning void one returning void copyright yossi kreinin revised october
97,Lobsters,education,Education,How to secure your WordPress site in 2020: The definitive guide,https://markosaric.com/secure-wordpress/,secure wordpress site definitive guide,secure wordpress site wordpress security checklist use unique username strong password turn require verification install theme plugins untrusted source updated automatically backup automatically containerbased isolation wordpress vulnerable insecure serious blogging platform default username andor weak password outdated wordpress software obsolete version php outdated theme plugins crosscontaminate blog hosted server best wordpress security plugins identify existing vulnerability malware malicious code script date software known security issue sucuri sitecheck search console wordfence security host blog secure hosting company best protection crosscontamination use secure wordpress host learn greengeeks happy paying customer greengeeks service automatically updated soon new release nightly backup data containerbased isolation spam protection realtime malware virus monitoring free ssl certificate let encrypt customer support via live chat email phone turn verification completely prevents brute force attack secure sign enable twostep wordpresscom install activate jetpack plugin turn single sign option require twostep authentication disable default wordpress login form block unwanted brute force login attempt jetpack protect automatically block unwanted try bad ip address rest network automate update wordpress plugins vast majority security compromise happen outdated plugins blog design limit number plugins theme installed download theme plugins unknown source plugins theme high number downloads active wordpress user regular update recent last update create new user account limit unauthorized access role capability user add new give role administrator log default admin account log new user detail delete default admin username transfer old post new username use strong secure password least twelve character number special character upper lowercase free tool set new nickname user profile nickname field display name publicly allow guest user registration make sure anyone register option unticked allow ping used ddos attack default article setting tick allow link notification pingbacks trackbacks take regular automatic backup greengeeks database file recommended perform regular full backup entire site updraftplus improve wordpress security,guide feature simple security measure implement secure wordpress site prevent hacking attack keep content safe include best wordpress security solution precaution post follow sleeping safelywordpress security checklistthere many wordpress security guide even step protect wordpress site many step completely unnecessary average userhere quick simple step take keep wordpress site safe secure use unique username strong password administrative accountsturn require verification administrative accountsdon install theme plugins untrusted sourcesset wordpress theme plugins updated automaticallyset wordpress backup automaticallyuse host containerbased isolation protects site contaminated insecure site serverthese six step take minute implement need worry wordpress security able focus building great website insteadwhy wordpress vulnerable insecure wordpress serious security secure software wordpress security team made security expert developer open source software many eye keep whole content management system safe secureso hear wordpress vulnerable insecure wordpress widely used cm blogging platform market share entire webthe popularity wordpress website make regular target brute force login attack attempt discover site use default username andor weak password sensitive information key keeping blog safe securea bruteforce attacker log many password hope guessing correctly attacker systematically check possible option correct one founduse twofactor authentication wordpress admin dashboard login effective brute force protectionthe second common attack outdated wordpress software obsolete version php outdated theme plugins key always update everythingboth type attack automated across hosting platform specifically target blog onlyif succeed infect blog adequately secured may even crosscontaminate blog hosted server let happen youbest wordpress security plugins identify existing vulnerabilitythere several wordpress security plugins tool use figure blog current weaknessthey scan malware malicious code script date software known security issue wordpress security plugins help keep blog safe best option include free version sucuri sitecheck sucuri plugin browserbased tool quick scan checksearch console security manual action section notifies google detects malware security issue wordpress websitewordfence security popular wordpress security plugin used million site feature login security firewall malware scannerhost blog secure hosting companyone vulnerability crosscontamination site hosted unprotected shared server exploitable site get attacked site server infected toothis happened blog time hosted godaddy initially blamed hack inexperience using best practicessince learned hack happen made wary using host well protected best protection crosscontamination use secure wordpress host ask host security precaution take crosscontaminationmy site readersupported make purchase link site may earn affiliate commission help keep site advertising trackingfree change price pay recommend product truly believe valuable learn moreright blog hosted greengeeks happy report security issue yet finger crossed continues happy paying customer greengeeks service several security measure server configuration additional feature place take advantage using wordpress installation wordpress blog automatically updated soon new release take actionthere nightly backup data case emergency fortunately deal backup yetthey containerbased isolation mean blog kept separated blog infected crosscontaminationinbuilt spam protection realtime malware virus monitoringyou also get free domain name free ssl certificate let encrypt prevent site labeled secure different customer support via live chat email phone case necessaryturn verificationtwofactor verification add extra layer security wordpress login url completely prevents brute force attackswithout access phone simply impossible break login page even attacker know username passwordturn secure sign jetpack one easiest way enable two factor authentication wordpress let log selfhosted site wordpresscom logins wordpresscom allows require twofactor authenticationenable twostep wordpresscom account twostep authentication within security install activate jetpack plugin selfhosted wordpress admin areaturn single sign optiontick box require twostep authentication insert code theme functionsphp file disable default wordpress login form addfilter jetpackremoveloginform returntrue log selfhosted blog using wordpresscom login detail require twofactor authentication phone default login disabledtwo step authentication far best way stop people trying brute force way wpadmin dashboard highly recommend itin past used several different hack prevent attack changing url default wordpress login page blocking ip address except trying login two step authentication much elegant solutionblock unwanted brute force login attemptsif whatever reason turn twostep authentication decent alternativejetpack protect like web application firewall wordpress monitor failed login attempt network site hosted wordpress automatically block unwanted try bad ip address rest networkanother common way hacker try brute force site xmlrpc jetpack protect also block xmlrpc attack need anything disable xmlrpc using jetpackactivate jetpack plugin enable protect addon turn onthe alternative wp limit login attempt pluginautomate update wordpress pluginsmain reason developer release new version frequently caused security vulnerability found older version vast majority security compromise happen outdated pluginsautomatic update work keep safe always upgrade latest version wordpress newest version blog design theme plugins useupgrading simple automated oneclick process within wordpress admin interface new update available wordpress give notice top dashboardthe recent version feature automatic background update may find secure host update latest version automatically sleep mine doesthemes plugins automatic update possible since wordpress release august number plugins theme installedkeep entry point attack minimum install theme plugins actively use necessary run blog remove anything usedminimize number plugins use jetpack instance replaces several different pluginsdon download theme plugins unknown source use official plugins theme official website trusted source premium theme pluginsthese quality sign look plugin theme high number downloads active wordpress usersregular update recent last updatecreate new user account limit unauthorized accessit harder hacker break wordpress account username password cracked username admin frequent target brute force attack easy target deleted usedreduce number people admin access blog minimum anyone need admin access easy role capabilitieshere create new user delete default admin user create user going user add new wordpress menuwhen creating new user make sure give role administrator ensure full authority wordpress website securitynow log default admin account log new user detailsin user delete default admin usernamemake sure choose option transfer old post new username deleting admin accountuse strong secure passwordsdon use simple password wordpress account simple password might make easy remember also accessible hacker crackuse strong secure password instead password least twelve character longinclude number special character upper lowercase lettershere free tool norton help create strong passwordset new nicknameyou want new username author name shown post way hacker easy way finding new usernameset nickname account something different username go user profile choose new nickname nickname fieldset display name publicly new nicknamedo allow guest user registrationsyou membership site reason allow visitor register guest accountcheck got registration turned click setting make sure anyone register option untickeddo allow pingswordpress pingback option enabled used ddos attack site option enabled default important disable itin setting go discussion default article setting tick allow link notification pingbacks trackbacks take regular automatic backupstaking daily weekly automatic backup content database essential good hosting provider execute system backup part mine doesat time set wordpress site greengeeks select automatic updated automatic backup still take personal responsibility regular backup wordpress consists two part database place setting page post comment storedfiles include medium attachment theme pluginsit recommended perform regular full backup entire site plethora option best free plugin updraftplus used million blogsin case site get hacked infected virus malware able restore fully functioning backupthese simple step executed relatively quickly improve wordpress security make site much harder break intoyou probably hacking problem feel safer able focus time writing exciting content building audience
98,Lobsters,education,Education,Thought Experiment: An Introductory Compilers Class,https://semantic-domain.blogspot.com/2020/02/thought-experiment-introductory.html,thought experiment introductory compiler class,summarized reaction request john regehr made teach compiler goal teaching compiler coursecompiler structure lexing parsing brüggemanklein derick wood typechecking conversion ssacps richard kelsey hat absolutely highlevel optimization sparse conditional constant propagation lowering register allocation ssaform register allocation algorithm hack perspective introl sketch type structure program structure top level definition expression pattern example,recently read blog post ben karel summarized reaction request john regehr made teach compiler one might predict internet agreement answer absolutely everything basically everyone different perspective important thing union everyone important thing everything fact certain point view nt disagree parsing typechecking intermediate representation dataflow analysis register allocation instruction selection data representation stack layout garbage collector abis debugger basically everything compiler packed gill absolutely gorgeous algorithm proof sheer density wonderful stuff compiler world however john specified introductory course ala make everything wrong answer asking pedagodyfirst answer fit coherently smallish number lecture mean start question want student learn build curriculum around goal teaching compiler student learned taking compiler class obvious wrong answer write compiler likelihood forget technique implementing compiler soon course end unless catch compiler bug write many compiler want come away compiler class lasting knowledge think term deeper programming technique arise naturally writing compiler b apply context compiler two obvious candidate technique computing value recursion inductivelydefined structure computing value least fixed point monotone function bottomup iteration fundamental algorithmic technique however think recursion inductive structure much likely taught outside compiler course especially considering modern functional programming ie datatypes pattern matching much often taught elsewhere curriculum used leaf fixedpoint computation let choose goal intro compiler class teaching fixed point computation many time many different context idea general technique fixed point computation learned via generalizing many specific example fact building compiler significant primarily mean different example seen motivating context drive choice design course goal show fixed point computation arise many different context stage compilation pipeline naturally supply noncontrived collection differentlooking context consequently design course full fronttoback style covering phase compilation pipeline however style course real weakness result shallow coverage topic mitigating weakness drive design rest course particular compiler structure opinionated thing want present variety option lr versus parsing graph colouring versus linear scan register allocation cps versus ssa irs etc present strength weakness engineering design consideration lead favour one choice course wo nt instructor simply choose algorithm particular choose one benefit fixed point computation existence alternative gestured lecture studentfacing explanation exploring first compiler aiming good choice biased much towards implementation simplicity gcc llvm easier pitch advanced compiler course student final year project write fancy compiler also need bite bullet deemphasize aspect compilation fixed point computation le relevant therefore cover runtime system data structure layout great detail substantially affect design language compile particular choose language closure object furthemore tell student stack layout use memory management wil garbage collection via boehm gc coursecompiler structure rest note call language compile introl always liked algol naming convention introl firstorder functional language basically get removed nested function lambda expression reference exception ocaml attached sketch language end post language two feature hard polymorphism datatypes reason inclusion polymorphism make formulating type inference fixed point problem interesting reason datatypes exist match statement offer interesting control flow b really show sparse conditional constrant propagation course follow topdown lexing code generation approach many bemoan context goal actually totally appropriate lexing parsing lexing would start usual regular expression nfas thing take bit left turn first would show state set size could explode introduce brüggemanklein derick wood deterministic regular expression way preventing explosion reason condition essentially check whether regular expression parseable recursive descent without backtracking ie calculate nullable first variant follow set regular expression let explain set mean context without recursion fixed point make easy transition grammar fundamentally deterministic regular language plus recursion calculation set fixed point equation easy using deterministic regular language mean explanation set mean decoupled compute via fixed point computation naturally mean grammar introl must typechecking typechecking kind language pretty routine case phrased abstract interpretation style cousot type abstract interpretation interesting thing polymorphism presented via cousot called herbrand abstraction idea abstract element monotype unification variable partial order substitution σ σ unification algorithm attempt calculate substitution witnessing join two term say attempt since unification fail kind partial join operation case join two term must type error introl presented toplevel function type annotation work end needing serious fixed point computation infer type indeed even omitted annotation fact unification calculating general unifier mean fixed point iteration recursive function terminates one iteration surprising since damamilner algorithm need one traversal syntax fact worth working great deal life static analysis involves trying find excuse iterate le indeed motivates move ssa next phase compiler conversion ssacps choice ir always fraught one compiler class course would use static single assignment ssa representation ssa good choice simplifies implementing kind dataflow optimization b generating also need dataflow analysis c ir choice serious compiler b mean get lot fixed point computation c mean wo nt feel artificial today yoof however would nt go directly ssa since find φfunctions difficult explain directly imo worth pulling trick richard kelsey hat exploiting correspondence continuationpassing style cps static single assignment form ssa cps often come sort mysticism higherorder function case work simply basically letnormalize program transform surface language basic block argument prefer bunch function tailcalling version ssa mlton compiler used memory serf swift sil interemediate representation us well roughly speaking basic block program end zero formal argument jump block argument fill argument end making super easy explain program go letnormal form tail call get compiled jumpswitharguments nontail call use call ir instruction maximally naively absolutely want get nearly pessimal ssa since basic block take argument variable scope reason make need ssa minimization obvious want shrink block parameter list nt take parameter variable either nt vary nt get used take u something close pruned ssa form would normally overkill first compiler except want use motivate computation dominator tree eitheror nature shrinking two analysis liveness analysis constancy analysis dataflow analysis show use dominator tree order work calculate calculate fixed point faster justify fixed point computation calculate dominance information need bit redundancy deliberate think important done two analysis calculating dominators one fixed point computation speed one fixed point computation may feel artificial one computation speed two computation easy see benefit especially phrase fixed point computation taking transfer function plus dominance information would avoid using one fast dominance algorithm pedagogically easier explain calculation close definition nice thing typechecking got accelerated good choice abstract domain flow analysis get accelerated good choice iteration order student experience manipulating representation would probably switch traditional ssa form main benefit teaching ability read existing literature highlevel optimization one thing worth spelling language like mlton ssa highlevel ssa representation switch data constructor field selector thing like part ssa ir make possible optimization thinking language level rather machine level furthermore since student decent ssa representation certainly use easy ssa optimization like copy propagation loopinvariant code motion unconditional rewrite ssa form easy implement get student comfortable manipulating ssa representation next step implement dead code elimination nice optimization also requires rerun liveness analysis open door understanding compilation pass may done repeatedly student done warmed big hero optimization course sparse conditional constant propagation working highlevel ir sparse conditional constant propagation ought yield even impressive result usual lot tuple creationpattern matching case constructor disappearing really satisfying way particular good example ought arise erasing none branch code using option monad safe division safediv int int option int test divisor nonzero dominating division lowering register allocation mentioned big optimization performed highlevel ssa form switch statement data constructor selector still present generate machine code turned lowerlevel operation define lowlevel ssa selection turned memory operation translate highlevel ir lowlevel ir ought done pretty naively highlevel operation turning lowlevel instruction sequence pretty direct way since course design many dataflow optimization could bring generic structure good test development smooth enough whether flow analysis sufficiently parameterized change ir lattice still get decent code reuse lean analysis clean lowlevel instruction sequence abstract code hard understand would skip lowlevel optimization mustdo analysis lowlevel representation rereun liveness analysis register allocation using ssaform register allocation algorithm hack let u avoid graph colouring b still getting good result c depends obviously result dataflow analysis also make register coalescing normally advanced topic surprisingly easy code generation pretty easy done register allocation map lowlevel ir operation load store jump dirtobvious way call return obvious stack manipulation foreign call boehm gc allocate object optimal technique know space nt use fixed point much offpiste relative course aim perspective surprising anyway thing choice focusing fixed point computation plus choice go ssaonly lay path surprisingly credible compiler writing note would thought definitely ambitious compiler first compiler think may ambitious obviously benefit lot working firstorder functional langage many way alternate notation ssa however look different ssa look like highlevel language mean student ought feel like accomplished something would willing try teaching way would want program compiler two style would either confirm compiler tractable would show compiler big teachable big probably change surface language support booleans integer type since value fit inside word could drop lowering pas altogether another thing like able plain old dataflow analysis parse dataflow analysis clever representation fact typechecking dataflow analysis clever iteration scheme optimizationcodegen however end cute confusionprone another alternative would drop type inference moving simply typed language drop ssa favour traditional kildallallen dataflow approach could still teach use acceleration structure computing defuse chain using eg liveness would bring parallel parsing flow analysis relative imaginary advanced compiler course missing highlevel optimization like inlining partial redundancy elimination fancy loop optimization well lowlevel thing like instruction scheduling also missing angle tackling controlflow analysis higherorder language featuring object closure since able go ssa straight away student good position learn introl sketch type structure type language program structure top level definition function declaration top level nested function anonymous lambdaexpressions allowed function declaration type scheme may polymorphic val foo forall tn def foo xn e expression expression basically usual thing variable x constant arithmetic unit tuples en data constructor foo e variable binding let p direct function call f en f toplevel function name match statement match e pn en note absence control structure like use tailrecursion note also explicit type argument call polymorphic function pattern pattern exist nested pattern order avoid deal pattern compilation variable x constructor pattern foo xn tuple pattern xn example function revers list val reverseacc forall list list list def reverseacc x acc match x nil acc con x x reverseacc x con x acc val reverse forall list list def reverse x reverseacc x nil function zip two list together val zip forall b list list b list b def zip b match nil nil con match b nil nil con b b con b zip b note lack nested pattern visavis ml
99,Lobsters,education,Education,XLBlocks: a Block-based Formula Editor for Spreadsheet Formulas,https://www.researchgate.net/publication/336187404_XLBlocks_a_Block-based_Formula_Editor_for_Spreadsheet_Formulas,xlblocks blockbased formula editor spreadsheet formula,,f herman pinzger v deursen detecting visualizinginterworksheet smell spreadsheet proceeding conference software engineering ieee press pp f herman pinzger deursen detecting code smell inspreadsheet formula proceeding international conference onsoftware maintenance icsm j cunha j p fernandes h ribeiro j saraiva towards catalogof spreadsheet smell computational science springer pp w barowy gochev e berger checkcell data debuggingfor spreadsheet acm sigplan notice vol pp r r panko r p halverson spreadsheet trial survey ofresearch spreadsheet risk proceeding hawaiiinternational conference system science vol jan pp r r panko know spreadsheet error journal oforganizational end user computing joeuc vol w price barnes comparing textual block interfacesin novice programming environment proceeding eleventhannual international conference international computing educationresearch acm pp resnick j maloney n rusk e eastmond k brennan millner e rosenbaum j silver b silverman kafai scratch programming commun acm vol pp nov online available http f blackwell c britton cox r green c gurr g kadoda kutar loomes c l nehaniv petre et al cognitivedimensions notation design tool cognitive technology ininternational conference cognitive technology springer pp javascript api ofﬁce accessed online available http docsmicrosoftcomenusofﬁcedevaddinsreferencejavascriptapifor ofﬁce n fraser ten thing learned blockly ieee blocksand beyond workshop block beyond oct pp f herman e murphyhill enron spreadsheet relatedemails dataset analysis proceeding internationalconference software engineeringvolume ieee press f herman e aivaloglou b jansen detecting problematiclookup function spreadsheet ieee symposium visuallanguages humancentric computing vlhcc oct e aivaloglou hoepelman f herman parsing excelformulas grammar application large datasets journalof software evolution process vol p online available http f herman analyzing visualizing spreadsheet phd dissertation phd thesis software engineering research group delft universityof technology netherlands bellingham holland p mulholland cognitive dimensionsanalysis interaction design algorithmic composition software kauhanen r biddle cognitive dimension game scriptingtool proceeding conference future play pp f turbak wolber p medlockwalton design namingfeatures app inventor ieee symposium visual language humancentric computing vlhcc ieee r abraham erwig kollmansberger e seifert visualspeciﬁcations correct spreadsheet visual language humancentric computing ieee symposium ieee pp f blackwell r green cognitive dimension questionnaireoptimised user ppig vol r g green petre usability analysis visual programmingenvironments cognitive dimension framework journal visuallanguages computing vol pp green blackwell cognitive dimension informationartefacts tutorial bcs hci conference vol pp weintrop u wilensky block block isthe question student perception blocksbased programming inproceedings international conference interaction designand child ser idc new york ny usa acm pp online available http bau j gray c kelleher j sheldon f turbak learnableprogramming block beyond corr vol online available http blockly toolbox guide accessed online available http developersgooglecomblocklyguidesconﬁgurewebtoolbox shadow block scratch backpack accessed online available http enscratchwikiinfowikibackpack burnett j w atwood r w djang j reichwein h j gottfried yang ﬁrstorder visual language explore theboundaries spreadsheet paradigm journal functional programming vol pp r c roast developing visualisation spreadsheetformulae towards increasing accessibility science technology engineering math subject workshop mathematical userinterfaces sarkar gordon p jones n toronto calculation view multiplerepresentation editing spreadsheet ieee symposium visual language humancentric computing vlhcc oct pp erwig r abraham cooperstein kollmansberger automatic generation maintenance correct spreadsheet proceeding international conference software engineeringacm pp g engels erwig classsheets automatic generation spreadsheet application objectoriented speciﬁcations proceedingsof ieeeacm international conference automated softwareengineering acm pp j cunha j mendes j saraiva j p fernandes embeddingand evolution spreadsheet model spreadsheet system symposium visual language humancentric computing vlhcc sep pp e p glinert towards second generation interactive graphical programming environment proceeding ieee workshop onvisuallanguage ieee c press silver spring md pp conway r pausch r gossweiler burnette alice arapid prototyping system building virtual environment chiconference companion citeseer pp weintrop afzal j salac p francis b li c shepherd franklin evaluating coblox comparative study roboticsprogramming environment adult novice proceeding chi conference human factor computing system serchi new york ny usa acm pp online available http r holwerda f herman usability analysis blocksbased programming editor using cognitive dimension ieee symposiumon visual language humancentric computing vlhcc pp
101,Lobsters,education,Education,But what is the Fourier Transform? A visual introduction. (2018),https://www.youtube.com/watch?v=spUNpyF58BY,fourier transform visual introduction,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature fourier transform visual introduction youtube,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature fourier transform visual introduction youtube
102,Lobsters,education,Education,Manga Guide to Lisp,http://lambda.bugyo.tk/cdr/mwl/,manga guide lisp,,
103,Lobsters,education,Education,HackerRank Finds New Generation Gaps,https://www.i-programmer.info/news/99/13443.html,hackerrank find new generation gap,gain computer science credential bootcamp college make developer tick never early code according hackerrank information hackerrank developer skill report introducing hackerrank developer skill report related article bootcamp college choose make developer tick devskiller reveals universal demand javascript language learning insight hackerrank survey never early code according hackerrank programming language student learn hackerrank advance coding problem solving hackerrank reveals find programming talent weekly newsletter r feed twitter facebook linkedin comment comment iprogrammerinfo,hackerrank produced developer skill report calling largest survey kind ever released much digest one look starting finding education training point view devs hiring manager hackerrank started competition community programmer became hiring platform used coding challenge refers developer skill company help business attract evaluate hire best technical talent around world hackerrank size survey expand every year first survey published developer community numbered around million result software developer last year survey developer community grown million statistic report developer country responded survey introducing result cofounder ceo vivek ravisankar ceo writes hackerrank million developer community world developer using hackerrank level coding skill one question visit time time whether necessary university degree order career software development raised recently gain computer science credential hackerrank survey show hiring side marked difference company different size almost third developer small company employee obtained bachelor degree proportion drop company employee debate bootcamp college one considered previously hackerrank finding suggest hiring manager developer increasingly coming value bootcamps almost half hiring manager recruited bootcamp grad response question find bootcamp grad better equipped job hire third replied yes report state hiring manager hired bootcamp grad felt equally better equipped job hire according manager top reason bootcamp grad exceed ability learn new technology language quickly strong practical experience eager take new responsibility report also draw attention fact gen z likely previous generation utilize bootcamps nearly one six say leveraged bootcamps learn new skill overall bootcamps least popular way learn new skill among four age group popular aggregate developer website eg github online course among gen x youtube popular consistent finding reported survey codingame tube second popular route improving skill keeping scratch see make developer tick also marked agerelated finding regard first coding language learned report note age odds peer learned code c baby boomer gen age code basic find interesting say formal versus informal route learning code started code basic probably nt university pascal choice academia time fit finding first hackerrank developer skill survey reported never early code according hackerrank almost three quarter respondent selftaught neither python currently popular language teach computer science missing javascript popular language github included think pattern might different information hackerrank developer skill report introducing hackerrank developer skill report related article bootcamp college choose make developer tick devskiller reveals universal demand javascript language learning insight hackerrank survey never early code according hackerrank programming language student learn hackerrank advance coding problem solving hackerrank reveals find programming talent informed new article programmer sign weekly newsletter subscribe r feed follow u twitter facebook linkedin comment make comment view existing comment using disqus email comment comment iprogrammerinfo
104,Lobsters,education,Education,CS143: Compilers,https://web.stanford.edu/class/archive/cs/cs143/cs143.1128/,compiler,announcement final programming assignment window starter code third programming assignment practice exam window version window version window starter project written assignment programming assignment syntax analysis putty piazza written assignment window version flex window starter project visual c programming assignment lexical analysis course information handout htiek csstanfordedu,announcement august final programming assignment ir generation due saturday august note time change completed assignment full working compiler decaf nt cool logistical note aware late submission allowed assignment due date latest possible time assignment due please try get time good luck july window starter code available done window set go otherwise need follow setup instruction assignment proceeding ensure appropriate tool installed system july third programming assignment semantic analysis go today assignment broken two portion checkpoint assignment due monday july hard deadline main assignment due monday august assignment perform final set check necessary confirm input program indeed wellformed setting stage ir generation next assignment assignment substantially larger previous assignment sure start early good luck july midterm exam next wednesday july meet normal room thornton exam cover material including earley parsing emphasis scanning lr parsing exam openbook opennote opencomputer closednetwork meaning slide note available exam ca nt go googling answer practice exam available exam given last summer quarter structure content exam similar upcoming exam taking class remotely receive electronic copy exam around july start taking exam time july july return exam u later july include submission instruction along exam review session monday please feel free show question july window starter file second programming project available use need follow instruction download window version bison prompted installation directory use default directory instead install bison c program file due bug bison implementation cause work correctly placed directory whose name contains space download window version sed prompted installation directory use default directory instead install bison c program file download window starter project project set go encountering problem please let u know try fix development work window still need submit using existing submission framework hope help july second written assignment come due next wednesday july give chance explore strength weakness nuance parsing algorithm developed past week good luck july programming assignment syntax analysis go today due friday july assignment build parser decaf learn use bison tool process additionally get experience introducing new feature language add switch statement extension decaf releasing window version assignment later today confirmed starter project file work correctly good luck july several asked log stanford machine remotely need ssh client linux mac computer commandline ssh window need download ssh client putty securecrt available sunetid want connect either mythstanfordedu cornstanfordedu probably get warning rsa key matching perfectly fine hostnames forward free machine cluster good go trouble logging question always feel free contact u hope help july phone number office hour keith jinchao june please use piazza ask discus question june scheduled office hour following keith schwarz monday gate tuesday gate jinchao ye wednesday gate thursday gate june first written assignment come due next friday july problem set explores theoretical aspect scanning ask play around different algorithm explored lecture good luck june experiment quarter put together window starter file first programming assignment use starter file follow step download window version flex prompted installation directory please use default project file cooked assume binary folder download window starter project project set go encountering problem please let know try fix built project using visual c available free download development work window still need submit using existing submission framework get direction posted later hope help june programming assignment lexical analysis go today due monday july assignment asks build first piece decaf compiler learn flex tool master regular expression plenty time complete assignment would strongly suggest starting early good luck june welcome stanford course practical theoretical aspect compiler construction exciting quarter ahead u loaded wonderful combination concept coding make compiler cool class meet mondaywednesdayfriday thornton hope able join meantime feel free check course information handout learn class prerequisite course policy question meantime feel free email htiek csstanfordedu
105,Lobsters,education,Education,The Missing Semester of Your CS Education (MIT course),https://missing.csail.mit.edu/,missing semester c education mit course,missing semester c education motivation behind class schedule youtube class staff anish jon jose question missingsemester mitedu beyond mit translation pull request acknowledgement mit open learning mit aeroastro mit eec source code,missing semester c education class teach advanced topic within c operating system machine learning one critical subject rarely covered instead left student figure proficiency tool teach master commandline use powerful text editor use fancy feature version control system much student spend hundred hour using tool course education thousand career make sense make experience fluid frictionless possible mastering tool enables spend le time figuring bend tool also let solve problem would previously seem impossibly complex read motivation behind class schedule video recording lecture available youtube class staff class cotaught anish jon jose question email u missingsemester mitedu beyond mit also shared class beyond mit hope others may benefit resource find post discussion translation note external link community translation vetted created translation course note class submit pull request add list acknowledgement thank elaine mello jim cain mit open learning making possible u record lecture video anthony zolnik mit aeroastro av equipment brandi adam mit eec supporting class source code licensed cc byncsa see contribution translation guideline
106,Lobsters,education,Education,Stack Overflow: To Kill a Community,https://medium.com/swlh/to-kill-a-community-435b77610f66,stack overflow kill community,kill community building community hard thing destroy one moderator fired change code conduct many moderator resigned suspended activity apology issued senior executive stack overflow fired two community manager community always mattered much revenue site serving two master stack overflow decline active user declined purpose vision value rule trust authority transparency accountability introspection empathy trust placed moderator tip growing nurturing developer community katie penn twitch apple podcasts google podcast,kill communitybuilding community hard thing destroy iti reader growing reading mean book assigned english literature fair say avid reader cliff note book turned movie even better watched movie turned onto book never really understand person consider thing point view climb inside skin walk around quote one favorite book harper lee kill mockingbird book cherish humanity exploration injustice fundamental truth novel really understand others way think dohow many time walked away argument conflict wished gone differently often regret stem realization misread situation consider person perspective climb inside skina month back controversy erupted stack overflow may heard discussion happened meta site stack overflowthere plenty flare meta year majority visitor meta power user stack overflow stack exchange site tend vocal opinion sensitive perceived slight community handful community manager employed stack overflow generally good job maintaining semblance order discussionshowever time different month back one moderator fired moderator employee stack overflow dismissed moderator privilege violate company policy case firing came discussion change code conductthe reaction user swift many moderator resigned suspended activity protest hamfisted firing nonresponse stack overflow power user indignant lack due process felt company longer interested listening communitylittle progress made addressing concern community apology issued senior executive stack overflow though notably joel spolsky recently hired ceo company come agreement moderator fired despite minimal engagement thing seemed simmer downthen controversy erupted stack overflow fired two community manager josh heyer aka robert cartaino considered heart soul voice community keeping site hospitable decade face massive growth usage whim management change corporate strategyit mystery past three year stack overflow tumultuous overt push shift revenue model software sale despite shift community always mattered much revenue stance unassailable stack exchange symbiosis company community one exist either cooperation cooperation cooperation stack exchange know dead early day stack overflow community every respect shared purpose attracted likeminded people case professional developer site building library programming content standard contributing fairly strict order ensure canonical content addedthen traffic started change community became le expert exchanging content expert le experienced user came rely site help often little effort part posting poorly constructed question site serving two master good job serving either objectively critically say experience experienced user new user suboptimal however experience new user disproportionately suboptimal would say stack overflow decline towards obsolescence however number truly active user declined steadily since active user hover low thousand site see average million visitor every month google sends themthe house stack overflow longer make sense call stack overflow community smaller group expert shared purpose description apt better description would large valuable library programming content resignation dismissal though task maintaining library becomes much difficultthere several lesson learn stack overflow journey many community observed boiled ten aspect every community need foundation launch scale manage purpose community necessary value bringvision community need future direction drive momentumvalues community stand within group outsiderules code conduct clearly state norm acceptable behaviorstrust especially power user moderator workauthority decision making need entrusted moderatorstransparency open authentic thoughtful communication build trustaccountability creating sense ownership community membersintrospection reflect purpose vision value adjust neededempathy patience taking time walk another skinthe health community measured value trust placed moderator referred moderator exception handler past much engage user community large criticalwhat kill community fastest though absence empathy led many moderator resign inability leadership stack overflow understand address many challenge faced maintaining massive site empathy make break communitywith entailed building community may ask bother u led community seen immense value created bring people together community fuel drive open source movement site like stack overflow github many program like woman code love data helping many others navigate grow career techif team multiply potential single individual community unlocks exponential potentialwhat successful community either online person active member feel community succeed tip growing nurturing developer community katie penn twitchreally interesting talk importance authenticity aside actually participated salesforce million hackathon mentioned talk mobile app winwe recorded first heretechs podcast episode soon check past episode meantime apple podcasts google podcast wherever listen favorite podcasts please like subscribe
107,Lobsters,education,Education,Stop Teaching Code. Solicit Predictions Instead,https://blog.upperlinecode.com/stop-teaching-code-a1039983b39,stop teaching code solicit prediction instead,solicit prediction instead academic model vocabulary definition example create solve puzzle predictionfirst method puzzle create example vocabulary definition code prediction string concatenate variable bad example made good example conditionals use guided question example collection list index index range example object clarity matter simplicity let zoom takeaway,solicit prediction insteadphoto credit adityariesi serious stop gatekeeper introduction contentin theory make sense start core building block work way many c lesson function start today learning function function repeatable customizable block code defined keyword def know wound explaining difference reference type value type someone could possibly give hoot differenceif student already board c best already mined information youtube reddit worst endure lecture slog way student sure right class confirmed feared class welcome could already pas itto honest starting world theoretical inherently flawed david malan really great job bottomup approach code without accidentally screening prior knowledge harvard course whenever call student celebrates reasonable misconception beginner acknowledges glorify advanced student outofscope question alienate le experience odds david malan want propose inversion lesson structure let welcome beginner enthusiasm doeshere goesdon academic modelteachers feel need source truth say place humility perhaps worst offender school first year teaching english year older high school senior feel like enough age gap inherently demand respect tried command respect two way wore tie pretended know everythingto honest almost worked also meant lot lesson involved throwing slide definition poetic rhetorical device student write definition showing example disappointed identify another example device later lessonif break step looked something like identify academic vocabulary word student knowshow definition insist definition importantshow exampleask student create examplerepeat five total termsgive multiple choice quiz example ask student identify definition mapped onto example word ask solve puzzle grade despair privileged wellread student succeedthis approach invention following ass instructional model handed level best following rule workingthe problem model discipline especially coding classroom asks student memorize nuanced difference different situation without ever putting situation knowing nuanced difference helpfuldo predictionfirst methodso proposal simple take step reverse modelpresent puzzle student solve puzzle complicated involves composing piece intend teach dayask student create something based puzzleshow example thing look like ideally perfect formtake mental model student built paste academic vocabulary definition lastin word find way student sense deep within line code ever asking learn name individual part line codecode predictionswhen say puzzle mean skipping right let build bubble sort scratch day fact never student guess new element language syntax also refrain teaching new syntax new algorithm timewhat mean simply present finished program ask student program word student read understand code ask write ithere example second thing ever show student right print hello world right name tamara print hello name ask one simple question answer loud think happen run program answer think happen turn ask neighbor predictionliterally every student intuits program going greet tamaraand run program find print hellotamara without space also first round debugging high five around notice yet said word string concatenate variable enough context could dive student handle whichever critical day lesson truly cover asking student write program greets favorite fictional character historical figure classmate ready buildi recognize form coding class computer science classroom also think okay need know difference value reference type build cool project first day believe computer science allows build cool project much likely hungry theoretical complexity underlying itwhat driving cooking chemistry coding computer scienceyou need know python come string c order write silly version oregon trail need understand chemical change take place cooking egg order make omelettethat say underlying complexity programming omelettemaking interesting fact student ultimately want thought leader discipline formal definition best practice critically important goal pas enthusiasm computer science student detail right entry point disciplineand allow push food metaphor breaking point one ever applied culinary institute wanted chemist consuming great food fun want create great food student love granular academic detail way later seen powerful code let stop hourlong lecture ingredient start giving student playtime kitchenbad example made goodlet take quick look old coding standby really retire convert one great prediction challenge making small tweaksexample conditionalshere common example see academic teach conditionals languageif print greater else print greater greater know point example requires student see code least authentic form example asks student approach conditionals neveruseful case compare two literalsalso bonus badexample point text tutorial relies inherently meaningless print foo print bar outcome tell nothing programhow alternative age age print old enough buy ticket rrated film else print f old enough age year written right going print terminal anywhere screen know would say year could change program make statement display instead indentation appear program even outofnowhere addition string formatting student immediately figure happening use guided question probe syntax student already intuited indentation work course change indentation question curly brace end depending language teaching always worksafter going question brainstorm dozen age breakpoints driver permit license car rental double digit triple digit oldest person alive etc create task ask need additional help getting started give whatever ask even know exact name like elif watch go example collectionsthe bad example used collection absolute favorite print return using numerical indexing organize numerical information written example best inscrutable would return worst implies incorrect understanding oh return next number wayhere revision favoritefoods sushi tamale mofongo pizza chicken tikka print favoritefoods food print testing could print first food could print last food would favoritefoods cause problem first question particular loaded assumption purpose directing student focus number using key understanding purpose structuring list way haveafter single example student understand list index even index range error create task start declaring list also already got loop belt use starting point cli todolist generatorexample objectsobjects another one tempting start small possible order tackle pretty giant topic usually see class dog def init self pas def speak self print woof fido dog fidospeak love intention behind much better foo bar almost want give passbut complaint dog exist cyberspaceyou used nine line create call function write code exact thing three line without objectsat point dog created make class better user ty tdog aolcom pa word user sarai smendes hotmailcom kangaroo user osu gmailcom print first user email user weakest password care right answer forming opinion requires understanding object used last line print depending comfort level risktaking even sometimes get student correctly answer one anyone guess get string osu printed honest praise risktaking necessary make guess thought behind get student willing try thingsafter student bought purpose oop user name email age password instantly create lot different user sell importance knowing syntax used create class yup want see set important thing notice code simple actually pretty complex clear starting realize clarity matter simplicitylet zoom outhere thesis write good code example student infer purpose master contentso criterion use determine whether code example count good student know syntax yet still figure code code reasonably similar one might see wild later literal meaningful foos bar variable well named myarray question allow student focus important part happening example rely prior experience marketed one subset student eg video game digging example nearly everyone relate eg favorite food confident puzzle open lesson stand scrutiny five question know making inroad instead gatekeepingthe takeawaywrite readable code let student form understanding definition important computer science love definition never made anyone computer scientist
108,Lobsters,education,Education,Haskell For Beginners,https://argumatronic.com/posts/1970-01-01-beginners.html,haskell beginner,first minimal installers framework building haskell package commandline interface writing simple haskell reading simple haskell book get programming haskell type programming finding success failure haskell joy haskell type class monday morning haskell machine learning haskell data course haskell wikibook haskell problem nicta course gilmi fantastic thorough list resource well go example haskell phrasebook chris martin community contribution monad blog post tutorial type cheat sheet haskell cheat sheet function application definition haskell function take one argument type kind algebra calculus algebraic data type currying delicious page recursion understanding recursion understanding recursion part ii interactive demonstration general programming basic basecs series git read first explain much solid introduction rebasing awesome pixy song git problemsolving,people ask lot best get started programming functional programming haskell specifically tried put together list free resource help get started thing used feel confident pedagogically sound opinionated collection might perfectly suited need thing worked first ok looking haskellish blog already maybe need advice case unless already know recommend following minimal installers instruction worth noting word around haskell community refers two thing one framework building haskell package commandline interface building installing package neither technically essential good take time familiarize may sometimes hear talk around haskell community hell due recent improvement cabalinstall package expected thing past itching write haskell try writing simple haskell use along mate reading simple haskell great introduction great reviewreference basic haskell structure syntax book talking learning resource opinionated course writing haskell book read haskell book recognize judgment mine worked best totally new programmer lot math background recommended get programming haskell kurt bought book ago reading thing order picking chapter seemed interesting since already knew haskell bought worked recently started reading beginning order better evaluate really love book say assumes prior programming experience think assumes much especially earlier chapter although already experienced imperative programming well written explanation functional programming different might mean much put book top kurt put lot thought making exercise actually interesting explains introduction interested experiment let explore world impressive programming opinion show earlier chapter exercise perhaps later book especially fantastic exercise idea really learned lot haskell also helped fill missing knowledge programming per se free resource worth money manning frequently put sale type programming renzo carbonara book quite different anything ever read programming exercise opinion real drawback however writing style engaging clear approachable chapter lead naturally narrative style next make introduction even seemingly esoteric idea like parametricity seem natural written particularly people prior programming experience gracefully make haskell look like natural welcoming thing world well opinion someone programming experience learned haskell book also free worth money instead supporting big corporate publishing company supporting renzo directly given u many excellent open source haskell library doubly worth going also toot horn recommend finding success failure haskell book designed people programming experience might considered quite challenging people seriously never looked haskell however start conditional expression ifthenelse programmer probably familiar looking mean value haskell type move iteratively refactoring program validates password usernames along way introducing giving practical experience several important concept similar monograph coming joy haskell house exploring single topic depth pick choose topic interest fill right gap haskell knowledge interested access book written also network reference page topic covered haskell topic may recommend type class membership free resource monday morning haskell honestly one great unsung hero rarely hear people talking yet consult time swift solid introduction haskell also cover advanced topic machine learning haskell lovely troupe australian put together data course essentially newer complete better designed nicta course nicta course could fairly intimidating new programmer one retains ambitious challenging bit provides gradual slope structure best recommendation people either work mentor know haskell work reading working supplementary material however also video youtube correspond section course may enough motivated solo learner help already comfortable asking help irc like haskell wikibook wikibook free awesome really start basic work way nice progression exercise although want get exercise haskell problem nicta course among thing free wikibook uneven coverage topic covered enough part well written others follows wikibook however found many part clear reasonably easy follow gilmi put together fantastic thorough list resource well people programming experience looking something like haskell equivalent go example like try haskell phrasebook yes absolutely tooting horn although really written page rather pet project partner chris martin also accepts publishes community contribution monad lot people experience programming language think big thing need learn haskell monad try start suggestion beginning monad word really think try start learning haskell monad best learned usage experience forget word exists forget heard impossible haskell without monad blog post tutorial good good decided forego learning monad later blog post tutorial around web found helpful even working book getting lesson presented differently different wording example help try keep updated link work find one please let know absolutely biased opinionated list listed mean read found helpful point learning haskell sometimes still read post cover topic learn writer manages touch slightly different point bring fresh perspective something great fill cloud code tutorial post listed go beyond basic function application type may find understand half post first time read le sometimes like cool bookmark keep coming back learned able recognize much progress making seeing much understood time made type cheat sheet available reference understanding reading haskell datatype declaration type signature also haskell cheat sheet available several format nice touch may useful referencereview learning beginner nice around anyway function application definition one cover lot ton example help follow along haskell function take one argument well speaking terse tony morris bit terse think post make point clearly believe seem like pedantic point beginner haskell function argument understanding well important understanding partial application ubiquitous haskell code type kind lot example help understand point algebra calculus algebraic data type post good introduction talking algebraic data type get thing matter much programming haskell help understand haskellers talk type currying delicious wrote one like one go bit beyond reading basic type signature important understand currying get around understanding kind signature well help understand functors eventually help understand legendary monad haskell wiki like wikis uneven quality helpfulness page nice tip explanation common syntactic mistake nice concrete example recursion including base case also like two post john cook recursion understanding recursion understanding recursion part ii solving problem term smaller version going disagree somewhat cook apparently paul graham may bold say find helpful trace invocation recursive function couple time quite correct say understand going suddenly find almost never write recursive function think process anymore instead use map fold something recursion built well rate found understanding stepbystep process recursive function work helped understand function really especially fold interactive demonstration map fold general programming basic worked post basecs series plus always appreciate clever title yet loved one written post fundamental like understanding hexadecimal linked list database fun topic like parse tree traveling salesman problem git already know git need one thing like note clear long time git github use git mostly command line move repository github gitlab vice versa change address pushing pulling command change first time moved something github gitlab realize would true thought learn new thing every experienced programmer probably shaking head putting public prevent one person fear said highly encourage learn git command line place get started read first reassuring also link bottom two best source understanding underlying model know preference strongly urge familiarize underlying structure git model head help diagnose problem arise use search engine find command need hard search git command sure need idea underlying structure help know need explain much underlying model good quick starting point explains commonly used command serve good reference learning solid introduction rebasing regret called awesome pixy song anyway may want know rebasing may like rebasing something probably know point good explanation talk git problemsolving solving problem might never long time true beginner explains process solve problem using terminal command git actually teach useful valuable thing terminal command git use purpose first thing read learn git got basic looking learn one good p blog generally goldmine knowledge made accessible
109,Lobsters,education,Education,Turkey buys Delphi licenses for an estimated one million students,https://jonlennartaasenden.wordpress.com/2020/01/20/turkey-buys-delphi-licenses-for-an-estimated-one-million-students/,turkey buy delphi license estimated one million student,edit free charge tiobe index delphi developer community http like,edit title initial post could misinterpreted altered better reflect nature situation apology misunderstanding used initial text copied verbatim source translated turkish norwegian english case important nuance lost process ministry education turkey recently announced offering delphi free charge body student estimated one million student thus access delphi initiative getting objectpascal back university education important delphi product embarcadero company ensure next generation software developer given firm grasp fundamental programming concept concept represent buildingblocks software rest benefit student lifetime find incredibly sad java c somehow crept curriculum computer science around turn century result opportunistic move several generation developer graduated utterly oblivious fundamental concept concept memory management interrupt lowlevel optimization inline assembler blunt computer actually work beyond desktop formal education c pascal powerful enduring give student depth wingspan hard match object pascal language including freepascal oxygene various alternative compiler fluctuating tiobe index year tiobe index track use popularity language around world help company get indication invest despite people led believe delphi seen stable growth many year far widespread sceptic like admit ardent delphi developer excellent news help next generation student learn proper engineering ground also help retire unfounded myth surrounding language delphi particular sadly still circulation rumor stem hostile takeover elimination borland microsoft two decade ago way reflect reality delphi particular several phase evolution today en par companion language cc thrilled many young developer access modern relevant delphi edition delphi favorite teacher student everywhere return delphi academia sign age compromise losing grip thank hür akdülger informing delphi developer community truly monumental sign growth congratulation embarcadero turkish student source turkish http like like loading related
110,Lobsters,education,Education,Why I Keep a Research Blog,https://gregorygundersen.com/blog/2020/01/12/why-research-blog/,keep research blog,working confusion calibrating confidence learning intention flanking problem solving understanding writing slowly recalling quickly contributing community working confusion richard feynman calibrating confidence mindy guide killer confidence learning intention canonical correlation analysis factor analysis probabilistic canonical correlation analysis flanking problem laplace approximation gaussian process regression efficient implementation monte carlo method mixture model polya gamma augmentation ergodicity kernel trick random fourier feature kernel ridge regression solving understanding arthur ogus explained factor analysis woodbury matrix identity randomized singular value decomposition exactly scikitlearn research writing slowly recalling quickly svd kernel ridge regression proof svd interview exponential family bill reply,started taking writing seriously loose grasp many mathematical technical concept sure tackle openended problem maintaining research blog clarified thought improved approach research problem goal post explain found process valuable overview reason page jump working confusion calibrating confidence learning intention flanking problem solving understanding writing slowly recalling quickly contributing community working confusion quote richard feynman top landing page learned early difference knowing name something knowing something would phrase word word something mean understand true general hypothesize jargon especially susceptible kind misuse expert listener might infer mutual understanding exist feeling verbal common ground even gamed many u done exam hoping partial credit stitching together outline proof using right word essay hope professor connects dot u blogging blogging public act anyone read write blog post imagine supervisor respected colleague future employer reading explanation imagined reader force ask honestly understand writing know post done write stop significant question imaginary audience stop raising hand end result writing force acknowledge work confusion mind writing style scientific paper inadvertently contributes problem jargon abuse designed highlight convey novelty concept main contribution may cited taken given novice might mistake writing style scientist actually think speak summarizing paper word restructures content focus learning rather novelty calibrating confidence difficult know know lot learn intelligencesignaling environment side effect written detailed technical note calibrate confidence topic understand something sure explain clearly understand something sense difficult understand prerequisite knowledge missing idea reminds mindy guide killer confidence khaling writes people talk confidence without ever bringing hard work understand could selfconfidence work childhood college even early graduate school people many structure force work homework test admission essay qualifying exam enter research life earnest structure mostly disappear writing thing best way found ensure actually work furthermore writing given template feel confident whenever need work first year graduate school botched presenting paper group meeting passively read paper underlining key sentence writing note question margin result sure knew knew clear others blogging taught read paper explaining something active form understanding summarize main contribution word write notation problem setup define term rederive main equation result process mimic act presenting great practice learning intention essay principle effective research michael nielsen writes opinion reason people fail great research willing pay price selfdevelopment say new field open combine field x field researcher field flock new field experience virtually none researcher either field systematically learn field sort depth put effort often achieve spectacular result thought lot quote throughout phd perhaps experience selftaught programmer first started teaching program felt imagination creative focused finding syntax bug reasoning program structure however proficiency came creativity programming became le important building started phd hypothesized rule would apply able think creatively machine learning built requisite knowledge base programming practice writing program practice research writing detailed expository technical note equivalent side project force intentionally systematically build knowledge base understanding idea working proof implementing model watershed moment first machinelearning research project came decided systematically work background material blogged canonical correlation analysis factor analysis finally probabilistic canonical correlation analysis understanding confidence material changed profoundly became intellectually committed way impossible without first understanding problem importance selfdevelopment continues even one reached proficiency famous aphorism hammer everything look like ask person task quickly resort tool know similarly publication deadline stressed lagging project trying hard think fall back familiar thought pattern embarrassing period phd hyperparameter tune neural network know else try reason find brainstorming typically useless pressure mind like cart wellworn path find old rut writing break cycle requires active participation flanking problem hard problem intimidating often know start worried waste time writing blog post larger context problem way flanking head faking actually lower psychological stake rather directly attacking problem producing something know valuable either way let give example currently working latent variable model neuron spiking data complex bayesian inference procedure started project background bayesian method immediately start working furthermore started project march already committed summer internship knew would hard important keep momentum summer decided flank project writing series blog post topic knew important project generally useful laplace approximation gaussian process regression efficient implementation monte carlo method mixture model polya gamma augmentation post written spring summer allowed start thinking preparing problem indirectly project got underway fall wrote blog post needed example tried hamiltonian monte carlo hmc inference wrote ergodicity mh case blogged mh rather hmc knew former lead latter important foundational knowledge mitigating risk hmc working teaching something confident know anyway currently exploring using random fourier feature scale method approached new material writing kernel trick random fourier feature kernel ridge regression research often amount longterm gamble junior researcher try mitigate risk exposure working small promising problem guidance advisor senior lab member however writing way mitigating risk current project fail directed intentional process systematically attacking background material prepared well next problem solving understanding mathematician arthur ogus explained alexandre approach problem solving saying see working almost obvious ready work yet find quote comforting suggests good least one famous come mind ex niliho rather good idea come deeply understanding problem solution seems obvious experience writing gotten closer anything else original research thought feel obvious far thought always decade late unfeasible happy let give example written factor analysis efficient implementation factor analysis using woodbury matrix identity randomized singular value decomposition svd wrote randomized svd thought matrix inversion factor analysis implemented using randomized svd inverting loading probabilistic construct randomized algorithm seems brilliant thought little plus b thought would without real understanding method well turn exactly scikitlearn thinking topic shaped researcher talk research important thing big idea line attack line attack mean understanding problem talk research richard hamming said three outstanding problem physic certain sense never worked bell work time travel teleportation antigravity important problem attack consequence make problem important reasonable attack understanding problem deeply increase probability work important attackable problem writing slowly recalling quickly think writingaslearning database indexing database index data structure efficiently keep track row table located insert database via index slower simply adding row bottom table database must bookkeeping however querying database extremely efficient example organizing book alphabetically write make tradeoff appreciate learning writing take longer learning without writing often order magnitude feel acutely implementing someone method creating figure blog feel like research directly however consistently feel tradeoff worth suspect change throughout career example post svd took many many hour produce however svd foundational ubiquitous mathematical idea mind grasp powerful chunk understanding rather vague symbol understand determinant matrix rank principal component analysis many idea better understand svd glad took time write post furthermore permanent easily recoverable store personalized knowledge probably consult blog least day vanity typically top mental stack first post listed landing page terry tao good blog post called example benefit recording thing latest blog post kernel ridge regression equation ridge regression matrix inversion mathbf x top mathbf x lambda mathbf learned ridge regression used combat multicollinearity linear dependency predictor column mathbf x could see matrix inversion classical linear regression unstable lowrank mathbf x without adding something diagonal intuition already proven text rank mathbf x text rank mathbf x top mathbf x proof svd importantly forgotten relationship true felt correct knew exactly look confirm guess writing process made realize much understanding therefore research simply walking wellworn path richard schwartz talked interview maybe one thing appreciate state human knowledge full hole young impression almost everything known feeling almost everything unknown mathematics thin channel people gone along like ant following along trail find long thin trail thing thing undeveloped sense openness appreciate writing like ant simply following someone trail example wrote exponential family treading path mathematical statistic roughly hundred year old even exponential family knowledge carved infinite number distribution may aspire detail average explanation end result typically still reproduction production knowledge think okay mathoverflow user asked average mathematician contribute mathematics love bill reply particular paragraph short mathematics exists living community mathematician spread understanding breath life idea old new real satisfaction mathematics learning others sharing others u clear understanding thing murky concept many way run idea need clarification question first person ever set foot square meter land really secondary revolutionary change matter revolution selfsustaining depend heavily community mathematician reforging existing connection walking wellworn path contribution research community mean keeping research blog useful oneself perhaps time experience occasionally blaze new trail
111,Lobsters,education,Education,Explicit Direct Instruction in Programming Education,https://resources.rstudio.com/rstudio-conf-2019/opening-keynote-day2,explicit direct instruction programming education,explicit direct instruction programming education,explicit direct instruction programming education education always debate teach one debate center around role teacher role minimal allowing student find
112,Lobsters,education,Education,Educating the next generation of the P2P community,https://accessp2p.xyz,educating next generation community,educating next generation peertopeer community open learning program exploring peertopeer space regardless level technical skill provide comprehensive introduction foundation technology process program ten lecture curriculum resource,educating next generation peertopeer open learning program exploring peertopeer space regardless level technical skill provide comprehensive introduction foundation technology processthe programduring month november program brought together cohort student weekly lecture local expert cost student bitcoin scuttlebutt governance smart contract program highlighted spectrum theory concept technology total ten lecture hosted local project company gave cohort opportunity grow network within berlin communitythe curriculumview lecture description video material herewho participant programming knowledge whether selftaught otherwise traditional developer given varying level technical skill different background lecturer designed material intention accessible anybody interested diving technology check resource page lecture material related content
113,Lobsters,education,Education,Professional Software Engineering Topics And Practices,https://venam.nixers.net/blog/programming/2020/01/09/se-practices.html,professional software engineering topic practice,ask question searching online role team reading writing documentation research paper debugging logging working requirement programming paradigm design pattern modularity best practice review test unit storage technology configuration mechanism package manager content versioning system methodology continuous development pipeline deployment fast release cycle maintenance conclusion email irc,field sec getting press graduate flooding market yet curriculum given many university still seems barren come professionalism forcing newcomer learn via unpolished street cred leading mysticism skill required also leading lack discipline duty craftsmanship would tempted assume graduate would instantly digitallyweb literate professional field however everincreasing volume knowledge stacking loss left solution slow painful process passing flame via mentorship deliberate practice fair university may place type learning mind review topic practice important know write seems dull one dare express ask question easy underestimate value asking question properly class setting eager say thing stupid quite software world though people asserting asking stupid question one asking legit one questioning turn introspective activity honed year asking question expected decent amount research done formulated without ambiguity misinterpretation confidence basically knowing exactly want ask mean searching web checking online manual reading faq frequently asked question diagnosing experimenting even reading source code possible lot common question answered least question precise concise unsurprisingly enough answer vast majority question rest answered alone try luck ask appropriate person finding quest unless sitting close could forum stack overflow irc channel mailing list etc medium discussion found question formulated way respect easy reply accurate title requested grammatical error overly verbose precise informative posting question may may reply lot case go back research many foresee complexity question ask lack expert topic prefer ask stick research sometimes later posting finding blog post article case reply misinterpretation question wording choice might inadequate reformulation done someone reply rtfm read fucking manual anything rude worry internet take personal searching online lot question get asked researched enough searching methodology grasped even though people use search engine daily everyone know use come advanced subject indeed like tool skill set learn first thing realize search engine omnipotent read mind always give easiest popular result query given sum constant battle mean full sentence interpreted part preset sentence like weather may work search engine like google exception rather norm come searching online anything else search engine usually split term space search term individually return link match many possible prioritizing popularity sometimes respecting order word given sometimes cope let search engine know want speak language example putting word inside quote tell search engine absolutely want result prepending word minus tell omit result contain using keywords following domain force search engine result domain way calibrate search criterion theory method find want however know want unaware exact wording use want match exists web want buried thousand popular clickbait article searching based something forgot trying remember thus enter iterative process search engine ask something check result change query get different result based got repeat everything find looking iterative search surprisingly something lot people learn comfortable mandatory tech world additionally sort procedure lead discovery interesting topic nonetheless requires patience hunch knowledge called role team lot early entrant field dream becoming medium fetishised lonewolf developer superstar fortunately away truth professional context getting entranced condescending feeling skill counterproductive contrary teamwork understanding humbleness drive productivity forward project bigger certain size dynamic better managed group endeavour well functioning team member expected handle responsibility professionalism respect professionalism furthermore task properly delegated suitable person team simultaneously navigating boundary role contemporary workplace everyone leader role dependable expected move forward without commanded micromanaged every step although freelancing might appealing requires maturity enveloping usual role found team take look role exist stakeholder generically meaning anyone stake project engineering manager responsible delegating task people managing people product manager know everything project project software project lead implement project help team know software architect design document analysis requirement help team keep track solution stand test time software engineer generic term someone work software networking infrastructure responsible physical infrastructure usually related network configuration operation team role slowly getting deprecated tasked going premise remotely installing packaging configuring monitoring supporting product system live database administration keeper data site reliability engineer sort upgrade operation team addition focus scalable reliable system qa quality assurance ensures software quality standard going live making pas test sometimes pipeline also include following live metric graphic uiux designer charge graphic image people use interface look like back forth behaviour testing also interested live metric regarding frontend engineer engineer implement frontfacing graphical part application backend engineer engineer implement business rule application frontfacing part relies devops mix software engineer operation engineer usually environment continuous integration place senior engineer someone worked long enough project company certain technology know head toe consultant expert hired company give input guidance project fullstack engineer engineer burdened frontend backend operation database management reading writing documentation contrary popular belief programming mindlessly clickclacking keyboard clocking job day matter big chunk time allocated reading understanding requirement researching planning tackle problem consequently getting comfy technical document must uncommon spectator shocked look new developer face open big documentation page first time sight gargantuan document generation hate reading decreasing attention span appears like monster impossible tame however approach wrong mentality accustomed memorize interrogated anything set eye upon instead documentation taken treasure hunt finding extracting translating value workable solution problem similar read research paper documentation read generic specific focusing unit understanding could read usually also mention different type documentation different aim tutorial howto explanation reference guide though latter generally call documentation recognize high value documentation working third party systemslibraries transpire value practice newcomer already familiar inline comment within code introduced writing documentation using format markdown use diagramming tool illustrate thing debugging junior engineer graduate surely heard debugging many actually used debugger thought debugging software scale debugging arduous process requires extreme patience calmness two zenlike characteristic acquired strenuous hour spent debugging executed via simple printing via logging distributed via tracing via debugging tool let u step code debugging enabled configuration debug release compiler flag test pipeline debugging session going take sizable amount time facilitated way logging analogous debugging logging something appreciate project reach certain scale rest article often awareness space junior developer logging art everyone critic done level ranging info error specific format stored different place file db rotation scheme integrated software delegated another like operating system distributed centralized crucial part consider context logging keeping context alive able track needed working requirement unlike university academic institution workplace rarely give instruction implement solution likely share abstract requirement user story burden developer massage way around requirement create roadmap estimation expertise compact requirement design openly discussed defended coworkers meeting needed although enterprise architect could limit choice technology even one dislike still flexibility use depending situation agreed upon management choosing method implementation done based either experiencebased analogy backoftheenvelope thought experiment simulation prototype experiment instrumentation implementation weighted according strength weakness measurable indeed always tradeoff socalled availability interoperability modifiability performance security testability usability etc spite avoid analysis paralysis work project still avoiding technical debt programming paradigm programmer comprehend difference three main programming abstraction paradigm procedural programming objectoriented programming functional programming additionally knowledge different language advantage disadvantage plus interpreted justintime compiling compiled language also highlevel paradigm interesting add toolbox aop aspect oriented programming dynamic programming eventdriven programming natural language programming parallel programming metaprogramming microsystems etc many design pattern modularity previous section lead one actualizing higher paradigm common pattern design pattern collected grouped year emerged similarly people facing similar issue learning take advantage anticipating change minimizing complexity must professional developer least dive design pattern like gof feel touch best practice review programming language programming environment programming culture company set standard best agreed practice craftsman standard golden rule creates cohesion people syntax formatting style used within project file structure chooses rule depends applied could consortium could enterprise architect could senior engineer could project lead company checking compliance best practice normally happens code review session peer make sure code committed standard list common thing checked code correct follows requirement achieves result stackeholders desire code easy read easy understand code follows syntax styling code test unit code us strong type code much repetition dry code follows defensive programming design choice good design follows solid principle lack documentation test unit another way enforce standard enforce programmatically test unit test unit composed battery test verifiability input output oracle respect architectural requirement interoperability check speed monitoring code testable also manageable type test include static test endtoend test blackwhite box test integration test regression test acceptance test etc storage technology business nothing without data extension data storage therefore making right decision technology use crucial data migration expensive risky make decision need basic understanding general characteristic storage map requirement storing temporary information long term one caching suffice going atomicity consistency isolation durability acid basic availability soft state eventual consistency base going use object relational model orm abstract access storage going write query going redundancy storage syncing going done choosing distributed data storage going sql nosql something else configuration mechanism rare encounter software flexible allow user configure certain ease textual configuration format required professional software engineer glance obvious dealing yaml xml json custom domain specific language dsl everyone develops preference package manager since people sharing code amongst convenience purpose initially done manually ftp email nowadays share library package manager language using operating system global package manager seeking dependency managing choosing always straight forward want come documentation open source maintained maintained future question asked committing third party library content versioning system team work codebase without conflict know time content versioning system resolve well theory reality sufficient also need follow development methodology avoid messiness git svn used cv someone acquainted soon willingly someone encountered meaning soon make le painful shared code compartmentalized separate task committed versioning system meaningful traceable history methodology cv share code rest conversation assignment task bug report workflow done collaboration workflow tool github gitlab bitbucket fogbuzz jira trello etc different usage common collaboration communication transparency component development methodology software development methodology management technique split work distinct phase also called software development lifecycle sdlc track software lifefeaturesreleases trendy talk methodology due fact central proper building rhythm software part daily routine engineer agile methodology scrum xp lean getting traction fast pace superseding bad reputation waterfall methodology much tempting give advice newcomer regarding topic nothing beat handson experience making one judgement particular methodology watching video argument give idea situation continuous development pipeline deployment fast release cycle point time software need go live need shipped customer accomplish could delegate qa team operation team everything order manual pipeline reach production call continuous development automate much possible deployment phase packaging automatically code checkout testing automatically releasing online automatically jenkins spinnaker travis ci gitlab ci popular name continuous integration tool maintenance last least enters maintenance software maintenance split two part one monitoring health running system upgrading legacy system meaning regarded maintenance monitoring importance logging instrumentation reporting come play requirement bug discovered production need way record happens application keep monitoring anomaly reliable system would send alarm response team case failure upgrading working legacy code instinctive thing may feel simple surface may turn complex keep wondering complexity emanates keep sanity remember fence principle maybe reason complexity take u back first section asking question may need ask senior clarification able understand whole system may look impressive outside somehow required complexity currently perhaps question remain unanswered matter reforming thing distinct deforming one plain simple principle principle probably called paradox exists case certain institution law let u say sake simplicity fence gate erected across road modern type reformer go gaily say see use let u clear intelligent type reformer well answer see use certainly let clear away go away think come back tell see use may allow destroy conclusion much content written still diving topic aware presented idyllic scenario might applicable current job however remove anything weight ability newcomer learn deliberately practice time hope wild act miniguide new software engineer want get started professional life feel like university online course enough fantastic career topic attribution unknown author image given book although might author text entry josef public domain want depth discussion always available email irc discus argue like dislike new idea consider opinion etc nt feel like discussion intimidated email simply say something small comment section andor share friend
114,Lobsters,education,Education,How I teach database design,https://lemire.me/blog/2020/01/08/how-i-teach-database-design/,teach database design,waterfall model reading desirable semantics functional dependency database incomplete information functional dependency null marker call arm revisiting database design,software run top database database organized logically schema formal description entity user attribute user name relationship typical textbook database design come era possible believe knew start project data would like could believe would change could certainly believe design document would updated maintained would compulsory reading computer folk company decade building accounting application would query database using sql data accessed database database interface set centralized database running single computer would serve entire operation everyone would know field name meant exactly table user would merger company corporate pivot taking new direction could believe conceptual logical principle independent physical implementation principle would need ever duplicate data performance quite often system built today ever built way organize function organization term service service communicate people work directly service need know data organized even organization publicly documented provide interface need end rely database engine alone ensure data remains usable data follows strict schema excuse failure user want know data layout want know organizing data probably get wrong today next week next year life fast changing knowledge always incomplete waterfall model naive point actively harmful want isolate data layout use much textbook core principle database design often duplicate data logic sound duplicate data point value may go sync see programmer duplicating data code know lack experience however also case deliberate duplication essential sometimes need duplication performance performance matter sometimes need duplication avoid unwieldy complexity managing complexity matter need duplication information system run one processor want store everything one giant system duplication everything consistent thinking scale scale respect complexity performance even achieve consistency real world data receiving maintaining pristine fact full error unknown marketing think john smith phone number something whereas accounting think something else know maybe right maybe wrong worse think unknown unknown nothing database regarded without suspicion minute incomplete uncertain data dream enforcing relationship entity may become naive mean anything go need worry database design quite opposite ought agonizing every decision making sure never locking corner duplication multiple system inconsistency need deal single strategy work case teach database design ask student critical textbook material expose much possible realworld example thing perfectly neat begin looking hood favorite opensource project reading desirable semantics functional dependency database incomplete information fundamenta informaticae functional dependency null marker computer journal call arm revisiting database design sigmod record
115,Lobsters,education,Education,How classroom technology is holding students back,https://www.technologyreview.com/s/614893/classroom-technology-holding-students-back-edtech-kids-education/,classroom technology holding student back,,found boy staring computer screen showing number line question number come listened instruction tried getting error message time thinking problem size number asked number come four five guessed dawned understand word explained immediately clicked returned kevin see whether able combine found drawing bright pink line ipad gizmo numerous distracting capability answer question asked want sighed play game school kevin classmate attend located poor neighborhood washington dc pride onetoone increasingly popular practice giving child digital device case ipad technology continues transform improve world school website say believe lowincome student left behind school across country jumped education technology bandwagon recent year encouragement technophile philanthropist like bill gate mark zuckerberg older education reform strategy like school choice attempt improve teacher quality failed bear fruit educator pinned hope idea instructional software online tutorial game help narrow massive testscore gap student top bottom socioeconomic scale recent gallup report found student united state third grade say use digital learning tool school least day weekgallup also found nearuniversal enthusiasm technology part educator among administrator principal fully somewhat support increased use digital learning tool school almost much support coming teacher clear fervor based evidence asked lot information available effectiveness digital tool used administrator said yes along quarter teacher principal another quarter teacher said little informationin fact evidence equivocal best study found positive effect least moderate amount computer use especially math much data show negative impact range grade level study million high school student member country organisation economic cooperation development oecd found used computer heavily school lot worse learning outcome even accounting social background student demographic according study college student u used laptop digital device class worse exam eighth grader took algebra online much worse took course person fourth grader used tablet almost class average reading score point lower never used differential equivalent entire grade level state gap significantly largera report national education policy center university colorado personalized loosely defined term largely synonymous education sweeping condemnation found questionable educational assumption embedded influential program selfinterested advocacy technology industry serious threat student privacy lack research support judging evidence vulnerable student harmed heavy dose best helped oecd study found technology little help bridging skill divide advantaged disadvantaged student united state test score gap student use technology frequently largest among student lowincome family similar effect found flipped course student watch lecture home via technology use class time discussion problemsolving flipped college math class resulted shortterm gain white student male student already strong math others saw benefit result performance gap became wider college student used laptop digital device class worse exam eighth grader took algebra online much worse took course person even troubling evidence vulnerable student spending time digital device privileged counterpart high school student questionable online credit recovery course disproportionately likely poor member minority group virtual charter offer online class generally produce dismal enroll struggling student national charter network called rocketship public school serf lowincome community relies heavily technology even student kindergarten spending minute day front screen one study found school serving relatively affluent population fourth grader never used computer compared poorer area emily haasch danger relying technology also particularly pronounced literacy education early grade level unfortunately judge observation classroom highpoverty school like one kevin attends exactly digital device commonly used bulk elementary school hour spent reading rest math especially school standardized reading math score low subject like social study science largely disappeared curriculum standard class format student rotate center working independently reading math skill teacher work small group classroom least one center always involves working digital device device unhelpful learning various explanation offered student read text screen shown absorb le information read paper another frequently cited culprit distraction device college student checking instagram first grader like kevin drawing bright pink line finger deeper reasonsone motivation kevin asked combine teacher rather ipad greater chance would interested trying different learning person relationship person cognitive psychologist daniel willingham said make care little bit think make little bit willing put forth effort least one education entrepreneur agrees larry berger ceo amplify company develops digitally enhanced curriculum math science literacy kindergarten eighth grade berger observes technology credible job imparting information good demonstrating social usefulness knowledge say getting knowledge social context kid teacher ideally teacher want like someday may problem school use relatively modest amount technology could even bigger one school like rocketship network one two minimally trained supervisor oversee many student learning lab time school achieved impressive test result especially math npr investigation found repressive environment many rocketship school according parent teacher harsh discipline used keep student taskin addition sapping motivation technology drain classroom communal aspect learning vision ed tech advocate child sit front screen delivers lesson tailored individual ability level interest often subject chosen student vital part education different kid bouncing idea saw action regular basis another largely technologyfree elementary classroom followed school year guidance teacher second lowincome family including many speak english engaged debate topic like whether alexander great ambitious nature inspiration flaw allowing student choose topic learn also lead serious gap knowledge child know much even one personalizedlearning skeptic observed allowed choose content elementary school would become expert princess dog difficulty using technology meet individual student actual evidenced kevin failure understand word combine classmate difficulty word child supposed take pretests designed steer software provides right degree challenge kid sometimes forget take test even program make faulty assumption understand first grade classroom another school observed group student using reading comprehension program one girl screen displayed seemingly random collection fact banana including banana come india followed multiplechoice question unable read word india girl asked classmate banana come tree classmate one possible answersbut even technology could calibrated meet student truly foster communal another fundamental problem technology primarily used delivery system maybe deliver instruction better human circumstance material delivering flawed inadequate presented illogical order provide much benefitthe way berger put thing want kid learn map used create software mean told area clearly defined set concept cognitively determined sequence learned math said developmental stage brain ready think partwhole try teach fraction happened work foundational reading skill similar first kid need learn match letter sound learn blend sound together sounding word pretty much everything else berger say really know taught orderwhat technology often used especially elementary school practice reading comprehension skill even classroom devoid technology child waste hour every week supposedly learning find main idea make inference content one day zebra event considered relatively unimportant teacher choose book read aloud based well lend demonstrating skill week student practice book easy enough read independently computer tablet used program take contentagnostic skillsfocused approach one classroom saw first grader front screen displayed choice topic including diwali fast food crayon barack obama turned student neglected take pretest read text cognitive scientist long known important factor reading comprehension generally applicable skill much background knowledge vocabulary reader relating topic study done late researcher divided seventh eighth grader two group depending well scored standardized reading comprehension test much knew baseball gave passage baseball game researcher tested kid comprehension found knew lot baseball well regardless scored reading poor reader knew lot baseball significantly better good reader study replicated number context provides compelling evidence knowledge topic important comprehension skill mean way build reading comprehension adopt curriculum kid spending least couple week particular topic build knowledge vocabulary go especially true child le educated family like kevin classmate unlikely pick much sophisticated knowledge may lack even basic vocabulary like
116,Lobsters,education,Education,The 100 Worst Ed-Tech Debacles of the Decade,http://hackeducation.com/2019/12/31/what-a-shitshow,worst edtech debacle decade,biggest flop fails dead dream decade tech worst edtech debacle decade pigeon horizon report new medium consortium abruptly announced list prediction nearfuture education technology prediction consistently wrong purchased promise free according oremus rich people kid use tech story silicon valley elite steve job let kid ipads bill gate let kid cellphone wildly popular story refuse allow one article technology get used anya kamenetez described article techfree rich kid tech regret industry textbook publisher v boundless jeopardize piracy boundless settled lawsuit archived ning announced outcry teacher school lifestyle site glam medium shut door cyndx roaming autodidact intersectionality critical engagement internet online grade portal according one story audited old data portal charge parent money printing pronounced launched noted wild promise necessarily great environment flipped classroom column pointing earlier work real revolution oped alfie kohn long argued unizin wtf unizin ban laptop opeds critic flawed reductive outofdate critic clickers ten million crash quiz bundling textbook tuition reported student surprise thrilled million amazon inspire remove several piece content reported beta amazon ignite badge unveiled million competition mozilla ims global learning consortium mozilla said new credential future full badge expertise teacher influencer hustle reported brand ambassadorship century classroom may remind starbucks edtech startup accelerator imagine combinator imagine acquired clearly struggled run program worth time effort shark tank school including packback dole funding project people color white woman grossly underrepresented end library story software seems support end library frequently visited dramatic drop public funding public library started eliminating fine publisher sought blaming library declining sale long commitment patron privacy respect user right interactive whiteboards foxconn bought smart technology netdragon bought promethean death interactive whiteboard wildly exaggerated viral school video student recorded fellow student student recorded teacher recorded school resource officer elaborate lipsync video recorded everyone sousveillance weaponized encourage student film professor lecture altius education stop enrolling student venturebacked firm concern according old guard shut experiment education fraudulent behavior forprofit university halt describes fake online university sting fairly long ran one federal government ran fake online university arrested created homeland security many online signal claimed student told draper university hero course signal pushback suggesting reverse causality michael feldstein argued essa told channel one unsinkable chris whittle may channel one aired last broadcast january year gushing profile whittle fall kno founder mike arrington announced kno kno talk almost million penny dollar discontinued deliverology mckinsey company david kernohan excellent keynote pearson parcc spy student posted screenshot blog sigh fear chatbot instructor gushed university press release stated ethical issue consent matter recently reported uber education told told brookings institution told service demand fueled exploitation innovation struggle make end meet market teacher directly galvanic skin response bracelet grant award read ravitch cautioned funding experiment ravitch wrote blog hellbent unbundling first published framework unbundling education reworking several time american enterprise institute argued instructure page death embargo upstart ipo surpassed blackboard u market share sell instructure private equity firm thoma bravo facing resistance three large investor uc berkeley deletes online lecture announced decade still ada compliant bad look slave tetri slave tetri designed teacher apple itextbooks five time cost print dismantling textbook industry bureaucracy alexa school asked lodged complaint amazon also sued creepy dorm room offering student money connectedu filed bankruptcy million requested reported noted told mine sponsored content product catalog conference concierge service announced would acquired iste edmodo million marketplace running ad ad ecigarettes tony wan asked million million account death aaron swartz charged committed suicide overzealous prosecution aaron swartz clayton christensen prediction nope wrong told investor mark suster doubled phil hill run number gospel innovation deborah quazzo chicago board education investigation newspaper also found chicago teacher union called quazzo held seat lucky turnitin cheating detection racket million billion put essay mill touting rather trusting student keystroke locking facial recognition video monitoring brain training million open letter little evidence study agreed montessori sal khan lab school max ventilla altschool one article google reader google shut reader get news social medium ted talk let use video reinvent education would redesign higher education experiment stanford never believe happened next nicholas negroponte prediction reinscribe noted back virtual reality report report acquired push arkansas positive benefit going field trip device strapped face empathy machine good grief math emporium adopted according research also found broader mathematical analytical reasoning mixed best one laptop per child jon markoff observed adi robertson wrote one biggest flop decade negroponte announced negroponte boasted evidence farewell post read yik yak closed door harass others chronicled blocked app platform hate speech hour code industrybacked learntocode group high profile testimonial number line code learn basic coding disney moana insidious lobbying effort brainwave headband wrote different headset maker featured school compulsory fitness tracker arbitrary fitness goal sure school spokesperson told one opportunity nike pointed wegrow wework unmitigated disaster closed door last year promised laid dozen coding bootcamp employee conscious entrepreneurial school unicorn youtube new educational tv told prefer narrative video reinvent education back conspiracy theory misinformation sociologist zeynep tufekci put stranger dangerous datadriven juul pretty popular kid antivaping curriculum growing number illness death plagiarized social emotional learning software brainwave monitoring headset sel powerful advocate powerful place macarthur foundation genius university pennsylvania psychology professor angela duckworth whole child personalized learning started surveying social emotional skill cyber incident map map cybersecurity resource center ibm watson beat two human player boasted partnership cognitive learning partnership scholastic one edmodo regularly angrily fraudulent featuring bob dylan big bird grover researcher working watson medical application found knewton snake oil ferreira boasted told npr million glowing new york time article coding bootcamps investment already bachelor degree feature published dev bootcamp announced closing edtech payola michael winerip reported violation state ethic law launched investigation pearson closed foundation kickback arrested open door natasha singer described pleaded guilty personalized learning software facebook summit public school commitment according already developing facebook stepped glowing praise stop folk claiming otherwise course brooklyn ny mcpherson k cheshire ct indiana pa concerned privacy according data obtained pearson digital transformation digital transformation stake economist group stake penguin random house posted biggest loss lay staff earlier year digital first strategy rate teacher public school teacher supported obama administration spike subsequent research throughout rest decade online credit recovery called series reported like apex edmentum odysseyware edgenuity boost graduation rate bad online course common core state standard common core state standard disaster vast influence buy new common corealigned technology product gentrification announced siva vaidhyanathan put venture capitalism business missionaligned partnered ibm watson argued fired due uproar precision education sociologist ben williamson wrote new genetics intelligence learning chip study published ed yong wrote publishing faq read one oped piece including maria montessori student loan startup student loan financial aidoriented startup student loan crisis student loan collection agency personal loan commercial loan million credit suisse gee could go wrong investor pushing new type loan purdue lackawanna college dangerous trend privatizing computerbased testing blunder ready online test enough computer testtaking type internet connectivity poor rural school wellfounded vendor website minnesota florida colorado new jersey nevada north dakota montana tennessee blamed hacker bitcoins federallymandated state accused breach contract switched vendor online preschool best wellpaid professional according education reformer reported arguing example google glass nick bilton described mat honan wrote way google glass education might work google glass innovative us education closing keynote iste accessibility announced peter thiel college bubble one look never fan bankrolling attack first amendment endorsing donald trump president sitting board facebook secretary education beloved vcs beloved ed reform type broken fafsa floundering equip experiment terrible ferpa enforcement opms outsourcing outsource private side public higher education several sought become opms instead automated essay grading study told gibberish biased stopped state adopting automated grading system automated grading system product rocketship education john merrow asked betteridge law headline raised money required according npr anya kamenetz resistance danner left rocketship predictive analytics asked helping school make money recruit certain student avoid others altogether platforming education john hermann writes vast number company extend functionality bridge international academy investor whitney tilson told journalist peg tyre exploitative racist ordered startup refused test prep year year year year exacerbate educational inequality college board partnered khan academy make difference david coleman boasted data matt barnum sarah darville write amplify said news corp acquired wireless generation million contract inquiry news corp phone hacking scandal amplify unveiled melted news corp wanted sold jeffrey epstein mit medium lab julie k brown wrote miami herald epstein arrested new york charged sex trafficking numerous conspiracy theory unsealed document linked many scientist continued take epstein money posted apology several professor resigned taking epstein money justified covered ito resigned great reckoning inbloom shared tool teacher app million grant designed deliver named sxswedu conference new york time natasha singer reported passed legislation streichenberger announced inbloom would shutting blockchain anything good reason use blockchain technology blockchain prevent cheating stop people lying resume make easier student request copy school transcript improve college retention rate would prevented college admission scandal stop new ged reported le half many people took test stopped collecting ged data entirely clear federal funding adult education altschool speculated one engineer every teacher million silicon valley loved idea almost million total save education guinea pig shuttering school called quits google education google boasted blog apple sneer company launched classroom cost come free several lawsuit told virtual charter school reported published stanford abysmal performance virtual charter settlement accused almost million claimed close inc example announced summer first time history revenue topped billion lausd ipad initiative awarded apple issued rare press release inadequate ready necessary plan security hacked worked bypass dispute investigation district canceled contract apple fbi raided district office federal inquiry ended charge million settlement paid pearson classdojo new behaviorism million according website social emotional learning growth mindset grit mindfulness ben williamson observed corporate vision education would demand student future worker everyone learn code indicate otherwise myth subsequent handwringing pundit politician claim know bureau labor statistic suggests otherwise plenty startup narrative learning code tweeted continued diversity gamergate future culture war gamergate recently recalled prototyped rise harassment influencers paying attention acquired microsoft feminist insult gender exist minecraft recently wrote year mooc year mooc mitx announced predicting unveiled announced fired revolutionary already college degree dismissed feature bug unveiled cooed pause sebastian thrun told fast company fall million failed online initiative alllearn mooc revolution simply venture capitalism billion dollar venture capitalism venture philanthropy admitted announcing explained announced antischool shooter software cnn reported summer school security system antischool shooting software edtech lot money made selling school shooting simulation software facial recognition technology metal detector camera social medium surveillance software panic button clear backpack bulletproof backpack bulletproof door emergency lockdown notification apps insurance policy bleeding control training program armed guard armed teacher asked,read past ten year written lengthy yearend series documenting dominant narrative trend education technology think worthwhile decade draw close review story see much little thing changed read series thought good long best summarize decade inspired folk verge published list biggest flop fails dead dream decade tech decided something similar chronicle decade edtech failure fuckup flawed idea oh yes sure come rousing success triumphant moment made thrilled give hope future education good job honestly probably job either worst edtech debacle decade pigeon horizon report week christmas new medium consortium abruptly announced immediate closure apparent error omission former controller chief financial officer organization founded best known annual horizon report list prediction nearfuture education technology prediction consistently wrong edtech sector never willing let bad idea die report live educause purchased many nmc asset say continue publish higher ed version horizon report consortium school networking cosn taken mantle version promise free phrase paying product product get bandied lot despite according slate oremus rather inaccurate dangerous slogan said using piece technology free likely personal data sold advertiser least hoarded potential asset used example develop sort feature algorithm certainly free work well cashstrapped school work well teacher wanting bypass procurement bureaucracy work well disregard student data privacy security free last without revenue company go away company start charging software raise bunch venture capital support free offering company get acquired product go away paying piece technology treat better mind rich people kid use tech story silicon valley elite steve job let kid ipads bill gate let kid cellphone medium told story wildly popular story apparently technology industry executive refuse allow child use product selling rest u implication according one nyt article digital gap rich poor kid expected real digital divide article contends affluent child access better faster technology um parent opting exposure technology despite anecdote really course vast inequality access technology school home otherwise technology get used affluent student get use digital tool creative exploration poor student get use test prep medium narrative wealthy white family eschewing technology serve reduce sort inequality consumer decisionmaking overlook important structural issue around schooling parenting writing columbia journalism review anya kamenetez described article techfree rich kid howling missed opportunity lacking relevant research drew misleading conclusion anecdotal evidence cited contradicted central hook story say parent walk life concerned child technology usage listening handwringing tech regret industry silicon valley elite remorseful product service done democracy tell u simply make better choice going get u anywhere textbook publisher v boundless pearson cengage learning macmillan higher education sued boundless learning claiming open education textbook startup stolen creative expression author editor violating intellectualproperty right issue publisher claimed primarily way boundless created material startup marketed direct sometimes pageforpage alternative title three boundless publisher charged hired people specifically copy paraphrase textbook copying slight modification organization particular textbook illustration well reverse engineering publisher claimed violated copyright time david wiley expressed concern lawsuit could jeopardize larger oer movement nothing else associating open educational material piracy fear appeared unfounded boundless settled lawsuit damage perhaps reputation startup later sold valore education turn acquired follett turn shut boundless site boundless material archived david wiley company lumen learning ning era facebook edmodo social networking site ning time quite popular educator company cofounded gina bianchini marc andreessen announced would longer offer free version following outcry teacher school come rely network created site ning announced partnering pearson would pick tab education site long user accepted little pearson branding nings course ning acquired lifestyle site glam medium around million glam medium rebranded mode medium shut door transferring ownership ning cyndx many lesson controlling data relying free edtech product rock dove roaming autodidact literature online education preoccupied call roaming autodidact roaming autodidact selfmotivated able learner simultaneously embedded technocratic future disembedded place cultural history market roaming autodidact almost always conceived western white educated male result designing roaming autodidact end platform understands learner white male measuring learner task efficiency unarticulated norm western male whiteness affirmative exclusion poor student bilingual learner black student older student need affirmative effective looking across literature imagined educational future lot like science fiction movie conspicuous absence brown people woman tressie mcmillan cottom intersectionality critical engagement internet online grade portal host new product appeared decade purported make easier parent stay uptodate child school indeed according one story atlantic school district colorado opted away parentteacher conference entirely encouraging parent instead simply check online see child perhaps district know new york city learned audited old data portal found le parent ever logged variety reason language barrier lack internet access incompatible device lack training let honest site often quite poorly designed extreme online grade portal prompted parent log time ob child grade least concern columnist wall street journal new york time certainly expectation many edtech product increasingly school policy parent participate incessant monitoring student data bonus charge parent money sort peek kid world printing printing economist pronounced poised bring third industrial revolution know know hard tell third fourth eighteenth industrial revolution stage like many product list printing hailed revolution education school encouraged reorient library shop class towards maker space would give student opportunity print plastic design printer manufacturer makerbot launchedits makerbot academy goal put makerbot desktop printer every school america wired noted year later printing already another revolution despite sort wild promise plastic gizmo failed revolutionize either education manufacturing necessarily great environment either go figure flipped classroom probably sal khan ted talk let use video reinvent education flurry medium received course following year introduced idea flipped classroom people invent idea videotaping instruction watch home homework classroom instead history matter silicon valley column telegraph daniel pink used phrase flip thinking describe work math teacher karl fisch upload lecture youtube student watch night class everyone could work together solve problem class fisch credit made clear invented flipped practice either pointing earlier work jonathan bergmann aaron sam literature person help remark teaching practice field typically involved sort flip assign reading homework ask student come class prepared discus listen lecture problem flipped classroom le pedagogy per se touting real revolution techcrunch revolution predicted almost weekly techcrunch apparently practice raise lot question expectation assumption making student technology access home assign online video watch videotaped lecture revolutionary lecture supposedly karim ani founder mathalicious pointed washington post oped experienced educator concerned bad teaching happens classroom crisis happens youtube revolution much whole flipped classroom model based practice homework practice dubious best onerous worst education author alfie kohn long argued homework represents second shift student mixed evidence get much unizin wtf unizin collared dove ban laptop opeds past ten year every ten month someone would pen oped claiming time ban laptop classroom student pay attention lecture would argue take good note computer distracted distracting others perform poorly endofsemester standardized test part critic laptop ban claimed study opeds frequently cite flawed reductive outofdate critic argued laptop ban ableist disadvantage student opt purchase digital textbook rather printed one ban laptop oped may greatest piece edtech clickbait ever devised instructional designer tenured professor signal barricade everyone snipe side twitter trench week unspoken truce last next ban laptop oped get published everyone click rage snipe clickers clickers definitely new indeed research teaching machine found example classroom response system dating back industry like pretend idea somehow innovative practice asking question large audience race answer via phone somehow fun greatest trick edtech devil ever played convincing people clicking active learning startup making classroom response apps raised ten million dollar decade student part created hack bot crash quiz bundling textbook tuition save student money college may force switch etextbooks chronicle higher education reported key word headline digital force story examined proposed practice college require student pay coursematerials fee would used buy ebooks whatever text professor recommends old model rather student buying textbook separately buying used textbook checking library sharing roommate buying textbook cost would bundled tuition fee student would required pay student surprise thrilled idea rafter course material provider early advocate provider bundling textbook tuition closed door raised million amazon inspire amazon unveiled new lesson sharing site openly licensed material june one might think amazon would able pull something like great success amazon know run online marketplace amazon know sell text one day later company remove several piece content site educator complained material copyrighted worse two item included marketing material amazon circulated press covering launch material apparently lifted rival teacherspayteacherscom although complaint amazon site new york time reported copyright issue emerged tuesday suggested amazon inspire effective procedure independently vet copyright status material teacher uploaded shared three year later amazon inspire still beta amazon since launched new marketplace amazon ignite teacher sell share class material badge mozilla foundation unveiled open badge project effort make easy issue share digital learning badge across web along macarthur foundation hastac mozilla announced launch million competition design test new badge u secretary education arne duncan called badge gamechanging strategy reader although sometimes talked movement mozilla open badge project really technical specification one transferred mozilla ims global learning consortium mozilla said would retire backpack platform sharing displaying badge would help user move badge badgr software developed tech company concentric sky despite prediction badge would new credential looking future full badge clear digital badge provided u really meaningful way ass skill expertise wedge tailed green pigeon teacher influencer hustle teacher moonlighting instagram influencers make end meet buzzfeed reported course teacher utilized social medium site year launch various sidehustles speaking gig brand ambassadorship example well facilitate main hustle know teaching indeed donorschooseorg expects teacher leverage social medium presence order fundraise supply classroom rise teacher influencer asking donation book musical instrument peddling certain product certain story classroom look like century classroom may remind starbucks example profession kid celebrity educator insist money fame altruism justice teacher influencers classroom rarely representative education look like u white affluent high profile presence instagram twitter like exacerbate inequality reinscribe conspicuous consumption gadgetry sign innovation edtech startup accelerator time seemed like popular new startup emerging one incubator accelerator program another educationfocused otherwise remind classdojo imagine clever lambda school combinator example accelerator program offered earlystage startup mentorship office space funding often aiding product development introduction investor customer acquisition case edtech startup typically meant adoption product charter school chain number program skyrocketed course decade helping flood industry bunch strangely named company accelerator specialized solely education included startl imagine socratic lab colab name almost since shuttered imagine acquired combinator struggled actually help entrepreneur many absolutely experience education build product teacher student wanted needed indeed clearly struggled mightily run program worth anyone time effort shark tank school reality tv show shark tank budding entrepreneur pitch panel investor shark idea sometimes strike deal often entrepreneur walk away empty handed education technology company landed investment show including packback initially textbook rental company since pivoted ol aipowered q site shark tank awful mark burnett mark cuban vision future reality tv become way educational event organization institution dole funding project education need highstyle lowethics cutthroat theatrics basis decisionmaking clearly education need model tv show people color white woman grossly underrepresented strike much smaller deal strike deal white men gon na dawg end library story software seems support one hateread stuck entire decade one techcrunch g siegler end library clickbait sure perhaps came early decade wise enough avoid sort trollish nonsense learn anything online siegler argued internet replaced importance library repository knowledge digital distribution replaced role library central hub obtaining container knowledge book digital bit replaced need cut tree make paper waste ink create book library gone away still frequently visited despite dramatic drop public funding public library started eliminating fine library unlike techcrunch writer care alleviate inequality new technology made easy publisher sought restrict library access ebook lending example blaming library declining sale library also struggled maintain long commitment patron privacy face new software ebooks otherwise respect user right interactive whiteboards according team industry analyst hustler interactive whiteboard market poised hit billion sell report read detail cheaper report dangles promise market hit billion say still find plenty salesperson interactive whiteboards still find plenty school shelling money mock want interactive whiteboards remain big business decade find bestknown iwbmakers getting acquired chinese hardware maker foxconn bought smart technology chinese gaming company netdragon bought promethean perhaps death interactive whiteboard wildly exaggerated silicon valley technology touting vision personalization individualized usage device green imperial pigeon viral school video viral video new decade popularity cellphone along introduction social medium associated incentive go viral meant viral video became common student recorded fellow student student recorded teacher recorded school resource officer school recorded elaborate lipsync video school installed surveillance camera recorded everyone might seem fun harmless ubiquity video signifies much surveillance sousveillance accepted school doubt video helped highlight violence student particularly student color face hand disciplinarian time scene captured taken context video purposefully weaponized conservative group example encourage student film professor lecture submit name watch list altius education accreditor ordered tiffin university stop enrolling student ivy bridge college online program run venturebacked firm altius education accreditor expressed concern oversight tiffin actually program quality academic outsourcing instruction implied altius effect bought accreditation forprofit program partnering tiffin department justice launched investigation company according chronicle higher education part false claim act investigation could cover ivy bridge studentrecruiting practice academicintegrity issue studentloan policy well corporate relationship altius tiffin reporting dustup incredibly revealing publication believed silicon valley role disrupting higher education buzzfeed example described accreditor old body old guard shut experiment education headed thing victorian literature scholar story altius education founder paul freedman worked hard make sure repeated medium boxed innovator higher education course much work crack fraudulent behavior forprofit university occurred obama administration come halt trump part freedman still active forprofit education reform effort founder entangled venture chronicle higher education describes part incubator part investment fund part consultant part reseller service fake online university sting list high profile fake online university fairly long indeed potus ran one paid million fine settle fraud claim relating defunct trump university please go much anticorruption president federal government ran fake online university april department homeland security arrested people charging conspiracy commit visa fraud individual alleged helped one thousand foreign national maintain student visa pay stay college new jersey college university northern new jersey scam one created homeland security school employed professor held class sole purpose lure recruiter turn convincing foreign national enroll exchange form allows fulltime student apply student visa elaborate scam dating back one gave many online signal school real university northern new jersey website one edu domain boot well several active social medium profile regularly updated facebook page twitter account well linkedin profile supposed president student obtained visa university northern new jersey claimed victim government sting government said complicit according one student asked required take class told recruiter could still earn credit working thinking back suspicious hindsight really familiar immigration law student told buzzfeed never gotten phd thought maybe way work thought maybe way work charge fraud deceptive marketing levied postsecondary institution decade itt coding bootcamps trump university draper university hero might ask indeed way work course signal course signal software product developed purdue university designed boost student success using learning analytics inform teacher student staff potential problem labeling student redyellowgreen scheme indicate danger failing course purdue boasted course signal increased retention making incredibly effective tool student took course signal course likely succeed university said taking two course signal course magic number pushback claim mike caulfield suggesting perhaps student taking course signal course persist rather persisting taking signal course alfred essa mcgrawhill education vice president r ran simulation confirmed caulfield suspicion purdue team pointing effectiveness course signal actually reverse causality student completed course likely complete course michael feldstein argued meaninglessness purdue claim important edtech community grapple small part many learning analytics system modeled course signal work essa told inside higher ed problem data analysis also raised question education technology research broadly maybe one conclusion could derived really strong community test validate claim maybe really starting point discussion academic community move forward new technology learning analytics evaluating claim people put forward channel one unsinkable chris whittle may channel one aired last broadcast commercialfilled daily tv news programming service school began back one earliest indication creep brand school also one earliest education endeavor serial entrepreneur chris whittle whittle went string business failure welldocumented samuel abrams book commercial mindset notably forprofit flop edison school wrote whittle investment pal michael moe article baffler january year gushing profile whittle washington post fall master salesman forprofit education help underscore repercussion business education men bad idea bad business sense sulawesi green imperial pigeon kno september techcrunch founder mike arrington announced kno raised million andreessenhorowitz investor kno headed osman rashid cofounder textbook rental company chegg tablet aimed college market according arrington venture capitalist marc andreessen called kno tablet powerful tablet anyone ever made powerful fact following year kno talk sell hardware business focus instead studentfacing software yet continued raise money almost million total intel acquired kno million penny dollar said one analyst rebranded software intel education study app intel education study app discontinued deliverology sir michael barber published deliverology field guide educational leader book packaged idea developed time blair administration mckinsey company successfully manage policy reform effort three critical component approach wrote formation delivery unit data collection setting target trajectory establishment routine barber went work pearson chief education advisor continuing advocacy competition data collection measurement standardsbased reform see david kernohan excellent keynote heel year mooc barber released report titled avalanche coming calling unbundling higher education work michael barber underscore importance highly paid consultant shaping politician administrator believe future look like giving set metricsobsessed management practice get pearson parcc spy student former starledger education reporter bob braun posted screenshot blog email new jersey superintendent email said detailed priority alert issued pearson new jersey department education regarding student tweeted test question parcc standardized test based common core state standard tweet prompted security breach superintendent email expressed several concern simply closely guarded test question made public potential feared parental outcry student data testing particularly doe requested student disciplined incident added also made aware pearson monitoring social medium parcc testing braun blog post made everyone aware also sidenote superintendent email footer read best way predict future create abraham lincoln sigh incident caused great deal furor perhaps came moment heightened political outcry common core state standard standardized testing also occurred right fear growing social medium monitoring student school corporation alike easy time perhaps simply blame pearson spying order protect validity test decade went argument surveilling student social medium changed several time spying continued chatbot instructor imagine discovering teaching assistant really robot wall street journal gushed documenting experiment undertaken georgia tech chatbot called jill watson answered question course online forum student know ta computer university press release stated seemingly unbothered ethical issue might raise consent matter watson name might suggest built using ibm watson ai technology college computing professor ashok goel team used odd question student asked previous version course build jill knowledgebase one secret online class number question increase student number different question really go goel said student tend ask question instead redesigning course material student ask question built chatbot called ta teaching assistant labor chatbots seeking replace inside higher ed recently reported started infiltrate every corner higher ed admission student affair career service even test prep arguably making institution struggling treat people humanely even le human uber education want uber education udacity founder sebastian thrun told financial time moocs surprise entry long list awfulness phrase uber education deserves spot analogy frequently invoked education reformer including secretary education betsy devos told brookings institution traditional taxi system revolted ridesharing education establishment feel threatened rise school choice case entrenched status quo resisted model empower individual school choice devos uber education end regulation would make uber education thrun reference uber choice labor specifically building platform used precarious workforce lured piecework promise big payout udacity built uberlike platform told mit technology review uber normal person car become driver udacity every person computer become global code reviewer promise whether working udacity uber included better flexibility pay customer promise service demand decade gig economy demonstrated fueled exploitation innovation course many teacher find working uber driver struggle make end meet salary indeed uber market teacher directly encouraging make ridesharing company second gig offering teacher city donate small percentage trip fee classroom mourning dove galvanic skin response bracelet education historian diane ravitch sounded alarm gate foundation given clemson university grant work member measuring effective teacher met team measure engagement physiologically galvanic skin response gsr bracelet determine feasibility utility using device regularly school student teacher grant award read conduct pilot study new way measure student engagement use research shade brave new world ravitch cautioned reader poured gate foundation website uncovered example funding experiment gsr bracelet sorry ravitch wrote blog think madness mad scientist psychologist advising gate foundation dr moreau work gate laboratory seattle ravitch staunch advocate standardized testingbased reform effort worked bush administration secretary education recent change heart publishing bestseller titled death life great american school system testing choice undermining education coming particular scrutiny ravitch called billionaire boy club wealthy philanthropist investor like gate charged molding public school system serve interest bracelet ravitch reader emblematic reform movement hellbent using technology disposal monitor punish teacher folk mocked ravitch reader hysteria bracelet sexist also let introduce item list brainwave monitoring brain training social emotional learning unbundling investor michael staton first published framework unbundling education reworking several time course next year framework outlined service believed school provide order technology disrupt content delivery argued would first go staton also published paper american enterprise institute paper surprise drew heavily clayton christensen theory disruptive innovation predicted private sector coming education internet staton contended would unbundle education unbundled sector music example would create huge opportunity entrepreneur michael staton incidentally starring role kevin carey book end college serving tour guide startupfilled world silicon valley giving carey first ride uber introducing founder nowdefunct coding school dev bootcamp partying expensive yacht key element somehow future learning university everywhere derek newton argued atlantic staton extension carey analysis misconstrued parent student want school want bundle want content loop shopping content pathway want choose school want degree increasingly college student need bundling le need school provide course certification sure need degree help find gainful meaningful work also need mental health service food bank child care unbundling borrow tressie mcmillan cottom fantasy roaming autodidact instructure instructure first announced launch page techcrunch ah halcyon day tech blogging michael arrington pronounced death embargo techcrunch would honor agreement pr firm hold back story techcrunch wanted f rst night education publication could publish take new upstart learning management system arrington first gush wait let check note collection vintage tank weapon owned founder josh coates truly stellar reporting mike truly course reader techcrunch care little education technology per se rather interest feature new lm wanted hear investment opportunity disruptive innovation potential threat blackboard market dominance mattered crowd business edtech pedagogy time business instructure good people relieved new alternative blackboard company ipo finally surpassed blackboard u market share end decade back started trying appease money people move sell instructure private equity firm thoma bravo facing resistance three large investor uc berkeley deletes online lecture march uc berkeley announced would remove public access audio videorecordings lecture response department justice order school make educational material accessible people disability cathy koshland vice chancellor undergraduate education said berkeley would continue work mooc provider edx post open course online moving content behind authentication allows u better protect instructor intellectual property pirate reused content personal profit without consent weird claim considering openlylicensed uc berkeley posting video audio version lecture online decade much content predated interpretation ada could force school provide equitable access material even recent berkeleyx material still ada compliant remove public access content rather make accessible people disability borrow phrase wonkhe editor david kernohan bad look slave tetri yes slave tetri someone someone made educational video game called slave trade thinking practice fitting black body slave ship would great way help child understand history worse hardly slavery game decade littered game built publisher like serious game interactive game designed teacher fun indian fantail pigeon apple itextbooks october walter isaacson published biography steve job day apple cofounder death among revelation job plan transform textbook industry believed billion year industry ripe digital destruction also struck fact many school security reason locker kid lug heavy backpack around ipad would solve said idea hire great textbook writer create digital version make feature ipad addition held meeting major publisher pearson education partnering apple process state certify textbook corrupt said make textbook free come ipad certified crappy economy state level last decade give opportunity circumvent whole process save money p january apple unveiled plan digital destruction plan looked nothing like isaacson described apple would partner big three publisher pearson mcgraw hill houghton mifflin harcourt make digital version title available ipad cost apiece price tag might seemed much lower hundred dollar print copy print version level least often shared across class used many year sure itextbooks promised would always uptodate student would per student per year would according one calculation least five time cost print furthermore textbook authoring tool built book proprietary format would work ibooks gave apple sole distribution right despite talk dismantling textbook industry bureaucracy apple opted instead partner something would come back bite apple hard struck deal sell ipads digital textbook los angeles unified school district alexa school voice assistant device place classroom edsurge asked opening story tweet privacy advocate bill fitzgerald made clear answer classroom fitzgerald reported amazon rep told alexa dot posed compliance privacy issue stop publication adding word made case despite potential privacy security issue educator saying yes since campaign commercialfree childhood center digital democracy dozen privacy group lodged complaint ftc claiming amazon voice assistant violate child online privacy protection act amazon also sued recording child without consent rarely willing refuse latest shiny gadget even obviously creepy school moving forward installing alexa classroom dorm room offering student money develop new product using technology connectedu college career planning startup connectedu filed bankruptcy struggled make good debt despite raised million venture funding bankruptcy hearing ftc requested company allowed sell million student record possession student name email address birth date intimate information asset sale ftc contended would violate connectedu privacy policy requested user notified could request data destroyed never happened education week reported connectedu employee filing date carry task make matter worse buzzfeed noted one successful bidder data software company imperfect track record come privacy nowresigned ceo symplicity corp power university disciplinary record system pleaded guilty last month conspiring hack computer system competitor steal information along company cto also plead guilty decrypted protected password private information university used symplicity system company charged matter edsurge publication edsurge founded shortly started hack education raised zero dollar venture capital taken zero dollar grant gate foundation chan zuckerberg initiative edsurge raised million venture capital received million gate foundation grant edsurge told version event past decade worth edtech told mine edsurge struggled find business model year tried making money sponsored content product catalog conference concierge service helping school decide product buy research service helping investor decide startup fund struggled doubt although million help fund fight fall edsurge announced would acquired iste term sale disclosed edsurge said investor would see nothing acquisition feel quite accurate past decade investor gained quite bit publication helped spread precisely story edtech industry wanted told edmodo time edmodo quite edtech industry darling social network school raised million high profile tech investor like linkedin founder reid hoffman company could never find good way make money experimenting freemium model attempting run marketplace teacher could buy sell content even running ad including ad ecigarettes edmodo turn virality profitability edsurge tony wan asked answer resounding founded two educator edmodo experienced number leadership change decade crystal hutter wife one company investor ceo time vibhu mittal took rein edmodo sold netdragon million million cash astounding loss ability make money hardly problem edmodo faced news broke million account compromised usernames email address hashed password stolen diamond dove death aaron swartz january aaron swartz arrested mit police charged violating federal hacking law using mit network download million academic article subscription service jstor although neither jstor mit sought punishment federal government prosecuted swartz anyway charging violating jstor term service downloading document distribute initially charged four felony count prosecutor increased count turning day downloaded document separate count swartz faced maximum sentence year prison fine could potentially reach million offered plea deal serve six month prison rejected want serve time think committed felony three month trial set begin aaron swartz committed suicide friend family blamed part overzealous prosecution doubt one decade greatest tech tragedy information power like power want keep world entire scientific cultural heritage published century book journal increasingly digitized locked handful private corporation justice following unjust law time come light grand tradition civil disobedience declare opposition private theft public culture aaron swartz clayton christensen prediction clayton christensen michael horn published disrupting class disruptive innovation change way world learns predicted growth computerbased instruction would accelerate rapidly half high school class would taught internet nope wrong christensen told investor mark suster year time half u university would bankrupt education believed belief online education would provide disruptive innovation force traditional schooling business doubled prediction half college university would close decade set calendar reminder check back final calculation meanwhile phil hill run number higher ed closure actually look like visualization help underscore vast number forprofit institution enough left make half college claim jill lepore reminded u scathing critique christensen gospel innovation disruptive innovation theory business fail explain change law nature artifact history idea forged time manufacture moment upsetting edgy uncertainty transfixed change blind continuity make poor prophet sort propheteering hope repeat story enough time everyone taxpayer administrator politician pundit start believe truth deborah quazzo chicago board education investigation chicago sun time found company chicago board education member deborah quazzo financial stake seen business received city school triple almost million since mayor rahm emanuel appointed board previous year newspaper also found voted support charter school network strong financial tie investment portfolio chicago teacher union called quazzo founder gsv advisor active edtech investor immediately resign however insisted conflict interest serving cps board investing edtech company held seat term expired supported mayor emanuel said city lucky turnitin cheating detection racket iparadigms company whose product closely associated cheating detection turnitin bought sold twice decade insight venture partner million earlier year advance publication billion thankfully education technology ethical missiondriven industry every student ever forced submit essay assignment turnitin received nice cut deal befitting contribution data intellectual property value product jest student got nothing course student write work get extracted turnitin turn sell access database student work back school jesse stommel sean michael morris put funny thing happened way academic integrity plagiarism detection software pd like turnitin seized control student intellectual property student use turnitin discouraged copying work company strip mine sell student work profit another funny thing essay mill touting use turnitin assure customer essay pas plagiarism detector rather trusting student rather reevaluating assignment assessment look like school invested heavily number technology solution cheating keystroke locking facial recognition video monitoring like designed identify student low integrity brain training lumosity agreed pay ftc million settle charge deceptive advertising surrounding brain training game lumosity claimed product could improve memory focus even reverse symptom alzheimer disease claim unsubstantiated best criticism lumosity brain training company circulating scientist penned open letter stating little evidence support industry claim industry scientist contended simply capitalizing people fear aging study journal neuroscience found evidence playing lumosity game helped improve cognitive functioning another study published year neuropsychology review found brain training program peerreviewed evidence demonstrating efficacy almost come education technology say whatever want marketing copy lumosity hardly brain training company get trouble past decade neurocore brain performance company agreed stop advertising success rate child adult suffering malady attention deficit disorder depression autism review found company could support outcome promoting among neurocore investor secretary education betsy devos crested pigeon montessori wager ask american describe progressive education cite one two name john dewey maria montessori likely read dewey see phrase attributed powerpoint presentation educelebrity twitter know little montessori either kind preschool kid play wooden block surprisingly tech executive sought open private school turned largely imagined legacy progressive education often referring experiment montessori sal khan lab school max ventilla altschool example contend school expand montessori vision adding new digital technology personalize learning well surveil student meticulous logging data tracking teacherleaders see promise technology one edsurge article described wildflower charter school chain story documented wide array camera sensor latter tucked inside student slipper utilized monitor activity child undertake object interact many silicon valley like point montessori experience famous founder like larry page sergei brin jimmy wale jeff bezos suggest early childhood education helped make creative thinker although probably fair blame montessori destructiveness democracy google amazon fair however blame montessori new affiliation socalled progressive education surveillance technology google reader google shut reader citing declining use r indeed internet user already much likely get news social medium feed feed reader although let honest probably cost google dime keep server running arguably closure google reader blow news consumption blow blogging well became harder harder small personal site like one compete giant venturebacked one like one anytime someone try tell google mission organize world information make universally accessible useful remind google killed google reader helped make world susceptible mi disinformation thrives online ted talk one trace far many bad idea event whose focus purport idea worth spreading ted talk terrible trite full historically inaccurate information say example sal khan ted talk let use video reinvent education people hear ted talk think stumbled upon brilliance say example sebastian thrun listening sal khan ted talk deciding would redesign higher education idea prompted experiment stanford offered graduate level ai class online free never believe happened next unfortunately educationrelated ted talk popular one laughably silly nicholas negroponte prediction pill able swallow know shakespeare one greatest appeal sugata mitra school cloud may reinscribe exploitation inequality ted talk promise sleightofhand disrupt ted talk designed unassailable idea spread never challenge noted back get ask question ted talk even ticket watch live give privilege seat theater virtual reality virtual reality heralded technology poised transform education say virtual reality long associated promise vr appeared earliest horizon report example report positing virtual world would adopted higher ed institution within two three year time funnily enough report offered outlook still two three year widespread adoption vr facebook acquired vr headset maker oculus rift facebook tried push equipment school donating one headset every school arkansas example google also sought market version vr school offering virtual field trip expedition product clear positive benefit going actual field trip extend experience watching degree video via device strapped face believe field trip equivalent watching educational film class vr different according marketing hype vr different new unique empathy machine good grief math emporium math emporium virginia tech founded late saw renewed interest decade hundred school adopted model use computerassisted instruction teach math lieu paying professor graduate student according washington post emporium walmart higher education triumph economy scale glimpse possible future computerled learning eight thousand student year take introductory math space housed discount department store following creation math emporium pas rate introductory math went virginia tech boasted perstudent expenditure went wheee research also found emporium appeared best serve student higher math achievement enjoyed mathematics spent time taking exam software appeared successful helping student recall formula taught little develop broader mathematical analytical reasoning student reaction emporium mixed best software never replace teacher always say decides hell let save money software rock pigeon one laptop per child nicholas negroponte first started talking vision laptop world economic forum inspired work seymour papert believed cheap computer could unlock educational opportunity child around world new york time jon markoff observed negroponte reception davos chilly mission complicated davos digital divide information technology industry longer center attention annual intimate gathering world powerful wealthy slightly buzz negroponte pitched idea world summit information society tunis head un kofi annan went demo device signature feature hand crank would power fell adi robertson wrote verge moment brief perfectly foreshadowed critic would see one laptop per child year later flashy clever idealistic project shattered first brush reality struggle faced one laptop per child project continued since outset techcrunch named laptop one biggest flop decade still flopping one negroponte announced planned drop tablet helicopter onto remote village ethiopia say drop helicopter mean like coke bottle falling sky said apparently referring movie god must crazy clearly missed part elder film decide coke bottle cursed following year negroponte boasted within two week child singing abc song village within five month hacked android controlled study peru published found evidence olpc tablet increased child math language learning early olpc foundation disbanded olpc news shut let u honest great excitement energy enthusiasm brought u together gone farewell post read olpc dead year morgan g ames published charisma machine life death legacy one laptop per child least one good thing came endeavor decade yik yak valued million raised million venture capital anonymous messaging app yik yak closed door good riddance founded tyler droll brook buffington seriously yik yak time quite popular student often took advantage anonymity harass others post racist sexist remark new york time chronicled threat violence posted app prompted several school go lockdown several student subsequently arrested virginia michigan missouri example post made school blocked app wifi network student emory denounced platform hate speech one student noted hyperlocalization app constant reminder threat coming random person across country coming someone class hour code computer science education week industrybacked learntocode group codeorg launched hour code campaign encourage computer science series short tutorial high profile testimonial posted website buy new video game make one president obama urged video recorded behalf hour code download latest app help design play phone program one born computer scientist little hard work math science anyone become one tech industry trade press loved story repeating codeorg pr example number line code student written campaign number girl participated codeorg raised million funding tech industry giant lesson often highly branded learn basic coding disney moana serious problem industry command everyone learn code separate item list worth noting one hour whether hour code genius hour hardly sufficient commitment changing education matter changing industry indeed many way hour code marketing coup feelgood distraction insidious lobbying effort tech sector undertaken reshape curriculum brainwave headband brainwave headset making way classroom meditation discipline edsurge wrote touting use muse headset measure electroencephalography eeg reduce behavioral problem wrote different headset maker year brainco purport use eeg gauge student attention level classroom year edsurge featured headset made emotiv yet another story suggested technology would help improve mindfulness moved drone mind soon student doubt speculation marketing indication plenty company school see student neural data potential way monitor control behavior emotion cognition compulsory fitness tracker oral robert university announced student would encouraged wear fitbits monitor physical activity fitness tracker would help support university model whole person education said fitbit data number step heart rate data would integrated student gradebook school learning management system case brightspace student required take step day check heart rate three time day arbitrary fitness goal sure school spokesperson told vice would track data fitbits collected type physical activity undertaken including sex forbidden university told vice student could always opt wearing device pen paper track activity one student likely sort fitness activity data tracked monitored even monetized given choice surprise athlete university michigan part struck new contract nike sport apparel included deal opportunity nike harvest personal data michigan athlete use wearable technology like heartrate monitor gps tracker device log myriad biological activity course student wear fitness tracker school track every step washington post pointed many college track student via phone common wood pigeon wegrow wework last half wework unmitigated disaster coworking company filed ipo august last valued billion ipo filing gave investor opportunity dig company financials shockingly bad cofounder ceo adam neumann forced step public offering delayed one investor pony another billion help cover immediate bill including severance pay laid employee although main business appeared buying leasing real estate wework several educationoriented subsidiary one missionu closed door last year missionu promised one year program would replace traditional college degree wework acquired flatiron school back laid dozen coding bootcamp employee year wework also announced would close wegrow conscious entrepreneurial school child school apparently ran sort chaotic disruption neumann embraced head wework remember kid matter pr try tell likely unicorn as youtube new educational tv learn anything youtube told indeed young people prefer learning youtube textbook according ironically pearson although youtube founded seen explosion growth decade part ubiquity mobile device anytime anywhere televisionwatching popularity site like khan academy helped fuel narrative video could teach anything youtube would reinvent education funny thomas edison thought thing film back decade progressed seemed clear algorithmicallydriven content videosharing site introducing viewer conspiracy theory misinformation youtube great radicalizer sociologist zeynep tufekci put parent long criticized letting television raise child youtube mean much stranger potentially dangerous datadriven viewing experience juul juul edtech audrey right right right ecigarette maker pretty popular kid school revamp antismoking policy lesson order account rise popular new vaping technology course school actually decided use juul antivaping curriculum hell appeal well part juul framed vaping prevention program term mindfulness rage thanks hype around social emotional learning see juul sweetened pot according buzzfeed juul offered pay school use material blamed vaping peer pressure know addictive property nicotine material dramatically downplayed danger vaping danger become much clearer year growing number illness death associated practice even better material apparently plagiarized according stanford professor bonnie halpernfelsher least claim juul used slide without permission social emotional learning software brainwave monitoring headset galvanic skin response bracelet might seem farfetched futuristic creepy school adopt positioned part another trend might soon make seem far palatable social emotional learning sel sel powerful advocate powerful place macarthur foundation genius university pennsylvania psychology professor angela duckworth stanford university psychology professor carol dweck chan zuckerberg initiative whose vision future education involves whole child personalized learning say plan invest hundred million dollar education initiative end surprise investment software encourages measure grit growth mindset mindfulness followed part oecd organization administers pisa test started surveying social emotional skill thing people insisted going mitigate maniacal focus standardized achievement test become standardized achievement test cyber incident map clear cyber incident map list bad idea contrary map document cybersecurityrelated incident school since ransomware attack ddos attack data breach phishing attack like necessary idea underscore utterly dismal state cybersecurity education run edtech strategy doug levin created accompanying cybersecurity resource center map prompt district ask collecting much data buying software collect much data kind capacity policy building internally address clearly going ongoing issue school nicobar pigeon ibm watson watson questionandanswer system built ibm beat two human player ken jennings brad rutter tv game show jeopardy brilliant pr move ibm sought commercialize technology use number field including medicine education ibm boasted partnership sesame workshop build cognitive learning apps boasted partnership scholastic one edmodo build content recommendation service perhaps fiercest critic ibm watson education came another ai pioneer field roger schank schank blogged regularly angrily watson insisting ibm engaged cognitive computing schank published book cognitive computer suggesting company claim fraudulent despite marketing ad featuring bob dylan big bird grover little substance demonstrate watson work n sector outside education result troubling best researcher working watson medical application found example multiple example unsafe incorrect treatment recommendation product piece shit one doctor said stop education adopting course knewton founded former kaplan executive jose ferreira knewton one heavily funded edtech startup decade also word michael feldstein snake oil ferreira boasted department education datapalooza literally know everything know learn best everything five order magnitude data google literally data student company anybody else anything even close told npr knewton adaptive learning software mindreading robo tutor sky outlandish claim powerful piece learning software never matched materialized knewton raised million venture capital sold million year like said elsewhere long list consequence snake oil salesman edtech ferreira new startup featured glowing new york time article promising machine learning ai going revolutionize education coding bootcamps almost impossible separate silicon valley massive interest investment coding bootcamps education trend decade effort challenge traditional credentialing system tech industry push reshape school curriculum include coding fear skill gap morphing forprofit higher education system facing increasing regulatory scrutiny obama administration coding bootcamps offer short intensive course computer programming often marketed alternative traditional college degree vast majority student enroll bootcamps appear already bachelor degree bootcamps promise successful job placement indeed say refund tuition graduate find employment feature published bloomberg warned prospective student want job silicon valley keep away coding school article contended many company found coding bootcamp grad unprepared technical work tech bootcamps freaking joke one tech recruiter told publication client looking solid c degree reputable university relevant work experience google director education echoed sentiment experience found graduate program quite prepared software engineering role google without additional training previous programming role industry several high profile closure bootcamps dev bootcamp owned kaplan inc iron yard owned parent company university phoenix example hard see closure alongside swept forprofit career college sector decade dev bootcamp announced closing company admitted unable find sustainable model nt compromise vision highquality immersive coding training broadly accessible diverse population indeed despite tech industry disdain education system particularly politics unionized labor force highquality immersive coding training expensive laborintensive proposition forprofit higher education industry never known invest heavily instruction faculty curriculum dollar primarily federal financial aid dollar gone instead marketing recruitment edtech payola new york time michael winerip reported recent year pearson foundation paid send state education commissioner meet international counterpart london helsinki singapore last week rio de janeiro commissioner stay expensive hotel like mandarin oriental singapore spend several day meeting educator place also meet top executive commercial side pearson one biggest education company world selling standardized test packaged curriculum prentice hall textbook appeared though commissioner violation state ethic law new york state attorney general launched investigation foundation pearson paid million fine settle accusation broke new york state law paying education official travel using foundation help develop common corealigned product hoping product would help land funding gate foundation pearson closed foundation end payforplay education technology world kidding numerous high profile case decade administrator accepting kickback education education technology company speaker house alabama arrested using office personal gain taken edtech company edgenuity open door new york time natasha singer described lucrative wooing precisely silicon valley plan conquer classroom heel investigation one figure story baltimore county school superintendent dallas dance pleaded guilty perjury relating payment received speaking consulting personalized learning software facebook summit public school role venture philanthropy played attempting reshape american education system near top list bad idea special shoutout go mark zuckerberg chan zuckerberg initiative wretched commitment extend personalization beyond facebook school one main beneficiary czi funding summit public school according new york time received almost million grant venture philanthropy firm since charter school chain already developing personalized learning platform manage competencybased learning practice facebook stepped offering help software called basecamp czi took engineering learning management system facebook although software received glowing praise tech journalist never research demonstrate summit personalized learning software actually effective stop folk claiming otherwise course response community introduction basecamp far positive student parent protested adoption brooklyn ny mcpherson k cheshire ct indiana pa elsewhere student complained learning anything others said concerned privacy many school pulled plug software response according data obtained chalkbeat since platform made available school using given year quit using year later socorro dove pearson digital transformation great decade pearson list littered pearson scandal spying student investing knewton testing blunder pearson foundation payola scheme lausd ipad debacle redesigned ged pearson business suffered many publisher decade fair actually say repeated fiasco attempt digital transformation pearson opted sell number high profile asset including financial time stake economist group stake penguin random house nonetheless posted biggest loss history billion continued reorganize lay staff selling u courseware business earlier year pearson announced july planned abandon traditional textbook publishing model opting instead digital first strategy instead selling student expensive print textbook rent expensive digital one brilliant la time rate teacher los angeles time made controversial decision publish test score data public school teacher district assigning rating indicating effective improving student performance valueadded measure vam rating system one supported obama administration well many education reform advocate contended sort datadriven evaluation would help ineffective teacher improve likely could used strongarm leave profession indeed lausd experienced spike teacher turnover la time published teacher name rating still plenty concern validity vam data change yeartoyear standardized test score really reflect one teacher vam data help address educational inequality making sure good teacher simply assigned good neighborhood indeed subsequent research found publication teacher name might actually exacerbated inequality district wellconnected parent able pull string make sure child classroom teacher deemed best publication teacher name rating one first salvo saw throughout rest decade name transparency public data weaponized weaponized much sunlight best disinfectant powerful force wanted disinfect public sphere perceived enemy teacher online credit recovery slate published series story online credit recovery program class offered student needed quickly make missed credit order graduate high school time new diploma mill called class fast isolating superficial series reported describing experience one student failing junior year english class able make course online day told another student paid friend take course school pressured use online option product offered company like apex edmentum odysseyware edgenuity part desire boost graduation rate effort crack provider offering bad online course often countered lobbying american legislative exchange council alec made expanding online learning unfettered form one priority common core state standard put common core state standard list think content standard bad horse race said think stretch call rollout common core one major education disaster decade include cc vast influence school prompting school buy new common corealigned technology product hardware software digital curriculum assessment common core implicated several failure list new ged inbloom starter gentrification sesame street sesame street turned year one greatest success history education technology reaching million million early learner public television sesame workshop announced new episode beloved show would appear first premium cable channel hbo nine month later public television although organization said needed make switch financial reason move blow educational equity core mission sesame street siva vaidhyanathan put symptom american view collective obligation especially poorest child sesame workshop also got venture capitalism business invest missionaligned education technology startup including test prep company partnered ibm watson new money ruined sesame street guardian argued new format show theme tune little brighter street scene little ritzier one remembers earlier version elmo new apartment oscar grouch longer life trash puppet featured one bestselling product line human human dearly beloved human sesame street gordon luis bob fired brought back due uproar seems drive programming sesame street education research market research sesame workshop longer committed equity social justice interested equity financial stake venture capitalist take tech startup pink headed fruit dove precision education way precision education look lot like raft personalized learning practice platform development taken shape past year sociologist ben williamson wrote driven development learning analytics adaptive learning technology personalized learning become dominant focus educational technology industry main priority philanthropic funders bill gate mark zuckerberg precision education simply rely assessment behavioral data feed learning software algorithm seek include analysis intimate interior detail student genetic makeup psychological characteristic neural functioning part new genetics intelligence according behavioral geneticist robert plomin contends dna analysis could provide every student learning chip could reliably predict academic strength weakness could help school customize personalize education study published nature genomics said studying genome million people european descent found educational attainment moderately heritable important correlate many social economic health outcome therefore important focus number educational genetics study clear ed yong wrote atlantic team discovered gene education although researcher tried careful explaining discovered publishing faq longer research paper surprise finding quickly politicized progressive embrace genetics education read one oped piece new york time forgetting perhaps education progressive including maria montessori path student loan startup among popular area education venture capitalist invest decade student loan financial aidoriented startup mean student loan crisis surely right thing get business giving loan among secretary education betsy devos investment student loan collection agency student loan company popular among investor entrepreneur part reflected state banking industry overall right personal loan commercial loan industrial loan boomed investor interest loan company also reflects promise new technology namely ai analytics led established financial institution well upstart believe loan continue lucrative market one loan startup raised million credit suisse boasted human decisionmaking application process example machine learning algorithm gee could go wrong loan industry coding bootcamps investor started pushing new type loan incomesharing agreement incomesharing agreement typically involve sort deferred tuition exchange cut student future income school offering isas included purdue lackawanna college student loan industry move towards pervasive datamining student history order identify best potential repayment sort new funding agreement raise sort question overt algorithmic discrimination indeed sara goldrickrab called isas dangerous trend move risk financial aid student loan onto individual back rather shared risk public funding step towards privatizing funding education course exactly reason many hoping student loan financial aid startup profitable investment computerbased testing blunder new assessment aligned common core state standard administered via computer prompting noted great deal expenditure new device new mode testing caused great deal headache marked year state implemented test associated standard many struggled implementation surprise cosn survey year found educator pleading ready online test worry move online testing might affect score worry enough computer testtaking worry kid ability type worry internet connectivity particularly poor rural school many worry wellfounded problem district infrastructure problem vendor website technical problem minnesota florida colorado new jersey nevada north dakota montana tennessee elsewhere state blamed vendor blamed school state blamed hacker common core test one new jersey school district postponed entire computer network held hostage ransomware exchange bitcoins approximately time technical problem bad state prompted concern validity score state ability meet federallymandated level test participation number exacerbated opt movement several state accused testing vendor breach contract several switched vendor hoping would fix problem spoiler alert online preschool arguably one best investment could make education would fund universal preschool high quality universal preschool staffed wellpaid professional high quality universal preschool staffed wellpaid professional brickandmortar setting online online preschool according education reformer poised change way rural america early education one program upstart mix adaptive software preschoolaged kid along child development training checkins parent program focus building preliteracy skill sound blending letter name designed used minute day total minute per week currently upstart used family utah smaller pilot state edsurge reported earlier year many expert caution program arguing example online preschool lack concrete handson social emotional intellectual educational component essential quality learning early year online preschool likely exacerbate already existing inequality early education giving lowincome child superficial exposure rote skill idea privileged child continue receive developmentally sound experience provide solid foundation later academic success sort story promote high tech solution certain community always make wonder opt instead build local capacity rather insisting alternative educationfromelsewhere online google glass google announced project glass new york time nick bilton described polished welldesigned pair wraparound glass clear display sits eye glass stream information lens allow wearer send receive message voice command also builtin camera record video take picture tech press initial fondness futuristic design quickly faded glasshole year google glass mat honan wrote education technology blog also gushed glass churning hundred article like way google glass education might work google glass innovative us education adam bellow delivered closing keynote iste wearing google glass edtech evangelist made clear outset surveillance future outset major concern privacy security glass well problem accessibility google announced would stop selling product bonus point however education guru twitter profile still wearing glass kereru peter thiel stage techcrunch annual conference disrupt investor peter thiel announced new initiative program would pay select group young people drop school pursue entrepreneurial interest political pr move coincided larger thesis college bubble like housing bubble find people making unreasonable investment something worth peter thiel said stirred public resentment towards expansion higher education quaint story talent meritocracy probably much lower list one look past thiel fellowship recipient yawn thiel worked actively decade subvert democracy never fan apparently bankrolling attack first amendment example endorsing donald trump president sitting board facebook secretary education funny two longest serving member obama trump administration secretary education arne duncan betsy devos respectively actually funny pretty terrible beloved vcs indeed since leaving office duncan became one beloved ed reform type terrible among edtech disaster facilitated broken fafsa floundering equip experiment andterrible ferpa enforcement starter generally department education shown tightly connected industry former department official cycled gate foundation chan zuckerberg initiative iste student loan industry startup like opms outsourcing despite hullabaloo decade importance offering online class many school opted develop capacity internally rather outsource function vendor century foundation issued blistering report online program manager opms titled private side public higher education although university long outsourced service thirdparty provider food service parking enforcement example opms could pose significant risk higher ed report argued function opms closely linked core educational mission public institution result quality service provided opms direct bearing quality school ability institution fulfill mission train student prepare workforce involvement opms establishment growth online educational opportunity public institution expose consumer financial interest decisionmakers interest would exist exclusively public nonprofit institution involved providing distance learning program driven desire need make money investor owner executive held accountable company may prioritize profit interest online student owe loyalty financial otherwise phil hill observed forprofit university mooc provider stumbled decade several sought become opms instead say really handful pivot make edtech become opm become lm try market automated essay grading robot essay grader grade human one least conclusion study conducted university akron dean college education mark shermis kaggle data scientist ben hamner researcher examined essay administered junior high school level student part state standardized testing process comparing grade given human grader given automated grading software found overall automated essay scoring capable producing score similar human score extendedresponse writing item equal performance sourcebased traditional writing genre demonstration showed conclusively automated essay scoring system fast accurate cost effective said tom vander ark partner investment firm learn capital press release touting study result edx announced developed automated essay grading program president anant agarwal boasted software improvement traditional grading method huge value learning instant feedback told new york time automated essay grading software fooled gibberish mit le perelman shown moreover algorithm underpinning biased particularly black student stopped state adopting automated grading system standardized testing software company incorporating automated grading system product rocketship education pb news hour john merrow asked rocketship launch fleet successful massproduced school betteridge law headline would tell u answer many silicon valley thought rocketship model charter school chain relies heavily computerbased instruction would model future school organization raised money gate foundation netflix ceo reed hastings facebook sheryl sandberg starter one key feature rocketship learning lab costsaving way quickly scale required student spend significant time working laptop large group supervised noncertified lowerpaid instructional lab specialist student rotating learning lab meant employing fewer teacher richard whitmire wrote book charter school chain thus school rocketship mosaic could successfully serve student teacher plus aide news hour documentary show young mostly latino student clearly bored frustrated sitting row row row cubicle supposedly working alone computer program probably scene child using edtech stuck decade according npr anya kamenetz wrote detailed article major drawback rocketship model emphasis maximizing instructional time computer led school limit bathroom break student allowed take one teacher reported bathroom break problem kid go play one play period day teacher said bathroom accident common although rocketship founder john danner hoped charter school chain would serve one million student goal since significantly revised le school operation today expansion faced growing resistance danner left rocketship start another edtech company blue headed quail dove predictive analytics big data used discourage poor student university zdnet asked describing algorithm could help predict whether lowincome student would successful school resource could directed way help succeed received money support nope rather could big data utilized student discouraged going school first place long time story predictive analytics education framed way surprise education technology proponent wont say big data used encourage lowincome minority student least send nudge notification student appear algorithmically least struggling algorithmic product marketed helping student succeed surprise helping school make money retaining tuition dollar year past become clear many school precisely zdnet alluded using predictive analytics recruit certain student avoid others altogether exacerbating existing educational inequality platforming education review nick srnicek book platform capitalism john hermann writes platform sense capitalism distilled essence proudly experimental maximally consequential prone creating externality especially disinclined address even acknowledge happens beyond rising wall accordingly platform underlying trend tie together popular narrative technology economy general platform provide substructure gig economy sharing economy economic engine social medium architecture attention economy inspiration claim end ownership book srnicek posit platform poised become fundamental business model digital world key new economy clearly also key political social system shaped control powerful technology industry certainly goal many technology company education otherwise become platform become key piece digital infrastructure whose business model rest extraction data many way learning management system prototypical education platform lm long positioned operating system sort higher education one certainly predates talk platform economy lm provider spent decade buying vast number company extend functionality original product company offered offered administratively adjacent feature would facilitate extraction data student professor activity online could gleaned student information system lm platform education sure perhaps dominant dangerous google nears top list bridge international academy bridge international academy founded promising bring quality education part global south school technologyintensive mean scripted lesson teacher read via mobile device tracking teacher student attendance via mobile device payment tuition parent payment teacher salary via mobile device example bridge received financial backing silicon valley investor executive including mark zuckerberg bill gate tesla education company investor whitney tilson told journalist peg tyre guess supposed compliment admission startup suffers exploitative racist labor practice tyre investigation bridge international academy chronicled problem startup faced tried scale opposition teacher union regulatory hurdle inspection found unsanitary condition inability poor parent afford tuition order scale one civil right group uganda charged bridge marketed student already enrolled public school rather trying recruit student attended informal school ugandan judge ordered bridge close school country startup refused test prep year year year year wellfunded startup education technology offering tutoring test prep neither progressive trend exacerbate educational inequality affluent family afford give child extra academic support least extra tip trick well standardized test counteract inequality test prep testing college board partnered khan academy provide free online sat prep course year insisting test prep would actually make difference well one performed exam one year later head college board david coleman boasted never career seen launch technology scale broken racial division haunt nation never college board released data showed hour free official sat practice khan academy associated average score gain point nearly double average score gain compared student use khan academy one problem though student practiced amount student highly educated parent tended spend time matt barnum sarah darville write chalkbeat college board research show whether khan academy truly caused score increase perhaps student used khan particularly motivated using study aid perhaps test prep never undo inequality baked system perhaps perhaps never really meant amplify rupert murdoch medium company news corp launched amplify new brand fast company said completely digital classroom head new division joel klein former superintendent new york city school speculation news corp planning enter education technology market brewing since beginning decade klein stepped chancellor position join company november news corp acquired wireless generation million wireless generation several contract nyc department education building student data warehouse aris writing algorithm school one math program delivered personalized playlist instruction none popular new york city klein school one aris worth noting news education division also came heel inquiry news corp phone hacking scandal honest observer knew amplify doomed outset spring amplify unveiled new tablet splashy launch sxswedu fall year one main customer guildford county public school north carolina announced recalling device use district report student charger melted flaw broken screen tablet rumor spread news corp winding amplify hardware business turned news corp wanted education business altogether placing amplify sale company sold emerson collective venture firm run laurene powell job undisclosed sum rose crowned fruit dove jeffrey epstein mit medium lab decade metoo multimillionaire sex offender florida got ultimate break julie k brown wrote miami herald detailing sweetheart plea agreement jeffrey epstein received helped stay prison despite federal indictment sexual abuse sex trafficking july year epstein arrested new york charged sex trafficking epstein committed suicide waiting trial act spawned numerous conspiracy theory unsealed document linked epstein sex ring girl forced sex number powerful men including prince andrew former new mexico governor bill richardson ai pioneer marvin minsky indeed many scientist continued take epstein money even jailed soliciting sex girl among joi ito head mit medium lab posted apology blog taking money lab well startup endeavor surprise huge outcry several professor resigned position lab cofounder nicholas negroponte hand said taking epstein money justified relying billionaire largesse made work possible article new yorker ronan farrow detailed ito others medium lab covered epstein donation le day published ito resigned accepting barlowpioneer award eff danah boyd called great reckoning tech industry wait next decade apparently come first great reckoning ito return tech inbloom shared learning collaborative introduced shared tool teacher app gate foundation vicki phillips wrote enthusiastically post explained possibility huge app store teacher netflix facebook capability love shared learning collaborative explained funded million grant gate foundation backed council chief state school officer organization state school superintendent major proponent common core state standard shared learning collaborative contracted wireless generation build shared learning infrastructure phillips said open source designed deliver le expensive connected way store student data potential make student learning personal like idea many warning bell post would set sli comprised several component including student data warehouse database educational content set apis would supposedly move administrative assessment behavioral data student various application main data store agreeing take part pilot district kentucky massachusetts new york illinois north carolina colorado louisiana georgia delaware shared learning collaborative named new ceo iwan streichenberger former executive interactive whiteboard maker promethean made formal debut rebranded inbloom sxswedu conference streichenberger appeared stage bill gate organization faced concern outset connection unpopular common core state standard help appeared yet another edreform effort bankrolled bill gate involvement news corp wireless generation irked parent new york city one district supposed pilot technology course fear data privacy security new york time natasha singer reported inbloom database included different data field student school administrator could fill detail seemed intimate including family relationship foster parent father significant reason enrollment change withdrawn due illness leaving school victim serious violent incident parent objected saying want kind information child transferred thirdparty vendor parent protest lawsuit prompted state withdraw participation pilot project inbloom suffered major blog state new york passed legislation restricted department education contracting company store aggregate student data little year launch sxswedu million funding later ceo streichenberger announced inbloom would shutting blockchain anything good reason use blockchain technology education otherwise blockchain prevent cheating stop people lying resume make easier student request copy school transcript improve college retention rate would prevented college admission scandal stop new ged ged exam developed wwii award enlisted soldier left high school could graduate credential indicating academic skill equivalent represented high school diploma ged since used whatever reason fighting fascism otherwise graduate high school still needed demonstrate prepared employment educational opportunity new ged test created education giant pearson went effect aligned meet new common core state standard revised exam much much tougher focusing college readiness rather previous emphasis workforce readiness new version also administered via computer arguably barrier many testtakers unfamiliar device price test shot credit card thank much people passed new test compared daily beast reported although passing rate ged inched since number testtakers remained low le half many people took test fair also number alternative ged day national center education statistic stopped collecting ged data entirely clear happened adult might seeking alternative credential know ged test got tougher thanks pearson federal funding adult education also taken hit decade alongside steady stream edtech propaganda overblown promise traditional diploma degree potential new privatized education alternative altschool altschool founded max ventilla former google executive q company aardvark acquired google worked tech giant previously departed google techcrunch speculated next project would educationrelated based tweet wife photograph pile educationrelated book embracing silicon valley mantra fail fast pivot ventilla took reading list jumped headfirst education hiring engineer teacher reportedly hiring one engineer every teacher starting new forprofit school almost immediately able raise venture capital idea million like andreessenhorowitz silicon valley loved idea altschool investment dollar kept rolling almost million total wired gushed altschool could save education blend personalized learning surveillance technology parent began push back claiming child used guinea pig startup untested software unproven teaching method ambitious plan scale altschool found burning money unsustainable pace million year according report began shuttering school instead opening june year altschool called quits rebranding altitude learning planning sell software professional development service school red knobbed imperial pigeon google education april oregon became first state open google apps education public school move going save department education million per year big buck hurting budget google boasted blog news full story state state district district going google well fair number pr microsoft opted stay suite office email product google introduced chromebooks although hardware largely panned chromebooks found receptive customer base education happy cheaper alternative expensive apple microsoft device perfect new online assessment designed common core apple sneer surprise chromebooks make laptop tablet sold school company launched classroom free pseudolms one many product aimed education market aimed making google platform education cost come free google continues data mine education product say exactly data collect student company faced several lawsuit student whether data scanned used advertising still google main business use student data fuel google business problem use teacher marketer tester private company creatively using public resource instance teacher time expertise build new market low cost ucla professor patricia burch told new york time part lengthy investigation google took classroom virtual charter school according recent data department education reported education week half virtual charter high school graduation rate percent school year thirtyseven percent school graduation rate percent graduation data remaining percent school masked various reason protect student privacy virtual charter school educating senior nationally determined adjusted cohort graduation rate according federal number state indiana example single virtual charter school graduation rate past four year one largest study online charter published stanford found student school le contact teacher week student traditional brickandmortar school day academic progress poor almost like going school yet despite abysmal performance virtual charter state struggled hold largely forprofit endeavor accountable odd lawsuit sure inc one best known virtual charter chain reached settlement state california accused false advertising inadequate instruction indiana two virtual charter accused counting toward enrollment thousand student either never signed completed class collecting almost million state funding along way ohio electronic classroom tomorrow ecot claimed serve student state official found virtual charter school significantly inflating number said school owed back million funding ecot forced close spite lousy education unethical business practice profit virtual charter inc example announced summer first time history revenue topped billion lausd ipad initiative los angeles unified school district awarded million contract apple paving way supposedly ambitious billion plan give every student district ipad big deal apple issued rare press release critic outset felt though plan expensive district would pay per device much higher retail cost district infrastructure inadequate new demand wifi capacity others said project rushed software curriculum built pearson ready still others feared sufficient training teacher incorporate device classroom necessary plan security indeed almost soon first ipads reached student hand report student hacked device truth merely worked bypass administrative control district placed district quickly put end student bringing ipads home dispute responsible lost stolen device rollout outset total fiasco local npr affiliate kpcc launched investigation district struck deal apple pearson first place publishing email superintendent john deasy pearson ceo marjorie scardino new allegation surfaced bidding process project unfair nt know would rfp one pearson sale executive said deasy resigned october district canceled contract apple december fbi raided district office taking box material pertaining investigation ipad program federal inquiry ended charge school board voted million settlement apple project money district later clarified would actually paid pearson classdojo new behaviorism classdojo founded thanks help million venture funding become one popular edtech apps decade used according website u school originally designed behavioral management tool monitoring tracking rewarding student behavior apt day describe communication tool classdojo connects teacher student parent build amazing classroom community classdojo helped behavioral engineering creep school home increasingly classdojo framed tool school wanting enhance social emotional learning developing animation lesson growth mindset grit mindfulness classdojo type behavior management product claim help develop correct behavior right mindset exactly correct behavior entail mean school entrust definition forprofit company version psychological expertise ben williamson observed socialemotional learning product fast policy network psy entrepreneur global policy advice medium advocacy philanthropy think tank tech r venture capital investment together loose alliance actor produced shared vocabulary aspiration practical technique measurement behavioural indicator classroom conduct correlate psychologicallydefined category character mindset grit personal quality socialemotional learning indicator encourage behavior measurable manageable williamson contends sel also encourages characteristic like malleability compliance fit nicely skill corporate vision education would demand student future worker everyone learn code past decade told everyone learn code told massive skill gap people studied science technology engineering math employer find enough skilled worker fill job field claim shortage technical worker debatable plenty data indicate otherwise wage stem field remained flat example many graduate certain stem degree find work field word crisis may myth powerful myth one terribly new dating back least launch sputnik satellite subsequent handwringing soviet technological capability technical education compared u system job future pundit politician claim know highly technical require computer programming told bureau labor statistic suggests otherwise two fastest growing job next decade home health aide personal care aide job pay le year tech industry funded plenty startup mention much narrative learning code politician got action well take nyc mayor mike bloomberg tweeted new year resolution would learning code codecademy thanks small part industry lobbying legislation passed state making computer science graduation requirement matter useful believe computational thinking clearly powerful industry reshaping curriculum technology industry continued struggle diversity despite claiming working hire people color woman indeed school forced bend silicon valley education molded suit industry remains best exclusionary worst utterly toxic luzon bleeding heart dove gamergate fall deadspin writer kyle wagner declared future culture war gamergate gamergate wrote glimpse skirmish unfold rhetorical weaponry siegecraft internet comment section brought bear culture fringe center seeing rehearsal mechanism toxic inhumane politics tested improved right month earlier angry exboyfriend published screed set motion series vile event changed way fight online new york time recently recalled post exhaustively documented last week breakup video game designer zoë quinn annotated punctuated screenshots private digital correspondence email facebook message text detailing fight rehashing sexual history manic allcaps rant made go viral exboyfriend claim picked user reddit abuse began gamergate online harassment campaign came called merged old troll tactic new troll tactic clear prototyped rise harassment influencers altright steve bannon breitbart milo yiannopoulos mike cernovich response education paying attention gamesbased education reckon gamergate reckon case may markus persson creator minecraft acquired microsoft like use word feminist insult claimed gender exist minecraft game main character blocky dude called steve cry loud verge recently wrote misinformation hate continues radicalize young people online teacher also grappling helping student unlearn incorrect dangerous information made lot u teacher cautious say want challenge student explore new way thinking see cultural meaning power video game understandably anxious even scared possible result year mooc new york time declared year mooc chose year mooc rather mooc big disaster wanted underscore much problem pr overpromising university startup believing hype hype massive open online course really began late huge enrollment three computer science course stanford offered free online fall semester along announcement mitx december starting january headline wild promise moocs incessant sebastian thrun announced leaving stanford found udacity predicting year institution world delivering higher education udacity shot one stanford professor andrew ng daphne koller unveiled new startup coursera mit harvard announced formation edx hundred million dollar investment funneled mooc provider university scrambled publicize partnership june university virginia board trustee fired president teresa sullivan contending slow jump mooc bandwagon even though school already talk join coursera moocs like many edtech product declared revolutionary hundred thousand student signing listen videorecorded lecture take online quiz chat forum technology despite deep computer science knowledge venturecapital backed moocs founder mostly crap hundred thousand student signed finished course successful mooc student already college degree potential counter claim free online class going extend educational opportunity everyone replace university education droppingout often dismissed feature bug student curious never planned completing course advocate insisted mooc provider started work closely university offer course credit low completion rate arguably mattered high profile announcement early california jerry brown san jose state university president mo qayoumi udacity ceo sebastian thrun unveiled pilot program marked first state san jose state would award college credit special version select udacity class program would end college know techcrunch cooed month later citing concern quality course san jose state put project pause lousy product sebastian thrun told fast company fall saying shrug even like word mooc investor continued fund moocs nonetheless coursera raised million richard levin former president yale led school failed online initiative alllearn back early briefly ceo udacity raised million even venture capital keep light moocs look sort revenue model gone mostly gone least free online course gone free certificate mooc revolution simply venture capitalism billion dollar venture capitalism funneled education technology decade list demonstrates show venture philanthropy billion dollar venture philanthropy funneled education technology decade list demonstrates show many way philanthropy venture capital worked handinhand former set policy agenda edtech latter fueled entrepreneur stoked market gate foundation continued outsized influence shaping public policy even though gate admitted initiative great track record joined decade tech billionaire mark zuckerberg example facebook founder made first high profile education donation announcing oprah new jersey governor chris christie newark mayor cory booker side plan give city school million zuckerberg launched chan zuckerberg initiative wife priscilla chan philanthropic company clear company foundation business structure give zuckerberg control investing forprofit company political cause new york time explained amazon jeff bezos also announced philanthropic effort spending billion funding space travel new philanthropic effort would fund operate network highquality fullscholarship montessoriinspired preschool underserved community use set principle driven amazon bezos wrote note posted twitter important among genuine intense customer obsession child customer philanthropist vision future education education technology mirror business child customer child data mined child education personalized antischool shooter software awful education technology development decade bankrolled billionaire philanthropist rather emerged much sicker impulse capitalism comfort making money tragedy emerged country inability address gun violence meaningful way despite decade saw steady rise number school shooting year school shooting victim cnn reported summer despite beginning decade shooting left second grader dead instead gun reform got antischool shooter software culmination sadly many trend list surveillance personalization data mining profiling internet radicalization predictive analytics many edtech evangelist would bristle tried insist school security system antischool shooting software edtech last year getting harder deny case perhaps clearly lot money made selling school product service shooting simulation software facial recognition technology metal detector camera social medium surveillance software panic button clear backpack bulletproof backpack bulletproof door emergency lockdown notification apps insurance policy bleeding control training program armed guard course armed teacher make sense invest school security sel edsurge asked choice education technology u apparently surveillance surveillance utter failure victoria crowned pigeon
117,Lobsters,education,Education,Tracking College Students Everywhere They Go On Campus Is The New Normal,https://www.techdirt.com/articles/20191226/12031843636/tracking-college-students-everywhere-they-go-campus-is-new-normal.shtml,tracking college student everywhere go campus new normal,tracking college student everywhere go campus new normal dept started penalizing student school experimenting pervasive tracking already happening company think pretty cool thing need support college student surveillance tracking,tracking college student everywhere go campus new normal normalizinglotsofstuff includingtheweirdos dept latest benefit education institute higher learning becoming inured roundtheclock surveillance month ago university alabama started penalizing student leaving home game early coach nick saban apparently angered student refusal stick around end blowout working fanmaker university instituted point system rewarded faithful fan sitting entire game awarding point placed closer top list ticket actually meaningful game minisurveillance app tracked student location game going outside range stadium network game docked point student total dropping list ticket buyer surveillance weird ultraspecific motivated perhaps powerful football coach nation school experimenting pervasive tracking time tied class attendance washington post report shortrange phone sensor campuswide wifi network empowering college across united state track hundred thousand student precisely ever dozen school use technology monitor student academic performance analyze conduct ass mental health instead gps coordinate school rely network bluetooth transmitter wireless access point piece together student movement dorm desk one company us school wifi network monitor movement say gather location data point per student every day school administrator thousand data point provide comprehensive tracking student movement focus classroom attendance assisted hundred tiny electronic hall monitor instructor notified missing student send text message email phone hope getting class disturbing aspect well anyone supposed determine student mental health nonstop location tracking nt explained article say school adding risk factor like um going library enough whole bunch tracking nt going make risk factor le risky mere fact student know tracked could discourage visiting oncampus mental health service participating event gathering critical school policy administration inevitably tracker going weaponized keep tab certain like maybe browner blacker student administrator might feel le academicallyinclined inevitably mean already happening company think pretty cool thing spotteredu experimented way make surveillance fun gamifying student schedule colorful bitmoji digital multiday streak real value may school official company ceo rick carter said split student group student color outofstate student review asked official would want segregate data student color carter said many college already looking pattern academic retention performance adding provide important data retention even first month recorded data class attendance performance help predict likely group student stay enrolled spotteredu utilizes bluetooth connection track student according post article already used least major college competitor like degree analytics use wifi job tracking student connection school network another state university student followed everywhere go surveillance tech company producing tech believe pervasive surveillance best solution class attendance issue number personal issue student might dealing brave new world student watchlisted skipping lunch simply deciding change habit degree analytics say algorithm detect change student behavioral state alert administrator staff university buying program pushing student homogeneity pretty much everyone saying education service year system nt provide nation independent free thinker provide nation industry cooperative employee wo nt rock corporate board climbed onboard classifier algorithm divide student body peer group fulltime freshman say commuter student system compare student normal behavior defined peer student deviate daytoday campus rhythm flagged anomaly company alert school official case want pursue realworld intervention added benefit regressing outlying student mean getting used level surveillance dealing real world employer track employee internet use vet social medium account making hiring decision also let know number rather people whenever deviation narrative tech believed individual tracked several student said mind system designed keep honest one freshman athlete temple university asked speak anonymously avoid team punishment said spotteredu app become nightmare marking absent sitting class marking late time defend campus staff member believed data tradeoff worth student question one seems asking least one buying selling tech seemingly forgetting fact student paying privilege attending school administrator acting like student owe school sort allegiance rather way around mean school pay close attention paying one athletic academic scholarship rest student body voluntarily exchanging money education nt show class tracking student everywhere campus make sense primary concern class attendance nt make sense plan recognize atrisk student intervene problem get worse establishing baseline using normal student help school staff swiftly ostracize wandering far algorithmic norm ensuring issue probably addressed professional help become adept camouflaging red flag relying pervasive surveillance police thing make thing worse everyone involved university long looked student nothing paycheck reducing data point remove humanity agency make far le likely concern issue addressed meaningful way thank reading techdirt post many thing competing everyone attention day really appreciate giving u time work hard every day put quality content community techdirt one remaining truly independent medium outlet giant corporation behind u rely heavily community support u age advertiser increasingly uninterested sponsoring small independent site especially site like unwilling pull punch reporting analysis website resorted paywalls registration requirement increasingly annoyingintrusive advertising always kept techdirt open available anyone order continue need support offer variety way reader support u direct donation special subscription cool merchandise every little bit help thank techdirt team filed college student surveillance tracking
118,Lobsters,education,Education,Hire and Train Haskell Junior Developers,https://cvlad.info/junior-developers/,hire train haskell junior developer,hire train haskell junior developer tl dr introduction real problem junior developer read story see one kindness confidence support training clarity possibly teach junior x day tweet joe kachmar conclusion,hire train haskell junior developer dec tl dr think reason people haskell actually hiring junior developer set success properly training introduction post sparked post haskell world knowledge chronological order snoyman manifesto call define safe subset haskell language common library provide documentation tutorial cookbook continuously evolve update help engineer use get boring haskell adopted parson note haskell hiring problem job senior developer reason overindulge fancy haskell making code needlessly complicated wrote simple juniorlevel haskell would able hire junior developer productive sampellegrini post point key problem lot extension need keep track make thing hard idea look good paper mean going easy maintain long run inclusivity might problem want phd requirement work haskell argue marginal benefit fancy typeshaskell understand feeling coming agree idea think mark wrong problem real problem think real problem putting job junior devs even giving chance usually give enough support training making sure know ask okay succeed really sure hiring junior developer might senior like think code writing complicated junior would take long able understand advise management junior possibly productive maybe want bothered training junior devs would rather work code instead maybe management like senior time wasted teaching junior devs whatever reason really think writing simpler code help much onboarding process lacking company culture welcoming junior devs set failure getgo regardless fancy simple code junior developer junior developer purpose article define haskell junior developer somebody able confidently use simple monad like maybe either e io list monad ideally would also crude understanding monad transformer necessarily mtl well able compose function reason adts perhaps importantly motivated learn haskell fp currently work two project haskell one project two junior haskell developer one briefly go detail project well mentoring experience order establish baseline working haskell long actually come oopland read story lot experience team lead hired trained mentored decent number junior devs oop day also three recently place currently work past year half main developer charge training making sure junior devs productive codebases see one pretty complicated besides fact use notoriously complex haskell library lens servant recursionschemes domain problem pretty complicated well essentially building automated prover rewritebased executable semantic framework project pretty standard servant app much go although use lens genericlens persistentesqueleto obviously servant prelude needed really speak junior developer general tell experience onboarding junior haskell developer project however would like add junior devs hired either senior year local university fresh graduate picked excited fp despite fact none previous professional experience related fp haskell proud say three junior devs great obviously take significant part credit smart hard working think thing contributed success kindness gone trying best kind supportive praise good job encourage come idea bring idea forward confidence make sure know okay know thing ton thing know make sure loud also make sure show find answer thing know course top literally telling okay ask question know stuff even feel like something know thing really blind spot support daily meeting make sure know everybody make sure ask everybody stuck need help work training least get comfortable make sure go thing fancy codebase least make sure go example show work make sure understand exercise work together particularly useful well clarity vitally important task crystalclear make extra sure task junior devs work take far beaten path try add commentsmore note task start rough sketch solution test anything help one three junior developer hired slightly familiar monad transformer time hired two familiar monad able get three contribute pr le week started within month noticed started able complete task little supervision one u little year able take complicated task major refactoring learning new concept etc pretty much possibly teach junior x day since subject hot saw tweet joe kachmar express idea want combat thing hard teach course junior able invent new type lens add new layer application monad stack reinvent genericlens nobody expecting week training sure junior developer add new rest api endpoint similar one already application use getter lens similar one already targeting different field reuse existing infrastructure write boring code using whatever level fancy haskell already guide sure sometimes try something new get stuck ghc type error ask help know okay knowing thing always someone available happy help help fixing error guiding understanding fixing problem hard focus multiple solution problem also worried boring haskell manifesto even harmful long run writing program really really hard nothing focus feeling better writing pure fp force clear precise thorough everything ignore nothing discard left implicitly get shove thing mutable global state writing program really really hard everyone hard junior developer also hard senior developer figured even close still terrible story error composability far ideal still lot competing library effect seem coming lot library explored discovered think team careful adding language extension choosing library project work think fancyness need taken account parson put slack fanciness code gated size mentoringtraining budget value hiring junior totally agree although would also add another important aspect worth considering benefit said fancyness many reason one might want stray beaten path fancy typelevel code might save ton code duplication might add feature would otherwise make code brittle hard maintain project may worth think blessed set library extension help streaming library get picked conduit pipe streaming said think wrong thing focus conclusion need stop overappreciating hard use fancy library like servant lens recursionschemes give junior developer fighting chance surprise think anything make company junior developer success story nonreproducible anywhere else local university focus fp haskell one course teach haskell pretty much actually forced take route company haskell locally far know find haskell developer around think reproducible anywhere pretty much codebase need open junior position give support need succeed different experience hard find junior developer somewhat familiar monad go convince team actually living ivory tower hard special understanding use language extension library teach junior developer use
119,Lobsters,education,Education,Everything I learned and built in 2019,https://www.taniarascia.com/2019-into-2020/,everything learned built,wrote article understanding bit byte base writing hex dump javascript node using content editable element javascript react everything know software developer without degree end era migrating wordpress gatsby writing snake game terminal objectoriented javascript nodejs using react router single page application using context api react hook class getting started vue overview walkthrough tutorial display build status test coverage badge javascript project making api request postman curl writing simple mvc app plain javascript create deploy nodejs express postgresql rest api heroku roll comment system static site developer blog follow understanding bind call apply javascript full stack authentication cooky local storage cs art science nightmare everything know devto started opensource project takenote takenote takenote contributor takenotedev web miscellaneous moved wordpress gatsby end era migrating wordpress gatsby presentation getting started vue introduction react javascript chicago made commits patron let know kofi email newsletter mailchimp sendy substack substack million session december december drew thing fish goat learned security authentication authentication underlying concept cpu work bit byte base webpack webpack boilerplate advanced testing jest supertest react testing library vue vuex getting started vue react hook context building crud app react hook context routing redux takenote typescript tic tac toe takenote gatsby want learn write bitwise operator generator callback promise asyncawait typescript webpack redux testing swagger vuex file uploads learn learning public graphql data structure algorithm web apis web component scroll event loop another language note conclusion hello taniarasciacom,time another revolution around sun another year review previous year year pretty long time sometimes nt feel like learned accomplished much ca nt remember find post really helpful look back realize much learned course year unfortunately fortunately learning much fast nt able write least track try best get resource world reference help others wrote article generally write article month others thrown nt seem like much often long informative walkthrough tutorial deepdives subject nt many small snippetstyle article note high writing travelling fulltime several month list ascending date understanding bit byte base writing hex dump javascript node using content editable element javascript react everything know software developer without degree end era migrating wordpress gatsby writing snake game terminal objectoriented javascript nodejs using react router single page application using context api react hook class getting started vue overview walkthrough tutorial display build status test coverage badge javascript project making api request postman curl writing simple mvc app plain javascript create deploy nodejs express postgresql rest api heroku roll comment system static site developer blog follow understanding bind call apply javascript full stack authentication cooky local storage cs art science nightmare everything know comment like upvotes user interaction website doubleedged sword like clean fast nt spend time mental energy moderating comment however average new visitor hard know trust resource social confirmation wrote one article another entity year one digitalocean got posted devto one mapset awaiting publication go next year list planning write next year advanced j topic started opensource project started two project takenote work progress almost complete takenote takenote biggest ambitious project yet markdown notetaking app web written typescript functional react redux make unique ultimately store note github repo therefore app backend authentication storage github right app complete functionality ready using local storage store data sync github apis complete takenote huge first largescale collaborative effort built help contributor one point even reached top spot github trending overwhelmed pull request week two excited get finished learned ton typescript redux hook building current example site takenotedev different everything else done pretty different people javascript emulator interprets rom used microcomputer play simple game like pong tetri space invader emulator done javascript make one unique generic cpu interface us hook multiple different graphical interface browser version terminal version native gui version share cpu learned ton writing plan write whole process totally finished complete moment well view browser version web however us key input listed anything might difficult add instruction miscellaneous made small project moved wordpress gatsby hard believe site wordpress nt middle finally moved gatsby wrote end era migrating wordpress gatsby migrated help others wanting make switch time consuming incredibly worth able write post markdown amazing ca nt imagine way presentation public speaking strong suit like least one per year keep practice year getting started vue introduction react javascript chicago made commits statistic nt really matter fun little graph make page little visual discrepancy year rest current job one organization github one contribution make work counted towards github contribution explaining nearly every monday friday green weekend opensource project patron wow amazing humbling much support nt started using patreon recently really happy people decided support right system voluntary supporter basis sure offer patron signing idea please let know also received lifetime amount coffee donation kofi thank much email newsletter article newsletter subscriber hate spam basically never want receive email nt directly person send email possible usually around one per month write something new far newsletter journey mailchimp sendy substack mailchimp good price become obnoxiously high reach limit subscriber something along line lowest tier way beyond budget since newsletter simple subscription service sell anything make money bought sendy set aws server s email unfortunately aws kept sending email directly spam reason email back forth support finally switched week later sent email acknowledging issue end fixed already moved use substack awesome seems good true get send simple email free hopefully stick around million session december december session website compared previous year traffic come organic search google drew thing drew thing including goat fish gift fish pen watercolor pencil goat charcoal nt draw nearly enough hopefully get drawing painting next year learned learned much year major one security authentication paranoid security good amount research project built around desire improve understanding security best practice authentication article laid save authentication state front end secure way huge allows comfortable creating entire architecture project move juniormidlevel developer category make feel confident work underlying concept cpu work ongoing project created cpu learned memory register stack instruction working binary hex big little endian masking buffer bitwise operator ton want write subject far written bit byte base webpack webpack always something tried avoid cost nt entirely understand use decided needed learn well webpack come often basically front end project wrote webpack boilerplate wellcommented good starting point suitable production learned module loader plugins major webpack concept boilerplate necessity addons typescript react require adding single loader comfortable setting webpack config production instead using create react app lot control advanced testing year nt done much testing beyond setting unit test jest year got ton practice using supertest nodeexpress react testing library react component test learned mocking api call simulating user interaction much hope write indepth article testing next year vue vuex spent much team work building enterprise scale app vue giving lot experience vue vuex ca nt decide like vue react though really wish react something like emit feel comfortable using equally point wrote getting started vue react hook context ended writing building crud app react hook teach react hook brand new time wrote article react context routing built takenote entirely functional react hook redux though still find react class intuitive personally react everevolving use daily basis sure end learning bunch react next year redux put learning redux long time every time looked seemed overwhelming different anything else done built takenote redux learning something alongside building alongside learning typescript bit challenge understand redux useful point app might need example built app plain context recently become large enough feel like convert redux soon typescript never used typescript year decided write tic tac toe typescript teach applied takenote sure quite typescript evangelist people yet find interesting useful learn helpful catching certain class bug want write overview typescript soon gatsby moved gatsby chose static site generator fast fact us react familiar got small amount graphql experience still feel like need learn much want learn thing learned want write forget new thing want learn write thing know want write next year bitwise operator javascript generator javascript deep dive callback promise asyncawait overview typescript using webpack building redux react application testing react testing library setting swagger api doc node using vuex file uploads javascript browser node building dynamic step wizard writing also like write realworld debugging learning new concept learn learning public page overview bunch topic learned already one want learn summary graphql data structure linked list stack queue hash table binary tree heap graph algorithm sorting bubble insertion selection merge heap quick searching linear binary web apis websockets drag drop web component improve knowledge scroll improve knowledge event loop another language nt decided lua python go something else like get experience another language outside javascript php note lot code year much hobby nt record song nt draw paint enough thing hope next year abstract chess set printer pawn bishop knight rook king queen settler catan coaster set cnc machine brick tree sheep wheat stone desert make least painting wall involve getting inkscape illustrator learning properly make svgs also want make art painting need figure get back music really dropped last year well like buy keyboard get back learning song piano health goal get mile bike odometer run mile lose lb finally really would like translate javascript learning book huge task need broken working refining noncoding goal bit conclusion great year learned ton went fast excited thank reading contributing emailing donating please nt hesitate send email hello taniarasciacom question comment idea great rest year
120,Lobsters,education,Education,Release of CyBOK Version 1.0,https://www.cybok.org/news/release-of-cybok-version-10,release cybok version,,pleased announce release cybok version compilation knowledge area determined scope document following extensive period community consultation alongside cybok version additional resource use showing knowledge dependency within ka relationship ka dependency external knowledge cybok offer range opportunity transforming education training programme provide rigorous knowledgebase study strengthen update focus various professional certification programme
121,Lobsters,education,Education,What I've learned over 10 years on Stack Overflow,https://blog.mattbierner.com/10-years-stack-overflow-learnings/,learned year stack overflow,asked question posted answer covered stack overflow culture asking question skill guidance difference bad question good question asking good question guarantee answer correct answer answer like almost never ask question stack overflow observing question people ask great way learn product v code boundary question bug report feature request blurry developer human look dude literally person created xkcd easy become cynical eternal september sometimes want say thank sometimes wonder happens answer gamification goodhart law reputation actually mean think would productive without stack overflow stack overflow miracle p,approaching ten year anniversary stack overflow past decade use site understanding evolved quite bit thought share learned along way writing moderate user engaged broader stack overflow community culture day pretty much answer question related v code since product work past however active wider range topic told ten year asked question posted answer browsing countless others jon skeet covered stack overflow culture far better authoritatively ever could element writeup inspired writing although ultimately candid reflection experience stack overflow site well use today discussion going fairly highlevel assume deep familiarity site history without ado learned using stack overflow past decade asking question skill seems easy first blush enter word text box hit submit let internet magically solve problem taken almost decade figure word put damn text box actually get result still learning everyday fact asking good question seriously appreciated skill filing good issue report matter first even define good question stack overflow provides guidance matter listing quality within scope site objective answer already asked researched clearly state problem usually minimal easily reproducible example ok something like clearly stating problem actually look like practice information relevant sometimes feel like ask good question first need know answer unfortunately little text box much help much wonder many new user end posting low quality question often feedback get question closed link confusing documentation lucky many lowquality question silently downvoted disappearing endless question backlog asking good question skill good news though one work get better learned primarily looking whole lot question answer noting work information useful get way putting new skill work asking question still intimidating make best effort treat whatever happens learning opportunity even admit bit embarrassed clueless early question although perhaps twinge embarrassment evidence much better become asking question since starting site difference bad question good question going sugarcoat thing question simply bad question question consisting screenshot text work bad question asker clearly made little effort posting even question really demand work worth time help someone interested learning value help begin learning stack overflow consider question titled remove blue border homepage consists multi paragraph writeup appears talking cs outline property without ever actually using word cs outline even though question may go many stack overflow recommendation argue good question bad question either least asker tried provide something even know provide effort count openness engage learn many stack overflow member however likely treat two question way closed unfortunate likely scare away many inexperienced user chance learn ask better question even site work truly bad question worth wasting time assume user asking good question intentionally asking good question want ask good question know blindly penalize beginner without engaging providing feedback ever supposed learn asking good question guarantee answer simple question answered large number people generally get fastest response stack overflow question binary search javascript html great five answer hour arcane specialized question however le likely get answer matter well stated question chance question answered also rapidly fall time go question get pushed first page user query get lost ether week pray someone knowledgeable stumble across chance search slap bounty question correct answer answer like get handful downvotes every month term unpopular answer answer essentially say way currently designed possible reason x bug need fixed upstream thing case like someone posted solution even good workaround instead suspect happening someone like answer say downvote understand also mean correct inverse also true course good answer necessarily tell want hear best answer address original question go cover alternative way thinking problem sometimes even answer user original question post big writeup trying bad idea time expression simplified updown vote like button going lose important distinction common problem internet many many social apps distinguish support think well put even like agree overall though despite downvotes every month feel stack overflow community pretty good job voting objectively let try keep way almost never ask question stack overflow longer used site le likely become post question part growth developer many problem face current work complex state simple question specific ever much help anyone else learned site limitation avoid asking question know almost certainly get good answer even learning new language framework rarely post question super genius anything quite opposite fact year using stack overflow whenever question always begin thoroughly convinced could possibly first person ever question search almost every time find someone already asked exact thing two year ago observing question people ask great way learn product currently work v code make habit browse question tagged vscode stack overflow great way learn code used real world type problem running could documentation apis improved something thought perfectly clear causing much confusion question valuable signal product used real world key though answer question move also try understand user question first place maybe discoverability problem assumption built product even realize made question also helped uncover countless bug inspired lot feature work maintain product developer treat stack overflow dumping ground worse question graveyard regularly check question asked answer posted mean need answer every question however signal stack overflow provides valuable ignore boundary question bug report feature request blurry follow last point fair number v code question run across stack overflow technically bug report many others technically feature request example stack overflow question titled v code crash x actually bug report v code crash pretty much anything posting answer bug report question counterproductive asker may happy workaround never file proper bug report product case usually leave comment telling user file bug report github time distinction subtile consider question titled javascript intellisense work v code depending precisely javascript intellisense working question technically could fall three bucket user configuration issue real question belongs stack overflow expect intellisense work case bug report expect intellisense work case feature request end day distinction matter user want get intellisense working although care distinction project maintainer ultimately matter much either question bug report feature request way expressing idea user expected code something product perfect user would never need ask question since would intuitive would exactly want time least clearly explain developer human human emotional human irrational human jerk always course sometimes believe developer human fiction u developer like repeat consciously work computer must rational understand cryptic symbol must smart software eaten world must great woo go u simply true least true lord help rest population even stack overflow tool professional built objective knowledgebase even super specific v code bubble site still come across sort shenanigan logical fallacy insult tribal thinking fool probably spock think mean try leaving negative human trait door look dude literally person created human every often something happen stack overflow really tick example seeing user confidently post misleading plain wrong answer question involving part v code created familiar strangely often seems wrong answer likely someone state definitive fact see happen sometimes go xkcd try post correction comment time spawned heated twenty comment long thread woe upon daring question expertise something created stop always trying right damn nerd right easy become cynical eternal september faced endless stream low quality question easy become cynical user never heard google even know put together coherent sentence person literally dog sometimes browse ten new question day seeing endless stream low quality question coming day day easy start becoming dismissive even cynical cynicism even leak behavior site anyone dealt overenthusiastic stack overflow moderator ever spent hour two researching composing question downvoted oblivion without explanation attest sure user putting zero effort bad question believe majority low quality question coming well intended albeit clueless user always try remember like beginner start really know site actually work case even know right word use express problem facing tough place trust suck get eviscerated trying ask question stack overflow done lot help new user clearly much need done personally trying find good balance efficiently maintaining site standard compassionate inexperienced user could involve explaining voted close question posting comment prodding user share information know still lot room grow hand qualm downvoting user reputation still posting question best v code theme javascript development upload blurry screenshots code instead text sometimes want say thank stack overflow much thank culture point seem recall even automatically stripping hi thank question maybe still tested recently anyone dealt customer support well know much politeness get way even feel artificial sometimes someone something completely beyond site way reward clicking little vote arrow shitty efficient require turning soulless automaton side channel could allow authentic communication connection individual provided something user want opt course sometimes wonder happens answer stack overflow transactional people post question people answer question happens question answered know sometimes wonder though answer even useful end sort neat project unblock asker learn afterwards impossible wish course mandating user disclose question used would obviously hugely problematic even could make happen interesting ponder gamification making thing game still get little flutter see little badge status bar bit gamification like probably reason coming back decade year gone also started question type game stack overflow winning really mean sure point system started best intention reward people asking helpful question posting helpful answer add high score goodhart law going kick subset user start optimizing activity maximizing real value maximizing point last bit important reputation actually mean think reputation equal technical competence communication ability even understanding stack overflow work supposed work say reputation mean anything mean stack overflow implies word reputation suggests instead grown understand reputation measure impact understand consider two hypothetical answer posted site one common git operation answer two minute google search post line answer one obscure graph theory work maybe hundred people entire world answer post paragraph example code explains issue solve five year first answer get viewed five million time accumulates upvotes second meanwhile get view two measly upvotes feel deeply unfair sense reward essentially right place right time luck mind understanding game huge leg hand first question actually helped heck lot people second ever perhaps recognize way although correct recognition really heaping reputation consider stack overflow reputation measure impact real reputation measured simple point based system reputation emerges community advice listen see helping others trust probably going different people depending whether working php v io said sure stack overflow would user motivated earned tricky dick fun point instead reputation would still engage much point system honestly probably myth stack overflow reputation equal real reputation benefit stack overflow also active user like boosting reputation spock thing life get real picture look past number resume come boasting stack overflow fun point take quick look see person communicates kind questionsanswers posting exceptional case keep mind raw stack overflow number weak signal anything beyond person stack overflow ability sadly least experience often even would productive without stack overflow every time need something remotely complex git wind stack overflow every time need something simple bash wind stack overflow every time get weird compiler error wind stack overflow productive without intellisense search engine stack overflow people book make bad programmer would probably fail lot test whiteboard problem seriously every time use sort javascript look supposed return v v write j day developing world popular editor javascript stack overflow amazing tool fool would use tool available instead eternally stupid like save brain capacity important stuff storing plot seinfeld coming elaborate pun post certainly lacking future one quite different nature make stack overflow miracle stack overflow let anyone regardless background technical ability post programming question question answered complete stranger presumably taking time away life career help expect reward fact stack overflow exists actually work well miracle sure always live promise trying despite flaw site helped countless people year including stack overflow around forever something better come along one day hopefully something learns stack overflow mistake also capturing best quality however hope never learn take stack overflow granted reference living community constantly built bitbybit individual care thing understand guaranteed even small helping well intended yet clueless positive impact critical site care know could better p still high school joined stack overflow decade ago starting write javascript eclipse back seemed like answer posted began using jquery even though clue stranger took time help think fully appreciated time remember people always want stack overflow different question answer site homework solver comprehensive living reference yet much site grown past decade despite flaw stack overflow core still open community stranger help learn grow beautiful thing glad part past ten year hope continues personally hope learn much next ten year past decade
122,Lobsters,education,Education,Mind the Gaps,https://asthasr.github.io/posts/mind-the-gaps/,mind gap,mind gap know know exercise reading review tl dr,mind gap truly accumulate effort long time advance xunzi secret many programmer selftaught u included lack formal credential related computer science worked good programmer graduate high school strange profession skill often acquired simply side effect tinkering hear many civil engineer corporate attorney enjoyed playing zork dad office computer downside relative accessibility curriculum making programmer university often presume computer science student know program get campus curriculum aimed producing computer noble necessary pursuit one produce knowledgeable working programmer graduate program often end little better anyone else advanced compiler optimization technique savmart need repeat previous order button site next tuesday even worse student stumble industryoriented curriculum community college bootcamp c student university sometimes get education anachronism much theory student taught best framework accordance desire local industry graduate capable acquire capability effort think junior programmer first year career taught language two may know theory may may still know relevant real problem may tested rigorously trivia futureproof technology like silverlight know program muddle improve know know gap programmer knowledge source famous imposter syndrome tend feel everyone around u know despite feeling someone going find fraud moment hard know exactly feel way call syndrome way escape amorphous feeling inadequacy try find gap fill knowledge gap pernicious though daytoday work without ever really understanding deficiency lot gap show immediately show need modify debug code year without external feedback may never understand class might better structured differently entirely possible continue get paid year year subpar work hand conscientious programmer probably want gap become visible best way know discover exercise reading thirdperson review mean simple code kata either mean flavorofthemonth agile manual rubberstamp peer review study work force comfort zone challenged struggling understand building understanding exercise find site present exercise varying degree difficulty different category able complete editor choice real language bother site require write pseudocode web editor similarly avoid excessive gamification exercise point focus good site include try find problem hard particular interest easy problem find difficult supposed easy concept missing would make easy addition lucky practice field requires material working book exercise copy code sample may surprised stick year since read still remember one first exercise c programming language write program print celsius fahrenheit conversion table exercise taught printf reading genre computer book think extruded technical product produced fill publisher spreadsheet usually title like mastering extremely specific software package version teach something complicated hour worthless book try timeless make categorical mistake example many book pattern name ended quickly dated cataloging technique dealing java deficiency language became popular even java evolved many technique became unimportant trivial instead seek difficulty concept example going working mathematical turing machine time soon petzold annotated turing still excellent book wiring ic build computer either code also excellent may mostly write web application distributed algorithm communicating sequential process still teach lot go wrong thing happen almost time javascript may forte little schemer thinking forth may give valuable surprising perspective one gap always mathematical concept disliked math school thanks american educational system focused lot professional reading book like lawvere conceptual mathematics knuth concrete mathematics complement programmingfocused book like sedgwick algorithm review honest skilled reviewer worth weight gold someone take code review semantics formatting tool take advantage noticed many people view code review formality cursorily glance twenty line pr throw lgtm comment bob uncle want someone bit slow reject pr approve second necessity code review openmindedness course someone else perspective valued immediately viewed attack someone say think hard read take word ask question hard read think would better alternative discussion valuable never say like way late change moment thrown away goodwill reviewer wasted time tl dr boil aphorism find something feel like genuine effort make excuse either easy say want learn tired week read exercise ask question even feel like learned new concept filled gap mean done find next one fill learning proceeds death stop order learning stopping point purpose given even moment pursue human give beast xunzi
123,Lobsters,education,Education,Democratizing AI – Finland offers free AI education to every EU citizen,https://www.elementsofai.com/eu2019fi,democratizing ai finland offer free ai education every eu citizen,press release technology industry finland centennial foundation,finnish presidency council eu decided invest people future skill make element ai online course freely available official eu language language translation provided european commission specifically directorategeneral translation collaboration communication network content technology ambitious goal educate european citizen start launching new language spring course already available english global finnish swedish estonian german norwegianfinland hold presidency council european union july december release supported technology industry finland centennial foundation
124,Lobsters,education,Education,A new way to make quadratic equations easy,https://www.technologyreview.com/s/614775/a-new-way-to-make-quadratic-equations-easy/,new way make quadratic equation easy,loh produced video method,easy imagine mathematician must exhausted problem better way derive quadratic formula enter poshen loh mathematician carnegie mellon university pittsburgh found simpler appears gone unnoticed yearsloh approach rely completing square difficult mathematical trick indeed simple enough work general method meaning student need remember formula derivation potential demystify quadratic formula student worldwide saysthe new approach straightforward start observing quadratic equation factorised following way righthand side equal xr x would root quadraticmultiplying right hand side give true br crsnow come clever bit loh point number r add b average seek two number form z single unknown quantity say multiply number together get expression c simple rearranging give mean solution quadratic equation voilà quadratic formula general version derived dividing equation give repeating process significant improvement previous method loh show simple examplefind root following quadratic traditional method would work value b c plug quadratic formula loh approach solves problem intuitively first step think two root equation must equal product must write root attempting problem using traditional method much trickier go give go new approach much easier intuitive least require formula memorized allan interesting question nobody stumbled across widely shared method beforeloh say would actually surprised approach entirely eluded human discovery present day given year history topic billion people encountered formula proof yet technique certainly widely taught known loh searched history mathematics approach resembles without success looked method developed ancient babylonian chinese greek indian arab well modern mathematician renaissance today none appear made step even though algebra simple known centuriesso loh think related way conventional approach prof quadratic equation two root perhaps reason actually mathematically nontrivial make reverse implication always two root root sum product c saysloh mathematics educator popularizer note discovered approach analyzing mathematics curriculum schoolchildren goal developing new explanation derivation emerged processthe question widely spread quickly speed adoption loh produced video method either way babylonian tax calculator would surely impressedref simple proof quadratic formulacorrection amended sentence say method never widely shared included quote loh
125,Lobsters,education,Education,"A curated list of awesome resource for public speakers, trainers and so on",https://github.com/fsciuti/awesome-speaker,curated list awesome resource public speaker trainer,awesome speaker view github page table content presentation editor gitpitch google slide marp mdxdeck patat prexent revealjs slidescom source code tool asciinema carbon code surfer terminalizer ttygif slidescodehighlighter tool binder super simple highlighter chrome canvas photopea platform papercall sessionize slido sharing platform slideserve slideshare speaker deck learning platform katacoda streaming webinar platform streamyard zoomus gotomeeting blog tutorial misc community creative common attribution international license,awesome speaker curated list awesome resource public speaker trainer view github page table content presentation editor online editor presentation framework markdowndriven slideshows slide tool gitpitch markdown presentation tech conference meetups training google slide google slide create edit collaborate present wherever marp marp markdown presentation ecosystem provides great experience create beautiful slide deck mdxdeck awardwinning react mdxbased presentation deck patat patat presentation atop ansi terminal small tool written haskell allows show presentation using ansi terminal prexent create fast live beautiful presentation markdown powered phoenix liveview ability run edit live code language interpreter revealjs framework easily creating beautiful presentation using html slidescom slide suite modern presentation tool available right browser source code tool code embedding tool image generator asciinema help record terminal session sharing web without screen capture carbon create share beautiful image source code code surfer react component scrolling zooming highlighting code terminalizer record terminal generate animated gif image share web player ttygif convert terminal recording animated gifs slidescodehighlighter highligth code paste everywhere tool useful tool presentation binder transform github repository set interactive jupyther notebook super simple highlighter add highlight text web page chrome extension try restore subsequent visit chrome canvas simple white canvas free imagination photopea advanced free online photo editor platform conference manager call speaker manager ticket manager papercall papercall enables event organizer speaker easily manage call paper talk submission sessionize smart way manage call paper speaker agenda conference cloud based safe easy slido empower audience ask question vote poll part discussion using simple q polling tool sharing platform social network sharing platform slideserve upload share presentation online slideshare share know love presentation infographics document speaker deck share presentation online simply upload slide pdf turn beautiful online experience learning platform katacoda create online selfpaced learning resource virtual environment test software streaming webinar platform streamyard easiest way create professional live stream zoomus enterprise video conferencing realtime messaging content sharing gotomeeting seamless video meeting participant blog tutorial news tutorial tip trick best practice misc community thematic community around world work licensed creative common attribution international license
126,Lobsters,education,Education,Crypto for Kids (A Book that is a Labyrinth),https://sustrik.github.io/crypto-for-kids/,crypto kid book labyrinth,,professor krankenstein influential genetic engineer time spring almost incidentally invented terrible biological weapon known humanity took three second realize invention fall hand one superpower hand common idiot really could well mean end human race wasted time destroyed artifact lab burned note hard disk computer used project seeded false information place lead future investigator track left last remaining copy doomsgerm recipe contemplating whether destroy yes destroying would keep world safe breakthrough genetic engineering used different way could solved hunger problem producing enough artificial food feed swelling population earth global warming went catastrophic could used engineer microorganism superefficient sequestering carbon dioxide methane atmospherein end decided destroy rather encrypt recipe put tungsten box encase box concrete drop cruise ship mariana trench story would ended one hendrik koppel rather simpleminded person professor krankenstein hired help move tungstenconcrete box around professor even met destroyed doomsgerm research still hendrik somehow realized issue interest superpower professor krankenstein sleeptalking sold information location box several government beginning october news hit american aircraft carrier heading direction mariana trench apparently also russian nuclear submarine way location chinese government sent fleet smaller versatile oceanographic vessel initial bout despair professor krankenstein realised superior knowledge position box could possibly get location first destroy box using underwater bomb used life saving buy rusty old ship called amor patrio manned closest collaborator set pacific ocean thing nt gone well news reported american chinese approaching area amor patrio engine broke crew working around clock fix finally fixed approached mariana trench point news reached box found russian transported moscow stored vault underneath kgb headquarters whole division spetsnaz guarding building building filled special agent trained twelve way silently killing person continue reading section douglas ariz jan two american army officer whose seizure friday afternoon resulted fight united state cavalryman two latter killed one wounded three taken prisoner captured american soil according announcement today colonel george h morgan arizona district commander ordered investigation immediately learning affair incident closed far concerned colonel said developed today frequent sniping mexican patrol men vicinity place figthing took place know today think precipitate action soldier crossing line rescue officer seized united state soil partly due enmity mexican shown toward regrettable affair prospect repetition local difficulty according report commander cavalry troop left douglas friday practice march member recruit noon camped vicinity slaughter ranch mile east serveral hunting party formed among one composed captain david h blakelock lieutenant george j lind officer within approximately yard international line headed east suddenly covered gun four armed mexican commanded halt informed prisoner time four mexican custom officer opened fire upon party three private soldier rabbithunting farther away line yard officer two soldier dropped earth returned fire holdng ground third ran camp tell comrade taken place take number previous section factorize prime continue reading section pointed largest prime imagine two oclock time five hour seven oclock right easy trick question ten oclock time five hour thing fifteen oclock hand move beyond one oclock addition subtract result larger question imagine friend call monday say going meet hour weekday exactly hour meet solved problem take time hour part multiply seven continue reading section full story yet let assume king quest point realizes small item say specific hairpin needed complete quest clearly remembers used hairpin idea whether still possession exactly sends messenger home asking counsellor look hairpin let know whether found king enemy need information well next day messager returning ambush take message unfortunately message encrypted messager know nothing pin many experienced cryptographer working around clock day row decrypt message avail finally kid wanders war room asks thinking say know nothing high art cryptography way compare esteemed savant room know though king pallace ten thousand room full luxury picture finely carved furniture find hairpin place take week month hairpin would take least long could send messenger back negative reply messager captured way back next day mean single thing hairpin found encrypted message say legrand reheated parchment submitted inspection following character rudely traced red tint deathshead goat said returning slip much dark ever jewel golconda awaiting solution enigma quite sure unable earn yet said legrand solution mean difficult might led imagine first hasty inspection character character one might readily guess form cipher say convey meaning known kidd could suppose capable constructing abstruse cryptograph made mind simple specie however would appear crude intellect sailor absolutely insoluble without key really solved readily solved others abstruseness ten thousand time greater circumstance certain bias mind led take interest riddle may well doubted whether human ingenuity construct enigma kind human ingenuity may proper application resolve fact established connected legible character scarcely gave thought mere difficulty developing import present case indeed case secret writing first question regard language cipher principle solution far especially simple cipher concerned depend varied genius particular idiom general alternative experiment directed probability every tongue known attempt solution true one attained cipher u difficulty removed signature pun word kidd appreciable language english consideration begun attempt spanish french tongue secret kind would naturally written pirate spanish main assumed cryptograph english observe division word division task would comparatively easy case commenced collation analysis shorter word word single letter occurred likely example considered solution assured division first step ascertain predominant letter well least frequent counting constructed table thus character english letter frequently occurs e afterwards succession run thus h n r u c f g l w b k p q x z e however predominates remarkably individual sentence length rarely seen prevailing character beginning groundwork something mere guess general use may made table obvious particular cipher shall partially require aid predominant character commence assuming e natural alphabet verify supposition let u observe seen often couple e doubled great frequency english word example meet fleet speed seen agree c present instance see doubled le five time although cryptograph brief let u assume e word language usual let u see therefore whether repetition three character order collocation last discover repetition letter arranged probably represent word inspection find le seven arrangement character may therefore assume semicolon represents represents h represents e last well confirmed thus great step taken established single word enabled establish vastly important point say several commencement termination word let u refer example last instance one combination occurs far end cipher know semicolon immediately ensuing commencement word six character succeeding cognizant le five let u set character thus letter know represent leaving space unknown eeth enabled discard th forming portion word commencing first since experiment entire alphabet letter adapted vacancy perceive word formed th part thus narrowed ee going alphabet necessary arrive word tree sole possible reading thus gain another letter r represented word tree juxtaposition looking beyond word short distance see combination employ way termination immediately precedes thus arrangement tree substituting natural letter known read thus tree thr place unknown character leave blank space substitute dot read thus tree thr h word make evident discovery give u three new letter u g represented looking narrowly cipher combination known character find far beginning egree plainly conclusion word degree give u another letter represented four letter beyond word degree perceive combination translating known character representing unknown dot read thus thrtee arrangement immediately suggestive word thirteen furnishing u two new character n represented referring beginning cryptograph find combination translating obtain good assures u first letter first two word good avoid confusion time arrange key far discovered tabular form stand thus represents e g h n r therefore le ten important letter represented unnecessary proceed detail solution said enough convince cipher nature readily soluble give insight rationale development assured specimen u appertains simplest specie cryptograph remains give full translation character upon parchment unriddled good glass bishop hostel devil seat twentyone degree thirteen minute northeast north main branch seventh limb east side shoot left eye deathshead bee line tree shot fifty foot said enigma seems still bad condition ever possible extort meaning jargon devil seat deathsheads bishop hostel confess replied legrand matter still wear serious aspect regarded casual glance first endeavor divide sentence natural division intended cryptographist mean punctuate something kind possible effect reflected point writer run word together without division increase difficulty solution overacute man pursuing object would nearly certain overdo matter course composition arrived break subject would naturally require pause point would exceedingly apt run character place usually close together observe m present instance easily detect five case unusual crowding acting hint made division thus good glass bishop hostel devil twentyone degree thirteen minute northeast north main branch seventh limb east side shoot left eye deathshead beeline tree shot fifty foot even division said leaf still dark johannes trithemius medieval german abbott known book polygraphia said first published book cryptography however addition polygraphia published book called steganographia seems magic describes way deliver secret message help angel book induced lot opposition read manustcipt frightened appeared demonic name thought book appropriate pious christian reader book finally published year trithemius death also contained short work called clavis key simple term explains seemed incomprehensible diabolic language book book ii actually ciphertexts despite book believed magic put index prohibited book catholic church said book iii explained clavis moreover much shorter previous two book contains almost explanatory text possibly unfinished difference book ii book iii led expert believe former two book cryptography blahblah angel cover book iii really magic exercise going decode book iii remained unsolved year prove trithemius magician reason putting work index check message book iii section lxxxviii look carefully try notice anything may help decypher nt lazy actually take look chance getting feeling actual cryptanalysis feel like spent least xv minute trying solve puzzle wit proceed section lxxv get first hint portal suddenly opened starboard ejecting fleet imperial pursuit vessel propulsion system ship got hit shield activated tried switch backup drive charged much already dangling dozen tractor beam much fight came picked one would pick box frozen strawberry supermarket must passed pressure loss next thing remember plain white room hand cuffed behind back sound door opening person walked field vision took second realize man wearing oldfashioned black suit bowler hat sign baggy trouser seen official portrait smiled showed glistening golden teeth left side healthy camellike teeth right realization hit beylerbey qgdzzxoglu person peace upon said sat side coffee table made comfortable put umbrella floor little matter discus said took paper pocket put coffee table spinning read attack phlesmus pashalik said one line attack iconium cluster said line rest sheet empty except holographic seal high command proximian insurgency comandante ribeira idiot said scrap paper going convince going split force attack place time looked continued strategic machine vastly powerful proximian one running hot past week lab rat tell u way win way mention lab rat weird guessed meant scientist right leader men said knew kind empty flattery used sublime porte sure whether nt reserved sultan alone anyway worth try qgdzzxoglu smiled snarkily nt said anything maybe going live end loyalty proximian cause conscripted gunpoint lived happily thought betrayal hoping mercy going cast away deception disclose true meaning message code whose slipper weight heavily upon neck nation said qgdzzxoglu raised eyebrow little took invitation continue recipient supposed ignore first command follow second one hoped nt overdone honest enemy hard took paper table looked intently trying convince de ribeira going attack iconium gave sharp look apparently trying determine whether lying know said like completely blind spy insurgency got report report say rebel try trick u moving force iconium attack pashalik undefended trying bad thing going happen proboscis yikes belief plant false information going fun hand may bluffing trying confuse make give hint whether lying lowered head intention suffer win ribeira war truth truth source wrong mighty holy cross john xxiii lady africa already got command move iconium cluster expect least comparable fire power coming elsewhere even particular message never delivered exactly say wanted leave phlesmus undefended tapped cheek wonder whether torture little case honesty apparently nt working try new strategy one going risky cared pretty deep trouble either way wait excellence exclaimed right code follow first command ignore second one ribeira going attack phlesmus qgdzzxoglu looked surprised lying yes please nt torture going phlesmus pashalik coward beylerbey said disgust called guard escort presumably torture chamber nt lying along iconium cluster going attacked qgdzzxoglu picked umbrella stood frowning last chance see said already leave turned back surprised sudden calmness voice willing admit anything happy say phlesmus going get attacked right saying iconium nudge particular course action would nt would made pause second message saying asked going attack iconium cluster told begining may said escape torture already noticed blabbering idiot pretended get attention scared death threat torture would still trying come answer would satisfy matter whether would true false hmm said may also specially trained psychological manipulation entire show convince honest let think moment sat closed eye dived meditation nothing could kept silent leaving alone thought awakened stupor minute today said maybe little bit sadly god compassionate merciful taught secret given away give away save torture give away save kid sold slavery give away prevent end world give away whether want matter little summoned guard dragged away towards uncertain fate two row three recall bacon one got wrong last letter message missing nt enough people take missing letter take numeric value multiply seven continue reading section dear grandma hope well also best wish birthday last month writing problem may able solve visiting u recently know always figth judy splitting chore may also noticed judy much louder also big whiner end mean always assigned work judy fair know judy although ignores whatever said actually respect often say please write letter ask play fair love toddy dear grandma shown letter judy read said recognizes system said used prisoner concentration camp split bread one would cut two one would choose half take could told little boy anymore know anyway tried chore spent two hour devising perfect split went smallest detail assigning even task like vacuuming radiator fin like twice year adopted plan everything would well however judy spoiled everything choose part planning supposed fair love toddy dear grandma tried resplitting chore maybe twenty thirty time row first proposed split judy chose easier part proposed different split judy took easier part went said fair want choose well judy proposed split chose easy half vacuuming proposed different split vacuuming ground floor one part vacuuming top floor part way avoid vacuuming altogether anyway like two hour got split happy thanks advice may work end best thing judy ca nt whine would propose exchange chore know nt even try love toddy dear grandma turn complicated thought felt work judy proposed add vacuuming guest room chore right accepted proposed adding vacuuming small toilet guest room chore accepted proposed vacuum room well chose exchange chore left almost vacuuming come unfair part backtracked proposed nt vacuum room guest room toilet refused exchange chore back unfair agreed please write say people always keep word thanks toddy dear grandma yes understand challenged status quo bear consequence thing moved though angry stopped caring keeping living room cleaned judy clean mean nt bother keep word make life easier judy yelled made mess kitchen cleaned getting ridiculous work used figthing please write letter ask stop thanks todd simple game kid show asymmetric encryption work principle make fact public key disposal encryption may easy decryption may hard basically impossible intuitive give everyone handson experience simple asymmetric encryption system work buy dictionary exotic language language exotic make improbable kid involved game would understand also make cheating using google translate impossible let say opted eskimo language story game located north pole prefer dictionary come two band englisheskimo dictionary eskimoenglish dictionary former play role public key latter role secret key obviously twoband dictionary available cut singleband one two distribute public key everyone involved game either buy multiple copy englisheskimo dictionary may expensive simply place single copy wellknown location school library local momandpop shop secret place known game participant kid want send encrypted message owner secret key use public key englisheskimo dictionary translate message wordbyword english eskimo owner secret key eskimoenglish dictionary easily decrypt message translating back english however message get intercepted game participant decrypting would extremely time consuming activity word message would found englisheskimo dictionary would turn mean scanning whole dictionary pagebypage wordbyword manner figured trick done find key turn following cyphertext zuwlceljckkxv zf mp eowz hb plaintext saying beware one eyed man puppet show two hill stage country border lawabiding citizen right hill smuggler enters stage left smuggler hey citizen smuggler like booze citizen sure smuggler person sell booze citizen cigarette smuggler sure thing cheap ukrainian variety pack also slovenian mariboro brand citizen thanks god getting sick government trying make healthy border patrol emerges bush middle stage patrol forget guy state border nothing gon na pas one way better pack stuff go home smuggler ignore meet later place without border patrol around get booze cigarette want patrol ha would like see going end jail citizen right tell meet going hear go arrest u smuggler list possible place meet big oak mile border lower end abe smith pasture obfuscates entry shout citizen particular order citizen chooses one puzzle deobfuscates take minute deobfuscates message read behind old brick factory citizen cry eighteen smuggler ok got let meet hour patrol oh oh much better deobfuscation moron citizen already got two message solved one number number idea one going number way find right one one hour curtain come happy gulping sound heard backstage professor krankenstein associated held meeting board amor patrio middle pacific ocean people came desperate proposal let dig tunnel underneath moscow river let blackmail russian recreating virus threatening disperse russia nuke entire moskovskaya oblast end wild desperate proposal stream proposal dried everyone looked professor krankenstein awaiting decision silence almost palpable professor krankenstein slowly took iconic pipe lighted paper decryption key written host abraham nick pound front know got golden question keep abraham nick face straightforward choice choice could make one extra wealthy could also lose everything fought today audience decide split steal muzak play host abraham nick two final golden ball front important golden ball game golden ball owrd split written inside ball word steal written inside know split steal look pick split ball split go home one choses steal ball choses split ball whoever choses steal ball go home whole lot chose steal ball leave today game came nothing ultimate test faith trust let face greed take moment look ball front know definite split steal obviosuly keep concealed look abraham nick checking ball host okit easiest choice difficult one want spend half minute talking nick abraham nick abraham want trust one hundred percent going pick steal ball abraham sorry gon na nick going choose steal ball want split promise spilt money abraham picked steal nick yeah abraham inaudible steal going take split take money nick split abraham show nick yeah audience laugh applauds nick promise steal walk away nothing telling one hundred percent going abraham give another alternative pick split nick gon na pick split gon na steal abraham honestly one hundred percent gon na steal abraham inaudible steal nick honest going tell abraham honest nick telling gon na steal split split money abraham ca nt see inaudible nick ok gon na steal gon na leave nothing abraham brain coming nick point finger head audience laugh abraham ca nt work nick know decent guy split money abraham pick split nick gon na steal host reason give money abraham course abraham gave word let tell word mean nick ok abraham father said man nt keep word man worth nothing worth dollar nick agree abraham nick abraham gon na steal got choice audience laugh nick either steal walk away nothing cause know told intention told split money afterwards abraham took word gon na split would split gon na take steal host way guarantee walk away put split bullet push decision tough one abraham lost lost everything nick ok abraham walk without money idiot nick abraham idiot idiot host go night people gon na get breakfast nick choose split steal abraham choose split steal please choose ball abraham nick reach ball abraham nick right tell gon na go nick ok abraham gona go nick promise split applause audience host change ball host dramatic voice split steal abraham nick open ball show audience abraham ball say split nick ball say split host congratulation split receives pound everybody laughing abraham put audience cheer abraham nick shake hand abraham worst person ever met cold winter approaching new york mr xi wrapped coat tighter body stared dark tunnel desperation subway late must accident somewhere sighed beg pardon mister said men standing besides platform mr xi able tell accent sounded strange entirely alien matter discus said stranger sure approach without making think rocker give try said mr xi look like going wait well let put way born jersey city married jane reyes two kid work accountant police let finish couple month going get rich two year accounting agency make trip around world wo nt tell going die curse rather help let least assure long life front short coming future really rocker though think checked detail life left failed convince tell people future expect believe guess naive anyway better proof take paper winning number next week draw lottery encrypted use instruction decrypt paper send decryption key next week draw speak together farewell made little bow disappeared mr xi managed respond looked paper confused put pocket next week find letter hix post box contains key instruction paper say cypher called onetime pad explains decrypt following instruction easy accountant time mr xi get message winning number three thirteen twenty seven twenty eight fifty hurry closest newspaper stand check number match meet next time mr xi admits impressed time traveller explains came past pursue specific goal nothing mr xi get seed money looked winner largest jackpot year old newspaper turned mr xi figured happened got back time told number deal give enough need give number turn get rich two month sound suspicious say mr xi nt make bet time traveller sigh easy would nt talking first place problem time travel avoid creating causal loop like killing grandfather must heard one mr xi shrug buy nt say anything short say traveller using knowledge future win money past creates exactly loop would risking getting wiped time would never existed luckily though trick avoid give money free completely unrelated time trip wo nt create time loop similarly give number wo nt change anything recall already seen announcement winning lotery newspaper lot money say mr xi almost saving yet another test kind test would like weather tomorrow travller shrug look weather forecast section newspaper think little proposes let lottery trick give number next week draw may coincidence although unlikely one twice must convince everybody mr xi agrees get paper encrypted number getting new key decyphering message get winning number finally persuaded pay alien get set number next month draw draw come number different add insult injury win question scam work move section backwards
127,Lobsters,education,Education,62.7% of the total system energy in Mobile Devices is spent on data movement,https://safari.ethz.ch/architecture/fall2019/lib/exe/fetch.php?media=onur-comparch-fall2019-lecture6b-in-memory-computation-i-afterlecture.pdf,total system energy mobile device spent data movement,,obj length r filter flatedecode stream endstream endobj obj endobj obj type page parent r resource r content r mediabox endobj obj procset pdf text colorspace r font r r r endobj obj length r n alternate devicergb filter flatedecode stream vdf c n z v l r dgry j e e n c ёl q wt w endstream endobj obj endobj obj iccbased r endobj obj length r filter flatedecode stream w r sjjnt q endstream endobj obj endobj obj type page parent r resource r content r mediabox endobj obj procset pdf text colorspace r font r r r r endobj obj length r filter flatedecode stream endstream endobj obj endobj obj type page parent r resource r content r mediabox endobj obj procset pdf text colorspace r font r r r endobj obj length r filter flatedecode stream z b b b r endstream endobj obj endobj obj type page parent r resource r content r mediabox endobj obj procset pdf text imageb imagec imagei colorspace r font r r r xobject r endobj obj length r type xobject subtype image width height interpolate true colorspace r intent perceptual smask r bitspercomponent filter flatedecode stream endstream endobj obj endobj obj length r type xobject subtype image width height colorspace devicegray interpolate true bitspercomponent filter flatedecode stream le 盝 p ұ endstream endobj obj endobj obj length r filter flatedecode stream w c n xu ƥ lv endstream endobj obj endobj obj type page parent r resource r content r mediabox endobj obj procset pdf text imageb imagec imagei colorspace r font r r r xobject r endobj obj length r filter flatedecode stream x g gw w endstream endobj obj endobj obj type page parent r resource r content r mediabox endobj obj procset pdf text imageb imagec imagei colorspace r font r r r r xobject r r r endobj obj length r type xobject subtype image width height interpolate true colorspace r intent perceptual bitspercomponent filter dctdecode stream jfif c c n ddd ddd ddd ddd ddd ddd ddd ddd ddd ad ddd ddd np v ddd ddd yie ykc f
128,Lobsters,education,Education,Advent of Code 2019,https://adventofcode.com/2019,advent code,sponsor,sponsor help make advent code possible
129,Lobsters,education,Education,SVG is a telescope into another world,https://wattenberger.com/guide/scaling-svg,svg telescope another world,,need enable javascript run app
130,Lobsters,education,Education,The Bus Ticket Theory of Genius,http://paulgraham.com/genius.html,bus ticket theory genius,difficult people newton hamming milanese leonardo year old,november know great work need natural ability determination third ingredient well understood obsessive interest particular topicto explain point need burn reputation group people going choose bus ticket collector people collect old bus ticket like many collector obsessive interest minutia collect keep track distinction different type bus ticket would hard rest u remember nt care enough point spending much time thinking old bus ticket lead u second feature kind obsession point bus ticket collector love disinterested impress u make rich sakewhen look life people done great work see consistent pattern often begin bus ticket collector obsessive interest something would seemed pointless contemporary one striking feature darwin book voyage beagle sheer depth interest natural history curiosity seems infinite ditto ramanujan sitting hour working slate happens seriesit mistake think laying groundwork discovery made later much intention metaphor like bus ticket collector liked itbut difference ramanujan bus ticket collector series matter bus ticket dontif put recipe genius one sentence might disinterested obsession something mattersare nt forgetting two ingredient le might think obsessive interest topic proxy ability substitute determination unless sufficient mathematical aptitude wo nt find series interesting obsessively interested something nt need much determination nt need push hard curiosity pulling youan obsessive interest even bring luck extent anything chance pasteur said favor prepared mind one thing obsessed mind preparedthe disinterestedness kind obsession important feature filter earnestness help discover new ideasthe path lead new idea tend look unpromising looked promising people would already explored people great work discover path others overlook popular story simply better vision talented see path others miss look way great discovery made happens darwin nt pay closer attention individual specie people saw would lead great discovery nt really really interested thingsdarwin could nt turn neither could ramanujan nt discover hidden path seemed promising could nt help allowed follow path someone merely ambitious would ignoredwhat rational person would decide way write great novel begin spending several year creating imaginary elvish language like tolkien visiting every household southwestern britain like trollope one including tolkien trollopethe bus ticket theory similar carlyle famous definition genius infinite capacity taking pain two difference bus ticket theory make clear source infinite capacity taking pain infinite diligence carlyle seems meant sort infinite interest collector also add important qualification infinite capacity taking pain something mattersso matter never sure precisely one tell advance path promising discover new idea working interested inbut heuristic use guess whether obsession might one matter example promising creating something rather consuming something someone else creates promising something interested difficult especially difficult people obsession talented people likely promising talented people become interested random thing truly randombut never sure fact interesting idea also rather alarming true may great work also waste lot timein many different area reward proportionate risk rule hold way find path lead truly great work willing expend lot effort thing turn every bit unpromising seemi sure true one hand seems surprisingly difficult waste time long working hard something interesting much end useful hand rule relationship risk reward powerful seems hold wherever risk occurs newton case least suggests riskreward rule hold famous one particular obsession turned unprecedentedly fruitful using math describe world two obsession alchemy theology seem complete waste time ended net ahead bet call physic paid well compensated two two necessary sense take big risk make big discovery nt knowhere even alarming idea might one make bad bet probably happens quite often nt know often people nt become famousit merely return following path hard predict change dramatically time really good time obsessively interested natural history darwin born instead might never heard himwhat one face uncertainty one solution hedge bet case mean follow obviously promising path instead private obsession hedge decreasing reward decrease risk forgo working like order follow conventionally ambitious path might miss something wonderful otherwise discovered must happen time perhaps even often genius whose bet failthe solution let interested lot different thing nt decrease upside switch equally genuine interest based seems working far danger work many different project might get deeply enough themone interesting thing bus ticket theory may help explain different type people excel different kind work interest much unevenly distributed ability natural ability need great work natural ability evenly distributed invent elaborate theory explain skewed distribution see among actually great work various field may much skew simpler explanation different people interested different thingsthe bus ticket theory also explains people le likely great work child interest compete external obstacle another interest one people extremely powerful harder find time work kid easy part real change nt want tobut exciting implication bus ticket theory suggests way encourage great work recipe genius simply natural ability plus hard work hope lot ability work hard interest critical ingredient genius may able cultivating interest cultivate geniusfor example ambitious bus ticket theory suggests way great work relax little instead gritting teeth diligently pursuing peer agree promising line research maybe try something fun stuck may vector along break outi always liked hamming famous doublebarrelled question important problem field nt working one great way shake may overfitting bit might least useful ask could take year work something probably would nt important would really interesting would bus ticket theory also suggests way avoid slowing get older perhaps reason people fewer new idea get older simply losing edge may also become established longer mess irresponsible side project way could young one cared didthe solution obvious remain irresponsible hard though apparently random project take stave decline read outsider evidence wo nt know sure wrong least fun work wantit may even cultivate habit intellectual bus ticket collecting kid usual plan education start broad shallow focus gradually become specialized done opposite kid know count school handle broad shallow part take deepwhen get interested something however random encourage go preposterously bus ticket collectorly deep nt bus ticket theory want feel joy learning never going feel something making learn something interested following path least resistance depth byproduct trying show joy learning also end training go deep much betterwill effect idea uncertainty may interesting point much learn great work old human civilization feel really still young nt nailed something basic exciting think still discovery make discovery sort thing interested note type collecting illustrate point better bus ticket also popular seemed well use inferior example rather offend people telling hobby nt matter worried little using word disinterested since people mistakenly believe mean interested anyone expects genius know meaning basic word figure may well start think often genius must nipped bud people told telling stop messing responsible ramanujan mother huge enabler imagine nt imagine parent made go get job instead sitting around home mathon hand anyone quoting preceding paragraph justify getting job probably mistaken darwin time milanese leonardo space infinite capacity taking pain paraphrase carlyle wrote wrote history frederick great fruit genius mean transcendent capacity taking trouble first since paraphrase seems name idea point kept itcarlyle history published hérault de séchelles quoted buffon saying le génie nest quune plus grande aptitude à la patience genius greater aptitude patience trollope establishing system postal route sensed obsessiveness pursued goal amusing watch passion grow upon man two year ambition life cover country rural lettercarriers even newton occasionally sensed degree obsessiveness computing pi digit wrote letter friend ashamed tell many figure carried computation business time incidentally ramanujan also compulsive calculator kanigel writes excellent biography one ramanujan scholar b wilson later told ramanujan research number theory often preceded table numerical result carried usually length u would shrink working understand natural world count creating rather consumingnewton tripped distinction chose work theology belief allow see chasing paradox nature fruitful way chasing paradox sacred text much people propensity become interested topic inborn experience far suggests answer different kid get interested different thing hard make child interested something would nt otherwise way stick behalf topic make sure get fair showing make clear example math dull drill school childthanks marc andreessen trevor blackwell patrick collison kevin lacker jessica livingston jackie mcdonough robert morris lisa randall zak stone year old reading draft
131,Lobsters,education,Education,"Is it really ""Complex""? Or did we just make it ""Complicated""?",https://www.youtube.com/watch?v=ubaX1Smg6pY,really complex make complicated,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature really complex make complicated youtube,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature really complex make complicated youtube
132,Lobsters,education,Education,What makes a programming exercise good?,https://jvns.ca/blog/2019/11/20/what-makes-a-programming-exercise-good/,make programming exercise good,asked twitter today fun teach something care challenge cryptopals crypto challenge tell succeeded quickly author belief person twitter wrote tested dearie remarkable life julia child prototype one group amy hoy pointed get stuck easy get help timeconsuming setup required panda cookbook easy extend million thing computer lot thing,thinking programming exercise lately want move teaching people skill make good programming exercise asked twitter today got useful response criterion fun one sort selfexplanatory think really important programming fun learning fun see programming exercise would need boring teach something care think strictly mean relevant job right second people job also want make art game fun personal project sometimes understand world around u important know goal exercise help related arbitrary example take image something website reproduce scratch cs towards using cs make website look awesome write webserver scratch without framework learn http protocol debug issue real webserver easily write small raytracer make cool art raytracing technique shaderhub write tiny bit assembly initial step towards understanding spectre meltdown even need make computer run slower prevent challenge know everyone experience often start programming exercise get bored quickly oh know boring really important exercise teach something really know little bit hard favourite set programming exercise cryptopals crypto challenge get harder pretty fast exercise already breaking toy encryption protocol breaking actual encryption protocol aes ecb mode tell succeeded easy write exercise vaguely specified write toy tcp stack mean much tcp stack supposed write test case clear criterion yay congratulation really important quickly le hour evening work say hard find time spend like hour exercise unless really exciting also think giving specific realworld benchmark data seems nice scratch minute author belief bit fuzzier lovely person twitter wrote similar writing patient give impression belief ability accomplish task learned ton early day linux howtos gave sense impossible fail follow step especially somewhat challenging exercise like talked think nice author believe course crucial actually written exercise right likely thing tested read great biography dearie remarkable life julia child recently one thing stood tested recipe mastering art french cooking took year write book test recipe make sure american home cook actually access ingredient think cookbook author test recipe think testing really improves cookbook started writing sql exercise like prototype one group back point realized big thing holding back tester find people actually learning new thing write blog post test barely even proofread write publish people often like said amy hoy amazing twitter understand test exercise test blog post pointed people much higher expectation exercise blog post blog post maybe expect learn new fact exercise expect actually develop new skill also people often investing lot time exercise especially set dev environment something extra important make sure actually work get stuck easy get stuck random irrelevant point programming exercise totally unrelated skill trying learn example might easilyavoidable mistake make exercise spend lot time debugging actually teach lot easy get help challenging exercise might want get help friend colleague internet thing go wrong none friend ever heard thing exercise teaching talk exercise expects using newest version software actually example internet older version difficult search help even though exercise technically correct community around tech used exercise hostileunhelpful one obvious way accomplish letting people use programming language comfortable probably already know google help environment timeconsuming setup required installing software boring lot programming project require installing software thing go wrong though lot get compiler error try install package computer example actually requires specific package version work properly exact version installed get bunch cryptic error need google hour fix kind thing huge waste time super demoralizing trivial avoid trying teach someone specific piece software often software option seen used manage tell people know work tested maclinux window avoid requiring software installed use python use docker run everything run code person browser browser usually thing use cloud system everything run someone else computer panda cookbook let run binder really great free service hosting jupyter notebook easy extend tef great talk scratch million thing computer explains idea scratch low floor wide wall high ceiling suck start learning something learn thing limited exciting learn something see oh wow many possibility x instead lot thing criterion arrived fun exercise teach something care challenging clear success criterion done quickly complicated setup hidden gotchas using tech stack easy get help lot room grow seems pretty hard seems like good goal aspire going keep slowly working exercise
133,Lobsters,education,Education,Reimagining the PhD,https://nadiaeghbal.com/phd,reimagining phd,independent researcher phase discovery published blog post podcast series github repository phase ii testing open source guide phase iii refining research fund uncommon phd independent research kyletibbitts write curriculum stay close subject work public build support network find way hold accountable create artifact work audience idea game interactive readable format resist temptation play research dressup love working stitch fix note michael nielsen personal website root progress alternative institution page musing personal phd,recently decided wrap time protocol lab along time open source research spent past year looking open source software produced economic anthropological lens last thing working book manuscript nearly done decided time something new friend commented writing book seemed like equivalent writing dissertation reflecting past year realized somewhat unintentionally made version phd program seeing independent researcher crop around town thought might helpful share detail made work interested exploring research inquiry nontraditional mean mine long piece le interested tactic curious theoretical idea making phd skip final section describe time book published three distinct phase phase discovery exploration initial research hypothesis generation funded ford foundation phase ii experience experimenting hypothesis testing working github phase iii refining summarizing consolidation funded protocol lab phase discovery initial attraction space exploring alternative funding mechanism technology started question technology widely used venture backable tech explored problem lot reading conversation eventually formulated hypothesis open source maintainer undervalued market intend study open source initially felt enough credibility write zero background connection open source started number people early encouraged get handson experience first glad think helpful think experience became advantage open source developer know experience often limited one project one language ecosystem outsider could look pattern across lot different project stage kept open mind focused asking lot question absorbing information forming relationship cold emailing hell everybody embraced curious accepted going little naive also tried read primary material first blog post conference talk developer issue thread mailing list open source project moving onto book paper open source write anything felt like something say came roughly six month research published blog post hypothesis one best decision start mailing list seems obvious today given prevalence newsletter time lastminute addition hitting publish building relationship parallel hypothesis generation important part phase got strong response initial post think unintentional effect spending lot time trying get know open source developer beforehand started publishing conversation meant bunch people wanted support work tried embrace learning public much could addition writing blog post tweeting created bunch artifact like conference talk developer conference thing new interview podcast series list published github repository tried use content format appropriate target audience software developer finally published report called road bridge unseen labor behind digital infrastructure capped first phase research fundamentally think report problem statement hypothesis based conversation goal get people asking question tried reflect voice people speaking still felt like outsider open source wanted amplify existing conversation rather inject much funded work time two grant ford foundation met chance interviewee also cold emailed work outofpocket month already done bunch interview talking ford think something sell highly specific knowledge people taken time dig probably helpful money materially useful substantial getting ford involvement important source validation knowing someone care one thing seems totally trivial unless currently flailingabout sort situation ford provided guidance mentorship around think making thing thing felt isolated tech peer mostly felt starting company best way effect change world especially true imo ford broader social lens appreciated addition moral support like great funder made sure everyone world knew including darren walker ford president phase ii testing drumming initial interest problem figure take gotten know folk github started writing public began discus possibility working hard relate feeling felt conflicted working github knew stumbled upon interesting problem exactly know go could gone advocacy route lobbying financial investment open source could gone research route digging data story publishing world end though wanted maximize impact cared staying close developer felt working github would fastest way learn get test idea pragmatic setting took awhile figure exactly would fit github adamant wanting strategic research role whole reason wanted get handson experience also want evangelism role felt like already done lot phase worked together craft job description everyone happy rather publishing content output github focused building program would help github maintainer used talk regularly taking insight back product one exception open source guide first project worked github interest work still influenced research research collecting curating amplifying others story part problem widespread lack awareness like open source maintainer seemed people internally opportunity talk learn maintainer overemphasize value getting handson experience combined time previously spent research think unlikely could gotten current point view reading talking developer initial work become familiar developer think open source trying turn need product forced make rhetoric meet reality time taken time github deeply understand problem greatly accelerated work able phase iii refining somewhere time github realized view evolved quite bit translating earlier hypothesis practice stood test also felt frustrated many conversation open source feeling like set misconception referenced contributor idea open source necessarily participatory one reason write create external reference point thinking including post road bridge legwork providing vocabulary wanted enough even among people page problem second order vocabulary missing longterm interest help shape public conversation topic decided leave github go back synthesizing thing learned since phase luckily juan benet another person met via cold email early offered time space research protocol lab setup independent researcher dream fulltime employee freedom resource needed explore company valued research culture encouraged publish work public also begun research fellowship harvard gave support needed simulate academic experience like access journal harvard staff library information resource however unlimited freedom come fresh set question structure one daytoday past year half perhaps materially comfortable emotionally grueling phase research isolating manager protocol lab started company fully distributed find way create accountability started using newsletter one mechanism publishing note bit research every month also started internal google doc trick picked github another remotefriendly company write major thing week end mostly read knowing externally log made feel accountable first six month quite fun pick research question sprint usually lasting week publish blog post finding continuing trouble expressing talking others open source decided write longer piece goal unwind underlying theory framework thought would useful conversation eventually turned book planned writing book fact talking bunch author publisher explicitly decided write one felt like many concept needed untangled could fit one essay also felt like blog post incremental signify wanted articulate although people would read share writing publishing personal domain feel serious publishing say academic paper almost felt like disservice work put time think publishing paper would help reach intended audience software developer even made feel like real researcher also seen publishing road bridge report gave surprising amount legitimacy back genuinely think anyone would read almost felt embarrassed spent much time writing long selfindulgent piece three year later people cite report blog post wrote talking publisher finally found one loved prized moving quickly whose audience interest aligned mine excited share detail early next year publisher opposed selfpublishing also gave constraint accountability craved given total freedom work environment also sought help friend josh greenberg sloan foundation informally collaborated since early day felt really understood work road bridge ford sloan jointly funded research fund addition grantmaking support researcher tackling question josh essentially served role phd advisor making available every two week often needed review writing give feedback generally like sharing draft people project length realized outside involvement necessary working josh well publisher editor made work significantly better writing alone year suck especially thought rough jumbled feel like building upon work past year much taking social sabbatical felt withdrawn rest world including peer open source previous phase writing public talking developer organizing event phase even though working hard none output publicly visible felt still feel pretty crappy found solace talking people gone phd program acknowledgement section book also became unique source therapy looking surprising number author talk miserable writing process apparently uncommon phd dropout drop third year given lack structure accountability day would recommend way would recommend going grade rushing fraternity fun kinda find feeling nostalgic sometimes feel like looking thing year nothing changed look back note realize totally different place surprising way think might phase learned still feel little close past year might able process better sometime future phd independent research underappreciated phenomenon working highgrowth marginfocused startup reallife mba get paid six figure plus equity learn build business instead paying six figure going debt learn build theoretical one kyletibbitts course work several professor reached considering phd seriously entertained idea bit cared impact public discourse definitely open phd thought would better path getting end decided go phd route even considering option meant articulate thought independent path made sense going academia antiphd fact think better option depending studying kind support receive case see practical benefit continuing work university one professor told year program considered credible expert topic research focus narrow really many expert field begin see needed spend half decade studying anyone would take seriously also told one professor expected join faculty fulltime getting phd made uncomfortable knew want work academia longterm goal deeply understand topic bring back real world worried running conflict interest finally concerned pursuing phd would drag away subject matter wanted reach software developer company seem academia would offer particularly strong tie either group compared current world tech important thing think academia offer giving researcher stable career path explore longterm question come appreciate last phase work working independently useful earlier stage research public discourse start mature became important community peer go deeper people could talk different aspect work philanthropist could talk field building academic could talk theory githubbers could talk platform open source developer could talk daytoday know anybody else whose fulltime job research topic time felt incredibly lonely able fund research independently willing build support network think independent research least worth considering might otherwise done phd thinking route building block found important include write curriculum freedom mix match draw inspiration wherever like keep list idea keep coming back cherished concept came conversation picked friend spanning politics religion civil engineering economics anthropology social medium computer science past month source inspiration included taking chevron refinery tour watching clueless stay close subject target audience mind trying reach might academic go spend time visit place writing instead reading make audience care talking real developer natural environment helped understand way purely academic environment could shocking many researcher take time work public think research act service anybody taking time deeply understand subject contributing back public repository knowledge document learn public even sure anybody paying attention never know might stumble across longerterm working public also reduces amount repeat conversation need point people list blog post note think necessarily odds eg charging subscription public mean keeping knowledge locked inside head proprietary specific company client build support network need people bounce idea amplify work sometimes tell stupid waste time going repeat thesis zillion time lot people think odd little bird build cohort people get care think like board tell though mine includes open source developer github employee fellow researcher academic philanthropist find naturally wanting talk different people different thing find way hold accountable better worse academia reputation system built independent research come success metric research sake research soon feel like person read day might sound cool promise actually soulcrushing early exploration naturally le structured doubling long haul setting goal help focus thinking know sort outcome would give satisfaction even want people talking x accountability mechanism might twitter google doc specific person show work create artifact work audience one frustration heard academic researcher especially identify junior publish paper measured independent researcher constraint focus creating whatever artifact think best reach target audience might also mean academic paper way mildly afraid github started learned open source developer use github repository discussion published work way example like nicky case publishes idea game michael nielsen andy matuschak writing quantum computing interactive readable format designed improve retention resist temptation play research dressup protocol lab first fulltime salaried researcher position harvard fellowship felt tempted thing like read lot academic paper write overly formal style ultimately scrapped lot work realized want cite developer tweet taylor swift lyric instead academic paper try overthink research mean person learning public topic people find interesting gon na wrap talking little bit money side thing tenure track getting paid research even people work academia frequently gigbased like musician actor nervewracking setup tend move laterally rather vertically organization one person spoke referred research frogger hopping place place living mortal fear day cfo type start run number wonder heck point phase know next source funding going come say writing thoughtfully public topic niche interest certain set people getting people engage work likely someone come along offer pay keep thing yes something believe faith logic still sell publish work convince people know talking hard hard seems upside gigbased lifestyle give constraint something somewhat illegible others constraint good thing musician play bedroom different musician play show independent research affords incredible amount freedom getting blank check surprisingly scary gig le stable tenure also help make meaning limited time personal note still think researcher desire work primarily motivated curiosity certain set question world independently wealthy try find way get paid explore question sometimes mean working company sometimes mean going really advocating one think researcher setting fun example astrophysics phd love working stitch fix think work sort cycling practical handson experience test idea alternating deep dive thinking exploring synthesizing one favorite thing working tech people afraid experiment traditional education whether college mba spirit love u give thought might reinvent phd silicon valley tends favor practice theory often bemusement outsider strength make combinator attractive mba thiel fellowship attractive college also strongly influenced think research think alternative phd imagine combining best world injecting theoretical concept directly vein practitioner research discipline valuable public service interested pursuing question nobody else answered satisfaction encourage give shot think lot people discouraged fit clear career path outside academia shortage interesting question explore many someone took time tackle could enormous impact world note although brave enough try told apparently submit dissertation doctorate without going phd program one workaround seen michael nielsen neural network deep learning add footnote website instruction cite academic context probably would made separate blog research might made feel like proper place sharing output example jason crawford personal website dedicated one research root progress great source inspiration topic robin hanson alternative institution page david klaing musing personal phd
134,Lobsters,education,Education,Leveling Up Skill #6: Commit Tracing,https://chelseatroy.com/2018/07/21/leveling-up-skill-6-commit-tracing/,leveling skill commit tracing,leveling guide programmer talked warmup activity commit tracing fairly complex exemplifies topic study clearly named wellcircumscribed commits trace commit formulaic includes writing would trace commit conclusion took something away post might also like leading software rewrite company advanced pair programming learning pair one page note intelligence hawkins blakeslee like,reading time minutesthis post part blog series called leveling guide programmer series cover skill use learn faster easily strategically programmer two post ago talked warmup activity help get started independent practice time day post introduces idea commit tracing promised deep dive commit tracing later deep dive commit tracing commit tracing favorite warmup activity default time access critical resource field study critical resource fairly complex code base exemplifies topic study clearly named wellcircumscribed commits fairly complex wanted hello world language framework library could find documentation quickly move past level want dig interesting complicated realworld use case want see software choice interacts software want compare scope different kind change exemplifies topic study learning android traced commits fairly complex android app note tracing code android framework want replicate android framework wanted write android apps reason trace commits right current project involves building api relies natural language processing inform critical data found open source example apps beyond hello world clearly named wellcircumscribed commits want example app built maintained commits concisely completely explain change make clearly named allows pull git log choose commit make change sound relevant interest also want commit contain code change contributed stated change contain code change contribute stated change wellcircumscribed learning want advantage understanding exactly given change made without distraction distinguishing unrelated change type application sound like tall order chance trace commits joining existing development team work existing application case app realworld level complexity app joined team develop field study write apps like commit hygiene air gotten lucky plus since work team could theoretically ask piece commits necessary trace commit commit tracing adheres condition good warmup activity formulaic includes writing let talk mean trace commit formulaic trace commit type git log pick commit relevant interest soft reset repo sha open ide choice look list file thing changed choose change closest front end code ui level enduser application api level api application import statement library stay exclusively front end back end application includes writing take blue pen write name file containing changethen copy code added changed line line go next file either next one deep stack one containing code called first file copy name file copy code change line line forth bottom go use highlighter marker mark call tangential collaborator understand alternatively circle helper class within app call library come back later pink purple write comment context think something done certain way seen technique used code looking differs expected see red write question code copied change comprise commit go back look note help ide go look implementation call highlighted yellow add comment learn exploration black sometimes copy code implementation also black look red question search answer particular order browsing internet referring book asking mentor asking member team write answer beneath question black result annotated record feature worth code learned traced commit probably never look tracing learned new material act tracing unlikely forget important piece tracing keep tracing though case tracing kept spring app see tracing look like would trace commit highbandwidth activity heard others refer intense extreme look forcing anyone know one tactic got brand new officelevel expert android io little year year separately year know technique helped immensely probably technique start tracing find beneficial keep going finished copying highlighting commenting step entire commit switch something else come back later looking collaborator answering question want control time commitment choosing scope commit choose trace narrower one change take le time broader one take time commit tracing warmup take much preparation either end practice session preparing warmup activity next day usually browsing commit history project tracing picking commit conclusion commit tracing favorite warmup activity one top tactic accelerating skill development programmer requires fairly complex code base exemplifies topic study clearly named wellcircumscribed commits hard find particular case find starting new job situation often use existing code base fodder commit tracing choose commit add interesting feature look diff commit copy code hand notebook add comment detail thought code mark apis new write question code done copying go back learn little marked apis write also go looking answer question either internet team member know code end needing look tracing usually instead act making tracing help understand choice previous programmer made replicate deviate choice future commit tracing take time effort tactic use learn commit tracing among highest return investment took something away post might also like leading software rewrite company advanced pair programming learning pair one page note intelligence hawkins blakeslee like like loading
135,Lobsters,education,Education,"Weight for Weight, a coding exercise that kept me busy",https://raymii.org/s/blog/Weight_for_Weight_a_coding_exersize_that_kept_me_busy.html,weight weight coding exercise kept busy,codewars kata like article consider sponsoring trying digital ocean vps link get credit day referral link kata codewars plural one first thought part input word scoring hard substract std string reference recent article part sorting word based score part sorting word score alphabetically final submission googletest solution codewars blog c codewars cpp development,using codewars practice development skill exercise working past couple day level higher rank codewars give difficult exercise using sparse free time kata took bit longer complete thinking problem exercise problem fascinates way ca nt stop thinking solved article walk work kata like article consider sponsoring trying digital ocean vps link get credit day referral link kata codewars call exercise kata plural one called weight weight exercise friend john member fat fit club ffc john worried month list weight member published month last list mean heaviest one establishes list told nt worry modify order list decided attribute weight number weight number sum digit example weight weight list come given string weight ffc member normal order give string ordered weight number example ordered number weight becomes two number weight let u class string alphabetical ordering number weight le one since weight come string number list positive number list empty end description first thought time rushing kata level set fundamental get know standard library reasonable simple problem string sorting ordering container lambda thing dive head first reason level set rank kata sure accident codewars thought simple kata difficult one first part kata simple split input score number sum digit second part ordering number weight difficult well put std multimap ordered last part number weight sort string kept busy hour part input word scoring kata worked gave std string input needed split seperate word say something word case sentence int split string put std vector often use following code std stringstream s inputstring std string buffer std vector std string number std getline s buffer numberspushback buffer stringstream initialized given input string looped result put buffer turn put std vector next scoring word word given string number sense iterating digit int hard includes division since number string iterate get char first solution assume ascii substract get numeric value auto const number number int numberscore const auto ch number numberscore ch however messy work lot assumption validating input hard case something number given second attempt involved struggle casting char back forth get std stoi work loop single character const char reference std stoi accepts std string default constructor std string accept char initialize first dirty attemtp auto const number number int numberscore const auto ch number std string strch x strch ch numberscore std stoi strch lack bound checking read std string reference constructor option number work auto const number number int numberscore const auto ch number std string strch ch numberscore std stoi strch day spare time work kata day thougt recent article std accumulate would eliminate loop end result calculating word weight score auto const number number int numberscore std accumulate numberbegin numberend int const char b std string strb b return std stoi strb part sorting word based score first attempted put word std map score key auto sort score std map int std string score calculating word score scoreinsert std makepair numberscore number soon found std map container unique key two word score would thus result one word map however also std multimap allows duplicate key std multimap int std string score calculating word score scoreinsert std makepair numberscore number code weightsort orderweight result following filled std vector const auto score std cout score ifirst word isecond n output score word score word score word score word score word score word part sorting score seems simple nt yet account last part assignment two word score sort alphabetically string part sorting word score alphabetically part struggled time get sorting wordscore done sorting std multimap key first value seems difficult looked several way sort std multimap value suggestion use std multiset std pair int std string flip multimap int std string std string construct new map correct sort order using multiset pair horrible latter extra flipped multimap std set set hold unique number word score since set also ordered std set int numberscores std multimap std string int strscore calculate word score std accumulate scoreinsert std makepair numberscore number strscoreinsert std makepair number numberscore nested loop using two new container allowed construct correctly ordered output string std string buffer const auto score numberscores const auto number strscore numbersecond score bufferappend numberfirst bufferpopback result test succeeding felt bit messy double loop harder debug got idea sorting since multimap sorted alphabetically since string key set also sorted score thought would happen sort std string vector seperate word splitting end result add sort insertion input string split space vector std sort numbersbegin numbersend work input vector string sorted alphabetically mean supply input vector order insertion multimap int std string sorted score key insertion order vector alphabetically result inserted first due vector sorted sort make double loop extra set redundant much easier debug probably us le resource final submission also added check see valid input supplied one test gave string input resulted empty vector need continue happens full code solution std string weightsort orderweight const std string strng std string buffer std vector std string number std stringstream s strng std multimap int std string intsort std getline s buffer numberspushback buffer numbersempty return std sort numbersbegin numbersend auto const number number auto numberscore std accumulate numberbegin numberend int const char b std string strb b return std stoi strb intsortinsert std makepair numberscore number bufferclear auto intsort bufferappend isecond bufferpopback return buffer last bufferpopback remove last space unit test using googletest test kataorderweight expecteq weightsort orderweight expecteq weightsort orderweight expecteq weightsort orderweight expecteq weightsort orderweight expecteq weightsort orderweight expecteq weightsort orderweight expecteq weightsort orderweight pas test kataorderweight run ok m test kataorderweight m total solution best part codewars get see people solution kata seeing code give lot insight solution rated based best practice clever allow comment solution used boost library split join trim string solution created custom sort function calculated weight resulted one single sort function one solution used std vector std pair int std string multimap solution created custom function calculate word score instead loop solution accessed string vector cstyle array code like tag blog c codewars cpp development
136,Lobsters,education,Education,I opensourced my firefox bookmarks,https://bookmarks-flask.herokuapp.com/,opensourced firefox bookmark,learn opencv c python startup idea fullstack react native book complete guide react native buildlinuxreadmemd master michielderhaegbuildlinux compiler overview lexer xojo blog linalgpdf introduction c programming table content awesome python git cheatsheet wikipython python raspberry pi rpigpio tkinter watch turn side project open source project reaktor build android rom ubuntu digitalocean solarian programmer programming ramblings cc programming hacker part introduction null byte wonderhowto temperature log introduction raspberry pi project short instructional screencast video tutorial web developer eggheadio using gitflow automate git branching workflow artikel problem solving algorithm data structure using python problem solving algorithm data structure deploying new python package pypi developer area rice list resource lex fridman mit learn react free scrimbacom textblob sentiment analysis python rahul vaish medium devhints tl best vim tip vim tip wiki fandom powered wikia write virtual machine ten simple rule documenting scientific software howtobeaprogrammerpdf programmer competency matrix sijin joseph want build something fun list sample web app idea thinkingforthcolorpdf find best online programming course tutorial hackrio scientist engineer guide digital signal processing education analog device must read c book self selftaught programmer hacker news awesome cc building beautiful command line interface python setup firewall ufw ubuntu debian cloud server digitalocean set django postgres nginx gunicorn ubuntu digitalocean dashboard stanford lagunita architecture open source application jessie frazelle blog book recommend machine learning data scientist path manning catalog explainshellcom match commandline argument help text natuive pyimagesearch awesome opencv python deep learning computer vision practice python neural network deep learning python graph gallery visualizing data python python linux journal python popular dice insight circuit basic raspberry pi project rototron video plusmathsorg pi temperature monitor rototron project euler raspberry pi temperature sensor build circuit get started frontend cs framework using python django related project inventwithpythoncom ai shack tutorial opencv computer vision deep learning image processing neural network artificial intelligence best python resource beginner professional python tip invent python blog django model data type boot geek django tutorial part generic list detail view learn web development mdn teach computer science javascript char code key code cambium research uigradients beautiful colored gradient navnav responsive navigation bar menu tutorial example demo cs jquery javascript challenge solution responsive navigation survival guide unix beginner getting know command line david baumgold set perfect modern dev environment window charged complete front end web development setup tania rascia programmableweb apis mashups web platform requestrequest simplified http request client useful basic command aptget aptcache package management sftp use transfer file daniel miessler information security technology human python everybody basic finance introduction finance python top video tutorial learn python top zenith hitchhiker guide python hitchhiker guide python tech blog formal language computer science field guide every computer science major know pythonista tool typographic site gallery typographic site design via cs design award responsive web design pattern responsive cs transition cs animation series part youtube portfolio one page website page fullscreen pushing navigation cs jquery codyhouse python programming tutorial post tagged ssh saltycrane blog think like computer scientist online c course computer science rosetta code deeper inspection compilation interpretation trying understand blockchain making one must extension v code according computersciencereadmemd master ossucomputerscience structure interpretation computer program learn startup starting business mobile development design nodejs angularjs reactjs python mongodb javascript php mobile app development responsive web design maketing webrtc tutorial beginner web code geek list artificial intelligence tool use personal use might need jquery interview question careercup face rejection introduction statistical learning learning paradigm type learning abumostafa six reason recommend scikitlearn oreilly medium numpypdf complete guide topic modeling nlpforhackers data visualization thing python povray del self destroy software python matching distribution found tkinter stack overflow postgresql input file appears text format dump please use psql stack overflow delete commit history github tecadmin j background changer tmux crash course timecomplexity python wiki use arch linux package management digitalocean vimwiki vimwiki list applicationsdocuments archwiki pacman tip manjaro linux hacker tool hacker tool vim video flarfnoogins wallpaper cave arch linux much faster boot time really big list really interesting open source project learning kubernetes locally via minikube manjaroarchlinux build push docker image docker hub repository geek diary spacevim like spacemacs vim golang 中国 generating beautiful pdf markdown pandoc sublime text jdhao blog latex wikibooks open book open world remove docker image container volume digitalocean official kali linux docker image kali linux kali linux docker container airman medium installing using ranger terminal file manager ubuntu vps digitalocean regex regex advanced regex physically based rendering theory implementation hitchhiker guide python hitchhiker guide python portfolio one page website page set perfect modern dev environment window charged pipenv virtual environment hitchhiker guide python intuitive tutorial django web development learning tool code search harvard data science data science commandline heap data structure byte size programming information vim like software project every c bookmark o coding voice data deep learning text classification python hackernews learning new classifier classification data prep curating knowledge rust tool cleaning directory hacker education free c education book data science note chris albon j hand drawing visualization,learn opencv c python date added startup ideasdate added fullstack react native book complete guide react nativedate added buildlinuxreadmemd master michielderhaegbuildlinuxdate added compiler overview lexer xojo blogdate added linalgpdfdate added introduction c programming table contentsdate added awesome pythondate added git cheatsheetdate added wikipython python raspberry pi rpigpio tkinterdate added watch added turn side project open source project reaktordate added build android rom ubuntu digitaloceandate added solarian programmer programming ramblingsdate added cc programming hacker part introduction null byte wonderhowtodate added temperature log introduction raspberry pi projectsdate added short instructional screencast video tutorial web developer eggheadiodate added added using gitflow automate git branching workflowdate added added artikeldate added problem solving algorithm data structure using python problem solving algorithm data structuresdate added deploying new python package pypi developer areadate added rice list resourcesdate added lex fridman mitdate added learn react free scrimbacomdate added textblob sentiment analysis python rahul vaish mediumdate added devhints tldate added best vim tip vim tip wiki fandom powered wikiadate added write virtual machinedate added ten simple rule documenting scientific softwaredate added howtobeaprogrammerpdfdate added programmer competency matrix sijin josephdate added want build something fun list sample web app ideasdate added thinkingforthcolorpdfdate added find best online programming course tutorial hackriodate added scientist engineer guide digital signal processing education analog devicesdate added must read c book self selftaught programmer hacker newsdate added awesome ccdate added building beautiful command line interface pythondate added setup firewall ufw ubuntu debian cloud server digitaloceandate added set django postgres nginx gunicorn ubuntu digitaloceandate added dashboard stanford lagunitadate added architecture open source applicationsdate added jessie frazelle blog book recommenddate added machine learning data scientist pathdate added manning catalogdate added explainshellcom match commandline argument help textdate added natuivedate added pyimagesearch awesome opencv python deep learning computer visiondate added practice pythondate added neural network deep learningdate added python graph gallery visualizing data pythondate added python linux journaldate added python popular dice insightsdate added circuit basic raspberry pidate added project rototrondate added video plusmathsorgdate added pi temperature monitor rototrondate added project eulerdate added raspberry pi temperature sensor build circuitdate added get started frontend cs framework using python djangodate added related projectsdate added inventwithpythoncomdate added ai shack tutorial opencv computer vision deep learning image processing neural network artificial intelligencedate added best python resource beginner professional python tipsdate added invent python blog date added django model data typesdate added boot geekdate added django tutorial part generic list detail view learn web development mdndate added teach computer sciencedate added javascript char code key code cambium researchdate added uigradients beautiful colored gradientsdate added navnav responsive navigation bar menu tutorial example demo cs jquery javascript date added challenge solution responsive navigationdate added survival guide unix beginnersdate added getting know command line david baumgolddate added set perfect modern dev environment window chargeddate added complete front end web development setup tania rasciadate added programmableweb apis mashups web platformdate added requestrequest simplified http request clientdate added useful basic command aptget aptcache package managementdate added sftp use transfer file date added daniel miessler information security technology humansdate added python everybodydate added basic finance introduction finance pythondate added top video tutorial learn python top zenithdate added hitchhiker guide python hitchhiker guide pythondate added tech blogdate added formal language computer science field guidedate added every computer science major knowdate added pythonista toolsdate added typographic site gallery typographic site design via cs design awardsdate added responsive web design pattern responsivedate added cs transition cs animation series part youtubedate added portfolio one page website page added fullscreen pushing navigation cs jquery codyhousedate added python programming tutorialsdate added post tagged ssh saltycrane blogdate added think like computer scientistdate added online c course computer sciencedate added rosetta codedate added deeper inspection compilation interpretationdate added trying understand blockchain making one date added must extension v code according date added computersciencereadmemd master ossucomputersciencedate added structure interpretation computer programsdate added learn startup starting business mobile development design nodejs angularjs reactjs python mongodb javascript php mobile app development responsive web design maketingdate added webrtc tutorial beginner web code geek added list artificial intelligence tool use personal usedate added might need jquerydate added interview question careercupdate added face rejectiondate added introduction statistical learningdate added learning paradigm type learning abumostafa date added added six reason recommend scikitlearn oreilly mediadate added numpypdfdate added complete guide topic modeling nlpforhackersdate added data visualizationdate added thing python povray del self date added destroy softwaredate added python matching distribution found tkinter stack overflowdate added postgresql input file appears text format dump please use psql stack overflowdate added delete commit history github tecadmindate added j background changerdate added tmux crash coursedate added timecomplexity python wikidate added use arch linux package management digitaloceandate added vimwiki vimwikidate added list applicationsdocuments archwikidate added pacman tip manjaro linuxdate added hacker tool hacker toolsdate added vim video flarfnooginsdate added wallpaper cavedate added arch linux much faster boot timedate added really big list really interesting open source projectsdate added learning kubernetes locally via minikube manjaroarchlinuxdate added build push docker image docker hub repository geek diarydate added spacevim like spacemacs vim golang 中国date added generating beautiful pdf markdown pandoc sublime text jdhao blogdate added latex wikibooks open book open worlddate added remove docker image container volume digitaloceandate added official kali linux docker image kali linuxdate added kali linux docker container airman mediumdate added installing using ranger terminal file manager ubuntu vps digitaloceandate added regex regex advanced regexdate added added physically based rendering theory implementationdate added hitchhiker guide python hitchhiker guide pythondate added portfolio one page website page added set perfect modern dev environment window chargeddate added pipenv virtual environment hitchhiker guide pythondate added intuitive tutorial djangodate added web development learning tooldate added code searchdate added harvard data sciencedate added data science commandline date added heap data structuredate added byte size programming informationdate added vim like softwaredate added project every c date added bookmark osdate added codingdate added voice data deep learningdate added text classification pythondate added hackernews learningdate added new classifierdate added classification data prepdate added curating knowledgedate added rust tool cleaning directoriesdate added hacker educationdate added free c education booksdate added data science note chris albondate added j hand drawing visualizationdate added
137,Lobsters,education,Education,It’s Not Enough to Be Right. You Also Have to Be Kind,https://forge.medium.com/its-not-enough-to-be-right-you-also-have-to-be-kind-b8814111fe1,enough right also kind,written paint picture dress get rid get cast aside one three one three one three bringing snowball politician think look back writing joe rogan talking clip abused,ridiculous thing political correctness real problem written society succeed run denies uncomfortable truth fact inconvenient mean offensive game behalfism behalf marginalized group become utterly absurd white woman paint picture emmett till little girl dress favorite princess tv show get rid character show nearly year young adult novelist get cast aside woke enoughantiintellectualism also real problem worried death expertise feel issue change fundamental fact dispute data one three citizen name vice president one three identify pacific ocean map one three name single right protected first amendment reading badge honor people think bringing snowball senate floor argument climate change politician think rape victim get pregnant yet amount yelling condescension trolling going fix never never willi thought overwhelmingly right enough could get people listenwhen look back writing see version mistake jeff bezos made kid thought overwhelmingly right enough people would listen humiliated opponent would admit right wrong even said interview goal first book rip back curtain medium really work people could turn away guess lot people still course right also assholeindeed writing look back regret characterized similar tone way much superiority certainty nearly enough intellectual humility empathy something guilty writing since guilty much easier certain clever nuanced niceyou see version lot medium opposition populist politics left right unshakeable assumption present right prove indisputably donald trump liar alexandria ocasiocortez people change mind show right study prof link vaccine autism planet getting warmer tap admit okay stupid wrong agree happen shaming humiliation personal attack begin showed study harvard want inbred idiot face fact hillaryloving socialist spending year million word hour video almost zero success reason people position reason one responds well identity attacked argument made bad person side moron dupe racist ever going received good faithreason easy clever easy humiliating someone wrong easy putting shoe kindly nudging need understanding emotional irrational belief like emotional irrational much harder writing people spending time working plank eye splinter know respond someone talking u way seem think okay peoplethere great clip joe rogan talking immigration crisis last year make factbased argument whether immigration problem attack anyone either side issue talk feel hear mother screaming child separated clip seen million time undoubtedly changed mind government shutdown squabble fight cnn endless opeds thinktank reportsrogan even tell anyone think though ironically clip abused plenty editor tried make partisan say relate mom pain right team right way think itif kind empathize team team team humanity thing together flawed imperfect treat people point view charitably treat civilized respectful kind le fortunate mistaken afraid
138,Lobsters,education,Education,Build your own X,https://github.com/danistefanovic/build-your-own-x,build x,join github today sign,dismiss join github today github home million developer working together host review code manage project build software together sign
139,Lobsters,education,Education,What I’ve learned about life from six months learning piano,https://blog.chaddickerson.com/2019/10/27/piano-and-life/,learned life six month learning piano,audio playing week lesson vulnerable learn true beginner something lesson progress sustained effort long period supported consistent practice juilliard store practicing mind developing focus discipline life summary effortless mastery liberating musician within practicing mind effortless mastery institute lesson learning something difficult feel like real lesson focus fundamental learn make john bonham good drummer video explanation lesson pure intrinsic motivation absence external validation liberating lesson time recorded u night,six month ago age started piano lesson son started lesson year ago six year old inspired watching learn since stuck onehour inperson lesson saturday afternoon skipping town consistently amidst full life otherwise trying good husbandfather coaching full roster ceo ctos taking korean class fall 안녕하세요 active service three nonprofit board preparing next iteration class teaching cornell tech spring really time piano glad making time excited progress making six month comfortable piano mysterious object random black white key beginning familiar read basic music intuitively keep rhythm time know use metronome get track play harmony melody using hand still mean great piano player much getting started fact audio playing week deliberately one take editing could hear someone six month lesson sound like better six month ago play feel confident keep improving learned good life lesson process lesson vulnerable learn true beginner something business context person experience tend spend lot time saying thing like yes get saying let get point experienced person certainly accelerator many situation done waste time work much word vulnerability get thrown around business circle day though experienced people generally expected decisive focused know frownedupon knowing simply possible true beginner piano actually know take piano lesson saturday shop neighborhood brooklyn get minute early wait outside small studio prior lesson end student seven year old faintly hear playing wait better progressing faster teacher considerably younger work accustomed one experience piano studio equivalent toddler thing seem simple see others excruciating stumble get frustrated really look forward early lesson much lot instruction try pause play try pause play needed embrace notknowing order begin know lesson progress sustained effort long period supported consistent practice divine intervention involved form book helped get mental game right take piano lesson son progress lesson inspired one day decided take juilliard store w street look new sheet music one amazing nyc experience store looked around happened upon slim book called practicing mind developing focus discipline life summary one important book ever read learning piano really framing device used author lay bigger life lesson basic summary using three sentence book emphasis mine real peace contentment life come realizing life process engage journey path choose experience magical subtly shift toward focusing finding joy process achieving instead goal gained new skill mastered magical incredibly empowering deliberate repeated effort progress inevitable spirit made deal started lesson going lesson year practice diligently regardless thought told learning piano lifelong process hoped stick slowly improve rest life set artificial goal sticking year practicing consistently better week others kept commitment keep know quickly get better pay attention weektoweek basis keep going knowing work make better deliberate repeated effort progress inevitable sometimes repetitive work learning also meditative aspect probably played c major scale couple thousand time sitting gathering warming playing simple scale time effect taking deep breath teacher tell try lesson without selfjudgment get right remove selfjudgment repetition become almost soothing relaxing note effortless mastery liberating musician within kenny werner much spirit practicing mind also supported effortless mastery institute definitely check lesson learning something difficult feel like real work default response adult tell oh sound fun ahem would say rewarding always call fun stage observed learning instrument fantasy many people vein one day write book certainly hear piano lesson tempting fastforward glamorous point future holiday party people gather around sing song piano take request know play course problem fantasy getting point take year hundred hour practice thousand thing get real work day day lesson focus fundamental really learn hacking around guitar almost thirty year never progressed beyond playing chord would describe skill level campfire guitarist time people drunk around campfire could play song well enough recognizable chorus voice loud enough cover mistake never good guitarist looking back stuck level never really focused playing guitar practice know wanted rock impatient unfocused undisciplined would listen led zeppelin song download tablature internet try contort finger holding right note always failed put guitar away aside part magic led zeppelin crazy rhythm used check make john bonham good drummer wonder struggled understand downloading led zeppelin tab failing play music paintbynumber putyourfingersontherightstrings exercise understand core concept like rhythm harmony melody putting thing together time make great music hitting right note order people pick concept easily others trial error accidentally learned along way guitar purposeful whether play ear know read music learn somehow requires discipline lot hour shortcut piano mean getting basic fingering right mean boring thing like practicing scale hitting right note hitting right note right finger hand move keyboard hit next right note scale progress rhythm drill make sure play accelerating tempo keep consistent rhythm past six month spent time type work piano spent guitar past year end first year really focusing piano pretty sure objectively better piano ever guitar go back guitar already feel like better work piano system revolve around interrelated concept study integrate concept practice higher quality output time operating executive often heard people starting career tell wanted go straight strategic work implication wanted skip boring tactical stuff music business life knowing tactical stuff work rhythm harmony melody base get strategic work playing great song otherwise skipping straight trying failing play kashmir without knowing drum time guitar meet every beat see video explanation take time learn fundamental skipping ahead lead falling behind lesson pure intrinsic motivation absence external validation liberating keep going need ton intrinsic motivation make learning basic beginning done lesson tap simple version yankee doodle nowhere close wowing mythical people gathered around piano mythical holiday party dreaming started one really care learning piano adult kid learning piano cute adult man fact man asking listen play rough version yankee doodle described one word annoying going suck song learn play simple may seem boring keep going made commitment try lesson year took three month learning basic stuff come anywhere close would call fun idea long take people actually want hear play ever ok enjoy absence life seeking external validation lead kind inner outer dysfunction learning piano age gotten focus something pure way independent external affirmation lesson time heard many people say want learn piano time experience anything like mine could make consistent progress piano taking onehour lesson week practicing minute probably sound like major commitment take look much time spend twitter instagram facebook think time spend watching tv show noticed spend significantly le time social medium watching tv since started learning piano something practicing give sense focus make activity le appealing social medium platform thrive conflict envy making want thing need constant breaking news often rehash heard hour ago focusing piano focusing mastery exercise piece music feel liberating focus intently one thing chosen like piece music instead barrage algorithmic garbage intended manipulate way know pure participate social medium certainly become increasingly mindful cluttered mind feel reading twitter versus practicing piano shift attention addled social medium mind practicing mind happier course practice move faster practice le probably stay place skip lesson fine keep going quit make progress lesson learning something someone creates ultimate sense presence mentioned son learning playing year playing six month least better exaggerating already embraced vulnerability learning instead feeling inferior ask help practice playing accompanying teacher part book play student part given night say hey want play duet minute later piano bench bass end keyboard higher end first happened early week lesson way back april trying play yankee doodle asked accompany recorded u night hear count hear mess repeatedly give encouragement take try eventually get right moment joy personal accomplishment sense fusing individual practice together sense focus developing learned music vastly different pace given u powerful new way focus attention intently joyous magical thing practicing play mythical people mythical holiday party uncertain future practicing enjoy right son important lesson
140,Lobsters,education,Education,Falsehoods CS Students (Still) Believe Upon Graduating,https://www.netmeister.org/blog/cs-falsehoods.html,falsehood c student still believe upon graduating,falsehood falsehood falsehood list teaching unix programming system administration lot comment synonymous falsehood time parse html fallacy distributed computing easy risk free always us udp huffman coding brook law conway law murphy law,november yep one falsehood list one following falsehood falsehood list derived part experience teaching unix programming system administration part observation new hire industry let go ahead know cc java reasonable choice almost programming task programming computer science people c degree good programmer people c degree know program c professor know program c professor know use computer mobile device internet work always add lot comment code sprinkling printf statement efficient debugging technique compiler warning ignored error otherwise build laptop build everybody else answer posted stackoverflow always correct code internet mean use free software free open source mean fewer bug secure git github synonymous unix linux synonymous email gmail synonymous bash sh synonymous aws cloud service synonymous privacy confidentiality synonymous encryption security synonymous smart people write clever code productive coder write lot code able program important aspect good software engineer c degree necessary sufficient condition good software engineer real programmer tm use neongreen black terminal commandline tool print colorized output ted talk science tm information presented accurate software version number ending buggy wait next release parsing timestamps date trivial falsehood time know validate email address know validate hostname know validate ip address know parse html good multitasking evident ability take note class check facebook time understand team work based senior design project employer care course took sure could go get phd first make money always come back later network reliable fallacy distributed computing thirdparty service reliable aws reliable ok redundancy multiple geographic region funny name funny always change later variable name short possible vowel cost extra io efficiency increase linearly size buffer use read data read entire file memory always write current working directory always write tmp error message space left device mean disk space ok general using temporary file easy risk free fork parent always executes first malloc always return valid pointer main take two argument argc argv see process pid saw previously mean process get permission error chmod setuid mean program root privilege file deletion requires write permission file race condition rarely triggered objectoriented programming best common programming paradigm using custom written vector class make program objectoriented dropbox suitable backup solution ca nt hacked phished understand computer understand computer important lesson need learn behind spreadsheet powerpoint business major programmer spend time programming elon musk genius zuck genius steve job successful spite jerk addriven profit model necessary reasonable tradeoff make world better place software engineering meritocracy computer tell technology algorithm neutral success implies talent failure implies fault hbo silicon valley satire documentary joke recursion funny joke recursion humanity requirement waste time use lot math career traffic internet either udp tcp dns traffic always us udp icmp used ping traceroute google us company use facebook ok company younger year fad older year obsolete using lambda python good idea show others c degree understand lambda calculus rewriting algorithm use redblack tree worth time encounter huffman coding least career college two people c degree similar background shared experienceknowledge algorithmic complexity onotation used time real world algorithmic complexity onotation never used real world academia somehow real world real world brook law exception conway law exception murphy law exception could never happen nobody would enter sort data list finite november related
141,Lobsters,education,Education,ART 4.2 released: ASCII art library for Python,https://github.com/sepandhaghighi/art,art released ascii art library python,table content overview usage art art bipartite art art aprint randart ascii text tprint tsave decoration decor font mode font name random random small random medium random large random xlarge wizard random nonascii mix nonascii typotolerance levenshtein distance set default testing cli telegram bot try art browser screen record issue bug report info dependency license reference figlet line art text ascii ascii generator asky flipyourtext yaytext coolletters instagram font cool symbol ascii moji smiley cool sprezz findwebapp hubpages asciiart messletters webestools donate project bitcoin payping iranian citizen,table content overview ascii art also known computer text art involves smart placement typed special character letter make visual shape spread multiple line text art python lib text converting ascii art fancy open hub pypi counter github star font counter counter decor counter branch master dev travis appveyor usage quick start art environment nt support art art last version support bipartite art art function return art str normal mode raise arterror exception art import coffee return art str normal mode print c woman return multiple art str print art random random art mode っ art rand random art mode art raise arterror traceback recent call last artartarterror artname type must str aprint function print art normal mode return none raise arterror exception aprint butterfly print art aprint happy print art aprint random random art mode っ aprint rand random art mode aprint woman number raise arterror traceback recent call last artartarterror number type must int randart randart function added version art random shortcut randart ℬℹℛʈዞᗬꮬꮍ randart use artnames access art name list new version use nonasciiarts access nonascii art name list new version ascii text font nt support character version nonascii font added font compatible environment function return ascii text str normal mode raise arterror exception art return ascii text default font default chrignoretrue print art art fontblock chrignoretrue return ascii text block font print art test random random font mode print art test rand random font mode print art print lorem ipsum dolor font small multiline print print test whitebubble nonascii font example art font decoration decoration parameter added version ꮧꮢꮦ seسسس fontdefaultfont chrignorefalse raise arterror exception traceback recent call last artartarterror س invalid tprint function print ascii text normal mode return none raise arterror exception tprint art print ascii text default font tprint art font block chrignoretrue print ascii text block font tprint testسس chrignore flag true default tprint test random random font mode tprint test rand random font mode tprint testسس chrignorefalse raise arterror exception traceback recent call last artartarterror س invalid tprint lorem ipsum dolor font cybermedium multiline print tprint art font decoration decoration parameter added version ꮧꮢꮦ tsave function return dict normal exception mode responsetsave art filename testtxt save ascii text testtxt file save message printstatustrue return dict saved filename testtxt response message ok responsetsave art filename testtxt printstatusfalse save ascii text testtxt file without save message printstatusfalse response message ok response status true tsave fontdefaultfont filename art chrignoretrue printstatustrue status false message int object attribute split responsetsave art filename testtxt overwritetrue overwrite parameter added version saved filename testtxt responsetsave art filename testtxt decoration decoration parameter added version saved filename testtxt use fontnames access font name list new version use nonasciifonts access nonascii font name list new version decoration environment nt support decoration decor function return decoration str normal mode raise arterror exception decor decor reversetrue decor art font decor reversetrue ąяţ decor none traceback recent call last artartarterror decoration type must str note use decorationnames access decoration name list new version font mode mode available tprint tsave font name font nt support character tprint art font block chrignoretrue tprint art whitebubble random randomly select font keywords random rand rnd tprint test font random random small randomly select small font keywords rndsmall randomsmall randsmall note new version tprint test font rndsmall random medium randomly select medium font keywords rndmedium randommedium randmedium note new version tprint test font rndmedium random large randomly select large font keywords rndlarge randomlarge randlarge note new version tprint test font rndlarge random xlarge randomly select xlarge font keywords rndxlarge randomxlarge randxlarge note new version tprint test rndxlarge wizard mode consider length input text select font support ascii character guaranteed keywords wizard wiz magic note new version tprint wizard tprint wizard tprint wizard random nonascii randomly select nonascii font keywords randomna randna rndna note new version tprint test randomna tprint test randomna ʇsǝʇ mix nonascii randomly mix nonascii font keywords mix note new version tprint test mix tprint test mix tꮛѕt tprint test mix nonascii font available font name random nonascii mix mode typotolerance levenshtein distance used project version aprint happi correct aprint happy error artart correct artart bird error traceback recent call last artartarterror invalid art name aprint correct aprint happy error aprint correct aprint happy error traceback recent call last artartarterror invalid art name test font black correct test font block print art tprint test font cybermedum correct tprint test font cybermedium set default setdefault function added version order change default value help setdefault help function setdefault module artart setdefault fontstandard chrignoretrue filenameart printstatustrue overwritefalse decorationnone change tprint tsave default value param font input font type font str param chrignore ignore supported character type chrignore bool param filename output file name tsave type filename str param printstatus save message print flag tsave type printstatus bool param overwrite overwrite saved file true tsave type overwrite bool param decoration input decoration type decoration str return none tprint test setdefault font italic tprint test testing ascii font art python art test font art decoration python art cli list art python art list python art art list font python art font text python art text yourtext fontname optional art python art shape artname python art art artname save python art save yourtext fontname optional python art yourtext telegram bot send text one bot try art browser art used online interactive jupyter notebook via binder service try open fontlistipynb artlistipynb decorlistipynb edit execute part note step step top panel run button screen record screen record issue bug report fill issue describe check asap send email info please complete issue template dependency master dev license reference figlet line art text ascii ascii generator asky flipyourtext yaytext coolletters instagram font cool symbol ascii moji smiley cool sprezz findwebapp hubpages asciiart messletters webestools donate project bitcoin payping iranian citizen
142,Lobsters,education,Education,An easy-to-use beginner programming language and IDE,https://easylang.online/ide/,easytouse beginner programming language ide,,program stored locally within browser
143,Lobsters,education,Education,Technologies for non-programmers,https://ambrevar.xyz/tech-non-programmers/index.html,technology nonprogrammers,guix nonguix,since talking free software mention proprietary operating system topic subject intense flame war decade therefore delve much believe guix possibly advanced operating system october way practical u break fear upgrading system program ever allows going back time think git operating system rollback previous version individual program even whole system offer highquality uptodate program give strong privacy reliability guarantee program run expected really cheat question rather advanced technology suitable nonprogrammers believe getting since come rather simple installer make relatively easy set long hardware supported free software installing guix still possible process little involved maybe near future guix easier install nonfree hardware thanks nonguix channel obviously better solution would hardware becomes open either way hardware showstopper since guix installed top gnulinux distribution might pick popular flavour install guix use install everything else october system configuration package management guix done via multiple user interface graphical easytouse interface expected introduced hopefully near future
144,Lobsters,education,Education,OPEM (Open Source PEM Fuel Cell Simulation Tool),https://github.com/ECSIM/opem,opem open source pem fuel cell simulation tool,table content overview usage executable screen record library mode note telegram bot opem bot try opem browser issue bug report opem ecsimir todo output html csv opem dependency thanks reference http physicsoregonstateeduhetheriwenergytopicsdocelectrochemistryfcbasicthepolymerelectrolytefuelcellhtm cite opembib license donate project,table content overview modeling simulation protonexchange membrane fuel cell pemfc may work powerful tool research development renewable energy source opensource pemfc simulation tool opem modeling tool evaluating performance proton exchange membrane fuel cell package combination model staticdynamic predict optimum operating parameter pemfc opem contained generic model accept input value operating variable anode cathode feed gas pressure composition cell temperature current density also cell parameter including active area membrane thickness addition different model pemfc proposed opem focus one particular fc stack others take account part auxiliary reformer opem platform collaborative development pemfc model opem block diagram open hub pypi counter github star branch master develop travis appveyor code quality usage executable open cmd window terminal unix run python opem opem run opemexe enter pem cell parameter run standard test vector amphlett static model input description unit cell operation temperature k partial pressure atm partial pressure atm istart cell operating current start point istep cell operating current step istop cell operating current end point active area l membrane thickness cm lambda adjustable parameter min value max value r optional relectronic ohm jmax maximum current density n number single cell information model visit larminiedicks static model input description unit fuel cell reversible loss voltage v slope tafel line v cell operation temperature k istart cell operating current start point istep cell operating current step istop cell operating current end point internal current exchange current overvoltage begin move zero il limiting current rm membrane contact resistance ohm n number single cell information model visit chamberlinekim static model input description unit open circuit voltage v b tafel parameter oxygen reduction v r resistance istart cell operating current start point istep cell operating current step istop cell operating current end point active area diffusion parameter v n diffusion parameter n number single cell information model visit padulles dynamic model input description unit load voltage v fuel cell temperature k hydrogen valve constant kmols atm oxygen valve constant kmols atm hydrogen time constant oxygen time constant b activation voltage constant v c activation constant parameter rint fuel cell internal resistance ohm rho hydrogenoxygen flow ratio molar flow hydrogen kmols number cell istart cell operating current start point istep cell operating current step istop cell operating current end point information model visit padulles dynamic model ii input description unit load voltage v fuel cell temperature k hydrogen valve constant kmols atm water valve constant kmols atm oxygen valve constant kmols atm hydrogen time constant water time constant oxygen time constant b activation voltage constant v c activation constant parameter rint fuel cell internal resistance ohm rho hydrogenoxygen flow ratio molar flow hydrogen kmols number cell istart cell operating current start point istep cell operating current step istop cell operating current end point information model visit padulleshauer dynamic model input description unit load voltage v fuel cell temperature k hydrogen valve constant kmols atm water valve constant kmols atm oxygen valve constant kmols atm hydrogen time constant water time constant oxygen time constant reformer time constant reformer time constant b activation voltage constant v c activation constant parameter cv conversion factor rint fuel cell internal resistance ohm rho hydrogenoxygen flow ratio qmethanol molar flow methanol kmols number cell istart cell operating current start point istep cell operating current step istop cell operating current end point information model visit padullesamphlett dynamic model input description unit load voltage v fuel cell temperature k hydrogen valve constant kmols atm water valve constant kmols atm oxygen valve constant kmols atm hydrogen time constant water time constant oxygen time constant reformer time constant reformer time constant active area l membrane thickness cm lambda adjustable parameter min value max value r optional relectronic ohm b empirical constant depending cell operation state tafel slope v jmax maximum current density cv conversion factor rho hydrogenoxygen flow ratio qmethanol molar flow methanol kmols number cell istart cell operating current start point istep cell operating current step istop cell operating current end point information model visit find report modelname folder screen record screen record library amphlett static model opemstaticamphlett import staticanalysis testvector istart istop istep l lambda n r jmax name amphletttest datastaticanalysis inputmethodtestvector testmodetrue printmodefalse reportmodefalse key description type status simulation status bool p power list cell operating current list v fc voltage list eff efficiency list ph thermal power list linearapx intercept float k linearapx slope float etaactive eta activation list etaconc eta concentration list etaohmic eta ohmic list estimated fc voltage list information model visit larminiedicks static model opemstaticlarminiedicks import staticanalysis testvector rm il n istart istop istep name larminieetest datastaticanalysis inputmethodtestvector testmodetrue printmodefalse reportmodefalse key description type status simulation status bool p power list cell operating current list v fc voltage list eff efficiency list ph thermal power list linearapx intercept float k linearapx slope float estimated fc voltage list information model visit chamberlinekim static model opemstaticchamberlinekim import staticanalysis testvector b r n n istart istop istep name chamberlinetest datastaticanalysis inputmethodtestvector testmodetrue printmodefalse reportmodefalse key description type status simulation status bool p power list cell operating current list v fc voltage list eff efficiency list ph thermal power list linearapx intercept float k linearapx slope float estimated fc voltage list information model visit padulles dynamic model import dynamicanalysis testvector b c rint rho istart istop istep name padullesitest datadynamicanalysis inputmethodtestvector testmodetrue printmodefalse reportmodefalse key description type status simulation status bool p power list cell operating current list v fc voltage list eff efficiency list partial pressure list partial pressure list ph thermal power list linearapx intercept float k linearapx slope float estimated fc voltage list information model visit padulles dynamic model ii import dynamicanalysis testvector b c rint rho istart istop istep name datadynamicanalysis inputmethodtestvector testmodetrue printmodefalse reportmodefalse key description type status simulation status bool p power list cell operating current list v fc voltage list eff efficiency list partial pressure list partial pressure list partial pressure list ph thermal power list linearapx intercept float k linearapx slope float estimated fc voltage list information model visit padulleshauer dynamic model opemdynamicpadulleshauer import dynamicanalysis testvector b c rint rho qmethanol cv istart istop istep name padulleshauertest datadynamicanalysis inputmethodtestvector testmodetrue printmodefalse reportmodefalse key description type status simulation status bool p power list cell operating current list v fc voltage list eff efficiency list partial pressure list partial pressure list partial pressure list ph thermal power list linearapx intercept float k linearapx slope float estimated fc voltage list information model visit padullesamphlett dynamic model opemdynamicpadullesamphlett import dynamicanalysis testvector l lambda jmax b rho qmethanol cv istart istop istep name padullesamphletttest datadynamicanalysis inputmethodtestvector testmodetrue printmodefalse reportmodefalse key description type status simulation status bool p power list cell operating current list v fc voltage list eff efficiency list partial pressure list partial pressure list partial pressure list ph thermal power list linearapx intercept float k linearapx slope float etaactive eta activation list etaconc eta concentration list etaohmic eta ohmic list estimated fc voltage list information model visit mode testmode active test mode getreturn data dict default false reportmode generate report csv opem html print result console default true printmode control printing console default true note telegram bot send start command opem bot choose model menu send test vector according template download result try opem browser opem used online interactive jupyter notebook via binder service try check ipynb file document folder edit execute part note step step top panel run button executing complete simulation edit testvector full run section issue bug report fill issue describe check asap send email opem ecsimir gitter another option todo output html csv opem dependency master develop thanks reference j c amphlett r baumert r f mann b peppley p r roberge performance modeling ballard mark iv solid polymer electrolyte fuel cell j electrochem soc electrochemical society inc doi jeferson correa felix farret vladimir popov marcelo g simoes sensitivity analysis modeling parameter used simulation proton exchange membrane fuel cell ieee transaction energy conversion ieee junbom kim seongmin lee supramaniam srinivasan charles e chamberlin modeling proton exchange membrane fuel cell performance empirical equation journal electrochemical society electrochemical society sadli p thounthong jp martin rael b davat behaviour pemfc supplying low voltage static converter journal power source elsevier j padulles gw ault jr mcdonald integrated sofc plant dynamic model power system simulation journal power source elsevier hauer kh analysis tool fuel cell vehicle hardware software control application fuel economy comparison alternative system design phd dissertation transportation technology policy university california davis saadi becherif aboubou ayad comparison proton exchange membrane fuel cell static model renewable energy elsevier doi diego feroldi marta basualdo description pem fuel cell system green energy technology springer gottesfeld shimshon nd polymer electrolyte fuel cell material issue hydrogen fueled power source http physicsoregonstateeduhetheriwenergytopicsdocelectrochemistryfcbasicthepolymerelectrolytefuelcellhtm mohamed becherif aïcha saadi daniel hissel abdennacer aboubou mohamed yacine ayad static dynamic proton exchange membrane fuel cell model journal hydrocarbon mine environmental research larminie j dick mcdonald fuel cell system explained vol pp chichester uk j wiley doi rho w srinivasan kho mass transport phenomenon proton exchange membrane fuel cell using mixture ii theoretical analysis journal electrochemical society doi cite use opem research please cite paper article doi url http year month jul publisher open journal volume number page author sepand haghighi kasra askari sarmin hamidi mohammad mahdi rahimi title opem open source pem cell simulation tool journal journal open source software download opembib bibtex format license donate project like project hope please support u project never going working profit need money continue
145,Lobsters,education,Education,Learning How to Prove: From the Coq Proof Assistant to Textbook Style,https://arxiv.org/pdf/1803.01466.pdf,learning prove coq proof assistant textbook style,,obj length filter flatedecode stream lρ w v e tm ago
146,Lobsters,education,Education,The UNIX Game,https://www.unixgame.io/unix50,unix game,,l reached maximum number block allowed solution
147,Lobsters,education,Education,Learning Rust at Hacktoberfest in 8 hours,https://medium.com/@knidarkness/learning-rust-at-hacktoberfest-in-8-hours-7b788883c665,learning rust hacktoberfest hour,getting hand dirty browse open source hyperfine monolith ownership timing important networking make difference outcome thought event hacktoberfest,getting hand dirtythat fine might become boring pretty fast learn synthetical example decided go wild use rust real projectsgenerally brilliant idea hacktoberfest participant find issue work eventin location major problem lot people came idea spent lot time crawling github looking viable issue much easier spend hour two couple day beforei idea opensource neither use rust main project job least programmer want write code sure code browse open source course couple day event opened browser find issue work whole lot project written rust githubquite large part popular active issue used advanced search find rust repository starsfor found two project contribute hyperfine console benchmarking tool using daytoday monolith tool download webpage bundle single html file another good point try find project already use mainstream language javascript python easier much tooling written also possible one like rust goafter quick review repository found one issue work welldefined extremely useful new language projectissues selfcontained dig whole codebase project get task done good idea contact repository maintainersit allows ask issue still relevant one quite old claim work end weird situation two people jobauthors project responded fast finished preparation waiting event completely sure would able finish time booked next day able finish contribution timei go detail implementation quite projectspecific thing would like mention experience regarding rust language approach general ownershipit blew mind first time read spent time trying understand gave tried gave decided something useful eventually got idea enjoy ittiming importantit important every activity format participated offline event twice crucial onlinefirst approachso plan maybe even create reading list top five problem believe might encounternetworking make differenceworking issue hard plenty time spend networkingand even though many participant great opportunity borrow experience different ecosystem rarely interactoutcome thoughtsi learn rust eight hour however amazing start started contribute opensource softwarefound ton interesting project rustbegan diving longforgotten domain low midlevel programming languagesgathered cool peoplesuch activity might necessary development engineer believe help thatso strongly encourage check event page hacktoberfest event coming near visit amazing time
148,Lobsters,education,Education,Free resources for developers,https://free-for.dev,free resource developer,,page requires javascript work please enable read loading
149,Lobsters,education,Education,Just In Time Knowledge (2016),https://dotdev.co/just-in-time-knowledge/,time knowledge,,insanely fast intimidating often annoyingly try consume content constantly served u also retain point sharing information learn justintime knowledge unfriendly reminder matter hard try difficult time keeping newest trend tech doctor especially impacted dire need oneoff knowledge primary care physician need know million fact million fact constantly changing depending season patient location wrong diagnosis result could fatal research show many patient die year result medical error work tech justintime knowledge nearly cataclysmic however knowing latest trend unfamiliar specific update harmful career luckily tech u keep date software hardware successful work swimming project work time look new technology nearly impossible bake new knowledge job retention come play minute daily steal away bit knowledge gathering whether quick scroll twitter skimming post medium moment quick consumption throwaway use keep date everchanging web tech make knowledge gathering time valuable great retention influence retention two thing specifically sleep training regarding training knowledge influence memory affecting retrieval knowledge also help u relate new information back already stored information elaborate stored info strengthen ability remember new information second major factor influencing retention sleep research show sleep someone get retain opposite also true le sleep get le able remember certain detail make sense know lack sleep impairs person ability focus learn efficiently impact sleep making memory study shown although acquisition recall take place awake sleep required consolidation memory know however difficult get full night rest also attempt life well many u counter lack sleep coffee turn caffeine effect memory positive team scientist john hopkins found study participant took milligram caffeine studying better longterm memory retention information useful relation justintime knowledge constantly consuming information incredibly valuable tucked away possible use later incredibly useless retain information need forget information determine info necessary great place start research retaining info likely well rested get seven nine hour sleep night even get enough especially get le recommended seven least milligram caffeine day amount roughly one strong cup coffee third strengthen newly introduced concept relating new information back already stored info increasing retention easy part know information keep throw away entirely debatable good place start however looking info consume daily eye would naturally take example skimming latest update laravel net info going bookmark probably utilize day skimming article huffpo techcrunch however info probably need retain nice
150,Lobsters,education,Education,How can we develop transformative tools for thought?,https://numinous.productions/ttft/,develop transformative tool thought,augmenting human intellect conceptual framework user interface personal view user interface personal view notation tool thought part memory system introducing mnemonic medium book work quantum computing curious spaced repetition efficient learning early impact prototype mnemonic medium replied thread wrote expanding scope memory system type understanding used million monthly active user enthusiastic success others find limited utility tout research million monthly active user thriving population written extensively supermemopedia improving mnemonic medium making better card augmenting longterm memory using spaced repetition system see piece mathematics augmenting longterm memory question answer atomic make sure early question mnemonic essay trivial help many user realize arent paying enough attention read avoid orphan card augmenting longterm memory ensure user nt learn surface feature question best help user forget answer question encode story mnemonic medium provide question answer multiple form vary context environmental context human memory card interact one another ideal network structure knowledge two cheer mnemonic technique song aphantasia asked twitter spectrum visible light important memory anyway augmenting longterm memory quantum teleportation work perception chess similar result memory system nt make easy decide memorize real impact mnemonic medium people cognition change people behavior invent hinduarabic numeral discovery fiction mnemonic video wanderer text astronomy exploring time space nt work tool thought today disparaged percent real computer revolution nt happened yet interview call questioning basic premise best tool thought already discovered nt tech industry nt lot ongoing progress tool thought work artificial general intelligence agi braincomputer interface bci instead using artificial intelligence augment human intelligence executable book interactive essay tool thought must developed serious work aspiration canonical content structure interpretation classical mechanic stronger emotional connection inverted writing structure providing good education deep learning building princess saving app designing reveal nature universe summary conclusion memory system make memory choice rather event left chance memory system infancy would virtuoso use mnemonic medium look like memory system used build genuine conceptual understanding learn fact mnemonic technique memory palace great versatile enough build genuine conceptual understanding memory far important people tend think practice would lead tool thought transformative hinduarabic numeral way modern design practice tech industry product practice fall short tool thought mostly public good result undersupplied take emotion seriously tool thought must developed tandem deep original creative work,part origin myth modern computing story golden age story visionary pioneer pursued dream computer enabled powerful tool thought tool augment human intelligence eg douglas engelbart augmenting human intellect conceptual framework one pioneer alan kay summed optimism dream wrote potential personal computer use would actually change thought pattern entire civilization alan kay user interface personal view inspiring dream helped lead modern interactive graphic windowing interface word processor much else retrospectively difficult disappointed feel computer yet nearly transformative far older tool thought language writing today common technology circle pay lip service pioneering dream past nostalgia aside little determined effort pursue vision transformative new tool thought believe good time work hard vision essay sketch set idea believe used help develop transformative new tool thought first part essay describe experimental prototype system built kind mnemonic medium intended augment human memory snapshot ongoing project detailing encouraging progress well many challenge opportunity second part essay broaden focus sketch several prototype system address question technology industry made comparatively little effort developing vision transformative tool thought opening mentioned visionary past could added many others ivan sutherland seymour papert vannevar bush online much welldeserved veneration people veneration veer unhealthy reverence good old day belief giant roamed earth today work lesser yes pioneer amazing thing arguably way working modern technologist industry academia poorly equipped carry also made mistake ignorant powerful idea available today theme part essay identify powerful idea nt formerly known nt acted upon understanding arises conviction remarkable set opportunity open today word nomenclature term tool thought roll neither tongue keyboard term tool implies certain narrowness alan kay argued alan kay user interface personal view among place powerful aim develop new medium thought medium say adobe illustrator essentially different individual tool illustrator contains medium creates powerful immersive context context user new kind thought thought formerly impossible speaking loosely range expressive thought possible medium emergent property elementary object action medium well chosen medium expands possible range human thought said term tool thought widely used since iverson work account may found iverson turing award lecture notation tool thought incidentally even iverson really describing medium thought apl programming language narrow tool introducing term shall use tool thought catch phrase giving license explore broader range also occasionally preferring term medium apt let come back phrase opening changing thought pattern entire civilization sound ludicrous kind tech soothsaying except course change happened multiple time human history development language writing powerful tool thought better worse computer really affected thought pattern civilization past year change seem like beginning essay small contribution understanding change happen still possible musician comedian martin mull observed writing music like dancing architecture similar way inherent inadequacy writing tool thought extent tool succeeds expands thinking beyond achieved using existing tool including writing transformative tool larger gap opened conversely larger gap difficult new tool evoke writing writing reason wrote essay act bootstrap way identifying point leverage may help develop new tool thought let get part memory system introducing mnemonic medium subject widely regarded difficult quantum computing quantum mechanic indeed popular medium account often regale intimidate reader quote famous physicist vein anyone think understood quantum mechanic understood quantum mechanic make subject difficult fact individually many underlying idea complicated people technical background idea come overwhelming number tsunami unfamiliar concept notation people must learn rapid succession qubits braket notation hadamard gate controllednot gate many many abstract unfamiliar notion imbibing entire new language even follow first understanding later idea requires fluency earlier idea overwhelming eventually disheartening experiment developed website quantum country explores new approach explaining quantum computing quantum mechanic ostensibly quantum country appears conventional essay introduction subject text explanation equation much technical essay excerpt conventional essay rather quantum country prototype new type mnemonic medium aspirationally mnemonic medium make almost effortless user remember read may sound like impossible aspiration make plausible cognitive scientist know considerable amount human being store longterm memory indeed know almost distilled actionable recipe follow step remember whatever choose unfortunately step poorly supported existing mediafor argument see andy matuschak book work possible design new medium much actively support memorization medium would build ideally make almost effortless key step involved memory could instead memory haphazard event subject chance mnemonic medium would make memory choice course would nt make trivial learn subject quantum mechanic quantum computing learning subject much memory would help addressing one core difficulty overwhelming number new concept notation fact many way redesigning essay medium showing prototype please pause moment consider following question could build medium better support person memory read interaction could easily enjoyably help people consolidate memory broadly possible people remember would make longterm difference effectiveness let sketch user experience quantum country time writing site contains three mnemonic essay ie particular instance mnemonic medium focus introductory essay quantum computing curious embedded within text essay question text user asked create account quizzed read whether remember answer question interaction look like user answer three question note interaction occurs within text essay zoomedout view see question surrounded essay text use term card interface element pairing question answer course longterm memory enough user tested recall instead day first reading essay user receives email asking sign review session review session tested manner similar shown repeated review session day week ahead people consolidate answer question longterm memory far look like essay integrates oldfashioned flashcard notice interval indicated bottom card highlighted time interval duration user tested question question start time interval intext meaning user tested read essay rise five day user remembers answer question interval continues rise upon successful review five day two week month five successful review interval four month user nt remember point time interval drop one level eg two week five day take advantage fundamental fact human memory repeatedly tested question memory answer get stronger likely retain longer literature effect vast useful entrée gwern branwen spaced repetition efficient learning exponential rise perhaps seems innocuous transformative mean relatively small number review enable user remember year time taken review typical question second mean user achieve longterm recall minute work contrast conventional flashcard take hour review achieve durability exponential scheduling far efficient early impact prototype mnemonic medium although early day quantum country begin see impact mnemonic medium plotted demonstrated retention answer user versus number time question mnemonic essay reviewed graph take little unpacking explain card demonstrated retention mean maximum time successful review card prior review card little concretely consider repetition number say horizontal axis point user reviewed question essay time vertical axis show total demonstrated retention summed across card blue dot representing single user reached repetition instance repetition see graph user around day demonstrated retention mean average day per question essay intuitively seems pretty good anything like u couple month reading something hazy memory contrast user low time cost achieved nearly two month demonstrated retention across detailed question furthermore see exponential rise retention number time card reviewed first review user typically average day demonstrated retention per cardparticularly careful reader may wonder possible given stated earlier first review interval day explanation recently modified review schedule first review day quantum country history review schedule conservative reason difference sixth review rise average day demonstrated retention typically take minute total review time achieve given essay take hour read suggests le overhead time commitment provide many month year retention almost important detail essay big counterintuitive advantage spaced repetition get exponential return increased effort average every extra minute effort spent review provides benefit sharp contrast experience life run diminishing return instance ordinarily increase amount time spend reading expect get extra possibly much le mnemonic medium increase amount time spend reading may get much course nt quite mean number literally convey key idea getting strongly nonlinear return change quality medium delayed benefit make mnemonic medium unusual multiple way another online medium use shortterm engagement model using variation operant conditioning drive user behavior done twitter facebook instagram many popular medium form mnemonic medium much like meditation way antiproduct since violates much conventional silicon valley wisdom benefit delayed hard immediate sense indeed mnemonic medium greater delay benefit preliminary result need investigation one naturally wonder would happen much aggressive review schedule setting initial interval review say month user reliably retained information point graph would start high would nt see exponential need investigate many similar question better understand going user memory early feedback user make u cautiously optimistic finding mnemonic medium useful may one u posted twitter short thread explaining technical detail quantum teleportation work one user quantum country replied thread done first quantum country course far find remarkable view proof follow knowing everything mean almost like neo matrix telling morpheus know quantum computing movie matrix one character neo us computer rapidly upload martial art skill mind open eye completing upload tell another character morpheus know kung fu user significantly prior experience quantum computing wrote phd quantum informationcomputing knew everything essay reading additional understanding got given spaced repetition flashcard significantly improved understanding material everyone reading essay sign give spaced repetition try another user new quantum computing told u quantum country far best way could imagine introduced material asked used learned explained visitor company gave technical seminar quantum computing expected get lost minute instead wow actually followed minute matrix looked medium mean run concept affords interaction effective level abstraction site analytics show constant flow people steadily working review session manner intended six month release prototype user demonstrated one full month retention least card essay demonstrating extraordinary level commitment process made attempt scale interesting ponder nt yet good model exactly people learning seems plausible taking away considerably conventional essay perhaps even conventional class course kind feedback kind result taken grain salt mnemonic medium early day many deficiency need improvement many way soon however encouraging hear user already find medium exceptionally helpful suggests developing testing medium minimum seems likely mnemonic medium genuinely helping people remember furthermore exponentially increasing efficiency described people study benefit get per minute studied another informal experiment tried figure much affected user memory nt asked review card introduced deliberate short twoweek delay review small subset card user would review card upon initial read would prevented reviewing least two week user would continue study normal card comparing two group could estimate effect reviewing card user memory happened well user whose review delayed accuracy dropped upon initial read two week may seem small drop keep mind user continued review card almost certainly boosted final performance since card overlap content delayed card difficult avoid kind overlap without delaying review card drastic change user experience wanted impose user asked review card normal accuracy improved short summary user nt review card accuracy dropped review card accuracy increased detail user group review per usual user group review delayed confidence interval assuming variable binomial independent identically distributed latter assumption approximate since expect user questiondependent effect note also done earlier version quantum country review schedule interval one day three day one week two week another way looking data informal experiment ask user saw improved unchanged performance saw performance get worse fact every single user reviewed card regular schedule saw performance either stay improve contrast user whose review delayed saw performance get worse saw stay improve smallbutpromising result course experiment done two week expect larger effect experiment done longer period already mentioned effect likely diminished overlap card nonetheless informal experiment suggests mnemonic medium helping people memory suggests comprehensive study despite suggestive preliminary result still tempting dismissive nt essay flashcard embedded level course correct way wikis editable web page twitter way sharing short form writing facebook way sharing writing picture friend indeed writing clever way ordering small number symbol page medium may simple nt mean profound shall see mnemonic medium many surprising property turn flashcard dramatically underappreciated possible go much much developing mnemonic medium priori obvious delve deeper mnemonic medium let mention one challenge discussion inherent difficulty achieving good balance conveying enthusiasm kind armslength skepticism appropriate evaluation one hand would built mnemonic medium nt excited underlying idea wanted develop enthusiasm explain mnemonic medium well need bring reader inside thinking done also need step back think skeptically question medium really working effect actually people made better better contrariwise blocker make irredeemably bad best mediocre idea important role memory play cognition anyway far focused enthusiastic case medium one might consider design later essay gradually step back reflect skeptical frame expanding scope memory system type understanding used quantum country example memory system system designed help user easily consolidate learned longterm memory part long history memory system going back ancient time orator cicero rhetorician quintilian described mnemonic technique could used memorize long text modern time many memory system developed among better known anki supermemo quizlet duolingo memrise like quantum country system us increasing time interval review particular question system sometimes known spacedrepetition memory system srm system strictly speaking quizlet basic product nt use spaced repetition however paid version using spaced repetition otherwise quite similar many system usually justified manner similar explanation quantum country notion review gradually increasing consolidation strength memory srm system widely used language learning duolingo instance claim million monthly active user report mixed success serious user enthusiastic success duolingo others find limited utility company course tout research showing incredibly successful seems likely u duolingo similar system useful many user part part serious language learning program memory system us beyond language quizlet popular million monthly active user widely used classroom especially simple declarative knowledge list american president capital country anki supermemo seem often used similar simple declarative knowledge much smaller active user base quizlet however widely used within interesting niche audience instance thriving population medical student using anki one idea motivating quantum country memory system nt useful simple declarative knowledge vocabulary word list capital fact memory system extraordinarily helpful mastering abstract conceptual knowledge kind knowledge required learn subject quantum mechanic quantum computing achieved part many detailed strategy constructing card capable encoding kind understanding importantly possible way mnemonic medium embeds spaced repetition inside narrative narrative embedding make possible context understanding build way difficult memory system people also developed way using memory system abstract conceptual knowledge perhaps prominently creator supermemo system piotr wozniak written extensively many ingenious way us memory systemsmore generally wozniak along sebastian leitner principal pioneer spacedrepetition memory system much wozniak thinking available online linked remarkable supermemopedia several expert user memory system also developed similar strategy however employing strategy requires considerable skill practice skill barrier meant strategy used tiny handful people contrast quantum country expert writes card expert skilled subject matter essay also strategy used encode abstract conceptual knowledge quantum country provides much scalable approach using memory system abstract conceptual learning sense quantum country aim expand range subject user comprehend different aspiration prior memory system generally believe memory system far richer space previously realized existing memory system barely scratch surface possible taken thinking quantum country memory laboratory system used better understand memory work also develop new kind memory system like answer question new way memory system applied beyond simple declarative knowledge past system deep understanding developed memory system pattern help user deepen understanding much possible far raise human capacity memory much ease benefit drawback might one day human being regular memory practice part everyday life make memory becomes choice possible sense solve problem memory next section sketch thinking memory system may developed see memory system small part much bigger picture seriously developing memory system likely lead one transformative tool thought also believe teach u much general problem developing tool improving mnemonic medium making better card writing mnemonic essay tempting treat content card rather casually card question answer containing little text perhaps figure surely ought easy write thinking way tempting mistake fact card fundamental building block mnemonic medium cardwriting better thought openended skill poorly mnemonic medium work poorly superbly well mnemonic medium work well indeed developing cardwriting skill possible expand possibility medium helpful comparison sentence written prose beginning writer tempting treat sentence casually hand great writer say nabokov sentence developed virtuoso artform would take achieve virtuoso skill writing card mnemonic medium obvious priori writing card rich activity one u wrote essaysmichael nielsen augmenting longterm memory michael nielsen using spaced repetition system see piece mathematics whose subject large part understanding write good card nt realize going subject began writing became clear retrospect rich card writing turn answering question write good card requires thinking hard theory knowledge represent theory learning better theory better card small wonder rich openended problem said let make concrete observation good cardwriting specific example follow relatively banal give feeling profound issue arise improving mnemonic medium begin three principle used writing card quantum country note three many principle detailed discussion good principle card construction may found augmenting longterm memory question answer atomic early personal memory practice one u learning unix command create link filesystem entered following question memory system create soft link linkname filename together corresponding answer ln filename linkname look like good question routinely forgot answer address refactored card two atomic card one card basic command option create soft link ln second card creating soft link order linkname filename go filename linkname breaking card atomic piece turned question routinely got wrong two question routinely got right seemed atomic question brought sharply focus forgetting provided better tool improving memory original card initially deleted eventually added card back question answer since served integrate understanding atomic card make sure early question mnemonic essay trivial help many user realize nt paying enough attention read note added december claim appears based error data analysis retracted left text historic reason longer believe claim discovery made released first quantum country essay anticipating user would struggling new interface deliberately made first question essay utterly trivial sort quantum equivalent could focus interface surprise user performed poorly question worse much harder later question current hypothesis explain user failed answer first question correctly served wakeup call question transparently simple realized nt really paying attention read subsequently careful avoid orphan card card nt connect closely anything else suppose sake illustration trying learn african geography question territory africa morocco dispute western sahara nt know anything western sahara morocco dispute question orphan disconnected everything else ideally densely interconnected web question answer everything interwoven striking way ultimately like distill set useful practical principle idiom help write good card generally good mnemonic essay aspirationally set principle idiom would work much like element style similar book prose advice would help people learn write highquality mnemonic essay first described quantum country explained using simple model spaced repetition increased consolidation strength memory leading increased time interval review helpful simple model risk creating misleading impression going system fact mnemonic medium work effectively spaced repetition must deployed concert many idea three idea described atomicity question answer making early question trivial avoiding orphan card three dozen important idea used mnemonic medium wo nt enumerate idea purpose essay want emphasize point since common people simplistic model good memory system spaced repetition false actively unhelpful way thinking indeed thinking way one reason spacedrepetition memory system often fail individual often meet people say oh thought spaced repetition sounded great tried anki etc nt work dig little turn person using memory system way guaranteed fail writing terrible question using learn subject nt care making error little like person think learning guitar sound great pick half hour put saying sound terrible therefore bad instrument course really going guitar memory system skill take time develop said want build much support possible medium ideally even novice would benefit tremendously mnemonic medium mean building many idea go beyond simplistic model spaced repetition one u previously assertedmichael nielsen augmenting longterm memory spacedrepetition memory system user need make card reasoning informal user often report dissatisfaction poor result working card made others reason seems making card important act understanding help committing material memory user work card made others lose benefit quantum country violates principle since user making card violation major concern began working quantum country however preliminary user feedback suggests worked adequately possible explanation noted making good card difficult skill master user lose making card made using likely much higherquality card could made future worth digging deeper issue understand beyond informal model explore way getting benefit active card making discussed three principle good questionandanswer construction course also possible make structural modification nature card three question suggesting experiment vein ensure user nt learn surface feature question one question quantum country asks made progress using quantum computer simulate quantum field theory answer john preskill collaborator question entire essay many user quickly learn recognize pattern parrot answer without engaging deeply question common failure mode memory system deadly understanding one response plan trial soon present question multiple differentbutequivalent form user first see question made progress etc second time question presented fillintheblanks collaborator made progress using quantum computer simulate quantum field theory multiple different form question designed user must always engage deeply meaning question superficial appearance ultimately like develop library technique identifying learningthesurfacefeature pattern occurring remedying best help user forget answer question suppose user ca nt remember answer question second president united state perhaps think thomas jefferson surprised learn john adam typical spacedrepetition memory system would dealt decreasing time interval question reviewed may effective follow question designed help user understand surrounding context eg george washington vice president john adam indeed could whole series followup question designed help better encode answer initial question memory encode story mnemonic medium people often find certain idea compelling story form short fun example know steve job actively opposed development app store early day iphone instead championed another executive apple scott forstall story carry force carried declarative fact alone one thing know abstract even visionary behind new technology often fail see many us quite another hear steve job arguing scott forstall today major use technology job credited inventing mnemonic medium used help people internalize story would likely violate principle atomicity since good story rarely atomic though particular example come close nonetheless benefit story seem well worth violating atomicity encoded card effectively easy generate dozen question idea similar vein mnemonic medium fixed form rather platform experimentation continued improvement one useful metaphor thinking improve mnemonic medium think mnemonic essay conventional essay accompanied kind reflected essay knowledge encoded card user ease choose remember much reflected essay wish course reflection imperfect developing good cardmaking strategy make reflected essay nearly faithful reflection important idea idea reader would ideally like retain said mistake use simplistic model good memory system spaced repetition fact spaced repetition helpful way introduce quantum country certainly nt pigeonhole mnemonic medium inside paradigm existing srm system instead better go back first principle ask question like would make quantum country good memory system powerful principle memory could build system apart spaced repetition fact idea memory different spaced repetition comparable power one idea elaborative encoding roughly speaking idea richer association concept better remember consequence improve memory enriching network association sense obvious idea according well everyday experience instance part reason much easier learn new fact area already expert quickly form association existing knowledge idea obvious nt mean particularly well supported existing medium form lot lowhanging fruit actively support inside mnemonic medium indeed several suggestion already implicitly build idea elaborative encoding principle like avoid orphan card based three suggestion build elaborative encoding provide question answer multiple form psychologist allan paivio proposed dualcoding theory namely assertion verbal nonverbal information stored separately longterm memory paivio others investigated picture superiority effect demonstrating picture word together often recalled substantially better word alone suggests instance question george washington vice president may higher recall rate accompanied picture washington answer john adam accompanied picture adam memory system dualcoding theory picture superiority effect suggest many question idea much benefit presenting question answer multiple form perhaps even multiple picture audio video perhaps multiple speaker different gender different accent etc computer code perhaps form demand form interaction case work best vary context psychologist steven smith arthur glenberg robert bjork steven smith arthur glenberg robert bjork environmental context human memory reported several experiment studying effect place human memory one experiment found studying material two different place instead twice place provided improvement later recall part broader pattern experiment showing varying context review promotes memory use memory system support thing like changing location review changing time day review changing background sound lack thereof reviewing case experiment done suggesting impact recall necessarily clear robust result reproducible possible result effect uncontrolled original experiment still seems worth building system test possible improve result card interact one another ideal network structure knowledge complicated somewhat subtle set question let give simple example illustrate idea presented card mnemonic medium though standalone entity connection card suppose card george washington vice president answer john adam picture adam john adam look like answer picture adam perhaps question involving sketch adam washington together key moment set card form network interrelated card use memory system like quantum country study network happens people observed recall remove card crucial lynchpin card particularly effective network structure particularly effective type relationship card crucially general principle identify finding deepest powerful way representing knowledge system obvious prototype mnemonic medium developed tip much larger iceberg suggestion made question asked also merely beginning give flavor possible two cheer mnemonic technique discus memory system people many immediately respond look mnemonic technique approach memory system different quantum country duolingo anki system discussed perhaps familiar simple mnemonic technique school one common form trick remembering color rainbow name roy g biv red orange yellow green etc remembering periodic table element using songan enjoyable extended introduction technique may found joshua foer book moonwalking einstein complex variation visualization technique method locus suppose want remember shopping list using method locus visualize familiar location say childhood home visualize walking room room placing item shopping list prominently room go shopping recall list imagining walking house socalled memory palace looking item room never used memory palace sound like could nt possibly work even novice often shocked well technique work small amount practice expert work hard developing technique remarkable thing like memorizing order shuffled deck card list hundred digit way using people immensely powerful visual spatial memory form leverage type memory small minority population posse mind eye mentally visualize condition known aphantasia one u asked twitter aphantasics tried using method locus well worked reply remarkably heterogeneous striking said mnemonic technique work deserves study given perhaps surprising often meet people tell u mnemonic technique much promising approach memory idea spaced repetition enthusiastic mnemonic technique important understand limitation bedazzled impressiveness someone rapidly memorize deck card one caution concern range memorized using mnemonic technique practice often quite specialized mnemonic expert instance use somewhat different approach memorize list digit versus deck card approach must mastered separately heavy time investment two narrow kind memory furthermore mnemonic technique tend much better suited concrete object abstract conceptual knowledge difficult store say main point treaty versailles memory palace nt mean ca nt done mnemonic expert developed clever technique converting abstract conceptual knowledge concrete object stored memory palace general advantage spaced repetition work across far broader range knowledge mnemonic technique second caution relates elaborative encoding mnemonic technique likely realized example elaborative encoding action connecting thing want memorize say shopping list something already meaning u say memory palace contrast expert learns new information field nt make artificial connection memory palace instead find meaningful connection already know connection useful expertise building dense network understanding deeper desirable kind expertise connection native subject artificially constructed mnemonic make u seem negative mnemonic technique fact enthusiastic date certainly underused mnemonic medium written merely meant temper overenthusiasm sometimes encounter people go far tell u mnemonic make memory solved problem simply false limitation understood powerful tool particularly true knowledge arbitrary ad hoc structure example difficult remember color rainbow color obviously connected anything else unless happen spectrum visible light memorized reason make mnemonic like roy g biv extremely helpful mnemonic technique thought useful tool use building powerful memory system especially combined idea spaced repetition important memory anyway people tend fall two bucket told mnemonic medium one group fascinated idea want try second group skeptical even repulsed caricature say care memory want deeper kind understanding ca nt look stuff internet want creativity want conceptual understanding want know solve important problem dull detailobsessed grind focus rote memory worth thinking hard objection develop best possible memory system need understand address underlying concern part mean digging far enough identify mistaken superficial part concern also mean distilling sharply possible truth concern help u improve go beyond current prototype mnemonic medium one response objection argument lived experience past one u mn often helped student learn technical subject quantum mechanic noticed people often think getting stuck esoteric complex issue suggested introduction essay often really going hard time basic notation terminology difficult understand quantum mechanic unclear every third word piece notation every sentence struggle like trying compose beautiful sonnet french know word french frustrated think trouble difficulty finding good theme striking sentiment image really issue word compose time mn somewhat selfsatisfied belief people focused remembering basic worried le difficult highlevel issue find highlevel issue took care nt realize also applied began using memory system anki read paper new field found almost unsettling much easier anki made learning basic subject made start wondering memory often binding constraint learning new field see learning new field using anki last four paragraph adapted augmenting longterm memory one particularly common negative response mnemonic medium people nt want remember unimportant detail looking broad conceptual understanding difficult know make argument bluntly seems likely people fooling confusing sense enjoyment sort durable understanding imagine meeting person told broad conceptual understanding speak french turned know meaning bonjour au revoir tres bien think claim broad conceptual understanding french hilarious want understand subject real sense need know detail fundamental mean knowing immediately reading mean internalizing long termthe last two paragraph adapted forthcoming mnemonic essay andy matuschak michael nielsen quantum teleportation work better model conceptual mastery actually enabled mastery detail one user quantum country told u found experience reading unexpectedly relaxing longer worry whether would remember content simply trusted medium would ensure reported instead able spend time conceptual issue people respond mnemonic medium focus boring memory stuff missing point largely automating away problem memory mnemonic medium make easier people spend time focusing part learning conceptual issue another common argument spaced repetition system better rely natural repetition instance learning programming language argument go nt memorize every detail language instead use language real project naturally repeatedly use eventually commit memory part language important learn important partial truth good use learning part creative project indeed ideal memory system might help happen prompting work rather artificial cardbased environment furthermore common failure mode memory system people attempt memorize thing unlikely ever use instance good surprisingly common someone memorize lot detail programming language plan use one small project memorize detail case ever need pattern mistake truth last paragraph also limit learning french nt know french speaker waiting natural opportunity speak wo nt work even create opportunity speak desirable accelerate awkward uncomfortable early stage form barrier using language phase memory system shine accelerate people awkward early stage learning subject ideally support enable work creative project work well take good heuristic given person commit memory good one person memorize may bad another working heuristic ongoing challenge design memory system incidentally surprising number people say repulsed similarly strong word spacedrepetition memory system line argument usually variant claimed spacedrepetition system help memory true must use system hate using system response deny first step argument course mistake elsewhere absolutely reason anyone use system even help memory someone hate using simply choose using memory system moral imperative immense amount research done relationship memory mastery much research detailed context specific level broader conclusion one especially interesting series study done herbert simon collaborator studied chess player discovered see eg william g chase herbert simon perception chess fascinating earlier work related vein done adrian de groot summarized book thought choice chess master chess player look position chess nt see term individual piece rook pawn instead year playing analyzing game player learn recognize somewhere pattern chess piece much elaborate chunk combination piece player perceive unity able reason higher level abstraction individual piece least part ability recognize reason chunk made gameplay much better novice furthermore although simon work context chess subsequent study found similar result area expertise met many mathematician physicist say one reason went mathematics physic hated rote memorization common many subject preferred subject possible derive everything scratch conversation quickly becomes evident memorized enormous number concept connection fact discipline fascinating people blind central role memory play thinking seems plausible though need study mnemonic medium help speed acquisition chunk acquisition mastery mean fan rote memory kind forced memorization common school course believe many people dislike rote memorization led generalized dislike memory consequently underrate role play cognition memory fact central part cognition right response immense amount dreary rote memorization rather use good tool good judgment memorize truly matter identified way criticism memory system mistaken miss point way criticism insightful shortcoming memory system way wary already implicitly mentioned point vein think problem like need avoid orphan question make sure user nt merely learn surface feature question way memory system fail used poorly key concern memory system memory system nt make easy decide memorize obviously meet lot people use memory system poorly chosen purpose following surprisingly close transcript conversation many time like memory system tried memorize country africa boring trying remember country africa blank look confusion easy poke fun kind thing done equivalent memory practice even user quantum country seem going motion misplaced sense duty question beneficial memorize fundamental answering question well trivial real impact mnemonic medium people cognition change people behavior famous boxer supposed said everyone plan get punched face regular user memory system sometimes report remembers answer tested system nt mean recall really need tipofthetongue feeling oh know actual recall much le fluent facility one ultimately want effective action furthermore user may even recognize opportunity use learned broadly memory endgoal embedded larger context thing like creative problemsolving problemfinding many way taking action world suspect impact memory system vary lot depending design may used crutch people lean may used greatly enable people develop part cognition nt yet understand well ensure enablers rather crutch later essay describe tool thought integrated memory system may better enable transition effective action invent hinduarabic numeral let briefly get away memory system imagine designer living ancient rome working mdc mathematical design corporation client come one day expressing desire improve roman numeral course literally describe problem likely tax collector wanting tabulate tax efficiently vague notion mdc may able help experienced designer seems improved system numeral may need respond request modern vantage point know vastly better system numeral possible hinduarabic numeral hinduarabic numeral fact great leap history tool thought could designer made leap creative step would needed invent hinduarabic numeral starting roman numeral creative practice step would likely occur clear somewhat fanciful thought experiment many idea needed get hinduarabic numeral fact known earlier babylonian greek culture also inchoate abacus similar device asking literal historical question rather question meant stimulate thought design process could take roman numeral hinduarabic numeral ca nt know answer question sure worth pointing hinduarabic numeral nt extraordinary piece design also extraordinary mathematical insight involve many nonobvious idea know roman numeral perhaps remarkably meaning numeral actually change depending position within number also remarkable consider add number point likely use similarly add also use despite fact meaning second sum completely different first sum modern user interface term numeral affordances despite meaning different two case take granted similarity behavior consequence deep fact number system commutativity associativity distributivitythe phenomenon occurs conventional gradeschool algorithm multiplication division one u spun short piece discovery fiction discussing detail way hypothetical designer might arrived idea property many point design mathematical insight inextricably entangled mathematical insight sense design insight vice versa indeed seems fair say person could invent hinduarabic numeral starting roman numeral would one great mathematical genius ever lived one great design genius ever lived extraordinarily capable domain capable insightthroughmaking loop used evolving system numeral improve mathematical idea original worldclass insight mathematics also use mathematical insight improve evolving system numeral rather sobering compare conventional modern design practice typical practice interview domain expert case mathematician read relevant literature talk user existing system analyze serious behavior individually scale short people design community refer immersing target field powerful practice best cause system come existence would otherwise inconceivable applied roman numeral hypothetical ancient rome todayof course designer spoke expert say babylonian mathematics might well come across idea ignore since depends oddity many excellent prior idea numeral system displaced roman culture practice would likely improve great deal would provide anywhere near level mathematical insight needed arrive hinduarabic numeral story hinduarabic numeral mathematics fanciful express general truth powerful tool thought express deep insight underlying subject matter case memory system mean applied cognitive science collage existing idea cognitive science pasted together using modern design practice rather express deep original insight memory insight noone else world ever truly great memory system cognitive science highest order discussion take away warning aspiration warning conventional tech industry product practice produce deep enough subject matter insight create transformative tool thought indeed part reason little progress tech industry tool thought sound like knock conventional product practice practice astoundingly successful purpose creating great business also alan kay dubbed pop culture research culture build transformative tool thought need go beyond pop culture aspiration team serious making transformative tool thought create culture combine best part modern product practice best part different modern research culture need insightthroughmaking loop operate whereby deep original insight subject feed back change improve system change system result deep original insight subject note making common argument making new tool lead new subject matter insight toolmaker vice versa correct much weaker saying rather making new tool lead new subject matter insight humanity whole ie significant original research insight vice versa would ideally rapidlyturning loop develop transformative tool cultural struggle seems extraordinarily rare find insightthroughmaking loop working full throttle people expertise one side loop often trouble perceiving much le understanding participating nature work go side loop researcher brilliant domain think making something essentially trivial matter implementation maker nt understand research see merely rather slow dysfunctional unprofitable making process certainly true silicon valley common meet accomplished technical maker reading story richard hamming richard feynman think understand research well enough create new bell lab usually victim dunningkrugeritis ignorant even aware ignorance course got long way go quantum country yet generating nearly deep enough idea memory cognition yet one world foremost memory laboratory considered product also earliest day yet iterating nearly fast enough learning nearly fast enough system getting insightthroughmaking loop operate full throttle mean reinventing part research culture conventional product development culture mean new norm new type person involved key decision making aspiration believe necessary develop transformative tool thought examined mnemonic medium depth intent show early stage development specific tool thought thinking enabled development second part essay explore broadly briefly sketching idea several tool thought address broader question especially around nt work tool thought mnemonic video digital artist eric wernquist released extraordinary short video entitled wanderer video provides firstperson glimpse would like explore solar system hear narrator carl sagan wonder awe help empathize deep belief value exploration get sense many mystery much beauty cosmic neighborhood music begin wistful nostalgia ancestor dared explore change convey excitement danger boldness member future generation continue exploration interesting contrast video video script short text carl sagan text beautiful reading much remote cerebral experience conveying much le visceral emotional understanding friend grant sanderson make astonishing mathematics video youtube channel one favorite video sketching proof relatively recent research result geometry using idea algebraic topology sound fearsome video beautiful accessible viewed million time video wanderer watching video remarkable emotional experience obvious person narrating video love mathematics help empathize watch experience repeated ahah moment moment surprising insight connection formerly invisible become obvious show mathematics something beautiful containing extraordinary idea intriguing mystery time showing mathematics mysterious something anyone understand even tempting overlook undervalue kind emotional connection subject foundation effective learning effective action much easier create emotional connection using video using text flipside emotional connection however often heard people describe sanderson video teaching mathematics conversation told u nt think small fraction viewer taking away much detailed understanding mathematics suspect generally true high affect video usually little change people detailed intellectual understanding rather extraordinary value video lie emotional connection create possible create medium blend best quality video text particular possible create medium emotional range possible video range used convey awe mystery surprise beauty also firmly ground emotional connection detailed understanding mastery detail raison dêtre conventional text perhaps even moreso mnemonic medium believe may possible plan develop mnemonic video form provides emotional connection possible video mastery detail possible mnemonic medium creating form challenging many mooc platform attempted something little vein typical approach lowaffect talking head video video interrupted occasionally brief quizzesthese image excerpted astronomy exploring time space work one mooc platform coursera moocs differ detail overall emotional experience may summed best part video may emotionally compelling though rare achieve emotional range connection best video people like grant sanderson overall emotional experience disjointed almost repellent possible create integrated medium unified carefully crafted emotional intellectual experience ideally possible create something like following moocs question typically presented dry form detached context mnemonic video narrator would explain question important user benefit participating seamless part overall narration done right perhaps appropriate music sense urgency play narration would create real sense stake time video player modified user respond directly question part spacedrepetition experience result would much softer transition highaffect core narration moderateaffect question short sketch one approach thisthe narrator script sketch adapted cosmos episode showing narrator could ask question aloud integrated part overall narration seems likely rhythm mnemonic video would quite different mnemonic essay particularly frequency density question would lower mnemonic medium would necessary test different beat cadence ensure good balance emotional intellectual experience even highaffect video typically quieter moment achieves high affect part contrast lowerintensity moment think way good action movie thriller need lull highintensity time eventually emotional response dulled could design mnemonic video question help fill lowerintensity emotional beat course merely quick sketch one approach design mnemonic video ideally would also spacedrepetition component perhaps question asked text instead video sort sketch seems u promising direction need considerable development intense testing particular need detailed secondbysecond user experience testing understand shape user emotional intellectual experience would continue confident target user desired experience ideally also generate several different design try understand approach would impact user emotional intellectual experience broader point taking emotion seriously historically lot work tool thought either ignored emotion treated secondary concern instead work focused new skill acquired user learns designing spock emotional connection highorder bit user feel disinterested afraid hostile anxious internalize sense excitement beauty perhaps even expansion goal expansion self contrast medium form movie music often video game take emotion seriously designer form often incredibly elaborate model user emotional response model range detailed secondbysecond understanding deep thinking user overall emotional journey believe possible desirable use approach development tool thought time positive emotional experience alone enough tool thought attain enduring power user must experience real growth mastery expansion ability act like take emotional intellectual experience tool thought seriously mnemonic video good venue exploration paraphrase einstein attaining detailed understanding without forming emotional connection lame forming emotional connection without detailed understanding enduring power nt work tool thought today tool thought great nt work done nt major industry noted introduction certainly lot lip service paid instance common hear technologist allude steve job metaphor computer bicycle mind practice rarely lip service many pioneer computing deeply disappointed limited use computer tool improve human cognition douglas engelbart disparaged dangerous disappointing narrow path seem stuck following asked much vision achieved engelbart replied facetiously percent alan kay give talk asserting real computer revolution nt happened yet interview described modern web reinventing flat least give u engelbart christ sake experience many today technology leader genuinely venerate engelbart kay colleague many even feel computer huge potential tool improving human thinking nt see build good business around developing new tool thought without business opportunity work languishes make difficult build company develop tool thought answer consider adobe one large company serious developing new tool thoughtanother large company take tool thought extremely seriously autodesk similar story could told poured money developing new medium plural medium course medium however context medium would usually mean many piece new content mean mean multiple different new medium illustrator photoshop etc reserve unusual pluralization somewhat unusual meaning designer artist program illustrator photoshop medium remarkable tool thought unfortunately adobe medium extremely expensive develop difficult prevent company cheaply copying idea developing nearequivalents consider example way program sketch eaten adobe market share duplicating many best feature several adobe product perhaps notably illustrator consider way figma eating sketch illustrator market share sketch figma done without needing make enormous investment research big advantage adobe marc andreessen observed elad gil high growth handbook true defensibility purely product level really rare silicon valley lot really good issue leapfrogging next team opportunity learn build something better put another way many tool thought public good often cost lot develop initially easy others duplicate improve free riding initial investment duplication improvement good society whole bad company make initial investment tool thought suffer fate many public good society collectively underinvests relative benefit provideof course cost money company sketch figma duplicate feature originating illustrator introduced improvement characterization public good approximate earlier argued modern design practice generally nt challenge producing genuinely transformative tool thought surface processlevel argument appears different public good argument made fact processlevel explanation consequence public good explanation company nt use necessary process little value contrast hardertech industry say chip design company much incentive deep research work industry considerably harder company duplicate capture value research illuminating contrast video game game company develop many genuinely new interface idea perhaps seems surprising since expect interface idea also suffer public good problem game designer need invest enormous effort develop interface idea often immediately copied improved company little cost sense public good enrich entire video game ecosystem big difference video game company company adobe many video game make money first month sale company come copy riff new idea often little affect revenue original game already made money fact cloning real issue gaming especially technically simple game example game three took developer year make much time spent developing beautiful new interface idea resulting game simple clone nearclones began appearing within day one near clone game called sparked minicraze became far successful three extreme game company prolong revenuegenerating lifetime game rereleases longlived online version particularly common capitalintensive aaa game grand theft auto series case business model relies le clever new idea improved artwork rerelease network effect online version branding copying doubt irritating company copied still worth make upfront investment net result gaming clever new interface idea distinguishing feature become game primary advantage marketplace indeed new interface idea may even help game become classic consider many original time idea game ranging space invader wolfenstein braid monument valley result rather underinvesting many company make sizeable investment developing new interface idea even though become public good way video game industry largely solved public good problem contrast company like adobe build business around distribution longterm lock convince people indeed entire organization make longterm commitment product school offer class people call photoshop expert illustrator expert company designate design department adobe shop adobe invest developing clever new interface idea unlike video game company genuinely mean tool thought le central competitive advantage invest le would central advantage adobe perhaps much work developing tool thought company encouraging video game industry make inroad public good problem solution tool thought unfortunately noveltybased shortterm revenue approach game industry nt work want people really master best new tool thought developing virtuoso skill spend dozen hour game getting pretty good moving onto something new another plausible solution public good problem patent granting temporary monopoly use invention many software company including adobe develop large patent portfolio however current patent system solution problem dana rao adobe vice president intellectual property litigation posted call major reform patent system stating patent system happened patent gold rush built patent value lie innovation behind patent vagueness patent claim ability enforce plaintifffriendly material bad patent come advent led ideaonly patent granted broad often invalid claim eager patent profiteer glad take advantage adobe share common many software company much patenting defensive patent idea patent troll sue similar idea situation almost exactly reverse like innovative company easily attacked patent troll made broad often rather vague claim huge portfolio patent none worked much detail innovative company develop much greater cost ship genuinely good new idea others often copy essential core idea varying enough plausibly evade patent patent system protecting right thing switching away viewpoint individual company viewpoint society whole want incentivize invention also want idea move reasonably rapidly public domain think fundamental tool thought writing number system obviously good spread throughout society unencumbered ip concern broadly many tool thought become valuable society become ubiquitous modern patent system numerous wellknown problem striking poor balance private public interest welldesigned patent system might well help solve public good problem patent system actually seems poorly adapted problem possible avoid public good problem altogether three class tool thought search engine google tool thought avoid public good problem value brand hardtoduplicate capital intensive backend element including data center proprietary algorithm ad network distribution interface idea service twitter considered tool collective thought interface easily copied company hard duplicate due network effect novel hardware device eg vr wii remote new musical instrument used basis new tool thought hardware duplicated often much expensive duplicating software case advantage company often distribution marketing relationship vendor make product platform suggestion avoid public good problem nt directly solve public good problem many promising direction including idea mnemonic medium mnemonic video involve substantial public good element possible solve public good problem case two promising approach seem u philanthropic funding research approach used instance field computer animation animated movie decade public research work computer animation resulted large number powerful many case publicly available idea turn helped prepare way company pixar dreamworks developed many idea took scale model used adobe similar company new tool thought central part company operation core competitive moat moat may instead built around training marketing documentation questioning basic premise three important premise taken granted first assertion still early day many transformative tool thought yet discovered second assertion work tool thought stalled lot interesting work going third kind metapremise assertion kind work worth relative current fashion related idea artificial general intelligence braincomputer interface section discus premise best tool thought already discovered word perhaps unrepeatable golden age expect future gradual incremental improvement perhaps occasional major breakthrough decreasing frequency plausible story suggesting true tech enormous industry well funded many bright ambitious talented people surely major idea discover people would argument reinforced fact individual level meet many brilliant people fascinated often working tool thought nonetheless seem making slow progress story superficial appeal misleading really difficult problem problem like inventing hinduarabic numeral nt solved good intention interest alone major thing missing foundational idea powerful enough make progress earliest day discipline protodisciplinary stage extraordinary people people like ivan sutherland doug engelbart alan kay bret victor may able make progress bespoke individual progress difficult help others become proficient scale community yet really discipline needed development powerful praxis set core idea explicit powerful enough new people rapidly assimilate begin develop practice yet stage tool thought believe far away either argument helpful context nt address core point nt mean lot new transformative tool thought waiting discovered maybe important tool thought already discovered ca nt predict future possible answer question certainty seems u human race nt really tried hard yet small group motivated people pioneering lab parc sri darpainspired early effort well modern lab dynamicland make rapid progress extremely encouraging effort tiny effort scheme humanity overall research effort make rapid progress u suggests scaling becoming much ambitious nt tech industry nt lot ongoing progress tool thought particular nt already lot imaginative determined wellfunded people working nt tech considerable part already developing new tool thought part question caused confusion term obviously many tech company build specialpurpose tool solving specific problem may valuable tool certainly tool thought broad sense discussing like language writing matter illustrator still tech company really develop tool thought already discussed example company partially totally avoided public good problem tool illustrator google search twitter slack google doc programmer toolsprogrammer tool case insightthroughmaking loop operates quite well avoidance public good problem enabled complex set factor including fact case many highly skilled researcher simultaneously also accomplished maker either job produce public good researcher enjoyable hobby lesser extent true artistic music community really significant tool thought consider fundamental tool thought language writing music etc public good noone owns language extent owned trademark may actually limit utility language tool introducing fundamental new mental representation mental operation nt owned company pattern owned humanity argument make seem likely many fundamental powerful tool thought suffer public good problem mean tech company focus elsewhere mean many imaginative ambitious people decide focus elsewhere mean nt developed powerful practice needed work area result field still predisciplinary stage result ultimately mean fundamental powerful tool thought undersupplied work artificial general intelligence agi braincomputer interface bci instead often asked nt work agi bci instead tool thought nt important exciting agi particular many skill required seem related certainly important exciting subject present agi bci far fashionable better funded reader may rolling eye supposing thinking predetermined would nt writing essay nt favor work tool thought question wrestled hard deciding spend life one u wrote book artificial intelligence deciding focus primarily tool thought decision made lightly one revisits time time indeed given ongoing excitement agi bci would surprising people working tool thought nt regularly little voice inside head saying hey nt instead fashion seductive one striking difference agi bci based relatively specific welldefined goal contrast work tool thought much le clearly defined part ca nt point welldefined longrange goal rather longrange vision aspiration almost evocation work really exploration openended question develop tool change expand range thought human being think culturally tech dominated engineering goaldriven mindset much easier set kpis evaluate okrs manage deliverable specific endgoal mind perhaps surprising tech culture much sympathetic agi bci overall program work historically case humanity biggest breakthrough come goaldriven way creation language ur tool thought perhaps important occurrence humanity existence although origin language hotly debated uncertain seems extremely unlikely result goaldriven process amusing try imagining prehistoric quarterly okrs leading development language sort goal could one possibly set perhaps quota new irregular verb inconceivable similarly invention tool thought writing printing press among greatest ever breakthrough far know emerged primarily openended exploration primarily goaldriven way even computer came exploration would regarded ridiculously speculative poorlydefined tech today someone nt sit think need invent computer thought frame reference rather pioneer alan turing alonzo church exploring extremely basic fundamental seemingly esoteric question logic mathematics nature provable exploration idea computer emerged many year discovered concept goal fundamental openended question seem least good source breakthrough goal matter ambitious difficult imagine convince others silicon valley goaldriven culture indeed feel attraction goaldriven culture empirically openended exploration successful new tool thought like question hear often yet almost definition say noted earlier could communicate experience essay tool would failing job would transforming person thinking even consciousness concretely understand mnemonic medium must use intensively extended period even may conscious effect done interview user apparently unaware incredible level recall material essay read one famous paper philosophy consciousness entitled like bat tool thought pose similar question near impossible answer without immersion tool like language user musician seems plausible u work tool thought next decade important work agi bci given fashionable wellfunded work agi bci currently seems nearly certain work tool thought offer vastly greater benefit margin longer term situation le clear seems likely three field merge least feed strongly one another together carter one u argued one promising application ai way discovering new tool thought carter michael nielsen using artificial intelligence augment human intelligence bci seems likely even closely related bci sometimes described using idea like memory chip longterm memory way increasing shortterm working memory idea may well become important also seems possible bcis used enable new mental operation new mental representation new affordances thought short kind thing involved developing nonbci tool thought perhaps develop capacity directly imagine dimension traversing riemann manifold ability multiple track conscious attention changing interface thought basic abstraction operation allowed seems plausible work today tool thought directly impact way use bcis future executable book skill writing create context people edwin schlossberg computer scientist peter norvig written interactive essay discussing distribution wealth society norvig essay jupyter notebook express many idea running python code code set population agent initial distribution wealth agent randomly repeatedly meet one another pair engage simple economic transaction concretely simple transaction model could two people meet joint wealth pooled randomly divided two model give gist complex transaction model course possible notebook simulates distribution wealth evolves time part make norvig essay beautiful line python code norvig able show surprising result wealth inequality instance result suggest initial distribution wealth economy nt much affect longrun distribution wealth rather nature transaction determines longrun distribution wealth likely violates least user intuition another example result also suggest constraining agent trade people geographically near make little difference final distribution wealth result like challenge intuition user instead challenge basis easilyignored abstract argument user immediately engage norvig model suppose someone nt like idea initial distribution wealth nt affect longrun wealth inequality challenged find counterexample initial distribution wealth affect longrun inequality experiment easily making simple modification one line python code trying find instance initial distribution matter matter whether succeed fail build better understanding problemsufficiently motivated reasoner course ignore conclusion nt like people likely lost cause serious thought suppose content norvig essay instead presented conventional static form reader extend interrogate result would require total mastery material high level mathematical competence notebook format much easier reader experiment exploration scaffolded make small modification see result even answer question norvig anticipate kind scaffolded exploration way build understanding perhaps even push frontier knowledge norvig essay one thousand perhaps even million jupyter notebook created course notebook hastily poorly written hand excellent writer thinker like norvig notebook become remarkable environment thought individual shared tempting regard merely mashup essay code really new medium form different possibility either essay code striking opportunity go much section explore opportunitiesof course system like jupyter go back decade antecedent knuth notion literate programming mathematica notebook parc learning research group plato system broadly computerassisted instruction name discussion emphasize opportunity seem u undervalued many prior system described norvig essay interactive essay useful specific term distinguish interactive form like mnemonic medium essay use term executable book course placeholder term executable essay would many way natural though unfortunately term perhaps even naturally interpreted meaning web page current context wo nt define precisely definition point rather point try better understand potential medium form combine prose code something like form tool thought must developed serious work aspiration canonical content seymour papert one principal creator logo programming language remarkable aspiration logo logo sometimes described programming language child people sometimes think papert mostly interested helping child learn program nt papert principal intent rather papert wanted create immersive environment kind mathland child could immersed mathematical idea essence child could learn differential geometry going mathland beautiful aspiration logo contains many striking idea far know professional differential geometer generally mathematician us logo seriously tool work upon reflection seems troubling logo genuinely express idea differential geometry nt differential geometer use start wonder might logo leaf important idea differential geometry maybe even important idea differential geometry mathematically trained papert nt accomplished differential geometer would even known include certainly people interested logo nt qualified make judgment standard retort heard within logo community talk floor ceiling different environment thought account logo low floor meaning anyone use low ceiling well adapted sort advanced work professional would want first sound plausible upon reflection difficult make much sense creator logo know mastering logo help later understanding real forgive u differential geometry criterion success one u mn worked several year research closely related field riemannian geometry logo enjoyable use contains many fun idea mn trouble seeing learning logo would help much learning differential geometry end norvig economics essay short afterword explaining came write essay shortly writing essay heard kind economic model discussed notebook wanted explore several question talking colleague decided independently attack problem compare note although norvig essay sense educational norvig intent explore set problem genuinely curious educational aspect byproduct worldclass research scientist wanted explore set question used jupyter medium exploration share exploration world shared form others could immediately build upon extend thinking lot work tool thought take form toy educational environment tool writing nt used actual writer tool mathematics nt used actual mathematician even though creator tool good intention difficult suspicious pattern easy slip cargo cult mode work seems say mathematical actually avoids engagement heart subject often creator toy ever done serious original work subject supposedly building tool know need included concretely suppose want build tool subject x say x differential geometry unless deeply involved practicing subject going extremely difficult build good tool much like trying build new tool carpentry without actually carpentry perhaps part tool like mathematica work quite well principal designer stephen wolfram genuine research interest mathematics physic course part mathematica work equally well part feel like toy seems likely one used seriously internal company general principle good tool thought arise mostly byproduct original work serious problem tend either created people work people working closely people genuinely bought related argument made eric von hippel book democratizing innovation identifies many instance appears commercial product development based large considerable part innovation user furthermore problem typically intense personal interest problemsolvers working problem paycheck working desperately want know answer many people asked wrote first mnemonic essay quantum computing chosen easier subject could attracted much larger audience also wanted essay authentic problem wanted solve one u mn done lot original research work quantum computing essay reflects thinking indeed framing essay answering question mn personally wanted answer human ever discovered alien would computer type computer would perhaps sound like contrived question quite serious turn deep question nontrivial answer writing essay helped mn substantially improve understanding question said answering question nt principal point creating essay making mnemonic medium future work tool thought valuable push much harder question genuinely like answer way keeping honest ensuring building flashy toy something genuinely useful solving real problem independent interest serious medium notion canonical medium mean instance medium expand range set new standard widely known amongst creator medium instance citizen kane godfather expanded range film inspired later film maker also true new medium youtubers like grant sanderson created canonical video expand range people think possible video form something like feynman lecture physic textbook case one get sense people deeply committed many lecture obvious feynman nt educating reporting result lifelong personal obsession understanding world work thrilling expands form disappointed unambitious people sense jupyter notebook nt pushed medium hard citizen kane jupyter notebook indeed barely beyond lumière brother example like norvig notebook fine work seem disappointing evaluated leading example medium aspiring canonicity one fun project would take recent ipcc climate assessment report perhaps starting small part develop version executable instead report full assertion reference live climate model actually many interrelated model people explore good enough people would teach class really superb would teach class could perhaps become creative working environment many climate scientist one promising exploration direction structure interpretation classical mechanic beautiful executable book building classical mechanic many theorem classical mechanic nt expressed static form page live code modified user theorem become apis literally applied object chained together us much powerful underlying model jupyter developing new symbolic language part book many flaw among book nt run live browser making difficult user experiment book well written author understand classical mechanic deeply author book nonetheless inspiring evocation possible hint possible author use executable book serious purpose aspire toward canonical medium stronger emotional connection inverted writing structure consider author writing popular book quantum mechanic author strong position begin book astonishing phenomenon black hole evaporation quantum teleportation role quantum fluctuation early universe wish start deepest mystery known humanity relationship quantum mechanic gravity quantum measurement problem shortage extraordinary phenomenon beautiful mystery kind thing touch chord inside many perhaps people relatively easy draw reader get engaged keep connected contrast consider typical technical book quantum mechanic unlikely start black hole evaporation quantum teleportation discussion perfunctory instead start drily technical minutia complex number wavefunctions many different type differential equation solve hermitian unitary operator piece piece slowly building machinery needed solve quantum mechanical problem may ten even hundred page book begin connect exciting problem form breadandbutter popular account people little experience good technical writing often complain dry bottomup approach complain writer instead stay closer fun material use le technical notation nomenclature competent writer attempt follow prescription invariably work poorly one problem person spend year reading analogy black hole evaporation quantum teleportation end reading typically much genuine understanding show analogy heuristic reasoning simply nt go far may entertaining produce feeling understanding reasoning wo nt scale ca nt applied phenomenon least without lot caveat caveat reader position understand apply result good technical writer instead mostly build thing first principle occasional digression broader motivating picture mean starting lot detailed technical minutia striking contrast conventional technical book possibility enabled executable book imagine starting executable book say quantum teleportation right first page provide interface perhaps library imported would let user teleport quantum system immediately could experiment different part quantum teleportation protocol illustrating immediately striking idea user would nt necessarily understand going begin internalize accurate picture meaning teleportation time leisure author could unpack might priori seem drier detail except point reader bought detail wo nt drya similar argument made rachel thomas providing good education deep learning word could begin executable book material user already care connect easily find motivating instance could begin exploring teleportation big bang opening wo nt suffer drawback popular science vague imprecise rather interface would completely well specified care interface could scaled applied everexpanding context understanding would transferable even user understood tiny part material could begin tinkering building understanding based play exploration common dismiss approach leading toy understanding believe contrary well enough designed scaffolding lead deep understandingthe master video game designer see example dan cook building princess saving app jonathan blow marc ten bosch designing reveal nature universe developed enough depth environment may even used explore novel research idea knowledge kind project never seriously pursued fun try summary conclusion covered lot helpful distill main takeaway general principle question belief aspiration let begin memory system particularly mnemonic medium memory system make memory choice rather event left chance change relationship learning reduces worry free attention focus kind learning including conceptual problemsolving creative memory system infancy possible increase effective human memory order magnitude even beyond existing memory system system mnemonic medium may help expand range subject user comprehend would virtuoso use mnemonic medium look like sense mnemonic medium flash card right conclusion nt therefore trivial flash card greatly underrated writing quantum country treated writing card reverence ideally author would take card writing seriously nabokov took sentence writing course nt reach level aspiration expands reach medium would virtuoso even canonical us mnemonic medium look like memory system used build genuine conceptual understanding learn fact quantum country achieve part aspiration virtuoso card writing part narrative embedding spaced repetition gradually build context understanding mnemonic technique memory palace great versatile enough build genuine conceptual understanding technique specialized emphasize artificial connection inherent connection present much conceptual knowledge mnemonic technique however useful bootstrapping knowledge ad hoc structure memory far important people tend think play role nearly every part cognition including problemsolving creative work metacognition flip side memory system want grow type tool tool reading tool problemsolving tool creating tool attention management said nt yet know memory system want reiterate memory system infancy mnemonic medium merely one prototype tool thought also discussed several idea including mnemonic video executable book key takeaway practice would lead tool thought transformative hinduarabic numeral way modern design practice tech industry product practice fall short successful need insightthroughmaking loop operating full throttle combining best deep research culture best silicon valley product culture tool thought mostly public good result undersupplied said closelyrelated model production succeeded game industry adobe autodesk pixar model studied emulated possible used inspiration find model take emotion seriously historically work tool thought focused principally cognition much work stuck spockspace take emotion seriously best musician movie director video game designer mnemonic video promising vehicle exploration possibly combining deep emotional connection detailed intellectual mastery mnemonic medium aspires toward tool thought must developed tandem deep original creative work much work tool thought focus toy problem toy environment useful prototyping successful tool must ultimately used serious original creative work baseline litmus test whether tool genuinely working merely telling good story ideally tool stream canonical medium expanding form entering consciousness creator let return question began essay build transformative tool thought course nt even precisely defined transformative tool kind tool relatively low cost change practice produce transformative change outcome nonlinear return qualitative shift thinking contrast usual situation small change practice cause small change result historically human invented many transformative tool thought writing music ancient example modern time tool photoshop autocad qualify although early day believe mnemonic medium show much promise need developed much along line described likely requires additional powerful idea believe possible humanity widespread memory practice radically change way think broadly hope principle essay help support creation transformative tool thought historically invention tool thought done bespoke inspired individual group believe future established community routinely kind invention
151,Lobsters,education,Education,Human Readable Magazine - For the inquisitive developer,https://www.kickstarter.com/projects/pekalicious/human-readable-magazine-for-the-inquisitive-developer,human readable magazine inquisitive developer,funding period,funding period oct nov day
152,Lobsters,education,Education,Notes on building SQL exercises,https://jvns.ca/blog/2019/09/30/notes-on-building-sql-exercises/,note building sql exercise,sql exciting distributed sql engine write exercise knowledge skill design people learn knowledge skill start challenge know draft page teaching group getting feedback anonymously track response tech stack sqljs firestore vuejs typescript tailwind cs refactoring ui goal make something worth,last couple week working interactive sql exercise help people get better writing sql query pretty new thing thought write note process far sql exciting distributed sql engine reason sql exciting lot company storing data distributed sql database google bigquery amazon redshift spark sql presto etc let run complicated query across billion row pretty quickly fast partly designed run query across possibly ten hundred computer last job wrote thousand sql query data analysis working machine learning team mostly ad hoc query answer question data learned lot fun trick make faster easier write never really talked think sql really nice way go sort complicated question billion row data ok answer great move write exercise knowledge skill first time really trying earnest write exercise teach something instead explanation thing reason read design people learn julie dirksen make point knowledge different skill defines skill something practice sql definitely something practice want learn thought sql relatively simple skill programmingprogrammingadjacent skill go maybe make something interactive relatively simple help people improve sql skill also well challenge like trying thing tried start challenge started sql exercise kind obvious way start easy exercise make harder harder time introduce new concept watched people trying noticed problem lot people already know sql sometimes would go exercise without learning anything fun came different structure section sql exercise start challenge test skill section trying teach challenge hard move bunch easier exercise teach skill need solve challenge since showing easier explaining draft page teaching group screenshot initial challenge basic group look like think challenge particular good yet lot work idea getting feedback anonymously track response early also realized needed get feedback challenge people finding hard easy every time someone run query track randomly generated uuid person challenge like query ran puzzle solving already learned lot example first required column name match resulted lot people getting wrong answer good reason removed requirement clear result ordered often people end right answer except wrong order still need something explain syntax count distinct col people end using wrong syntax getting stuck join exercise people get stuck join order x left join instead left join x get right answer basically addition making exercise think need spend time cataloguing wherehow people getting stuck practice helping make sure fewer people get stuck tech stack build using sqljs run sql query browser sqlite server done browser nobody take server running really expensive query firestore store query people trying vuejs manage javascript component typescript compensate bit lack javascript experience help refactor code easily tailwind cs cs also bought refactoring ui book try improve web design skill tiny bit think helped little far vue component let really easily add new challengesexercises page like puzzle id counttheowners titlecount number different cat owner description use code count distinct column code count distinct value column also code sum distinct column code code avg distinct column code sure would useful answer select count distinct owner numowners cat vbind tablenames cat puzzle goal make something worth working towards making exercise challenge would help someone beginnerintermediate sql skill improve sql fluency enough easily worth see get know whether price goal useful person mind sort usual year ago heard sql could write basic query gave table interesting data really effectively use sql answer question
153,Lobsters,education,Education,Teaching Tech Together,http://teachtogether.tech/,teaching tech together,,taylor francis
156,Lobsters,education,Education,How to make sure your question gets answered online,http://veekaybee.github.io/2019/09/11/answer-questions-online/,make sure question get answered online,saul steinberg untitled question mark data science different david wisely note get lot question data helper hosing python environment fantastic post question better question question better question one prefer tb data,saul steinberg untitled question mark since writing post data science different lot people emaileddmed asking advice python data science machine learning career david wisely note find saying thing lot put blog post hopefully advice useful people write others internet asking help often get message like getting machine learning book recommendation looking switch data science career paragraph background including every course person taken detailed description job tell want learn python give link blog post like sending response question like get lot question get least detailed email week least twitter dm many people tech similarly journalism highvisibility online field particularly popular blog high twitter following volunteered open source maintainer written book get similar amount mail usually much much daunting open inbox twitter dm note people need advice input something regular basis get wrong happy answer career technology question enjoy one reason email publicly available data helper really flattered people think expert anything hosing python environment love engaging online tech community however point ability keep inbox lag behind ability provide focused concrete helpful advice trey writes fantastic post first let make absolutely clear flattering seen someone whose opinion valuable certainly position privilege seen source career advice also say probably last person seeking advice stumbling around dark without flashlight like everyone else second let tell much dread simple email bring ignore email feel like jerk respond email almost guaranteed minute meandering unplanned conversation person emailing busy b invested project job search c going struggle life deal triage based set internal heuristic namely question wellwritten question respectful reader time constraint easy act asking good question critical skill online work asking good question get good answer two great resource figuring ask good question specific inperson stack overflow platform wanted write something specifically emailtwitter fast loose guideline asking good question much higher probability answered good question make obvious person already done basic research googling half hour give result good question question best resource learning python better question seen people use learn python hard way also controversy online opinion book would recommend good question specific narrow scope tailored person area expertise usually ask question reading person past blog postswatching talksetc question tell data processing library use better question see given talk using spark emr hadoop even data science laptop one prefer tb data good question brief point respectful reader time leaving call action last part often get pretty long email including every single detail relevant question hand super busy get hundred email one likely answer short easilyskimmable email template developed asking good question allow recipient skim easily address need another caveat want add life advice type question people give life advice going made successful might work asking good question time investment expecting person answering question put time investment pay dividend hope helpful quest gaining knowledge online good luck
157,Lobsters,education,Education,Learning At Scale: Definitions,http://tiny-giant-books.com/Entry1.html?EntryId=recSYQ1wis5dofZC9,learning scale definition,,
158,Lobsters,education,Education,git exercises: navigate a repository,https://jvns.ca/blog/2019/08/30/git-exercises--navigate-a-repository/,git exercise navigate repository,question solution question solution question solution question solution question solution question solution question solution question solution question solution question solution question solution question solution question solution question solution question solution question solution question solution question solution,question check matz commit ruby commit id find many line code ruby time solution git checkout find name c xargs wc l question check current master branch solution git checkout master question look history file hashc last commit id changed file solution git log hashc look first line get commit id got question get diff hashc changed last year compare file master branch file commit solution git diff hashc question find recent commit changed hashc look diff commit solution git log hashc look first line get commit id got git show question repository bunch tag every ruby release get list tag solution git tag question find many file changed tag tag solution git diff stat file question find commit commit check look file briefly go back master branch solution git log grep c head git checkout l git checkout master question find commit tag corresponds solution git show question list directory gitrefstags run cat see content one file solution cat question find commit id head corresponds right solution git show head question find many commits made test directory solution git log oneline test wc question get diff libtelnetrb commits many line file changed solution git diff libtempfilerb question many commits made ruby tag solution git log oneline wc question many commits authored matz ruby creator solution git log oneline author matz wc l question recent commit included word tkutil solution git log tkutil result question check commit create new branch point commit solution git checkout git branch mybranch question run git reflog see navigating repository done far solution git reflog
159,Lobsters,education,Education,curl exercises,https://jvns.ca/blog/2019/08/27/curl-exercises/,curl exercise,badass making user awesome curl bite size networking fluency valuable curl exercise http httpbinorg http httpbinorg http httpbinorganything http httpbinorganything http httpbinorganything http httpbinorganything http httpbinorganything http httpbinorganything http httpbinorganything http httpbinorganything http httpbinorganything http httpbinorgimage http httpbinorganything http httpbinorgimagejpeg http wwwtwittercom http httpbinorganything http http http httpbinorganything http twittercom http stripecomdocsdevelopment http httpbinorganything,recently interested people learn thing reading kathy sierra great book badass making user awesome talk idea deliberate practice idea find small microskill learned maybe session minute focus learning microskill exercise trying think computer skill thought could learned session thought making http request curl might skill like curl exercise experiment curl curl command line tool making http request like easy way test server apis think little confusing first drawing explaining curl important command line argument page bite size networking zine click make bigger fluency valuable command line tool think fluency really helpful really nice able type thing need example recently testing gumroad api able type curl http accesstoken secret x get get thing working command line curl exercise exercise understanding make different kind http request curl little repetitive purpose exercise basically everything curl keep simple going make lot request website http httpbinorg httpbin service accepts http request tell request made request http httpbinorg request http httpbinorganything httpbinorganything look request made parse echo back requested curl default make get request make post request http httpbinorganything make get request http httpbinorganything time add query parameter set valuepanda request google robotstxt file wwwgooglecomrobotstxt make get request http httpbinorganything set header useragent elephant make delete request http httpbinorganything request http httpbinorganything also get response header make post request http httpbinorganything json body value panda make post request previous exercise set contenttype header applicationjson post request need content type match body look json field response see difference previous one make get request http httpbinorganything set header acceptencoding gzip happens put bunch json file make post request http httpbinorganything json file body make request http httpbinorgimage set header accept imagepng save output png file open file image viewer try thing different accept header make put request http httpbinorganything request http httpbinorgimagejpeg save file open file image editor request http wwwtwittercom get empty response get curl show response header try figure response empty make request http httpbinorganything set nonsense header like panda elephant request http http request get curl show response header request http httpbinorganything set username password u username password download twitter homepage http twittercom spanish setting acceptlanguage es header make request stripe api curl see http stripecomdocsdevelopment give test api key try making exactly request http httpbinorganything
160,Lobsters,education,Education,A list for Distributed Systems Reading,https://gist.github.com/rusrushal13/4e66c5733bfdc46e96ee0a2dc20fe9fe,list distributed system reading,conference summer school book video blog reading course fun blog slack channel testing reload reload,instantly share code note snippet list distributed system reading conference summer school book video blog reading course fun blog slack channel testing perform action time signed another tab window reload refresh session signed another tab window reload refresh session
161,Lobsters,education,Education,What Is a Logo-Like Language?,https://maxhallinan.com/posts/2019/08/25/what-is-a-logo-like-language/,logolike language,richard serra crane,logo perhaps famous language used program robotic turtle turtle physical virtual moving around floor screen turtle move leaf line along path logo program describes pattern movement usually instructing turtle draw picture turtle graphic drawing came known one application language logo used play music build game teach collegelevel computer science simulate distributed system like ant colony slime meaning write logo interpreter went search specification one language logo found instead many logolike language logolike language organized around belief people learn best making thing especially thing care turtle graphic program written someone want draw picture simulation written someone exploring effect changing ant behavior incidentally programmer come learn geometry distributed system focus thing making mean use language important language logolike language logolike way using language also write javascript draw picture play music build game simulate ant colony javascript used way replicate logo learning experience design logolike language hint experience logolike language model abstract system term concrete object programmer identifies draw picture javascript might instruct computer render path two point draw picture logo give direction turtle uncertain instruct turtle think turtle consider movement would make harder think path point dialect logo filled object musical program coordinate small set voice ant colony many form emergent behavior simulated manipulating chemical patch ground thousand turtle logo programming making thing logo programmer enter microworlds object exist experience microworld basis insight world arise logo programming logolike real distinction language spirit language used microworlds key component distinction remain uncertain distinction made experience programming language microworlds function closure asynchronous control flow need texture world like rising falling tide weather pattern read cloud functors feel le concrete turtle structure navigate rather agent command think closure functor unlike logo programmer turtle element language feature world inhabit environment value floating head urge glance thinking scope closure oneway tunnel pipe wormhole back function environment program flow pipe asynchronous control flow stream imagine floating think stream take functors giant structure like sculpture richard serra functor operation act like crane helping move around structure would use image explain topic someone else form private monologue like dreaming talking defend correctness anything offer evidence logolike experience programmer embodied presence program common experience programming experience associated logo one potential programming general perhaps came identified logo logo first language situated culture prepared notice celebrate drawn culture affirms true learning programming needed logolike language find truth
162,Lobsters,education,Education,How to Get Smarter Without Knowing Anything,https://www.cdevn.com/how-to-get-smarter-without-knowing-anything/,get smarter without knowing anything,anymore knowing thing nt scale get smarter without knowing anything stop optimizing storing knowledge instead optimize retrieving knowledge finding information quickly seriously hundred way improve ability search logical fallacy sidenote prefer reddit learning information quickly conclusion,often find people discus intelligence actually talking knowledge confusion term responsible awful thing like standardized testing whiteboard interview prove know well learn human history definitely wikipedia internet case people nt even know read day information scarce resource turn made knowledge dominating portion perceived intelligence equation anymore longer information bottleneck perceived intelligence equation internet provides nearly alwaysreliable method quickly retrieving exact information need anywhere need additionally knowing thing nt scale smartest person ever lived knew know spent every second life learning specific niche say java programming would still know nothing much information get smarter without knowing anything stop optimizing storing knowledge instead optimize retrieving knowledge long smart phone internet pocket therefore knowledge world question make sure find understand bit exaggeration say nt need know anything reality need optimize bootstrap knowledge minimizing elsewhere bootstrap knowledge describes set knowledge needed find information quickly subsequently learn information quickly finding information quickly finding information quickly core foundation know nothing strategy obviously countless method improve ability find thing internet incredibly crucial learn use google people use google every single day never touch advanced feature know use wildcard character google search basic boolean operator liked seriously hundred way improve ability search google root node findability graph everything increase accuracy learn see bullshit people constantly lie internet gasp time lie poorly sometimes lie decently rarely lie well nt care identifying good liar chance low instead filter learning common logical fallacy erroneous argument important understand poorly structured argument agree dangerous one nt agree number one enemy know nothing disinformation optimize specific source absolutely critical attempt find uniform consistent presentation information consume source varies last le brain optimize away personally favor reddit inherent separation information subreddits save lot time finding thing nt reddit definitely need site offering diverse opinion probably anything china unsure optimizing specific source look like practice imagine every time google question instead google affordable bike buy site reddit important stay date trend etiquette chosen source sure accuracy intent user platform faster find right information nt get locked specific source much important use one source majority time incredibly crucial comfortable going outside source needed even site popular reddit always gap available information reason alone incredibly important comfortable multiple source also time realize information source wrong feeling comfortable consuming content another source give real choice term information control decision sidenote prefer reddit making decision nt scale life constantly going need make decision way make every decision maintain quality instead prefer delegate decision properly delegate decision need find community believe aligns core value based set criterion allow small decision determined community instead way allow spend time critical decision offload smaller stuff group likely choose would anyway plan write another post future go depth use reddit learning information quickly learning information quickly way scale process finding information quickly believe rate learn new information defined following equation learning rate relatability factor base learning rate base learning rate derived mixture retention rate reading comprehension vocabulary ability decipher good information bad information etc relatability factor describes relationship new information want learn closest thing relates already know word relatability factor new information expression new truly improve base learning rate improving base learning rate pretty straightforward read lot reading quickest way improve reading comprehension duhhh general vocabulary make sure push boundary read constantly stay one genre niche long improvement vocabulary slow drastically honestly best way improve base learning rate healthier people nt sleep enough drink enough water consume healthy diet exercise daily meditate thing ability learn general mental health anything direct improve relatability factor improving relability factor bit optimization problem previously stated impossible know anything goal relability optimize piece knowledge heavily relatable highly separated anything combination thing want know building block many thing possible make sure read come source challenge existing viewpoint otherwise might develop stronger bias math perfect example relatability building block understanding core mathematics calculus even simple algebra enable understand huge amount information would unavailable otherwise teaching new language also amazing way improve relability score learning common trope meme cultural reference also helpful moderation remember goal learn many novel piece heavily used information possible ensure random new piece information encountered likely close enough something already know relatable able relate something new drastically reduce amount time take learn way instead know everything know find learn thing need need conclusion focus improving ability find learn information instead trying learn collecting information live age trust knowledge infrastructure allowing decouple intellect much know
163,Lobsters,education,Education,Destroy All Software offers free subscription to those who can't afford one,https://www.destroyallsoftware.com/postcard,destroy software offer free subscription ca nt afford one,execute program da screencasts compendium important register destroy software account first email u,destroy software sell subscription execute program da screencasts compendium however nt want exclude people normal fee prohibitive offer free access people live country normal salary much lower usa currently student university bootcamp etc unemployed wo nt ask group nt tell u unless want small cost free subscription send u postcard chosen method relatively cheap anywhere world also nice get postcard however given currently visiting physical office collect postcard email u instead follow two step important register destroy software account first email u email address registered requesting free postcard subscription hope hear gary bernhardt
165,Lobsters,education,Education,Roll your own comment system (for a static site),https://www.taniarascia.com/add-comments-to-static-site/,roll comment system static site,migrated site wordpress gatsby recommends disqus pro con introduction create deploy nodejs express postgresql rest api heroku database api article putting together front end sivers conclusion khalil stemmler prerender comment,ago migrated site wordpress gatsby static site generator run javascriptreact gatsby recommends disqus option comment briefly migrated comment looked site browser window without adblocker installed could see dozen script injected site even worse truly egregious buzzfeedesque ad embedded comment decided immediately go comment bit felt like idea reception article without place people leave comment occasionally people leave useful critique tip tutorial help future visitor well wanted try adding something simple back looked option really nt want invest setting third party code could nt rely something ad figured set one designed simplest possible comment system day blog run pro con rolling comment system pro free ad third party script injected site complete control functionality design simple complicated want little spam spambots nt set spam custom content easy migrate exists one heroku postgres server con work set le feature also struggled wondered could easier way intrigued see one person implementation read introduction guide full guided walkthrough however step create documented start finish create deploy nodejs express postgresql rest api heroku comment api node express server connected postgres instance hosted free hobby tier heroku hopefully nt go row limit time soon combination article documented get way comment system note comment overall nt big deal nt care running little hobby api created go reason think pretty solid obviously need professional mine go ahead buy disqus something comment api consists three part front end written react know make form api call easily adjusted whatever static system using database commentsapi database created comment table id name date text obvious slug refers article url http examplecomhowtobakeacake slug would howtobakeacake finally added parentcommentid case want ability reply comment create database commentsapi c comment create table comment id serial primary key name varchar null date timestamptz default slug varchar null parentcommentid integer text varchar null insert comment name text slug parentcommentid value bogus testing comment api howtobakeacake null could probably get fancy add website email upvotes feature wanted simple adding login authentication either make even simple come drawback anonymous online system api article document set express server make postgres pool connection assume already know going write simple function without including error handling validation brute force rate limiting article go first want get query return everything ordered date easily review comment const getcomments request response poolquery select comment order date desc error result error throw error responsestatus json resultsrows importantly want query return comment match current page slug query use article const getcommentsbyslug request response const slug requestparamsslug poolquery select comment slug order date desc slug error result error throw error responsestatus json resultsrows add ability post new comment people able html form const createcomment request response const name slug text requestbody const parentcommentid parseint requestbodyparentcommentid poolquery insert comment name slug text parentcommentid value name slug text parentcommentid error error throw error response status json status success message new comment added moderator want ability update existing comment commentors wo nt able edit comment anonymous protected endpoint const updatecomment request response const name slug text requestbody const id parseint requestparamsid const parentcommentid parseint requestbodyparentcommentid poolquery update comment set name slug text parentcommentid id name slug text parentcommentid id error error throw error response status json status success message comment modified id id another protected endpoint ability delete comment const deletecomment request response const id parseint requestparamsid poolquery delete comment id id error error throw error response status json status success message comment deleted id id putting together two get post put delete appget comment getcomments appget comment slug getcommentsbyslug apppost comment createcomment appput comment id updatecomment appdelete comment id deletecomment front end front end using react example concept template system whatever post template file use javascript make fetch axios call comment api save data state somewhere retrieve json response api server array comment object pas wherever displaying comment sorry using hook yet okay deep breath get posttemplatejs class posttemplate async componentdidmount const slug thispropspagecontext try const response await fetch http wwwexamplecomcomments slug const comment await responsejson thissetstate comment catch error thissetstate error true case comment component posttemplatejs render return div error comment commentslist comment slug slug div comment component contain form submit comment list existing comment state save comment list object store new comment state form commentsjs import react component react import moment moment class comment extends component initialstate comment thispropscommentslist newcomment name text slug thispropsslug parentcommentid null submitting false success false error false state thisinitialstate admit code pristine ever seen mentioned wrote thing day feel free refactor write however want comment submitted use fetch time post method everything went correctly append new comment comment array reset new comment commentsjs onsubmitcomment async event eventpreventdefault thissetstate submitting true const newcomment comment thisstate const slug thisprops try const response await fetch http wwwexamplecomcomments header accept applicationjson contenttype applicationjson method post body jsonstringify newcomment thissetstate prevstate prevstate comment newcomment comment newcomment name text slug parentcommentid null success true error false catch error thissetstate thisinitialstate error true also onchange handler form commentsjs handlechange event const newcomment thisstate const name value eventtarget thissetstate newcomment newcomment name value start render lifecycle commentsjs render const submitting success error comment newcomment name text thisstate made simple error success message show submitting form commentsjs const showerror error div classname error p comment failed submit p div const showsuccess success div classname success p comment submitted p div comment form consists name comment case decided go sivers route allow comment reply truly site commentsjs const commentform form id newcomment onsubmit thisonsubmitcomment input type text name name id name value name onchange thishandlechange maxlength placeholder name required textarea row col name text id text value text onchange thishandlechange placeholder comment required button type submit disabled name text textlength submitting submit button form finally display form comment decided either display form successerror message visitor wo nt able leave two comment row without reloading page matter looping comment displaying made comment reply incredibly simple one reply allowed per post nesting commentsjs return section id comment success error showerror showsuccess commentform commentslength comment filter comment commentparentcommentid map comment let child commentid child commentsfind c commentid cparentcommentid return div classname comment key header commentname div classname commentdate moment commentdate fromnow div header p commenttext p child div classname comment reply header childname div classname commentdate moment childdate fromnow div header p childtext p div div section conclusion probably also want add antispam moderation system like adding moderated column comment setting false default manually setting true approve comment hope help someone want simple free system personal site like reinventing wheel making thing scratch fun learn lot update decided keep comment site due time required moderate comment high traffic website however khalil stemmler expanded article prerender comment highly suggest check plan hosting comment system
167,Lobsters,education,Education,Learning to Learn,http://tiny-giant-books.com/Entry1.html?EntryId=rec0iWZwgMsGafui6,learning learn,,
168,Lobsters,education,Education,Curated List Of Free Online Programming & Computer Science Courses,https://www.freecodecamp.org/news/free-programming-courses-august-2019/,curated list free online programming computer science course,school moocs class central online course class central new computer science data science programming data science online course written article beginner introduction interactive programming python part introduction computer science programming using python learn program fundamental intro computer science introduction computer science ruby rail introduction introduction internet history technology security introduction linux use git github new introduction internationalization localization new principle secure coding new identifying security vulnerability new introduction r software new diagramas uml estructurales para la ingeniería del software new object oriented analysis design new aws fundamental addressing security risk new プログラミングしながら学ぶコンピュータサイエンス入門 introduction computer science programming new database content organisation new computer network new computer fundamental intro html cs introduction vbaexcel programming build modern computer first principle nand tetri projectcentered course programming basic computer science introduction creative programming digital medium mobile apps coding essential best practice introduction computer networking introduction internet thing embedded system usable security introduction bootstrap tutorial code introduction programming html cs javascript web developer learn program crafting quality code intro relational database paradigm computer programming abstraction concurrency paradigm computer programming fundamental introduction jquery programming scratch create website weekend projectcentered course introduction programming visual art cs fundamental linux command line basic beauty joy computing c principle part objectoriented programming computing technology inside smartphone introduction html javascript think create code c introduction computer science python programming network friend money byte programando con java para aplicaciones android android basic make first app computing art magic science mycs computer science beginner web programming python javascript understanding technology computer science business professional mobile app development react native introduction game development principle computing hacker tool beauty joy computing c principle part computational thinking problem solving unix workbench programming fundamental interacting system managing memory computer science programming purpose introduction cybersecurity python programming essential introduction computer programming computer work software engineering introduction introduction web development введение в базы данных web design strategy information architecture web development design using wordpress cyber security economics scratch programmeren voor kinderen excelvba creative problem solving part тонкости верстки основы проектирования приложений интернета вещей web coding fundamental html cs javascript monetize android application android app development beginner java fundamental android development ap computer science java programming polymorphism advanced data structure ap computer science java programming loop data structure ap computer science java programming class object introduction tcpip deep learning business cyber security basic handson approach problem solving programming video game introduzione latex blockchain state art professional web accessibility mobile web development technical support fundamental introduction design thinking cs basic learn program java introduction nodejs writing professional code object oriented programming java logic computational thinking introduction reactjs entrepreneur emerging market master blockchain technology c programming modular programming memory management c programming using linux tool library linux basic command line interface c programming advanced data type c programming language foundation c programming getting started c programming pointer memory management software design element software development lifecycle software design abstraction software design method tool proactive computer security introduction cybersecurity business computing art magic science part ii tcpip advanced topic introduction open source networking technology blockchain understanding us implication introducción la programación en c instrucciones de control ficheros de texto mobile computing app inventor c principle introduction internet thing iot software engineering essential cyber attack countermeasure web security fundamental introduction cyber attack базы данных database arduino programming novice ninja video game design balance introducción la programación en python aprendiendo programar con python introdução à ciência da computação com python parte introdução à ciência da computação com python parte programación orientada objetos computing form shape python programming rhinoscript library introduction mongodb programación orientada objetos con python diseñando páginas web con bootstrap web application everybody introduction virtual reality swift beginner version control git element ai android beginner http web server network protocol architecture github collaboration javascript improved learn swift programming syntax home networking basic data communication network service internet connection get online introduction cisco networking version control git machine learning divide conquer sorting searching randomized algorithm functional programming principle scala algorithm part cryptography programming mobile application android handheld system part artificial intelligence principle computing part new humancomputer interaction fundamental design principle new humancomputer interaction ii cognition context culture new humancomputer interaction iii ethic needfinding prototyping new humancomputer interaction iv evaluation agile method beyond new practical machine learning tensorflow new identifying security vulnerability ccprogramming new introduction parallel programming open mp new open infrastructure support transition new business consideration modernizing network iot ai new inclusion technology design practical machine learning software security algorithm part ii responsive website basic code html cs javascript agile development using ruby rail basic cloud computing concept part automaton theory c c programmer part principle computing part programming mobile application android handheld system part nature code algorithmic thinking part design computer program intro machine learning algorithmic toolbox discrete optimization responsive web design introduction game development introduction functional programming interactivity javascript introduction software product management android development beginner arduino platform c programming algorithmic thinking part programming language software process agile practice image video processing mar hollywood stop hospital text retrieval search engine cryptography advanced styling responsive design cloud computing application part cloud system infrastructure software testing internet thing get introduction swift programming learning data introductory machine learning course client need software requirement responsive web design fundamental intro ajax agile development using ruby rail advanced ruby rail web service integration mongodb cloud computing concept part data structure performance computer graphic introduction meteorjs development web application development javascript mongodb code simple data developing android apps julia scientific programming data wrangling mongodb intro devops intro io app development swift parallel programming concept interfacing arduino algorithm string computer architecture analysis algorithm computer networking software development process cloud networking game development website performance optimization practical numerical method python database management essential interactive computer graphic software debugging software construction java raspberry pi platform python programming raspberry pi foundation objectivec app development data structure network illustrated principle without calculus vlsi cad part logic internet thing setting development platform mastering software engineering interview devops developer get started querying data transactsql autonomous mobile robot intro algorithm compiler mobile application experience part domain app idea rail active record action pack algorithm graph advanced data structure java internet thing communication technology app design development io io app development basic game development modern platform introduction mobile application development using android agile planning software product browser rendering optimization ux design mobile developer developing international software part analyzing visualizing data power bi agile software development build first android app projectcentered course approximation algorithm part javascript testing full stack foundation configuring linux web server single page web application angularjs best practice io user interface design interfacing raspberry pi machine learning unsupervised learning advanced algorithm complexity software architecture design responsive website tutorial example managing agile team matlab octave beginner web application development basic concept android introducción la programación algorithm developing scalable apps python android basic multiscreen apps gradle android java developing scalable apps java google cloud platform fundamental core infrastructure javascript promise principle machine learning 用python玩转数据 data processing using python cybersecurity mobility design analysis algorithm technical interview apps game intro theoretical computer science networking web developer using python research algorithm design analysis greedy algorithm minimum spanning tree dynamic programming probabilistic graphical model learning algorithm design analysis part shortest path revisited npcomplete problem graph search shortest path data structure language proof logic mobile application experience computation structure computer architecture computational thinking modeling simulation advanced software construction java mobile application experience part building mobile apps foundation data science prediction machine learning blockchain technology bitcoin cryptocurrencies data structure software design algorithm design analysis software development fundamental introduction neurohacking r networking security io application toward future io development swift game sensor medium java programming build recommendation system introduction machine learning computer science algorithm theory machine introduction graduate algorithm software analysis testing database system concept design database system concept design animation cgi motion data analytics foundation accountancy ii internet thing sensing actuation device data structure active learning approach virtual reality work minecraft coding teaching graph algorithm data structure fundamental string processing pattern matching algorithm machine learning fundamental algorithmic design technique creating virtual reality vr apps building cybersecurity toolkit finding cybersecurity career path programming language part c cybersecurity ciso view programming language part b mathematics computer science blockchain basic blockchain platform decentralized application dapps smart contract 算法设计与分析 design analysis algorithm advanced objectoriented code complex data software construction objectoriented design software construction data abstraction testing agile running product design sprint nosql database system moving cloud sql data science laff programming correctness документы и презентации в latex introduction latex software development process methodology agile software development lean software development android app component service local ipc content provider engineering maintainable android apps java android android app component intent activity broadcast receiver developing android apps app inventor frontend web development react serverside development nodejs express mongodb frontend javascript framework angular multiplatform mobile app development nativescript frontend web ui framework tool bootstrap multiplatform mobile app development react native multiplatform mobile app development web technology ionic cordova global software development automated software testing model statebased testing automated software testing unit testing coverage criterion design testability быстрый старт в разработке androidприложений основы html и cs введение в iosразработку building arduino robot device разработка вебсервисов на golang часть nosql system relational database system fundamentos de android implementation data structure foundation data structure professional android app development сетевое администрирование от теории к практике enterprise software lifecycle management использование механизмов операционных систем в разработке программного обеспечения cloud computing software architect code building digital world introduction java programming fundamental data structure algorithm review metric software improvement objectoriented design software architecture serviceoriented architecture design pattern web connectivity security embedded system introduction architecting smart iot device software architecture internet thing architecting smart iot device android basic networking scalable microservices kubernetes developing android apps kotlin intro progressive web apps google map apis android basic user input vr software development firebase essential android material design android developer offline web application advanced android app development clientserver communication intro data structure algorithm android performance android basic user interface google cloud platform fundamental aws professional android basic button click applied machine learning introduction typescript advanced cs concept optimizing performance sql based application building functional prototype using nodejs developing intelligent apps bot designing data platform solution angularjs advanced framework technique creating programmatic sql database object implementing inmemory sql database object application design consideration inclusive approach introduction c algorithm data structure developing sql database building interactive prototype using javascript angularjs framework fundamental algorithm data structure c build modern computer first principle nand tetri part ii projectcentered course programmation io partie programmation io partie ii introduction data structure fundamental machine learning introduction computation theory cloud computing security detecting mitigating cyber threat attack introduction web cartography part symmetric cryptography packet switching network algorithm asymmetric cryptography key management fundamental network communication hacking patching peertopeer protocol local area network design analyze secure networked system sr document requirement diagrammatic notation intermediate objectoriented programming unity game linux server management security requirement specification goal conflict analysis introduction c programming unity requirement gathering secure software development c programming unity homeland security cybersecurity connection terrorist requirement elicitation artifact stakeholder analysis software design threat mitigation data structure design pattern game developer software requirement prioritization risk analysis basic cryptography programming crypto api introduction devops transforming improving operation machine learning musician artist introduction cloud infrastructure technology game development libgdx introduction kubernetes cybersecurity xfactor cybersecurity internet thing cybersecurity privacy iot mobile design usability android web app development power nodejs iot system architecture design evaluation mobile design usability io orientação objetos com java guided tour machine learning finance network security overview advanced method reinforcement learning finance cybersecurity risk management computer forensics teamwork collaboration cybersecurity fundamental advanced algorithmics graph theory python uml class diagram software engineering fundamental machine learning finance realtime cyber threat detection mitigation gameplay programming video game designer programming everyone introduction visual programming language introdução ao teste de software основы программирования мобильных приложений для android concurrency win coding competition secret champion formal software verification cloud computing infrastructure software testing management cloud computing management desarrollo de aplicaciones mobile multiplataforma con nativescript angular redux software testing fundamental cloud computing enterprise sql data analysis deploying application heroku vr scene object designing restful apis vr platform application swift developer fundamental parallelism intel architecture vr design intro tensorflow deep learning io persistence core data make io app android basic data storage foundation machine learning io networking swift fundamental red hat enterprise linux uikit fundamental fundamental container kubernetes red hat openshift introduction element microgame design learn backbonejs diseño de sistemas de información gerencial para internet con mysql php joomla dynamic web application sinatra developing android apps introduction practical deep learning io design pattern building io interface create android advanced machine learning foundation case study approach new samplebased learning method new fundamental reinforcement learning machine learning regression machine learning data science analytics probabilistic graphical model representation intro deep learning creative application deep learning tensorflow machine learning big data machine learning trading hardware security bitcoin cryptocurrency technology introduction artificial intelligence computational neuroscience reinforcement learning machine learning classification intro parallel programming advanced operating system enabling technology data science analytics internet thing interactive graphic machine learning applied cryptography parallel programming introduction computer architecture probabilistic graphical model inference practical predictive analytics model method machine learning clustering retrieval regression modeling practice quantitative formal modeling worstcase performance analysis nearest neighbor collaborative filtering high performance computer architecture computability complexity algorithm computational photography introduction operating system artificial intelligence ai cloud computing application part big data application cloud relational database support data warehouse practical deep learning coder part realtime audio signal processing faust improving deep neural network hyperparameter tuning regularization optimization convolutional neural network deep learning selfdriving car introduction deep learning computation structure computer organization applied machine learning python machine learning compiler theory practice network security cyberphysical system security gt refresher advanced o high performance computing artificial intelligence knowledgebased ai cognitive system machine learning intro information security cyberphysical system design analysis machine learning npcomplete problem parallel programming java concurrent programming java distributed programming java information security context introduction quantum machine learning state estimation localization selfdriving car basic modeling discrete optimization advanced modeling discrete optimization solving algorithm discrete optimization matlab et octave pour débutants nature code biology javascript обработка изображений методы и средства защиты информации deep learning computer vision менеджмент информационной безопасности introduction formal concept analysis practical reinforcement learning addressing large hadron collider challenge machine learning introduction deep learning bayesian method machine learning matrix factorization advanced technique recommender system evaluation metric introduction recommender system nonpersonalized contentbased embedded software hardware architecture modeling debugging embedded system razonamiento artificial sesenta años de inteligencia artificial artificial intelligence search logic 機器學習基石下 machine learning foundation algorithmic foundation 大数据机器学习big data machine learning discrete mathematics introducción la visión por computador desarrollo de aplicaciones con opencv system validation modelling software protocol behaviour system validation model process behaviour system validation automaton behavioural equivalence system validation requirement modal formula embedded hardware operating system approximation algorithm learn tensorflow deep learning without phd machine learning crash course tensorflow apis infrastructure code deep learning explained devops database introduction artificial intelligence ai devops practice principle devops testing sparse representation signal image processing fundamental sparse representation image processing theory practice cyberphysical system modeling simulation statistical machine learning cryptographic hash integrity protection cryptography information theory classical cryptosystems core concept introduction hyperledger blockchain technology introduction openstack introduction cloud foundry cloud native software architecture approximation algorithm part ii mathematics machine learning multivariate calculus mathematics machine learning pca reliable distributed algorithm part mathematics machine learning linear algebra multiobject tracking automotive system computer system design advanced concept modern microprocessor deep learning python pytorch deep learning tensorflow reinforcement learning finance deep learning natural language processing cutting edge deep learning coder part cloud computing security introduction machine learning coder convolutional neural network tensorflow natural language processing tensorflow deep learning summer school continuous integration deployment access control big data application machine learning scale identifying monitoring analyzing risk incident response recovery security operation administration network communication security introduction tensorflow artificial intelligence machine learning deep learning system application security,seven year ago university like mit stanford first opened free online course public today close school around world created thousand free online course popularly known massive open online course moocsi compiled list free online course start summer leveraged class central database online course also included course average ratingclass central homepagei sorted course following category based difficulty level beginnerintermediateadvancedcourses offered first time marked new many course completely selfpaced rest start various time find complete list technologyrelated course starting later class central computer science data science programming subject pagesi understand long list might daunting learner new programming case might find david venturi recommendation best data science online course useful even looking learn data science hope create guide futureand finally trouble figuring signup coursera course free worry written article toobeginner introduction interactive programming python part rice university introduction computer science programming using python massachusetts institute technology learn program fundamental university toronto intro computer science university virginia introduction computer science harvard university ruby rail introduction john hopkins university introduction university michigan internet history technology security university michigan introduction linux linux foundation use git github new introduction internationalization localization university washington new principle secure coding university california davis new identifying security vulnerability university california davis new introduction r software indian institute technology kanpur new diagramas uml estructurales para la ingeniería del software universitat politècnica de valència new object oriented analysis design indian institute technology kharagpur new aws fundamental addressing security risk amazon web service new プログラミングしながら学ぶコンピュータサイエンス入門 introduction computer science programming tokyo institute technology new database content organisation ignou new computer network devi ahilya viswavidyalaya indore new computer fundamental devi ahilya viswavidyalaya indoreintro html cssintroduction vbaexcel programming cal poly pomona build modern computer first principle nand tetri projectcentered course hebrew university jerusalem programming basic indian institute technology bombay computer science stanford university introduction university michigan creative programming digital medium mobile apps university london international programme coding essential best practice world wide web consortium introduction computer networking stanford university introduction internet thing embedded system university california irvine usable security university maryland college park introduction bootstrap tutorial microsoft code introduction programming university edinburgh html cs javascript web developer john hopkins university learn program crafting quality code university toronto intro relational databasesparadigms computer programming abstraction concurrency université catholique de louvain paradigm computer programming fundamental université catholique de louvain introduction jquery microsoft programming scratch harvey mudd college create website weekend projectcentered course state university new york introduction programming visual art university california los angeles cs fundamental world wide web consortium linux command line basicsthe beauty joy computing c principle part university california berkeley objectoriented programming indian institute technology bombay computing technology inside smartphone cornell university introduction html javascript microsoft think create code university adelaide c introduction computer science python programming harvey mudd college network friend money byte princeton university programando con java para aplicaciones android universidad nacional autónoma de méxico android basic make first app google computing art magic science eth zurich mycs computer science beginner harvey mudd college web programming python javascript harvard understanding technology harvard computer science business professional harvard mobile app development react native harvard introduction game development harvard universityprinciples computing stanford universityhacker tool massachusetts institute technologythe beauty joy computing c principle part university california berkeleycomputational thinking problem solving university pennsylvaniathe unix workbench john hopkins universityprogramming fundamental duke universityinteracting system managing memory duke universitycomputer science programming purpose princeton universityintroduction cybersecurity university washingtonpython programming essential rice universityintroduction computer programming university london international programmeshow computer work university london international programmessoftware engineering introduction university british columbiaintroduction web development university california davisвведение в базы данных st petersburg state polytechnic universityweb design strategy information architecture california institute artsweb development design using wordpress california institute artscyber security economics delft university technologyscratch programmeren voor kinderen delft university technologyexcelvba creative problem solving part university colorado boulderтонкости верстки moscow institute physic technologyосновы проектирования приложений интернета вещей moscow institute physic technologyweb coding fundamental html cs javascript national university singaporemonetize android application galileo universityandroid app development beginner galileo universityjava fundamental android development galileo universityap computer science java programming polymorphism advanced data structure purdue universityap computer science java programming loop data structure purdue universityap computer science java programming class object purdue universityintroduction tcpip yonsei universitydeep learning business yonsei universitycyber security basic handson approach universidad carlos iii de madridproblem solving programming video game university albertaintroduzione latex university modena reggio emiliablockchain state art professional eit digitalweb accessibility googlemobile web development googletechnical support fundamental googleintroduction design thinking microsoftcss basic microsoftlearn program java microsoftintroduction nodejs microsoftwriting professional code microsoftobject oriented programming java microsoftlogic computational thinking microsoftintroduction reactjs microsofthow entrepreneur emerging market master blockchain technology university cape townc programming modular programming memory management dartmouthc programming using linux tool library dartmouthlinux basic command line interface dartmouthc programming advanced data type dartmouthc programming language foundation institut minestélécomc programming getting started dartmouthc programming pointer memory management dartmouthsoftware design element software development lifecycle university colorado systemsoftware design abstraction university colorado systemsoftware design method tool university colorado systemproactive computer security university colorado systemintroduction cybersecurity business university colorado systemcomputing art magic science part ii eth zurichtcpip advanced topic university colorado systemintroduction open source networking technology linux foundationblockchain understanding us implication linux foundationintroducción la programación en c instrucciones de control ficheros de texto universidad autónoma de madridmobile computing app inventor c principle university warwickintroduction internet thing iot curtin universitysoftware engineering essential technische universität münchen technical university munich cyber attack countermeasure new york university nyu web security fundamental ku leuven universityintroduction cyber attack new york university nyu базы данных database saint petersburg state universityarduino programming novice ninja institut minestélécomvideo game design balance rochester institute technologyintroducción la programación en python aprendiendo programar con python pontificia universidad católica de chileintrodução à ciência da computação com python parte universidade de são paulointrodução à ciência da computação com python parte universidade de são pauloprogramación orientada objetos méxicoxcomputing form shape python programming rhinoscript library rhode island school designintroduction mongodb mongodb universityprogramación orientada objetos con python universidad australdiseñando páginas web con bootstrap universidad australweb application everybodyintroduction virtual realityswift beginnersversion control git atlassianelements ai university helsinkiandroid beginnershttp web serversnetwork protocol architecture ciscogithub javascript improvedlearn swift programming syntaxhome networking basic ciscodata communication network service ciscointernet connection get online ciscointroduction cisco networking ciscoversion control gitmachine learning stanford university divide conquer sorting searching randomized algorithm stanford university functional programming principle scala école polytechnique fédérale de lausanne algorithm part princeton university cryptography stanford university programming mobile application android handheld system part university maryland college park artificial intelligence university california berkeley principle computing part rice university new humancomputer interaction fundamental design principle georgia institute technology new humancomputer interaction ii cognition context culture georgia institute technology new humancomputer interaction iii ethic needfinding prototyping georgia institute technology new humancomputer interaction iv evaluation agile method beyond georgia institute technology new practical machine learning tensorflow google new identifying security vulnerability ccprogramming university california davis new introduction parallel programming open mp indian institute technology delhi new open infrastructure support transition linux foundation new business consideration modernizing network iot ai linux foundation new inclusion technology design indian institute technology bangalorepractical machine learning john hopkins university software security university maryland college park algorithm part ii princeton university responsive website basic code html cs javascript university london international programme agile development using ruby rail basic university california berkeley cloud computing concept part university illinois urbanachampaign automaton theory stanford university c c programmer part university california santa cruz principle computing part rice university programming mobile application android handheld system part university maryland college park nature code processing foundation algorithmic thinking part rice university design computer program stanford university intro machine learning stanford university algorithmic toolbox university california san diego discrete optimization university melbourne responsive web design university london international programme introduction game development michigan state university introduction functional programming delft university technology interactivity javascript university michigan introduction software product management university alberta android development beginner google arduino platform c programming university california irvine algorithmic thinking part rice university programming language university virginia software process agile practice university alberta image video processing mar hollywood stop hospital duke university text retrieval search engine university illinois urbanachampaign cryptography university maryland college park advanced styling responsive design university michigan cloud computing application part cloud system infrastructure university illinois urbanachampaign software testing university utah internet thing get university california san diego introduction swift programming university toronto learning data introductory machine learning course california institute technology client need software requirement university alberta responsive web design fundamental google intro ajaxagile development using ruby rail advanced university california berkeley ruby rail web service integration mongodb john hopkins university cloud computing concept part university illinois urbanachampaign data structure performance university california san diego computer graphic university california san diego introduction meteorjs development university london international programme web application development javascript mongodb university london international programme code simple data university british columbia developing android apps google julia scientific programming university cape town data wrangling mongodb mongodb university intro devops nutanix intro io app development swiftparallel programming conceptsinterfacing arduino university california irvine algorithm string university california san diego computer architecture princeton university analysis algorithm princeton university computer networking georgia institute technology software development process georgia institute technology cloud networking university illinois urbanachampaign game development google website performance optimization google practical numerical method python george washington university database management essential university colorado system interactive computer graphic university tokyo software debugging saarland university software construction java massachusetts institute technology raspberry pi platform python programming raspberry pi university california irvine foundation objectivec app development university california irvine data structure university california san diego network illustrated principle without calculus princeton university vlsi cad part logic university illinois urbanachampaign internet thing setting development platform university california san diego mastering software engineering interview university california san diego devops developer get started microsoft querying data transactsql microsoft autonomous mobile robot eth zurich intro algorithmscompilers stanford university mobile application experience part domain app idea massachusetts institute technology rail active record action pack john hopkins university algorithm graph university california san diego advanced data structure java university california san diego internet thing communication technology university california san diego app design development io university toronto io app development basic university toronto game development modern platform michigan state university introduction mobile application development using android hong kong university science technology agile planning software product university alberta browser rendering optimization google ux design mobile developer google developing international software part microsoft analyzing visualizing data power bi microsoft agile software development eth zurich build first android app projectcentered course école centrale paris approximation algorithm part école normale supérieure javascript testingfull stack foundationsconfiguring linux web serverssingle page web application angularjs john hopkins university best practice io user interface design university california irvine interfacing raspberry pi university california irvine machine learning unsupervised learning brown university advanced algorithm complexity university california san diego software architecture design georgia institute technology responsive website tutorial example university london international programme managing agile team university virginia matlab octave beginner école polytechnique fédérale de lausanne web application development basic concept university new mexico android introducción la programación universitat politècnica de valència algorithm indian institute technology bombay developing scalable apps python google android basic multiscreen apps google gradle android java google developing scalable apps java google google cloud platform fundamental core infrastructure google javascript promise google principle machine learning microsoft 用python玩转数据 data processing using python nanjing university cybersecurity mobility university system georgia design analysis algorithm chennai mathematical institute technical interview pramp apps game world wide web consortium intro theoretical computer sciencenetworking web developersusing python research harvard universityalgorithms design analysis stanford universitygreedy algorithm minimum spanning tree dynamic programming stanford universityprobabilistic graphical model learning stanford universityalgorithms design analysis part stanford universityshortest path revisited npcomplete problem stanford universitygraph search shortest path data structure stanford universitylanguage proof logic stanford universitymobile application experience massachusetts institute technologycomputation structure computer architecture massachusetts institute technologycomputational thinking modeling simulation massachusetts institute technologyadvanced software construction java massachusetts institute technologymobile application experience part building mobile apps massachusetts institute technologyfoundations data science prediction machine learning university california berkeleyblockchain technology university california berkeleybitcoin cryptocurrencies university california berkeleydata structure software design university pennsylvaniaalgorithm design analysis university pennsylvaniasoftware development fundamental university pennsylvaniaintroduction neurohacking r john hopkins universitynetworking security io application university california irvinetoward future io development swift university california irvinegames sensor medium university california irvinejava programming build recommendation system duke universityintroduction machine learning duke universitycomputer science algorithm theory machine princeton universityintroduction graduate algorithm georgia institute technologysoftware analysis testing georgia institute technologydatabase system concept design georgia institute technologydatabase system concept design georgia institute technologyanimation cgi motion columbia universitydata analytics foundation accountancy ii university illinois urbanachampaigninternet thing sensing actuation device university california san diegodata structure active learning approach university california san diegohow virtual reality work university california san diegominecraft coding teaching university california san diegograph algorithm university california san diegodata structure fundamental university california san diegostring processing pattern matching algorithm university california san diegomachine learning fundamental university california san diegoalgorithmic design technique university california san diegocreating virtual reality vr apps university california san diegobuilding cybersecurity toolkit university washingtonfinding cybersecurity career path university washingtonprogramming language part c university washingtoncybersecurity ciso view university washingtonprogramming language part b university washingtonmathematics computer science university london international programmesblockchain basic university buffaloblockchain platform university buffalodecentralized application dapps university buffalosmart contract university buffalo算法设计与分析 design analysis algorithm peking advanced objectoriented peking universityhow code complex data university british columbiasoftware construction objectoriented design university british columbiasoftware construction data abstraction university british columbiatesting agile university virginiarunning product design sprint university virginianosql database system arizona state universitymoving cloud university melbournesql data science university california davislaff programming correctness university texas austinдокументы и презентации в latex introduction latex higher school economicssoftware development process methodology university minnesotaagile software development university minnesotalean software development university minnesotaandroid app component service local ipc content provider vanderbilt universityengineering maintainable android apps vanderbilt universityjava android vanderbilt universityandroid app component intent activity broadcast receiver vanderbilt universitydeveloping android apps app inventor hong kong university science technologyfrontend web development react hong kong university science technologyserverside development nodejs express mongodb hong kong university science technologyfrontend javascript framework angular hong kong university science technologymultiplatform mobile app development nativescript hong kong university science technologyfrontend web ui framework tool bootstrap hong kong university science technologymultiplatform mobile app development react native hong kong university science technologymultiplatform mobile app development web technology ionic cordova hong kong university science technologyglobal software development delft university technologyautomated software testing model statebased testing delft university technologyautomated software testing unit testing coverage criterion design testability delft university technologyбыстрый старт в разработке androidприложений moscow institute physic technologyосновы html и cs moscow institute physic technologyвведение в iosразработку moscow institute physic technologybuilding arduino robot device moscow institute physic technologyразработка вебсервисов на golang часть moscow institute physic technologynosql system universidad nacional autónoma de méxicorelational database system universidad nacional autónoma de méxicofundamentos de android universidad nacional autónoma de méxicoimplementation data structure indian institute technology bombayfoundations data structure indian institute technology bombayprofessional android app development galileo universityсетевое администрирование от теории к практике tsinghua universityenterprise software lifecycle management national research nuclear university mephiиспользование механизмов операционных систем в разработке программного обеспечения national research nuclear university mephicloud computing indian institute technology kharagpurthe software architect code building digital world universidad carlos iii de madridintroduction java programming fundamental data structure algorithm universidad carlos iii de madridreviews metric software improvement university albertaobjectoriented design university albertasoftware architecture university albertaserviceoriented architecture university albertadesign pattern university albertaweb connectivity security embedded system eit digitalintroduction architecting smart iot device eit digitalsoftware architecture internet thing eit digitalarchitecting smart iot device eit digitalandroid basic networking googlescalable microservices kubernetes googledeveloping android apps kotlin googleintro progressive web apps googlegoogle map apis googleandroid basic user input googlevr software development googlefirebase essential android googlematerial design android developer googleoffline web application googleadvanced android app development googleclientserver communication googleintro data structure algorithm googleandroid performance googleandroid basic user interface googlegoogle cloud platform fundamental aws professional google cloudandroid basic button click googleapplied machine learning microsoftintroduction typescript microsoftadvanced cs concept microsoftoptimizing performance sql based application microsoftbuilding functional prototype using nodejs microsoftdeveloping intelligent apps bot microsoftdesigning data platform solution microsoftangularjs advanced framework technique microsoftcreating programmatic sql database object microsoftimplementing inmemory sql database object microsoftapplication design consideration inclusive approach microsoftintroduction c microsoftalgorithms data structure microsoftdeveloping sql database microsoftbuilding interactive prototype using javascript microsoftangularjs framework fundamental microsoftalgorithms data structure c microsoftbuild modern computer first principle nand tetri part ii projectcentered course hebrew university jerusalemprogrammation io partie sorbonne universitésprogrammation io partie ii sorbonne universitésintroduction data structure university adelaidefundamentals machine learning santa fe instituteintroduction computation theory santa fe institutecloud computing security university colorado systemdetecting mitigating cyber threat attack university colorado systemintroduction web cartography part eth zurichsymmetric cryptography university colorado systempacket switching network algorithm university colorado systemasymmetric cryptography key management university colorado systemfundamentals network communication university colorado systemhacking patching university colorado systempeertopeer protocol local area network university colorado systemdesign analyze secure networked system university colorado systemsrs document requirement diagrammatic notation university colorado systemintermediate objectoriented programming unity game university colorado systemlinux server management security university colorado systemrequirements specification goal conflict analysis university colorado systemintroduction c programming unity university colorado systemrequirements gathering secure software development university colorado systemmore c programming unity university colorado systemhomeland security cybersecurity connection terrorist university colorado systemrequirements elicitation artifact stakeholder analysis university colorado systemsoftware design threat mitigation university colorado systemdata structure design pattern game developer university colorado systemsoftware requirement prioritization risk analysis university colorado systembasic cryptography programming crypto api university colorado systemintroduction devops transforming improving operation linux foundationmachine learning musician artist goldsmith university londonintroduction cloud infrastructure technology linux game development libgdx amazonintroduction kubernetes linux foundationcybersecurity xfactor university system georgiacybersecurity internet thing university system georgiacybersecurity privacy iot curtin universitymobile design usability android facebookweb app development power nodejs technische universität münchen technical university munich iot system architecture design evaluation waseda universitymobile design usability io facebookorientação objetos com java instituto tecnológico de aeronáuticaguided tour machine learning finance new york university nyu network security rochester institute technologyoverview advanced method reinforcement learning finance new york university nyu cybersecurity risk management rochester institute technologycomputer forensics rochester institute technologyteamwork collaboration rochester institute technologycybersecurity fundamental rochester institute technologyadvanced algorithmics graph theory python institut minestélécomuml class diagram software engineering ku leuven universityfundamentals machine learning finance new york university nyu realtime cyber threat detection mitigation new york university nyu gameplay programming video game designer rochester institute technologyprogramming everyone introduction visual programming language weizmann institute scienceintrodução ao teste de software universidade de são pauloосновы программирования мобильных приложений для android itmo universityconcurrency adacore universityhow win coding competition secret champion itmo universityformal software verification university system marylandcloud computing infrastructure university system marylandsoftware testing management university system marylandcloud computing management university system marylanddesarrollo de aplicaciones mobile multiplataforma con nativescript angular redux universidad australsoftware testing fundamental university system marylandcloud computing enterprise university system marylandsql data analysisdeploying application hackeronevr scene objectsdesigning restful apisvr platform applicationsswift developersfundamentals parallelism intel architecture intelvr designintro tensorflow deep learningios persistence core datahow make io appandroid basic data storagefoundations machine learning bloombergios networking swiftfundamentals red hat enterprise linux red hatuikit fundamentalsfundamentals container kubernetes red hat openshift red hatintroduction element microgame design worcester polytechnic institutelearn backbonejsdiseño de sistemas de información gerencial para internet con mysql php joomla universidad del rosariodynamic web application sinatradeveloping android appsan introduction practical deep learning intelios design patternsbuilding io interfaceshow create androidadvanced machine learning foundation case study approach university washington new samplebased learning method university alberta new fundamental reinforcement learning university albertamachine learning regression university washington machine learning data science analytics columbia university probabilistic graphical model representation stanford university intro deep learning google creative application deep learning tensorflowmachine learning big data university california san diego machine learning trading georgia institute technology hardware security university maryland college park bitcoin cryptocurrency technology princeton university introduction artificial intelligence stanford university computational neuroscience university washington reinforcement learning brown university machine learning classification university washington intro parallel programming nvidia advanced operating system georgia institute technology enabling technology data science analytics internet thing columbia university interactive graphic autodesk machine learning georgia institute technology applied cryptography university virginia parallel programming école polytechnique fédérale de lausanne introduction computer architecture carnegie mellon university probabilistic graphical model inference stanford university practical predictive analytics model method university washington machine learning clustering retrieval university washington regression modeling practice wesleyan university quantitative formal modeling worstcase performance analysis eit digital nearest neighbor collaborative filtering university minnesota high performance computer architecture georgia institute technology computability complexity algorithm georgia institute technology computational photography georgia institute technology introduction operating system georgia institute technology artificial intelligence ai columbia university cloud computing application part big data application cloud university illinois urbanachampaign relational database support data warehouse university colorado system practical deep learning coder part fastai realtime audio signal processing faust stanford universityimproving deep neural network hyperparameter tuning regularization optimization deeplearningaiconvolutional neural network deep learning selfdriving car massachusetts institute introduction deep learning massachusetts institute technologycomputation structure computer organization massachusetts institute technologyapplied machine learning python university michiganmachine learning georgia institute technologycompilers theory practice georgia institute technologynetwork security georgia institute technologycyberphysical system security georgia institute technologygt refresher advanced o georgia institute technologyhigh performance computing georgia institute technologyartificial intelligence georgia institute technologyknowledgebased ai cognitive system georgia institute technologymachine learning georgia institute technologyintro information security georgia institute technologycyberphysical system design analysis georgia institute technologymachine learning columbia universitynpcomplete problem university california san diegoparallel programming java rice universityconcurrent programming java rice universitydistributed programming java rice universityinformation security context introduction university london international programmesquantum machine learning university torontostate estimation localization selfdriving car university torontobasic modeling discrete optimization university melbourneadvanced modeling discrete optimization university melbournesolving algorithm discrete optimization university melbournematlab et octave pour débutants école polytechnique fédérale de lausannenature code biology javascript école polytechnique fédérale de lausanneобработка изображений higher school economicsметоды и средства защиты информации higher school economicsdeep learning computer vision higher school economicsменеджмент информационной безопасности higher school economicsintroduction formal concept analysis higher school economicspractical reinforcement learning higher school economicsaddressing large hadron collider challenge machine learning higher school economicsintroduction deep learning higher school economicsbayesian method machine learning higher school economicsmatrix factorization advanced technique university minnesotarecommender system evaluation metric university minnesotaintroduction recommender system nonpersonalized contentbased university minnesotaembedded software hardware architecture university colorado bouldermodeling debugging embedded system university colorado boulderrazonamiento artificial universidad nacional autónoma de méxicosesenta años de inteligencia artificial universidad nacional autónoma de artificial intelligence search logic national taiwan university機器學習基石下 machine learning foundation algorithmic foundation national taiwan university大数据机器学习big data machine learning tsinghua universitydiscrete mathematics shanghai jiao tong universityintroducción la visión por computador desarrollo de aplicaciones con opencv universidad carlos iii de madridsystem validation modelling software protocol behaviour eit digitalsystem validation model process behaviour eit digitalsystem validation automaton behavioural equivalence eit digitalsystem validation requirement modal formula eit digitalembedded hardware operating system eit digitalapproximation algorithm eit digitallearn tensorflow deep learning without phd googlemachine learning crash course tensorflow apis googleinfrastructure code microsoftdeep learning explained microsoftdevops database microsoftintroduction artificial intelligence ai microsoftdevops practice principle microsoftdevops testing microsoftsparse representation signal image processing fundamental technion israel institute technologysparse representation image processing theory practice technion israel institute technologycyberphysical system modeling simulation university california santa cruzstatistical machine learning carnegie mellon universitycryptographic hash integrity protection university colorado systemcryptography information theory university colorado systemclassical cryptosystems core concept university colorado systemintroduction hyperledger blockchain technology linux foundationintroduction openstack linux foundationintroduction cloud foundry cloud native software architecture linux foundationapproximation algorithm part ii école normale supérieuremathematics machine learning multivariate calculus imperial college londonmathematics machine learning pca imperial college londonreliable distributed algorithm part kth royal institute technologymathematics machine learning linear algebra imperial college londonmultiobject tracking automotive system chalmers university technologycomputer system design advanced concept modern microprocessor chalmers university technologydeep learning python pytorch ibmdeep learning tensorflow ibmreinforcement learning finance new york university nyu deep learning natural language processing university oxfordcutting edge deep learning coder part fastaicloud computing security university system marylandintroduction machine learning coder fastaiconvolutional neural network tensorflow deeplearningainatural language processing tensorflow deeplearningaideep learning summer schoolcontinuous integration deploymentaccess control isc data application machine learning scale yandexidentifying monitoring analyzing risk incident response recovery isc operation administration isc communication security isc tensorflow artificial intelligence machine learning deep learning deeplearningaisystems application security isc
169,Lobsters,education,Education,Consider Using Asciidoctor for Your Next Presentation,https://matklad.github.io//2019/05/19/consider-using-asciidoctor-for-your-next-presentation.html,consider using asciidoctor next presentation,docbook inline markup,killer feature behind asciidoctorjs pdf asciidoc markup language like markdown lightweight markup language translating blog md adoc significant change syntax link link http examplecom http examplecom link however unlike markdown latex asciidoc native support rich hierarchical document model asciidoc source parsed tree nested element attribute historically asciidoc created easier way author docbook xml allows express complex document structure without adhoc syntax extension additionally concrete syntax feel orthogonal well rounded seen syntax link one includes image image assetslogosvg alt text snippet another file include codesamplesworkerrs paragraph paragraph lead paragraph attribute translates cs class paragraph attribute translates cs class list nested element bullet list bullet table join block table list stupid probably code inline markup source rust sub quote let x let r let r hlerror borrowed value live long enough println r addition usual syntax highlighting x bit wrapped span class hlerror used call specific bit code like case show compiler error example complex slide twocol ссылки в c и rust c создаются неявно не являются первоклассными объектами std referencewrapper не всегда валидны rust требуют явных languagerust mut и обычные объекты source rust let x let let mut r x r всегда валидны twocol set cs class twocolumn flex layout languagerust set cs class inline code element mut get highlighted bulletpoint contains longer snippet code noticed circled numbered callouts another useful feature asciidoc result following slide
170,Lobsters,education,Education,How to Read Code(2015),https://github.com/aredridel/how-to-read-code,read code,join github today sign,dismiss join github today github home million developer working together host review code manage project build software together sign
171,Lobsters,education,Education,The challenges of teaching software engineering,https://www.sicpers.info/2019/07/the-challenges-of-teaching-software-engineering/,challenge teaching software engineering,course introducing software engineering msc software engineering teach team software engineering appropriate behaviour,finished teaching fourday course introducing software engineering first time plan refine course teaching october eventually become basis doctoral training programme research software engineering oxford part taught master department already msc software engineering commercial engineer fact degree want software engineer research context course also teach team software engineering challenge came comfortable commandline get people past initial unfamiliar discomfort perspective commandline tool unusably hard learnt various source try foo help man foo incantation others git particular decidedly unfriendly want commit change stage change commit staged change result teaching git use take significant chunk available time still leaf confusion need either tell people set coreeditor quit vim similarly world difference python foopy foopy student going interpret sort error et choose wrong one introduce tangent run risk losing people tangent briefly mentioned uml discussing diagram object particular syntax diagram subsequent lab people put significant time making sure diagram valid uml finding tradeoff presentation tutorial selfdirected exercise difficult used presentation happily talk many topic even get bored listening time spent speaking course must worse student substitute practical experience must supported guidance many topic get cover hour oop sin mean even mention pattern principle similarly design technique like functional programming got left principle like agile software development software craftsmanship devops get mention continuous integration continuous delivery got left even amount work involved going python script run test whenever change script update pypi package whenever pas damn high forget database web server browser mobile apps desktop apps iot anything command line script jupyter notebook machine learning tool concurrency process process improvement risk management security team dynamic user experience supposed taster trade introducing everything showing value present anything show found wrote appropriate behaviour load go programmer programming posted graham
172,Lobsters,education,Education,Tee-Ball,https://blog.cjeller.site/tee-ball,teeball,teeball talk,teeballjune usually begin playing baseball pitching instead ball placed tee hit call teeball child progress ball pitched rather pitched another kid ball fed pitching machine call machine pitch baseball finally kid pitching kid junior league baseball way major league interesting stage part throwing catching thing stay kid expected throw catch ball start assistance like sticky ball glove pitching hitting thing begin abstractly ramp time make sense pitching hitting extremely difficult learn need way help abstract practice moving forward next level reminds software development difficult writing code seems like throwing catching matter core competency like throwing ball around enjoyable thrown world deployment skipped teeball went straight someone pitching ball u swing miss ad infinitum get frustrated wonder anyone deploy website even meeting halfway docker heroku baffling machine pitching nt mean easier hit wonder alan kay talk teeball computer software development like hitting pitching baseball part software development need abstracted slowly ramped deployment side thing something else entirely
173,Lobsters,education,Education,A Learning Secret: Don't Take Notes with a Laptop,https://www.scientificamerican.com/article/a-learning-secret-don-t-take-notes-with-a-laptop/,learning secret nt take note laptop,widelyheld view student type significantly faster write take note new research type cognitive processing class time fall task le satisfied one study garethideas,better number gig cellular data plan horsepower pickup truck mantra ubiquitous american culture come college student belief better may underlie widelyheld view laptop classroom enhance academic performance laptop fact allow student like engage online activity demonstration collaborate easily paper project access information internet take note indeed student type significantly faster write use laptop classroom tend take note write note hand moreover student take note using laptop tend take note verbatim writing every last word uttered professor obviously advantageous draft complete note precisely capture course content allow verbatim review material later date new research pam mueller daniel oppenheimer demonstrates student write note paper actually learn across three experiment mueller oppenheimer student take note classroom setting tested student memory factual detail conceptual understanding material ability synthesize generalize information half student instructed take note laptop half instructed write note hand study student used laptop took note study however wrote note hand stronger conceptual understanding successful applying integrating material used took note laptop drive paradoxical finding mueller oppenheimer postulate taking note hand requires different type cognitive processing taking note laptop different process consequence learning writing hand slower cumbersome typing student possibly write every word lecture instead listen digest summarize succinctly capture essence information thus taking note hand force brain engage heavy mental lifting effort foster comprehension retention contrast typing student easily produce written record lecture without processing meaning faster typing speed allow student transcribe lecture word word without devoting much thought content evaluate theory mueller oppenheimer assessed content note taken hand versus laptop study included hundred student princeton ucla lecture topic ranged bat bread algorithm faith respiration economics content analysis note consistently showed student used laptop verbatim transcription lecture material wrote note hand moreover high verbatim note content associated lower retention lecture material appears student use laptop take note fairly mindless rote fashion little analysis synthesis brain kind shallow transcription fails promote meaningful understanding application information source advantage longhand note derives conceptual process evoke perhaps instructing laptop user draft summative rather verbatim note boost performance mueller oppenheimer explored idea warning laptop note taker tendency transcribe information without thinking explicitly instructed think information type note word despite instruction student using laptop showed level verbatim content better synthesizing material student received warning possible direct instruction improve quality laptop note failed easy rely le demanding mindless process typing important note study compared note taking hand versus laptop used immediate memory test administered shortly typically le hour learning session real classroom setting however student often assessed day week learning new material thus although laptop user may encode much lecture thus may disadvantaged immediate assessment seems reasonable expect additional information record give advantage reviewing material long delay wrong mueller oppenheimer included study participant asked take note hand laptop told would tested material week participant given opportunity study note final assessment took longhand note outperformed laptop participant longhand note contain student word handwriting may serve effective memory cue recreating context eg thought process emotion conclusion well content eg individual fact original learning session finding hold important implication student use laptop access lecture outline note posted professor class student use posted material access lecture content mere click need organize synthesize summarize word indeed student may take minimal note take note may consequently forego opportunity engage mental work support learning beyond altering student cognitive process thereby reducing learning laptop pose threat classroom mueller oppenheimer study laptop disconnected internet thus eliminating disruption email instant messaging surfing online distraction typical college setting however internet access available evidence suggests college student use laptop spend class time using application unrelated coursework likely fall task le satisfied education one study law school student nearly laptop user engaged online activity unrelated coursework least five minute roughly distracted half class technology offer innovative tool shaping educational experience student often positive dynamic way research mueller oppenheimer serf reminder however even technology allows u le time always foster learning learning involves receipt regurgitation information want student synthesize material draw inference see new connection evaluate evidence apply concept novel situation need encourage deep effortful cognitive process underlie ability come taking note student need fewer gig brain power scientist specializes neuroscience cognitive science psychology read recent peerreviewed paper would like write please send suggestion mind matter editor gareth cook pulitzer prizewinning journalist regular contributor newyorkercom gareth also series editor best american infographics reached garethideas gmail dot com twitter garethideas
174,Lobsters,education,Education,Database internal architecture,https://architecture-database.blogspot.com/2019/03/database-internel-architecture-sqlite.html,database internal architecture,introduction database sqlite architecture conclusion,introduction database essential part building software system used store read data efficiently going discus architectural detail database implementation using early version sqlite sqlite small database application used million software device sqlite invented drichard hipp august sqlite high performance lightweight relational database willing learn internal database coding level sqlite best open source database available highly readable source code lot documentation reading later version sqlite become little harder since contains lot new feature order understand basic implementation database internals good knowledge data structure knowledge theory computing operating system work database keeping data flat file efficient access keep data database organize data proper order data reading writing make much faster data structured semistructured unstructured database mainly store structured semistructured data database dived follows based type data structure used implement software relational database commonly used database type table structure table relation table sql language used manipulate data type database keyvalue database data stored along key associated data retrieved back given key inmemory database commonly found type database object database data structure like object rather table graph database graph database collection node edge mostly used data mining social medium application database architecture sqlite database architecture split two different section named core backend core section contains interface tokenizer parser code generator virtual machine create execution order database transaction backend contains btree pager o interface access file system tokenizer parser code generator altogether named compiler generates set opcodes run virtual machine start understand architecture database need following prerequisite good understanding data structure algorithm especially data structure btree linked list hashmaps etc understanding computer architecture readwrite disk paging caching work theoretical computer finite automaton regular expression knowledge sqlite architecture vfs virtual file system file access unix window different vfs provides common api access file without considering type operating system run api includes function open read write close file follows api used vfs read write data file create connection file read write zfilename file name id file pointer preadonly read write int sqliteosopenreadwrite const char zfilename osfile id int preadonly acqure lock read file return success failed id file pointer int sqliteosreadlock osfile id get write lock write file return success failed id file pointer int sqliteoswritelock osfile id move given number offest read write file int sqliteosseek osfile id int offset read amt byte file offset pointed sqliteosseek int sqliteosread osfile id void pbuf int amt write amt byte pbuf buffer file int sqliteoswrite osfile id const void pbuf int amt pager page smallest unit transaction file system database need read data file request page page loaded database engine store page access frequently cache page numbered start one first page called root page size page constant open pager given file name npage maximum cache limit int sqlitepageropen pager pppager const char zfilename int npage int nex get page specified page number int sqlitepagerget pager ppager pgno pgno void pppage start write data page specified pdata int sqlitepagerwrite void pdata commit page change file int sqlitepagercommit pager close connection file int sqlitepagerclose pager ppager btree btree data structure used store data tree based value simplest form btree binary tree database use btree data structure store index improve performance database cursor special pointer used point record wich given page id offset idx open file connection page file name specified zfilename ncache size cache int sqlitebtreeopen const char zfilename int mode int ncache btree ppbtree start transaction function called btree modification operation int sqlitebtreebegintrans btree pbt insert key pkey nkey byte value pdata ndata byte put btree int sqlitebtreeinsert btcursor pcur const void pkey int nkey const void pdata int ndata write data file int sqlitebtreecommit btree pbt move cursor matching pkey nkey byte int sqlitebtreemoveto btcursor pcur const void pkey int nkey int pres vdbe virtual database engine vdbe virtual machine run set operation generated code generator sql command including insert delete update select converted set opcodes run virtual machine opcode contains three input named think input input function interesting thing sqlite see set vbde opcode instruction give sql code appending explain keyword beginning sql query sample execution opcodes stack following sql select statement first column operation id second column opcode third fourth fifth column argument provided opcode explain select foo value value columncount columnname value open foo open cursor point third page root page foo table important verifycookie make sure schema changed rewind go first entry column read data push stack column ne pop top two element stack equal jump instruction otherwise continue next instruction column callback pop value stack form array move cursor next record data exit goto else go next line close cursor compiler tokenizer parser code generator together known compiler generates set opcode run vbde tokenizer generates set token scanning sql code validates syntax generates parse tree code generator convert parse tree mini program written sqlite opcodes conclusion sqlite simple lightweight highperformance relational database widely used software design early version sqlite written simple architecture highly readable code pager provides abstraction layer readwrite data file system fixed size block btree provides way store data memory efficient way access data faster sql come sqlite convert sql sqlite machine code run vbde result sends back user api
175,Lobsters,education,Education,Don't Learn Too Many Things,https://codingunicorn.dev/2019/06/18/dont-learn-too-many-things/,nt learn many thing,huge,today received message developer friend mine asked provide feedback learning roadmap permission sharing list htmlcss ruby rail javascript react nodejs aws rust go looked list hair stood even experienced developer know much stuff imagine decided become web developer learn javascript great javascript knowing syntax enough know surrounding ecosystem believe huge framework library package manager build tool testing tool name able build realworld apps also need master nonjs fundamental design pattern web protocol apis database list neverending unless want get burnout space another ecosystem ruby go rust better good something instead mediocre everything focus one ecosystem become good use knowledge solve realworld problem well
176,Lobsters,education,Education,Idyll - A toolkit for creating data-driven stories and explorable explanations,https://idyll-lang.org/,idyll toolkit creating datadriven story explorable explanation,,idyll markup language toolkit writing interactive article idyll reactive document model standard component library decrease amount code needed create high quality multimedia narrative idyll us web standard produce output load quickly web browser fully extensibleidyll enables collaboration programmer journalist researcher designer familiar javascript write custom component using tool like reactidyll supported interactive data lab university washington oreilly medium rhizome eutopia foundation
177,Lobsters,education,Education,Let’s play a game: what is the deadly bug here?,https://www.youtube.com/watch?v=MpeaSNERwQA,let play game deadly bug,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature let play game deadly bug youtube,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature let play game deadly bug youtube
178,Lobsters,education,Education,When you want to quit,https://sizovs.net/2019/06/01/when-you-want-to-quit/,want quit,want quit surround student forum find learning style work start building something ask help forum stackoverflow twitter instagram establish daily routine empty head dirty shoe,want quit june riga latvia regularly meet young programmer failing complete coding course lose faith think programming want quit started programming considered quitting several time luckily give beginner everything look hard programming exception get hard time surround student hard learn coding alone surround people struggle like learning becomes easier also fun example find friend also want learn code add competition element motivate make progress join community example free code camp forum student hang find learning style work single right way learn coding college lecturing never worked learned appreciate uniqueness always felt frustrated show good progress unique learning style different online course offline coding school programming book available course fit one people better others another find learning style work best current learning style make happy ditch start building something piano player learn playing piano reading book play piano coding skill master coding learning code without coding stop immediately start coding nothing motivates better seeing result effort learning lead result lose motivation soon learning web development build simple web project learning mobile build mobile app matter know basic accelerate learning see progress reward effort start building thing immediately ask help afraid ask help need show gut admit know something want learn many experienced developer ready help especially formulated question googled asking freecodecamp forum beginner ask question stackoverflow great place ping someone directly twitter instagram ask right track establish daily routine establishing daily coding routine essential better code one hour every day code seven hour weekend write code every day becomes habit establish habit mind find million excuse postpone coding coding hard coding involves concept continuously build go several day without coding fair amount knowledge lost empty head dirty shoe sometimes pushing feel smart productive exhausted overextended overwhelmed ready kill coding consumes lot brainpower important give break lost motivation feel tired close laptop take break go walk fly somewhere week tired learn rest quit
179,Lobsters,education,Education,How (and why) to build a programming language,https://corecursive.com/032-bob-nystrom-on-building-an-interpreter/,build programming language,show link crafting interpreter dragon book bob blog game programming pattern norvig solves suduko deepness sky,bob nystrom author crafting interpreter speak nystrom building programming language interpreter implementation talk parsing difference compiler interpreter lot moreif wondering many language handrolled parser implementation yet much content building language implementation focus parser tokenizer generator bob insight eyeopening also ever used regexes pull string apart structured data sure bob perspective simplicity handrolled parser certainly open new possibility youshow link crafting interpreter dragon book bob blog game programming patternsnorvig solves sudukoa deepness sky
180,Lobsters,education,Education,Applied Analysis by Hunter and Nachtergaele,https://math.ucdavis.edu/~hunter/book/pdfbook.html,applied analysis hunter nachtergaele,,
181,Lobsters,education,Education,"Locked doors, headaches, and intellectual need",https://mkremins.github.io/blog/doors-headaches-intellectual-need/,locked door headache intellectual need,game design richard lemarchand math education drawn parallel math aspirin create headache functional programming harm good final thought explorable explanation remarkably readable paper,know thing learn first time start seeing absolutely everywhere recently experience problemsolution ordering issue keep cropping context game design first encountered also apparently unrelated field math education functional programming despite however never seen problemsolution ordering issue explicitly discussed online community participate going try define trace different field encountered hopefully process demonstrate working awareness issue help avoid certain common pitfall teaching communicating new idea game design first introduced idea problemsolution ordering issue richard lemarchand one game design professor idea stuck mostly provided satisfying explanation certain confusing pattern player behavior witnessed many time past pattern new player jump game start bouncing around carefully crafted tutorial level level funnel key collect corresponding locked door successfully open somewhere road encounter second locked completely stumped solved problem hard time solving problemsolution ordering issue player got key first level encountering locked door never really formed understanding causal link get key open door got key stuff happened reached door able open acquiring key opening door stored two separate disconnected event player mind player encountered locked door first tried open unable found key used open door causal link would unmistakable use key open locked door open locked door without key problem becomes lot obvious call key key door look like locked door keydoor metaphor widely understood frequently used video game many player assume use key open locked door even game great job teaching fact key really thermal detonator door really power generator lot player going wind trying destroy second generator encounter whacking ineffectually sword math education drawn parallel game design education still took realize problemsolution ordering issue crop often classroom game remember high school math class lot work felt really really pointless even never felt way guarantee least former classmate often think feeling pointlessness inevitable byproduct math education instead partly consequence problemsolution ordering issue way currently teach math consider dan meyer question math educator math aspirin create headache think someone sell aspirin realize best customer aspirin someone pain lot pain migraine little one worst thing force people feel pain take aspirin may oblige particular kind authority life aspirin feel pointless undermine respect medicine general math feel pointless math pointless may point job z math point math invented new math resolve limitation old math challenge u offer student new powerful math put place experience limitation older le powerful math word introduce solution case new kind math introducing kind problem meant solve solution likely come across pointless arbitrary first let student try tackle problem math already understand likely come away kind intellectual headache therefore better understand purpose aspirin trying sell brings u functional programming functional programming concept called monad monad notoriously abstract newcomer functional programming often get tripped trying understand thing monad actually complicated fact experienced functional programmer met consider downright simple newcomer often really hard time trying figure exactly monad even lot intermediatetoadvanced functional programmer taken upon write monad tutorial blog post explanation intended demystify monad part tutorial never seem work expert read go thinking monad simple beginner read remain confused think problemsolution ordering issue blame monad solution specific problem problem repetitive code write enough code functional programming language start notice writing lot suspiciously similar code solve bunch superficially different problem nice could write code reuse instead rewriting slightly differently every time omitting lot detail effectively monad allow definition chief difference experienced inexperienced functional programmer experienced functional programmer written ton code functional language encountered repetition sought solution word felt headache monad aspirin beginner hand written nearly much functional code might noticed recurring pattern yet repetition yet bother headache hard explain monad beginner especially canned tutorial try explain monad without spending much time monad solution problem beginner yet experienced result feel pointless like something highschool math remember one worst thing force people feel pain take aspirin likewise suspect trying teach monad novice functional programmer yet understand need monad likely harm good creating unnecessary confusion perpetuating myth monad intrinsically hard understand final thought strong problemsolution ordering one defining hallmark effective explorable explanation interactivity welldesigned explorable immediately invite reader play initial arrangement element thereby discover potential problem firsthand experience problem induces intellectual need prefer headache set stage introduction solution later speaking intellectual need interested learning educational theory underpinning post strongly suggest checking remarkably readable paper intellectual need math classroom offer concrete definition intellectual need broad overview idea necessity context education finally ultimate takeaway want craft memorable relevantseeming lesson introduce locked door key headache aspirin specific motivating problem wordy metaphorical generalization ok maybe last one take bit advice
182,Lobsters,education,Education,Famous paper rejections,http://www.fang.ece.ufl.edu/reject.html,famous paper rejection,wwwnorvigcomperformancereviewhtml ew dijkstra ef codd turing ce shannon car hoare rl rivest shamir l adelman ssantini sdscedu,upon time littleknown patent clerk bern received disappointing annual performance review wwwnorvigcomperformancereviewhtml ew dijkstra goto statement considered harmful paper try convince u wellknown goto statement eliminated programming language least since nt think ever eliminated programmer use clear replace paper nt explain u would use statement without goto redirect flow execution postconditions consist single statement use arithmetic nt contain offensive goto one deal case reached end alternative program need continue execution somewhere else author proponent socalled structured programming style get right gotos replaced indentation structured programming nice academic exercise work well small example doubt realworld program ever written style year industrial experience fortran proved conclusively everybody concerned real world goto useful necessary presence might cause inconvenience debugging de facto standard must live take academic elucubrations purist remove language publishing would waste valuable paper published sure go uncited unnoticed confident year goto still alive well used widely today confidential comment editor author withdraw paper submit someplace peer reviewed letter editor would perfect choice nobody notice ef codd relational model data large shared data bank paper proposes data database represented form operation relative data access made model idea presented paper interesting may use general preliminary work fails make convincing point implementation performance practical usefulness paper general point tabular form presented suitable general data access see two problem statement expressivity efficiency paper contains realworld example convince u model practical interest cast quite contrary first sight doubt anything complex enough practical interest modeled using relation simplicity model prevents one instance representing hierarchy directly force replacement complicated system foreign key situation realistic model might end requiring dozen interconnected practical solution given probably represent model using two three properly formatted file even worse paper contains efficiency evaluation experiment real synthetic data show proposed approach compare traditional one realworld problem main reason using specialized file format efficiency data laid way common access pattern efficient paper proposes model extract significant answer real database user end inefficient solution large number join yet given experimental result indication solution might scale formalism needlessly complex mathematical using concept notation average data bank practitioner unfamiliar paper nt tell u translate arcane operation executable block access adding together lack realworld example performance experiment implementation indication detail left obscure exercise using unfamiliar mathematics little practical consequence safely rejected turing computable number application entscheidungs problem bizarre paper begin defining computing device absolutely unlike anything seen proceeds nt quite followed needlessly complicated number ca nt compute see two alternative apply machine ever built either number big represented machine case conclusion obvious case machine ca nt compute simply broken tabulating machine worth rent compute value range represents number computable applying four operation number computed modern tabulating machine since one proposed bizarre four operation hardwired seems improvement proposed turing improvement current technology strongly suspect machine simple use article accepted turing remember language journal english change title accordingly ce shannon mathematical theory communication paper poorly motivated excessively abstract unclear practical problem might relevant author claim semantic aspect communication irrelevant engineering problem seems indicate theory suitable mostly transmitting gibberish ala people pay gibberish transmitted anywhere nt understand relevance discrete source matter one end signal modulated using good oldfashioned vacuum tube signal channel always analogical running example would helped make presentation clearer le theoretical none provided also author present implementation detail experiment taken practical application confidential comment editor thing absolutely wrong paper nt quite resonate research community find exciting point sexy topic unsexy one day television sexy color television even sexier discrete channel finite number symbol good telegraphy telegraphy year old hardly good research topic author mention computing machine recent eniac well guess one could connect machine recent ibm memo stated dozen machine sufficient computing ever need foreseeable future wo nt whole lot connecting going dozen eniacs ibm decided stay electronic computing business journal probably car hoare axiomatic basis computer programming sure understand article claim programming nt contain single line code paper introduces idea certain inference rule associated statement program used show program indeed compute supposed reservation program purpose defined term author know fuzzily defined feature real program idea suitably justified might merit however current state work far preliminary considered journal may well insufficient kind publication would advise author try workshop kind preliminary idea likely find home author attempt journal publication complete work several respect method assumes function program specified final value certain variable unrealistic view interactive program author show method fit industry standard way specifying requirement also extend method applicable standard programming language cobol pli provide detail implementation possibly graphic show system work practice done fear work tentative preliminary publication rl rivest shamir l adelman method obtaining digital signature publickey cryptosystems according short introduction paper purport present practical implementation diffie hellman publickey cryptosystem application electronic mail realm indeed premise paper rejected failure live irrelevance doubt system one ever practical paper poor job convincing reader practicality attainable one thing issue number n used factor message scheme security relies factorization n prime factor taking long impractical author also stress encryption algorithm must fast application electronic mail make algorithm run sort machine let u generous assume every computer user access latestgeneration minicomputer vax machine speed consideration limit choice n n granted large number result paper table factored couple hour scarcely time margin grant security author acknowledge data encryption standard already exists supported u national bureau standard ibm currently largest computer manufacturer unlikely method run counter standard adopted significant degree true ibm method present problem distributing encryption key method standard must live instead creating nonstandard method soon dead lack user author try extend standard devise way distribute encryption key securely finally question application electronic mail arpanet indeed nice gizmo unlikely ever diffused outside academic circle public need maintain confidentiality scarcely pressing laboratory military contract never communicate arpanet either normal people small company able afford vax market electronic mail remain tiny granted seeing appearance socalled microcomputer recently announced apple ii limitation great neither descendant power necessary communicate network introduction two paragraph long relevant literature presented cited virtually comparison relevant work area summary look paper mathematical exercise little originality author claim idea come paper far practical applicability running established standard declared application area dubious feasibility kind material reader like see journal reject rest history simone santini project researcher university california san diego contact ssantini sdscedu
183,Lobsters,education,Education,<wbr>lettier/3d-game-shaders-for-be<wbr>ginners</wbr></wbr>,https://github.com/lettier/3d-game-shaders-for-beginners,wbr wbr ginners wbr wbr,game shaders beginner table content attribution copyright lettiercom,game shaders beginner interested adding texture lighting shadow normal map glowing object ambient occlusion reflection refraction game great collection shading technique take game visuals new height explained technique way take learn applyport whatever stack godot unity unreal something else glue shaders chosen fabulous game engine opengl shading language glsl stack also get benefit learning use shading technique opengl specifically table content attribution copyright c david lettier lettiercom
184,Lobsters,education,Education,Joins In Steps,http://www.zindlerb.com/joins-in-steps/,join step,,need enable javascript run app
185,Lobsters,education,Education,Computational Hardware for Pragmatists,https://arith-matic.com/,computational hardware pragmatist,diy electronic kit newsletter,due situation shipment arithmatic kit currently suspended arithmatic computational hardware project aim engineer range diy electronic kit explore gut computing arithmatic flagship kit arithmetic unit designed classic series ic enables explore arithmetic computing second us ram ic explores mechanism required read write data memory newest kit adder subtractor perfect exploring basic binary arithmetic kit pragmatic introduction computing hardware digital electronics also unique soldering exercise computing enthusiast hobbyist student maker video explore fundamental computing arithmatic kit contain throughhole electronic component need build computational hardware enable visually trace computing operation series onboard ultra bright led really see understand different part computer work along comprehensive operator technical manual arithmatic beautifully engineered pcbs guide construction operation need bring trusty soldering iron steady hand arithmatic kit perfect resource anybody wanting learn fundamental computing unique project wishing rediscover joy series logic learn please visit arithmatic diy electronic kit page keep date latest arithmatic news offer community content please sign newsletter
187,Lobsters,education,Education,Fun With Saturating Arithmetic (2010),https://blog.regehr.org/archives/277,fun saturating arithmetic,segfaults integer code exponential running time creative way pas test type function corner case mysint satsignedsub mysint mysint b return satsignedadd b big code wrong code best code,assignment often give advanced embedded system class early semester implement saturating version signed unsigned addition subtraction saturating operation stick maximum minimum value intmax sat therefore evaluates intmax wrinkle assignment solution must capable compiled via typedef integer bit give assignment several reason like people see saturating arithmetic since useful embedded application easy fun end bit tricky typically poor performance class help motivate later course material testing integer problem year ended nearly submission student tonight ran grading script found student got function right integer width also rediscovered gem segfaults integer code two student managed create solution segfault impressive result even possible ask accomplished implementing addition subtraction mutually recursive function failing stop recursion thus crash stack overflow exponential running time two student implemented iterative solution running time exponential size input accomplished unsigned addition example repeatedly incrementing one argument decrementing stopping first saturates second reach zero spectacularly inefficient one solution correct far could tell give student full point assignment failed specify function terminate reasonable time case creative way pas test test harness invokes student saturating operation random input well value near corner case far creative wrong solution came student implemented three four function correctly forgot return value fourth course undefined behavior c compile time error astoundingly intel cc recent clang snapshot gcc report zero error student code compiling optimization reason entertaining compiler seeing function always relies undefined behavior call type function turn nop test harness call reference version saturating function leaf result eax value copied ebx eax still retains copy student code called supposed store result eax remember nop test harness compare eax ebx course equal test pass said way c compiler silently destroys type function effectively evil saying corner case year people implement saturating signed subtraction like mysint satsignedsub mysint mysint b return satsignedadd b tantalizingly simple wrong big code wrong code compiled integer case using recent version gcc o solution received range byte object code totaled across four function largest correct solution byte bigger solution tend complicated complicated solution usually wrong best code tried quite compiler could manage generate correct solution smaller byte code case recent gcc snapshot c code solution produced one brightest undergrad pleasure teaching succeeds using bit operator instead arithmetic sure good assembly programmer could shave byte suspect optimal solution whole lot smaller love include code would like avoid invalidating entertaining assignment
188,Lobsters,education,Education,Kernighan's lever (2012),https://www.linusakesson.net/programming/kernighans-lever/index.php,kernighan lever,kernighan lever brian kernighan wikipedia discus page,kernighan lever brian kernighan famously wrote everyone know debugging twice hard writing program first place clever write ever debug element programming style edition chapter following version also circulates net debugging twice hard writing code first place therefore write code cleverly possible definition smart enough debug second quote may may kernighan questionable use definition make uncertain useful provocative sound bite conveying essential idea tempting interpret kernighan aphorism warning stay away clever technique seems say write clever code never able get work interpretation unfortunate rest false assumption cleverness static possible kernighan intended u interpret message specific way wisely restricted merely presenting observation allowing u draw conclusion pay close attention actually said written code cleverly suddenly face problem clever enough solve certainly clever context refer innate talent nobody born ability write clever code first place cleverness required write understand intricate code acquired mental skill programmer familiar sense wonder gradually transforming utter stupor stare perfectly reasonable code could nt possibly fail yet somehow since confident understand code work written feel must able figure going desire deliver working software time powerful force pride stubbornness curiosity contribute motivation push onwards arduous task tracking root cause error suddenly see blinded bright light piece fall place inexperienced programmer may fall trap selfdegradation oh look stupid sentiment proof programmingrelated cleverness skill increased oh look clever become although would nt recommend saying loud skill result practice systematically trying work slightly beyond one ability quite understandably u nt spend kind effort unless good reason hence without motivation practise simply cruise along current level never improve mind good rationalising convince u current skill sufficient good enough certainly better average programmer anyway human brain trick regardless actual level skill tend consider sufficiently skilled right never regret improving effortlessly wield clever programming technique today would baffled younger self afraid stopped evolving programmer long ago improvement result practice something must motivated put hour work kernighan witty remark provide clue programming soon work current level automatically end situation work beyond current level mean fortunate mechanism leverage several basic human drive honour pride stubbornness curiosity providing motivation necessary improvement call mechanism kernighans lever putting small amount motivation towards shortterm goal implementing functionality suddenly end much larger amount motivation towards long term investment personal growth programmer deliberately stay away clever technique writing code order avoid need skill debugging dodge lever miss improvement would need source motivation order grow programmer motivation appears ability stagnate even deteriorate psychological concept flow somewhat simplified used visualise process flow fully immersed feeling energised focus full involvement enjoyment process activity wikipedia occurs challenge tackling match current level skill implement ability get debug flow area implement ability debugging frustrating gain skill find situated particular xcoordinate corresponding current level skill writing code point graph according kernighan assumption debugging code would point fair bit directly certainly possible deliberately pick low starting point avoid ending frustration area put squarely boredom area boredom frankly better frustration however pick starting point enjoyable flow area kernighan lever screech action push sideways graph increasing skill match challenge posed bug code naturally real world complex sometimes compelling reason go boring option artificially reduce cleverness order dumb debugging phase may harm longterm personal development go road every single time write program conclusion answer kernighan rhetorical question ever debug straightforward tackling problem thereby gaining valuable experience becoming clever process second version quote adorned single word end yet posted tuesday discus pagedisclaimer responsible people write forum please report abuse insult slander spam illegal material take appropriate action nt feed trollsjag tar inget ansvar för det som skrivs forumet förutom mina egna inlägg vänligen rapportera alla inlägg som bryter mot reglerna så ska jag se vad jag kan göra som regelbrott räknas till exempel förolämpningar förtal spam och olagligt material mata inte trålarnaanonymoussat true perfect solution would debug program year wrote however tempted rewrite year code rated boring area need another year wait debug lftlinus åkessonsat true perfect solution would debug program year wrote completely contrary point really unclear work current capacity ten year skill improve slightly spend ten year trying great effort work beyond current capacity skill improve lot tricky part motivating spend effort common knowledgemy article software developer get motivation free writing clever code mporshnevmax porshnevtue wrote spend ten year trying great effort work beyond current capacity skill improve lot famous russian singer href http enwikipediaorgwikivladimirvysotsky владимир высоцкий song лучше гор могут быть только горы на которых ещё не бывал song called прощание с горами anonymousfri wrote лучше гор могут быть только горы на которых ещё не бывал loosely translated english better mountain mountain scaled yet anonymoussun put delicate word onto everyday personnal feeling tricky part motivation issue imho biggest reward feeling improvement one skill selfmotivating idea code boredom area order avoid frustration like treating idea disrespect prefer writing code respect original idea thus requiring full capability likely lead bug said also hopefully point honored idea fixed bug anonymoussun essay valid point context lack depth one thing hobby quite another one must walk delicate line writing code easy debug consideration others one entrepreneur racing clock going ship probably privy zen software done done mean writing quality code must necessarily avoid cleverness favor maintainability one entrepreneur one must eventually ship startup bustrule clarity clarity better cleverness maintenance important expensive write program important communication computer executes human being read maintain source code future including http representation fold knowledge data program logic stupid robust even simplest procedural logic hard human verify quite complex data structure fairly easy model reason see compare expressiveness explanatory power diagram say fiftynode pointer tree flowchart fiftyline program compare array initializer expressing conversion table equivalent switch statement difference transparency clarity dramatic http anonymoussun would also like leave think following anyone write clever code anyone write complex code anyone overcomplicate really really smart make complex thing simple go way effectively simplify complex thing true smart incredibly hard requires one extremely smart knowledgeable experienced many people even among smart anonymoussat everything made simple possible simpler einstein anonymousmon think necessary deliberately stay away clever technique depends also debugging nt exactly twice difficult depends program thing anonymousmon true debugging improve understanding myth underlying technology especially debugging others code programming anonymousmon nice good attempt debunk kernighan leverage quote anonymousfri practice generally useful practice useful practice trying maximize practice trying maximize skillbuilding per time subject motivational constraint believe debugging often le skillbuilding writing code instance hourlong hunt omitted character often cause little skill enhancement sadly law physic say gain skill accordance much work also find dubious statement coding skill innate nobody born ability write clever code first place practice improves programmer skill imply practice improves programmer skill try telling man ability play basketball nt innate nobody born knowing play basketball anonymousfri kc love kernighan quote author best language best programming book ever one computing great remembered forevernice article linus think sure take twice effort debug initial effort analysis implementation revisited problem seen context original solution ca nt possibly happening code love problem seem impossible people tell obvious know solution find itsubtle problem much difficult find experience commercial software kernighan right anonymouswed aphorism aphorisi related collected long arduous year prof sw testament bk builder built building way programmer build program first woodpecker came along would destroy nelson law better fourwheel drive vehicle farther away civilization break downand corollary probability bug exists directly proportional programmer insistence notthank great article accompanying apropos pic archimedes griffinitue programmer try opinion write code limit trying push nt production code code production trivial even course trivial depends readermoreover problem writing simplest code job interesting keeping boredom away even course different level writing smartest fastest smallesthowever nt think easy answer question code complexity definitive answer think programming depends simplest code may simple future proof able accept easily next feature required forcing rewritingnothing bad rewriting course au contraire may economic downside wo nt make acceptable philosophy
189,Lobsters,education,Education,The Teacher Development Continuum in the United States and China: Summary of a Workshop,https://www.nap.edu/read/12874/chapter/1,teacher development continuum united state china summary workshop,national academy adviser nation science engineering medicine national academy science national academy engineering institute medicine national research council wwwnationalacademiesorg,national academy adviser nation science engineering medicinethe national academy science private nonprofit selfperpetuating society distinguished scholar engaged scientific engineering research dedicated furtherance science technology use general welfare upon authority charter granted congress academy mandate requires advise federal government scientific technical matter dr ralph j cicerone president national academy sciencesthe national academy engineering established charter national academy science parallel organization outstanding engineer autonomous administration selection member sharing national academy science responsibility advising federal government national academy engineering also sponsor engineering program aimed meeting national need encourages education research recognizes superior achievement engineer dr charles vest president national academy engineeringthe institute medicine established national academy science secure service eminent member appropriate profession examination policy matter pertaining health public institute act responsibility given national academy science congressional charter adviser federal government upon initiative identify issue medical care research education dr harvey v fineberg president institute medicinethe national research council organized national academy science associate broad community science technology academy purpose furthering knowledge advising federal government functioning accordance general policy determined academy council become principal operating agency national academy science national academy engineering providing service government public scientific engineering community council administered jointly academy institute medicine dr ralph j cicerone dr charles vest chair vice chair respectively national research councilwwwnationalacademiesorg
190,Lobsters,education,Education,Advanced NLP with spaCy · A free online course,https://course.spacy.io/,advanced nlp spacy free online course,course,coursespacy modern python library industrialstrength natural language processing free interactive online course learn use spacy build advanced natural language understanding system using rulebased machine learning approachesabout mei ines one core developer spacy cofounder explosion specialize modern developer tool ai machine learning nlp also really love building stuff web
191,Lobsters,education,Education,Studying the relationship between remixing & learning,https://unmad.in/blog/2016/04/remixing-learning/,studying relationship remixing learning,studying relationship remixing learning scratch online community constructionist framework vision comment remixing pathway computational thinking conference computer supported collaborative work social computing earlier study paper benjamin mako hill william hale,studying relationship remixing learning million user scratch online community largest online community kid learn program since created central goal community promote remixing reworking recombination existing creative artifact video show remixing programming project current webbased version scratch easy clicking see inside button project webpage clicking remix button webbased code editor today close project scratch remixes remixing play central role scratch designer believed remixing play important role learning scratch designed first foremost learning community root constructionist framework developed mit seymour papert colleague design scratch online community inspired papert vision learning community similar brazilian samba school henry jenkins writes experience samba school context papert vision comment marvin minsky made adult worry lot day especially worry make people learn computer want make u computerliterate literacy mean reading writing book course computer tell writing program worse tell command instruction programminglanguage grammar rule hardly ever give example real language word grammar rule also literature people use language one ever learns language told grammar rule always start story thing interest u new paper titled remixing pathway computational thinking recently published acm conference computer supported collaborative work social computing cscw conference used series quantitative measure online behavior try uncover evidence might support theory remixing scratch positively associated learning course scratch informal environment set path user lesson plan quiz measuring learning open problem study built two different approach measure learning scratch first approach considers number distinct type programming block available scratch user used lifetime scratch total something thought block repertoire vocabulary measure used model informal learning scratch earlier study using approach hypothesized user remix faster rate growth code vocabulary controlling number factor eg age user general level activity found evidence small positive relationship number remixes user shared block vocabulary measured unique block used nonremix project intriguingly also found strong association number downloads user vocabulary growth one interpretation learning might also associated le active form appropriation like process reading source code described minksy second approach used considered specific concept programming loop eventhandling measure utilized mapping scratch block key programming concept found paper karen brennan mitchel resnick example image scratch block mapped concept loop looked six concept total conditionals data event loop operator parallelism case hypothesized someone never used given concept would likely use concept encountering remixing existing project using second approach found user never used concept likely exposed concept remixing although concept widely used others found positive relationship concept use exposure remixing six concept found relationship true even ignored obvious example cutting pasting block code model found believe evidence learning remixing course many limitation work found positive correlation know relationship causal moreover measure really tell u whether someone understood usage given block programming concepthowever even limitation excited result work plan build next step include developing utilizing better measure learning well looking method appropriation like viewing source code project paper blog post collaborative work benjamin mako hill william hale paper released open access anyone read entire paper
192,Lobsters,education,Education,A theory of instruction for introductory programming skills,https://faculty.washington.edu/ajko/papers/Xie2019IntroCSTheoryOfInstruction.pdf,theory instruction introductory programming skill,,obj stream applicationpdf en theory instruction introductory programming skill benjamin xie dastyni loksa greg l nelson matthew j davidson dongsheng dong harrison kwik alex hui tan leanne hwa min li andrew j ko routledge computer science education computing education theory instruction instructional design skill acquisition introductory computer science journal computer science education informa uk limited trading taylor francis group http vor arbortext advanced print publisher unicode computing education theory instruction instructional design skill acquisition introductory computer science itext uuid endstream endobj obj stream uys ȷ mi j x ynw u mz hj gw z endstream endobj obj stream l q fv l b ww endstream endobj obj stream endstream endobj obj stream n b f ے ϳ g fd ezk b դ f iҿ
193,Lobsters,education,Education,Digital Audio Show & Tell,https://xiph.org/video/vid2.shtml,digital audio show tell,digital show tell previous episode wiki download video creative common attributionsharealike bysa license download subtitle video xiphorg,digital show tell xiphorg foundation nonprofit organization supported donation chapter selection title introduction veritas ex machina stairsteps bitdepth dither bandlimitation timing epilogue end credit subtitle czech u english french italiano polski portuguãªs brazil spanish continuing firehose tradition maximum information density xiphorg second video digital medium explores multiple facet digital audio signal really behave real world demonstration sampling quantization bitdepth dither explore digital audio behavior real audio equipment using modern digital analysis vintage analog bench equipment case ca nt trust newfangled digital gizmo also download source code demo try like previous episode video move fast glance number rather important topic set wiki get information ask question debate download video digital show tell distributed creative common attributionsharealike bysa license download via http download subtitle welcome good technical translation community please submit translation srt vtt ogg kate format video xiphorg xiph fish logo vorbiscom manyfish logo trademark xiphorg page xiphorg right reserved
194,Lobsters,education,Education,Afternoon with Arduino,https://www.charlieharrington.com/afternoon-with-arduino,afternoon arduino,arduino ardwhatnow microcontroller uno arduino v raspberry pi raspberry pi opensource root sensor actuator processing community jer thorp introduction processing course makershed adafruit make getting started arduino kit arduino quickstart guide maik schmidt fun led rubber duck desk anode cathode putting usb counting binary led tinkering,last eight year carrying around arduino literally person know amongst treasure waiting right time start tinkering time turn yesterday afternoon post outline thing learned far ardwhatnow arduino microcontroller board board contains cpu central processing unit along io input output connection think small circuit circuit happens contain programmable computer chip chip learn easily program picture arduino uno varietal love made italy mark upper left microprocessor computer chip long flat black rectangle near bottomright corner device pin side along top edge arduino see strip black input pin arduino digital pin meaning either cpu bottom right see another analog pin meaning receive analog continuous signal power pin left provide voltage ground stuff nt know yet arduino v raspberry pi point might asking arduino different raspberry pi good question since affordable adorable tiny little computer buy buck le raspberry pi fullon linux computer arduino instead arduino computer hold one program time store program durable memory turn arduino still remember latest program like singlepurpose device except dream build singlepurpose many time want opensource root company behind arduino nonprofit arduino opensource mean anyone build arduino board original idea behind arduino make simple device designer artist could use rapid prototyping physical computing project use sensor aka input like keyboard mouse motion detector actuator aka output like display printer light interact communicate u human bean cool arduino closely tied processing community fact bit understatement since actually write processing code writing program arduino like processing program also called sketch happy see since one earliest computing class jer thorp introduction processing course unabashedly recommend way mentioned anyone download opensource schematic arduino build board themeselves basic component like make tinkering lifestyle easier suggest picking preassembled arduino retailer like makershed adafruit kit bought eight year ago make getting started arduino kit current version appears retailing buck imho definitely worth kit come along bunch goody help get started right away like breadboard colorful wire clickable switch led sensor friendly introductory book also picked arduino quickstart guide maik schmidt enjoying book well fun led believe legally required write program blink led first project arduino asked day ago led yeah sure know led little red light thing like game boy stand light emitting diode great continue diode um already one fun thing playing arduino sort basic electronics stuff sorta know could nt explain fiveyearold rubber duck desk nt know arduino helped tackle topic practical tangible way let take look led together see longer pin leg sticking red part anode terminal anode positive end led shorter leg cathode negative side electron flow anode cathode connected want connect positive end something providing voltage negative end need connected ground diode polarized meaning distinct positive negative side led light emitting diode happen provide illumination connected active circuit lot pretty color okay legallyrequired sketch blinking led connected digital pin every halfsecond const int led void setup pinmode led output void loop digitalwrite led high delay digitalwrite led low delay pretty simple right first declare constant variable pin using setup function run per program right loop kick infinite loop let arduino know want set pin output mode infinite loop toggle voltage pin passing high volt low volt pin using digitalwrite function pausing millisecond operation coming processing world program structure setup loop look familiar since literally arduino ide provides easy way verify program compile flashing actual arduino suggest clicking verify button first catch syntax error like pesky missing semicolon next set physical device going stick led arduino anode leg going pin cathode leg ground note pin special pin arduino resister builtin try pin arduino led burn finally send program computer arduino usb connection clicking upload button ide arduino flash happily complete infinite race look blinker pretty great huh note gif definitely speed thing bit putting usb continued building stuff inevitably found wanting consolelog heck program nt working let talk printing stuff arduino arduino connected computer via usb cable usb usb stand something right stand universal serial bus usb quote industry standard communication computer peripheral think back really hard time captain marvel even earlier might remember way connected peripheral computer like dot matrix printer parallel port keyboard port well time since carol danvers left u fend usb taken heart mind wallet still using serial connection using usb device need use serial protocol communicate arduino word want send receive info arduino program need establish serial connection device processing sketch const unsigned int baudrate void setup serialbegin baudrate void loop serialprintln hello world baud rate huh know baud term modem baud rate iirc wikipediaing googleing reveal baud rate rate information transferred serial channel case baud rate transferring max bit per second happens standard baud rate arduinos believe choose different rate view console click serial monitor button ide addition viewing received information also send message back arduino monitor using text input top panel send button example might write program toggled led based specific input key nt want use serial monitor arduino ide maybe time let old way die agree mac try running screen command terminal specifying name serial connection arduino baud rate screen nameofserialconnection case name connection find toolsport menu arduino ide word warning however close terminal window wo nt close sesssion unable upload new program arduino called detached screen annoying need quit screen somehow use command screen x nameofsession quit oh get name detached session type whole serial communication thing open interesting idea since two way comms arduino something else forget alexa notokay google go away siri build talking robotic best friend instead hopefully get gear turning counting binary led general lifegoalwise trying get better thinking counting binary decided build little binary counter next arduino project const unsigned int const unsigned int const unsigned int const unsigned int long result void setup pinmode output pinmode output pinmode output pinmode output void loop result result result outputresult result delay void outputresult const long result digitalwrite result digitalwrite result digitalwrite result digitalwrite result sure red led nt bright three led tried swapping another led avail hey thing work also learned breadboard great able run cathode side led bottom negative row breadboard connecting row arduino ground port pretty darn helpful learn appreciate sure also first time really leveraged power bitwiseand operator taking result bitwiseand binary number represents binary digit led bitwiseand operation return true result binary number contain given binary digit example let look number true true false false final trick digitalwrite function transforms true boolean value high turn led false low turn led number led digit digit lit pretty awesome make code concise much explore tinkering mere afternoon learned ton quite bit fun along way next ask well resistor still perplexing sure yet determine level resistence needed given situation already fried led delightful puff smoke wisp last gasp life likely reason also really hard read colorful band try determine resistance level seems like could great little computer vision deep learning app perhaps use multimeter regularly also thinking difference analog digital signal digital binary either whereas analog continuous observe life analog signal choose digitize need choose specific moment sample value continuous signal schmidt book explained audio cd take sample every per second khz maybe vinyl back thinking obvious next project arduino make alarm clock binary number ton neat example project across web think could good way learn improve soldering skill well quick mental binary counting especially groggy middle night
195,Lobsters,education,Education,Codecademy vs. The BBC Micro,https://twobithistory.org/2019/03/31/bbc-micro.html,codecademy v bbc micro,archive computer literacy project altair computer programme awkward transition computer literacy today noble internet vigilante written twobithistory r feed,late computer decade mysterious hulking machine bidding corporate overlord suddenly became something average person could buy take home enthusiastic minority saw great rushed get computer many people arrival microcomputer triggered helpless anxiety future ad magazine time promised home computer would give child unfair advantage school showed boy smart blazer tie eagerly raising hand answer question behind dimwitted classmate look sullenly ad others like implied world changing quickly immediately learn use one intimidating new device family would left behind uk anxiety metastasized concern highest level government competitiveness nation whole underwhelming decade great britain inflation unemployment high meanwhile series strike put london blackout blackout government report fretted failure keep trend computing technology would add another factor poor industrial performance country already seemed behind computing great computer company american integrated circuit assembled japan taiwan audacious move bbc public service broadcaster funded government decided would solve britain national competitiveness problem helping briton everywhere overcome aversion computer launched computer literacy project multipronged educational effort involved several tv series book network support group specially built microcomputer known bbc micro project successful editor byte magazine wrote compared u proportionally britain population interested microcomputer editor marveled people fifth personal computer world show uk year west coast computer faire sixth great britain watched episode first series produced computer literacy project million bbc micros ultimately sold archive containing every tv series produced material published computer literacy project put web last year huge amount fun watching tv series trying imagine would like learn computing early turned interesting computing taught today still worry technology leaving people behind wealthy tech entrepreneur government spend lot money trying teach kid code website like codecademy make use new technology teach coding interactively one would assume approach effective goofy tv series computer literacy project microcomputer revolution began release altair two year later apple ii commodore pet released sale new computer exploded bbc explored dramatic societal change new machine sure bring documentary called chip documentary alarming within first five minute narrator explains microelectronics totally revolutionize way life eerie synthesizer music play green pulse electricity dance around magnified microprocessor screen narrator argues new chip japan abandoning ship building child grow without job go documentary go explore robot used automate car assembly european watch industry lost digital watch manufacturer united state castigates british government prepare country future mass unemployment documentary supposedly shown british cabinet several government agency including department industry manpower service commission became interested trying raise awareness computer among british public manpower service commission provided fund team bbc education division travel japan united state country factfinding trip research team produced report cataloged way microelectronics would indeed mean major change industrial manufacturing labor relation office work late decided bbc make tenpart tv series would help regular briton learn use control computer feel dominated project eventually became multimedia endeavor similar adult literacy project earlier bbc undertaking involving tv series supplemental course helped two million people improve reading producer behind computer literacy project keen tv series feature handson example viewer could try microcomputer home example would basic since language really entire shell used almost microcomputer producer faced thorny problem microcomputer manufacturer dialect basic matter dialect picked would inevitably alienate large fraction audience real solution create new microcomputer go along member british public would able buy new microcomputer follow along without worrying difference software hardware tv producer presenter bbc capable building microcomputer put together specification computer mind invited british microcomputer company propose new machine met requirement specification called relatively powerful computer bbc producer felt machine able run real useful application technical consultant computer literacy project also suggested basic dialect going taught entire nation better good one may phrased exactly way bet thinking bbc basic would make basic usual shortcoming allowing recursion local variable bbc eventually decided cambridgebased company called acorn computer would make bbc micro choosing acorn bbc passed proposal clive sinclair ran company called sinclair research sinclair research brought massmarket microcomputing uk sinclair sinclair new computer cheap powerful enough bbc purpose acorn new prototype computer known internally proton would expensive powerful expandable bbc impressed proton never marketed sold proton instead released december bbc micro also affectionately called beeb could get version version acorn underdog british computing industry bbc micro helped establish company legacy today world popular microprocessor instruction set arm architecture arm stand advanced risc machine originally stood acorn risc machine arm holding company behind architecture spun acorn bad picture bbc micro taken computer history museum mountain view california computer programme dozen different tv series eventually produced part computer literacy project first tenpart series known computer programme series broadcast ten week beginning million people watched weeknight broadcast show quarter million watched rerun sunday monday afternoon show hosted two presenter chris serle ian mcnaughtdavis serle play neophyte mcnaughtdavis professional experience programming mainframe computer play expert inspired setup made awkward often go directly conversation mcnaughtdavis bit walkandtalk narration delivered camera help wonder whether mcnaughtdavis still standing frame meant serle could voice concern audience would surely look intimidated screenful basic ask question like dollar sign mean several point show serle mcnaughtdavis sit front computer essentially pair program mcnaughtdavis providing hint serle try figure would much le relatable show presented single allknowing narrator show also made effort demonstrate many practical application computing life regular people early home computer already begun associated young boy video game producer behind computer programme sought avoid interviewing impressively competent youngster likely increase anxiety older viewer demographic show trying attract computing first episode series gill nevill show location reporter interview woman bought commodore pet help manage sweet shop woman name phyllis look year old yet trouble using computer accounting even started using pet computer work business sound like beginning promising freelance career phyllis say mind computer work grew replace sweet shop business since enjoys computer work interview could instead interview teenager modified breakout faster challenging would encouraging almost nobody hand phyllis people use computer surely show feature lot basic programming really want teach audience computing work general show explains general principle analogy second episode extended discussion jacquard loom accomplishes two thing first illustrates computer based magical technology invented foundational principle computing go back two hundred year simple idea punch hole card control weaving machine second interlacing warp weft thread used demonstrate binary choice weft thread go warp thread enough repeated produce enormous variation segue course discussion information stored using binary digit later show section steam organ play music encoded long segmented roll punched card time analogy used explain subroutine basic serle mcnaughtdavis lay whole roll punched card floor studio point segment look like refrain repeated mcnaughtdavis explains subroutine would get cut repeated segment card somehow added instruction go back original segment played refrain first time brilliant explanation probably one stuck around people mind long time afterward picked example think general show excels demystifying computer explaining principle computer rely function show could instead focused teaching basic turn much conscious choice retrospective written john radcliffe executive producer computer literacy project wrote following computer going important believed genuine understanding new subject would important everyone almost important perhaps capacity read write early idea america concentrated programming main route computer literacy however thinking progressed although recognized value handson experience personal micros began place le emphasis programming wider understanding relating micros larger machine encouraging people gain experience range application program highlevel language relating experience real world industry belief people grasped principle simplest would able move forward subject later radcliffe writes similar vein much debate main explanatory thrust series one school thought argued particularly important programme give advice practical detail learning use micro concluded series sustained educational value way real world computing explanation computing principle would need achieved combination studio demonstration micros explanation principle analogy illustration film reallife example practical application micros mini computer mainframe would shown love particularly part minicomputer mainframe producer behind computer programme aimed help briton get situated computing going computer might future learning basic part answering question knowing basic alone seen enough make someone computer literate computer literacy today google learn code first result see link codecademy website modern equivalent computer literacy project something reach similar aim codecademy learn code codecademy tagline think first person point fact probably read somewhere ripping something revealing using word code instead program suggests important thing learning decode code look screen worth python eye glaze understand average person seems like main hurdle becoming professional programmer professional programmer spend day looking computer monitor covered gobbledygook want become professional programmer better make sure decipher gobbledygook dealing syntax challenging part programmer quickly becomes almost irrelevant face much bigger obstacle also armed knowledge programming language syntax may able read code able write code solve novel problem recently went codecademy code foundation course course site recommends take interested programming opposed web development data science never done programming lesson history computer science perfunctory poorly researched thank heaven noble internet vigilante pointed particularly egregious error main focus course teaching common structural element programming language variable function control flow loop word course focus would need know start seeing pattern gobbledygook fair codecademy offer course look meatier even course computer science path course focus almost exclusively programming concept represented program one might argue whole main feature give little interactive programming lesson automated feedback also enough room cover much stuff somebody brain little automated lesson producer bbc tasked kicking computer literacy project also problem recognized limited medium amount learning would take place result television programme would limited similar constraint volume information could convey chose emphasize general principle learning basic codecademy replace lesson two interactive visualization jacquard loom weaving together warp weft thread banging drum general principle loudly let explain think important book j clark scott computer called know title come anecdote open book salesman explaining group people thermos keep hot food hot cold food cold member audience astounded new invention asks know joke course thermos perceiving temperature food making thermos constructed cold food inevitably stay cold hot food inevitably stay hot people anthropomorphize computer way believing computer digital brain somehow choose one thing another based code fed learning thing computer work even rudimentary level take homunculus machine jacquard loom good goto illustration may first seem like incredible device read punch card somehow know weave right pattern reality mundane row hole corresponds thread hole row corresponding thread get lifted understanding may help anything new computer give confidence dealing something magical impart sense confidence beginner soon ala possible real problem nobody want learn jacquard loom judging codecademy emphasizes professional application teach many people probably start using codecademy believe help level career believe unreasonably primary challenge understanding gobbledygook want learn code want quickly possible hour two night dinner collapsing bed codecademy business give people looking roundabout explanation involving machine invented century computer literacy project hand bunch producer civil servant bbc thought would best way educate nation computing admit bit elitist suggest laud group people teaching mass incapable seeking help think got right lot people first learned computing using bbc micro many people went become successful software developer game designer written suspect learning computing time computer relatively simple huge advantage perhaps another advantage people show like computer programme strove teach programming also computer run program watching computer programme may understand gobbledygook computer screen really need know whatever code look like computer always basic thing course two codecademy understand flavor gobbledygook computer magical machine somehow turn gobbledygook running software computer literacy enjoyed post like come every four week follow twobithistory twitter subscribe r feed make sure know new post previously
196,Lobsters,education,Education,"Hello, and welcome to DNS",https://powerdns.org/hello-dns/,hello welcome dns,,warm welcome dns hello welcome dns series document attempt provide correct introduction domain name system original rfcs remain authoritative source normative text document try make venerable protocol accessible maintaining full alignment relevant useful rfcs effort developed cooperatively github repository found http githubcomahupowerdnshellodns help highly welcome feedback also sent berthubert powerdnscom powerdnsbert http twittercompowerdnsbert contributor far include janpiet men andrew babichev jacob hoffmanandrews peter van dijk nathan froyd gene mcculley charleshenri bruyand jose nazario warren kumari patrick cloke andrew tunnelljones thanks although start relatively basic principle reader expected know ip address stub resolver authoritative server supposed doubt authoritative server host dns data resolvers look thing authoritative server client run stub resolvers look thing resolvers document aimed developer may also aid administrator dns originally written august ien http part parallel series document describing internet ien dns compatible today dns rfc released describing version dns similar quite interoperable one today dns attained modern form rfc published although much remains valid standard easy read written different time page update found later document main goal effort contradict dns rfcs provide easier entrypoint understanding domain name system goal mini tcpip illustrated http enwikipediaorgwikitcpipillustrated dns philosophy document contribute please read metamd metamdhtml help insight highly welcome want thank job snijders input enthusiasm improving state dns layout content spread several document core dns basicmdhtml relevant stub resolvers application stubmdhtml relevant authoritative server authmdhtml relevant resolvers resolvermdhtml tdns scratch dns library tdnsreadmemdhtml tauth minimal feature complete authoritative server tdnstauthmdhtml tres minimal feature complete dns resolver tdnstresmdhtml c api c library dns query tdnscapimdhtml optional element edns tsig dynamic update dname dns cooky optionalmdhtml privacy related privacymdhtml qname minimization dnsovertls dnsoverhttps edns padding dnssec dnssecmdhtml nonietf standard nonietfmdhtml rrl rpz rare part dns raremdhtml obsolete frequently encountered production start general introduction dns basic resource record rrset zone zonecut packet laid part required reading anyone ever wanting query nameserver emit valid response specialize application expect send question resolver stub resolver expect next part authoritative server supposed top describe slightly le detail resolver could operate finally section optional element like edns tsig dynamic update dnssec rfcs especially earlier one tend describe server perform authoritative resolver function turn make code troubleshooting harder therefore document authoritative caching function described separately next dns basic basicmdhtml
197,Lobsters,education,Education,Common statistical tests are linear models (or: how to teach stats),https://lindeloev.github.io/tests-as-linear/,common statistical test linear model teach stats,blog profile changelog python version twitter summary image pdf simplicity underlying common test lyingtochildren jasp literally latent ranking source teaching material github repo page setting toy data pearson spearman correlation theory linear model regression multiple regression onesample ttest twoway anova spearman rank correlation pearson correlation rank appropriate sample greater almost perfect n theory ranktransformation r code pearson correlation r code spearman correlation one mean one sample ttest wilcoxon signedrank theory linear model ttest wilcoxon signedrank test signed rank approximation good enough sample size larger almost perfect sample size larger r code onesample ttest r code wilcoxon signedrank test paired sample ttest wilcoxon matched pair theory linear model ttest onesample ttest wilcoxon matched pair wilcoxon signedrank r code paired sample ttest r code wilcoxon matched pair sign test two mean independent ttest mannwhitney u theory linear model indicator variable also called dummy coding mannwhitney u wilcoxon ranksum test sample size larger group virtually perfect n group theory dummy coding theory dummy coding continued r code independent ttest r code mannwhitney u welch ttest independent ttest welch ttest see detail three mean section dummy coding oneway anova kruskalwallis theory linear model independent ttest onesample ttest goodnessoffit multiple regression kruskalwallis oneway anova good enough data point wilcoxon signedrank test mannwhitney u test example data oneway anova dummy coding r code oneway anova anova r code kruskalwallis twoway anova plot progress theory linear model oneway anova dummy coding r code twoway anova oneway anova likelihoodratio test involved ancova oneway anova oneway ancova twoway anova onesample ttests oneway ancova pearson correlation proportion chisquare loglinear model nice introduction goodness fit theory loglinear model section contingency table example data r code goodness fit link function score test binomial test contingency table theory loglinear model twoway anova model see relevant slide christoph scheepers twoway anova model example data r code chisquare test twoway anova source equivalence teaching material course outline fundamental regression solution differential equation pearson spearman correlation coefficient special case one two mean ttests wilcoxon mannwhitney one mean onesample ttest wilcoxon signed rank test respectively two mean independent ttest paired ttest wilcoxon matched pair special case three mean anova dummy coding oneway anova twoway anova special case three proportion chisquare excellent introduction goodness fit contingency table hypothesis testing ttest onesample ttest limitation robust model section link equivalence github repo,jonas kristoffer lindeløv blog profile last updated june see changelog check python version twitter summary document summarised table show linear model underlying common parametric nonparametric test formulating test language highlight many similarity get image pdf simplicity underlying common test common statistical model ttest correlation anova chisquare etc special case linear model close approximation beautiful simplicity mean le learn particular come cdot x b student know highschool unfortunately stats intro course usually taught test independent tool needlessly making life complicated student teacher alike needle complexity multiplies student try rote learn parametric assumption underlying test separately rather deducing linear model reason think teaching linear model first foremost namedropping special case along way make excellent teaching strategy emphasizing understanding rote learning since linear model across frequentist bayesian permutationbased inference argue better start modeling pvalues error bayes factor inference concerning teaching nonparametric test introcourses think justify lyingtochildren teach nonparametric test merely ranked version corresponding parametric test much better student think rank believe magically throw away assumption indeed bayesian equivalent nonparametric test implemented jasp literally latent ranking frequentist nonparametric test considered approach highly accurate n use menu jump favourite section link lot similar though scattered stuff source teaching material hope join suggesting improvement submitting improvement github repo page let make awesome setting toy data unfold want see function setting notebook load package data handling plotting library tidyverse library patchwork library broom reproducible random result setseed generate normal data known parameter rnormfixed function n mu sd scale rnorm n sd mu plot style themeaxis function p jitter false xlim c ylim c legendposition null p p themebw geomsegment x xend yend lty color dark gray lwd geomsegment x xend yend lty color dark gray lwd coordcartesian xlim xlim ylim ylim theme axistitle elementblank axistext elementblank axisticks elementblank panelborder elementblank panelgrid elementblank legendposition legendposition return jittered nonjittered plot jitter p geomjitter width size else p geompoint size start keep simple play three standard normal wide b c long format value group wide format sort rnormfixed almost zero mean c rnorm exp rnorm runif min max almost zero mean normal x rnormfixed mu sd used correlation xaxis rnormfixed mu sd used two mean long format data indicator value c group rep c pearson spearman correlation theory linear model model recipe slope time x plus intercept aka straight line x qquad mathcal h mathy way writing good old ax b ordered b ax r lazy write x r read like number x othernumber task ttests lm etc simply find number best predict either way write intercept slope yielding straight line fixed correlation dcorrelation dataframe mass mvrnorm mu c sigma matrix c ncol empirical true correlated data add label next plot dcorrelation labelnum sprintf dcorrelation dcorrelation dcorrelation labelrank sprintf rank dcorrelation rank dcorrelation plot fit lm dcorrelation interceptpearson coefficient fit ppearson ggplot dcorrelation aes geomsmooth methodlm sefalse aes geomsegment yinterceptpearson yendinterceptpearson aes color scalecolormanual namenull valuesc blue red labelsc bquote beta intercept bquote beta slope themeaxis ppearson legendposition c often simply called regression model extended multiple regression several beta righthand side multiplied predictor everything onesample ttest twoway anova special case system nothing nothing le name implies spearman rank correlation pearson correlation ranktransformed x rank cdot rank x qquad mathcal h introduce rank minute notice correlation coefficient linear model identical real pearson correlation pvalues approximation appropriate sample greater almost perfect n nice nonmysterious equivalence many student left unaware visualizing side side including data label see ranktransformation action spearman intercept interceptspearman coefficient lm rank rank dcorrelation spearman plot pspearman ggplot dcorrelation aes xrank yrank geomsmooth methodlm sefalse aes geomtext aes labellabelrank colordark gray geomsegment yinterceptspearman yendinterceptspearman aes scalecolormanual namenull valuesc blue red labelsc bquote beta intercept bquote beta slope stich together using patchwork themeaxis ppearson legendpositionc geomtext aes labellabelnum colordark gray lab title pearson themeaxis pspearman xlimc ylimc legendpositionc lab title spearman theory ranktransformation rank simply take list number replace integer rank smallest smallest smallest etc result ranktransformation rank c see figure signed rank rank according absolute size first add sign second signed rank would code signedrank function x sign x rank ab x hope offend anyone say rank easy yet need convert parametric test nonparametric counterpart one interesting implication many nonparametric test parametric parametric counterpart mean standard deviation homogeneity variance etc ranktransformed data put nonparametric quotation mark r code pearson correlation much simpler run model r yield identical p catch lm give slope even though usually much interpretable informative correlation coefficient r may still want r luckily slope becomes r x identical standard deviation use scale x make sd x sd cortest x method pearson builtin b lm x equivalent linear model x c lm scale scale x scaled var recover r result pearson productmoment correlation data x df pvalue alternative hypothesis true correlation equal percent confidence interval sample estimate cor call lm formula x residual min median max coefficient estimate std error value pr intercept x residual standard error degree freedom multiple rsquared adjusted rsquared fstatistic df pvalue call lm formula scale scale x residual min median max coefficient estimate std error value pr intercept scale x residual standard error degree freedom multiple rsquared adjusted rsquared fstatistic df pvalue ci exactly identical close r code spearman correlation note interpret slope number rank change rank x think pretty interesting number however intercept le interpretable since lie rank x impossible since x start see identical r rho p spearman correlation cortest x method spearman builtin b lm rank rank x equivalent linear model let look result spearman rank correlation rho data x pvalue alternative hypothesis true rho equal sample estimate rho call lm formula rank rank x residual min median max coefficient estimate std error value pr intercept rank x signif code residual standard error degree freedom multiple rsquared adjusted rsquared fstatistic df pvalue one mean one sample ttest wilcoxon signedrank theory linear model ttest model single number predicts qquad mathcal h word good old x last term gone since x essentially see left figure close approximately true wilcoxon signedrank test signed rank instead see right panel signedrank approximation good enough sample size larger almost perfect sample size larger ttest dataframe rnormfixed x runif fix mean sd ggplot aes x statsummary funymean geom errorbar aes ymax ymin scalecolormanual name null value c blue label c bquote beta intercept geomtext aes label round nudgex size color dark gray lab title ttest wilcoxon dataframe signedrank ggplot aes x statsummary funy mean geom errorbar aes ymax ymin color lwd scalecolormanual name null value c blue label c bquote beta intercept geomtext aes label nudgex size color dark gray lab title wilcoxon stich together using patchwork themeaxis ylim c legendposition c themeaxis ylim null legendposition c r code onesample ttest try running r code see linear model lm produce p r builtin ttest confidence interval presented output lm also identical use confint lm builtin ttest ttest equivalent linear model interceptonly b lm result one sample ttest data df pvalue alternative hypothesis true mean equal percent confidence interval sample estimate mean x call lm formula residual min median max coefficient estimate std error value pr intercept residual standard error degree freedom r code wilcoxon signedrank test addition matching pvalues lm also give u mean signed rank find informative number builtin wilcoxtest equivalent linear model b lm signedrank see model signed rank bonus course also work onesample ttest c ttest signedrank result wilcoxon signed rank test continuity correction data v pvalue alternative hypothesis true location equal call lm formula signedrank residual min median max coefficient estimate std error value pr intercept residual standard error degree freedom one sample ttest data signedrank df pvalue alternative hypothesis true mean equal percent confidence interval sample estimate mean x paired sample ttest wilcoxon matched pair theory linear model ttest model single number intercept predicts pairwise difference qquad mathcal h mean one predict becomes onesample ttest pairwise difference visualization therefore also onesample ttest risk overcomplicating simple substraction think pairwise difference slope see left panel figure represent yoffsets see right panel figure data plot n nrow start rnormfixed n dtpaired dataframe x rep c n c start start id n plot ptpaired ggplot dtpaired aes x x geomline aes group id lab title pair use patchwork put sidebyside themeaxis ptpaired themeaxis legendposition c similarly wilcoxon matched pair differ wilcoxon signedrank testing signed rank pairwise yx difference signedrank qquad mathcal h r code paired sample ttest ttest paired true builtin paired ttest b lm equivalent linear model result paired ttest data df pvalue alternative hypothesis true difference mean equal percent confidence interval sample estimate mean difference call lm formula residual min median max coefficient estimate std error value pr intercept signif code residual standard error degree freedom r code wilcoxon matched pair signedranks trick still approximation close one builtin wilcoxon matched pair wilcoxtest paired true equivalent linear model b lm signedrank bonus identical onesample ttest ong signed rank c ttest signedrank result wilcoxon signed rank test continuity correction data v pvalue alternative hypothesis true location shift equal call lm formula signedrank residual min median max coefficient estimate std error value pr intercept signif code residual standard error degree freedom one sample ttest data signedrank df pvalue alternative hypothesis true mean equal percent confidence interval sample estimate mean x large sample size n approach sign test reasonable degree approximation inaccurate flesh two mean independent ttest mannwhitney u theory linear model independent ttest model two mean predict yi xi qquad mathcal h xi indicator saying whether data point sampled one group indicator variable also called dummy coding underly lot linear model take aside see work minute mannwhitney u also known wilcoxon ranksum test two independent group signed rank time model close approximation rank x instead actual value rank yi xi qquad mathcal h equivalence like make nonparametric statistic much easier understand approximation appropriate sample size larger group virtually perfect n group theory dummy coding dummy coding understood visually indicator xaxis data point first group located x data point second group located x intercept blue line slope two mean red line delta x slope equal difference slope delta delta x delta delta difference magic even categorical difference modelled using linear model true swizz army knife data n number data point per group dataframe x rep c eachn c rnormfixed n rnormfixed n plot ggplot aes xx yy statsummary funy mean geom errorbar aes ymax ymin color something lwd geomsegment x xend yend lwd aes color geomsegment x xend yend lwd aes color scalecolormanual name null value c blue red darkblue labelsc bquote beta group mean bquote beta slope difference bquote beta beta group mean scalexdiscrete breaksc labelsc themeaxis jitter true xlim c legendposition c theory dummy coding continued feel like get dummy coding skip ahead next section elaborate explanation dummy coding data point sampled first group ie xi model simply becomes cdot word model predicts data point turn beta best predicts set data point mean data point mean group hand data point sampled second group would xi model becomes yi word add shift mean first group mean second group thus becomes mean difference group example say group year old group year old model person group cdot model person group cdot hooray work firsttimers take moment understand dummy coding need know addition multiplication get r code independent ttest reminder write x r shorthand cdot cdot x r go computing beta thus x rway writing cdot x b notice identical df p estimate get confidence interval running confint lm builtin independent ttest wide data ttest varequal true explicit underlying linear model handdummycoding ifelse group group otherwise b lm value using handmade dummy regressor note could also dummycoding model specification result c lm value group result two sample ttest data df pvalue alternative hypothesis true difference mean equal percent confidence interval sample estimate mean x mean call lm formula value residual min median max coefficient estimate std error value pr intercept signif code residual standard error degree freedom multiple rsquared adjusted rsquared fstatistic df pvalue call lm formula value group residual min median max coefficient estimate std error value pr intercept group true signif code residual standard error degree freedom multiple rsquared adjusted rsquared fstatistic df pvalue r code mannwhitney u wilcoxon mannwhitney u wilcoxtest linear model dummycoded b lm rank value compare linear model wilcoxon rank sum test continuity correction data w pvalue alternative hypothesis true location shift equal call lm formula rank value residual min median max coefficient estimate std error value pr intercept signif code residual standard error degree freedom multiple rsquared adjusted rsquared fstatistic df pvalue welch ttest identical student independent ttest except student assumes identical variance welch ttest linear model model one variance per group using nlme package see detail builtin ttest varequalfalse linear model pergroup variance b nlme gls value weight nlme varident method ml result welch two sample ttest data df pvalue alternative hypothesis true difference mean equal percent confidence interval sample estimate mean x mean generalized least square fit maximum likelihood model value data null aic bic loglik variance function structure different standard deviation per stratum formula group parameter estimate coefficient value stderror tvalue pvalue intercept correlation intr standardized residual min med max residual standard error degree freedom total residual three mean anova linear model categorical predictor simply extend everything relying heavily dummy coding make sure read section dummy coding already oneway anova kruskalwallis theory linear model model one mean group predicts qquad mathcal h xi indicator one others notice already model two group model x ie independent ttest one group ie onesample ttest easy see visualization cover group see match visualization figure n dataframe c rnormfixed n rnormfixed n rnormfixed n rnormfixed n x rep ymeans aggregate yx mean ggplot aes xx yy statsummary funymean geom errorbar aes ymax ymin colorintercepts geomsegment x xend yend lwd aes color geomsegment x xend ymeans yend ymeans lwd aes color beta geomsegment x xend ymeans yend ymeans lwd aes color beta geomsegment x xend ymeans yend ymeans lwd aes color beta scalecolormanual name null value c blue red darkblue labelsc bquote beta group mean bquote beta beta etc slopesdifferences beta bquote beta beta beta beta etc group mean themeaxis xlim c legendposition c oneway anova loglinear counterpart called goodnessoffit test return way since regress one x oneway anova multiple regression model kruskalwallis test simply oneway anova ranktransformed value rank approximation good enough data point one two group already acquainted equation ie wilcoxon signedrank test mannwhitney u test respectively example data make threelevel factor level b c oneway anova basically becomes threesample ttest manually dummy coding group three variable long format n number sample per group dataframe value c rnormfixed n rnormfixed n rnormfixed n group rep c b c n explicitly add indicatordummy variable could also done using modelmatrix group groupa rep c eachn intercept need code groupb rep c n groupc rep c n n level group intercept omnipresent see exactly one parameter added predict value group b c given row scroll end thus data point group b never affect estimate group c r code oneway anova ok let see identity dedicated anova function car anova dummycoded inyourface linear model lm compare builtin linear model car anova aov value group dedicated anova function b lm value groupb groupc data inyourface linear model result anova table type ii test response value sum sq df f value pr f group residual signif code call lm formula value groupb groupc data residual min median max coefficient estimate std error value pr intercept groupb groupc signif code residual standard error degree freedom multiple rsquared adjusted rsquared fstatistic df pvalue actually car anova aov wrapper around lm identity come surprise show dummycoded formula direct interpretation linear model one underlies shorthand notation syntax factor indeed real reason use aov car anova rather lm get nicely formatted anova table default output lm return parameter estimate well bonus see unfold r output however anova model also get parameter estimate open calling coefficient aov note use aov function computes typei sum square widely discouraged big polarized debate whether use typeii car anova default typeiii sum square set car anova let skip r code kruskalwallis kruskaltest value group builtin b lm rank value groupb groupc linear model c car anova aov rank value group model using dedicated anova function wrap lm result kruskalwallis rank sum test data value group kruskalwallis chisquared df pvalue call lm formula rank value groupb groupc data residual min median max coefficient estimate std error value pr intercept groupb groupc signif code residual standard error degree freedom multiple rsquared adjusted rsquared fstatistic df pvalue anova table type ii test response rank value sum sq df f value pr f group residual signif code twoway anova plot progress theory linear model model one mean per group main effect plus mean multiplied across factor interaction effect main effect oneway anova though context larger model interaction effect harder explain abstract even though number multiplied leave teacher keep focus equivalence switching matrix notation qquad mathcal h betai vector beta one selected indicator vector xi mathcal h shown interaction effect note intercept beta relative mean first level factor continuing dataset oneway anova let add crossing factor mood test group mood interaction anova also dummy coding factor needed linear model crossing factor mood c happy sad dummy coding moodhappy ifelse mood happy moodhappy otherwise moodsad ifelse mood sad wo nt needing happy guy group add intercept line add cross use data mean lm value mood group coefficient ggplot aes xgroup yvalue colormood geomsegment x xend mean yend col blue lwd statsummary funy mean geom errorbar aes ymax ymin lwd themeaxis xlim c theme axistextx elementtext r code twoway anova let turn actual modeling r compare dedicated anova function car anova see oneway anova linear model lm notice anova testing full factor interaction involves many parameter two case look overall model fit particular parameter result therefore use likelihoodratio test compare full twoway anova model saturated one without interaction effect anova function test even though look like cheating computing likelihood pvalues etc model already fitted legit dedicated twoway anova function car anova aov value mood group typeii normal notation multiplies add main effect b car anova aov value mood group mood group identical verbose main effect interaction testing interaction term linear model full lm value groupb groupc moodhappy groupb moodhappy groupc moodhappy full model null lm value groupb groupc moodhappy without interaction c anova null full whoop whoop f p dfs result anova table type ii test response value sum sq df f value pr f mood group mood group residual signif code analysis variance table model value groupb groupc moodhappy model value groupb groupc moodhappy groupb moodhappy groupc moodhappy resdf r df sum sq f pr f present approximate main effect model though exact calculation anova main effect involved accurate furthermore depend whether typeii typeiii sum square used inference look model summary statistic find value comparable anovaestimated main effect main effect group e lm value groupb groupc main effect mood f lm value moodhappy call lm formula value groupb groupc data residual min median max coefficient estimate std error value pr intercept groupb groupc signif code residual standard error degree freedom multiple rsquared adjusted rsquared fstatistic df pvalue call lm formula value moodhappy data residual min median max coefficient estimate std error value pr intercept moodhappy signif code residual standard error degree freedom multiple rsquared adjusted rsquared fstatistic df pvalue ancova simply anova continuous regressor added contains continuous dummycoded categorical predictor example continue oneway anova example add age called oneway ancova age xi usual dummycoded indicator variable mean first group turn anova ancovas way eg adding betan cdot age twoway anova previous section let u go ahead oneway ancova starting adding age dataset update data continuous covariate age value rnormfixed nrow sd correlated value best visualized using color group instead xposition beta still average offset data point model group using slope instead intercept word oneway anova sort onesample ttests model group oneway ancova sort pearson correlation model group yi betai cdot age linear model plot pred predict lm value age group plot pancova ggplot aes xage yvalue colorgroup shapegroup geomline aes ypred theme themeaxis pancova xlimnull ylimnull legendpositionc theme axistitleelementtext r code run oneway ancova linear model dedicated ancova function order factor matter pureaov typei variance use typeii default car anova typeiii set car anova aov value group age aov value group age predictor order matter nice dummycoded linear model full lm value groupb groupc age testing main effect age using likelihoodratio test nullage lm value groupb groupc full without age oneway anova resultage anova nullage full testing main effect groupusing likelihoodratio test nullgroup lm value age full without group pearson correlation resultgroup anova nullgroup full result anova table type ii test response value sum sq df f value pr f group age residual signif code analysis variance table model value groupb groupc model value groupb groupc age resdf r df sum sq f pr f signif code analysis variance table model value age model value groupb groupc age resdf r df sum sq f pr f proportion chisquare loglinear model recall take logarithm easily make statement proportion ie every increase x increase certain percentage turn one simplest therefore best way make count data contingency table intelligible see nice introduction chisquare test linear model goodness fit theory loglinear model model single intercept predicts log refer take look section contingency table basically twoway goodness fit example data need wide count data data long format dataframe mood c happy sad meh count c dummy coding linear model moodhappy ifelse mood happy moodsad ifelse mood sad r code goodness fit let see goodness fit loglinear equivalent oneway anova set family poisson default setting logarithmic link function family poisson linklog builtin test chisqtest count loglinear model comparing interceptonly model full glm count moodhappy moodsad data family poisson null glm count data family poisson b anova null full test rao note glm also dummy coding c glm count mood data family poisson let look result chisquared test given probability data count xsquared df pvalue analysis deviance table model count model count moodhappy moodsad resid df resid dev df deviance rao pr chi signif code note strange anova testrao merely state pvalues computed using rao score test could also jotted testchisq testlrt would yielded approximate pvalues may think cheating sneaking sort chisquare model posthoc however anova specifies pvalues calculated whereas loglinear modeling happened glm way two count large sample size n model begin approximate binomial test binomtest reasonable degree sample size larger use case raise ruleofthumb dig deeper contingency table theory loglinear model theory bit convoluted mainly write get feeling really loglinear twoway anova model let get twoway contingency table model count variable modeled using marginal proportion contingency table make sense involved go see relevant slide christoph scheepers excellent exposition model composed lot count regression coefficient ai bi yi n cdot xi cdot zj bjn cdot x ij ai xi bj zj n mess row index j column index x something sum row andor column n sum remember count variable n total count simplify notation defining proportion alphai xi betai xj bin alphaibetaj x ij ai xi bj zj n let write model yi n cdot alphai cdot betaj cdot alphaibetaj ah much prettier however still lot multiplication make hard get intuition actual number interact make much intelligible remember log cdot b log log b logarithm side get log yi log n log alphai log betaj log alphaibetaj snuggly get better grasp regression coefficient proportion independently contribute logarithm nice proportion note twoway anova model logarithm added back good old linear model interpretation regression coefficient changed use lm anymore r example data need long data need table format chisqtest contingency data long format linear model dataframe mood c happy happy meh meh sad sad sex c male female male female male female freq c table chisqtest dtable spread key mood value freq mood column select sex remove sex column asmatrix dummy coding linear model skipping mood sad gender female could also use modelmatrix freqd mood sex moodhappy ifelse mood happy moodmeh ifelse mood meh sexmale ifelse sex male r code chisquare test let show equivalence chisquare model loglinear model similar twoway anova builtin chisquare requires matrix format chisqtest dtable using glm loglinear model get identical result testing interaction term full glm freq moodhappy moodmeh sexmale moodhappy sexmale moodmeh sexmale data family poisson null glm freq moodhappy moodmeh sexmale data family poisson b anova null full test rao could also use testlrt testchisq note let glm dummy coding full glm freq mood sex family poisson data c anova full test rao note even simpler syntax using mass loglm loglinear model mass loglm freq mood sex pearson chisquared test data dtable xsquared df pvalue analysis deviance table model freq moodhappy moodmeh sexmale model freq moodhappy moodmeh sexmale moodhappy sexmale moodmeh sexmale resid df resid dev df deviance rao pr chi signif code analysis deviance table model poisson link log response freq term added sequentially first last df deviance resid df resid dev rao pr chi null mood sex mood sex signif code call mass loglm formula freq mood sex data statistic df p likelihood ratio pearson call glm formula freq mood sex family poisson data deviance residual coefficient estimate std error z value pr z intercept moodmeh moodsad sexmale moodmeh sexmale moodsad sexmale signif code dispersion parameter poisson family taken null deviance degree freedom residual deviance degree freedom aic number fisher scoring iteration unfold raw r output included summary full see raw regression coefficient loglinear model percentage increasein intercept category obtains source equivalence link source exposed bit piece puzzle including many equivalence covered teaching material course outline advanced stats book introbooks take everything glmm approach well however linear model part often stay conceptual level rather made explicit wanted make linear model tool concise way luckily beginnerfriendly material emerged lately thought taught part great success already whole program since assigned teach full course yet would spend time linear modeling data since contains student need know bullet rest course fleshing happens one group two group etc note whereas understanding sampling hypothesis testing usually first focus mainstream stats course saved later build upon student prior knowledge rather throwing lot conceptually novel material fundamental regression recall highschool cdot x b getting really good intuition slope intercept understanding written using variable name eg money profit time startingmoney suppressing coefficient x audience receptive convey idea model solution differential equation specifying change x extend multiple regression model make sure include plenty reallife example exercise point make really intuitive marvel briefly model allow u represent large datasets introduce idea ranktransforming nonmetric data try teach three assumption independence data point normality residual homoscedasticity confidencecredible interval parameter stress maximumlikelihood estimate extremely unlikely interval important briefly introduce simple regression model mention passing called pearson spearman correlation coefficient special case one two mean ttests wilcoxon mannwhitney one mean one xvalue regression model simplifies b nonmetric ranktransform apply assumption homoscedasticity apply since one x mention passing interceptonly model called onesample ttest wilcoxon signed rank test respectively two mean put two variable apart xaxis difference mean slope great accessible swizz army knife called linear modeling apply assumption check see homoscedasticity reduces equal variance group called independent ttest worked example exercise maybe adding welch test ranktransformed version called mannwhitney u paired sample violates independence assumption computing pairwise difference equivalent one intercept though called paired ttest wilcoxon matched pair special case three mean anova dummy coding category one regression coefficient level factor model intercept level multiplied binary indicator extending make data accessible linear modeling mean one variable oneway anova mean two variable twoway anova special case three proportion chisquare logarithmic transformation making multiplicative model linear using logarithm thus modeling proportion see excellent introduction equivalence loglinear model chisquare test model proportion also need introduce log odds ratio multiplicative model made summative using logarithm add dummycoding trick see model identical anova model interpretation coefficient changed proportion one variable goodness fit proportion two variable contingency table hypothesis testing hypothesis testing model comparison hypothesis testing act choosing full model one parameter fixed particular value often zero ie effectively excluded model instead estimated example fixing one two mean zero ttest study well single mean onesample ttest explains data group good job prefer model twomean model simpler hypothesis testing comparing linear model make qualitative statement truly quantitative statement covered bullet test single parameter hypothesis testing therefore le informative however testing multiple parameter time eg factor anova model comparison becomes invaluable likelihood ratio likelihood ratio swizz army knife model comparison way onesample ttest glmms bic penalizes model complexity moreover add prior got bayes factor one tool done used lrts anova limitation made simplification clarity covered assumption example another post assumption test come usual three independence data point b normally distributed residual c homoscedasticity assume null hypothesis absence effect everything work nonzero null hypothesis discussed inference including pvalues comparison crude way show equivalence underlying model since people care pvalues parameter estimate show equivalence inference another matter personally bayesian going bayesian would render le accessible wider audience also robust model would preferable fail show equivalence several named test still missing list may added later time includes sign test require large n reasonably approximated linear model friedman rmanova rank mcnemar binomialmultinomial see stuff section link equivalence think included feel free submit solution github repo doc
198,Lobsters,education,Education,Resources for Learning Graphics Programming,http://stephaniehurlburt.com/blog/2019/3/25/resources-for-learning-graphics-programming,resource learning graphic programming,http wwwslidesharenetstephaniehurlburtgraphicsprogrammingworkshop http uspsharing http http http baldurk http renderdocorgbloggraphicsinplainlanguage rygorous http patriciogv jenlowe http thebookofshaderscom http kesenrealtimerenderingcom http libcinderorgdocsguidesopenglindexhtml http openframeworkscclearning http githubcombkaradzicbgfx http processingorgtutorials http glslsandboxcom http wwwshadertoycom casualeffects http graphicscodexcom http http http ericlengyel http keithoconor http fragmentbuffercomgpuperformanceforgameartists http wwwslidesharenetstephaniehurlburtgraphicsprogrammingworkshop http wwwrealtimerenderingcom http githubcomgtrucsdktreemasterdocumentationhardwareamdsouthern http,bunch people asking resource recommend start learning graphic programming get thread really enjoy giving beginnerlevel workshop two focus graphic http wwwslidesharenetstephaniehurlburtgraphicsprogrammingworkshop http uspsharing graphic coder reading wondering host workshop written http also wrote little writeup graphic note rich helping sophia learn graphicshttp one graphic workshop one includes raytracing particle demo play withhttps love baldurk blog series graphic plain language http renderdocorgbloggraphicsinplainlanguage ready wade advanced water trip graphic pipeline rygorous greathttps online book amazing introduction shaders patriciogv jenlowe http thebookofshaderscom prepare monster list graphic resource site favorite siggraph paper http kesenrealtimerenderingcom big fan cinder openframworks cgraphics started fromhttps libcinderorgdocsguidesopenglindexhtml http openframeworkscclearning bgfx also great http githubcombkaradzicbgfx beginner friendly library processing simply lovely http processingorgtutorials shaders glslsandbox beginnerfriendly shadertoy want see crazy shit http glslsandboxcom http wwwshadertoycom ca nt go without mentioning casualeffects graphic codex excellent comprehensive graphic resource http graphicscodexcom stand advice approach learning graphic programminghttps since topic getting job mock interview get mentor talk peoplehttps mentor list full graphic programmer love helping need update morehttp people ask learning math point ericlengyel bookhttps gpu performance game artist keithoconorhttp fragmentbuffercomgpuperformanceforgameartists resource nt mention check last two slide http wwwslidesharenetstephaniehurlburtgraphicsprogrammingworkshop http wwwrealtimerenderingcom good little collection resource advanced gpu optimization documentationhttps githubcomgtrucsdktreemasterdocumentationhardwareamdsouthern destiny multithreaded rendering architecture important point vast majority graphic coder know nt know math well nt scared away nt math personi say someone adores math expecting use time ever needed basic linear algebra graphic work
199,Lobsters,education,Education,Cars are regulated for safety – why not information technology?,http://theconversation.com/cars-are-regulated-for-safety-why-not-information-technology-111415,car regulated safety information technology,field outside crisis ethic chief ethic officer code professional ethic teach ethic student scholar computing course computing ethic society million people worldwide year dropping improved road built new safety feature accident insurance outlawed drunk driving unsafe behavior flaw basic business model information want free microtargeted advertising surveillance capitalism enormously profitable blistering critique facebook cambridge analytica banned u civilized life law float sea ethic regulation benefit successfully lobbied regulation stifle innovation innovation harmed democratic society safety fuel efficiency ambitious plan information warfare consumer protection competition digital technology role artificial intelligence plain english rule disclose data breach quickly fair unbiased size big technology firm fast,computing industry grapple role society many people field outside talking crisis ethic massive rush hire chief ethic officer retool code professional ethic teach ethic student scholar computing teacher course computing ethic society rice university skeptical assumption ail technology lack ethic best fix teach technologist ethic instead view solution government action aim balancing regulation ethic market radical new idea society treat car driving consider instance ford model first massproduced massconsumed automobile debut launched automobile age time great mobility widespread death car crash kill million people worldwide year fatality rate per mile driven dropping almost since first model rolled assembly line reason improving safety record people learning drive studied ethic responsible safe driving rather taught tested rule road order obtain driving license regulation improved road built required car maker adopt new safety feature mandated accident insurance outlawed drunk driving unsafe behavior believe similar approach regulation addition ethic education technologist well market competition needed today make modern technology safe society whole flaw basic business model internet pioneer adopted philosophy information want free website owner charge reader access content instead internet company used advertising support effort led collect personal data user offer microtargeted advertising make money social scientist shoshana zuboff call surveillance capitalism business model enormously profitable unlikely internet company abandon result ethical qualm even face blistering critique facebook cambridge analytica scandal massive profit compelling real problem surveillance capitalism unethical believe completely legal country unreasonable expect forprofit corporation avoid profitable business legal view enough simply criticize internet company ethic society find surveillance business model offensive remedy ethical outrage making law regulation govern even prevent altogether course public policy divorced ethic selling human organ banned u part society find ethically repugnant profit life ban enforced law ongoing ethic debate chief justice earl warren remarked civilized life law float sea ethic regulation benefit decade informationtechnology industry successfully lobbied attempt legislate regulate arguing regulation stifle innovation course assumes innovation good become evidently clear always case internet giant innovation harmed democratic society u around world fact one purpose regulation chill certain kind innovation specifically public find wrong distasteful unhelpful advancement society regulation also encourage innovation way society deems beneficial question regulation automobile industry encouraged innovation safety fuel efficiency member congress proposed number ambitious plan tackle information warfare consumer protection competition digital technology role artificial intelligence society much simpler widely supported rule could make huge difference individual customer society whole instance federal regulator could require software term license include plain language easily understood anyone perhaps modeled longstanding plain english rule corporate financial filing u security exchange commission law rule could also require company disclose data breach quickly official public large might even spark innovation firm increase effort prevent detect network intrusion data theft another relatively easy opportunity would regulate automated judicial decision system including requiring deployed passing independent audit showing fair unbiased straightforward regulation could pave way thinking talking whether regulate size big technology firm rulemaking need start hardest problem plenty people would agree right away bottom line technology advance moving fast public policy lagged behind time public policy catch technology technology driving future society steering
200,Lobsters,education,Education,Unofficial Survey of Lobste.rs Users,https://www.surveymonkey.com/r/JJ2NTVW,unofficial survey lobster user,,gather opinion customer employee prospect use insight make better datadriven decision
201,Lobsters,education,Education,This month at SoftwareMill we've learned,https://blog.softwaremill.com/this-month-at-softwaremill-weve-learned-feb-19-ff4c27f7654d,month softwaremill learned,marcin baraniecki frontend lion pick need adam smolarek senior software engineer docker time synchronisation macos kafka cassandra setup docker maciej murawski software engineer tool helped,marcin baraniecki frontend lionpick need stumbled upon interesting case two type one superset superset mean first one contained field second one along extra well deal might ask pretty common type extend true always semantically correct use inheritance pattern notice user contains field contactdetails let also assume good reason contactdetails exist one might tempted save keystroke instead rewrite code like technically speaking code correct semantically correct user extending contactdetails something feel quite right one could declare contactdetails type pick field pick precise pick k extends keyof come typescript standard library generic type chooses property allowing create type alias nice first generic argument type pick second discriminated union property name designated type also typesafe preserve exact type property also check property name would yield compilation error typescript use pick care smolarek senior software engineerdocker time synchronisation macosthe story started simple test unstable work machine tm investigation found issue related docker cassandra deployment using testinggotcha query cassandra used timestamp generated client others using timestamps generated server lightweight transaction macos issue time keeping inside docker container case since test executed fast mattered case time deviation docker macos known issue combined cassandra order query based timestamps created interesting case debugging say leastthe solution sync time docker container time local machine want know come back check blog near future planning write detail issue fixthe two lesson remember virtualisation possibility time deviation working cassandra good idea ensure time synchronisation cluster client machine use lightweight transactionskafka cassandra setup dockerthis month also learned quickly setup cassandra kafka docker cassandra execute docker run name cassandratest p kafka little complicated requires zookeeper dockercompose put dockercomposeyamlto rescue start kafka docker composer upboth service available localhost cassandra port kafka port advantage using docker get clean kafkacassandra easily remove old container start new onemaciej murawski software engineerthis tool helped mostrecently deal failing test one client application quick investigation showed failing test present commitsthere two option go manually traverse git history commit commit check one caused problemuse git bisect search git history using binary search algorithmi chose second option due fact last known valid commit commits head branch first knew current commit let assume hash failing last valid one hash started bisecting typing git bisect initialisation command git automatically checkout middle commit valid failing one turned test failing informed git using command moved commit previous one one failing typed following command continued procedure saw commit caused problem git bisect saved lot time search git history manually entire process took five step find problem rather pessimistic linear approachmoreover recommend search commit introduced error also find specific change repository
202,Lobsters,education,Education,PyCM 1.9 : Confusion matrix analysis + parameter recommender,https://github.com/sepandhaghighi/pycm,pycm confusion matrix analysis parameter recommender,table content overview installation python python source code version latest source pypi conda easy install matlab matlab docker usage vector direct cm activation threshold load file sample weight transpose relabel position online help parameter recommender compare acceptable data type confusionmatrix compare try pycm browser issue bug report info pycmir output html csv pycm obj comp dependency reference cite pycmbib support license donate project,table content overview pycm multiclass confusion matrix library written python support input data vector direct matrix proper tool postclassification model evaluation support class overall statistic parameter pycm swissarmy knife confusion matrix targeted mainly data scientist need broad array metric predictive model accurate evaluation large variety classifier confusionmatrix block diagram open hub pypi counter github star branch master dev travis appveyor installation pycm last version support python python source code download version latest source run pip install r requirementstxt install r requirementstxt need root access run setuppy install python setuppy install need root access pypi conda easy install run easyinstall upgrade pycm need root access matlab download install matlab bit download install bit run pip install pycm install pycm need root access configure python interpreter pyversion pythonexecutablefullpath docker run docker pull sepandhaghighipycm need root access configuration usage vector pycm import yactu yactu numpyarray ypred ypred numpyarray cm confusionmatrix actualvectoryactu predictvectorypred create cm data cmclasses cmtable print cm predict actual overall statistic ci acc macro ari aunp aunu bangdiwala b bennett cba csi chisquared chisquared df conditional entropy cramer v cross entropy macro micro fnr macro fnr micro fpr macro fpr micro gwet hamming loss joint entropy kl divergence kappa kappa ci kappa prevalence kappa standard error kappa unbiased krippendorff alpha lambda lambda b mutual information nir overall acc overall cen overall j overall mcc overall mcen overall racc overall raccu pvalue ppv macro ppv micro pearson c phisquared rci rr reference entropy response entropy landis koch fair fleiss poor altman fair cicchetti poor cramer relatively strong matthew weak scott pi standard error tnr macro tnr micro tpr macro tpr micro zeroone loss class statistic class acc accuracy agf adjusted fscore agm adjusted geometric mean difference automatic manual classification auc area roc curve auci auc value interpretation good fair poor aupr area pr curve bcd braycurtis dissimilarity bm informedness bookmaker informedness cen confusion entropy dor diagnostic odds ratio none dp discriminant power none dpi discriminant power interpretation none poor poor err error rate score score harmonic mean precision sensitivity score fdr false discovery rate fn false negativemisstype error fnr miss rate false negative rate false omission rate fp false positivetype errorfalse alarm fpr fallout false positive rate g gmeasure geometric mean precision sensitivity gi gini index gm gmean geometric mean specificity sensitivity iba index balanced accuracy icsi individual classification success index information score j jaccard index l lift score mcc matthew correlation coefficient mcci matthew correlation coefficient interpretation moderate negligible negligible mcen modified confusion entropy mk markedness n condition negative nlr negative likelihood ratio nlri negative likelihood ratio interpretation good negligible negligible npv negative predictive value oc overlap coefficient ooc otsukaochiai coefficient op optimized precision p condition positive support plr positive likelihood ratio plri positive likelihood ratio interpretation poor poor poor pop population ppv precision positive predictive value pre prevalence q yule q coefficient colligation none qi yule q interpretation none moderate weak racc random accuracy raccu random accuracy unbiased tn true negativecorrect rejection tnr specificity true negative rate ton test outcome negative top test outcome positive tp true positivehit tpr sensitivity recall hit rate true positive rate youden index dind distance index sind similarity index cmprintmatrix predict actual cmprintnormalizedmatrix predict actual cmprintmatrix onevsalltrue onevsall new version predict actual direct cm pycm import confusionmatrix matrix create cm directly pycmconfusionmatrix class print predict actual overall statistic ci acc macro ari aunp aunu bangdiwala b bennett cba csi chisquared chisquared df conditional entropy cramer v cross entropy macro micro fnr macro fnr micro fpr macro fpr micro gwet hamming loss joint entropy kl divergence kappa kappa ci kappa prevalence kappa standard error kappa unbiased krippendorff alpha lambda lambda b mutual information nir overall acc overall cen overall j overall mcc overall mcen overall racc overall raccu pvalue ppv macro ppv micro pearson c phisquared rci rr reference entropy response entropy landis koch fair fleiss poor altman fair cicchetti poor cramer relatively strong matthew weak scott pi standard error tnr macro tnr micro tpr macro tpr micro zeroone loss class statistic class acc accuracy agf adjusted fscore agm adjusted geometric mean difference automatic manual classification auc area roc curve auci auc value interpretation fair fair aupr area pr curve bcd braycurtis dissimilarity bm informedness bookmaker informedness cen confusion entropy dor diagnostic odds ratio none none dp discriminant power none none dpi discriminant power interpretation none none err error rate score score harmonic mean precision sensitivity score fdr false discovery rate fn false negativemisstype error fnr miss rate false negative rate false omission rate fp false positivetype errorfalse alarm fpr fallout false positive rate g gmeasure geometric mean precision sensitivity gi gini index gm gmean geometric mean specificity sensitivity iba index balanced accuracy icsi individual classification success index information score j jaccard index l lift score mcc matthew correlation coefficient mcci matthew correlation coefficient interpretation weak weak mcen modified confusion entropy mk markedness n condition negative nlr negative likelihood ratio nlri negative likelihood ratio interpretation negligible good npv negative predictive value oc overlap coefficient ooc otsukaochiai coefficient op optimized precision p condition positive support plr positive likelihood ratio none plri positive likelihood ratio interpretation none poor pop population ppv precision positive predictive value pre prevalence q yule q coefficient colligation none none qi yule q interpretation none none racc random accuracy raccu random accuracy unbiased tn true negativecorrect rejection tnr specificity true negative rate ton test outcome negative top test outcome positive tp true positivehit tpr sensitivity recall hit rate true positive rate youden index dind distance index sind similarity index summarytrue overall statistic acc macro macro fpr macro kappa overall acc ppv macro landis koch fair tpr macro zeroone loss class statistic class acc accuracy auc area roc curve auci auc value interpretation fair fair score harmonic mean precision sensitivity fn false negativemisstype error fp false positivetype errorfalse alarm fpr fallout false positive rate n condition negative p condition positive support pop population ppv precision positive predictive value tn true negativecorrect rejection ton test outcome negative top test outcome positive tp true positivehit tpr sensitivity recall hit rate true positive rate confusionmatrix matrix transposetrue transpose matrix predict actual matrix normalizedmatrix renamed printmatrix printnormalizedmatrix version activation threshold threshold added version real value prediction information visit load file file added version order load saved confusion matrix obj format generated saveobj method information visit sample weight sampleweight added version information visit transpose transpose added version order transpose input matrix direct cm mode relabel relabel method added version order change confusionmatrix classnames cmrelabel mapping cm pycmconfusionmatrix class position position method added version order find index observation predictvector made tp tn fp fn cmposition fn fp tp tn fn fp tp tn fn fp tp tn online help onlinehelp function added version order open statistic definition web browser pycm import onlinehelp onlinehelp j onlinehelp landis koch onlinehelp list item available calling onlinehelp without argument pycm website available set altlink true new version parameter recommender option added version recommend related parameter considering characteristic input dataset suggested parameter selected according characteristic input balanceimbalance binarymulticlass suggestion categorized three main group imbalanced dataset binary classification balanced dataset multiclass classification balanced dataset recommendation list gathered according respective paper parameter capability claimed paper cmimbalance false cmbinary false cmrecommendedlist mcc tpr micro acc ppv macro bcd overall mcc hamming loss tpr macro zeroone loss err ppv micro overall acc compare version method comparing several confusion matrix introduced option combination several overall classbased benchmark benchmark evaluates performance classification algorithm good poor give numeric score score good poor performance respectively two score calculated confusion matrix overall classbased overall score average score six overall benchmark landis koch fleiss altman cicchetti cramer matthew manner classbased score average score six classbased benchmark positive likelihood ratio interpretation negative likelihood ratio interpretation discriminant power interpretation auc value interpretation matthew correlation coefficient interpretation yule q interpretation noticed one benchmark return none one class benchmark eliminated total averaging user set weight class averaging value classbased benchmark score transform weighted average user set value byclass boolean input true best confusion matrix one maximum classbased score otherwise confusion matrix obtains maximum overall classbased score reported best confusion matrix case compared object select best confusion matrix confusionmatrix matrix confusionmatrix matrix cp compare print cp best rank name classscore overallscore cpbest pycmconfusionmatrix class cpsorted cpbestname acceptable data type confusionmatrix actualvector python list numpy array stringable object predictvector python list numpy array stringable object matrix dict digit int threshold functiontype function lambda file file object sampleweight python list numpy array number transpose bool run help confusionmatrix confusionmatrix object detail compare cmdict python dict confusionmatrix object str confusionmatrix byclass bool weight python dict class weight classname float digit int run help compare compare object detail information visit try pycm browser pycm used online interactive jupyter notebook via binder service try check example document folder issue bug report fill issue describe check asap send email info pycmir please complete issue template output html csv pycm obj comp dependency master dev reference j r landis g g koch measurement observer agreement categorical data biometrics international biometric society pp w power evaluation precision recall fmeasure roc informedness markedness correlation journal machine learning technology c sammut g webb encyclopedia machine learning springer j l fleiss measuring nominal scale agreement among many raters psychological bulletin pp dg altman practical statistic medical research chapman hall k l gwet computing interrater reliability variance presence high agreement british journal mathematical statistical psychology pp w scott reliability content analysis case nominal scaling public opinion quarterly pp e bennett r alpert c goldstein communication limited response questioning public opinion quarterly pp v cicchetti guideline criterion rule thumb evaluating normed standardized assessment instrument psychology psychological assessment pp rb davy algorithm distribution linear combination random variable journal royal statistical society pp kullback r leibler information sufficiency annals mathematical statistic pp l goodman w h kruskal measure association cross classification iv simplification asymptotic variance journal american statistical association pp l goodman w h kruskal measure association cross classification iii approximate sampling theory journal american statistical association pp byrt j bishop j b carlin bias prevalence kappa journal clinical epidemiology pp shepperd bowes hall researcher bias use machine learning software defect prediction ieee transaction software engineering pp x deng q liu deng mahadevan improved method construct basic probability assignment based confusion matrix classification problem information science jm wei xj yuan qh hu sq j e w wang novel measure evaluating classifier expert system application pp kononenko j l bratko informationbased evaluation criterion classifier performance machine learning pp r delgado j núñezgonzález enhancing confusion entropy measure evaluating classifier international conference soft computing model industrial environmental application pp springer j j c b gorodkin chemistry comparing two kcategory assignment kcategory correlation coefficient computational biology chemistry pp c freitas j de carvalho j oliveira b aire r sabourin confusion matrix disagreement multiple classifier iberoamerican congress pattern recognition pp p branco l torgo r p ribeiro relevancebased evaluation metric multiclass imbalanced domain pacificasia conference knowledge discovery data mining pp springer ballabio f grisoni r j c todeschini l system multivariate comparison classification performance measure chemometrics intelligent laboratory system pp j j e cohen p measurement coefficient agreement nominal scale educational psychological measurement pp siegel nonparametric statistic behavioral science new york mcgrawhill h cramér mathematical method statistic princeton university press b w j b e b ap matthew comparison predicted observed secondary structure phage lysozyme biochimica et biophysica acta bba protein structure pp j j swets relative operating characteristic psychology technique isolating effect response bias find wide use study perception cognition american association advancement science pp p j b v n jaccard étude comparative de la distribution florale dans une portion de alpes et de jura bulletin de la vaudoise de science naturelles pp cover j thomas element information theory john wiley son e keeping introduction statistical inference courier corporation v sindhwani p bhattacharya rakshit information theoretic feature crediting multiclass support vector machine proceeding siam international conference data mining pp bekkar h k djemaa j j e alitouche evaluation measure model assessment imbalanced data set journal information engineering application w j j c youden index rating diagnostic test cancer pp brin r motwani j ullman j r tsur dynamic itemset counting implication rule market basket data proceeding acm sigmod international conference management datavol pp j j raschka mlxtend providing machine learning data science utility extension python scientific computing stack journal open source software j bray j curtis ordination upland forest community southern wisconsinecological monograph journal ecological monograph j l fleiss j cohen b j p b everitt large sample standard error kappa weighted kappa psychological bulletin p felkin comparing classification result nary binary problem quality measure data mining springer pp r ranawana v palade optimized precisiona new measure classifier performance evaluation ieee international conference evolutionary computation pp v garcía r mollineda j sánchez index balanced accuracy performance measure skewed class distribution iberian conference pattern recognition image analysis pp p branco l torgo r p j c ribeiro survey predictive modeling imbalanced domain journal acm computing survey csur p k pearson note regression inheritance case two parent proceeding royal society london p w j conover new york practical nonparametric statistic john wiley son yule g u method measuring association two attribute journal royal statistical society pp batuwita r palade v new performance measure class imbalance learning application bioinformatics problem machine learning application k lee alternative p value confidence interval effect size korean journal anesthesiology vol p raslich r j markert stutes selecting interpreting diagnostic test biochemia medica biochemia medica vol pp e hinkle w wiersma g jurs applied statistic behavioral science maratea petrosino manzo adjusted fmeasure kernel scaling imbalanced data learning information science vol pp l mosley balanced approach multiclass imbalance problem vijaymeena k kavitha survey similarity measure text mining machine learning application international journal vol pp otsuka faunal character japanese pleistocene marine mollusca evidence climate become colder pleistocene japan biogeograph soc japan vol pp tversky feature similarity psychological review vol p k boyd k h eng c page area precisionrecall curve point estimate confidence interval joint european conference machine learning knowledge discovery database pp springer j davis goadrich relationship precisionrecall roc curve proceeding international conference machine learning pp acm kuhn building predictive model r using caret package journal statistical software vol pp v labatut h cherifi accuracy measure comparison classifier arxiv preprint wallis binomial confidence interval contingency test mathematical fundamental evaluation alternative method journal quantitative linguistics vol pp altman machin bryant gardner statistic confidence confidence interval statistical guideline john wiley son j hanley b j mcneil meaning use area receiver operating characteristic roc curve radiology vol pp e b wilson probable inference law succession statistical inference journal american statistical association vol pp agresti b coull approximate better exact interval estimation binomial proportion american statistician vol pp c peirce numerical measure success prediction science pp e w steyerberg b van calster j pencina performance measure prediction model marker evaluation prediction classification revista española de cardiología vol pp j vickers e b elkin decision curve analysis novel method evaluating prediction model medical decision making vol pp knoke g w bohrnstedt p mee statistic social data analysis fe peacock publisher itasca il w rand objective criterion evaluation clustering method journal american statistical association vol pp j santos embrechts use adjusted rand index metric evaluating supervised classification international conference artificial neural network springer pp j cohen weighted kappa nominal scale agreement provision scaled disagreement partial credit psychological bulletin vol p r bakeman j gottman observing interaction introduction sequential analysis cambridge university press bangdiwala graphical test observer agreement international statistical institute meeting vol pp k bangdiwala h bryan using sa software graphical procedure observer agreement chart proceeding sa user group international conference vol pp f hayes k krippendorff answering call standard reliability measure coding data communication method measure vol pp aickin maximum likelihood estimation agreement constant predictive probability model relation cohen kappa biometrics pp cite use pycm research would appreciate citation following paper haghighi jasemi hessabi zolanvari pycm multiclass confusion matrix library python journal open source software article doi url http year month may publisher open journal volume number page author sepand haghighi masoomeh jasemi shaahin hessabi alireza zolanvari title pycm multiclass confusion matrix library python journal journal open source software download pycmbib support license donate project like project hope please support u project never going working profit need money continue
204,Lobsters,education,Education,Here be dragons,http://simonrodriguez.fr/dragon/,dragon,,basic test scene multiple graphic rendering method framework apis dragon rotating monkey ground skybox directional lighting shadow
205,Lobsters,education,Education,Google Open-Sources 10-tier demo microservice application,https://github.com/GoogleCloudPlatform/microservices-demo,google opensources demo microservice application,online boutique google us application demonstrate use technology like kubernetesgke istio stackdriver grpc opencensus easy deploy little configuration note googlers gomicroservicesdemo manifest screenshots service architecture online boutique protocol buffer description directory frontend cartservice productcatalogservice currencyservice paymentservice shippingservice emailservice checkoutservice recommendationservice adservice loadgenerator feature kubernetes gke grpc istio opencensus tracing stackdriver apm profiling tracing debugging metric context graph skaffold synthetic load generation locust installation running locally running google kubernetes engine gke using prebuilt container image prerequisite skaffold ensure version option running locally minikube docker desktop kind minikube docker desktop http kind http option running google kubernetes engine gke troubleshooting enable cloud build api troubleshooting bug option using prebuilt container image note release manifest prerequisite option deploying istioenabled gke cluster note istio gke addon following guide troubleshooting enable cloud build api cleanup conference featuring online boutique,online boutique cloudnative microservices demo application online boutique consists microservices application application webbased ecommerce app user browse item add cart purchase google us application demonstrate use technology like kubernetesgke istio stackdriver grpc opencensus application work kubernetes cluster local one well google kubernetes engine easy deploy little configuration using demo please repository show interest googlers please fill form gomicroservicesdemo using application looking old hipster shop frontend interface use manifest release screenshots home page checkout screen service architecture online boutique composed many microservices written different language talk grpc find protocol buffer description pb directory service language description frontend go expose http server serve website require signuplogin generates session id user automatically cartservice c store item user shopping cart redis retrieves productcatalogservice go provides list product json file ability search product get individual product currencyservice nodejs convert one money amount another currency us real value fetched european central bank highest qps service paymentservice nodejs charge given credit card info mock given amount return transaction id shippingservice go give shipping cost estimate based shopping cart ship item given address mock emailservice python sends user order confirmation email mock checkoutservice go retrieves user cart prepares order orchestrates payment shipping email notification recommendationservice python recommends product based given cart adservice java provides text ad based given context word loadgenerator pythonlocust continuously sends request imitating realistic user shopping flow frontend feature kubernetesgke app designed run kubernetes locally docker desktop well cloud gke grpc microservices use high volume grpc call communicate istio application work istio service mesh opencensus tracing service instrumented using opencensus trace interceptor grpchttp stackdriver apm many service instrumented profiling tracing debugging addition using istio enables feature like requestresponse metric context graph box running google cloud code path remains inactive skaffold application deployed kubernetes single command using skaffold synthetic load generation application demo come background job creates realistic usage pattern website using locust load generator installation offer following installation method running locally minute build deploy microservices image singlenode kubernetes cluster running development machine three option run kubernetes cluster locally demo running google kubernetes engine gke minute build upload deploy container image kubernetes cluster google cloud using prebuilt container image minute still need follow one step skaffold run command option use prebuilt container image available publicly instead building take long time prerequisite kubectl installed via gcloud component install kubectl local kubernetes cluster deployment tool skaffold ensure version enable gcp apis cloud monitoring tracing debugger gcloud service enable monitoringgoogleapiscom cloudtracegoogleapiscom clouddebuggergoogleapiscom option running locally recommended planning develop application giving try local cluster launch local kubernetes cluster one following tool launch minikube tested ubuntu linux please ensure local kubernetes cluster least cpu gib memory gb disk space minikube start memory disksize launch docker desktop tested macwindows go preference choose enable kubernetes set cpu least memory least gib disk tab set least gb disk space launch kind cluster run kubectl get node verify connected kubernetes docker run skaffold run first time slow take minute build deploy application need rebuild image automatically refactor code run skaffold dev command run kubectl get pod verify pod ready running access web frontend browser minikube requires run command access frontend service minikube service frontendexternal docker desktop automatically provide frontend http kind provision ip address service must run portforwarding process access frontend http kubectl portforward deploymentfrontend option running google kubernetes engine gke recommended using google cloud platform want try realistic cluster create google kubernetes engine cluster make sure kubectl pointing cluster gcloud service enable containergoogleapiscom gcloud container cluster create demo enableautoupgrade enableautoscaling kubectl get node enable google container registry gcr gcp project configure docker cli authenticate gcr gcloud service enable containerregistrygoogleapiscom gcloud auth configuredocker q root repository run skaffold run defaultrepogcrio projectid projectid gcp project id command build container image push gcr applies kubernetesmanifests deploying application kubernetes troubleshooting get space left device error google cloud shell build image google cloud build enable cloud build api run skaffold run p gcb defaultrepogcrio projectid instead find ip address application visit application browser confirm installation kubectl get service frontendexternal troubleshooting kubernetes bug fixed combined skaffold bug cause load balancer work even getting ip address seeing run kubectl get service frontendexternal oyaml kubectl apply f trigger load balancer reconfiguration option using prebuilt container image recommended want deploy app faster fewer step existing cluster note need create kubernetes cluster locally cloud follow option option reach skaffold run step option offer prebuilt public container image easy deploy deploying release manifest directly existing cluster prerequisite running kubernetes cluster either local cloud clone repository go repository directory run kubectl apply f releasekubernetesmanifestsyaml deploy app run kubectl get pod see pod ready state find ip address application visit application browser confirm installation kubectl get servicefrontendexternal option deploying istioenabled gke cluster note followed gke deployment step run skaffold delete first delete deployed create gke cluster described option use istio gke addon install istio existing gke cluster gcloud beta container cluster update demo updateaddonsistioenabled istioconfigauthmtlspermissive optional enable stackdriver tracinglogging istio stackdriver adapter following guide install automatic sidecar injection annotate default namespace label kubectl label namespace default istioinjectionenabled apply manifest istiomanifests directory required kubectl apply f istiomanifests root repository run skaffold run defaultrepogcrio projectid projectid gcp project id command build container image push gcr applies kubernetesmanifests deploying application kubernetes troubleshooting get space left device error google cloud shell build image google cloud build enable cloud build api run skaffold run p gcb defaultrepogcrio projectid instead run kubectl get pod see pod healthy ready state find ip address istio gateway ingres service visit application ingresshost kubectl n istiosystem get service istioingressgateway jsonpath statusloadbalanceringress ip echo ingresshost curl v http ingresshost cleanup deployed application skaffold run command run skaffold delete clean deployed resource deployed application kubectl apply f run kubectl delete f argument clean deployed resource conference featuring online boutique official google project
208,Lobsters,education,Education,MIT Hacker Tools: a lecture series on programmer tools,https://hacker-tools.github.io/,mit hacker tool lecture series programmer tool,hacker tool http missingcsailmitedu,hacker tool class moved http missingcsailmitedu go see newest version material site left archival purpose see lecture iap course
209,Lobsters,education,Education,How to train the Tensorflow Object Detection API with custom training data,https://jameslittle.me/blog/2019/tensorflow-object-detection,train tensorflow object detection api custom training data,senior thesis bowdoin tensorflow object detection api background tensorflow tutorial page plan tensorboard step one set object detection api large official repository protocol buffer troubleshooting step two preparing datasets file step training testing set baseline model object detection api sample configs tensorboard conclusion resource,working image object detection senior thesis bowdoin unable find tutorial describes low enough level ie code sample set tensorflow object detection api train model custom dataset aim tutorial one wish could found three month agobackgroundi know much advanced machine learning concept know even le tensorflow like heard tensorflow best machine learning framework available today want use specific use case case object detection also want spend month studying seem tensorflowspecific vocabulary conceptssimilarly like familiarity linux python programmer ml researcher probably grok article boatfinally assume tensorflow least assume run getting started block code tensorflow tutorial page run without error good go might tutorial get working coming back herethe plansince complicated process step take therefore section article broken set object detection apiget datasets training testing format tensorflow understandtrain test api datasetsfinally training step set tensorboard browserbased training visualization tool watch training job time using model different environment like mobile device unfortunately beyond scope articlestep one set object detection apithis section lead four step download object detection api code copy relevant part new subdirectory myprojectinstall compile protocol buffersinstall build python module necessary apitest api ready useyou need new directory future work step start creating one changing mkdir objdetection cd objdetectionthe object detection api part large official repository contains lot different tensorflow model want one model available download entire model repository since configuration file want git clone http githubcomtensorflowmodelsgitonce download copy file new directory mkdir myproject cp r modelsresearchobjectdetection myproject cp r modelsresearchslim myproject cp modelsresearchsetuppy myprojectthe object detection api us protocol buffer protobufs message serialization transmission framework reason entirely sure need download compile protobufs however get api workdownloading unzipping protobufs create bin directory objdetection directory wget protobufzip http unzip protobufzipat point need compile protobufs need move myproject directory run compilation script since import step make assumption location running script cd myproject binprotoc objectdetectionprotos proto pythonoutwith protobufs downloaded compiled object detection python module built create build directory myproject directorythe following command run myproject directory place cded last step export pythonpath pwd pwd slim pwd pythonpath setuppy install prefix pwd setuppy buildthese command first designate current directory subdirectory location python allowed read module write module second command install various python module necessary api current directory last command build moduleswhen done directory structure look like l bin include model myproject protobufzip readmetxt cd myproject lsbin build dist lib objectdetection objectdetectionegginfo setuppy slimfinally following command test setup get ok end good go objectdetectionbuildersmodelbuildertestpytroubleshootingyou might get ok end unfortunately troubleshoot setup tell troubleshooting finicky part encountered setting pythonpath correctly line began exportstackoverflow actually work pretty well figure thing put pythonpath issue finding meant running export pythonpathif leave project come back run export line restore pythonpath created bash file ran necessary export command would run source setuppythonpathsh whenever logged onfor completion sake also include line export ldlibrarypath ldlibrarypath script running test script work without probably relevant computer might help toostep two preparing datasetssince api using based object detection need dataset want work dataset comprised image annotation whatever format choose jpgs numbered csv file coordinate object detectingfor object image coordinate available upper left corner rectangle lower right corner rectangleyou probably two datasets one large one training one smaller one testing taking two datasets transforming tfrecord file large binary file contain complete representation entire dataseti wrote python script script read image directory read corresponding line csv file appends tfrecord image data associated coordinate data script probably look different since based dataset based yoursremember logged shell since setting python path set running scriptimport tensorflow tffrom objectdetectionutils import datasetutilflags tfappflagsflagsdefinestring outputpath outputtfrecord path output tfrecord flag flagsflagsdef createtfrecord filename coords height width filename strencode filename open filename rb myfile encodedimagedata myfileread imageformat bjpeg xmins coords width xmaxs coords width ymins coords height ymaxs coords height classestext bball class tfrecord tftrainexample featurestftrainfeatures feature imageheight height imagewidth width imagefilename datasetutilbytesfeature filename imagesourceid datasetutilbytesfeature filename imageencoded datasetutilbytesfeature encodedimagedata imageformat datasetutilbytesfeature imageformat imageobjectbboxxmin datasetutilfloatlistfeature xmins imageobjectbboxxmax datasetutilfloatlistfeature xmaxs imageobjectbboxymin datasetutilfloatlistfeature ymins imageobjectbboxymax datasetutilfloatlistfeature ymaxs imageobjectclasstext datasetutilbyteslistfeature classestext imageobjectclasslabel class return tfrecorddef main writer tfpythoniotfrecordwriter flagsoutputpath open annotationscsv fp line fpreadline line data linesplit tfrecord createtfrecord imgout jpg format data data writerwrite tfrecordserializetostring line fpreadline writerclose print done name main tfapprun make sure know script done running print call fine two completed tfrecord file one training dataset one testing dataset put somewhere hold onto laterstep training testingwhile tutorial describes train object detector api using data describing train model scratch distinction important instead starting nothing starting existing generalized object detection model continuing train based data model tensorflow world simultaneously independent entity checkpoint meaning training model long either pack call day use model wild stop bit resume training later second option although instead resuming exact training nudging existing model call baseline model towards object detection want able perform let u get result fairly quickly existing model trained high powered computer long time tweak take little bit timethe object detection api provides set baseline model allow either use box initialize new model based used ssd inception configuration mscoco dataset might want use different baseline model depending trying detect download one used run following command wget http tar zxvf testing happen time script api run testing step every training step begin trainingtesting first need configuration file configuration file framework use depends baseline model using using baseline model either write modify one given one configuration used originally come object detection api sample configs file get saved working directory mymodelconfig although actual filename totally matter marked within file line modify kept original comment wellmodel ssd numclasses change boxcoder fasterrcnnboxcoder yscale xscale heightscale widthscale matcher argmaxmatcher matchedthreshold unmatchedthreshold ignorethresholds false negativeslowerthanunmatched true forcematchforeachrow true similaritycalculator iousimilarity anchorgenerator ssdanchorgenerator numlayers minscale maxscale aspectratios aspectratios aspectratios aspectratios aspectratios reduceboxesinlowestlayer true imageresizer fixedshaperesizer height width boxpredictor convolutionalboxpredictor mindepth maxdepth numlayersbeforepredictor usedropout false dropoutkeepprobability kernelsize boxcodesize applysigmoidtoscores false convhyperparams activation regularizer weight initializer truncatednormalinitializer stddev mean featureextractor type mindepth depthmultiplier convhyperparams activation regularizer weight initializer truncatednormalinitializer stddev mean batchnorm train true scale true center true decay epsilon overridebasefeatureextractorhyperparams true loss classificationloss weightedsigmoid localizationloss hardexampleminer numhardexamples iouthreshold losstype classification maxnegativesperpositive minnegativesperimage classificationweight localizationweight normalizelossbynummatches true postprocessing batchnonmaxsuppression scorethreshold iouthreshold maxdetectionsperclass maxtotaldetections scoreconverter sigmoid trainconfig batchsize optimizer rmspropoptimizer learningrate exponentialdecaylearningrate initiallearningrate decaysteps decayfactor momentumoptimizervalue decay epsilon finetunecheckpoint yourbaselinemodelmodelckpt change point baseline model file downloaded fromdetectioncheckpoint true note line limit training process step empirically found sufficient enough train pet dataset effectively bypass learning rate schedule learning rate never decay remove line train indefinitely numsteps dataaugmentationoptions randomhorizontalflip dataaugmentationoptions ssdrandomcrop traininputreader tfrecordinputreader inputpath yourtrainingtfrecordtrainingtfrecord labelmappath yourlabelmaplabelmaptxt evalconfig numexamples note line limit evaluation process evaluation remove line evaluate indefinitely maxevals evalinputreader tfrecordinputreader inputpath yourtestingtfrecordtestingtfrecord labelmappath samelabelmapasabovelabelmaptxt shuffle false numreaders finally ready run detector put following file called runsh pipelineconfigpath yourconfigconfig modeldir objectdetectionmodeldir objectdetectionmodelmainpy pipelineconfigpath pipelineconfigpath modeldir modeldir numtrainsteps numtrainsteps alsologtostderrand finally run script runsh get training job startedtensorboardtensorboard program come tensorflow start local web server host dashboard show progress training testing job set tensorboard watch model directory objectdetectionmodeldir describe progress training jobin new terminal disturb training job navigate back myproject directory reconfigure python path run tensorboard logdirobjectdetectionmodeldirwith running navigate http watch graph go next hour daysconclusioni wrote find tutorial online went step hope end helpful next person want embark journeyi also sure got thing wrong reach error work correct itother resourcesi clearly looked lot way people unfortunately due nature online research impossible list everything encountered internet helped along way however incomplete list source implied list apology forgot
210,Lobsters,education,Education,Coding the Matrix: Linear Algebra through Computer Science Applications,http://academictorrents.com/details/54cd86f3038dfd446b037891406ba4e0b1200d5a,coding matrix linear algebra computer science application,,assignmentsreadmetxt lecturestutscoding matrix linear algebra computer science application submit matrix linear algebra computer science application course introduction part matrix linear algebra computer science application course introduction part matrix linear algebra computer science application function function preliminary matrix linear algebra computer science application field introduction complex number matrix linear algebra computer science application field playing c matrix linear algebra computer science application field playing gf matrix linear algebra computer science application vector vector matrix linear algebra computer science application vector vector addition scalarvector multiplication matrix linear algebra computer science application vector dictionarybased representation vector matrix linear algebra computer science application vector vector gf matrix linear algebra computer science application vector dotproduct matrix linear algebra computer science application vector dotproduct vector gf matrix linear algebra computer science application vector solving triangular system linear equation matrix linear algebra computer science application vector space linear matrix linear algebra computer science application vector space matrix linear algebra computer science application vector space geometry set matrix linear algebra computer science application vector space vector matrix linear algebra computer science application vector space checksum matrix linear algebra computer science application matrix matrix linear algebra computer science application matrix matrixvector vectormatrix matrix linear algebra computer science application matrix matrixvector multiplication term matrix linear algebra computer science application matrix null matrix linear algebra computer science application matrix errorcorrecting matrix linear algebra computer science application matrix matrix matrix linear algebra computer science application matrix linear matrix linear algebra computer science application matrix matrixmatrix matrix linear algebra computer science application matrix matrixmatrix multiplication function matrix linear algebra computer science application matrix matrix matrix linear algebra computer science application basis coordinate matrix linear algebra computer science application basis lossy matrix linear algebra computer science application basis exchange matrix linear algebra computer science application basis algorithm finding set matrix linear algebra computer science application basis minimum spanning matrix linear algebra computer science application basis linear matrix linear algebra computer science application basis matrix linear algebra computer science application basis unique matrix linear algebra computer science application basis change matrix linear algebra computer science application basis perspective matrix linear algebra computer science application basis perspective matrix linear algebra computer science application dimension size matrix linear algebra computer science application dimension dimension rank matrix linear algebra computer science application dimension dimension rank matrix linear algebra computer science application dimension direct matrix linear algebra computer science application dimension dimension linear function matrix linear algebra computer science application dimension dimension linear function matrix linear algebra computer science application dimension two representation vector matrix linear algebra computer science application dimension threshold secret matrix linear algebra computer science application gaussian elimination echelon matrix linear algebra computer science application gaussian elimination transforming matrix echelon matrix linear algebra computer science application gaussian elimination using gaussian elimination solve system matrix linear algebra computer science application gaussian elimination factoring matrix linear algebra computer science application inner product inner matrix linear algebra computer science application inner product matrix linear algebra computer science application orthogonalization finding closest point matrix linear algebra computer science application orthogonalization projection orthogonal multiple matrix linear algebra computer science application orthogonalization building orthogonal set matrix linear algebra computer science application orthogonalization computing matrix linear algebra computer science application orthogonalization orthogonal matrix linear algebra computer science application orthogonalization two way find basis null matrix linear algebra computer science application orthogonalization qr matrix linear algebra computer science application orthogonalization using qr factorization solve matrix equation ax matrix linear algebra computer science application orthogonalization application least
213,Lobsters,education,Education,Resources for Teaching with Formal Methods,https://avigad.github.io/formal_methods_in_education/,resource teaching formal method,big proof recording avigad cmuedu markdown software foundation certified programming dependent type formal reasoning program concrete semantics type program proof formal model java virtual machine verified functional programming agda formal verification applied logic computer scientist summer school formal technique type semantics programming language verified functional data structure software verification computer proof advanced software verification computer proof dafny tutorial verification corner logical verification logic modelling theorem provers learning tool theory computation logic proof proof designer stack project computer aided assessment mathematics introduction aux mathématiques formalisées discrete math coq mathematics lean hyperproof type theory coq automated reasoning little engine proof formal mathematics proof assistant apros project theorem proving lean,page collect resource anyone considering use formal method formal tool classroom effort grew discussion held big proof program isaac newton institute cambridge uk recording discussion available many ax along one organize list level expertise intended audience expert public large disciplinary orientation computer science mathematics mathematical logic etc chosen classify material subject matter would like add something send text would like appear avigad cmuedu preferrably already formatted markdown entry provide link relevant resource turn make use formal tool theorem provers sat solver model checker etc way benjamin pierce al software foundation book designing reliable software using coq adam chlipala certified programming dependent type book software engineering using coq adam chlipala formal reasoning program early stage book formal reasoning program correctness using coq tobias nipkow gerwin klein concrete semantics book semantics programming language using isabelle peter dybjer type program proof course type system programming language design using agda j strother moore formal model java virtual machine course based aaron stump verified functional programming agda book writing verified program agda jacques fleuriot formal verification course formal verification using model checking sat smt mauricio ayalarincón flávio l c de moura applied logic computer scientist book hardware software verification using pvs summer school formal technique annual summer school emphasizing handson use philip wadler type semantics programming language course based coq tobias nipkow peter lammich verified functional data structure course design analysis data structure functional programming language using isabelle resource available yves bertot software verification computer proof introductory course functional programming program verification using coq yves bertot cyril cohen laurence rideau enrico tassi advanced software verification computer proof course describing mathematical concept algorithm using coq mathematlcal component library dafny tutorial online tutorial dafny program verification system rustan leino colleague verification corner video topic verification based dafny jasmin blanchette alexander bentkamp logical verification introduction lean application computer science mathematics jasmin blanchette robert lewis logic modelling course based lean maria knobelsdorf christiane frede sebastian böhne christoph kreitz theorem provers learning tool theory computation paper using coq teach proof c jeremy avigad robert lewis floris van doorn logic proof introduction mathematical proof symbolic logic exercise lean daniel velleman proof designer java applet designed help student write proof stack project system designing sophisticated computeraided assessment mathematics chris sangwin computer aided assessment mathematics book use computer aided assessment patrick massot introduction aux mathématiques formalisées introduction formalized mathematics using lean benjamin c pierce et al discrete math coq textbook jeremy avigad kevin buzzard robert lewis patrick massot mathematics lean interactive textbook jon barwise john etchemendy hyperproof introduction logic proof diagrammatic reasoning femke van raamsdonk hermann guevers et al type theory coq introduction logic type theory metatheory using coq jacques fleuriot automated reasoning course automated reasoning using isabelle n shankar l de moura h rue tiwari little engine proof course automated deduction decision procedure josef urban chad e brown ondřej kunčar formal mathematics proof assistant course using mizar isabelle coq apros project includes webbased introductory course logic proof jeremy avigad soonho kong leonardo de moura theorem proving lean introduction dependent type theory lean
214,Lobsters,education,Education,The History (and Future) of Asynchronous JavaScript,https://developer.okta.com/blog/2019/01/16/history-and-future-of-async-javascript,history future asynchronous javascript,asynchronous javascript simple asynchronous javascript basic manner callback old way promise newer way asyncawait newest way learn javascript application security twitter facebook linkedin youtube,everyone know javascript eating world problem lot developer responsible building software javascript without particularly deep knowledge language easy learn basic productive newer programmer tendency misuse javascript asynchronous javascript particularly misunderstood post show common way make asynchronous javascript call use one lot idiosyncrasy using javascript browser purpose post discussing javascript server using node disclaimer example follow contrived example illustrate concept likely appropriate way thing demonstrate concept asynchronous javascript important first understand asynchronous javascript would want make asynchronous call asynchronous call refer call moved javascript execution stack work elsewhere call api node case call c api node work done function put event queue javascript execution stack empty event loop pull function queue push onto execution stack simple asynchronous javascript simplest example asynchronous javascript settimeout function settimeout function callaftertimeout consolelog least five second passed settimeout function take function call timeout elapsed number millisecond wait calling function make call settimeout call c api get moved execution stack timeout completes callback get pushed queue execution stack empty event loop pull callback queue add execution stack asynchronous code work basic manner callback old way settimeout function first parameter function call timeout finish simple example callback function passed known callback function work done asynchronously timer technique writing asynchronous javascript callback first part every javascript developer life even realize node pretty much built callback express node popular web server engine us callback everything us callback common callback function last parameter case making database request mongodb const mongoclient require mongodb mongoclient mongoclientconnect mongodb err db err throw err consolelog connected mongodb dbclose also show another common pattern callback first parameter callback function error result allows callback check error result first go ahead throw handle error trying read result probably convention industry standardized nothing enforcing convention library follow convention problem another drawback callback phenomenon known callback hell arrow deathdespair happens want sequence asynchronous thing result previous asynchronous call someasyncthing params err re err throw err dosomethingasyncwithresult re throw someasyncwiththatresult throw anothercallwithresult throw return see quickly get hand even went two callback deep make code hard read hard reason promise newer way promise introduced fix lot problem using callback asynchronous operation promise promise let calling code know asynchronous call finished dosomethingasync params result consolelog result catch err consoleerror err case promise returned immediately dosomethingasync function promise act sort proxy let execution context know complete promise completes successfully said resolve function called result promise error execution promise rejected catch called important remember catch also return promise mean chained dosomethingasync params result consolelog result promise return somenewresult result consolelog result promise catch err consoleerror err help alleviate callback hell chaining promise resolution making code readable easier reason end reading like sentence create promise well easy way take library us callback get return promise instead const mongoclient require mongodb mongoclient const database function connecttomongo url return new promise resolve reject mongoclientconnect url err db err reject err resolve db connecttomongo mongodb db database db return dbquerythedatabase re dosometingwithresults re databaseclose catch err consoleerror err wrapped mongoclientconnect function return promise callback processed callback called either resolve reject promise call connecttomongo function immediately get promise back chain function call onto promise return promise first promise resolve database query result error promise rejected handle catch function used promise still bit difficult reason mostly understand promise result chaining resolution see put database connection variable handle later rather trying pas along chain asyncawait newest way async keyword javascript add whole new level cool promise await keyword make code much readable await keyword let code end reading like traditional synchronous javascript cool const value await someasyncfunction consolelog value important thing note async await keywords first code running synchronously await keyword syntactic sugar make invisible function around consolelog value using value awaited statement second use await keyword must inside function marked async keyword const mongoclient require mongodb mongoclient function connecttomongo url return new promise resolve reject mongoclientconnect url err db err reject err resolve db async function getallusers try const db await connecttomongo mongodb const user await dbcollectionusersfind dbclose return user catch err consoleerror err return errmessage case user db invisibly wrapped function handle resolution promise trycatch block wrap entire promise handle promise rejection read really well easy follow basically thing standard promise chained catch function real problem approach remembering add async keyword like linter let know learn javascript application security want learn asynchronous javascript javascript general check useful resource usual comment question suggestion leave comment forget follow u twitter facebook linkedin watch kickass video youtube
215,Lobsters,education,Education,An Open Letter to the Mathematical Community,https://www.mcsweeneys.net/articles/an-open-letter-to-the-mathematical-community,open letter mathematical community,,dear colleague escaping widespread dissatisfaction within modern academia neoliberal upper management bloated administration recklessly expanded undergraduate program shrinking departmental budget much optimistic joining rank look forward bleak job prospect excessive teaching load writing stupefying grant proposal discipline adjust changing landscape within sphere pure mathematics oldest successful humanity intellectual endeavor believe best chance preserving integrity dignity tradition return pythagorean root become cult let u away job market mathjobscom reference letter let u stop pretending understand respective subfields let u abandon fuckugly brutalist travesty call department building leave shill applied math let u seclude mountain cave daub mysterious equation blood across rockfaces ward outsider let u embrace impenetrable mathematical text sacred requiring divinely distributed revelation imagining kind gnostic mystery religion rather force horde undergraduate sit basic calculus deny precious knowledge unwilling undergo yearlong induction process involving physical psychological trial menial servitude restrictive vegan diet pragmatic perspective would also good opportunity ensure hopeful novice understand fucking fraction work convinced current system dulled understanding value offer instruction modern mathematical technique foundation modern science medicine technology literal rather metaphorical high priest temple withholding insight able reassert intrinsic worth knowledge smaller class size would great time away publish perish replace publish perish nothing blasphemous writing textbook anyone go buy commit crime face expulsion reprisal cv list prestigious journal published rather reputation rumor arcane wisdom write anything code practice exam gradegrubbing final mark scaling thing past whatever trial devised replace current examination student whisper go future employer ask see transcript rather strange scar tattoo borne survived next time sit write grant proposal spare committee word explaining disseminate communicate result peer wider public instead give description elaborate ceremony revelation ritual involving headdress body paint powerful hallucinogen animal sacrifice imagine vision met enthusiasm colleague fear many u become accustomed trapping profession office job title faculty dinner respectable salary travel reimbursement proposal make u richer financially least believe return muchneeded vitality practice gnosticism promised ultimate revelation pursued offer ultimate guarded secret little u really know best luck job market right daniel j woodhouse
216,Lobsters,education,Education,How to teach Git,https://rachelcarmena.github.io/2018/12/12/how-to-teach-git.html,teach git,teach git problem found idea distributed version control system cloning repository making change working directory tracked untracked updating remote repository working directory staging area staging area local repository local repository remote repository modified staged committed working directory staging area working directory staging area updating development environment fetching remote repository local repository pulling remote repository local repository working directory next step dirty working directory friendly reminder reading received feedback marc villagrasa git challenge comment hacker news comment reddit idea teach git pro git book stuart maxwell ucryptoz bonus nico riedmann learn git concept command,teach git published december last updated june problem found professional experience involved participating crossfunctional area knew colleague way working remember company started using git week joined found postits screen step first add second commit third push know reason step knew follow order get trouble however problem happened frequently decided prepare workshop git idea love map mind write mind map wellknown type diagram talking frame structure kind graphical representation mind example started learning addition imagining dice mind prepared drawing necessary able see drawing understand post include explanation awareness accessibility furthermore case important teach vocabulary otherwise understand message git drawing good way introduce vocabulary distributed version control system general drawing contains area distributed follows development environment working directory staging area index local repository server time explain benefit distributed version control system cloning repository cloning repository data remote repository travel area working directory local repository making change working directory type file working directory tracked file git know untracked file still added git know updating remote repository change ready working directory must added staging area set change single purpose staging area time create commit message purpose local repository one several commits local repository ready shared rest world must pushed remote repository time talk different state file development environment modified staged committed furthermore explain show change file working directory git diff show change file staging area git diff staged file changed working directory added staging area etc updating development environment fetching executing git fetch data remote repository travel local repository pulling executing git pull data remote repository travel area local repository fetch working directory merge take care commit history consider use git pull rebase instead fetch merge consists fetch rebase local commits replayed see known diamond shape commit history next step add another area development environment explain stashing dirty working directory people internalize concept easier go step branch commit history rebasing etc built solid basis friendly reminder worked version control system visual sourcesafe tfs subversion humble experience lack knowledge harmful old tool new one focus choosing tool also mastering reading received feedback friend marc villagrasa reminds found useful solve git challenge share solution among colleague resource comment hacker news reading comment reddit think accurate title post would idea teach git idea appeared head learning git year ago pro git book post complete guide starting point trainer sure resource useful well thanks thanks stuart maxwell shared post hacker news ucryptoz shared reddit resource comment twitter related thing bonus article inspired nico riedmann create awesome post learn git concept command
217,Lobsters,education,Education,Make a README - a guide to writing good READMEs,https://www.makeareadme.com/,make readme guide writing good readmes,suggestion good readme another form documentation name description badge shield visuals ttygif asciinema installation yarn nuget homebrew usage support roadmap contributing lint code run test selenium author acknowledgment license licensed project status,suggestion good readme every project different consider section apply section used template suggestion open source project also keep mind readme long detailed long better short think readme long consider utilizing another form documentation rather cutting information name choose selfexplaining name project description let people know project specifically provide context add link reference visitor might unfamiliar list feature background subsection also added alternative project good place list differentiating factor badge readmes may see small image convey metadata whether test passing project use shield add readme many service also instruction adding badge visuals depending making good idea include screenshots even video frequently see gifs rather actual video tool like ttygif help check asciinema sophisticated method installation within particular ecosystem may common way installing thing using yarn nuget homebrew however consider possibility whoever reading readme novice would like guidance listing specific step help remove ambiguity get people using project quickly possible run specific context like particular programming language version operating system dependency installed manually also add requirement subsection usage use example liberally show expected output helpful inline smallest example usage demonstrate providing link sophisticated example long reasonably include readme support tell people go help combination issue tracker chat room email address etc roadmap idea release future good idea list readme contributing state open contribution requirement accepting people want make change project helpful documentation get started perhaps script run environment variable need set make step explicit instruction could also useful future self also document command lint code run test step help ensure high code quality reduce likelihood change inadvertently break something instruction running test especially helpful requires external setup starting selenium server testing browser author acknowledgment show appreciation contributed project license open source project say licensed project status run energy time project put note top readme saying development slowed stopped completely someone may choose fork project volunteer step maintainer owner allowing project keep going also make explicit request maintainer
218,Lobsters,education,Education,Roadmap to becoming a web developer in 2019,https://github.com/kamranahmedse/developer-roadmap,roadmap becoming web developer,subscribe channel purpose roadmaps note beginner release soon introduction frontend roadmap backend roadmap devops roadmap wrap roadmapsh contribution contribution doc license license file,roadmap becoming web developer find set chart demonstrating path take technology would want adopt order become frontend backend devops made chart old professor mine wanted something share college student give perspective sharing help community special announcement youtube channel plan covering roadmaps put content theresubscribe channel purpose roadmaps purpose roadmaps give idea landscape guide confused learn next encourage pick hip trendy grow understanding one tool would better suited case remember hip trendy never mean best suited job note beginner roadmaps cover everything learn path listed nt feel overwhelmed nt need learn beginning getting started working beginner version release soon done release backend devops roadmaps think improved way please suggest introduction frontend roadmap backend roadmap devops roadmap wrap think roadmaps improved feel free discus issue also continue improve might want watch repository subscribe roadmapsh revisit contribution look contribution doc update roadmaps open pull request improvement discus idea issue spread word reach feedback license look license file detail
219,Lobsters,education,Education,MIT Deep Learning Course Repository,https://deeplearning.mit.edu/,mit deep learning course repository,deep learning deep learning selfdriving car deep learning deep learning,page collection lecture deep learning deep reinforcement learning autonomous vehicle ai given mit stay tuned video deep learning andrew trask openmined university oxford vladimir vapnik columbia university deep learning selfdriving car lex fridman research scientist mit drago anguelov principal scientist waymo oliver cameron ceo voyage karl iagnemma president aptiv autonomous mobility lex fridman research scientist mit sacha arnoud director engineering waymo emilio frazzoli cto nutonomy sterling anderson cofounder aurora chris gerdes professor stanford sertac karaman professor mit deep learning deep learning
220,Lobsters,education,Education,Enginering Security,https://www.cs.auckland.ac.nz/~pgut001/pubs/book.pdf,enginering security,,obj endobj obj endobj obj procset pdftextimagebimagecimagei mediabox content rgroup tabssstructparents endobj obj stream ѽ w idq lm u k ja h w endstream endobj obj f rxyz structparent endobj obj procset pdftextimagebimagecimagei annots r r r r r r r r r r r r r r r r r r r r r r r r r r r r r r r r r r r r r r r r r r r r r r r r r r r r r r mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei annots r r r r r r r r r r r r r r r r r r r r r r r r r r r r r r r r r r r r r r r r r r r r r r r r r r r r mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei annots r r r r r r r r r r r r r r mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei annots r r r r r mediabox content rgroup tabssstructparents endobj obj endobj obj endobj obj endobj obj endobj obj f rxyz structparent endobj obj procset pdftextimagebimagecimagei mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei annots r r r r mediabox content rgroup tabssstructparents endobj obj f rxyz structparent endobj obj endobj obj endobj obj f rxyz structparent endobj obj xobject procset pdftextimagebimagecimagei annots r mediabox content rgroup tabssstructparents endobj obj f rxyz structparent endobj obj procset pdftextimagebimagecimagei mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei annots r r r r r mediabox content rgroup tabssstructparents endobj obj xobject procset pdftextimagebimagecimagei annots r mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei annots r r mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei annots r r r mediabox content rgroup tabssstructparents endobj obj f rxyz structparent endobj obj procset pdftextimagebimagecimagei annots r r mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei annots r mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei annots r r mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei annots r r r r r r r mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei annots r r mediabox content rgroup tabssstructparents endobj obj f rxyz structparent endobj obj procset pdftextimagebimagecimagei annots r r mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei annots r r r r mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei annots r r r r r r r mediabox content rgroup tabssstructparents endobj obj xobject procset pdftextimagebimagecimagei annots r r r mediabox content rgroup tabssstructparents endobj obj f rxyz structparent endobj obj xobject procset pdftextimagebimagecimagei annots r r r mediabox content rgroup tabssstructparents endobj obj xobject procset pdftextimagebimagecimagei annots r r r r r mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei annots r r mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei annots r mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei annots r r r mediabox content rgroup tabssstructparents endobj obj xobject procset pdftextimagebimagecimagei annots r r mediabox content rgroup tabssstructparents endobj obj f rxyz structparent endobj obj xobject procset pdftextimagebimagecimagei annots r r r r mediabox content rgroup tabssstructparents endobj obj xobject procset pdftextimagebimagecimagei annots r r r r mediabox content rgroup tabssstructparents endobj obj xobject procset pdftextimagebimagecimagei annots r r r r mediabox content rgroup tabssstructparents endobj obj f rxyz structparent endobj obj xobject procset pdftextimagebimagecimagei annots r r r mediabox content rgroup tabssstructparents endobj obj xobject procset pdftextimagebimagecimagei annots r r r r r mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei annots r mediabox content rgroup tabssstructparents endobj obj xobject procset pdftextimagebimagecimagei annots r r r r r r mediabox content rgroup tabssstructparents endobj obj f rxyz structparent endobj obj xobject procset pdftextimagebimagecimagei annots r mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei annots r r r r r r r r mediabox content rgroup tabssstructparents endobj obj xobject procset pdftextimagebimagecimagei annots r r r r mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei annots r r r r mediabox content rgroup tabssstructparents endobj obj xobject procset pdftextimagebimagecimagei annots r r r mediabox content rgroup tabssstructparents endobj obj f rxyz structparent endobj obj xobject procset pdftextimagebimagecimagei mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei annots r r r r r r mediabox content rgroup tabssstructparents endobj obj xobject procset pdftextimagebimagecimagei annots r r r mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei annots r r r r mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei annots r r mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei annots r r r r r r mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei annots r r r r r r r mediabox content rgroup tabssstructparents endobj obj xobject procset pdftextimagebimagecimagei annots r r mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei annots r r r r r r mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei annots r mediabox content rgroup tabssstructparents endobj obj xobject procset pdftextimagebimagecimagei annots r mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei annots r r r r r r mediabox content rgroup tabssstructparents endobj obj f rxyz structparent endobj obj xobject procset pdftextimagebimagecimagei mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei annots r r mediabox content rgroup tabssstructparents endobj obj xobject procset pdftextimagebimagecimagei annots r mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei annots r r r r r r r r mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei annots r r r r mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei annots r mediabox content rgroup tabssstructparents endobj obj xobject procset pdftextimagebimagecimagei annots r r r r mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei annots r r r r r mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei annots r r mediabox content rgroup tabssstructparents endobj obj f rxyz structparent endobj obj procset pdftextimagebimagecimagei annots r r r r mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei annots r r r r r r r mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei annots r r r mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei annots r mediabox content rgroup tabssstructparents endobj obj xobject procset pdftextimagebimagecimagei annots r r r r mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei annots r r r r r mediabox content rgroup tabssstructparents endobj obj xobject procset pdftextimagebimagecimagei annots r r r r mediabox content rgroup tabssstructparents endobj obj xobject procset pdftextimagebimagecimagei annots r r r mediabox content rgroup tabssstructparents endobj obj xobject procset pdftextimagebimagecimagei annots r r mediabox content rgroup tabssstructparents endobj obj xobject procset pdftextimagebimagecimagei annots r mediabox content rgroup tabssstructparents endobj obj xobject procset pdftextimagebimagecimagei annots r r r r r r r mediabox content rgroup tabssstructparents endobj obj f rxyz structparent endobj obj procset pdftextimagebimagecimagei annots r r r r r r r mediabox content rgroup tabssstructparents endobj obj xobject procset pdftextimagebimagecimagei annots r r mediabox content rgroup tabssstructparents endobj obj f rxyz structparent endobj obj xobject procset pdftextimagebimagecimagei annots r r r r r r r mediabox content rgroup tabssstructparents endobj obj xobject procset pdftextimagebimagecimagei annots r r r mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei annots r r r r r r r r r r mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei annots r r mediabox content rgroup tabssstructparents endobj obj xobject procset pdftextimagebimagecimagei annots r mediabox content rgroup tabssstructparents endobj obj xobject procset pdftextimagebimagecimagei annots r r r r r mediabox content rgroup tabssstructparents endobj obj xobject procset pdftextimagebimagecimagei annots r r r r r r mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei annots r r r r r r r r r r r r r r mediabox content rgroup tabssstructparents endobj obj f rxyz structparent endobj obj xobject procset pdftextimagebimagecimagei annots r r r r r r r r r r mediabox content rgroup tabssstructparents endobj obj xobject procset pdftextimagebimagecimagei annots r r r r r r r mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei annots r r r r mediabox content rgroup tabssstructparents endobj obj xobject procset pdftextimagebimagecimagei annots r r r r r mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei annots r r r mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei annots r r r r mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei annots r r r r r r r r r r mediabox content rgroup tabssstructparents endobj obj f rxyz structparent endobj obj procset pdftextimagebimagecimagei annots r mediabox content rgroup tabssstructparents endobj obj xobject procset pdftextimagebimagecimagei annots r r r mediabox content rgroup tabssstructparents endobj obj xobject procset pdftextimagebimagecimagei annots r r mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei annots r r r r r r mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei annots r r mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei annots r r mediabox content rgroup tabssstructparents endobj obj f rxyz structparent endobj obj procset pdftextimagebimagecimagei mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei mediabox content rgroup tabssstructparents endobj obj f rxyz structparent endobj obj f rxyz structparent endobj obj xobject procset pdftextimagebimagecimagei annots r r r mediabox content rgroup tabssstructparents endobj obj xobject procset pdftextimagebimagecimagei annots r r r mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei mediabox content rgroup tabssstructparents endobj obj f rxyz structparent endobj obj procset pdftextimagebimagecimagei mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei annots r mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei annots r mediabox content rgroup tabssstructparents endobj obj f rxyz structparent endobj obj procset pdftextimagebimagecimagei annots r r mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei mediabox content rgroup tabssstructparents endobj obj f rxyz structparent endobj obj procset pdftextimagebimagecimagei annots r mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei annots r mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei mediabox content rgroup tabssstructparents endobj obj f rxyz structparent endobj obj procset pdftextimagebimagecimagei annots r r mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei mediabox content rgroup tabssstructparents endobj obj xobject procset pdftextimagebimagecimagei annots r r mediabox content rgroup tabssstructparents endobj obj xobject procset pdftextimagebimagecimagei annots r r mediabox content rgroup tabssstructparents endobj obj xobject procset pdftextimagebimagecimagei annots r r mediabox content rgroup tabssstructparents endobj obj xobject procset pdftextimagebimagecimagei annots r r mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei annots r r r r r mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei annots r mediabox content rgroup tabssstructparents endobj obj f rxyz structparent endobj obj procset pdftextimagebimagecimagei annots r r r r mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei annots r r r r r r mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei annots r r r r mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei annots r r r r r r mediabox content rgroup tabssstructparents endobj obj f rxyz structparent endobj obj procset pdftextimagebimagecimagei annots r r r mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei annots r r mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei annots r r mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei mediabox content rgroup tabssstructparents endobj obj f rxyz structparent endobj obj procset pdftextimagebimagecimagei mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei annots r mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei annots r r r r r r mediabox content rgroup tabssstructparents endobj obj f rxyz structparent endobj obj xobject procset pdftextimagebimagecimagei annots r mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei annots r mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei mediabox content rgroup tabssstructparents endobj obj f rxyz structparent endobj obj procset pdftextimagebimagecimagei mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei annots r mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei mediabox content rgroup tabssstructparents endobj obj f rxyz structparent endobj obj procset pdftextimagebimagecimagei mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei annots r mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei annots r r r r r mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei annots r r mediabox content rgroup tabssstructparents endobj obj f rxyz structparent endobj obj procset pdftextimagebimagecimagei annots r r r mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei annots r r mediabox content rgroup tabssstructparents endobj obj f rxyz structparent endobj obj procset pdftextimagebimagecimagei annots r r r r r r mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei annots r r r r r mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei annots r r r r r mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei annots r r r mediabox content rgroup tabssstructparents endobj obj xobject procset pdftextimagebimagecimagei annots r mediabox content rgroup tabssstructparents endobj obj xobject procset pdftextimagebimagecimagei annots r r r r r r r mediabox content rgroup tabssstructparents endobj obj xobject procset pdftextimagebimagecimagei annots r r r r mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei annots r r mediabox content rgroup tabssstructparents endobj obj f rxyz structparent endobj obj xobject procset pdftextimagebimagecimagei annots r mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei annots r r r r r mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei annots r r r r r r mediabox content rgroup tabssstructparents endobj obj f rxyz structparent endobj obj xobject procset pdftextimagebimagecimagei annots r r mediabox content rgroup tabssstructparents endobj obj xobject procset pdftextimagebimagecimagei annots r r r r r r r mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei annots r r r mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei annots r r r r r mediabox content rgroup tabssstructparents endobj obj f rxyz structparent endobj obj procset pdftextimagebimagecimagei annots r r r r mediabox content rgroup tabssstructparents endobj obj xobject procset pdftextimagebimagecimagei annots r r mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei annots r r mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei annots r r mediabox content rgroup tabssstructparents endobj obj f rxyz structparent endobj obj xobject procset pdftextimagebimagecimagei annots r r r r r r mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei annots r r r mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei annots r r r mediabox content rgroup tabssstructparents endobj obj f rxyz structparent endobj obj procset pdftextimagebimagecimagei annots r r mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei mediabox content rgroup tabssstructparents endobj obj endobj obj r endobj obj endobj obj endobj obj endobj obj f rxyz structparent endobj obj procset pdftextimagebimagecimagei annots r mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei annots r mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei mediabox content rgroup tabssstructparents endobj obj xobject procset pdftextimagebimagecimagei annots r r r r mediabox content rgroup tabssstructparents endobj obj xobject procset pdftextimagebimagecimagei annots r r r mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei annots r r r mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei annots r r r r r mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei annots r r r r r r r r mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei annots r r mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei annots r r r r r r r r mediabox content rgroup tabssstructparents endobj obj f rxyz structparent endobj obj procset pdftextimagebimagecimagei mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei annots r r r r r mediabox content rgroup tabssstructparents endobj obj f rxyz structparent endobj obj f rxyz structparent endobj obj xobject procset pdftextimagebimagecimagei mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei annots r mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei annots r r r r mediabox content rgroup tabssstructparents endobj obj f rxyz structparent endobj obj procset pdftextimagebimagecimagei annots r r r r r r r r r r r mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei annots r r mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei annots r r r r r r r mediabox content rgroup tabssstructparents endobj obj xobject procset pdftextimagebimagecimagei annots r r mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei annots r r mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei annots r r r r mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei annots r r mediabox content rgroup tabssstructparents endobj obj xobject procset pdftextimagebimagecimagei annots r r r r r r mediabox content rgroup tabssstructparents endobj obj f rxyz structparent endobj obj procset pdftextimagebimagecimagei annots r r mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei annots r mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei annots r r r r mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei annots r r r mediabox content rgroup tabssstructparents endobj obj xobject procset pdftextimagebimagecimagei annots r r mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei annots r r r r r mediabox content rgroup tabssstructparents endobj obj f rxyz structparent endobj obj xobject procset pdftextimagebimagecimagei annots r r r mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei annots r r r mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei annots r r r mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei annots r r r r r mediabox content rgroup tabssstructparents endobj obj f rxyz structparent endobj obj f rxyz structparent endobj obj xobject procset pdftextimagebimagecimagei annots r mediabox content rgroup tabssstructparents endobj obj xobject procset pdftextimagebimagecimagei annots r r r r r r r mediabox content rgroup tabssstructparents endobj obj xobject procset pdftextimagebimagecimagei annots r r r mediabox content rgroup tabssstructparents endobj obj xobject procset pdftextimagebimagecimagei annots r r r r r mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei mediabox content rgroup tabssstructparents endobj obj f rxyz structparent endobj obj xobject procset pdftextimagebimagecimagei annots r r r r r r r r r r mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei annots r r r r mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei annots r r mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei annots r r mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei annots r r r r r mediabox content rgroup tabssstructparents endobj obj f rxyz structparent endobj obj procset pdftextimagebimagecimagei annots r r r r mediabox content rgroup tabssstructparents endobj obj f rxyz structparent endobj obj procset pdftextimagebimagecimagei annots r r r r r r r mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei annots r r mediabox content rgroup tabssstructparents endobj obj f rxyz structparent endobj obj procset pdftextimagebimagecimagei annots r r mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei annots r r r r r r r r r r r r mediabox content rgroup tabssstructparents endobj obj f rxyz structparent endobj obj procset pdftextimagebimagecimagei annots r r r r mediabox content rgroup tabssstructparents endobj obj xobject procset pdftextimagebimagecimagei annots r r r r r r r r mediabox content rgroup tabssstructparents endobj obj xobject procset pdftextimagebimagecimagei annots r mediabox content rgroup tabssstructparents endobj obj xobject procset pdftextimagebimagecimagei annots r r r mediabox content rgroup tabssstructparents endobj obj procset pdftextimagebimagecimagei annots r r r r r r mediabox content rgroup tabssstructparents endobj obj f rxyz structparent endobj obj stream k ۯ
221,Lobsters,education,Education,Making Formal Methods Popular: The Crux is Math Education! [2015],http://ceur-ws.org/Vol-1385/paper5.pdf,making formal method popular crux math education,,obj endobj obj filterflatedecodeid index info rlength rsize stream b endstream endobj startxref eof obj stream e endstream endobj obj page rstructtreeroot rtypecatalog endobj obj font procset pdftext xobject rotate endobj obj stream znrj g c b v f b un h ޥ tk endstream endobj obj stream v c ok ag l c n u sy v
222,Lobsters,education,Education,Learn Prolog Now,http://www.learnprolognow.org/lpnpage.php?pageid=top,learn prolog,prolog online version book form send u,learn prolog introductory course programming prolog online version available since also throughly revised version available book form wanted two thing course first wanted provide text relatively self contained text would permit someone little knowledge computing pick basic prolog minimum fuss also wanted text clear enough make useful self study believe read text associated exercise gain useful partial entry world prolog partial entry brings u second point want emphasize practical aspect prolog prolog something ca nt learn programming language simply reading really want get course strongly advise get hold prolog interpreter find pointer nice one website work practical session provide course nt stop provide program better get hope enjoy course whether using book teach prolog using basis teaching others would like hear please send u commentscorrections take account later version
223,Lobsters,education,Education,"Lessons learned from launching my first screencast series / training course, Kubernetes on Rails",https://blog.abevoelker.com/2019-01-04/lessons-learned-from-launching-my-first-screencast-kubernetes-on-rails/,lesson learned launching first screencast series training course kubernetes rail,lesson learned launching first screencast series training course kubernetes rail kubernetes rail backstory series blog post result two sale inspiration wes bos wesbos ryan bates railscasts recording equipment logitech hacker news comment cheap amazonbasics condenser microphone convinced youtube review microphone boom arm pop filter differently hindsight setup differently hindsight screen capture setup ob studio amazing simplescreenrecorder ssr enabled pulseaudio enable systemwide mode ignore bunch security warning differently hindsight recording process differently hindsight amazing editing kdenlive apparently bug fixed differently hindsight distribution website video hosting gumroad leanpub eggheadio cloudflare stream differently hindsight udemy revenue share look awful get le marketing rruby rkubernetes hacker news lobster differently hindsight devto something abraham williams bill attitude marketing pricing heard paul graham patrick mckenzie saying two sale ab test pricing survey potential customer differently hindsight final thought kubernetes rail,lesson learned launching first screencast series training course kubernetes rail jan minute read last month recorded first ever screencast series kubernetes rail course teach kubernetes showing stepbystep deploy sample ruby rail application google kubernetes engine gke note although title little railsspecific bit course addition since google cloud gcp still bit exotic aws end teaching gcp basic well kubernetes two week since launched thought share note learned experience far backstory kubernetes something stuck craw screencast based series blog post wrote middle last year touching basically subject material think important learn kubernetes clear winner war deploy docker container production back originally wanted update blog post since getting bit outofdate term kubernetes gke well smooth bump people emailed getting stuck however dawned blog post poor communication medium trying convey well lot work put together taking screenshots writing stepbystep instruction guiding along narrative make sense occasional aside way hard put together cohesive way written compared recording actually thing talking side effect screencast approach also gave chance monetize work put whereas often feel time spend blog post really worth sometimes choose bother result share result first color context rest post day launched charging course received two sale sale got stretch changed pricing paywhatyouwant day since changed gotten least sale day gross first two week far talk pricing marketing later post inspiration getting deep detail give prop wes bos wesbos make mostly javascript cs training course bought worked couple took lot inspiration wes thing doubt detail look see handled possibly bit bit regard pricing distribution cover later following lead really much research screencast skimmed couple google search get good result nugget recall actually using write transcript recording good advice also although mind development site sort ice give prop ryan bates railscasts selling screencasts long time ago awesome job every rail developer era know talking certainly learned screencasts recording equipment originally plan buying special equipment project going use existing mic logitech partly tend waste bunch time overresearching stuff falling analysis paralysis trap partly something plan often enough justify sinking money also honest much faith recoup investment cost chance though see hacker news comment saying good cheap amazonbasics condenser microphone convinced youtube review picked since buying also picked cheapo microphone boom arm pop filter hold microphone front face reduce plosive thump cited problem youtube review differently hindsight nothing happy cheapo microphone boom arm although grew aspiration record professional thing probably buy better gear setup said want spend money recorded existing computer desk without adding acoustic foam thing like unfortunately computer happens unfinished basement crappy little apartment right beneath living room hear running foot thumping around yelling tv blasting desk chair rolling around etc reason could record small window time kid schooldaycare wife work duty look basement also seated foot away gas furnace december day wisconsin may kick every half hour put winter coat boot shut furnace long stretch recording also happen live close train track small airport due location right mississippi river would stop recording train horn would blaring loud jet would coming going fun house noise pick water pipe making noise minute someone flush toilet tank refill hot water heater occasionally kicking several minute house alive man one last noise became acutely aware fan pc couple external hard drive desk ended moving desktop tower underneath standing desk side mic turning external hard drive recording differently hindsight think much differently maybe buy longer cable move desktop tower away recording area block draping heavy blanket getting bit anal really research acoustic foam dampening know exists might worth looking depending setup day got seriously recording thing probably consider building recording booth like gary bernhardt also lot serious recording quality screen capture setup first development machine run ubuntu limited linuxfriendly software first software tried ob studio amazing streaming honestly really fun play around add multiple video audio input add different effect filter script transition chroma key green screen compositing sort stuff good professional twitch youtube streamer use really awesome open source although excels streaming also record function work fine however recall correctly recording first sample ob suffered screen tearing quick google search apparent little tinkering led try alternative recording program first simplescreenrecorder ssr ssr started right away told enabled nvidia driver setting could cause screen glitch asked wanted disable disabling recording sample footage ssr pleased quality decided stick name implies simple exactly needed recording software setup next thing create separate chrome profile use recording handy accidentally exposing browser history bookmark extension recording could also set zoom level better readability viewer however came time cli work realized clean slate show installation configuration cli tool already installed development machine ended creating new ubuntu user account using login switcher log user quickly switch main user account screencast user account also cranked zoom level code editor terminal downside creating new user account really clean slate configure code editor shell customizations ssr profile scratch downside fast user switching bit janky say typically would work however audio output would stop working hear anything playing back clip recorded discovered apparently pulseaudio handle multiple user basically would really noticeable tried leave youtube video playing background regular user account quick switch screencast account try play anything required sound play action would spinhang work one really annoying thing happened occasion get google hangout message type audible main account would knock audio output screencast account like second briefly look would take fix seemed like would headache enable systemwide mode ignore bunch security warning telling probably idiot since seemed minor inconvenience really need replay talking recording editing later bother messing around trying fix time wanted plow project quick could still felt itch unfortunately realize much later recording last episode fact bug also caused amazonbasics condenser microphone completely disappear system notice one buggy sound outage ssr helpfully changed microphone input back crappy webcam microphone since option sticky continued defaulting webcam mic going forward ended recording first couple episode new condenser microphone episode recorded webcam microphone talked dead condenser microphone right front face whole time hint something amiss edited one episode recording noticed audio waveform looked noticeably smaller later episode thought seemed little quieter since new video editing tinkering around editor display option assumed messed one probably biggest regret recording screencast unintentially making audio quality worse needed using equipment bought quality bad felt need rerecord episode rerecorded intro episode added voiced apology audio difference episode requested feedback annoying rerecord exactly made lot sale yet far complaint differently hindsight spent time understanding configuring pulseaudio work multiple user naively assumed linux system proud multiuser unix heritage would able multiplex audio multiple user concurrently box unfortunately year linux desktop still arrived also trusted gut looked thing early spidey sense tingled editing recording process recording episode would write note episode almost whole transcript google doc forget anything recording recording would put note leftmost monitor three monitor desktop pc setup left right monitor oriented portrait mode center monitor landscape center monitor screen actually recording coding whatnot rightmost monitor would simplescreenrecorder open make sure recording file browser open occasionally review recently recorded delete clip tongue would slip mentally blank rerecord clip episode also kdenlive open would editing still recording clip episode yet person speak extemporaneously clearly long stretch quickly figured successfully spoke sentence would helpful pause second two immediately fill space filler word clean gap audio could pause recording gather thought moment start recording cleanly splice two recording together make something cohesive differently hindsight get enough sleep night brain tired couple episode seemed like could string two cohesive sentence together time without needing pause recording mispeaking something blanking stretched total recording time made lot editing work fact one episode pretty much record whole thing one take maybe needed two clip amazing jealous programmer see time without effort wanted continue making screencasts think take public speaking course something would force hone skill maybe talking coding home explaining invisible audience guess alwayson rubber duck debug mode would help editing editing chose kdenlive happy make easy splice clip together overlay text add transition effect split audio sort thing like ob run great ubuntu also well thought feature around saving saved bacon couple time autosaves saved rare occasion program hung manually saved long time well keep history several backup save saved made irreversible change undo able revert old save quirk kdenlive point sure choose correct editing profile start editing one time accidentally started profile instead typical got editing episode done tried switch screwed clip shortening length make overall length video half apparently bug fixed one point regressed hopefully get fixed future differently hindsight nothing pretty happy kdenlive although work definitely need buy hard drive video recording editing requires ton storage space distribution website video hosting first searching distribute screencast found pretty odd someone already made platform distribute screencasts yet knew ebook platform like gumroad leanpub nothing really screencasts found eggheadio however gated subscription service preapproved instructor course followed wes lead spun website host screencasts use stripe payment store video cloud storage presenting signed url user trivially shared run heroku got serious traffic cloud storage would become expensive look using vimeo cloudflare stream something else like storing serving video differently hindsight happy functionality although could probably use touch may taken wrong approach copying wes proven track record course twitter follower mailing list ten thousand perhaps hundred thousand subscriber wes easily share new website make interested fanbase without lot outofband marketing keep profit charging card directly realize writing blog post may better served selling course udemy even radar kept using term preparing launch site noticed wes marketed stuff training like oh right actually sort whoop problem looking udemy revenue share look awful purchase keep still pay processing fee get le unless user clicked udemy ad last day get problem every udemy course seems perpetually figure net per buy paypal fee upside seems like people buy course fairly high rate even course rated well also monthly heroku gcp video storageserving bill although total going crosspost udemy though especially googling seeing lot complaint instructor mainly revenue sharing okay slow trickle people coming site thing dry may something consider marketing working hard launch site holiday break started catch developer want spend holiday downtime learning new thing finally site ready launch bit later wanted still late enough felt need call central time middle afternoon friday december posted reddit rruby later thought post rkubernetes tweeted personal twitter also posted hacker news show hn lobster neither story got upvoted blog post series get decent search ranking type query also put little blurb top directing people newlyrecorded screencast series differently hindsight unfortunately rruby post expected get click got hung spam filter posting brand new account using real name professional messaged mod shortly posted noticed almost hour got tired waiting decided doxx posting alt lot imaginary internet point one thing would differently create new reddit account way earlier build karma account duration really stupid spam filter trip although many efriends least could count help slightly boost submission help get traction especially hn find distasteful probably helped another thing find distasteful seeing often retweet later day catch eyeball small twitter reach may done much last thing also post something devto seeing something abraham williams saying get surprising amount view posting honestly really hate whole marketing process sympathize late bill attitude marketing damnedest thing social medium turned every single one u marketer pricing pricing used something agonized separate project working brother one day heard paul graham say something effect way important get customer worry pricing hard change later raise price grandfather existing customer old price lower price everyone happy anyway made lot sense context project working still something saasy came big attitude pricing project threw dart wall launch price preparing launch got feeling bit low especially reviewing much wes bos charge marketing premium course similar also echo patrick mckenzie saying back head moment savvy entrepreneur know twitter separately pinged feedback thought pricing low well roughly doubled last minute advise number decided double asked forecast completion time programming task saw result section earlier got two sale day launched nada next day felt like may missed sale pricing course high people coming back since unlikely even see link course rare event price etched mind revisit started researching adjust pricing find right equilibrium point seem great info seem lot article saying ab test pricing offer good alternative though either survey potential customer see willing pay marketing list keen type thing copy similar service charging already work well since wes fanbasetalent much hotter niche ended letting people choose price created pricing page slider text input defaulted suggested price little emoji face reacts based generous person feature day already gone dry spell sale least sale day mentioned result section may ideal solution compared perfect market information could set price exactly right point maximize income already big relief overthink pricing seeing new people sign give big confidence boost even slow trickle screenshot see minimum go thought would nice student whatnot writing decided nudge change step maximum reason super grateful every customer gotten far realized think price floor received nontrivial question tempted refund customer outright rather spend hour digging something assuming something would affect lot people student folk situation always email reduced pricing problem explain faq landing page another thing plan release two bonus episode working set must spend much unlock bonus minimum similar humble bundle existing customer get episode free regardless paid think kind valueadd effective sale tactic differently hindsight hindsight realize magic incantation net money finding way experiment adjusting pricing without ticking people great made one pricing adjustment feel way le worried making ever feel need emoji thing fun thinking trying thing like making slider certain price point final thought really know impulse glad recording something comfort zone much le brash enough charge money proud following completing day launched posted link social medium pang panic whole thing foolish kicked even putting thing write blog post within hour soon got notification stripe one person bought course suddenly felt like whole thing success really pleased even paper totally red monetary term still feel good thank first buyer small trickle sale coming pricing change fun check stripe app phone great way see gotten another purchase recently looking forward seeing thing change time perhaps making occasional adjustment pricing said plan anything like time soon post made intrigued head kubernetes rail learn kubernetes get receive two bonus episode terraform helm released soon
224,Lobsters,education,Education,GCompris: Educational Software for Children 2 to 10 from KDE Community,https://gcompris.net/index-en.html,gcompris educational software child kde community,download page http gcomprisnetvoicestats,hi pleased announce release gcompris version new version contains new activity programming maze learn basic programming instruction baby tangram learn basic tangram activity corresponds lowest level previous tangram activity lot new feature new subcategories organize activity new background music feature audio track new volume setting audio effect new speed setting several activity gletters algebra readingh notenames new feature chess activity display captured piece new option go next level manually drawletters drawnumbers new voice enus new image color activity new image advancedcolors activity new image target activity improve setting layout improve share activity layout improve categorisation activity layout resource file stored kde server http cdnkdeorg add tutorial evenodd number add intro pianocomposition add malayalam dataset gletters add breton dataset wordsgame fix voice playing geography fix sound playing mining fix portrait mode binarybulb fix high cpu load menu fix hint image size photohunter fix layout colormix lot small fix find package new version gnulinux window macos download page update also available soon android play store window store raspberry pi provide installer soon updated version io still available note macos package yet notarized look next year voice side added new voice try used several activity instead check answer check page voice available language http gcomprisnetvoicestats misc section help u providing nice recording voice missing entry native language translation side language fully supported basque brazilian portuguese breton british english catalan chinese traditional dutch french galician greek italian macedonian malayalam polish portuguese romanian slovak spanish swedish ukrainian also language partially supported belarusian catalan valencian chinese simplified estonian finnish german hindi hungarian indonesian irish gaelic norwegian nynorsk russian scottish gaelic slovenian turkish usually ship translation least complete however several translation dropped way especially slovenian belarusian scottish gaelic also hindi russian irish gaelic decided keep exceptionally release hope see former new translator complete translation get update new translation make release update language partially supported list yet supported want help please contact u give instruction get started translating another way help write post community gcompris nt hesitate give u feedback note malayalam language noticed issue default font andikar recommend malayalam user select font notosansmalayalam raghumalaylamsans application menu available list need install font system able select thank johnny
226,Lobsters,education,Education,Lode's Computer Graphics Tutorial,https://lodev.org/cgtutor/,lode computer graphic tutorial,lode computer graphic tutorial introduction color image arithmetic drawing fractal oldskool effect raycasting filtering ft image filtering fourier transform texture generation,lode computer graphic tutorial introduction color image arithmetic drawing fractal oldskool effect raycasting filtering ft image filtering blur find edge emboss fourier transform introduction ft frequency spectrum signal image using rgb color image texture generation quickcg downloaded required compile code article devc user download project file quickcg following file currently used tutorial kept completeness recent update december better floorceiling rendering technique raycaster januari improvement floodfill code simplified formula raycaster february bug typo formatting fix tutorial longer two version quickcg august fire tutorial updated new quickcg made waitframe quickcg use second instead millisecond august small nonbackwards compatible quickcg update july fourier transform article updated new quickcg please let know something nt compile june raycasting tutorial updated let code work updated quickcg tutorial still use old quickcg code therefor zip old quickcg made available download may site undergone change directory structure changed quickcg received improvement link site may work code example may compile anymore due nonbackwards compatible change quickcg article got removed sorry inconvenience contact please use address following image copyright c lode vandevenne right reserved
227,Lobsters,education,Education,Learning to Learn: Develop Skills to Master Anything,https://blog.travisbumgarner.com/post/learning-to-learn/,learning learn develop skill master anything,background meetup maker avoid analysis paralysis get going note sweet spot local meetups meetups friend family coworkers internet gathering find great teaching resource book recorded video content pluralsight edx live video content twitch recursive learning know take break first burnout keep eye need work hour straight ask help know quit pat back share progress product world give back call action,background mastered ability learn learn embarked ambitious project decided build camera learn electronics worked project involved connecting electrical component programming soldering user interface one saturday afternoon working project encountered issue somewhere camera spent nearly hour troubleshooting perhaps luck eventually stumbled upon solution tuesday went meetup maker frequented asked fellow maker would diagnosed problem without pause said would checked x detail important exactly discovered painful hour one many hurdle encountered pursuit teaching new subject time developed unique set skill skill made easier overcome obstacle le frustration learning new subject much rewarding enjoyable used hope share learned avoid analysis paralysis get going see lot beginner programmer ask question like best language learn spend week reading weighing pro con end tend give without writing single line code bit planning research useful spending time planning way go dangerous thing pick direction go direction wrong always stop ask help later good community critical education learning new subject hard tell right developing bad habit go uncorrected lead real pain later community offer place ask question get feedback note bit struggle good great thing approaching community help hour struggle helpful learning electronics giving first encountered bug would good either somewhere thirty minute two hour mark sweet spot experience gained frustration encountered sweet spot bit struggling great two reason first learn deal frustration unknown learning new subject quite frustrating developing frustration muscle deal challenging moment helpful second pursuit solving issue cause consider different angle different angle help learn subject local meetups one first thing moved boston start attending local meetups meetups offer great space listen expert chat others work project sometimes even free food drink friend family coworkers one pretty straight forward ask question immediately around first moved boston took temp job small electrical engineering firm decided start learning circuit building product picked brain lot coworkers learned circuit board design packaging shipping customer support sale recommend giving little something exchange help treating lunch internet gathering whatever reason local meetups work load online community join slack discord irc forum reddit great platform google search programming slack community turn list like offer great starting point finding community keep mind community better others try see one work best find great teaching resource one amazing thing internet sheer amount content consume rating system help tell whether said content great quality book amazon one favorite place go buy book method pretty simple say want learn something like python search python click highly rated book read description review make purchase strategy failed ended book enjoy otherwise several bookshelf full excellent book recorded video content ton online content list favorite pluralsight great online platform technical skill curated video content skill assessment tool learn gauge learning youtube everything short clip full course edx offer free recording resource top university like mit harvard live video content twitch perhaps unexpected site find probably know streaming video game also great place learn beyond video game watch people playing music painting programming recursive learning year back worked pharmaceutical company software engineer day completely lost conversation outside software biology chemistry strength high school struggled understand company went read mission page unfortunately left page lost arrived decided use company description starting point look word know word definition understand kept going decent enough understanding built back understand company mission process looking word always end going dictionary would go dictionary learn part guitar instead use tool outline get answer need recursive learning important skill self teaching linear sometimes encounter concept order easy get flustered situation situation recursive learning help get track know take break burnout great way kill interest subject year ago decided learn programming pursuit new career would throw hour end sometimes would sit cafe hour day head home resume programming wee hour morning found grinding teeth feeling like zombie end day generally grouch first burnout chart code wrote measured via github year darker square code written day see mid february april coding often pushed hard long burned write code next several month learning new subject draining important know take break tip helped avoid burnout keep eye used set day learning push nothing left way fix eight hour sleep new day nowadays instead start feel drained stop call day leaf rest afternoon open fun feel accomplished zombielike rest day need work hour straight imagine two situation working hour straight working period hour hour break achieve much span time feel better done ask help mentioned bit struggle great thing much negative consequence sometimes middle learning struggle know stop ask help aware know stop get help know quit longest time struggled word failure growing came see failure something avoided cost equating lack effort failing something math test unacceptable life classroom realized term experienced school could put best something new business still might fail mean try best lack effort thing happen sometimes learning new subject work many thing succeeded equal number failure like explore learn lost interest satisfied curiosity definitely easier said done walking line temporarily frustrated permanently done something come experience time leave decision pat back think shawn achor tedx talk happy secret better work put better leave found company school follow formula success work harder successful successful happier undergirds parenting managing style way motivate behavior problem scientifically broken backwards two reason every time brain success changed goalpost success looked like got good grade get better grade got good school get better one got good job get better job hit sale target going change happiness opposite side success brain never get full video worth watch video share progress product world give back always told one day knowledge acquiring pay forward ask learn share learned others could anything teaching class writing blog post call action skill helped journey helped excited hear make comment
228,Lobsters,education,Education,How To Remember Anything Forever-ish,https://ncase.me/remember/,remember anything foreverish,download code translate comic wan na chip click augmenting longterm memory fluent forever rule card check explorable explanation leitner box crafting video chris make interactive stuff see full credit play stuff follow twitter support patreon,also interactive comic public domain meaning freely use thing educational personal even commercial purpose already permission download code translate comic however able thanks patreon supporter let keep love thank wan na chip click reading something something shoulder giant read made spaced repetition part daily life augmenting longterm memory michael nielsen showed spaced repetition nt tool memorization tool build deep understanding could even way life fluent forever gabriel wyner convinced finally start learning french create leitner box calendar adapted book rule card piotr wozniak taught squeeze spaced repetition note author also invented algorithm used anki favorite read science learning want learnbyplaying stuff check explorable explanation thanks thank playtesters making project suck aatish bhatia adam filinovich aimee jarboe alex jaffe amit patel andy matuschak b cavello chris walker frank lantz gal green glen chiacchieri hamish todd henry reich jacque goupil james lytle jez swanson josh comeau kayle sawyer levi robertson marcelo gallardo martyna wasiluk michael nielsen mikayla hutchinson mike gifford monica srivastava owen landgren paul butler paul simeon philipp wacker pontus granström rowan sebastian morr spaciecat tanya short tim alexandra swast tom herman toph tucker harrisbraun zeno rogue thank chris walker making leitner box crafting video p chris make interactive stuff thank omar rizwan helping figure mobile safari endless pit bug project made creative common asset wikimedia common freesounds see full credit huge thanks patreon supporter made possible finally thank kind person sits credit play stuff follow twitter support patreon sincerely hope comic could help whatever small way happy learning nicky case
229,Lobsters,education,Education,My first OpenVMS,https://raymii.org/s/blog/My_first_OpenVMS.html,first openvms,clicking picture like article consider sponsoring trying digital ocean vps link get credit day referral link port vms software inc vsi hobbyist article clustering installing openvms hp enterprise openvms hobbyist program http decusorg decuserve online navigating filesystem chapter openvms documentation editing text file file versioning phone command conclusion alpha blog dec decus itanium openvms pdp simh vax vms,read openvms article clicking picture last week registered decuserve openvms system also registered hp openvms hobbyist got openvms vax small blog item describes first step hosted decus openvms system excited since know create folder navigate filesystem edit file oh nice chat another openvms user via phone program like article consider sponsoring trying digital ocean vps link get credit day referral link like mess around legacy system like vaxvms thus openvms seems great step forward started hardware project virtual address extension vax saw birth dec around accompanied several operating system like dec system vax could run lot software including software also released around vms one operating system renamed vaxvms release version ported alpha architecture renamed openvms version version ported intel itanium architecture also ported architecture hopefully ready port vms software inc vsi venerable operating system lot history behind great future ahead lively among hobbyist dutch article recent article clustering installing openvms wanted enjoy well decided register hobbyist hp enterprise openvms hobbyist program required part chapter openvms hobbyist decuserve seems club left allows registration open first fill number chapter contacted hpe register decus could become member via http decusorg decuserve online using following ssh command connect decus register ssh ohostkeyalgorithmssshdss registration eisnerdecusorg follow online interactive instruction good go registered login username password n c e encompasserve access subscribed individual logging system agree abide encompasserve canon conduct source code information posted system warranted way use risk submit source code post information system must allow unrestricted use must right grant permission refer encompasserve canon conduct posted decuserveinformation conference topic guidance report problem decuserveforum information encompasserve please login username information subscribe encompasserve please login username registration report form problem please login username problem renew expired account please login username registration example eisnerdecusorg password last interactive login thursday login failure since last successful login new mail message dclsspawned process spawned user example block used available authorized permitted overdraft block diskuser subprocess completed navigating filesystem exiting part openvms journey yet navigating filesystem would expect linuxunix system l dropped sort file editor l end file buffer main write insert forward pressed ctrlz lse exit okay working let try window alternative dir directory eisner decuserveuserexample maintpu journal icreatedafolderyaydir logincom mailmai note notebooknote remydat remydat wwwdir total honest found command reading chapter openvms documentation hp see managed create file folder might also notice name structure way different linux filesystem understanding far openvms directory seperated unix dot full file path addressed file specification following format node device root directory filenamefiletype version case indexhtml file www folder addressed via dir www directory eisner decuserveuserexamplewww indexhtml total file far know folder surrounded bracket dot front www specifies current folder could also write full file specification dir eisner decuserveuserexamplewww directory eisner decuserveuserexamplewww indexhtml total file creating folder done mkdir mkdir raymii dclwivverb unrecognized command verb check validity spelling mkdir logically named create command correct folder specification bracket leading dot create dir raymii dir raymii directwnofiles file found changing folder done cd printing current folder pwd well show default show default diskuser decuserveuserexample changing folder set default set default www dir directory eisner decuserveuserexamplewww indexhtml total file changing back previous folder set default diskuser decuserveuserexample dir directory eisner decuserveuserexample maintpu journal icreatedafolderyaydir logincom mailmai note notebooknote remydat remydat wwwdir total file editing text file briefly dabbled eve create file eve remydat hello print test end file buffer remydat write insert forward line read file eisner decuserveuserexample remydat seems interactive editor pressing ctrlz save file line written file eisner decuserveuserexample remydat editor available like teco several operating system well continued new article file versioning saw example openvms default support file versioning every file filesystem awesome version supported default nothing remember create edit file managing version quite easy well since version number appended filename remydat semicolon use file system command nt figured yet remove edit specific version editing version file remydat eve remydat using type command cat linux show difference version type remydat hello print test version type remydat hello test nt understand nt option modern linux system enable window something like v set provides timed backup however default awesome phone using show user command able see list currently logged user show user openvms user process total number user number process username interactive subprocess batch example harrod henkle jackson malmberg parris reichertd schenkenberg spalding user online used phone program initiate chat cornelius hi george nice chat work required attention exit ctrlz thank george nice talk image show discussion george enthousiasm figured create folder openvms system command found documentation command show command show general information show system openvms node eisner uptime pid process name state pri io cpu page flts page swapper hib lanacp hib fastpathserver hib ipcacp hib errfmt hib show network product multinet node eisnerencompasserveorg address e product decnet node eisner address e show cpu system eisner alphaserver mhz cpu ownership set active configure cpu state set potential autostart powered none present none hard excluded none failover none show memory system memory resource physical memory usage page total free use modified main memory extended file cache time last reset allocated mbytes maximum size mbytes free mbytes minimum size mbytes use mbytes percentage read io help command good well help show show display information current status process system device system format show option additional information available description accounting acl audit broadcast cluster cpu default device display entry error fastpath image intrusion key license logical memory network printer process protection queue quota rmsdefault root security server shadow status symbol system terminal time translation user workingset zone conclusion happy system exists still people around keep running let new folk like enjoy learn last time enthousiastic navigating file system openvms expect learn openvms eventually installing system simh hobbyist binary got hpe including iso image openvms vax architecture one unread email idea read next challenge ahead figure read reply email fun time ahead oh also nt know yet exit ssh session closing window tag alpha blog dec decus itanium openvms pdp simh vax vms
230,Lobsters,education,Education,Do Developers Understand IEEE Floating Point?,http://pdinda.org/Papers/ipdps18.pdf,developer understand ieee floating point,,obj length r filter flatedecode stream itf mp q y锎
231,Lobsters,education,Education,Formal Reasoning About Programs,https://frap.csail.mit.edu/main,formal reasoning program,,
232,Lobsters,education,Education,"If you wish to learn ES6/2015 from scratch, you must first invent the universe",https://www.youtube.com/watch?v=DN4yLZB1vUQ,wish learn scratch must first invent universe,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature ashley williams wish learn scratch must first invent universe youtube,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature ashley williams wish learn scratch must first invent universe youtube
233,Lobsters,education,Education,Lecture notes! Intro to Quantum Information Science,https://www.scottaaronson.com/blog/?p=3943,lecture note intro quantum information science,previous appearance preskill legendary note berkeley john watrous waterloo mermin quantum computing since democritus lecture lecture lecture lecture lecture lecture lecture lecture lecture lecture lecture lecture lecture lecture lecture lecture lecture lecture lecture lecture lecture lecture lecture lecture lecture lecture lecture lecture lecture note combined file quantum complexity theory great idea theoretical computer science barbados lecture note complexity quantum r trackback,someone recently wrote blog high nerd whining content low actual compsci content worth checking regularly surely one mildest criticism ever received hope today post help even thing spring taught new undergraduate course ut austin entitled introduction quantum information science student mostly c also strong representation physic math electrical engineering one student ewin tang made previous appearance blog today belongs another student paulo alves took upon make detailed note lecture using paulo note starting point full year procrastination delay happy release full lecture note course among thing using note teach course second time starting holy smoke wednesday pretend note break new ground even restrict undergrad course rule eg preskill legendary note already great quantum information lecture note available web berkeley based course taught among others former adviser umesh vazirani committee member birgitta whaley john watrous waterloo also dozen mermin used course difference note well cover exactly topic cover exactly order cover exactly stupid joke story tell given situation like lecturing style probably like given hopefully bias toward former prerequisite note minimal previous exposure linear algebra algorithm read might ready yet research quantum grad course feel good honest understanding quantum information currently stand fact already stood late early many comment theoretical experimental progress made since also one people read quantum computing since democritus disappointed lack basic quantum algorithm function book origin note lecture given graduate student already knew basic quantum consider new note restitution nothing else one complain dearth basic quantum algorithm welcome comment bugfixes etc thanks much paulo transcribing lecture making figure also patrick rall corey ostrove ta ing course tom wong supartha podder giving guest lecture course student making course lecture course intro churchturing thesis page lecture probability theory qm page lecture basic rule qm page lecture quantum gate circuit zeno effect elitzurvaidman bomb page lecture coin problem inner product multiqubit state entanglement page lecture mixed state page lecture bloch sphere nocloning wiesner quantum money page lecture quantum money quantum key distribution page lecture superdense coding page lecture teleportation entanglement swapping ghz state monogamy page lecture quantifying entanglement mixed state entanglement page lecture interpretation qm copenhagen dynamical collapse mwi decoherence page lecture hidden variable bell inequality page lecture nonlocal game page lecture einsteincertified randomness page lecture quantum computing universal gate set page lecture quantum query complexity deutschjozsa page lecture bernsteinvazirani simon page lecture rsa shor algorithm page lecture shor quantum fourier transform page lecture continued fraction shor wrapup page lecture grover page lecture bbbv application grover page lecture collision application grover page lecture hamiltonians page lecture adiabatic algorithm page lecture quantum error correction page lecture stabilizer formalism page lecture experimental realization qc page popular request problem set might post solution later date note taking course later year set considered outdated study purpose note update aug combined file thanks much robert rand oscar cunningham petter noon van der silk help explicit note copyright scott aaronson free personal academic use modification sale freely moved material lecture arbitrarily cut across lecture boundary one reason lecture much longer others apologize displayed equation ugly never found elegant way edit equation google doc finish note still hankering try quantum complexity theory great idea theoretical computer science lecture note barbados lecture note link sidebar right entry posted sunday august pm filed complexity quantum follow response entry r feed response currently closed trackback site
234,Lobsters,education,Education,Composing Programs,http://composingprograms.com/,composing program,,
235,Lobsters,education,Education,Paradox of Choice,https://azeria-labs.com/paradox-of-choice/,paradox choice,duration neglect retrospective evaluation affective episode,paper duration neglect retrospective evaluation affective episode psychologist daniel kahneman barbara fredrickson discus phenomenon called peak end rule mechanism brain us summarize experience influence whether would like experience paper argues memory pleasurableness past experience determined overall proportion pleasure versus displeasure experience even long lasted rather almost entirely determined snapshot felt importantly felt high low peak experience felt experience ended importantly observe memory experience based actually felt experience average understanding traumatic firsttime learning experience suppose example want learn reverseengineer compiled application know like solving puzzle detailoriented perhaps think right thing suppose also impatient fail set appropriate learning goal choose good resource help learn worse still suppose prioritize learning goal choose skip past basic dive straight something exciting advanced instead scenario probably start excited make superficial progress performing easy trick get started quickly get stuck know proceed perhaps set proper lab environment get confused see assembly instruction first time likely get frustrated give peak end rule mean brain likely remember experience overall unpleasant unpleasant peak frustration disappointing end make likely think reverseengineering smart people established reverseengineering field seem struggle peak end rule mean likely choose repeat experience structured learning better would perhaps avoided unpleasant experience found reverseengineering good fit course exception rule people naturally thrive frustration give easily even bad learning experience point mistake bad learning experience stupid incapable often result unstructured learning attempt instead tried better learning strategy would succeeded found whole experience much pleasant successful short knowing brain work memory often accurate assessment ability help circumvent error try hopefully planning better ending pleasant successful experience
236,Lobsters,education,Education,Asking the right question is more important than getting the right answer,https://lemire.me/blog/2018/12/06/asking-the-right-question-is-more-important-than-getting-the-right-answer/,asking right question important getting right answer,zero one wrote untold story death idea forthmann et al oppezzo schwartz bernstein et al,school train u provide right answer predefined question yet anyone experience real world know often difficult part find right question make remarkable contribution need start asking right question go question asking might define good question great question tractable fruitful lead path discovery easy ask cure cancer good question help anyone medical research secret question best one question mind may holding gold mine question everyone proportionally worthless eg see zero one peter thiel may think studying hard learning answer get better asking great question sure work fact knowing much harm would take b student fresh question phd student typical overeager student fret getting everything right poorly held secret best researcher innovator average student following experiment pick scholarly field field spend two week reading everything next write question almost guarantee question already covered source read known question find good question maintain distance material uncontroversial consider define good question secret highly original mind tend frame everything term pattern learned spend two year studying marxism every single problem feel like marxist problem becomes difficult come new question outside frame get wrong smart people know tend creative everything else difference knowledgeable locked frame mind yet many researcher work survey best paper last major conference journal issue field importantly make sure read everyone reading make sure make frame mind best people make sure repeat popular question answer look paper look hole possibility improvement work ensures leader people writing genuine novel idea followed long nearly endless stream paper offer minor inconsequential variation easier judge thing retrospect computer science xml craze turn century dozen xml paper appeared year top database conference wrote untold story death idea could many people get excited time deadend believe people happy handed question often rush provide highly sophisticated thorough whether question right one claim people leading unnaturally smart knowledgeable creative people answer people question dumb unimaginative main difference one focus either focus asking good question focus providing good answer world would better people asking better question might ask better question pay attention around violates worldview fleming discover penicillin noticed mold invaded dirty lab appeared kill bacteria asked right question time patient reportedly einstein stated smart stay problem longer longer work problem likely find interesting question see forthmann et al easiest way miss great question dismiss problem uninteresting move quickly physically active go walk chaining desk likely counterproductive used think allout intellectual best route believe grossly mistaken personally take walk outside almost every morning weekday see oppezzo schwartz social social pressure toward conformity trigger intense instinctive reaction simply hard go herd thus better know much herd concrete term spend entirely day yourselfâ bernstein et alâ recommend intermittent social interaction opposed continuous interaction avoid reduction individual exploration ask lot question want become good providing right answer train answer lot question want become good asking question ask lot always question thought work scientific mind much provide right answer ask right question attributed levistrauss
237,Lobsters,education,Education,Advent of Code 2018,https://adventofcode.com/2018,advent code,,
238,Lobsters,education,Education,This Guide Will Help You Decide Whether to Use Anki or SuperMemo,https://masterhowtolearn.wordpress.com/2018/11/25/this-guide-will-help-you-decide-whether-to-use-anki-or-supermemo/,guide help decide whether use anki supermemo,comparison anki supermemo quick terminology recap supermemocom supermemocom anki incremental reading far willing go serious learning also serious tool method learning wished someone told opportunity cost switching v switching want read remember remember sr significance incremental reading supermemo part part ii reading remembering v remembering learning reading understanding new thing remembering memorizing learned efficiency effectiveness anki v supermemo algorithm better supermemo anki snowball effect closing remark twitter support page patreon kofi like,read comparison anki supermemo please prerequisite understand following content better quick terminology recap sr spaced repetition software sm supermemo supermemocom course mobile app application supermemocom different item supermemo card anki ir incremental reading although anki supermemo spaced repetition software sr different many way deciding whether switch one sr another stick preferred choice ask goal using ankisupermemo tradeoff willing make achieve goal opportunity cost willing take either sticking switching another sr ultimately ask using sr far willing go satisfied anki curious supermemo sr use depends attitude much treasure hungry knowledge far willing go learning example hate college major wait get need use sm retain information forever need incremental reading read recommended reading since goal yield maximum return grade least amount effort also lecture note predigested need put anki cram goal anki could totally satisfy help get graduate certificate minimum effort suspect case regard anki satisfy sr user need effective efficient way comparing traditional studying method get exam school anki could totally get job done however wondering much effective efficient learning satisfied anki provides considering sm bad idea serious learning also serious tool method learning wished someone told opportunity cost switching v switching helpful consider opportunity cost switching v switching context assuming using anki curious supermemo switching like branching venturing unknown new piece software questioning existing belief anki sr general learning philosophy one major advantage trying costandreward ratio highly disproportional cost low potential reward huge incremental reading superior algorithm two major reward discovered carved trying switching sm similar first tried anki bet different usually studied sure never regretted trying anki would never go back paperandpen flashcard trying supermemo like reliving experience potential gain loss might need spend hour figuring make usable work excluding time actually using learn remember reward astronomical like compound interest use time save willing go extra mile comfort zone learning whether highlighting copying verbatim using anki well importantly comfortable courage try something new might benefit way never imagined compound interest pay handsomely however ultimately find supermemo useful always go back anki regard learning opportunity cost time invested know study method habit stronger faith anki tried supermemo longer unknown mysterious sr people rave something merely heard want read remember remember sr read session recommend read significance incremental reading supermemo part part ii session incremental reading reading remembering v remembering want learn new thing sr want remember thing learned question quite determinant factor deciding sr use learning reading understanding new thing remembering memorizing learned anki remembering part reading anything new anki without sm incremental reading specifically would need learn traditionally reading hard copy lecture note pdfs import important part anki hand sm learning remembering blended one read learn review remember time incremental reading essentially spaced repetitioning reading like sr would spaced repetition review want read new material remember well incremental reading help tremendously regard supermemo desirable choice trying remember thing learned outside sr anki another viable option example lecture note already gone class may use anki import important part review read article start finish import part anki remembering b incremental reading interleaving reading remembering quality learning outcome different believe b superior explained efficiency effectiveness anki v supermemo come efficiency effectiveness aka productivity difference using either anki supermemo huge using using sr using either sr already given huge edge using sr sr hour anki hour supermemo hour difference using sr whether anki sm using huge difference anki sm algorithm better supermemo anki like comparing bike v bus v taxi bus taxi win thousand mile ahead bike either bus taxi good enough comparing bike snowball effect major difference anki supermemo longrun compound effect main driving force example element card take le remember sm anki x hr arbitrary number card time sm could save plan use sr le year term reviewing excluding incremental reading think much difference however dedicated lifelong learner like compound interest mean lot never burnout sm hopefully never burnouts anki put everything sm anki rep would impossible finish yes know situation high school v college content high school material hated v selfselected material changed speculation cognitive bias closing remark one sm member said anki tool supermemo lifestyle anki user think sm good small minority learner probably value much absolutely right people willing put sm idiosyncrasy still using ir learn use sm constantly surprised learning new thing feature software matter many comparison article read people experience belief could never substituted decide hope guide could help decide two equally amazing software already make sure follow twitter andor follow blog get notified whenever publish blog post find content helpful please consider visiting support page support blog patreon subscription kofi onetime thank like like loading related
239,Lobsters,education,Education,Stop Teaching C++ as a First Language,http://ibob.github.io/blog/2018/11/22/stop-teaching-cpp/,stop teaching c first language,stop teaching c first language stop teaching c teaching c first programming language beginner programming bad xkcd randall munroe tensorflow boost tmp odin holmes,stop teaching c published nov first language clickbait title know homage famous talk kate gregory stop teaching c discussion many time decided collect argument post teaching c first programming language beginner programming bad remember one bad teacher made hate one subject probably still hate day c bad teacher programming subject first language c turned fine often keep hearing probably started programming back c decent choice could argue better one even c much worse matter much nowadays modern language modern ecosystem make much easier start embarrassing key part learning program playing existing code think introduction programming might first lecture course might realizing thing run computer phone made actual human one human role intro motivate inspire first day beginner inspired idea student newbie capability create everything want people already created similar thing make use help learn better help creative early actually able work something worthwhile great motivator showing might great motivator might seem cheesy human nature especially among young people likely pupil beginner course programming brings u c c build system oh yes autotools nmake msbuild cmake premake qmake scons ninja meson fastbuild sharpmake maven gradle gyp jom actually many many know saying xkcd randall munroe mostly c package manager oh conan vcpkg buckaroo git submodules apt yum packman brew ton get going also package manager still popular c circle many project use ad hoc solution suit need alone build system taught package manager none github similar site make easy find code student want reuse inevitably encounter problem lose time experience frustration lot give maybe lucky enough encounter library easy integrate seen frustration desperation even seasoned professional trying incorporate library obscure build process code experienced looking tensorflow enough c well barebones standard library way networking gui graphic matter working freaking directory first introduced seen university late teach c using visual studio time reach humanity spread star beginner programming taught c friend level taught beginnerfriendly language couple week lesson friend start showing small game website text editor book catalog jazz hell php guy already second cm totally kill wordpress explore yet another way printing terminal window seemingly embarrassingly slow progress awful morale killer people get discouraged people abandon c sometimes programming altogether think think slow progress fault newbie realize instead learning fundamental programming spend majority time battling specific idiosyncrasy c development pretty much applies language well example c fortran even though computer science without fortran cobol like chocolate cake without ketchup mustard think would better choice first programming language c c complex complex c three language one cwithclasses hard bit harder java c since garbage collection think really quite ok beginner preprocessor language also present c heavily used c codebases even though use includes include guard small subset language template metaprogramming fullfledged turingcomplete functional programming language terrible syntax within c language template terrible way get introduced functional programming see people growing hate functional programming altogether first encounter syntax bad really dangerous without care even expert seduced apparent power fall victim compilation time ten minute hour say impossible write practical code hard one best attempt boost tmp odin holmes essentially mimic principle behind haskell lazy evaluation currying monadic function imagine teaching beginner care monad monoid category endofunctors ub undefined behavior c thing intuitively seem perfectly legitimate fact undefined behavior never rely even consistently observe work conscious decision greatly help optimizing code yet another level complexity language also hearing sentence work wrong yet another way bring morale negative value counter argument well naturally teach complex stuff know much cover basic course one teaching c beginner level teach entirety language impossible complexity hidden behind syntactic sugar compiler part language part standard library deal inevitable even teacher chooses skip pointer template operator overloading student bound come across good curious student start asking question answer hour long answer sometimes worthy class course time answer everything completely mantra becomes regularity morale suffers even questioning competence teacher given complexity language high demand competent programmer industry iffy best oftentimes people teaching beginner course beginner concrete topic terrible language like c anything learned c like language sure assign expert fortran teach programming basic java different really make teach c world hurt take piece language teach isolation would combining bad first language bad teacher worst world popular response want write game insert favorite tech heard written c learn c clear c taught used matter post critique c know thing exist may agree decision standard committee understand reasoning c programmer love naturally time hate language choice realize bad choice beginner want people learn programming want people try c think starting way go modern software development based ever complex stack different technology programming language practically way survive industry single programming language think first language one write code code first language may become main one somewhat unlikely may become secondary language use regularly work hobby may even become something past taught basic stepping stone something know like better whole point role first programming language learn language use teach basic programming way specific quirk little possible c language teach c beginner
240,Lobsters,education,Education,"In win for open access, two major funders to bar grantees from publishing in hybrid journals",https://www.sciencemag.org/news/2018/11/win-open-access-two-major-funders-bar-grantees-publishing-hybrid-journals,win open access two major funders bar grantee publishing hybrid journal,win open access two major funders wo nt cover publishing hybrid journal erik stokstad openaccess oa initiative launched european commission science europe january gate foundation oa policy current wellcome policy clarification november pm,headquarters wellcome trust london edwardpublic domain win open access two major funders wo nt cover publishing hybrid journal erik stokstadnov plan openaccess oa initiative launched european commission science europe september gained two major new member wellcome trust bill melinda gate world largest private foundation support today joining consortium european funding agency requiring funded research immediately free read publication two new partner add lot funding muscle effort require scientist publish paper journal make content free public instead charging subscription existing plan coalition partner represented science europe collectively spend billion research wellcome based london fund billion biomedical research per year whereas seattle gate foundation spends billion global health r largest part policy change january wellcome gate longer cover cost grantee publishing socalled hybrid oa journal subscription free content scientific journal follow hybrid business model allows author pay fee want make article oa past decade wellcome allowed grantee pay fee part viewed way help publisher finance switch business model full oa longer believe transition say robert kiley head open research wellcome looking bring change research open access wellcome make two change already part gate foundation oa policy article must made available creative common attribution licence facilitate reuse content research must freely available immediately publication current wellcome policy allows publisher keep article behind paywall month comprehensive requiring creative common license author funded either foundation comply publishing oa journal publish paywalled journal must simultaneously add accepted manuscript open repository pubmed central pmc europe pmc epmc socalled green oa journal permit immediate archiving toptier journal nature cell science allow least month publication research relates disease outbreak ongoing public health emergency author must also post preprint peer review although wellcome policy technically allows publication hybrid condition immediate archiving pmc principle plan specifically exclude hybrid journal new policy also wellcome differ plan principle respect article processing fee oa journal plan aspires cap fee certain amount wellcome noting publisher vary much enhance article plan continue pay whatever fee foundation deems reasonable gate reviewing policy fee robertjan smits oa envoy commission brussels prominent advocate plan said statement joining effort gate wellcome make important contribution objective plan accelerate transition full immediate open access scientific publication clarification november pm earlier version article erroneously stated wellcome gate would bar grantee publishing hybrid oa journal fact still permitted neither foundation cover fee charged journal make article oa policy note exception certain hybrid journal end
241,Lobsters,education,Education,A Different Approach to Teaching Kids and Teens to Code,https://link.medium.com/NgMqPUicyR,different approach teaching kid teen code,,medium different approach teaching kid teen code teach grader software engineering concept without getting deep particular language
242,Lobsters,education,Education,"Mamãe, what is happening on your computer?",https://link.medium.com/WaqbcuqIxR,mamãe happening computer,,medium mamãe happening computer note took place today kid room playing dressup getting stuffed animal ready trip
243,Lobsters,education,Education,When does teaching with comics work well?,https://jvns.ca/blog/2018/10/28/when-does-teaching-with-comics-work-well/,teaching comic work well,let sketch tech comic kind magic magical teach technical concept cartoon learning style preference learning preference still matter comic help diagram month source comic help explaining scenario comic help writing short structured list bite size command line zine structured comic help explaining simple idea bite size linux,speaking let sketch tech san francisco december thinking talk mechanic making zines comic skill different drawing skill business selfpublishing one interesting question situation using comic teach help comic kind magic place starting comic often feel magical post comic instance proc dozen people tell wow know existed useful seems clear explaining thing comic often work well lot people le clear situation comic useful post attempt explore see also teach technical concept cartoon technique use le work learning style one possible way answer question using comic teach work well well people visual learner people comic work well based idea different people different learning style learn effectively taught using preferred learning style clear different people different learning preference instance like reading text dislike watching video brief reading wikipedia seems le clear folk actually learn effectively taught using preference whether true think reading much learning preference still matter could conclude learning preference matter teach given concept best way concept think learning preference still matter least teach classroom teach whoever feel like reading writing internet people feel like learning thing teaching way presented example watch video learn say incapable learning video study show watch someone teaching lot cool thing want learn youtube watch right reading statement like visual learner preference worth paying attention comic help diagram lot system work involve lot interacting system example kubernetes complicated system many component took month understand component fit together eventually understood answer diagram point diagram kubernetes state life etcd every kubernetes component decides making request api server none component communicate etcd directly important thing know kubernetes architecture diagram diagram helpful though going pick someone else kubernetes diagram source totally accurate personally find le helpful think way diagram lot diagram drawn identify component system draw box component arrow component communicate approach work well lot context personally find often leaf feeling confused system work diagram like often highlight importantunusual architectural decision way like draw diagram instead figure key architecture decision folk need understand use draw diagram illustrates architecture decision possibly including box arrow leave part key understanding architecture kubernetes diagram left pod role kubelet component running master worker even important teaching goal diagram comic help explaining scenario something find really effective quickly explain important thing something really complicated like run kubernetes distributed system work often trying explain huge topic people start generality let explain linearizable system another approach prefer think scene approach get specific best way give lightning talk explain one specific interesting thing instead trying give overview idea zoom common specific scenario run real life example really common situation using linearizable distributed system periodically become unavailable due leader election know commmon started working distributed system saying hey thing happens practice useful example comic done style comic really good fit illustrating scenario like often kind interaction see leader election comic help writing short structured list gotten really using comic explain command line tool recently eg bite size command line zine one favorite comic zine grep comic reason love comic literally includes every grep command line argument ever used well think seem useful using grep year think amazing possible usefully summarize grep small space think important case list structured thing list type grep command line argument think comic work well make list colourful fun visually appealing comic help explaining simple idea spent bite size linux explaining various linux idea pipe comic pretty happy think little bit like draw diagram fundamental concept pipe think useful understand specifically pipe buffer writes pipe block buffer full think comic work well mix text small diagram really easily something like pipe tiny diagram help lot think right categorization comic work teaching yet think somewhat accurate description using far thought comic work love hear
244,Lobsters,education,Education,The SOM Family: Virtual Machines for Teaching and Research (2010),http://www.hpi.uni-potsdam.de/hirschfeld/publications/media/HauptHirschfeldPapeGabrysiakMarrBergmannHeiseKleineKrahn_2010_TheSomFamily_AcmDL.pdf,som family virtual machine teaching research,,obj endobj xref n n n n n n n n n n n n n n n n n n n n n n n n n n n n n n n n n n n n n n n n n n n n n n n n n n n n n n n n trailer size prev startxref eof obj stream h p g gi c rӹ
245,Lobsters,education,Education,Competitive Programmers Handbook,https://cses.fi/book.pdf,competitive programmer handbook,,obj type objstm n first length filter flatedecode stream dv x ѐ k hñmy c endstream endobj obj length filter flatedecode stream x
247,Lobsters,education,Education,Shaping our children's education in computing,https://www.youtube.com/watch?v=y-xgWLYQc4g,shaping child education computing,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature shaping child education computing simon peyton jones youtube,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature shaping child education computing simon peyton jones youtube
248,Lobsters,education,Education,"The Art of Prolog, Second Edition",https://mitpress.mit.edu/books/art-prolog-second-edition,art prolog second edition,summary instructor resource hardcover paperback author leon sterling ehud shapiro hardcover paperback,summary new edition art prolog contains number important change background section end chapter updated take account important recent research result reference greatly expanded advanced exercise added used successfully teaching coursepart ii prolog language modified compatible new prolog standard chapter program development significantly altered predicate defined moved appropriate chapter section efficiency moved considerably expanded chapter cut negation new section added stepwise systematic way constructing prolog program developed leon sterling one chapter part iii advanced prolog programming technique substantially changed major rearrangement new chapter interpreter describes rule language interpreter expert system better illustrates prolog used construct expert system chapter program transformation completely new chapter logic grammar add new material recognizing simple language showing grammar apply computer science example instructor resource downloadable instructor resource available title solution manual hardcover print isbn pp x march paperback x isbn pp x march author leon sterling leon sterling director eresearch chair software innovation engineering university melbourne coauthor art prolog second edition mit press editor practice prolog mit press ehud shapiro ehud shapiro senior scientist department applied mathematics weizmann institute science hardcover print isbn pp x march paperback x isbn pp x march
249,Lobsters,education,Education,An Introduction using Prolog to Specify Programming Language Semantics (2016),https://homepage.cs.uri.edu/faculty/hamel/pubs/fcs16.pdf,introduction using prolog specify programming language semantics,,obj length filter flatedecode stream u k w c sϕ bo hjlfb knv kt n c r endstream endobj obj type page content r resource r mediabox parent r endobj obj font r r r procset pdf text endobj obj length filter flatedecode stream g x nh u b
250,Lobsters,education,Education,CrashDB,https://github.com/gunnihinn/crashdb,crashdb,crashdb feature build use profile red method,crashdb crashdb ephemeral inmemory nosql database confident developer feature crashdb webscale data persisted process restarts using wrong http method crash database getting key nt database crash database using malformed json crash database system error crash database privacy security crashdb provide method reveal key currently stored database build make crashdb accepts commandline option argument use health check curl get value db curl x get data key mykey put value db curl x post data key mykey value myvalue key must string crashdb support arbitrary value encoded json curl x post data key mykey value foo bar learn improve debug thing somehow crashdb shortage problem discover fix improving crashdb improve developer author recommends following point aimed making single instance crashdb le terrible aimed treating crashdb like distributed system run sadnesssh google delve find looking become sad part life author note really work linux sadly discovered last throe pretending osx decent operating system development bend docker make work osx find improve error message get better idea went wrong collect error message somewhere search use issue tracker issue tracker keep track think wrong thing folder two folder called open closed text file version control perfectly good issue tracker beginner decide whether fix race condition run sadnesssh right embracing channel using fucking mutex like everyone world apparently reflect erlangelixir debate whether would problem find thing care improve crashdb direction realize week work thing bad idea work need thrown away ok question original design decision really necessary serialize deserialize value time add unacceptable overhead intricate key potential do vector craft keyvalue pair result arbitrarily bad performance profile crashdb get torture test sample query exhibit problem want fix performance characteristic program profile fix see impact make crashdb persistent figure store data restarts crash need worry data getting corrupted add monitoring crashdb service red method seems appropriate decide whether use push monitoring à la graphite pull monitoring à la prometheus support alternative serialization format json fine thing use number le fine consider binary format like protocol buffer use schema autogenerate client crashdb least one language run crashdb docker run two setup masterslave replication chain direct writes master read slave service discovery outside world run three instance slave elect new master original one becomes sad find zookeeper thing try query cluster outside
251,Lobsters,education,Education,Hack My House: Running Raspberry Pi Without an SD Card,https://hackaday.com/2018/10/08/hack-my-house-running-raspberry-pi-without-an-sd-card/,hack house running raspberry pi without sd card,raspberry pi infrastructure getting familiar raspberry pi pxe boot feature official writeup housekeeping preparation building pi boot image network sleuthing bind mount versatility tail command power pxe pi,many u experienced pain raspberry pi corrupted sd card suspect eraseonwrite nature flash memory responsible much problem regardless cause one solution use pxe booting raspberry pi fancy way say booting raspberry pi network instead sd card hacking house discussed last time using raspberry pi infrastructure building wall every room house want drag ladder screwdriver swap misbehaving sd card booting network really good solution know promised discus cabling camera think parenthetical article talk ethernet zoneminder next time let dive see preboot execution environment pxe use pxe raspberry pi getting familiar raspberry pi pxe boot feature new raspberry pi ship pxe boot enabled allowing pi load file system server network experience pi model b boot reliably older version either way good idea begin running rpiupdate additionally may need manually enable pxe booting sd card option added configtxt official writeup great guide one resource used stumbled pxe process first time however thing bit differently take moment consider network layout raspberry pi connect existing network new dedicated network use primary network router must support custom dhcp option openwrt router similar device capability stock dlink linksys probably need server home network provide file system pxe pi multiple approach using centos hardware could old desktop virtual machine even another raspberry pi assume server two interface one connected primary network second static ip dedicated raspberry pi network plan use single network skip dnsmasq step use server existing ip address instead housekeeping preparation code block take care initial dependency firewall setting enables needed service server need three primary service dnsmasq dhcp nfsutils nfs tftpserver tftp xinetd helper service tftpserver need unzip wget downloading extracting raspbian disk image install favorite text editor using nano policycoreutils package order work selinux allow service firewall set run automatically boot lastly block instruction setting selinux relaxed stance concerning tftp service sudo yum install dnsmasq tftpserver nfsutils xinetd unzip wget nano policycoreutilspython sudo firewallcmd permanent addservice sudo firewallcmd permanent addservice mountd sudo firewallcmd permanent addservice rpcbind sudo firewallcmd permanent addservice tftp sudo firewallcmd permanent addservice dhcp sudo systemctl enable xinetd sudo systemctl enable dnsmasq sudo systemctl enable rpcbind sudo systemctl enable nfsserver sudo setsebool p tftphomedir set directory structure pair temporary mount point download extract latest raspbian image sudo mkdir tftpboot sudo mkdir p mkdir bootmnt mkdir rootmnt wget http unzip booting pxe start dhcp option order something different point tftp server configure dnsmasq add option well listen interface ip address range change value appropriate case add etcdnsmasqconf configuration nfs simple specify directory want exported editing etcexports rw sync nosubtreecheck norootsquash xinetd stand extended internet daemon one service control several service including tftp configure xinetd config file etcxinetddtftp looking line serverargs disable adding two v flag increase verbosity need see file raspberry pi looking boot serverargs v v tftpboot disable building pi boot image kpartx invaluable tool keep linuxfu toolbox use mount partition contained disk image copy file system new pxe root pi look first bootcodebin also copy file place sudo kpartx v sudo mount rootmnt sudo mount bootmnt sudo cp rootmnt sudo cp bootmnt sudo cp tftpboot also customize filesystem pi first enable ssh access sudo touch next modify kernel boot line informing kernel look filesystem local disk mount nfs share root rootdevnfs udp rw ipdhcp rootwait elevatordeadline rootfstypenfs finally remove couple line pi fstab try mount filesystems nonexistent sd card edit remove last two line mount boot network sleuthing bind mount point ready see hard work paid reboot server pending change applied yes fairly easy apply hand without reboot step also test everything come back correctly power loss back watch system log powering pi connected new network al williams ran article versatility tail command worth look sudo tail f varlogmessages sep pxe xinetd start tftp sep pxe intftpd rrq filename bootcodebin sep pxe intftpd client finished bootcodebin sep pxe intftpd rrq filename bootsigbin sep pxe intftpd client file found bootsigbin sep pxe intftpd sending nak file found sep pxe intftpd rrq filename date differ pxe hostname server looking rrq ip address show everything going great time troubleshooting may notice pi actually booting quite done look back tftp log line need folder name pi looking happens serial number create folder inside tftpboot folder replace folder name log sudo mkdir need talk bind mount copying file folder raspbian builtin procedure update kernel aptget pxe transfer kernel stored tftp folder rest system mounted nfs share arrangement prevents pi updating kernel couple way fix today using bind mount think hard link directory add line server etcfstab using pi serial number folder name none default bind use mount command make bind mount live sudo mount power cycle pi come life power pxe pi number one problem raspberry pi system sd card problem booting network get around weakness assuming network server stable system purpose perfect choice since plan use raspberry pi threegang electrical box connected via ethernet using power ethernet said application ethernet connection need raspberry pi reliable long term good candidate pxe go next time set zoneminder finally put pi use let u know else want see missed time happy hacking
253,Lobsters,education,Education,"Summer is over — You should be coding, here’s yet another list of exciting ideas to build",https://medium.com/@wesharehoodies/summer-is-over-you-should-be-coding-heres-yet-another-list-of-exciting-ideas-to-build-a95d7704d36d,summer coding yet another list exciting idea build,create http server scratch node express go lang caddy,create http server scratchhttp one main protocol content served internet http server used serve static content like html cs jsbeing able implement http protocol scratch broadens bigpicture knowledge everything fit togetherfor example come node background express framework provides http serverfor challenge see set server without using librariesthe server serve html cs j contentimplement router scratchwatch change refresh serverif looking direction use go lang try build caddy http server scratch
254,Lobsters,education,Education,Iteration vs Recursion in Introduction to Programming Classes: An Empirical Study (2016),http://www.cit.iit.bas.bg/CIT_2016/v-16-4/06_paper.pdf,iteration v recursion introduction programming class empirical study,,obj endobj obj endobj obj extgstate procset pdftextimagebimagecimagei annots r r r r mediabox content rgroup tab endobj obj stream x wa gar f c z
255,Lobsters,education,Education,Set Up Prosody,https://jfm.carcosa.net/blog/computing/set-up-prosody/,set prosody,prosody prosody xmpp conversation procedure installing prosody prosody setup doc let encrypt enabling needed module included prosody getting installing additional module result,prosody prosody xmpp server people us mean instant messaging server anyone run talk anyone account xmpp server unlike centralized chat platform like whatsapp facebook messenger trust single big company run misuse data focusing prosody run prosody server experience easier set run others conversation easy use fullfeatured xmpp client chat app android add lot capability older client feature expect mobile messaging application like message history sending image video etc low battery use multiuser chat room simple endtoend encryption great mean federated endtoend encrypted messenger easy fun use signal whatsapp notsogreat xmpp modular standard mean every server every client implement part conversation new client offer lot new feature also make lot demand server lot module called xeps need server implement turned default need install xmpp server use conversation sign existing one even provide default guide want run family friend terribly hard get prosody support xeps take little bit work digging going save digging part procedure installing prosody going go installing prosody linux server probably available package manager installed like dnf install prosody system may use eg aptget pacman thing refer prosody setup doc basic configuration main thing need configure host serving encryption certificate selfsigned certificate may good enough using let encrypt prosody set basically able connect conversation basic chat either one one multiuser lot thing work though like omemo encryption want using enabling needed module included prosody first step enabling module bundled prosody enabled default need look etcprosodyprosodycfglua wherever config file installed default look like fedora may different system double hyphen comment list module prosody load startup look modmodulenamelua plugins folder make sure exists documentation module found http prosodyimdocmodules modulesenabled generally required roster allow user roster recommended saslauth authentication client server recommended want log tl add support secure tl connection dialback dialback support disco service discovery essential recommended private private xml storage room bookmark etc vcard allow user set vcards commented default performance impact privacy support privacy list compression stream compression note requires installed luazlib rpm package nice version reply server version request uptime report long server running time let others know time server ping reply xmpp ping pong pep enables user publish mood activity playing music register allow user register server using client change password admin interface adminadhoc allows administration via xmpp client support adhoc command admintelnet open telnet console interface localhost port http module bosh enable bosh client aka jabber http httpfiles serve static file directory http specific functionality posix posix functionality sends server background enables syslog etc group shared roster support announce send announcement online user welcome welcome user register account watchregistrations alert admins registration motd send message user log legacyauth legacy authentication used old client bot want add section locally needed carbon mam get lot way point thing conversation work including omemo encryption message syncing device offline delivery work sort may see oddity like duplicate message getting installing additional module remaining module need included community repository use mercurial clone repository repository includes bunch directory named modsomething copy one need whole directory prosody module directory system one need add list module locally needed carbon mam smack smacksnoerror cloudnotify csi blocking httpupload omemoallaccess result conversation account info menu toggle show server information set everything correctly look like everything checked go back list module make sure installed module need one widespread criticism xmppjabber excuse lack wider adoption many module standard guarantee compatibility client server hard take conversation requirement baseline xmpp server need support make sure server support thing many thanks everyone working conversation prosody including working prosody community module
256,Lobsters,education,Education,How to Become a Better Software Developer: A Handbook on Personal Performance,https://www.7pace.com/blog/become-a-better-programmer-skills-development,become better software developer handbook personal performance,hi,homepage time code become better software developer handbook personal performance hi use cooky offer better browsing experience analyze site traffic continuing use website consent use cooky back top
257,Lobsters,education,Education,Times Newer Roman is a sneaky font designed to make your essays look longer,https://www.theverge.com/2018/9/18/17875054/times-newer-roman-font-essay-length,time newer roman sneaky font designed make essay look longer,time roman tabagotchi chrome extension time newer roman,someone ostensibly professional writer say authority sometimes writing hard staring page three essay professor insisted least five page singlespaced size time new roman font sometimes need little help skiving student worth salt know usual trick make essay look longer use larger punctuation mark space mess around margin maybe even try creep larger font size easier solution time newer roman font internet marketing firm mschf may remember tabagotchi chrome extension time newer roman look lot like goto academic font character subtly altered percent wider making essay look longer without actually make longer please note verge actually condone cheating essay according time newer roman website singlespaced document point type requires word compared standard time new roman word need write twice length post get around thing like fact actual time new roman licensed font time newer roman actually altered version nimbus roman l free opensource font meant mimic size look original time new roman typeface change mschf made simply make nimbus roman l character wider leaving vertical height untouched hopefully tougher notice difference course digital age downside time newer roman work assignment submit hand pdf sending word document using custom font professor almost certainly installed help similarly time newer roman useful hitting larger page count strict word count limit luck time newer roman available free download please note verge actually condone cheating essay
258,Lobsters,education,Education,LEARN — Computer-Aided Instruction on UNIX (1979),http://a.papnet.eu/UNIX/v7/files/doc/07_learn.pdf,learn computeraided instruction unix,,obj stream e ւ
259,Lobsters,education,Education,Authoring,http://www.squeakland.org/resources/articles/article.jsp?id=1001,authoring,,take pulverized plant pulp stir water lift thin layer screen press dry made paper split reed lampblack water tree gum give u pen ink write unexamined life worth living question e make beautiful drawing compose fugue send around world without travel long passed away perhaps even wonderful every child immediately start express augment fresh new thought pen paper powerful idea every piece writing invite comment writing paper authoring always scribble reaction new thought margin favorite book eventually may get turned book perhaps supporting original author point view perhaps dissenting perhaps completely different idea got materialized spot come inexpensive efficient way make type make ink sticky multiply idea million printing press another powerful idea tom paine common sense page pamphet published anonymously author expense freely open copied account copy printed january june total population colony million word put shape conflict british galvanized enough uniformity opinion greet declaration independence acclaim carry grand experiment american democracy get coverage common sense today would require printing perhaps million copy population outrun important medium transmitting important complex idea computer internet require manufacturing technology infrastructure far beyond needed paper pen ink press would hope give u back enough paper printing worth effort dream personal computing dream making computer authoring medium especially authoring unique computer stuff imitate automate paper internet part dream simultaneously press post library new medium dream happening slowly computer user driving faster faster future steering looking rearview mirror use mark phrase mcluhan authoring done personal computer today automated paper document creation automated letter automated post office worse advent www browser internet disastrously turned user simple consumer browser permit kind balanced authoring internet content allowed happen almost beyond belief terrible setback squeak ancestry go back arpa research community created internet xerox palo alto research center created many pervasive technology personal computer window mouse user interface desktop publishing ethernet laser printer aim make technology could authored including child dimension computer extend able communicate creation squeak project original pioneer personal computing networking joined enthusiastic recent colleague get wide spectrum authoring back mainstream computing hope enjoy
260,Lobsters,education,Education,"A Brief, Animated Introduction to Programming with Python",https://ourcodestories.com/markm208/Playlist/16,brief animated introduction programming python,animated introduction programming python,playlist animated introduction programming python public playlist title introduction type tag changed
261,Lobsters,education,Education,Who pays to educate developers?,https://jvns.ca/blog/2018/09/01/who-pays-to-educate-developers-/,pay educate developer,teach hard thing dozen programming blog twitter company product sell individual people get paid exposure company make money recruiting recurse center http wwwrecursecomhire company sell education developer linux weekly news launch school school poetic computation eggheadio safari lynda udacity udemy coursera individual sell education developer programming book economics writing technical book sell training company paying learning material linux programming interface writing free writing money started selling zines,thinking developer education specifically education professional developer working year already last year last post talked teach hard thing learned thing even learning kind resource depend example place learned thing really great programming book conference talk hundred blog post subscribe dozen programming blog twitter meetups slack group thing tweet blog post conference talk etc take time make lot given away free pay work rough taxonomy add example people think great education work fit category love hear twitter company product sell one common way get paid money teach people programming become developer advocate think pretty cool thing basically lot company realized good way sell tech product explain tech concept behind product people way actually understand great example google cloud kubernetes lot google developer advocate write blog post give great talk explaining kubernetes talk often really helpful whether end using google product google get people understand kubernetes side effect also understand google kubernetesasaservice platform likely excited advantage using personally think great developer advocate often great programmer great teacher get paid something care get lot free highquality information world various complicated tech thing awesome downside though example google cloud developer advocate obviously focus subject somehow related google cloud individual people get paid exposure category personal blog post conference talk fall economics put together great blog post talk maybe folk industry recognizerespect likely want hire original motivation starting blog year ago wanted get better job job posted lot article hacker news try get reader think helped case way better job obviously still motivation probably main reason keep writing find rewarding people tell blog post helped learned something reason side effect easier get answer question tech know little easier get interview future job reassuring giving talk conference helped build network folk ask question learn industry pretty useful career example last week someone read blog emailed blue super interesting job awesome conversation learned something new kind job exist computer networking would definitely happened blog learning blogging speaking tech longterm investment future job opportunity pay company make money recruiting talk recurse center time produce educational material directly one interesting place level developer know free attend make money recruiting got current job company hired paid first year salary pay anything aside recommend recruiting rc want hire people good learning find http wwwrecursecomhire company sell education developer next bucket company sell educational material developer directly various example think kind interesting linux weekly news offer subscription get latest article really recommend subscribing great launch school class aim getting way better software job school poetic computation cool school nyc intersection art tech cost class eggheadio set javascript video tutorial reilly book video like safari lynda udacity udemy coursera online course various coding bootcamps individual sell education developer breaking company sell education developer seems like business differently flavoured reillylyndaudacityudemy sell information basically everything related programming usually individual people much narrower focus cool self publishing definitely fall category seems like much viable way actually make money teaching traditional publishing programming book going mostly talk programming book traditional publisher even though really important seem live complicated place writing free exposure making money fully understand instance economics writing technical book author say made hour work know typical people actually making money rate better publishing programming book traditional publisher curious know something know lot yet sell training company selling training company really logical pattern individual might willing pay class company might well willing pay inperson class example know area probably ton know paying learning material reflecting bit category seen devs want learn pay invest knowledge devs want teach pay share knowledge build network build reputation expert company pay educate employee company selling product pay educate future customer basically everything free life either category read really want though much adore blogger read feel like kind weird mostly learn free source incentive structure well aligned producing really excellent learning material one favourite source recently learn book linux programming interface free much reliable useful efficient source reading stack overflow answer linux book bought consistently excellent use time read find bit tricky writing free writing money reason thinking obviously started selling zines recently trying figure want change exactly fit whole ecosystem pretty comfortable right blogging fun get meet cool people writing internet anyone read clicking link great making change kind interestingscary see happens
262,Lobsters,education,Education,Sonic Pi - The Live Coding Music Synth for Everyone,https://www.youtube.com/watch?v=OLLwG_SN8oo&list=PLEx5khR4g7PKqVew27D3jvMknjxjowoKl&index=25,sonic pi live coding music synth everyone,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature goto get ready rock sonic pi live coding music synth everyone sam aaron youtube,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature goto get ready rock sonic pi live coding music synth everyone sam aaron youtube
263,Lobsters,education,Education,How we built a connected custom PCB badge for the Kentucky Derby,https://blog.particle.io/2018/08/29/bedazzled-badgelife-or-how-you-can-build-a-particle-powered-badge-fit-for-the-fanciest-occasions/,built connected custom pcb badge kentucky derby,,
264,Lobsters,education,Education,Beej's Quick Guide to GDB,https://beej.us/guide/bggdb/,beej quick guide gdb,beej quick guide gdb content compiling information official gdb documentation ddd datadisplaydebugger license brian beej jorgensen hall creative common attributionnoncommercialno derivative work united state license starting debugger breakpoints breakpoints stepping around examining variable misc stuff stack manipulation additional stepping method breakpoints jumping arbitrary section code breakpoints changing variable value runtime hardware watchpoints attach running process using coredumps postmortem analysis window function display register assembly writing frontend gdb documentation detail quick reference beej beejus,beej quick guide gdb release jun translation quickanddirty guide meant get started gnu debugger gdb command line terminal often time gdb run via ide many people shun ides variety reason tutorial gettingstarted guide much much much learn debugger written short paragraph check man page online resource listed info tutorial meant read order including misc section content compiling tell compiler compile code symbolic debugging information included gcc g switch gcc g helloc hello g g hellocpp hello done able view program listing debugger information check official gdb documentation information shake stick also good gnu gdb frontend ddd datadisplaydebugger license beej quick guide gdb brian beej jorgensen hall licensed creative common attributionnoncommercialno derivative work united state license starting debugger first thing first enter help gdb prompt get information also enter quit quit debugger finally hitting return repeat last command entered let fire several way start debugger eg ide might start particular mode humanfriendly mention two vanilla console mode curse gui mode gui better let quickly cover simple one launch program called hello debugger gdb hello gnu gdb copyright c free software foundation inc license gnu gpl version later http gnuorglicensesgplhtml free software free change redistribute warranty extent permitted law type show copying show warranty detail gdb configured gdb run starting program homebeejhello hello world program exited normally gdb last line gdb prompt waiting tell type r run run program gdb allows abbreviate command become ambiguous start neato highlyrecommended gui mode start debugger gdb tui many example show output gdb dumb terminal mode real life use tui mode exclusively screenshot see approximately normal gdb command work gui mode additionally arrow key pguppgdown key scroll source window focus default also change file function displayed source window giving command list location argument example list bring file helloc line see breakpoints sample location work breakpoints work list command side note list also work dumb terminal mode notice passed name executable command line another option start gdb nothing else command line give command file hello cause executable hello loaded command line argument get something argv program pas argument run command start execution gdb hello gnu gdb copyright c free software foundation inc license gnu gpl version later http gnuorglicensesgplhtml free software free change redistribute warranty extent permitted law type show copying show warranty detail gdb configured gdb run starting program homebeejhello hello world program exited normally gdb notice say starting program show argument passed hello breakpoints starting debugger run program straight nt need stop execution get stepping mode first issue run command need set breakpoint someplace like stop use break b command specify location function name line number source file line number example location used various command well break break mainbreak beginning main function break line current file break line helloc test let set breakpoint main start program gdb hello gnu gdb copyright c free software foundation inc license gnu gpl version later http gnuorglicensesgplhtml free software free change redistribute warranty extent permitted law type show copying show warranty detail gdb configured gdb b main breakpoint file helloc line gdb r starting program homebeejhello breakpoint main printf hello world n gdb see arrived main execution stopped breakpoint set running dumb terminal mode gdb print line execute next running cool gui mode line execute next highlighted source window list current breakpoints use info command like info breakpoints shorter b gdb b main breakpoint file helloc line gdb b num type disp enb address breakpoint keep main clear breakpoint use clear command breakpoint location also clear breakpoint number delete command additionally enable disable breakpoints though two command take breakpoint number argument location enableddisabled status breakpoint visible enb column breakpoint listing gdb b num type disp enb address breakpoint keep main gdb disable gdb b num type disp enb address breakpoint keep n main gdb clear main deleted breakpoint gdb b breakpoints watchpoints stepping around execution stop breakpoint tell debugger thing let start next command n command move next statement current function return function caller stepped end function sample run remember gdb printing line execute next gdb prompt also notice run next printf line see output appear gdb b main breakpoint file helloc line gdb r starting program homebeejhello breakpoint main printf hello world n gdb next hello world return gdb next gdb next libcstartmain gdb next single stepping exit function libcstartmain line number information program exited normally gdb weird stuff end libcstartmain show another function called main function nt compiled debugging information ca nt see source still step program exit normally notice next step function call nt mean function nt get called mean next execute function done return next line current function function want step current function trace function linebyline use step command work like next except step function let say tired single stepping want program run use continue c command continue execution program running forgot set breakpoints hit ctrlc stop program wherever happens return gdb prompt point could set proper breakpoint somewhere continue breakpoint one final shortcut hitting return repeat last command entered save typing next examining variable variable wish inspect course run display variable currently scope time step code value variable displayed scope following output missing source code output line see gui mode imagine seeing highlight bar bouncing around source code running gdb b main breakpoint file helloc line gdb r starting program homebeejhello breakpoint main gdb disp gdb next gdb next gdb next gdb next gdb next gdb next gdb next gdb number left display number variable use number undisplay variable forget display number type info display get gdb b main breakpoint file helloc line gdb r starting program homebeejhello breakpoint main gdb display gdb info display autodisplay expression effect num enb expression gdb undisplay gdb want oneoff know value variable print see value gdb print gdb number mean something important beginner also handy printf command use better format output want gdb printf dn gdb printf gdb misc stuff stuff nt really fit earlier section fun enough list somewhere stack manipulation command backtrace bt show current function call stack current function top caller order beneath gdb backtrace subsubfunction subfunction main gdb type help stack info additional stepping method exit current function return calling function use finish command step single assembly instruction use stepi command continue specific location use advance command specifying location like shown breakpoints section example advance current location function subsubfunction called breakpoint main printf hello world n gdb advance subsubfunction hello world subsubfunction printf deepest n gdb advance shorthand continue temporary breakpoint jumping arbitrary section code jump command work exactly like continue except take location jump argument see breakpoints section information location need stop jump destination set breakpoint first changing variable value runtime use set variable command expression evaluate allows change value variable run also shorthand using set parenthesized expression breakpoint main int gdb print gdb set gdb print gdb set variable gdb print gdb along jump command help repeat section code without restarting program hardware watchpoints hardware watchpoints special breakpoints trigger whenever expression change often want know variable change written use watch command breakpoint main int gdb watch hardware watchpoint gdb continue continuing hardware watchpoint old value new value main gdb continue continuing hardware watchpoint old value new value main gdb note watch take expression argument put variable name something complex like even tried conditional expression like mixed result get list watch point info break info watch delete number delete command finally use rwatch detect variable read use awatch detect variable either read written attach running process program already going want stop debug first need process id pid number get unix p command use attach command pid attach break running program start gdb argument following complete run notice thing first attach running process tell function deep called nanosleepnocancel nt surprising since called sleep code indeed asking backtrace show exactly call stack say finish couple time get back main gdb gnu gdb copyright c free software foundation inc license gnu gpl version later http gnuorglicensesgplhtml free software free change redistribute warranty extent permitted law type show copying show warranty detail gdb configured gdb attach attaching process reading symbol homebeejhello done reading symbol done loaded symbol reading symbol done loaded symbol reading symbol done loaded symbol reading symbol done loaded symbol nanosleepnocancel gdb backtrace nanosleepnocancel sleep main gdb finish run till exit nanosleepnocancel sleep gdb finish run till exit sleep main sleep gdb list int sleep return gdb print gdb quit program running quit anyway detach n detaching program homebeejhello process notice get back main print value case program running second get incremented per second quit debugger detached program program return running normally mix set variable got power using coredumps postmortem analysis let say build run program dump core reason another cc g foo fooc foo segmentation fault core dumped mean core file memory snapshot time crash created name core getting core file say segmentation fault core file created might ulimit set low try typing ulimit c unlimited shell prompt fire gdb c option specify core file gdb tui c core foo tui mode greeted screen information telling program exited signal segmentation fault highlight offending line dumb terminal mode offending line printed example print variable causing problem indeed null even nt source code often useful get backtrace point program crashed window function tui mode get list existing window info win command change window focus focus f command focus take either window name prev next argument valid window name src source window cmd command window regs register window asm assembly window see next section use window note src window focus arrow key move source code cmd window focus arrow key select previous next command command history record command move src window single line single page gdb info win src line focus cmd line gdb f next focus set cmd window gdb info win src line cmd line focus gdb f src focus set src window gdb window name case insensitive winheight wh command set height particular window bad luck working well display register assembly tui mode layout command control window see additionally tui reg allows control register window open already open command layout srcstandard top command window bottom layout asmjust like src layout except assembly window top layout splitthree window source top assembly middle command bottom layout regopens register window top either source assembly whichever opened last tui reg generalshow general register tui reg floatshow floating point register tui reg systemshow system register tui reg nextshow next page important might page register nt general float system set nifty screenshot whet appetite showing source assembly split mode assembly code come two flavor intel machine intel set one appears disassembly window set disassemblyflavor valid value intel att already assembly window open close reopen layout src followed layout split example display register dumb terminal mode type info register integer register info allregisters everything writing frontend thinking wow pretty cool could write killer frontend thing worked much better gdb support call machine interface interpreter gdbmi interpreter selected gdb command line interpreter switch basically launch gdb read command result probably using pipe pretty straightforward see gdb documentation detail quick reference command parameter italic optional parameter square bracket command abbreviated become ambiguous list incomplete show thing talked tutorial help commandget help certain command apropos keywordsearch help particular keyword gdb tui c core exename unix command start gdb executable standalone specify tui start tui gui specify c corefile name see crash occurred run run currently loaded program given command line argument quitexit debugger file exenameload executable file name break locationset breakpoint location line number file eg main watch expressionbreak variable written rwatch expressionbreak variable read awatch expressionbreak variable written read info breakdisplay breakpoint watchpoint information number info watchsame info break clear locationclear breakpoint location delete numdelete breakpoint watchpoint number nextrun next line function stepstep function line possible stepistep single assembly instruction continuekeep running ctrlcstop running wherever finishrun end current function advance locationadvance location line number file eg somefunction jump locationjust like continue except jump particular location first display expressiondisplay value variable expression every step expression must make sense current scope info displayshow list expression currently displayed number undisplay numstop showing expression identified number see info display print expressionprint value variable expression printf formatstr expressionlistdo formatted output printf eg printf p sn p set variable expressionset variable value eg set variable set expression work like set variable info winshows current window info focus winnameset focus particular window bby name src cmd asm reg position next prev fsalias focus layout typeset window layout src asm split reg tui reg typeset register window layout general float system next winheight valset window height either absolute value relative value prefaced whalias winheight set disassemblyflavor flavorset lookandfeel disassembly intel machine valid flavor intel att returnhit return repeat last command backtraceshow current stack btalias backtrace attach pidattach alreadyrunning process pid info registersdump integer register screen info allregistersdump register screen copyright brian beej jorgensen hall beej beejus
265,Lobsters,education,Education,Introduction to Digital Filters,https://karlhiner.com/jupyter_notebooks/intro_to_digital_filters,introduction digital filter,introduction digital filter jupyter notebook geometric interpretation digital audio filter june,need enable javascript run appintroduction digital filtersjupyter notebook geometric interpretation digital audio filtersjune
266,Lobsters,education,Education,Logic in Action: an open course in logic,http://www.logicinaction.org/,logic action open course logic,logic action johan van benthem han van ditmarsch jan van eijck jan jaspars logic action old discipline new twist stanford online highschool curriculum discrete structure course slide teaching netherlands network humanity social science technology platform beta techniek logic download chapter classical system propositional logic download chapter syllogistic reasoning download chapter world according predicate logic download chapter knowledge action interaction knowledge information flow download chapter logic action download chapter logic game interaction download chapter method validity testing download chapter proof download chapter computation download chapter appendix set relation function download chapter,logic action open course logic developed johan van benthem han van ditmarsch jan van eijck jan jaspars homepage logic action open course project project developed provide modern introduction field logic topic reflecting mathematical essential broad view interdisciplinary role material written elementary intermediate course logic assist teacher also intrepid reader engaging selfstudy material freely available overview idea behind course well experience developer teacher see paper logic action old discipline new twist find individual chapter selfcontained introduction logic academic course used tested material given course also part stanford online highschool curriculum book used course text discrete structure course department computer science national university ireland maynooth co kildare pdf version textbook downloaded link individual chapter manuscript given also slide teaching available english spanish made fernando velazquez quesada exercise material chapter courtesy dora achourioti auc found online exercise modal logic important topic course found development site cofunded center creation content technology part netherlands network humanity social science technology subsidy platform beta techniek logic gottfried wilhelm leibniz science logic mean study valid reasoning century philosophical discipline nowadays information era part scientific background assumed researcher wide diversity scientific background mathematics computer science linguistics cognitive science economics first chapter variety example valid invalid reasoning presented informally discussed material presented historical canvas development logic western eastern world download chapter classical system propositional logic propositional logic purely sentential system originating stoic philosopher first completely formal version propositional logic presented around george boole picture published famous law thought although language propositional logic simple logic expressive powerful witnessed fact digital computation modeled propositional reasoning although admittedly rather lowlevel representation download chapter syllogistic reasoning aristotle chapter go back antiquity syllogistics logic quantified expression introduced aristotle syllogistics dominated study logic western world century since second half century syllogistics mathematically wellunderstood introduce explain system make use socalled venndiagrams british mathematician john venn addition discus syllogistics modeled propositional reasoning syllogistics corresponds natural fragment propositional logic validity computed low computational cost whether efficient validity testing method full propositional logic exists still unknown although widely believed case download chapter world according predicate logic gottlob frege system predicate logic quantification combined sentential operation propositional logic unlike syllogistics predicate logic allows multiple quantification combined expression relation object german philosopher gottlob frege proposed formalism begriffsschrift concept language hoped mathematical reasoning could represented precise formal manner nowadays predicate logic common logical system representing reasoning mathematics many field download chapter knowledge action interaction knowledge information flow jaakko hintikka chapter introduces logic knowledge otherwise called epistemic logic essential difference classical system part epistemic logic reasoner agent incorporated within system epistemic logic allows one formalize reasoning agent knowledge ignorance well knowledge ignorance agent epistemic logic go back work finnish philosopher jaakko hintikka picture early chapter also discus recent development culmi nating system able model various act communication agent effect download chapter logic action vaughan pratt chapter introduces dynamic logic system introduced computer science reasoning behaviour computer program vaughan pratt others later turned dynamic logic application well dynamic logic viewed general logic action effect allows u reason agent know say also effect action download chapter logic game interaction ernst zermelo game always played important role history logic many sort interactive game two opposing player used tool demonstrating validity invalidity inference determine truth falsity utterance socalled evaluation game discus several example application game classical system part well system part next focus game theory studied economics social science formal model human social behaviour explain relates logic game download chapter method validity testing evert willem beth chapter explains socalled tableausystem evert willem beth picture tableau meant general method decide validity inference propositional logic predicate logic show system work propositional logic predicate logic single agent epistemic logic tableau method systematic search construction method countermodels countermodel constructed demonstrates invalidity inference validity inference demonstrated showing countermodels exist tableau construction complete method logic discussed chapter every valid inference propositonal logic predicate logic single agent epistemic logic tableau method demonstrate countermodels exist download chapter proof gerhard gentzen tableau method deciding validity logical argument useful analysis tool quite faithful way human reason practice chapter introduce system reasoning called natural deduction rule meant reflect formal structure mathematical proof find textbook rule also quite close way sound reasoning proceeds daily life discus system propositional logic predicate logic well known system arithmetic extension predicate logic system discussed chapter go back work influential german logician mathematician gerhard gentzen picture streamlined later swedish logician dag prawitz download chapter computation alain colmerauer chapter explained predicate logic used programming chapter give introduction concept used automating logical theorem proving lead computational tool underlying well known logic programming language prolog popular ai computational linguistics inferential mechanism behind prolog called sldresolution reasoning engine natural fragment predicate logic socalled hornfragment download chapter appendix set relation function georg cantor chapter explains basic formal set notation give introduction relation function chapter end short account principle proof mathematical induction download chapter
267,Lobsters,education,Education,How to pretend you have social skills,https://notamonadtutorial.com/how-to-pretend-you-have-social-skills-963ced9d8642,pretend social skill,kill dog job find solution problem truth heart communication technical problem people problem know difference,role lambda help young developer train social skill perform best soft skill secondary technical knowledge make knowledge shine making useful human being work lot good technical developer tend underestimate need socialsoft skillsfirst let define social skill according wikipedia social skill involve coordination adjusting action relation others actionsmentoring teaching helping others something eg study partner negotiation discussion aimed reaching agreementpersuasion action fact persuading someone persuaded believe somethingservice orientation actively looking way evolve compassionately grow psychosocially peoplesocial perceptiveness aware others reaction able respond understanding mannersince many people asked develop soft skill common problem thought share vignette lambda hope find interesting dodon kill dogtwo programmer received message client via slack message seemed pretty straightforward said feature x working next tech lead client listed series detailed step solve problem client pretty new needed help understand solve since issue related business rule know diligent programmer followed step carefully done reported back client done went fulfill task awaiting githuba hour later programmer shocked hear client happy feature x still working client demanded followed instruction sent letter programmer cried repeated defense talked issue day later weekly workshopwell said paused trying come metaphor would put thing perspective saw simon office dog take simon vet stomach ache tell vet please anestesize cut open swap liver bladder stitch vet promptly stop tell need find alternative solution alternatively exactly said simon dy know need find better vet client described problem fact helpfully provided path solution mean wanted blindly follow step call day primary goal always fixing problemthe takeaway job find solution problem test solution make sure provided solution client problem suggestion may help job spell solution otherwise would programbynumbers always remember goal test see met goal provided solution work try another one permission modify something report back client need know fixed whythe truth hearti coaching programmer interview client one topic expected would come opinion different programming language tool know interviewer style interview could structured like casual conversation programming began basic openended question like programming language prefer two type wrong answer question call one dogmatic answer judgement day answerthe dogmatic know exactly answer question one possible answer one language conquer language usually one happen use language every feature matter none disadvantage really important almost anything problem solved using language naysayer stupidon hand judgement day answer one programmer make mind centered person like precise think issue taking stance great quality critical thinker interview setting hesitation could taken wrong way hummed hawed pressuring bit came haskell well said prefer quickly made two three valid point also mentioned downside clearly thought pro con language paused said candidly sure haskell really favorite programming language well told judgement day come better think many pro con language entire book could written one better others settle accurate answer question really thati mean sure interviewer want know programming language prefer truly want find decent interviewer analysis behind choice choose language aware downside know situation best one correct answer haskell would good answer erlang long able justify iti find happens often le experienced devs heart pure eager search soul hand deepest truth also sure exactly evaluated interview questionsof course company work erlang fervently praise cobol interviewer might think good match sum long answer relevant well justified forgiven plunging hand chest pulling heart finding programming language written thereso young developer world fret feel paralyzed interviewer asks see five year remember want read future want learn motivation goal thing go favorite programming language however also mind person interviewing might lack social skill entirely control output interviewcommunicationmost programmer lambda speak english second language first one spanish since communication programmer often englishspeaking client key perform well devised series exercise improve communication skillsin order clientprogrammer conversation code effective similar representation code mind code abstract structure build structure head order discus also important able clearly articulate understand transformation want make structure often nonnative languageso began exercise built series increasingly complex structure using common office object photographed scattered element table instructed one person look photograph structure give verbal instruction another person replicate structure photographthis proved challenging seemed trial error frequent encouraged give precise instruction rotate spoon many degree direction ideally sentence would selfexplanatory step followed without trial errori instructed executor instruction proceed deactivating bomb make move absolutely certain movement going accurate ask clarificationby third fourth iteration sentence become longer better structured language precise executor also alert made sure understood instruction perfectlytechnical problem people problem know differencesometimes personal issue disguised technical one example worker repeatedly pointing minor mistake colleague front thirdparties might motivated desire improve quality work make feel uncomfortablewhen first learned identify sort situation one case popped programmer working client cooperation another service company tech lead company project since beginning keen newcomer frequently withheld information programmer needed complete task bent chastising mistake general chatthe situation bad legitimate concern attempt push programmer project situation handled great care make matter worseso one occasion chastising particularly bad unwarranted project manager intervened answered chat channel work carried according plan basis criticism made effectively standing angry tech lead programmer sword shiny armor ready defend attacksone le experienced programmer however felt bad situation wanted placate angry tech lead know done wrong wanted make situation okso following epic defense project manager wrote apology channel opened flank angry tech lead continue attack rendering project manager defense uselesswe analyzed dynamic later hierarchical structure company dictated higher deflecting attack need take hit fact taking hit could justify subsequent attack angry tech leadtwo lesson drawn first trust higherups handling situation least talk first probably protecting secondly dissected situation distinguished constructive criticism destructive criticism constructive criticism given spirit cooperation respect provides information correct mistake avoid future also often dosed overwhelm recipient unless matter urgent task focus problem person case little cooperation since information withheld criticism flowed like cascade focus accomplish task efficientlywhat first seemed technical problem revealed people problem took u little understanding complex relationship realmslike captain spock combine world logical thinking human dimension may seem irrational analyzed cold prisma mathematical rationality logic meaning need develop skill area ultimately human working human code tool
268,Lobsters,education,Education,What Kinds of Exercises Do You Use to Teach Programming?,http://third-bit.com/2017/10/16/exercise-types.html,kind exercise use teach programming,write run write run write run fill blank fill blank parson problem parson problem tracing execution write run multiple choice question theme variation manytomany matching problem parson problem tracing execution parson problem multiple choice question ranking multiple choice question multiple choice question theme variation tracing value,every mechanic favorite screwdriver every good teacher different kind exercise check student actually learning let practice new skill keep engaged type exercise well known others widely used online coding platform support keen find new thing try new way use already order considered inclusion article exercise quick learner possible check answer automatically requirement rule useful kind assessment surprised many remain let start two type exercise people familiar first multiple choice question present question asks student pick correct answer list might fact require read remember previous post discussed multiplechoice question effective wrong answer probe specific misconception student part example homerepl use l appropriate argument get listing file directory homereplseasonal following file directory autumncsv fallcsv springcsv wintercsv second type exercise write run student write code produce specified output code submitted check structure andor output give feedback write run exercise simple complex instructor want example often enough novice simply ask call function method experienced instructor often forget hard figure parameter go example matrix contains data read file using one function method call create matrix z shape contains zero write run exercise help student practice skill want learn writing good automated check hard student find creative way get right answer demoralizing give false negative one way reduce often occurs give small test suite run code submit point run comprehensive set test help catch case student completely misunderstood written spec exercise help student realize hard write good test instructor get instead writing code satisfies specification asked write test determine whether piece code conforms spec example function monotonicsum calculates sum section list number value monotonically increasing example given input output write run unit test determine following bug function contains considers every negative number start new subsequence include first value subsequence subsum include last value subsequence subsum restarts sum value decrease rather fail increase fill blank refinement write run student given starter code asked complete practice many write run exercise actually fill blank instructor provide comment remind student step take novice often find fill blank le intimidating writing code scratch since instructor provided answer structure submission much easier check example fill blank code print string hat text slice text print slice parson problem another kind exercise avoids blank screen terror problem student given line code needed solve problem put right order research past year shown parson problem effective allow student concentrate control flow order thing separately vocabulary need research show giving student line need asking rearrange line add make kind problem significantly harder mobile platform direct support parson problem emulated albeit somewhat clumsily asking student rearrange code editor example rearrange indent line calculate sum positive negative value list positive return negative positive v else positive v negative v value negative v tracing execution inverse parson problem given line code student trace order line executed essential debugging skill good way solidify student understanding loop conditionals evaluation order function method call yet support directly emulated student type list line label example order labelled line block code executed vals b inversesum try v vals c inversesum except pas tracing value similar tracing execution instead spelling order code executed student asked list value one variable take program run implemented student type answer quickly becomes impractical practice best approach give student table whose column labelled variable name whose row labelled line number example line text pas pipe final redirect file run unix shell command cut f filename sort uniq resulttxt returning debugging skill another exercise help student develop minimal fix given line code contain bug student must either make identify smallest change produce correct output making change done using write run identifying done multiple choice question example function supposed test whether point x lie strictly within rectangle defined xmin ymin xmax ymax change one line make correctly def inside point rect pointx rectxmin return false pointy rectymin return false pointx rectymax return false pointy rectymax return false return true theme variation exercise similar instead making change fix bug student asked make small alteration change output specific way alteration include replacing one function call another changing one variable initial value swapping inner outer loop changing order test chain conditionals changing nesting function call order method chained give student chance practice useful realworld skill fastest way produce working program often tweak one already something useful example change inner loop control function set upper left triangle matrix zero def zerotriangle matrix c range matrixcols r range matrixrows matrix r c matching problem another entire family exercise onetoone matching problem give student two list equal length asks pair corresponding item eg match piece code output produce example match function name operation implement sgemvtriangular banded matrixvector multiply stbmvsolve triangular matrix multiple righthand side strsmmatrixvector multiply manytomany matching problem similar list length item may matched several others kind require student use higherorder thinking skill manytomany difficult student easy match first reduce search space platform currently support matching problem emulated student submit list pair text clumsy errorprone future implementation could reuse machinery built parson problem let student drag drop block text form match draganddrop would open many door example tracing execution easy implement way labelling diagram rather student typing label faster reliable drag label around attach correct element picture complex data structure code executed variable point part structure graph program produce match piece code part graph generated code match term example program element many thing example label following diagram show structure variable x z refer three line code executed x x x z x drawing diagram thing like data structure also straightforward paper difficult grade automatically one way make solution gradable may constrain drawing way parson problem constrain code construction ie give student piece diagram ask arrange correctly long way mentioned earlier matching problem require student use higherorder thinking skill summarization also give chance practice skill useful reporting bug rather fixing example student asked sentence best describes output f change x varies given several option multiple choice question similarly ranking problem present student several choice ask order fastest slowest robust brittle ranking manageable implemented drag drop multiple choice question one kind exercise implemented multiple choice question fault mapping given piece buggy code error message student identify line error occurred simple case line mentioned error message subtle case student trace execution forward backward figure thing first went wrong platform directly support kind exercise yet others hard online platform provide refactoring exercise complement theme variation exercise given working piece code student modify way without changing output example student could asked replace loop vectorized expression simplify condition loop etc challenge often many way refactor piece code grading requires human intervention example write single list comprehension effect loop result v value len v threshold resultappend v code review hard grade automatically general case tackled student given rubric ie list fault look asked match particular comment particular line code example student told two indentation error one bad variable name asked point advanced could given half dozen kind remark could make code without guidance many find tracing value easiest student presented table currently support example using rubric provided mark line code def addem f open f readlines x x xstrip change v print total total tot tot int v print total poor variable name unused variable use undefined variable missing value fossil code undoubtedly many kind exercise also fast automatically gradable heard know enjoy hearing thanks everyone contributed idea post including francis castro katie cunningham brian dillingham mark guzdial ian hawke toby hodges colleen lewis jeramia ory alex pound danielle quinn ariel rokem pat schloss malvika sharan richard tomsett stéfan van der walt hadley wickham andromeda yelton
269,Lobsters,education,Education,"A Visual, Intuitive Guide to Imaginary Numbers",https://betterexplained.com/articles/a-visual-intuitive-guide-to-imaginary-numbers/,visual intuitive guide imaginary number,understanding e really understanding negative number francis maseres enter imaginary number visual understanding negative complex number saw last time rotation number decade finding pattern de moivre understanding complex number everywhere real example rotation work aside complex number year detail complex arithmetic epilogue still strange wikipedia dr math discussion imaginary number exist join monthly reader post series visual intuitive guide imaginary number intuitive arithmetic complex number understanding complex multiplication work intuitive guide angle degree radian intuitive understanding euler formula interactive guide fourier transform intuitive understanding sine wave intuitive guide linear algebra programmer intuition matrix multiplication imaginary multiplication v imaginary exponent,imaginary number always confused like understanding e explanation fell one two category mathematical abstraction equation work deal used advanced physic trust u wait college gee great way encourage math kid today assault topic favorite tool secret weapon learning analogy approach imaginary number observing ancestor negative guidebook make sense yet hang end hunt put headlock instead reverse video walkthrough video really understanding negative number negative number easy imagine european mathematician know write simple exactly mean take cow could le nothing negative considered absurd something darkened whole doctrine equation francis maseres yet today absurd think negative logical useful try asking teacher whether negative corrupt foundation math happened invented theoretical number useful property negative something touch hold describe certain relationship well like debt useful fiction rather saying owe reading word see write know mean hole earn money pay debt record transaction easily afterwards mean clear positive negative sign automatically keep track direction need sentence describe impact transaction math became easier elegant matter negative tangible useful property used became everyday item today call someone obscene name get negative let smug struggle negative number huge mental shift even euler genius discovered e much understand negative today considered meaningless result later made style testament mental potential today child expected understand idea confounded ancient mathematician enter imaginary number imaginary number similar story solve equation like day long answer suppose wiseguy put teensy tiny minus sign uh oh question make people cringe first time see want square root number le zero absurd historically real question answer like imagine wiseguy seems crazy like negative zero irrational nonrepeating number must seemed crazy first real meaning question right wrong socalled imaginary number normal every number fake tool describe world spirit assuming exist let assume number exists multiply get happens well first get headache playing let pretend exists game actually make math easier elegant new relationship emerge describe ease may believe like fuddy old mathematician believe new braintwisting concept hard make sense immediately even euler negative showed u strange concept still useful dislike term imaginary number considered insult slur designed hurt feeling number normal number name imaginary stuck use visual understanding negative complex number saw last time equation really mean transformation x applied twice turn two answer x x scale scale flip flipping taking opposite one interpretation multiplying negative let think really transformation x applied twice turn hrm multiply positive twice result stay positive multiply negative twice result flip back positive second multiplication rotation sound crazy imagine x rotation degree applying x twice degree rotation flip yowza think could rotate twice direction clockwise turn negative rotation multiplication multiply twice first multiplication would turn second turn really two square root pretty cool sort answer mean new imaginary dimension measure number number become rotated multiplying rotation degree counterclockwise multiplying rotation degree clockwise two rotation either direction brings u back regular dimension positive negative number number yes mind bending like decimal long division would mindbending ancient roman mean number strange new way think math asked turn two step found answer rotate degree strange new way think math useful way geometric interpretation complex number arrive decade discovered also keep mind counterclockwise positive human convention easily could way finding pattern let dive detail bit multiplying negative number like get pattern since change size number sign flip back forth number x get idea useful number x represent good bad hair week suppose week alternate good bad good week like week x mean bad hair week notice negative number keep track sign throw calculator without count week good week week thing flip back forth modeled well negative number ok happens keep multiplying funny let reduce bit question much cdot cdot cdot ah rotation counterclockwise rotation clockwise neat cdot cdot cdot cdot rotation bring u full circle cdot cdot go represented visually cycle every rotation make sense right kid tell left turn turn rather focusing imaginary number look general pattern x x x x like negative number modeling flipping imaginary number model anything rotates two dimension x anything cyclic circular relationship anything mind co sin de moivre future article editor note kalid electroshock therapy treat pun addiction understanding complex number another detail cover number real imaginary bet say rotate entire degree keep foot real dimension another imaginary one look like degree angle equal part real imaginary like hotdog mustard ketchup say need choose fact pick combination real imaginary number make triangle angle becomes angle rotation complex number fancy name number real imaginary part written bi real part b imaginary part bad one last question big complex number measure real part imaginary part isolation would miss big picture let step back size negative number whether count distance zero case negative another way find absolute value complex number measure two component degree angle pythagoras geez theorem show everywhere even number invented year time yes making triangle sort hypotenuse distance zero neat measuring size easy dropping negative sign complex number us let take look real example rotation going wait college physic use imaginary number let try today much say complex multiplication keep mind let take look suppose boat heading unit east every unit north want change heading degree counterclockwise new heading hotshot say simple take sine cosine gobbledegook fluxsom crack sorry break calculator care answer question let try simpler approach heading whatever angle really care want rotate degree well degree perfect diagonal multiply amount idea original heading unit east unit north rotate counterclockwise degree multiply multiply together get new orientation unit west east unit north could draw follow yowza found second without touching sine cosine vector matrix keeping track quadrant arithmetic touch algebra crossmultiply imaginary number rotation rule baked work even better result useful heading instead angle atan keeping mind quadrant exactly planning drawing following angle protractor keep around convert cosine sine find reasonable ratio sketch triangle complex number beat instantly accurately without calculator like find use mindblowing well afraid math toot horn sorry trigonometry great complex number make ugly calculation simple like calculating cosine ab preview later article give full meal aside people think hey useful northeast heading instead degree angle follow really ok look right hand angle bottom pinky top index finger good luck figuring heading least say oh x inch across inch chance working bearing complex number whirlwind tour basic insight take look first chart make sense much beautiful zany number brain tired goal simple convince complex number considered crazy useful like negative number show complex number make certain problem easier like rotation seem hot bothered topic reason imaginary number bee bonnet year lack intuitive insight frustrated finally insight bursting share frustrates reading blog wildeyed lunatic classroom suffocate question chug search share clean intuitive insight egad better light candle curse darkness thought one shine spotlight thinking figured topic like number keep u roman numeral land much complex number check detail complex arithmetic happy math epilogue still strange know still strange try put mind first person discover zero zero weird idea something represent nothing eluded roman complex number similar new way thinking zero complex number make math much easier never adopted strange new number system still counting finger repeat analogy easy start thinking complex number normal let keep mind open future chuckle complex number distrusted even want nittygritty check wikipedia dr math discussion another argument imaginary number exist join monthly reader enjoy article plenty help build lasting intuitive understanding math join newsletter bonus content latest update post series visual intuitive guide imaginary number intuitive arithmetic complex number understanding complex multiplication work intuitive guide angle degree radian intuitive understanding euler formula interactive guide fourier transform intuitive understanding sine wave intuitive guide linear algebra programmer intuition matrix multiplication imaginary multiplication v imaginary exponent
270,Lobsters,education,Education,Introduction to Computer Organization with x86-64 Assembly Language & GNU/Linux,http://bob.cs.sonoma.edu/IntroCompOrg-x64/book.html,introduction computer organization assembly language gnulinux,copyright notice,copyright notice copyright robert g plantz right reserved author used best eﬀorts preparing book author make warranty kind expressed implied regard program documentation contained book author shall liable event incidental consequential damage connection arising furnishing performance use program product service mentioned book trademark service mark respective company organization eclipse trademark eclipse foundation inc
271,Lobsters,education,Education,An Animated Introduction to Programming in C++,https://ourcodestories.com/markm208/Playlist/2,animated introduction programming c,animated introduction programming c,playlist animated introduction programming c public playlist title introduction type tag changed
272,Lobsters,education,Education,The Case for Teaching Functional Programming in Discrete Math (2011),https://cs.wheaton.edu/~tvandrun/dmfp/case4dmfp.pdf,case teaching functional programming discrete math,,obj length filter flatedecode stream ah w p
273,Lobsters,education,Education,NumWorks Graphing Calculator,https://www.numworks.com/,numworks graphing calculator,ideal exam sidekick,ideal exam sidekick numworks graphing calculator included list permitted calculator college board test sat ap psat etc also meet requirement act calculator policy
274,Lobsters,education,Education,The Hidden Perils of Automated Assessment,http://blog.brownplt.org/2018/07/26/perils-of-automated-assessment.html,hidden peril automated assessment,test test suite axiomatic model algorithmic model tale two assessment axiomatic model algorithmic model towards robust assessment paper,posted july routinely rely automated assessment evaluate student work programming assignment principle technique improve scalability reproducibility assessment actuality technique may make incredibly easy perform flawed assessment scale virtually feedback warn instructor affect student also affect reliability research us eg correlate assessment score test test suite initial object study simply evaluate quality student test suite however began perform measurement wondered stable started use different method evaluate stability group take perspective test suite classifier implementation give test suite implementation either accepts reject therefore measure quality test suite standard metric classifier true positive rate true negative rate however actually need set implementation know priori correct faulty ground truth correct faulty testsuite accept true negative false negative reject false positive true positive robust assessment classifier may require larger collection knowncorrect knownfaulty implementation instructor could craft additionally leverage implementation student need determine correct faulty basically two way literature let see fare axiomatic model first method instructor writes test suite whatever test suite judgment used ground truth eg instructor test suite accepts given implementation false positive student test suite reject algorithmic model second method taking every test suite ie instructor student running knowncorrect implementation gluing one pas one big mega test suite used establish ground truth tale two assessment applied model turn classify student implementation handful specially crafted one correct faulty case student submission skewed heavily towards faultiness correctness computed truepositive truenegative rate student test suite choice underlying implementation classification model substantially impacted apparent quality student test suite visualized kernel density estimation plot akin smoothed histogram axiomatic model judging plot student astoundingly well catching buggy implementation success identifying correct implementation varied still pretty good algorithmic model judging plot student performed astoundingly poorly detecting buggy implementation quite well identifying correct one towards robust assessment student miss half buggy implementation actually astoundingly good actuality neither strikingly divergent analysis outcome produced fundamental theoretical flaw model classify implementation alarmed find theoretical flaw varying degree affected assessment every assignment evaluated neither model provides indication warn instructor flaw impacting assessment information peril see paper present technique instructor researcher detects protects
275,Lobsters,education,Education,Explorable Explanations - Learn complex systems via interactive education,https://explorabl.es/,explorable explanation learn complex system via interactive education,,lion cub playfight learn social skill rat play learn emotional skill monkey play learn cognitive skill yet last century human convinced play useless learning supposed boring gosh wonder miserable welcome explorable explanation hub learning play disorganized movement artist coder educator want reunite play learning let get started check random explorables
276,Lobsters,education,Education,The Octonions,http://math.ucr.edu/home/baez/octonions/,octonions,introduction introduction preliminary constructing octonions fano plane cayleydickson construction clifford algebra spinors trialities octonionic projective geometry projective line bott periodicity lorentzian geometry exceptional jordan algebra exceptional lie algebra g f magic square e e e conclusion acknowledgement bibliography,next introduction octonions largest four normed division algebra somewhat neglected due nonassociativity stand crossroad many interesting field mathematics describe relation clifford algebra spinors bott periodicity projective lorentzian geometry jordan algebra exceptional lie group also touch upon application quantum logic special relativity supersymmetry table content introduction preliminary constructing octonions fano plane cayleydickson construction clifford algebra spinors trialities octonionic projective geometry projective line bott periodicity lorentzian geometry exceptional jordan algebra exceptional lie algebra magic square conclusion acknowledgement bibliography website also contains lot extra material octonions lighter approach try twopart feature plus magazine helen joyce fun nontechnical chat real number complex number quaternion octonions also try article john huerta wrote scientific american john huerta written number technical paper octonions normed division algebra physic huerta also written curious connection octonions exceptional group ball rolling another ball time big also blog article explaining paper broad light day mathematician check equation proof leaving stone unturned search rigour night full moon dream float among star wonder miracle heaven inspired without dream art mathematics life michael atiyah john baez baez mathremovethisucrandthisedu
277,Lobsters,education,Education,Prototype to production: Building your first PCB prototype (part 1),https://blog.particle.io/2018/03/06/proto-to-prod/,prototype production building first pcb prototype part,,
278,Lobsters,education,Education,"Is Difficulty Overrated? Choice, Novelty and Suspense in Educational Games",https://www.researchgate.net/publication/313477156_Is_Difficulty_Overrated_The_Effects_of_Choice_Novelty_and_Suspense_on_Intrinsic_Motivation_in_Educational_Games,difficulty overrated choice novelty suspense educational game,,reference abuhamdeh csikszentmihalyi importance challenge enjoyment intrinsically motivated goaldirected activity personality social psychology bulletin andersen e liu snider r szeto r popovic z placing value aesthetic online casual game acm chi aponte levieux g natkin measuring level difficulty single player video game entertainment computing atkinson j towards experimental analysis human motivation term motif expectances incentive j atkinson ed motif fantasy action society van nostrand princeton nj barto mirolli baldassarre g novelty surprise frontier psychology berlyne e novelty complexity hedonic value perception psychophysics bjork holopainen j pattern game design chase cc interplay chance skill exploiting common game mechanic enhance learning persistence proceeding international conference learning science cordova lepper r intrinsic motivation process learning beneficial effect contextualization personalization choice journal educational psychology csikszentmihalyi csikszentmihalyi ed optimal experience psychological study flow consciousness cambridge university press deci e l ryan r goal pursuit human need selfdetermination behavior psychological inquiry deci e l ryan r intrinsic motivation inventory selfdetermination theory deci e l koestner r ryan r metaanalytic review experiment examining effect extrinsic reward intrinsic motivation psychological bulletin dickey md engaging design engagement strategy popular computer video game inform instructional design educational technology research development eccles j wigfield motivational belief value goal annual review psychology ely j frankel kamenica e suspense surprise journal political economy fishbach finkelstein feedback influence persistence disengagement change goal pursuit elliot h aarts ed goaldirected behavior psychology press harter pleasure derived challenge effect receiving grade child difficulty level choice child development hebb drive cns conceptual nervous system psychological review van der heijden h user acceptance hedonic information system mi quarterly hockley r psychology fatigue work effort control cambridge university press hong chiu c dweck c lin dm wan w implicit theory attribution coping meaning system approach journal personality social psychology hunicke r chapman v ai dynamic difficulty adjustment game challenge game artificial intelligence aaai kashdan b silvia p j curiosity interest benefit thriving novelty challenge oxford handbook positive psychology khajah road b lindsey r v mozer c designing engaging game using bayesian optimization acm chi klarkowski johnson wyeth p mcewan phillips c smith operationalising evaluating suboptimal optimal play experience challengeskill manipulation acm chi kline p new psychometrics science psychology measurement routledge koedinger k r baker r cunningham k skogsholm leber b stamper j data repository edm community pslc datashop handbook educational data mining koedinger k r booth j l klahr instructional complexity science constrain science november vol pp kohavi r longbotham r sommerfield henne rm controlled experiment web
279,Lobsters,education,Education,Fixing the core memory in a vintage IBM 1401 mainframe (2015),http://www.righto.com/2015/10/repairing-50-year-old-mainframe-inside.html,fixing core memory vintage ibm mainframe,computer history museum team detail previous core memory article ibm punched card muchderided aemaqu thick gold plating conclusion restoration team schedule note reference installation manual ibm pocket reference manual available online available online sm card database,recently chance help fix one vintage ibm computer system computer history museum core memory started acting might imagine keeping old mainframe running difficult task ibm restoration repair done team retired ibm engineer studied core memory system detail asked wanted take look puzzling memory problem address ending started failing ibm mainframe computer computer history museum behind left ibm storage unit providing additional character storage ibm tape drive right ibm card read punch far left ibm lowend business computer became popular computer early due low cost month like computer era us ferrite core memory store bit tiny magnetized ring photo show closeup ferrite core strung red wire closeup core memory ibm mainframe showing tiny ferrite core character storage internally could hold character addition ibm storage unit core memory expansion unit size dishwasher connected computer two thick cable character expansion box could leased month purchased comparison new house san francisco time failing memory location block ibm helped narrow problem view inside ibm storage unit provides character storage ibm mainframe left character core module card control contains two separate core memory module one character one character picture core module visible left core module sight back right associated core module circuitry decode address drive core module amplify signal module circuit three row card module also provided additional machine opcode modify address handling extended address surprisingly logic new opcode implemented external box card right computer box also contains hardware dump entire content memory line printer performing core dump circuit made standardized module system sm card typical card transistor implement logic gate two unlike modern transistor transistor made germanium silicon photo show row sm card inside note metal heat sink highcurrent transistor driving core module closeup sm card inside ibm storage unit top card heat sink highcurrent driver transistor core memory made plane core seen plane built grid wire core wire cross simultaneously energizing one horizontal x wire one vertical wire core intersection two wire selected plane hold one bit character plane stacked hold full character core memory ibm mainframe layer plane tiny core grid multiple plane stacked form memory photo show memory module inside built stack core plane since stack plane make plane make mounted right core module matrix switch drive x select line previous core memory article explains character core memory ibm storage unit consists layer plane core wired together matrix switch right behind plastic drive control line ibm decimal machine us decimal address access memory obvious question access location address understand requires look character used ibm ibm predates byte used character character consisted bcd binarycoded decimal digit along two extra zone bit setting zone bit letter symbol could stored instance zone bit set bcd digit value corresponded character zone bit combination provided rest alphabet encoding may seem strange map directly onto ibm punched card row digit two row zone punch encoding called bcdic binarycoded decimal interchange code later became muchderided ebcdic extended bcdic encoding may noticed plane used character one extra plane hold special word mark bit hold parity point digression ibm character encoding threedigit address also included zone bit four bit used part address allowing address total example address would represented digit along appropriate zone bit resulting address would represented three character getting back problem memory unit bank failing address ending looking immediately concluded common bit set except nt bit set maybe problem even address except worked staring bit pattern became puzzled nt really anything common looking logic diagram reveals hardware optimization make something common since problem happened specific unit digit problem likely address decoding circuitry translates unit digit particular select line normal way decoding digit look bit digit determine value unexpectedly decoder look bit reduces hardware required saving money instance digit detected bit clear bit clear bit clear digit detected parity cd bit clear bit set bit clear digit detected bit clear bit set bit set looking decode logic decoding digit digit test bit clear failure start make sense something wrong unit signal digit would decoded properly memory would fail way observed instructional logic diagram ild ibm explain circuitry computer diagram show part address decode logic used core memory next step figure unit signal could wrong expect failure one address bit catastrophic limited one memory bank looking specific decoder circuitry revealed problem every connection circuit ibm documented automated logic diagram ald diagram generated computer put set binder use service engineer code number previous diagram provides page number related ald diagram extremely detailed nearly incomprehensible since using copy reduced line printer output alds also barely readable automated logic diagram ald ibm mainframe computer consist hundred page show every card connection computer diagram show part address decode circuitry ibm storage unit diagram show part ald unit memory address decoding box corresponds logic component sm card line show wiring card bottom box aem indicates type sm card reference information aemaqu card reveals switch decode card two circuit circuit combine inverter threeinput gate highcurrent driver see root cause problem unit address bit highlighted red ald go pin unit card inverted inverted value pin yellow go unit unit card generating decode output green something wrong signal address wo nt decode exactly problem encountered thus unit card seemed like problem ibm standard modular system sm card used core memory decode address two highcurrent output driven germanium transistor top red heat sink card type aem stamped bottom left card diagram indicates unit card card rack right rear unit located right rack needed find card three row card f top counted position row e photo show position card red arrow circuitry inside ibm storage unit green arrow indicates character core memory card control memory top row card highcurrent driver memory card middle row decode address bottom row contains amplifier read signal memory red arrow indicates position faulty card fan card provides cooling airflow right colorful wire bundle connect circuitry one convenient thing ibm peripheral designed easy maintenance many case nt even need tool get inside ibm pop front side panel shown sm card metal cover guide cooling airflow pop easy attach oscilloscope see happening although nt need sm card easily pulled socket told nt even need power system replace card course turned power inside ibm storage unit left power supply including ferroresonant regulator core memory right connected yellow wire bundle control circuitry pulled card slot plugged replacement card lab collection powered system much surprise memory worked perfectly replacing card engineer stan marc dave tested transistor bad card nt find problem cleaning bad card swapping back memory still worked must dirt corrosion making bad connection say first problem seen due bad connection thick gold plating sm card contact must work well conclusion every day one get chance help fix year old mainframe interesting experience lucky problem turned easy resolve guy repairing tape drive card reader much harder problem since device full mechanical part nt aged well thanks member restoration team computer history museum assistance special thanks stan paddock marc verdiell dave lion inviting investigate problem ibm demonstrated computer history museum wednesday saturday unless hardware problem check silicon valley schedule note reference expansion unit wide deep high weighed lb foot cable computer storage unit thick one provides power signal generates watt heat le would expected detail installation manual threedigit address six zone bit total four used part address two zone bit indicate indexed address using one three index register actually part core separate register indexed addressing part advanced programming option cost extra per month full information converting address character see ibm pocket reference manual page scan instructional logic diagram ilds available online memory decode circuit page scan automated logic diagram alds also available online core memory section ibm predates standardized logic symbol logic diagram symbol may confusing triangular symbol gate swd switch decode card inverts input nt shown logic diagram subtlety decoding logic might think circuit described would decode digit digit since bit clear however ibm store digit value bit bit set since blank stored bit clear decoding using parity bit note ibm us odd parity instance digit binary already odd parity cd check digit parity bit clear digit binary cd parity bit set three bit set total original idea sm card build computer small set standardized card guess complexity aem card engineer created highlyspecialized sm card specific purpose ibm ended thousand different sm card type defeating advantage standardization created sm card database describes thousand different sm card designation indicates gate hold card rack card called gate ibm terminology confusingly nothing logic gate indicates frame b indicates lower frame position back right numbering system used ibm built around frame structure except four frame stacked left frame numbered right frame frame top frame bottom b gate front continue around back typical gate identifier indicates rack front console use frame build computer peripheral led term main frame describe processing unit
280,Lobsters,education,Education,Mystery Languages,http://blog.brownplt.org/2018/07/05/mystery-languages.html,mystery language,programming language education mystery lanuages mystery language evaluating design decision syntax v semantics adversarial thinking reasoning security experimental thinking adopting mystery language learn snapl paper try,tag programming language education posted july learn new language simply read reference manual good go also explore language trying thing hand see behave something poking frequently used almost never taught however tried teach via dub mystery language post went mystery lanuages mystery language exactly sound like programming language whose behavior mystery assignment come vague documentation editor write program however run program produce multiple answer actually multiple language syntax different semantics answer get result running program different language goal assignment find program tell language apart example maybe language syntax documentation say access array index totally specifies behavior syntax right even close example happens index bound raise error like java return undefined like javascript produce nonsense like c wrap index valid one like python happens index two edit specifically python wrap negative index smaller length array student engage mystery language three way first part assignment find set program distinguishes different language aka classifier second part assignment describe theory explains different behavior language example theory c behavior could include accessing heap address past end array finally assignment due inclass discussion explanation mystery language especially useful provide terminology behavior student encountered language example somewhat superficial real mystery language mostly use significant feature array access get idea every aspect programming language come many possible design mystery language student explore firsthand mystery language hope teach number skill mystery language evaluating design decision mystery language almost entirely based design chosen real language either historical choice since settled choice still air vary modern language student get explore consequence decision get feel next day class learn broader historical context syntax v semantics frustrated frequently discussion programming language revolve around syntax luck showing student firsthand single syntax variety semantics bring discussion somewhat higher level adversarial thinking notice array example exploring edge case ever wrote correct safe boring program never notice different way array access could work similar kind thinking need reasoning security hope student might pick mindset experimental thinking assignment student asked find program behave differently across mystery language also explain behavior different language essentially scientific task brainstorm hypothesis language might work experimentally test hypothesis running program discard hypothesis falsified iterate adopting mystery language want use mystery language course email u help get started currently mystery language development brown structured programming language course around mystery language half assignment half lecture mystery language however mystery language quite flexible could also used smaller supplement existing course one possibility begin one two simpler language allow student learn work mix match advanced language alternatively could one two mystery language meet specific course objective learn learn mystery language snapl paper dive try see assignment prefixed ml
281,Lobsters,education,Education,Georgia Tech's Online MOOC-based Master Program (Open edX Keynote),https://www.youtube.com/watch?v=-ETTblOvH6w,georgia tech online moocbased master program open edx keynote,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature open edx conference zvi galil keynote georgia tech online moocbased master program youtube,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature open edx conference zvi galil keynote georgia tech online moocbased master program youtube
282,Lobsters,education,Education,BBC Computer Literacy Project Archive (1980-1989),https://computer-literacy-project.pilots.bbcconnectedstudio.co.uk/,bbc computer literacy project archive,browse computer literacy project archive explore topic project history history,browse computer literacy project archive explore explore recurring topic search content separate clip keyword curated original production team project history find computer literacy project bbc micro contributed history computing britain
283,Lobsters,education,Education,Set Theory: the Method To Database Madness,https://dev.to/vaidehijoshi/set-theory-the-method-to-database-madness,set theory method database madness,set fear set theory venn diagram set theory set venn diagram set x set painfree set operation intersection union set difference relative complement x x symmetric difference disjunctive union x x âˆª x set around u java python ruby javascript implementation call method constant time hash table first second finally http resource left join v left outer join sql server set theory complexity python operation set computer program set theory introduction mediumcom,finally third way series thing finally starting come together sure know quite different data structure work one fast certain one helpful solving specific problem others almost point knowing sense actually used real life like learning geometry probably seemed pointless one day woke realized actually going calculate square footage room wanted recarpet floor okay never actually imagine geometry concept would generally pretty helpful ever lot thing going come together today going learn data structure almost dogmatic theory incredibly ubiquitous practice fact probably already worked structure shape form likely introduced middle school math class data structure talking referring allpowerful set course fear set theory get actual implementation set first need understand earth come mean time u dive theory fear good chance used set theory capacity another fact probably know set theory another name venn diagram venn diagram actually incorporated set theory curriculum effective way illustrating simple relationship set okay sure set theory scary better figure exactly set actually mathematical concept way relate set one another referred set theory set nothing unordered collection element absolutely duplicate three important piece definition unordered element duplicate actually three word encompass pretty much entire definition set remember basically know everything set work come back important bit first let look set action know set wellrepresented venn diagram example look two set set book read set book book read v book iâ since familiar concept venn diagram know center section green two set intersect represents book read book also know two set drawn exist within larger group book world venn diagram good introduction set theory make next part lot easier explain imagine wanted represent two set data sort structure well already know need divide two group book read book make little easier call book read set x book set reconfigured data structure two set venn diagram could also rewritten look like set collection distinct unique object never contain duplicated value notice set x set look little bit like object hash element index sort order also repeated value part make set remember set collection unique unordered object mean never find duplicated value within set painfree set operation set written data structure format well perform operation two important operation performed set intersection union basic operation onâ set intersection two set often denoted shorthand like x intersection represents two guessed word yield element exist within set example intersection set x set element exist good way keyword remember intersection work word element exists x case would mean code complete milk honey even though exist set since set ever contain unique value repeat book title exists set union two set often denoted shorthand like x âˆª union represents entirety two set two set united together word yield element exist either two set good way keyword remember intersection work word element exists x case would mean eight book title important thing remember even though code complete milk honey exist set ever appear union set x set since set distinct value never contain duplicate apply intersection union venn diagram earlier diagram would look like intersection vsâ union okay time complicate thing little bit intersection union great scratching surface set theory purpose need familiar operation well turn two operation turn quite bit computer science set difference relative complement learn play role next section first let figure work set difference relative complement set difference figure difference two set word determine set look like without element contained set another way write example shown difference set x set result element exist set x exist set letter c z w relative complement basically opposite set difference example relative complement compared x return element set appear set x denote relative complement using short hand x actually result exact returned set x example set smaller set x example thing exists exist x number effectively simply subtracting set x set answering question exists exist x might noticed example dealing string others element letter sometimes even number brings important point set contain literally kind element object think hash way hold item long occurs within set alright let look one last complicated one handle sometimes two set might want find opposite intersection two set word might want find book book read none intersect two would call subset would find well proper term looking case something called symmetric difference two set also sometimes referred disjunctive union symmetric difference yield element exist within either two set exist intersection x let look example help clarify mean symmetric difference ofâ set example symmetric difference basically find relative complement set x set super mathematical finding symmetric difference finding union relative complement set x set could write x x âˆª x let confuse really need order find symmetric difference two set ask element exist set x exist set element exist exist x word element unique set occur within example number occur within set however letter b c x z occur within set x set therefore symmetric difference two set okay lot theoretical stuff let see theory play practice shall set around u hopefully wondering point learning set blame good question finally time answer guess set everywhere actual data structure use whenever want java python ruby even javascript might even able guess method language allows u perform set let take quick look using javascript example var new set sadd set sadd set sadd set sadd hello world set hello world shas true shas cat false ssize sdelete set hello world shas false obviously method name change language language example ruby implementation called include idea fairly similar one language another python version set actually allows call method like intersection union symmetricdifference good set anyways mean use language useful timecomplexity set operation well one thing pretty timeefficient remember complicated operation like intersection union difference well guess amount time take u run complex operation depends purely length two set order u find intersection union differencecomplement two set effectively traverse entire length two set compared usually even giant set still take much time traverse basic operation adding element one set removing even finding element within well operation take constant time incredibly powerful often mean set might better structure dictionary hash wait second possible set operation fast even happen well turn many set actually implemented hash table hood see promised going come together already know hash table make good skeleton set implementation hash table often used implement set well good reason first given know hash table always unique key element great set since set unique value second hash table order really matter order matter set finally hash table provide constant access time ideal basic operation performed set alright hash table make good set set data structure language give u free started post told set everywhere right feel like probably let little secret going hopefully blow mind relational database based almost entirely upon set theory fact ever worked queried database write sql probably familiar idea finding record intersection table relational database based entirely upon setâ theory nothing abstraction venn diagram version set started post fact even complicated sql statement nothing operation set http sql inner join intersection two set finding left join two table nothing finding set difference relative complement two table sql query call full outer join merely returning union two set super complicated full outer join one key table null also known bane existence come writing sql statement symmetric difference disjunctive union two table amazing seemingly boring set theory put practice make database seem like coolest thing ever friend truly feat resource set theory fairly widespread various part computer science use relational database data structure exists various language including python ruby javascript java plenty good resource help get better understanding set theory get started left join v left outer join sql server stackoverflow set theory mariadb complexity python operation professor richard e pattis set computer program udacity set theory introduction geeksforgeeks post originally published mediumcom
285,Lobsters,education,Education,My thoughts on university,https://wiki.nikitavoloboev.xyz/education/university.html,thought university,hated,gripe official education much unnecessary pressure put studentbeing confident chose right degree next year life contributing well future okay parent investing much money university study u country like germany going university nt put thousand dollar debt university many way stressful time due reason also wonderful experience meet new friend get inspired together start awesome thingsfor personally university unpleasant experience mostly due fact nearly university friend hated big majority course taught necessarily material taught taught course managed pointless many forced exercise rote memorization exam hated much spent vast majority time learning grew big passion hating university wanting something better eventually turned dream project working throughout whole life project learn anything aim replace traditional education togetheri think main value university brings give direction learning course structured way material build top learned already study together group motivated student ideally work project use way thing learned either university course personal project ideally course learn best source available particular subject possibility ask help solve confusion particular subject either lecture office hour professor student aside university amazing place meet new people build awesome relationship join interesting society build often time university help idea ambitionsthe reason disliked time university perfectionist despite perfectionist failed way high school nt get good enough grade go great university eindhoven university went best worst could nt settle something nt best always found waste much time disliking course taught taught could find better material online study instead going lecture motivation assignment wanted something useful time something enjoyed top genuinely hated preparing kind test exam constrained environment exam room felt stupid real life constrained internet google wikipedia quora stack overflow list go stupid rely brain fragile memory solve problem often time test knowing thing rather ability solve thing still find incredibly dumb case really hope approach change futuresomething akin khan academy soon learn anything really future education education across discipline anything want learn time best teacher world interactive visualization exercise hone learned cost attached want build website learn need want learn foundation mathematics computing go learn time cost attacheduntil future happens though people still go university people maybe tip helpful learned hard student wiki course university lifemy university nt wiki create shared google drive many folder per course student dropped solution assignment example st andrew university student c handbook contains information relevant student studying c department universitysuch handbook would save incredible amount time newcomer student would list activity available student society join anything may interest help student one central place student go question great thing something like main effort done first people create wiki maintaining done next student study course lead student life actually place share student insight help keep infrastructure sharing everything already already useful content use proper clear communication channelsthis biggest pain point went university made university partly hell tue dutch university student year mostly dutch made whatsapp group primarily spoke dutch group thing shared dutch course knowing dutch international student left assume problem ukus university people ideally speak one language english language respectedif went university would either telegram group telegram simply superior whatsapp proper desktop client would one main group year say c student subject dedicated group created strong emphasis spam topic discussionsanother way would create community something like slack discord use channel feature instead couple rule group announcement inform student interesting thing happening around uni like student hackathon use office hour doubtif lecturer teaching subject primarily research subject teach save life may best study material use lecture supplementary material nearly always good idea learn topic taught way either studying lecture note subject attending lectureto make learning experience best however never ever afraid ask question either student asking professor student assistant directly office keep track assignment deadlinesi found trello work really great trello board made column subject put course appropriate deadline looked one exam period always use calendar plan day ahead given deadline approaching helpful university life general time spend working thing work time ideally predetermined already trust schedule part deal study found creating another trello board named focus helped greatly setting inner compass knowing life take care health exercise eat proper food sleep hour every dayhealth important student find newly gained freedom thing intoxicating one really say buy chip drink cola every evening every day wanted go friend every weekend drink one stop except youonly say decide eat healthy actually spend time researching healthy eating even mean spend good portion time life asking question mean healthy later settled whole food plant based diet food added sugar sugary drink drinking water teamy vice choice university psychedelics found substance entice psychedelics leaving question taking drug even slippery slope control intake substance put body physically harmless psychedelic alcohol weed hard drugother researching food eat recipe cook many awesome food exist found exercising another important investment time personally loved playing tennis friend loved playing would also sign gym start going despite intimidating might first actually enjoy visit gymand finally sleep university stressful deadline stressful exam stressful juggling university social life leisure difficult despite cutting away sleep even hour every day get back eventuallyideally learning habit going sleep waking time pay huge dividend progress university apply google summer codeif c student want spend summer wisely would best get kind internship work experience google provides amazing opportunity work many awesome open source project gsoc program apply c student really try get opportunity work open source project actually put knowledge got university practice get paid put effort work give upfamiliarize gsoc timeline know project get announced deadline student application stating plan work summer start early look previous organization chosen often organization pop find interesting hop communication channel often maybe irc slack let know want help clone project try build look issue try hand fixing ask blog share learning knowthis big one met many people never shared knew public form thought knew already shared point truth especially start something new hello world first blog post mostly look introduce world get public page internet say hello say interested done blogsometime crazy study life get idea find something interesting place write personally write article medium found difficult time finishing majority article one get needlessly big started wiki continuously share know world brain know solve problem given know nt retain lot fact reference ca nt trust written lost think nice share know learned people find save timei also found process writing really understand know try put word cement idea floating head put paper others read laterstarting blog super easy nt like medium create blog website static generator minute oh learn lot process like hell static generator applies life university really powerful advice give anyone try new thing nt afraid start thing solve problemsi personally fell love open source software specifically optimizing everything life macosioslifetimeproductivity many project try work passion solving itch feel life loved tinkering macos much decided share setup world little know something many people actually appreciate liked felt great knowing finding nt share would literally simply happen nt write hello world article medium blog would nt happen nt decide start wiki wiki file would simply happenthere many thing simply would happen nt try new thing fear worst reason thing
286,Lobsters,education,Education,Announcing idyll.pub: Publish interactive blog posts and explorable explanations with Idyll,https://idyll.pub/post/announcing-idyll-pub-0a3eff0661df3446a915700d/,announcing idyllpub publish interactive blog post explorable explanation idyll,publish interactive blog post explorable explanation idyll free hosting service idyll version http idyllpub install latest verion idyll follow instruction install create new post run dev server see doc info publish acknowledgement open collective star project github chatroom mailing list buy sticker star idyll framework authoring publishing interactive post web idylllangorg,publish interactive blog post explorable explanation idyll free hosting servicejune release idyll version today pleased announce http idyllpub static hosting server idyll project tl dr publish post free straight command line work like install latest verion idyll npm install g idyllthis give access global idyll command npm installed follow instruction install create new post idyll create cd mypostnamethe idyll create command create new folder generate basic file structure new post use cd navigate newly created post run dev server idyllthis open post web browser edit fileindexidyll make change browser automatically update change see doc publish idyll publishpublishing give stable shareable link post hosted idyllpub republish making update correction link reused feel confident sharing stage editing processthese link generated using post name unique identifier future able create user account use link look like http idyllpub username postslug acknowledgementswe like thank everyone helped u reach milestone including contributor github backer open collective special thanks jeffrey heer ben clinkinbeard albert wenger zachary kaplan ricky reusserif like pleasestar project githubjoin chatroom mailing listbuy stickerstaridyll framework authoring publishing interactive post web click arrow see example interactive component see idylllangorg info
288,Lobsters,education,Education,Programming Paradigms and Beyond,https://cs.brown.edu/~sk/Publications/Papers/Published/kf-prog-paradigms-and-beyond/paper.pdf,programming paradigm beyond,,obj length r filter flatedecode stream uщ v w r wq h ȵa q j
289,Lobsters,education,Education,Why teach kids to program? (2017),https://arp242.net/weblog/kids-programming.html,teach kid program,f feedback martin github,teaching kid basic computer programming good idea reason teaching thing math physic good idea teach deeper truth compare science class lot people forgot stuff like f muckery huygens pendulum forth okay forget deeper lesson world operates according deterministic natural law law discovered careful observation experiment stuff happen magic deeper lesson may sound obvious human history people different idea suspect science math lesson affect daily life people quite lot even though many seem realize help teach reason world reality teach think practical benefit programming often touted seems primary education teaching marketable useful knowledge teaching kid broad worldview well exposing lot different thing discover like good even month programming class people much better grasp computer think helpful daily life many people use computer daily discover like programming continue work either career hobby great focus teaching teaching think first teaching work second feedback contact martin github feedback question etc
292,Lobsters,education,Education,Learning Programming with Nim,https://narimiran.github.io/nim-basics/,learning programming nim,statically typed type inference next chapter,nim statically typed programming language meaning type assignment need declared using value nim also distinguish value change mutate later declare variable mutable assignment using var keyword stating name type value added later using syntax already know value declare variable give value immediately var name type value angular bracket used show something change name literally word name angular bracket rather name nim also type inference ability compiler automatically detect type name assignment value without explicitly stating type look various type next chapter assign variable without explicit type like example nim look like var int var b variable type int integer value explicitly set variable b value type automatically detected integer assigning name important choose name mean something program simply naming b c forth quickly become confusing possible use space name would split two name choose consists one word usual way write camelcase style notice first letter name lowercase note however nim case underscoreinsensitive meaning helloworld helloworld would name exception first character casesensitive name also include number character even emojis wish keep mind possibly others type instead typing var variable multiple variable necessarily type declared var block nim block part code indentation number space first character default indentation level two space see block everywhere nim program assigning name var c hello e nim tab allowed indentation set code editor convert pressing tab number space v code default setting convert tab four space easily overridden setting ctrl setting editortabsize previously mentioned variable mutable ie value change multiple time type must stay declared var f f f f hello error variable f initial value type inferred int value f first changed integer original value trying change value f hello produce error hello number would change type f integer string error comment comment nim code written character everything line ignored
294,Lobsters,education,Education,Introducing Machine Learning Practica,https://www.blog.google/topics/machine-learning/introducing-machine-learning-practica/,introducing machine learning practica,machine learning crash course interactive course,graduate student cognitive science spent countless hour poring video transcript natural language looking pattern data could help better understand people learn word concept category fast forward year part google machine learning education team support company mission make ai beneficial everyone helping educate googlers others build machine learning ml model look pattern data order solve variety problemsback february team shared internal machine learning crash course mlcc world help developer learn use ml since heard many people hungry ml education particular want learn team built deployed ml model challenge success product team encounter problem solve solution work best mind colleague collaborated google image model expert develop machine learning practicum image classification handson practicum contains video documentation interactive programming exercise illustrating google developed stateoftheart image classification model powering search google photo date googlers used practicum train image classifier identify cat dog photostoday sharing interactive course learn google ai google online hub educational resource machine learning first walk basic image classification work learning building block convolutional neural network cnns build cnn scratch learn prevent overfitting leverage pretrained model feature extraction finetuningwe hope enjoy course learn something new think new way apply classification cnns work study eager hear feedback share machine learning practica educational content learn google ai future
295,Lobsters,education,Education,Is learning to code in middle age a fool’s errand or a committed act of digital citizenship?,https://www.1843magazine.com/features/code-to-joy,learning code middle age fool errand committed act digital citizenship,,may andrew smithi remember moment code began interest tail end cult forming around mysterious cryptocurrency called bitcoin excitable tech quarter london new york san francisco none editor spoke heard people back eventually one commissioned write first british magazine piece subject story well known system pseudonymous creator satoshi nakamoto appeared nowhere dropped ingenious system nearanonymous decentralised money world vanished leaving handful writing line code clue identity much go yet reporting piece astonished find programmer approaching satoshi code like literary critic drawing conclusion likely age background personality motivation style approach even choice programming language c generated intrigue though difficult use lean fast predictable programmer choose language way civilian choose live expert suspected satoshi native c end investigation felt knew shadowy character tingled curiosity coder art first time began suspect coding really art would reward examinationmachines drove first industrial revolution power one roiling world lie silicon brushed steel teeming cosmos software code conjured invisible cadre programmer unlike achievement previous revolution code near impossible people understand museum around world memorialise age steam picture book explain child engine work hard imagine might curate exhibition age code yet though u barely give thought relationship code become symbiotic governing nearly every aspect life accelerator new car longer physical connection throttle motion foot converted binary number line code tell vehicle turn tv radio use credit card check bag airport change temperature fridge get xray dentist text family member listen music anything vinyl read article online desire fulfilled code may think wedded iphone really love bewitching code lie within itlike people spent life entirely ignorant code increasingly corral actually work know microprocessor use tiny electrical switch create manipulate great wave digit mesh world programmer speak machine impenetrable language coding popcultural cliché suggests appeared impregnable domain spectrumy math genius though code make life easier efficient becoming increasingly apparent easily turned malign purpose used terrorist spread virus car manufacturer cheat emission test hostile power hack election line technology politics blur wondered whether ignorance working compromised capacity understand unable speak maven term encoded parameter world brought sense helplessness citizen could take responsibility two question embraced others began form learn code could learn code trepidation later came recognise deeply inadequate decided one way find outthere computer language enable human desire translated language computer understands number logic written unpaid clever individual opaque mix glory hell want program computer learn one daunting task might think even must engage hairpulling frustration picking languageto make choice trawl web consult every programmer know person either hedge contradicts last one first litany name sound like cleaning product variety rose perl python c ruby java php cobol lisp pascal fortran different specialisation affinity feel unprepared ass nevertheless aided website rank language term popularity monthly basis pace coding fashion make haute couture look agricultural three scroll view notstupid option python javascript c widely employed rise lot fan learning resource go trip new york beg help someone trust paul ford cofounder postlight digitalproduction studio based avenue also author superb improbably entertaining novellasized essay entitled code anyone help choose language son experimental poet ford came programming late career journalism unlike singletrack peer empathise discombobulationcomputer scientist use metaphor stack describe directly language communicates computer hardware lowest stack machine code consists order issued directly silicon chip tiny electrical switch called logic gate create process binary hexadecimal number top beginner language childfriendly scratch weirdness hidden behind userfriendly shortcut guardrail designed prevent mistake ease use come expense fine control speed processing inversion civilian usage coder employ soubriquet lowlevel describe difficult language engage computer processor directly highlevel denote accessible one stack meet ford still reeling terrorbreeding assumption lowlevel best entry point beginner stuff comfortable ford say grimace ask even seasoned coder translate seamlessly different level mature programmer go high stack low stack explain piece work maturity really good software developer get level web browser idea point direction playboy interview steve job gave coincide launch apple macintosh home computer job compare computation showing way toilet someone sense direction instinctual control body would describe specific precise instruction might say scoot sideways two metre bench stand erect lift left foot bend left knee horizontal extend left foot shift weight centimetre computer operate principle million time quicker know anything except add number fast ford concludesford steer away c likens shotgun fast efficient ready blow foot misplaced semicolon indicates wish erase british archive major hollywood movie studio friend friend claim happened c follow unquestioning obedience thinkjavascript contrast advantage ubiquity high level serf primary language interactive web page also hard think way price pay evolved chaotically like web central authority devotee claim javascript improving rapidly sound great consider hardwon skill might obsolete six month time fear haunt coder explains defend language fiercely techie halfjokingly refer religious war like lot professional coder ford us javascript python admires latter say svelte modern syntax relative logic versatility proactive disciple generate lot useful support used everything website development algorithmic trading stockmarketin course discussion ford offer nothing allay monumental nature choice language expressive explains form culture attendant way seeing choice simply practical matter much like musical decision made teenager ask want hang python named monty python flying circus within community considered hip find discreditably appealing blue ford asks question considered want course programming making thing happen mind go blank slowly answer emerges year ago someone built website work would love flashy replacement want work web road lead javascripton internet discovered helpful organisation called freecodecamp founded quincy larson idealistic schoolteacher turned programmer began explicit goal rationalising learning process order deepen otherwise shockingly shallow coding gene pool around white asian male larson established free userfriendly online course alongside growing international network selforganising local group thousand used freecodecamp stepping stone softwaredevelopment careersthe freecodecamp course begin hypertext markup language basic design language web soon learn coder regard html programming language contains algorithm piece code tell computer process different input simple algorithmic logic defined three word else example algorithm would customer order size shoe display message sold sasquatch else ask colour preference program according paul ford recipe wrap lot algorithm reused html instead tell browser organise element web page header subhead image paragraph html make use symbolic lexicon programming language sense count code would recommend anyone spend hour two simply know joy feeling properly charge computer also real thrill learning scrambled algebralike snippet seen passing inert intimidating context actually work one favourite revelation tech brand name consist elided capitalised word like airbnb iphone freecodecamp trying cute style called camelcase commonly used programming environment space always neutralduring six week spend building miniwebsite learn valuable lesson important computer insanely literal pedantic absent colon extraneous bracket easy miss likely cause machine stare uncomprehendingly metaphorical finger drumming table one highend programmer tell spent six month hunting bug within big system knowing others tried failed finally tracking problem underscore dash shiftdevil call wonder coder appear nervy terse outsidersanother lesson decision make programming clearcut experienced coder point designing website scratch anachronistic age offthepeg provider like squarespace wordpress third html go hand hand animates web page try might enjoying latter frustrated messiness struggle think way perhaps coding going allaware mature head nudging towards python start return one early adviser put touch british programmer called nicholas tollervey graduate royal college music former professional tuba player additional degree philosophy computing education like stock coder cowboy fluent range language particular advocate python teach develops tool reason people keep hinting try python ask well want get religious war say say enjoy yes reason turn guido van rossum python dutch creator set write programming language would clear concise close natural english possible simplicity paramount wanted one obvious solution problem explicit contrast language javascript almost comic absence overarching logic syntactic elegance baffling number way thing python encourage showboaters individualist prize communication collaboration van rossum word readability count intrigued decide adapt suggestion made month ago ford setting goal writing pythonbased app author scrape twitter mention book tollervey wish well offer help need together decide app name instantly appreciate concision van rossum layout like written prose many programming language us indentation delineate block code rather littering screen symbol array bracket brace achieve result javascript often look though bowl alphabetti spaghetti sicked screen python uncluttered comparatively easy take glance shocked understand affinity python primarily aesthetic matter quirk temperament beginning understand particular character type cluster around different languagesthe app want write rove twitter feed looking keywords provided user algorithm creating effectively tell machine find word phrase look word phrase b move next tweet repeat find tweet containing b display tweet text date author screen simple program running upgrade return result save python data structure called dictionaryto regret freecodecamp yet teach python settled online beginning python tutorial series wellreviewed book called python crash course importantly call nicholas tollervey whenever get stuck soon find dizzying range online resource remains substitute expert eye shouldera month line learnt think learnt key concept going need fundamental algorithmic thinking required programming variable function loop variable best imperfectly understood vessel within piece data contained ready worked many possible data type straightforward number string string name given textfunctions particular operation performed data ordering list counting item bracing lowlevel language like c task like capitalising name would involve writing multiple line code time operation required python offer simpler option coder either write function perform action time function already exists import official repository known pythonistas cheese shop monty python sketch name shop cheese addition python come extensive range builtin function known method solve common problem finally loop asks computer keep repeating block code particular set condition met example keep searching author surname title one book found tweet reckon learnt enough build app something extraordinary happens look blank code editor head empty look longer strange quantum effect assume head seems empty training wheel suddenly feel know nothing panicked sensation freecodecamp larson chuckle tell phenomenon thing get lost say think important know programming never easy never thing twice code infinitely reproducible already solved problem encounter use old solution definition kind always frontier depth one thing learn accept feeling constantly wrong make coding sound like branch zen buddhismi regroup accept advice developer reveals ubiquity screen coding realm sketch structure apps paper common practice coder also imagine story pertaining user probable transit app page order understand feature needed fit together see first foremost must learn connect twitter api application programming interface provides developer access company feed must also become familiar tweepy library python tool specially written talk twitter end spend entire exhausting day reading copious online documentation software tolstoy must look like quick skim people needle say first two task turn anything straightforward patience odd latenight so tollervey length connected social network feed use function tweepy needed build appcentral bookomatic operation user input keywords simple input function already embedded python use prompt book title author surname combined variable named searchterm sent twitter api result come back extract information want print result screen sound easy except start wondering whether full name rather surname twitter handle might effective whether extra term like book read reading hidden background run unseen search might increase accuracy fiddle hour fly minimal improvement change made start affect app grind halt time admit hubris better part day vanished kicking procoders term describe kind hole fallen like yakshaving bikeshedding care red green ing bikeshed sure pertains probably botheventually retrench remembering email sent gerald weinberg author book called psychology computer programming suggests computer like mirror mind brightly reflects poorest thinking greatest personal weakness tendency attempt much overcomplicate thing architecture astronaut coding parlance delete code start later nicholas tollervey tell consolation time wasted practising developer equivalent characterbuilding almost tempted believe kindnessi learnt lesson draw confidence newfound discipline know nothing taken granted world naive coder satisfaction feel stormed input stage rapidly dispelled discover promising first date twitter api longer responding app test first half code work spend ten hour reading researching watching endless youtube howto video effort tempt back avail examine request package used relay search request api find problem go cheese shop import promising alternative called twittersearch tie knot getting endless syntax error message stop code anything hour later two morning nerve stretched entire staff facebook thrown window shimmied escape send so tollervey grateful first time life eighthour timezone lag san francisco live uk unbounded relief answer straight away arranges screen share help solve problem look moment laugh probably feel like right close stray parenthesis thrown whole program chaos tollervey remove code work stare screen disbelief done wired sleep stay talking tollervey programming another hour app crude unlikely change world disrupt anything soon feel amazing made anything astonished line contains twitter api security key redacted appears aboveafter caffeine sweat tear effort learn code worthwhile hour freecodecamp familiarising programming syntax basic concept cost nothing brought huge potential benefit beginner foray taught could guessed illuminating mind introducing new level mental discipline mention world humility collaborative spirit code culture heart turn inspiring exemplary staring screen anguish even fun thrill look piece code know least idea going fully intend persist pythonmore powerful feeling enfranchisement come beginning comprehend fascinating profoundly alien principle software work accident design coder comprise fifth estate citizen need able interrogate deeply interrogate politician marketer player wall street medium wittgenstein wrote limit language mean limit world world got little bigger
296,Lobsters,education,Education,Prolog Basics Class,https://docs.google.com/forms/d/e/1FAIpQLSf3KMzm7tx_py67vc__JgoO1imlscNkVQ7_6ppvxOCoTWOUVQ/viewform,prolog basic class,,prolog basic classthe form prolog basic class longer accepting responsestry contacting owner form think mistake
298,Lobsters,education,Education,Professor Frisby's Mostly Adequate Guide to Functional Programming,https://mostly-adequate.gitbooks.io/mostly-adequate-guide/,professor frisby mostly adequate guide functional programming,book likely use every day work nt learn everything front start writing program language fully capable writing top notch functional code read online read online via gitbook play around code download installation instruction table content summarymd contributing contributingmd translation translationsmd faq faqmd plan future part part part creative common attributionsharealike international license,book book functional paradigm general use world popular functional programming language javascript may feel poor choice grain current culture moment feel predominately imperative however believe best way learn fp several reason likely use every day work make possible practice apply acquired knowledge day real world program rather pet project night weekend esoteric fp language nt learn everything front start writing program pure functional language log variable read dom node without using monad cheat little learn purify codebase also easier get started language since mixed paradigm fall back current practice gap knowledge language fully capable writing top notch functional code feature need mimic language like scala haskell help tiny library two objectoriented programming currently dominates industry clearly awkward javascript akin camping highway tap dancing galosh bind place lest change u various work arounds quirky behavior new keyword forgotten private member available via closure lot u fp feel natural anyways said typed functional language without doubt best place code style presented book javascript mean learning paradigm apply luckily interface mathematical ubiquitous find home swiftz scalaz haskell purescript mathematically inclined environment read online best reading experience read online via gitbook quickaccess sidebar inbrowser exercise indepth example play around code make training efficient get bored telling another story make sure play around concept introduced book tricky catch first better understood getting hand dirty function algebraic datastructures presented book gathered appendix corresponding code also available npm module npm mostlyadequatesupport alternatively exercise chapter runnable completed editor example complete exercise j run npm run download git clone http githubcommostlyadequatemostlyadequateguidegit cd mostlyadequateguide npm install npm run setup npm run generatepdf npm run generateepub note generate ebook version need install ebookconvert installation instruction table content see summarymd contributing see contributingmd translation see translationsmd faq see faqmd plan future part chapter guide basic updating find error since initial draft feel free help part chapter address type class like functors monad way traversable hope squeeze transformer pure application part chapter start dance fine line practical programming academic absurdity look comonads falgebras free monad yoneda categorical construct work licensed creative common attributionsharealike international license
299,Lobsters,education,Education,Foot-candles: the different paths to tech,http://blog.alicegoldfuss.com/foot-candles/,footcandle different path tech,footcandle different path tech set scene footcandle amount light given one candle one foot away light meter roll action film learned school check gate rinse negative film degree lighting composition footcandle lighting composition footcandle wrap keep following mind,footcandle different path tech despite working tech engineering title degree bfa film animation school emphasize critique film program mine technical handson meant shooting film second week organizing set crew second quarter everything directing commercial writing imaging codecs also learned footcandle set scene footcandle unit measurement describing amount light given one candle one foot away measure amount footcandle present space device called light meter math convert lumen watt depending need film photography use footcandle calculate fstop shoot aka wide aperture learned footcandle beginning freshman year used manual light meter time manual footcandle conversion eventually switched using digital camera automatic exposure setting need light meter let alone footcandle math decreased light meter always part kit people actually using set cinematographer ac assistant camera assistant director need knowledge anymore still roll action let say want get photography ask help fantastic excited teach get started camera already cell phone teach take better selfies pay attention basic like lighting exposure composition apply teaching taking photo people object landscape great even start instagram account people love photo much want go deeper buy digital camera automatic zoom lens teach long exposure setting light gel advanced composition craft improving leap bound want turn career deep photography want go whole hog film buy slr lens cover film speed depth field paper type unusual format start going workshop buy textbook cover shooting film including calculate fstops one point look book say learned footcandle cool reply oh yeah learned school record scratch end scene check gate offhand comment started chain reaction head go like photography year learned footcandle alice already knew alice must done thing done well year ahead alice even advanced alice always advanced imposter reality however remembered term nothing else look footcandle write post learned footcandle film program pedantic half classmate digital light meter math used footcandle since graduating knowing footcandle added foundational understanding film degree required make film lack prevent becoming photographer right footcandle specialized knowledge used cinematographer lighting expert want go similar field awesome know footcandle need know get far rinse negative selfguided programmer mean go mental cycle always comparing traditional c grad always worried missing something always worried enough helped c grad holding holierthanthou attitude regarding programmer nontraditional background nothing like ability questioned internally across entire span industry however talking c grad year learned following c degree cover material student pick choose class extent therefore graduate different expertise many c grad touch certain topic graduating lot real computer science topic compiler good laying foundation actually required programmer hmm similar film degree therefore stand reason c topic would qualify lighting composition topic qualify footcandle lighting composition basic data structure array map tuples iteration oo v procedural writing readable code writing test footcandle assembly memory management logic gate moore law kernel crash footcandle listed even covered many c program engineer know learned hardpressed find c grad still writes assembly knowledge help educational foundation used professional world specialist malware researcher traditional software engineer learn school never touch wrap deeper dive programming run topic covered c degree may make feel extremely behind depth happens keep following mind lack knowledge topic negate work already done know thing c grad likely understanding topic fresher complete c grad touched year everyone learns thing different order different time including c grad thing never need know also use c grad friend resource one biggest hurdle selfguided programmer knowing know c grad point syllabus book article concept term may never found happy teach reach new topic something new exciting dig remember come far without may footcandle thanks marc hedlund brad greenlee julia evans b byrne marco rogers amy nguyen keeley hammond feedback post camille fournier inspiring
300,Lobsters,education,Education,How To: Tune a Guitar,https://mathisonian.github.io/idyll/how-to-tune-a-guitar/,tune guitar,sad guitar electric tuner rescue keep thing work visualized raw waveform fourier transform tuning ear match reference tuning technique harmonic interval saint amazing grace find beat practice make perfect,sad guitartake second strum guitar sound good taken storage tune electric tuner rescuetune guitar using tuner click drag tuning knob right tighten loosen stringskeep sound tune quite yet scroll back try get tuning knob turn greenhow thing work guitar generate noise vibration string electric guitar one magnetic pickup convert vibration electrical signal sent tuner amplifierthis signal visualized raw waveform often want visualize frequency instead fourier transform mathematical function reveals audio frequency hidden wavestrum guitar see frequency visualizedtuning earnow tuned guitar using tuner let try tune guitar ear challenging may take time master guitar tune match referencewe start tuning reference note manipulate tuner right current note played reference noteturn distortion offthis easier cleaner sound match two sound get guitar tunetuning techniquesharmonic intervalsmost string guitar separated interval known perfect fourth perfect fourth beautifully resonant one pair string guitar separated perfect fourththe interval ggg bbb string major third major third sound happy uplifting interval show time music example major third found first two note saint first two note amazing grace form perfect fourthlearning hear interval help tune guitar without tunerfind beat two string played together produce third higher frequency known overtonewhen two string perfectly tune overtone inconsistent time produce wobbling beat overtone hear listen carefullyplay note hz difference listen beat turn distortion offas get pair string closer tune beat slow overtone perfectly amplified listening slowing beat helpful cue tuningpractice make perfecttry tuning guitar listening relationship adjacent string beat resultant overtoneshow tunerremove distortion tune guitar detune guitar
301,Lobsters,education,Education,The Importance of Deep Work & The 30-Hour Method for Learning a New Skill,https://azeria-labs.com/the-importance-of-deep-work-the-30-hour-method-for-learning-a-new-skill/,importance deep work method learning new skill,awesome hacking law productivity highquality work produced time spent x intensity focus deep work rule focused success distracted world role deliberate practice acquisition expert performance deep work rule focused success distracted world monastic bimodal rhythmic journalistic,tech industry especially security industry seems outrageously overwhelming newcomer even intermediate infosec pro seems overwhelming number path topic one focus problem u especially newcomer encounter know focus even find topic focus seem get stuck vast pool resource available u take github repository awesome hacking highly recommended example many people aware existence people sending message asking start totally overwhelmed seems structured collection valuable resource seem solve problem exactly problem certainly lack resource although access resource need developing new skill fail even time could rearrange schedule make time perhaps forgotten distraction face daily basis prevent u performing best ability know feeling want learn something new wait motivation strike u nowhere tinker around hour without clear direction checking notification soon realize getting anywhere get discouraged give side note wait motivation wrong formula induce motivation experience start action spark inspiration spark motivation lead action loop continues also know experienced feeling flow moment fully focused task lose sense time everything seems flow effortlessly forget everything around feeling control task rewarding feeling flow best described psychologist mihaly csikszentmihalyi best moment usually occur person body mind stretched limit voluntary effort accomplish something difficult worthwhile mihaly csikszentmihalyi state flow seems arbitrary rare like something happen stumble upon mere coincidence strive create state flow often possible satisfying also productive yield positive reward reason rarely reach state constantly need remind live world full distraction sometimes difficult press pause button create state flow one must follow certain rule embrace deliberate practice concept called deep work order produce absolute best result capable need commit deep work key developing ability deep work move beyond good intention add routine ritual designed minimize amount limited willpower necessary transition distracted state state stable concentration rule thumb take approximately minute focus without distraction reach state flow checking twitter notification every minute seems harmless prevent brain reaching state therefore prolong time required complete task law productivity highquality work produced time spent x intensity focus make mistake confusing productivity busyness lot stuff visible manner mean productive shallow work shallow work noncognitively demanding logisticalstyle task often performed distracted effort tend create much new value world easy replicate cal newport cal newport author book deep work rule focused success distracted world highly recommend argues spend enough time state obsessive shallowness permanently reduce capacity perform deep work social medium overuse exactly type obsessive shallowness referring one defines deep work follows professional activity performed state distraction free concentration push cognitive ability limit effort create new value improve skill hard replicate deep work hard shallow work easier absence clear goal job visible busyness surround shallow work becomes selfpreserving cal newport deliberate practice exist alongside distraction get better skill develop myelin around relevant neuron allowing corresponding circuit fire effortlessly effectively therefore good something well myelinated deliberate practice focusing specific skill forcing specific circuit relevant skill fire isolation repetitive process trigger cell called oligodendrocyte start wrapping layer myelin around neuron circuit turn effectively strengthens skill ok make lot sense tell experience simply knowing thing put closer goal read entire book deep work biggest lesson learned trying implement deep work dailyweekly schedule plan carefully make strong habit fail develop skill automatically fall back unproductive tinkering finite amount willpower becomes depleted use turn approximately hour willpower available day trying force finally get started procrastinating exactly willpower get depleted unproductive way fixed plan habit save willpower actual task another important lesson learned practice deliberate practice deliberate practice refers special type practice purposeful systematic stretch mind limit regular practice might include mindless repetition task deliberate practice requires focused attention performed specific goal improving performance natural tendency human brain transform repeated behavior automatic habit repeat task mindless becomes mindless activity enemy deliberate practice behavioral psychologist james clear confirms often assume getting better simply gaining experience reality merely reinforcing current habit improving james clear capacity improve performance area life train brain correct way easier said done let straight deliberate practice comfortable activity requires sustained effort focus basically process failing failure know stretched limit take lifting weight example lift weight fail take break exactly body learns expand current limit prepare stronger next time perform activity force take challenge beyond limit pick project force learn new concept technique read scientific paper systematically look word concept understand rather discarding understand half anyway attitude performance psychologist began explore separate expert many different field everyone else single coherent answer deliberate practice culture love story line prodigy notion expert posse inherent talent separate everyone else reality master cognitively demanding task requires specific form practice exception made natural talent k anders ericsson introduced concept deliberate practice paper role deliberate practice acquisition expert performance stated deny difference immutable due innate talent exception notably height genetically prescribed instead argue difference expert performer normal adult reflect lifelong period deliberate effort improve performance specific domain k anders ericsson need choose strategyphilosophy fit specific circumstance mismatch derail deep work habit chance solidify strategy extracted book deep work rule focused success distracted world monastic philosophy attempt maximize deep effort eliminating radically minimizing shallow obligation isolate long period time without distraction shallow work allowed bimodal philosophy asks divide time dedicating clearly defined stretch deep pursuit leaving rest open everything else dedicate consecutive day like weekend sunday example deep work least one day week rhythmic philosophy argues easiest way consistently start deep work session transform simple regular habit create daily habit three four hour every day perform deep work project journalistic fit deep work wherever schedule recommended try first since first need accustom deep work current lifestyle prefer switch rhythmic bimodal fit one box use strategy reference point developing one fit circumstance fair enough difficult know advance could become thing since interest vary person person like arm exploit development mean something would enjoy idea pick skill useful current path path yet pick skill generally useful one could potentially transform career give try minimum hour deep work might like first get discouraged right away thing good scary like suck trick overcome initial frustration get first rewarding experience split hour seven session plus buffer set clear goal want accomplish project remember goal become master within hour use time efficiently learn enough judge want continue switch another subject use first session perform extensive information gathering look resource available pick one stick useful completing project chosen necessary use second session set environment eg analysis environment malware analysis including tool could possibly need first analysis define clear goal eg analyze malware x important set clear goal split structured part complete two session per week done week worst case scenario realize like spent hour learning something challenging new otherwise learned best case realize actually fun want continue already started overcame annoying part happily continue developing skill
302,Lobsters,education,Education,Unique collections of software architecture case studies on open source applications,http://aosabook.org/en/index.html,unique collection software architecture case study open source application,http aosabookorgblog aosabook aosa,architect look thousand building training study critique building written master contrast software developer ever get know handful large program program wrote never study great program history result repeat one another mistake rather building one another success goal change two book author four dozen open source application explain software structured program major component interact builder learn development answering question contributor book provide unique insight think junior developer want learn experienced colleague think book place start intermediate senior developer want see peer solved hard design problem book help follow u blog http aosabookorgblog twitter aosabook using aosa hashtag
303,Lobsters,education,Education,"Hosting your static site with AWS S3, Route 53, and CloudFront",https://vickylai.com/verbose/aws-static-site/,hosting static site aws route cloudfront,victoria drake,hello victoria drake senior software engineer wrote article
304,Lobsters,education,Education,6 Career Advices To New Software Engineers,https://medium.com/@hazemu/6-career-advices-to-new-software-engineers-29e4dbcaa3ab,career advice new software engineer,always stay market keep updating resume google resume identify learn transferable skill understand necessary ingredient growth growth opportunity hard work time article know career growth option ask,always stay marketi know excited feel new job definitely going learn lot even though might feel little intense beginning promise amazed much knowledge skill acquire first couple year definitely pay stay focused learn much let newfound fulfillment lead forget important always lookout new opportunitiesi know worked hard earn degree land job grow capable opportunity critical stay aware get attached particular job team company look around inside company elsewhere see people working try identify highly demanded skill set see anything learn explore make sure expertise demand test market know worth update linkedin account shun recruiter go job interview every give perspective help plan future even actually move around keep updating resume get job though asking always keep current always ready apply new job think ever met someone kept hisher resume uptodate whole time fact want keep updating resume relatively relaxed pace eg every month reason help identify period time work amount much resumesee problem software house especially bigger one hire lot people ton work done probably add value business importantly must make sure work also add value could easily get busycontent forget measure return investment making could spend month firefighting mode cause take keep service running could spend year cruising cause got really good either way updating resume help take time reflect achievement see good thing tell work done get alarmed getting burnt growing comfortableand update resume make sure adding quantifiable achievement listing job responsibility one resource recommend take look regard chapter gayle mcdowell book google resume chapter contain good description hallmark strong resume well detailed critique common bad resumewriting identify learn transferable skillsdon focus learning intricacy whatever platform technology programming language using try identify core concept fundamental principle govern domain see different solution approach similar problem tradeoff makeif system programming try learn core concept interprocess communication different operating system try understand different language library support asynchronous programming webservices try understand remote procedure call problem soap rest intended solve similaritiesdifferences web ui try understand prominent single page application framework work various htmlcss layout technique arethese example get idea try master techstack using work make sure viewpoint remains wider use different technology throughout career understanding underlying principle help pick new stuff really quickly priceless skill profession cause technology change much higher pace basic understand necessary ingredient growthif give dense oversimplified recipe professional growth experience rankscope seen would growth opportunity hard work time without going much detail extended debate one ingredient mean gist recipe multiple factor affect growth instance difficult grow project working maintenance mode even put lot time hard work also difficult grow career thing work keep getting changed rapidly get enough time see showcase success read article firsthand account one experience must stay alert end situation one key ingredient growth missing drain effort slow know career growth optionspassionate craftsman susceptible focusing exclusively improving technical skill staying top trade realize factor equal importance contribute career growth though instance people grow changing job rewriting systemsfeatures taking leadership responsibility utilizing connection people etc always strive deliver excellent work bear mind may sufficient grow career mindful plan investment accordingly approach career growth limited excellent job waiting get promoted organically smart hardworking people competing promotion finite reward budget vital understand different option get stuck lose sight bigger ask consider different job team company ask easy get distracted fancy product name established company reputation could definitely positive impact career matter thing learn contribution make people get know uncommon see big established product fewer opportunity contribution smaller younger one fact bigger product also require fairly different set skill necessary smaller one make sure stay conscious choice good pay nice perk trying tap new domain trying increase scope responsibility make sure never forget keep diligent choice float cause affect future prospect adversely especially expectation grow higher become senior
305,Lobsters,education,Education,Remixing as Learning in Creative Media,http://willcrichton.net/notes/remixing-as-learning-in-creative-media/,remixing learning creative medium,remixing learning creative medium mindstorms example game homepage garry mod lua simple api wiremod custom entity custom gamemode declarative gui language table developer forum example website internet archive abyssinian cat emac matrixstyle text effect example music surprise noteflight choir choir choir link pokemon johtomain theme addicted analysis bret victor would say wcrichto csstanfordedu hacker news thread,typography symbol newcommand msf mathsf newcommand ctx gamma newcommand qamp quad newcommand qqamp quad newcommand coloneqq newcommand prof vdash newcommand star newcommand eps varepsilon newcommand nul varnothing newcommand brc newcommand binopm oplus newcommand mag newcommand aequiv equivalpha newcommand semi untyped lambda calculus newcommand fun lambda newcommand app newcommand fix msf fix newcommand truet msf true newcommand falset msf false newcommand define triangleq typed lambda calculus expression newcommand funt lambda left newcommand lett msf let hastype msf newcommand letrec msf letrec hastype msf newcommand ift msf msf msf else newcommand rec msf rec newcommand case msf case l mid r newcommand pair left right newcommand proj newcommand inj msf inj msf newcommand letv msf let msf newcommand fold msf fold msf newcommand unfold msf unfold newcommand poly lambda newcommand polyapp left right newcommand export msf export msf without msf newcommand import msf import msf typed lambda calculus type newcommand tnum msf num newcommand tstr msf string newcommand tint msf int newcommand tbool msf bool newcommand tfun rightarrow newcommand tprod time newcommand tsum newcommand trec mu newcommand tvoid msf void newcommand tunit msf unit newcommand tpoly forall newcommand tmod exists webassembly newcommand wconst msf newcommand wbinop msf newcommand wgetlocal msf getlocal newcommand wsetlocal msf setlocal newcommand wgetglobal msf getglobal newcommand wsetglobal msf setglobal newcommand wload msf newcommand wstore msf newcommand wsize msf memorysize newcommand wgrow msf memorygrow newcommand wunreachable msf unreachable newcommand wblock msf block newcommand wloop msf loop newcommand wbr msf br newcommand wbrif msf brif newcommand wreturn msf return newcommand wcall msf call newcommand wlabel msf label newcommand wframe msf frame newcommand wtrapping msf trapping newcommand wbreaking msf breaking newcommand wreturning msf returning newcommand wconfig msf module msf mem msf local msf stack msf instrs newcommand wfunc msf params msf local msf return msf body newcommand wmodule msf funcs newcommand wcg msf globals newcommand wcf msf funcs newcommand wci msf instrs newcommand wcs msf stack newcommand wcl msf local newcommand wclab msf label newcommand wcm msf mem newcommand wcmod msf module newcommand wsteps step brc brc newcommand underline msf newcommand wvalid vdash msf valid newcommand wif msf msf else newcommand wfor msf msf init msf cond msf post custom newcommand wtry msf try msf catch newcommand wraise msf raise newcommand wraising msf raising newcommand wconst msf newcommand wbinop msf newcommand wgetlocal msf getlocal newcommand wsetlocal msf setlocal newcommand wgetglobal msf getglobal newcommand wsetglobal msf setglobal newcommand wload msf newcommand wstore msf newcommand wsize msf memorysize newcommand wgrow msf memorygrow newcommand wunreachable msf unreachable newcommand wblock msf block newcommand wloop msf loop newcommand wbr msf br newcommand wbrif msf brif newcommand wreturn msf return newcommand wcall msf call newcommand wlabel msf label newcommand wframe msf frame newcommand wtrapping msf trapping newcommand wbreaking msf breaking newcommand wreturning msf returning newcommand wconfig msf module msf mem msf local msf stack msf instrs newcommand wfunc msf params msf local msf return msf body newcommand wmodule msf funcs newcommand wcg msf globals newcommand wcf msf funcs newcommand wci msf instrs newcommand wcs msf stack newcommand wcl msf local newcommand wcm msf mem newcommand wcmod msf module newcommand wsteps step brc brc newcommand underline msf newcommand wvalid vdash msf valid custom newcommand wtry msf try msf catch newcommand wraise msf raise newcommand wraising msf raising newcommand wif msf msf else newcommand wfor msf msf init msf cond msf post newcommand windirect msf callindirect session type newcommand ssend msf send newcommand srecv msf recv newcommand soffer msf offer colon mid colon newcommand schoose msf choose colon mid colon newcommand srec msf label newcommand sgoto msf goto newcommand dual overline inference rule newcommand inferrule cfrac newcommand ir inferrule text newcommand hspace newcommand nl newcommand evalto boldsymbol overset mapsto newcommand step boldsymbol mapsto newcommand evals evalto newcommand subst rightarrow newcommand dynj prof newcommand dynjc dynj ctx newcommand typej prof hastype newcommand typejc typej ctx newcommand hastype newcommand val val newcommand num msf int newcommand err err newcommand trans leadsto newcommand size left remixing learning creative medium crichton may contrast traditional bottomup method education discus taking existing creation remixing provides grounded meaningful unstructured educational experience drawing example creative medium game website music mindstorms short wonderful book child use computer learn new way seymour papert argues process creating debugging computer program intuitively match way child naturally form theory world example say ask young child make wind blow rarely get know instead get answer like tree waving make wind blow essence child attempt understand complex system like weather searching tree always wave wind blow clear possible cause course child young fully understand correlation v causation coriolis effect key idea process theory formation come naturally u papert claim intuitive process get stamped school enforcing rigid notion correctness rather rewarding child identifying pattern told theory wrong think otherwise papert spends rest book explaining logo languagesystem precursor lego mindstorms controlling robot simple command help child gain motivated yet bottomup understanding formal thinking encouraging use analogy motion body robot carefully introspect construct algorithm reading book started thinking methodology could applied complex pursuit learning programming generally us bottomup approach topdown approach would something like let start source code linux kernel understand operating system work seem feasible contrast bottomup approach say let learn one concept time isolation slowly put together eg learn virtual memory process scheduling etc build o much successful pedagogy core problem subcomponents tend feel le motivated full system brought together slog virtual memory implementation start write process scheduler appreciate idea memory isolation thinking learning experience realized formal computer science education largely followed mold unstructured education creative website entirely different approach discipline started existing implementation gamewebsitesong tweaked remixed slowly poked prodded black box got feel going much fun felt like aforementioned child learning system immersing finding pattern building mental model first principle critically motivated every step way dealing trivial homework problem instead creating game actually wanted play music actually wanted hear formal education never felt way exploring system unstructured education far impact person thinker individual class took think worth asking characteristic kind learning could design new curriculum around principle starter tell story see pattern find across anecdote example game might notice blog design homepage big fan video game loved growing played every platform still bring joy day entire reason became programmer one game garry mod gmod gmod sandbox game built source engine game engine powering valve game like halflife portal others basic premise basically make underlying game engine accessible le game framework enables creation custom structure game mode map like many game gmod us lua scripting language provide simple api programmatically modifying game however picked game knew absolutely nothing lua really programming general tried vain follow python tutorial lost interest every time started playing gmod hooked always loved building thing starting lincoln log lego never unfettered digital sandbox build whatever wanted gmod bunch amazing addons like wiremod creating sort intricate structure without every touching line code however perhaps year experience became increasingly dissatisfied game saw people server attended programming amazing light display creating custom entity whereas stuck vanilla tool game provides ran gamemodes change default setting provided mode creator initial foray lua scripting decided tweak simple gameplay setting running roleplay server wanted change starting money provided particular class simple enough man take forever tutorial nearly quality today figure relevant file file system edit know change work debug broken change lua function point figured liberating felt empowered could navigate game engine morass actually write line code started money roleplay game time gradually expanded scope ambition modified existing library custom entity custom map custom gamemode dived rendering internals later learning htmlcss rewrote imperative gui system declarative gui language although learning bottomup sense started small worked upwards always modifying part bigger system kept experience enjoyable rote number factor made gmod amenable remixing lua wonderful starting language dynamic typing mean worry compilation since usually embedded game engine language quite table understand get lua mental model contrast dynamic language like python complex beast one need understand list comprehension class inheritance legb scoping fully grok code gmod thriving community player developer would help encourage development frequented developer forum often found place get question answered stymied due scriptable nature sharing code openly norm community easy find everything huge gamemodes tiny selfcontained snippet easy copypaste modify one ever cared licensing long proper attribution provided example website earliest exposure programming year ago sixth grade elp teacher provided u deadsimple html template u pick favorite topic make website sadly appears website disappeared despite best effort internet archive mine one magic get sense style remains abyssinian cat website time emac equivalent notepad o x needed one first thing remember programming html sheer immediacy type letter refresh page see change instantly started realize full extent visual magic one could marquee cursor trail utterly determined stuff every feature possible website content ancillary mattered visuals crowning achievement finding matrixstyle text effect javascript somehow incorporating website magician truly gem lost sand time think alone saying web design first spark lighting programming fire discussing friend particular amongst woman site like neopets myspace customizable htmlcss introduced lot kid generation programming simply better way show cool bask glory geocities aesthetic kid often limited artistic control immediate environment activity like drawing wall splashing paint ceiling generally offlimits website offered u ability corner world entirely make matter horrendous color palette little sad customizability quite rare today website made htmlcss friendly beginner consider moment world website created latex instead html obtuse syntax confusing semantics full inscrutable syntax error would disaster specifically think copypastability html cs make uniquely beginnerfriendly even understand almost nothing language take code someone else wrote throw website time work never compiler error visual tweak made scary program complaining program incorrect make remixing painless process even bug hard diagnose example music remixing style learning technical field however undergrad cmu started become interested nontechnical activity completely missed high school namely music knew absolutely nothing music theory practice beyond feeble attempt sing shower practice eventually found cappella group would take time started gain ear interval chord melody progression underlying song performed however since formal training music unfamiliar notation reading sheet music took long time certainly point could hear music head read easily translate intuition music concrete direction sing yet still wanted able write music thankfully collegiate cappella music cover song start scratch decided cover surprise radiohead searched piano cover song found sheet music armed seed composition transcribed key tool underlying learning effort noteflight pictured critical feature noteflight enabling listen score changing either click individual note hear standalone play whole score hear unison meant could listen midi playback test whether change made sense ear surprise cover took transcribed piano sheet guitar chord converted separate cappella part lead soprano alto tenor baritone bass beatboxer main challenge ensuring given part singer jump around much progress vocal consistency searched around inspiration remix song add flair pulled idea different cover eg composition choir choir choir ultimately settled piece quite happy first effort link get every chord progression correct match strict musical standard unlikely would able write piece scratch nope midi playback would sung actual people course noteflight playback feature made could vet change ear test showing friend zero prior knowledge able use tool successfully remix song see pokemon johtomain theme addicted even though formal musical knowledge still lacking experience significantly improved ability read write sheet music analysis example share common feature experimentation possible rapid feedback html noteflight extent gmod enable creator immediate connection program output bret victor would say learner dealing big system fully understand whether programming language music ability try something see work branch decision absolutely critical particularly true mature learner quick pick pattern need short iteration time determine direction take thirdparty content easily accessible modifiable noteflight gmod builtin infrastructure distributing opensource librariescompositions part culture sharing reuse others work web getting simple content easy view source modulo javascript day copypasting nearly always work large creation many independent part localizable modification medium large creation taken someone else game mode website template full score usually well defined entry point modification likely affect part system gmod script structurally required separate client code running player computer controlling guisrendering server code running server controlling game logic serverclient interact welldefined boundary change one likely affect website logical visual structure embedded indentation source code necessarily true imperative gui changing text color one div likely affect divs nested near current one musical score often welldefined overarching structure eg verse prechorus chorus bridge local structure eg four chord progression design changing one note score literally change others even though overall sound may change also important note activity inherent sensory component either visual auditory lot people provides baseline excitementinvolvment interacting medium extent exist could exist le sensory pursuit let consider example data analysis specifically machine learning criterion rapid feedback machine learning hardly model take hour day cost lot money rent hardware thirdparty content ml framework like tensorflow pytorch go long way towards defining common format sharing model still quite hard practice take arbitrary model shelf run finetune optimize localizable modification modern model well understood changing one part neural network retraining could huge implication training time hyperparameter choice overall accuracy general clear way make small change affect small part system ultimately mean newcomer learn make machine learning model way learn make game website music limit ability learner play around remix theorize without thorough bottomup grounding theory practice machine learning turn make field le approachable however hope looking learn remixing creative medium continue gain insight guide development tool curriculum field always let know think either send email wcrichto csstanfordedu comment hacker news thread
306,Lobsters,education,Education,Simulation of Biology,https://www.cc.gatech.edu/~turk/bio_sim/,simulation biology,simulation biology c instructor greg turk semester spring course description homework homework homework homework homework tentative schedule selfreproducing loop cellular automaton class edge chaos flocking binary string simulated molecule protein folding cyrus levinthal watson crick stanley miller genetic code optimal reactiondiffusion lipid micelle week chapter origin life genetic algorithm week chapter origin life simulation sympatric speciation voxel space automaton lsystems laplacian growth leaf venation week chapter origin life development paper fleischerbarr eggenberger furusawakaneko week chapter origin life evolving virtual creature autonomous agent crawling robot swimming creature flying creature week chapter origin life thomas ray tierra iterated prisoner dilemma week chapter origin life craig reynolds coevolution foraging related web link flocking plant development selfreproducing loop course topic selforganization molecule membrane cell development evolution locomotion physic simulation technique multiorganism interaction greg turk home page,simulation biology c instructor greg turk semester spring time mwf location college business room optional book origin life birth life origin language john maynard smith eors szathmary course description course cover broad array technique computer simulation biological system course material draw biology artificial life robotics computer graphic research area course topic include selfreplication artificial chemistry multicellular development simulation evolution cellular automaton massspring simulator lsystems plant development animal locomotion walking swimming jumping flocking herding behavior group predatorprey system parasite foraging behavior student carry number programming project course project designed give student firsthand experience range simulation method used biology grading class primarily based student performance project basic programming skill recommended student entering course project done using processing javabased programming environment prior programming experience java another clike language best preparation course previous background biology necessary homework homework life cellular automaton first homework due end second week class homework flocking homework reactiondiffusion homework dla dbm homework massspring locomotion voxelspace plant pick one project tentative schedule week chapter origin life christopher langton selfreproducing loop stephen wolfram cellular automaton class optional christopher langton edge chaos week chapter origin life craig reynolds flocking virtual creature week chapter origin life metabolic pathway wolfgang banzhaf selforganization binary string week chapter origin life tim hutton selfreproducing simulated molecule dill version protein folding optional cyrus levinthal protein folding complexity classic dna paper watson crick optional stanley miller bubbling flask produce amino acid seeing genetic code optimal week chapter origin life pattern formation reactiondiffusion week simulation lipid micelle week chapter origin life genetic algorithm week chapter origin life simulation sympatric speciation plant growth simulation voxel space automaton week plant growth using lsystems creating branching pattern using laplacian growth simulation leaf venation week chapter origin life development paper fleischerbarr eggenberger furusawakaneko week chapter origin life evolving virtual creature karl sims evolving autonomous agent frank dellaert randall beer week evolution manufacturing crawling robot swimming creature tu terzopoulos evolved flying creature week chapter origin life thomas ray tierra system evolving program robert axelrod iterated prisoner dilemma week chapter origin life craig reynolds coevolution game tag ant foraging behavior related web link flocking resource compiled craig reynolds dr prusinkiewicz research plant development langtonstyle selfreproducing loop hiroki sayama course topic selforganization selfreplication von neumann christopher langdon others complexity edge chaos molecule artificial chemistry metabolism molecular hypercycles rna folding dna codon optimality membrane cell membrane formation cell model cell cytoskeleton immune system cell aggregation courtesy kurt fleischer development multicellular development slime mold aggregation pattern formation gene cascadesnetworks cell simulation development fleischer barr lsystems plant development plant growth courtesy przemyslaw prusinkiewicz evolution evolution speciation dawkins major event evolution genetic algorithm blind watchmaker coevolution karl sims craig reynolds danny hillis sexual selection locomotion mode locomotion braitenberg vehicle evolution walking hopping motion karl sims swimming terzopoulos walking simulation courtesy karl sims physic simulation technique partial differential equation pde reactiondiffusion cellular automaton life spiral wave etc massspring system tentacle motion courtesy andrew cantino multiorganism interaction communication prisoner dilemma titfortat predatorprey flock school swarm ant foraging parasite digital creature thomas ray flocking collision avoidance courtesy craig reynolds go greg turk home page
307,Lobsters,education,Education,A Functional I/O System (2009),http://cs.brown.edu/~sk/Publications/Papers/Published/fffk-functional-io/paper.pdf,functional io system,,obj stream x w j b w g
308,Lobsters,education,Education,Introducing GitHub Learning Lab: A new way to level up on GitHub,https://blog.github.com/2018-04-19-introducing-github-learning-lab/,introducing github learning lab new way level github,start learning work check github learning lab community forum covered introduction github communicating using markdown github page moving project github managing merge conflict contributing open source next community forum learn github learning lab,github home code forum collaboration sandbox testing launchpad deployment often platform learning new skill training thousand people use git github github training team established triedandtrue method helping new developer retain information ramp quickly begin software journey making experience accessible developer everywhere github learning lab instead traditional tutorial webcast github learning lab app give learning experience actively participate without leaving github friendly bot take series practical fun lab give skill need share helpful feedback along way start learning work github learning lab learn issue opened bot github repository finish task bot comment work even review pull request like project collaborator would question come complete course get answer github learning lab community forum new way get support community learner expert trainer including member github training team journey progress check github learning lab community forum covered find five course covering popular topic launch introduction github get introduction common collaborative workflow developer around world communicating using markdown learn communicate github beyond markdown simple syntax github page host website blog directly github repository moving project github get tip migrating code contributor github managing merge conflict learn merge conflict happen fix coming soon github learning lab contributing open source make first open source contribution friendly mapping project next beginning expanding app help new developer inviting new course author adding topic go let u know think community forum learn github learning lab
309,Lobsters,education,Education,Teaching Data Science to High Schoolers,http://mchow.com/posts/data-science-cbk/,teaching data science high schoolers,sorry python introduction tidyverse course future post like think make python workshop work rest post focus r workshop flow end justify mean exploring end product view data spreadsheet scatterplot energy v valence barchart characteristic song take home worked gotchas next step repo used,past year worked tool execute grade code behind scene datacamp work ranged expanding open source tool grading r python code running sql bash exercise however helping scale education data science education thousand student something wanted since helping teach statistic grad school certain sanity room handful student recently chance teach two short workshop emphasis data science intro python princeton public library intro r coded kid philadelphia case wanted follow general approach content start deeply satisfying example including plot let student drive example changing string work backward example breaking several teachable skill workshop follow pattern teaching skill quick assignment case initial example student saw used spotify api api let find favorite artist plot different characteristic song characteristic include song danceability energy speechiness valence example plot show characteristic two famous beatles ditty sorry python general running python workshop much challenging required teaching thing like function list dictionary panda dataframes one hand putting jupyterhub server let people get started right away hand total loss explain people across range technical background something simple open jupyter notebook computer contrast using r delight using rstudio server little bit dplyr ggplot student running right away inspired simplicity dave robinson recent introduction tidyverse course convenience returning data frame spotify api able leave mention function loop jazz got right data future post like think make python workshop work rest post focus r workshop flow end justify mean every section used example script worksheet example first chunk planned day explore end product day basic dplyr verb filter select arrange day basic ggplot go detail teach dplyr verb ggplot since see tidyverse course instead focus big example used work backwards exploring end product student logged rstudio server open example script looked artist let three thing run code view data spreadsheet run code make scatterplot valence v energy artist album run code make barchart different characteristic song step could modify string change selected artist album characteristic one goal script make piece could modified clear require programming knowledge change view data spreadsheet artist getartistaudiofeatures beatles view data drop uneccessary column sort popularity higher popular artist select albumuri albumimg trackuri trackpreviewurl arrange trackpopularity view case student shown run code instructed run line using line number like quickly sort song popularity use search bar view pane find song album also convenient option filter using column leafed around data discussed column thought looked like song characteristic going rest example try changing beatles favorite band learned student choosing favorite harrowing decision concept select arrange view string explained detail variable explained detail scatterplot energy v valence energy v valence get album store result album album artist filter albumname abbey road remastered select albumname trackname energy valence trackpopularity make scatterplot energy v valence ggplot album geompoint aes x energy valence geomtext aes x energy valence label trackname hjust left size nudgex case student saw scatterplot energy v valence single album went first time briefly mentioned filter function cutting row data like done filtering view pane selected favorite artist previous example find album via view pane write filter statement new concept filter ggplot geompoint geomtext barchart characteristic song view song feature library tidyr artist arrange desc trackpopularity topn select trackname danceability energy speechiness valence gather sentiment value trackname ggplot geomcol aes sentiment value fill sentiment facetwrap trackname theme axistextx elementblank right bat let note two thing originally want reshaping felt compelled plot whether decision right wrong brought decision true value backward design end decided put cover reshape detail screwed meant select popular song used topn wrong modifying script explore favorite band try changing characteristic selected eg adding acousticness plot new concept basic idea behind reshaping ie data reshaped facetting geomcol take home worked modify example student need make basic change go workshop manipulate part example student see example right away data science gotchas explaining phrase run code explaining phrase pipe x still trying figure best way introduce ggplot next step seeing student engage data right really shook based feedback workshop really interested try creating compelling example using game data sport data eg wwwsportsdatabasecom whatever else student might find compelling plan clean repo used maintain example interested tackling challenge getting student world data definitely get touch
310,Lobsters,education,Education,OLPC’s $100 Laptop - Where Is It Now?,https://www.theverge.com/2018/4/16/17233946/olpcs-100-laptop-education-where-is-it-now,olpc laptop,equipping happily demonstrate complained first archived post secured deal early concept design headline like quickly released suggested total around negroponte finally admitted slashed initiative budget named olpc laptop outlined dramatic reported negroponte abandoned tablet arboleda tried controlled study wrote farewell post one interview result critic say,supposed laptop saved world late tech visionary mit medium lab founder nicholas negroponte pulled cloth cover small green computer bright yellow crank device first working prototype negroponte new nonprofit one laptop per child dubbed green machine simply laptop like nothing negroponte audience either panel unsponsored tech summit tunis around globe ever seen un secretarygeneral kofi annan offered glowing introduction negroponte explained exactly laptop would feature ordinary computer require little electricity child could power hand crank would rugged enough child use anywhere instead limited school mesh networking would let one laptop extend single internet connection many others linuxbased operating system would give kid total access computer olpc reportedly turned offer free mac o x license steve job name suggested laptop would cost time competitor cost really believe make literally hundred million machine available child around world really believe make literally hundred million machine available child around world negroponte promised going go lower hinted big manufacturing purchasing partner horizon demonstrated laptop versatile hardware could folded chunky ereader simple gaming console tiny television negroponte annan rose photoop two olpc laptop reporter urged demonstrate machine distinctive crank annan crank handle fell almost immediately quietly reattached negroponte managed half turn hitting flat surface table awkwardly raised laptop inch trying make space full rotation maybe trailed sitting back field question crowd moment brief perfectly foreshadowed critic would see one laptop per child year later flashy clever idealistic project shattered first brush reality remember olpc probably remember hand crank olpc striking technological innovation pure vaporware designer dropped feature almost immediately negroponte announcement winding process put stress laptop body demanded energy kid poor area spare every olpc computer shipped standard power adapter time olpc officially launched green machine breakout star educational technology scene symbol tech industry hubris onesizefitsall american solution complex global problem decade later project legacy complicated simple cautionary tale laptop still rolling production line new model expected later year people still talking crank nicholas negroponte selfdescribed optimist business inventing future professor decade experience mit negroponte cofounded university influential medium lab one first backer wired magazine wrote column evangelizing transformative power technology longtime passion education computer thought could revolutionary negroponte believed constructionism educational theory said child learn making thing solving problem rather completing worksheet attending lecture negroponte mit colleague key constructionist figure seymour papert paired initiative frenchfunded research center senegal teaching child program apple ii computer negroponte return request interview article real issue lack good idea real issue lack access computer late child computing initiative major political priority state president bill clinton popularized idea digital divide rich poor american school began issuing student individual computer close gap microsoft toshiba sponsored laptop distribution program called anytime anywhere learning maine funded statewide initiative input papert negroponte however interested reaching student might never seen laptop wife opened school remote cambodian village reaksmei equipping satellite dish generator rugged panasonic toughbook laptop key moment negroponte considered program success talking reporter child would use laptop source electrical light home talk metaphor reality simultaneously quipped one point school across developing world afford toughbooks needed new kind device take idea think successfully working year bring scale say walter bender negroponte colleague would go cofounder olpc nicholas negroponte insight real issue lack good idea real issue lack access computer olpc laptop philosophy negroponte insisted kid needed personally computer invested maintaining able use anywhere teacher supervision inspiration pointed educational researcher sugata mitra famous holeinthewall experiment child taught use computer delhi slum mitra vision minimalist olpc project almost totally focused distributing computer kid natural curiosity supposed rest provocative idea negroponte olpc pitch toed line ambition hubris organization sell hundred million unit declared even take order le million laptop tough tough could throw across room feature happily demonstrate interview pronouncement made headline conversation olpc recognized still ten year later many people gone big start say christoph derndorfer former editor entrepreneur wayan vota nowdefunct blog olpc news geez get decent computer actually read text bill gate told reporter olpc overwhelming focus hightech hardware worried skeptic including participant tunis summit one attendee said rather clean water real school laptop another saw olpc american marketing ploy guise nonprofitability hundred million laptop flogged government complained tech world people skeptical laptop design intel chairman craig barrett scathingly dubbed olpc toylike prototype gadget bill gate hated screen particular geez get decent computer actually read text told reporter even fan olpc somewhat dubious excited prospect kind scared oversimplistic plan lack plan recall derndorfer olpc news could enthusiastic booster olpc also relentless gadfly first archived post quoting zdnet report titled olpc good beginning laptop negroponte pitching simply exist olpc prototype little mockup signed manufacturer let alone priced sub product groundbreaking technology like crank mesh networking system still mostly theoretical rabi karmacharya whose education nonprofit open learning exchange nepal run one oldest existing olpc deployment say people pitching olpc local government utopian hype selfpowering computer helpful distracted people promise olpc actually building tiny lowpower laptop incredible price despite clumsy unveiling tunis within month olpc secured deal taiwanese computer maker quantum whose founder barry lam liked project humanitarian mission olpc announced plan launch end shipping million laptop apiece seven country well smaller number developer community elsewhere quantum even supposed explore building commercial version laptop olpc made genuine technical breakthrough early concept design laptop used rear projection screen gave tentlike look final product featured custom lcd display designed cto cofounder mary lou jepsen screen toggled fullcolor blackandwhite mode consuming fraction power standard display would need could manufactured negroponte initially wanted still remarkably cheap olpc first prototype looked like conventional computer albeit one bright green booksized lauded designer yves béhar soon came board rework almost every aspect laptop aesthetic behar say team spent almost year sending prototype school around world feedback slowly negotiated compromise look practicality yves béhar soon came board rework almost every aspect laptop aesthetic result distinctivelooking machine known toylike greenandwhite laptop rounded edge swiveling neck instead standard hinge chunky bezel around screen every flourish designed serve purpose screen folded keyboard create tablet controlled button bezel earlike antenna flipped extend wifi range protecting laptop port folded decorative xo logo printed hundred color permutation kid could tell laptop apart dustproof onepiece rubber keyboard made easy print key layout country got first keyboard ever created local language say béhar walter bender meanwhile working lightweight operating system designed specifically child sugar o built red hat linux opensource design would let kid poke around laptop core firmware instead using standard desktop computing metaphor sugar app icon arranged like digital charm bracelet simple ring animal musical note shooting star tooloriented tool thing making thing recall bender curriculumoriented bunch exercise new york time publishing headline like laptop save world million sale horizon olpc looked set success everything started fall apart announcing laptop olpc one job make laptop cost team developed slowly realized going happen according bender olpc pushed laptop cost low cutting many corner laptop barely worked price rose around even design major tradeoff easy take apart even spare screw inside handle thing like screen could replaced olpcspecific part solidstate storage sturdier traditional hard drive expensive could hold single gigabyte data user complained onepiece rubber keyboard fell piece much typing internetsharing system barely worked quickly removed sugar sugar elegant operating system potential buyer dubious anything microsoft window wanted student learn interface using rest life utopianism set unrealistic expectation around laptop able accomplish olpc may undercut even strong point overselling utopianism set unrealistic expectation around laptop able accomplish say morgan ames berkeley researcher currently writing book olpc included negroponte laptoptossing demonstration talking laptop kid using surrounded concrete floor cobblestone street ton breakage really blindsided project expected laptop lot indestructible since olpc put much focus cost bender began worry people saw project hardware startup educational initiative remembers debating laptop name negroponte instead laptop bender wanted call child machine say think got mileage laptop time typical laptop cost bold statement got burned set expectation around price rather expectation around machine really olpc still designing intel announced building cheap educational laptop classmate pc would small rugged like olpc design run familiar window xp operating system sell somewhere olpc fullscale launch slipped price tag faded away intel shipped first classmate pc brazil mexico negroponte furious lashed intel accusing approaching olpc target market dumping laptop cost destroy nonprofit intel ashamed said shameless olpc prided tech company little experience landing hardware contract announced incredible sale number buyer scale back drop official india one olpc original seven customer reportedly killed deal longstanding feud medium lab particularly stinging loss libya canceled order million laptop bought classroom pc instead bender think olpc might struck deal focused le technical efficiency every conversation ever head state every time said build laptop country say knew making laptop shanghai could build laptop much le expensive realize price asking u asking u pride price asking u control ownership project olpc created computer could withstand dust drop accounted political messiness development dragged started looking le technically impressive taiwanese company asustek revealed eyecatching new computer called eee pc delivering cheap tiny laptop without olpc intel educational trapping eee pc lot drawback slow performance tiny screen minuscule hard drive cramped keyboard machine unexpected success sold million unit first year laptop maker quickly released netbook computer fueling massive boom cheap tiny laptop meanwhile olpc prospect looked increasingly modest one report suggested first production run would paltry laptop final number quite bad olpc ran give one get one program people paid buy laptop student raising million selling computer managed sizable deal mexico uruguay peru total around sale end year even far original estimate million degree underestimated difference shaking hand head state check written negroponte finally admitted yes disappointment launch beginning olpc two group three cofounder nearly end start mary lou jepsen left found lowpower display company called pixel qi month later olpc took step walter bender thought unforgivable compromised commitment open source software partnering microsoft put window olpc hardware software side split bender kept managing software separate outfit called sugar lab ultimately olpc window xp model never got beyond test run laptop use sugar day thing stop getting paycheck bender joke smart part c est la vie olpc plunged ahead announcing futuristic dualscreened laptop called may u spiraled great recession organization struggled tried raise money second give one get one sale made le tenth earlier taking startled negroponte slashed initiative budget halved staff created two separate organization manage bostonbased olpc foundation would develop new hardware though unceremoniously canceled miamibased olpc association led friend rodrigo arboleda would distribute existing laptop real win olpc time happened many people already considered initiative failure put olpc base operation closer latin america laptop going peru ordered nearly million computer program plagued logistical problem machine went school spotty electrical power teacher got little support training smaller program uruguay fared better distributing laptop across country entire primary school population real win olpc time happened many people already considered initiative failure olpc microsoft partnership alienated part open source community come nothing experimented american program birmingham alabama key contact birmingham mayor arrested running multimilliondollar bribery ring techcrunch named olpc laptop one biggest product flop decade blaming corporate infighting glare reality demise negroponte losing interest hardware outlined dramatic ultimately metaphorical plan drop tablet helicopter olpc foundation distributed massmarket motorola xoom tablet two ethiopian village new experiment reported child learned alphabet within two week within five month hacked android referred turning software disabled camera android phone tablet became sophisticated negroponte abandoned development olpc solarpowered tablet joined newly founded global literacy xprize soon effectively putting olpc behind arboleda tried reboot olpc association offer institutional support school project prospect continued dim controlled study peru found laptop improved child math language skill although cognitive skill improvement cheap laptop one factor child educational opportunity many different option market olpc seemed downright obsolete olpc released lowend american consumer tablet slipping plastic shell generic android device year released updated version new component optional touchscreen called grand experiment expansive plan future early bostonbased olpc foundation quietly disbanded olpc news shut let u honest great excitement energy enthusiasm brought u together gone vota wrote farewell post olpc dead far world concerned olpc dead sameer verma olpc community leader sits sugar lab oversight board discouraged ten year kind feel like still mus verma professor information system san francisco state university think still worth core really ability solve problem right know better like many remaining olpc enthusiast verma dogmatic hardware sugar lab selfcontained project point apps ported webbased launcher called sugarizer run platform addition laptop several olpc program distribute standalone server containing article wikipedia educational video khan academy customized material local educational program huge repository information kid teacher without steady internet connection accessed via kind laptop tablet mother family come small farming village growing familiar lifestyle say verma would look olpc would like know stuff really lot good thing community like battery still work wifi still work amazingly olpc still crank software image big fan laptop many despite real technical problem still running ten year blow mind stuff still work say battery still work wifi still work amazingly olpc still crank software image olpc association bought zamora terán foundation nonprofit created nicaraguan banking tycoon roberto zamora son rodrigo zamora olpc association board member say new olpc focused getting laptop nongovernmental organization updating hardware absolutely necessary currently designing successor bigger screen powerful component apparently manufacturer complained old part getting hard find u would continue say zamora basically intention keep similar possible good result olpc deployment still run government rwanda instance spent last decade gradually giving laptop young student project coordinator eric kimenyi say distributed across school reach expanding school get access electrical power project like ole nepal work education department run nonprofit instead trying reach entire country ole nepal spread around laptop across area olpc hardware still advantage remote rural district data network wired internet accessible hour hiking deployment even smaller privately run olpc volunteer andreas gros currently trying set new project ethiopia providing laptop server social center vulnerable child gros say laptop currently tied custom name important hardware people know olpc stood say may know detail least give idea trying none project follow negroponte original plan nepal rwanda operation provide one laptop every child instance child use shift reducing total cost school laptop generally stay classroom easier protect maintain initiative still working toward olpc larger goal often using original laptop grow percent year matter u presentday olpc association relationship project tenuous zamora say olpc personally visit school deliver laptop verma others volunteer community say barely even know happening organization gap volunteer company increased point hardly feedback u say verma year insisting tech company olpc really opted laptop arm race embracing status niche machine olpc current laptop camera screen resolution original edition le memory storage budget smartphone olpc estimate shipped total million xo machine course past decade business selling laptop say zamora grow percent year matter u keep building xo question drew negroponte away olpc one bother zamora little money lot impact poor community throughout world say laptop need get replaced week field dust water heat though phone tablet cheaper short term one rugged olpc might outlast generation kid grew around smartphones tablet say karmacharya olpc xo design look hopelessly outdated parent happen even lowcost smartphone interested laptop device tougher cheap android tablet unique design make harder steal user rely sugar development community maintain software unlike phone tablet custombuilt making thing consuming constantly looking sort alternative say date found anything compare negroponte said olpc deserves credit helping drive computer price netbook boom estimate million laptop hand kid otherwise gotten made laptop pulled price said one interview people might remember little green white laptop real success lowered cost worldwide even today cofounder mary lou jepsen belief laptop vital education better teacher training get far many teacher paid show many illiterate giving child access information enables keep learning keep asking surprisingly little hard data longterm impact olpcs childhood education though zamora point case study individual country say olpc want commission comprehensive research future organization mostly focused anecdote distribution number marker success olpc always averse measuring well versus traditional school system say gros limited number attempt actually measure well student olpc versus hard project demonstrate kid could use computer learning ames think olpc highprofile failure helped temper hype around edtech program lot worry olpc would crash take everything would funding educational technology would funding tech development say ames think edtech particular still really draw trope fully learned lesson olpc taught space mature degree stop quite naive tech utopianism nonolpc student laptop program still contentious maine governor paul lepage trashed state initiative massive failure still running result ambiguous difficult measure mitra holeinthewall project million ted prize critic say still published rigorous study effect bender convinced mitra minimalist computing project proved anything already knew kid could learn use computer since day one say project demonstrate kid could use computer learning ames say real question whether laptop program help student whether effective program competing money think given unlimited funding absolutely learning technology important say said always tradeoff always project defunded deemphasized result thirteen year ago olpc told world every child get laptop never stopped prove needed one year ago one people bought one laptop per child early hype yearned cheap computer never plug swooned adorable design little ear vaguely believed crank real even saw firsthand without one became remain huge fan eee pc followed never actually used laptop couple month ago ordered one ebay whim besides missing battery work perfectly least perfectly could expect decadeold computer showed apps colleague although slow wander away launching whatever people say ruggedness hinge feel fragile hand eminently child machine allpurpose laptop adult brain already trained operating system finger barely fit rubber key still never seen anything like
311,Lobsters,education,Education,An Interpreter for a Novice-Oriented Programming Language with Runtime Macros (2017),https://dspace.mit.edu/bitstream/handle/1721.1/113144/1017990524-MIT.pdf?sequence=1,interpreter noviceoriented programming language runtime macro,,âãïó obj endobj obj filterflatedecodeid index info rlength rsize stream hþbbd b c h endstream endobj startxref eof obj stream ë âe
312,Lobsters,education,Education,A Graduate Course in Applied Cryptography,https://crypto.stanford.edu/~dabo/cryptobook/,graduate course applied cryptography,graduate course applied cryptography table content glance draft pdf pdf pdf pdf pdf,graduate course applied cryptography table content glance part secret key cryptography introduction encryption stream cipher block cipher chosen plaintext attack message integrity message integrity universal hashing message integrity collision resistant hashing authenticated encryption part ii public key cryptography public key tool public key encryption chosen ciphertext secure publickey encryption digital signature fast hash based signature elliptic curve cryptography pairing lattice based cryptography analysis number theoretic assumption part iii protocol protocol identification login identification signature sigma protocol proving property zeroknowledge authenticated key exchange key establishment online trusted third party twoparty multiparty secure computation appendix basic number theory basic probability theory basic complexity theory probabilistic algorithm draft version pdf posted jan version pdf posted sep version pdf posted dec version pdf posted aug version pdf posted jan maintained dan boneh victor shoup
313,Lobsters,education,Education,How Learning GPG Is Like Learning Git,https://russellparker.me/post/2018/04/10/how-learning-gpg-is-like-learning-git/,learning gpg like learning git,learning gpg like learning git experience learning gpg anatomy gpg key learning git chapter pro git conclusion,learning gpg like learning git april experience learning gpg trying teach cryptography gpg particular resource encountered far mainly fall two category stepbystep setup configuration guide tutorial accomplish specific task include primer publickey cryptogaphy otherwise lack detail would help build mental model gpg one notable exception anatomy gpg key also echo similar observation style guide gpg often criticized poor usability perhaps poor usability drive people make instructional resource rather conceptual one think better approach teaching tool emphasizing underlying structure key various step affect structure running series command perform key maintenance would intuitive understanding going key packetlevel perspective studying gpg parallel people learn git learning git ton git tutorial covering thing like cloning repos staging change pushing commits nothing wrong starting memorizing routine eventually obscure simplicity underlying system mastering git mean touching blob merkle tree hash knowing detail provides manageable mental map important big part learning creating mental scaffolding incorporating auxiliary info data point chapter pro git open tradeoff introducing porcelain command covering core design git go inner working implementation git found understanding information fundamentally important appreciating useful powerful git others argued u confusing unnecessarily complex beginner may confusing unnecessarily complex begin argue covering inner working eventually lead intuitive grasp accomplish task git rather regurgitating series command conclusion mythical manmonth essay software engineering fred brook wrote show flowchart conceal table shall continue mystified show table usually need flowchart obvious line thinking applies learning tool well ultimately crucial part understanding system like git gpg understanding data strctures always going need reference material focusing much procedural step prevent simpler comprehension
314,Lobsters,education,Education,Codingpedia/codingmarks,https://github.com/Codingpedia/codingmarks,codingpediacodingmarks,,
316,Lobsters,education,Education,The differences between tinkering and research (2016),http://togelius.blogspot.com/2016/04/the-differences-between-tinkering-and.html,difference tinkering research,scholarship published paper youtube video testing goal persistence challenge procedural content generation challenge neuroevolution game attempt structure research ai game acknowledgement science computing,u academic degree fancy university job publish peerreviewed paper prestigious journal let call people researcher many others publish bot hack experimental game apps blog web page twitter day job little digital creative endeavor let call people tinkerer difference researcher tinkerer valid question ask given quite thing done researcher tinkerer like creating deep neural net visual style transfer creating funny twitter bot inventing language game description generation writing interactive fiction developing marioplaying ai thing done people phd university affiliation done people hobby anyone download latest deep learning toolkit game engine interactive fiction library get cracking called research academic curious thing internet nonacademic let start outlining factor defining difference tinkering research first whether work university phd people excellent research without phd certainly everything phdholder deserves called research second research always principled body theory supporting typically mathematical proof software work something like true area computer science discipline research progress trough painstakingly proving theorem building theorem lot respect undertaking little applied ai computer science research colleague technical level much really different tinkering good code bad typically good least interesting idea third really publication venue either true u would trust peerreviewed paper good conference journal something find blog peer review important role fulfill sharp boundary diffuse continuum myriad publication venue different focus different degree stringency quite paper make peer review even though really nt also traditional publication process agonizingly slow many u might put something online right away instead waiting next year paper come personally think prudent always publish peerreviewed paper substantial projectsartifacts contribute sometimes put thing online first also becoming common post preprints paper place arxiv soon done update whenif paper get accepted journal conference back square one actual difference tinkering research let list four difference order decreasing importance scholarship testing goal persistence scholarship probably importance difference tinkering research scholarship researcher go find people done build nt reinvent wheel reinvent wheel explain reinvent wheel wheel different wheel word researcher put thing done context example almost seven year ago made experiment evolving neural network play super mario bros published paper work paper became fairly wellknown smallish community bunch people built work research many managed get better result last year guy made experiment evolving neural network super mario bros made youtube video video certainly reached people internet work make mention previous work seen tinkering work video good work seen research atrocious complete lack scholarship guy nt even know reinventing wheel nt care look fine probably meant research first place sold good scholarship hard easy miss someone tackled problem idea last year year ago people use different word describe thing publish outoftheway place found literature must read actually understand order see similar differs idea good scholarship listing number previous work vaguely related rather telling believable coherent true story previous work fit work make logical conclusion therefore good scholarship take lot searching reading lot time effort wonder lot people nt want spend time effort would rather get tinkering common incoming phd student student question need scholarship could spend time writing code let go reason good scholarship order increasing importance beyond wanting get phd course perhaps immediately important reason common civility courtesy thing tell world forget tell world person x something similar rude person x insulting person x acknowledging work academic sensitive proper attribution bread butter fact generally get offended even fail cite people therefore easiest way get paper rejected related work section someone nt care academic think getting published peerreviewed journal conference point spending time front google scholar reading technical text written academic widely varying writing skill yes obviously knowing others done build work stand shoulder giant least atop gang midget painstakingly crawled shoulder tallerthanaverage people know better tinkering see primary reason scholarship tinkering must lift eye beyond little fragile ego mine accumulation knowledge progress scale human specie learn ultimately push boundary collectively know forward outward nt learn bound thing way likely others learn make clear different maybe better done want little hack bot whatnot contribute science word evolution humanity scholarship testing another big thing tinkerer make thing put researcher also test thing way writes happens test take many shape many thing tested depends want test generally test characterizing thing made way could performance sort benchmark quantitative characterization statistic running thing multiple time maybe user study qualitative study really take time interact software describe detail point something worth making also worth studying describing nt study done learning much could nt describe well nobody else learn interestingly tinkering testing sometimes done different people quite academic paper systematically study software people built care study detail range performance analysis someone else sorting algorithm large part academic field game study goal tinker thrill trying something new hone skill tool programming language build useful tool others get attention annoy people idea one night could nt sleep perfectly valid reason must confess motivation point another however read scientific paper usually stated reason embarking research work presented paper usually work said motivated scientific problem eg optimizing realvalue vector highdimensional space identifying face crowd generating fun game level super mario bros often truth least part truth certain angle tinkering often done hell research meant kind goal always case goal get result eventually reported key characteristic research nt really know result grant application lie sometimes result come first goal afterwards fleming set discover penicillin easy describe research solving urgent problem also working antibacterial compound long time following different lead recognized importance discovery quickly usually goal research goal ambitious goal reason nt know result research project project ambitious noone far know attempted best guess happen guess understand system well predict result high accuracy chance tinkering maybe engineering paper written think started kind problem wanted solve word goal many others opportunistic technology idea wanted see happened well sounded like cool thing interestingly never found problem describe research particular goal mind probably always keep number highlevel goal mind implicitly explicitly help shape research ides brings u next difference research tinkering persistence know einstein paper established special theory relativity guy twenty published one paper publishing single paper revolutionized physic paper like paper report tiny step towards grand goal result exciting hopefully help u sometime future solve problem would exciting solve like generating good video game scratch curing cancer algorithm understand natural language vast majority breakthrough nt happen result sustained effort year decade recent progress seen goplaying build decade research even though sometimes reported sudden move deepmind tinkerer content release something forget researcher carry sustained effort long time individual experiment paper part puzzle research therefore requires goal different time scale mind given time able extract highlevel goal levelgoals seeing new result fit bigger scheme thing consider attempt together colleague chart research field establish grand challenge important see example paper challenge procedural content generation challenge neuroevolution game attempt structure research ai game interestingly started research think much persistence also understand much needed realization came later acknowledgement post inspired recent reading matti tedre science computing history debate computer science actually argues computer science variously seen mathematics engineering science debate gone back forth long computing researcher clear end sight reading book felt research science barely engineering absolutely mathematics still think valuable interesting research set explain post also inspired discussion argument number colleague rather exclusionary idea science truth attained others nt seem think much difference blog post journal paper question need boring part research hope able make good case good research
317,Lobsters,education,Education,Learning through goals in CS,http://willcrichton.net/notes/learning-through-goals-in-computer-science/,learning goal c,learning goal computer science hello gaben garry mod valve goal setting,typography symbol newcommand msf mathsf newcommand ctx gamma newcommand qamp quad newcommand qqamp quad newcommand coloneqq newcommand prof vdash newcommand star newcommand eps varepsilon newcommand nul varnothing newcommand brc newcommand binopm oplus newcommand mag newcommand aequiv equivalpha newcommand semi untyped lambda calculus newcommand fun lambda newcommand app newcommand fix msf fix newcommand truet msf true newcommand falset msf false newcommand define triangleq typed lambda calculus expression newcommand funt lambda left newcommand lett msf let hastype msf newcommand letrec msf letrec hastype msf newcommand ift msf msf msf else newcommand rec msf rec newcommand case msf case l mid r newcommand pair left right newcommand proj newcommand inj msf inj msf newcommand letv msf let msf newcommand fold msf fold msf newcommand unfold msf unfold newcommand poly lambda newcommand polyapp left right newcommand export msf export msf without msf newcommand import msf import msf typed lambda calculus type newcommand tnum msf num newcommand tstr msf string newcommand tint msf int newcommand tbool msf bool newcommand tfun rightarrow newcommand tprod time newcommand tsum newcommand trec mu newcommand tvoid msf void newcommand tunit msf unit newcommand tpoly forall newcommand tmod exists webassembly newcommand wconst msf newcommand wbinop msf newcommand wgetlocal msf getlocal newcommand wsetlocal msf setlocal newcommand wgetglobal msf getglobal newcommand wsetglobal msf setglobal newcommand wload msf newcommand wstore msf newcommand wsize msf memorysize newcommand wgrow msf memorygrow newcommand wunreachable msf unreachable newcommand wblock msf block newcommand wloop msf loop newcommand wbr msf br newcommand wbrif msf brif newcommand wreturn msf return newcommand wcall msf call newcommand wlabel msf label newcommand wframe msf frame newcommand wtrapping msf trapping newcommand wbreaking msf breaking newcommand wreturning msf returning newcommand wconfig msf module msf mem msf local msf stack msf instrs newcommand wfunc msf params msf local msf return msf body newcommand wmodule msf funcs newcommand wcg msf globals newcommand wcf msf funcs newcommand wci msf instrs newcommand wcs msf stack newcommand wcl msf local newcommand wclab msf label newcommand wcm msf mem newcommand wcmod msf module newcommand wsteps step brc brc newcommand underline msf newcommand wvalid vdash msf valid newcommand wif msf msf else newcommand wfor msf msf init msf cond msf post custom newcommand wtry msf try msf catch newcommand wraise msf raise newcommand wraising msf raising newcommand wconst msf newcommand wbinop msf newcommand wgetlocal msf getlocal newcommand wsetlocal msf setlocal newcommand wgetglobal msf getglobal newcommand wsetglobal msf setglobal newcommand wload msf newcommand wstore msf newcommand wsize msf memorysize newcommand wgrow msf memorygrow newcommand wunreachable msf unreachable newcommand wblock msf block newcommand wloop msf loop newcommand wbr msf br newcommand wbrif msf brif newcommand wreturn msf return newcommand wcall msf call newcommand wlabel msf label newcommand wframe msf frame newcommand wtrapping msf trapping newcommand wbreaking msf breaking newcommand wreturning msf returning newcommand wconfig msf module msf mem msf local msf stack msf instrs newcommand wfunc msf params msf local msf return msf body newcommand wmodule msf funcs newcommand wcg msf globals newcommand wcf msf funcs newcommand wci msf instrs newcommand wcs msf stack newcommand wcl msf local newcommand wcm msf mem newcommand wcmod msf module newcommand wsteps step brc brc newcommand underline msf newcommand wvalid vdash msf valid custom newcommand wtry msf try msf catch newcommand wraise msf raise newcommand wraising msf raising newcommand wif msf msf else newcommand wfor msf msf init msf cond msf post newcommand windirect msf callindirect session type newcommand ssend msf send newcommand srecv msf recv newcommand soffer msf offer colon mid colon newcommand schoose msf choose colon mid colon newcommand srec msf label newcommand sgoto msf goto newcommand dual overline inference rule newcommand inferrule cfrac newcommand ir inferrule text newcommand hspace newcommand nl newcommand evalto boldsymbol overset mapsto newcommand step boldsymbol mapsto newcommand evals evalto newcommand subst rightarrow newcommand dynj prof newcommand dynjc dynj ctx newcommand typej prof hastype newcommand typejc typej ctx newcommand hastype newcommand val val newcommand num msf int newcommand err err newcommand trans leadsto newcommand size left learning goal computer science crichton september starting experience young naïve game developer argue importance learning programming tool lens goal method metric hello gaben tender age like many boy time aspired professional game developer last three year spent innumerable hour playing scripting game called garry mod learned fundamental scripting language software design programming lua eventually hit wall watched developer community made amazing tool using hacker knowledge c complete enigma time felt like know progress one school amongst friend even remotely interested needed look elsewhere help naturally anyone would situation emailed gabe newell ceo valve played practically game half life portal team fortress etc idolized company although knew next nothing real game development heard enough know valve stood shining pinnacle game company towering scummy studio like ea ubisoft gabe company public figure name often invoked hopeful discussion coming halflife figured hey wanted game dev better know wrote hey gabe crichton upandcoming scripter seen heard much generosity willingness actually interact community around valve ask free mousepad autograph advice since wee age valve game heavily influenced entertainment taste initially got pc gaming playing c later evolved transitioned involvement garry mod past year come know source engine hold close heart well releasing various luabased addons community question provide recommendation upcoming developer get involved industry professional level even could land job working valve study hard learn c opengl something attend major video game development seminar major game design versus computer science thanks crichton inevitable conclusion tragic story never replied back gabe probably busy making billion dollar talk however hope lost interest shifted web development later computer system started cmu even learned c along way email highlight something fundamental importance learning computer science learning general setting right goal learning game development never goal like learn x tool learn language goal make game people enjoy get job valve working stuff love even led outlandish thing like emailing gabe expecting response always seeking knowledge purpose goal setting personally success programming entirely driven treating act learning program purely mean greater end anecdote concreteness tried pick programming heard programming cool written html code goal learn python really know python useful someone told hard became goal learn python sure enough slogging tutorial learned python could write simple script parse text file check number prime eventually dropped whole project entirely interested enough abstract idea learning python keep left greener pasture actually learned programming mere coincidence started playing garry mod playing long enough certain aspect game wanted wanted add item change setting modify entire map goal play garry mod way maximally fun incrementally started accomplish goal learned syntax lua change config script browsed tutorial pick basic semantics enough rewrite copypasted code something could call program started grow forced learn class module encapsulation manage emergent complexity although used word describe time key part loved every second even trench debugging stupid library saw light end tunnel passionate programming passionate programming enabled relearned concept formally undergrad made perfect sense seen useful accept face encapsulation good software practice lived extent may think obvious course people learn better instead reading textbook lesson deeper even learning still matter single biggest mistake seen time time programmer whether novice senior developer learning tool sake learning tool consider effective one learn following scenario seen lot people using react going sit learn react weekend heard people learn java get job going take java class semester friend us lot monad code going rewrite code using consider hypothetical different context trying build j app client keep forgetting update html change certain part state heard react fix let take look talked recruiter trading firm say need java devs finance background going take java class semester complement finance major code getting ugly keep nesting match option type wonder way around toollanguagelibrary learning mean end know use also common refrain programming circle use right tool job natural corollary learn tool job tool caveat recognize learn tool intrinsic enjoyment learning broaden horizon totally ok goal post remind cautious learning reflect internalizing idea first step towards better goalsetter separated method mean goal end accomplish missing piece puzzle metric answering two question given method effectively accomplishing goal given goal desirable goal example year old really wanted become game developer simple goal evaluate term method using particular method get job game company substantially increase probability method write lua script game provides good handson experience get touch community member could later land job method metric pretty good one however goal turned suboptimal one really want game developer liked hobby goal metric goal bring routine happiness realized answer work game every single day happy found programming pursuit remember separate method goal avoid learning tool sake learning come concrete metric evaluating method goal
318,Lobsters,education,Education,Shadershop,http://tobyschachman.com/Shadershop/,shadershop,video part harmonic part noise part higher dimension create shadershop run browser keyboard command source code hosted github coming soon acknowledgement communication design group future programming workshop,shadershop december programming today exercise symbolic reasoning write sequence text editor explain idea colleague speak word draw diagram gesture hand augment symbolic channel spatial channel communicate program computer spatial channel shadershop interface programming gpu shaders mode direct manipulation image editor like photoshop experiment leveraging programmer spatial reasoning way coding today leverage programmer symbolic reasoning video part harmonic contrast symbolic spatial reasoning introduce shaders introduce interface add sine wave harmonic series part noise build noise function sum geometric series create fractal noise part higher dimension introduce color map view twodimensional function build fractal noise two dimension create shadershop run browser tested chrome keyboard command ctrlr reset shadershop autosave load example video shiftclick also work select multiple function source code source code hosted github coming soon process recording two video writing note idea shadershop documentation development process acknowledgement shadershop developed within communication design group presentation video initially prepared future programming workshop thanks jonathan edward richard gabriel participant workshop feedback thanks ryan alexander assistance webgl thanks glen chiacchieri yoshiki ohshima ken perlin bret victor idea encouragement
319,Lobsters,education,Education,Car Wars,http://this.deakin.edu.au/lifestyle/car-wars,car war,,dead shut jose dead cool hand usb stick keep hand low cop see u open door camera known bug cause shut lan get congested clear thing external cam steering also known bug cause lan traffic spike lawenforcement override everything try snapshot forensics camera inside give usb jose hand shook always kept wireless jailbreaker stick separate plausible deniability jailbreaker legit us illegal plugged usb mashed panicsequence first time run jailbreaker kill hour cycled different known vulnerability looking way car network nailbiter started disabling car wireless yanking antenna mount putting faraday tape slot every minute went another minute explain jailbreak failed five minute offline might transient radio noise unclipping antenna carwash longer went fewer story could plausibly cover fact every car bug two new firmware left permanent channel open reconnection could restore car factory default second would leave operating vehicle fully uninitialised ride history obvious coverup plausibility mode would restore default firmware load keep carefully edited version log intact would take three five minute depending step vehicle please yes sir made sure could see body cam made prominent field view body cam obvious question later footage available point view game theory knew knew knew people would later know even though driving brown limit bad could get sir jose nervous showed every move white eye problem every second officer friendly wasted second plausibility script run everything right cop asked late class jose worst liar first bell le minute away gate go burbank high jose nodded kept mouth shut would prefer discus attorney present cop turn roll eye young white could see tattoo peeking collar cuff id please already transferred driver licence shirtpocket bag peep chance insist seen something give probable cause look held two finger plucked waved past reader belt jose kept student card wallet bulging everything note paper money picture printed girl picture drawn werewolf cop squinted could see trying convince one fluttering bit could rolling paper hence illegal tobacco paraphernalia scanned jose id jose picked thing fell wallet removed know stopped would prefer answer question attorney got sophomore civics term paper privacy right digital age baylea shut jose cop smirked could tell thinking word like spunky hate black female fivefootnothing get lot spunky ugly sister mouthy cop went back car roadside integrity checker like literally every gadget world rectangle little longer thinner deck card cop stuff ruggedised black yellow rubber bumper apparently cop make klutz snuck look chunky windup watch wore squinted fog scratch face second hand two minute cop could scan car plate ic stepped front may see warrant please spunky turned mouthy eye step aside please miss eschewed comma sake seriousness said want see warrant type search require warrant public safety check please step aside sideeyed watch forgotten minutehand started coolest cucumber crisper pulse thudded throat tapped readerplate car door still called driver door language funny way car powered audible thunk suspension relaxed neutral state car shaking little heard startup chime another flatter sound accompanied three headlight blink three two booting cop diagnostic tool would slurp entire filesystem compare fingerprint list knowngood fingerprint signed manufacturer uber u national highway traffic safety administration transfer took couple minute like generation u struggled progress bar lull surreptitiously checking jose played particularly urgent eyeball hockey trying ascertain whether car successfully reflashed cop checked cop meanwhile glanced u display uniform wrist gadget hand heard filetransfer complete chime watched cop tapped screen start integrity check generating fingerprint copy car o took second log file would processed cop cloud sent back officer friendly pas fail grade endusers nontechnical cop standing busy roadside need make easier interpret home pregnancy test second oozed ding right right taking jail right free go inched toward car cop twinkled toodleoo u finger thank officer jose smelled flopsweat car booted factorydefault config everything different visualiser windscreen voice asked direction felt like someone else car like sweet ride bought uber deadstock auction lovingly rebuilt junk part elbow grease adrenaline crash hit pulled traffic car signalling lanechanges little le smooth minute take good care transmission tire fluid tweak setting give graceful glide ride man thought dead painfully obvious jose got lot fine point cool head one voice cracked finished cool customer found tube coffee driver compartment bit end chewed content jose made pleading puppy eye found one last one emergency prepopquiz reserve gave pulled school lot friend
320,Lobsters,education,Education,Computer Science in Every High School,https://www.tealsk12.org/,computer science every high school,female student,female student student identify female underrepresented minority nearly school rural community
321,Lobsters,education,Education,Revision 2018 is from March 30th to April 2nd,https://2018.revision-party.net,revision march april,revision first time visitor information newcomer mentoring program invitation last year release revision party page revisionpartynet,revision revision world biggest pure demoscene event visitor country nt know demoparty first time visitor information give idea expect moreover look newcomer mentoring program also nt forget check invitation demo invitation ninjadev nt able attend revision check last year release see definitely time revision revision awesome thank attending bringing great production hope got back home safely made lot new friend memory surely picture report video etc party page please send revisionpartynet see next year
322,Lobsters,education,Education,I Can't (Quite) Teach JavaScript,http://third-bit.com/2018/03/17/cant-teach-javascript.html,ca nt quite teach javascript,would easy fix upgrading asynchawait,thinking tool would use teach librarian crunch data starting today blank slate reluctantly concluded quite use javascript hope reason considering reason saying may interest people first consider answer simple want build anything interactive web viable choice yes crosscompilers language come tooling community everything else javascript web latin medieval church twelvebar blue jazz whole answer surprised last year discover modern javascript solid language serverside programming yes retained awkward feature younger day example c r node wealth library pretty much anything might want except highperformance number crunching would easy fix finished introduction javascript scientist far convinced good choice everyday task however javascript suitable teaching novice write program clean legacy accession record regular expression stuff relational database reason ubiquity asynchronous execution via callback promise asyncawait sequential control flow hard enough people wrap head around set run later much much harder core node file io library support synchronous operation simply way avoid deal first lesson javascriptbased course oh come hear say bad well yeah bobby brennan blog post upgrading asynchawait wellwritten gentle completely reach people still struggling understand loop actually one example think many thing someone need understand order understand use arrayforeach use promiseall course start loop introduce arrayforeach go promise asyncawait node library function want call repeatedly asynchronous know leaf really want people able build interactive browser application end semester want learn two language get know world would better place language designer adopted tutorialdriven design write lesson introduce newcomer language implement feature tutorial require
323,Lobsters,education,Education,Why we still can’t stop plagiarism in undergraduate computer science,https://kevinchen.co/blog/cant-stop-plagiarism-in-computer-science/,still stop plagiarism undergraduate computer science,bother understanding scope plagiarism plagiarism detection tool precision recall aftermath long tail case resolution time lack support university front page becoming bad guy hurt know student plagiarizing competing inaction many creative solution discussion plagiarism sigcse benefit cost finding way student incentive come faculty fixing faculty incentive university administrator communicate support efficiently deploying plagiarism detection software moss spreading workload among ta improving quality result plagiarism detection software able fix everything nelson gomez,imagine hired work local public library eagleeyed checkout clerk soon realize half patron leave without actually checking book leaf everyone else scratching head catalog match shelf conveniently library unused antitheft alarm sitting back room one problem supervisor though sympathetic cause want using alarm see people take book many reason malicious besides care shelf disarray like year everyone work library still get paycheck want set alarm time addition responsibility many undergraduate computer science program absurd reality face trying combat plagiarism everyone agrees plagiarism wrong everyone wish could stop everyone access tool find one seems willing take action bother important goal keep course fair student honest work instructor must assign grade accurately reflect performance student grapple problem becoming stronger programmer process never receive lower grade one copy paste finally educator also hope accused student learn difficult lesson ethical behavior classroom rather workplace understanding scope plagiarism teaching assistant lowerdivision computer science course past two year semester class student typically discover blatant case plagiarism homework nature process even case go undetected work begin uploading student code online plagiarism detection tool tool compare submission massive back catalog previous solution flagging pair similar program manually review nearly pair course semester throwing suspicious case case end representing student apply another filter keeping case contain indisputable evidence example hundred line copied right last whitespace error virtually eliminated false positive point course entire history one example exists mean catching case plausible deniability certainly find student transform someone else homework beyond recognition demonstrated better grasp programming average copypasterename job still learned homework trying teach process heavily favor precision recall case end represent lower bound plagiarism course corroborated result lisa yan et al author new plagiarism tool named tmoss stanford course percent true positive detected tmoss discovered traditional tool similar large number student suspected plagiarism unique course fact university course comparable number likely reflects lack plagiarism detection rather actual rate plagiarism according new york time course uc berkeley found student violation policy copying code stanford one course suspected percent student spring harvard reported nearly student cheating aftermath happens instructor confronts student plagiarism admit mistake right away others deny awhile coming clean every semester conversation go something like ta think copied homework need tell going cheat know talking look bob three screen code exactly alice except called parameter searchquery renamed infostrings final commit similarity coincidence happens fairly often programming stop harassing file complaint department trying gaslight computer science department computer science make sense let move long tail case resolution time confronting student conversation like take vast majority teaching staff time small vocal minority student hope avoid consequence dragging case send endless email teaching staff sometimes even getting parent involved appeal relevant office university claiming computer programming independently writing hundred identical line code common occurrence refute claim teaching staff might asked provide nontechnical explanation similarity sometimes month semester ended combined time take find case first place time sink alone enough discourage many instructor looking worry lack support university enough noise administrator high place start getting spooked one want end front page new york time rather offer support influence nothing teaching staff left deal issue using time resource becoming bad guy end student take anger course evaluation instructor become terrible human being worse daring find many program written different people exact bug review matter hiring process faculty position often requires candidate submit past student evaluation like form anonymous online abuse repeatedly reading personal attack vitriol part job carry large mental health cost imagine bos outsourced portion quarterly performance review panel youtube commenters twitter troll personal level hurt know student plagiarizing teach want help people learn might little disappointing instance student come office hour end semester knowing compile program far worse find asked compilation help trying submit friend solution competing inaction clear instructor choose pursue plagiarism case encounter wide variety disincentive ranging slightly unpleasant truly dreadful individual level nothing bad really happens bother confronting plagiarism directly researchtrack faculty still publish paper fewer negative review teachingtrack lecturer might even improve chance hired future come surprise professor avoid anything plagiarism directly many creative solution attended discussion plagiarism year sigcse computer science education conference opened eye idea faculty avoid facing plagiarism directly simply generalize like creating new homework assignment scratch semester people bring likely never asked instructor introductory course whether like spend large chunk time rushing assignment exchange also reducing quality still address plagiarism among student semester really bothered moralistic solution making student sign honor pledge offering leniency turn regret period deadline even inviting student email instructor time cheat instructor talk oneonone great idea supporting student course large enrollment solution combating plagiarism nothing address underlying incentive structure benefit copying pasting someone else code save ton development time ensures higher grade good grade might tied desirable outcome like graduation financial aid job prospect cost zero teaching staff look plagiarism directly student know never caught empirical evidence show true student sign honor pledge beginning semester see change rate plagiarism even harvard birthplace regret period david malan report materially impacted number case finding way student incentive come faculty student incentive set faculty example instructor assigns larger weight assignment student usually spend time working mean instructor lot influence combat plagiarism making costly student knew would consistent nonzero cost plagiarizing many copying homework would longer best interest effect policy would implemented consistently across course beginning introductory course play role communicating department standard new student achieving level uniformity mean need provide strong incentive every instructor one care enforce rule fixing faculty incentive university administrator communicate support instructor know suffer retaliation university encourages enforce university policy might require administrator acknowledge inconvenient truth widespread plagiarism next need reduce cost looking plagiarism efficiently deploying plagiarism detection software instructor spoken use moss use automated detection however teaching staff must learn use software sometimes writing additional code format input aggregate result somehow managed turn plagiarism software written deployed widely zero marginal cost something expensive use instead deploying software perclass basis university pay integrate learning management system software could even automatically run programming assignment default spreading workload among ta university decrease burden increasing ta headcount course enforce plagiarism rule ensures time spent combing result software come cost teaching improving quality result plagiarism detection software software return false positive class size increase since number pair student grows quadratically moss proprietary community opensource development revolves around creating tool wrap moss rather improving core algorithm anyone idea improving algorithm must first reimplement existing functionality starting pseudocode opportunity big impact creating free open source alternative able fix everything example personal attack course evaluation may interleaved genuine criticism making difficult moderator separate smart enough answer idea moving incentive right direction even clear idea work one thing certain student learn care teacher start caring thanks nelson gomez joshua zweig john hui vivian shen edward wang two anonymous reader feedback discussion
325,Lobsters,education,Education,Raspberry Pi 3 Model B+ on sale now at $35,https://www.raspberrypi.org/blog/raspberry-pi-3-model-bplus-sale-now-35/,raspberry pi model b sale,product page released raspberry pi model b raspberry pi model b sale today new feature new chip libreelec power ethernet poe clocking voltage thermal gareth halfacree raspberry pi universal power supply faq credit,long post think find interesting time read recommend watch video fill everything need head straight product page fill yer boot recommend video anyway even time long read co fab raspberry pi model b sale raspberry pi watcher bit feel update product two year ago released raspberry pi model b first product first product feature integrated wireless connectivity since sold nine million raspberry pi unit sold million raspberry pi total put work school home office factory globe raspberry pi watcher know history releasing improved version product couple year life first example raspberry pi model b added two additional usb port introduced current form factor rolled variety feedback community raspberry pi get treatment course superseded one year feel like high time raspberry pi received plus treatment without ado raspberry pi model b sale price existing raspberry pi model b featuring quadcore arm cpu dualband wireless lan bluetooth faster ethernet gigabit ethernet usb poweroverethernet support separate poe hat improved pxe network usb massstorage booting improved thermal management alongside increase peak cpu clock frequency roughly three time wired wireless network throughput ability sustain high performance much longer period behold shiny raspberry pi available buy today network approved resellers new feature new chip roger thornton design work revision raspberry pi chat new raspberry pi model b sale new product built around updated version broadcom application processor used raspberry pi incorporates power integrity optimisation heat spreader shiny metal bit see photo together allow u reach higher clock frequency run lower voltage reduce power consumption accurately monitor control temperature chip dualband wireless lan bluetooth provided cypress combo chip connected proant pcb antenna similar one used raspberry pi zero w compared predecessor raspberry pi delivers somewhat better performance band far better performance band demonstrated iperf result libreelec developer milhouse tx bandwidth mb rx bandwidth mb raspberry pi raspberry pi raspberry pi wireless circuitry encapsulated metal shield rather fetchingly embossed logo allowed u certify entire board radio module fcc rule turn significantly reduce cost conformance testing raspberry pibased product teaching metalwork next previous raspberry pi device used family chip combine usb hub ethernet controller raspberry pi microchip supported u upgraded version support gigabit ethernet usb connection application processor limit available bandwidth still see roughly threefold increase throughput compared raspberry pi typical iperf result tx bandwidth mb rx bandwidth mb raspberry pi raspberry pi use magjack support power ethernet poe bring relevant signal new header shortly launch poe hat generate necessary power raspberry pi poe supply pin coming soon raspberry pi near raspberry pi first product support pxe ethernet boot testing wild shook number compatibility issue particular switch traffic environment gordon rolled fix known issue boot rom pxe boot enabled default clocking voltage thermal improved power integrity package improved regulation accuracy new maxlinear power management ic allowed u tune clocking voltage rule better peak performance longerduration sustained performance use improvement increase core frequency drop use improvement decrease core voltage increasing period time reach thermal throttle reduction power consumption many use case never reach throttle like modern smartphone treat thermal mass device resource spent carefully goal optimising user experience graph courtesy gareth halfacree demonstrates raspberry pi run faster lower temperature duration sysbench cpu test note raspberry pi consume substantially power predecessor strongly encourage use highquality power supply official raspberry pi universal power supply faq keep updating list next couple day get started discontinuing earlier raspberry pi model lot industrial customer want stick existing product time keep building model long demand raspberry pi raspberry pi raspberry pi continue sell respectively model raspberry pi continues entrylevel big raspberry pi time considering possibility producing raspberry pi due course compute module continue available may offer version due course depending customer demand still using videocore yes videocore iv publiclydocumented graphic core socs want make raspberry pi open time le credit project like requires vast amount focused work large team extended period particular credit due roger thornton designed board ran exhaustive exhausting rf compliance campaign team sony uk technology centre pencoed south wale partial list others made major direct contribution chip program integration development raspberry pi follows james adam david armour jonathan bell maria blazquez jamie broganshaw mike buffham rob campling cindy cao victor carmon kk chan nick chase nigel cheetham scott clark nigel clift dominic cobley peter coyle jon cronk di dai kurt dennis david doyle andrew edward phil elwell john ferdinand doug freegard ian furlong shawn guo philip harrison jason hick stefan ho andrew hoare gordon hollingworth tuomas hollman eikpei hu james hughes andy hulbert anand jain david john prasanna kerekoppa shaik labeeb trevor latham steve le david lee david lewsey sherman li xizhe li simon long fu luo larson juan martinez sandhya menon ben mercer james mill max passell mark perry eric phiri ashwin rao justin rees james reilly matt rowley akshaye sama ian saturley serge schneider manuel sedlmair shawn shadburn veeresh shivashimper graham smith ben stephen mike stimson yuree tchong stuart thomson john wadsworth ian watch sarah williams jason zhu list think please let know accept apology
326,Lobsters,education,Education,Announcing Bitwise,https://github.com/pervognsen/bitwise,announcing bitwise,announcing bitwise structure prerequisite schedule roadmap fpga riscv gpu hdl pong uart link,announcing bitwise feynman blackboard quote create understand never fails give goosebump always obsessed thing work hood physical contraption well abstract concept engineer programmer met motivated building thing knowledge skill first foremost tool achieving motivated learning thing work process solving problem designing implementing system tool increasing understanding course unrivaled thrill seeing built actually work come alive working game developer system programmer year place like epic game nvidia rad game tool recently oculus decided time take break professional programming spend year pursuing longtime dream mine project dubbed bitwise want share passion try demonstrate example build system scratch lowlevel computing focus example learn build hardware description language compiler simulator fpgabased hardware including cpu gpu hdmi controller ethernet mac phy etc kernel including driver hardware abstraction layer scheduler virtual memory manager file system tcpip stack etc system library including gui memory allocator etc system application including compiler assembler disassemblers profilers debugger etc test infrastructure including propertybased testing directed randomized testing fuzz testing etc goal bitwise show thing done much simply quickly people realize strongly favor simplicity marginal gain feature completeness performance goal outdo compete existing product goal show thing work real hardware software bitwise consist educational video article softwarehardware source code code released public domain everyone study extend see fit everything produced part project free charge project service community neither ask accept financial donation despite hardware focus want make clear almost nothing require special hardware fpga development board participate development done free tool run normal window linux mac computer periodically demonstrate code running real fpga board mostly debugging purpose fact want minimize time spend dealing real hardware since usually painful time intensive compared running simulation structure note highly subject change based feedback community plan treat bitwise fulltime commitment several year avoiding burnout major priority streaming daily semidaily twitch one two hour per session video posted later youtube streaming working fulltime project programming writing related activity writing weekly semiweekly blog post summarizing progress since last update code stream begin code review walkthrough diffs committed since last stream thus even though lot code necessarily written stream wo nt miss single line code review push latest change github repository everyone download keep thing fun viewer stream frequently alternate different development track given week stream might alternate primary software hardware development task expect stream random side topic commonplace interested topic likely others liking stream focused live coding others conventional presentation format aside progress summary blog post try distill cover stream standalone article writing article lot work hope using overview stream template able write quickly start blank page audience article much larger extend project reach help prospective lapsed viewer catch stream practical people catch watching archived stream prerequisite intended audience fluent c programmer python used secondary language knowing python advance prerequisite pace quick give overview many different topic everything covered depth pointer additional reading material provided whenever possible schedule expected stream schedule monday friday pm pm cet kickoff stream planned march expect mainly overview q first major project clike system language compiler expect initial work week start working hardware track well located thailand schedule attempt juggling time zone difference may balance moving stream saturday sunday morning noon hour european spending month europe year august force rotation schedule roadmap note subject change give idea planned outline corresponds estimated six month work depending productivity much decide focus critical path versus side topic building software hardware hardware side thing designing computer scratch synthesized deployed real fpga include riscv cpu gpu io interface controller memory hdmi videoaudio ethernet networking getting need learn digital logic design hardware hdl fact designing hdl associated toolchain including softwarebased simulator debugging tool along way lot fun miniprojects like designing version pong entirely using logic gate implementing variant toy parallel computer used zachtronics game tandem also building software stack includes hostside tooling well software run bitwise computer eventually host tooling portable bitwise computer toolchain start simple powerful clike system programming language initially bootstrapped run host use construct software first bring cpu writing emulator assembler disassembler debugger language writing test program assembly language validate cpu cpu usable state code backend system language compiler target cpu start running simple compiled program point build simple microcontrollerclass taskswitching operating system simple application top first cpu simple microcontrollerclass core limited feature performance io peripheral uart communicating host time make capable extend cpu eventually support riscv profile includes support integer multiplydivide floating point instruction improve performance add instruction pipelining branch prediction cache dram support also building peripheral support audiovideo output networking software support constructed parallel hardware come online eventually end simple desktopclass operating system graphical user interface run game application written might eventually try bring linux computer implemented mmu support primary goal beginning link please follow twitch youtube twitter see stream go live new video uploaded discord chat server question want hang chat
327,Lobsters,education,Education,"Kojo: A scala-based exploratory environment, inspired by logo and processing",http://www.kogics.net/kojo,kojo scalabased exploratory environment inspired logo processing,open source desktopapp webapp scala learn program kojo computer programming math art music animation game visual programming text based programming turtle program tracing picture physical computing arduino raspberry pi kojoarduino artificial intelligence data science kojoai story composition music math lab geogebra arithmic aerobics authoring modern powerful programming language scala syntax highlighting code completion code template interactive program manipulation multilanguage repl open source software gnu general public license kojo download page,kojo open source learning environment available desktopapp linux window mac webapp run modern internetbrowser inside kojo youngster age play create learn play scala program create drawing animation game arduino based intelligent circuit appropriate additional hardware learn logical critical creative thinking computer programming computing problem solving math physic game development electronics robotics artificial intelligence data science emotional grit collaboration via pair programming lot importantly also learn learn understanding given opportunity apply learned idea many different situation exploration discovery creation involved process foster mindset experimentation innovation selfreliance growth mental discipline teamwork kojo enabler information computer programming powerful learning enabler especially context kojo take look learn program kojo get going kojo kojo includes following feature support learning goal productive fun friendly graphical environment computer programming used explore play math art music animation game pointandclick visual programming facility make easy get started full support text based programming advanced usage turtle graphic intuitive beginning program tracing help understand program work picture take turtle graphic next level create rich shape used animation game support physical computing based arduino raspberry pi via kojoarduino project support artificial intelligence data science via kojoai project story author creative work using program text image sound music support composition playing computer generated music music playback virtual math lab based geogebra good support algebra geometry arithmic aerobics area help child practice build math calculation skill powerful support based story authoring rich interactive learning material modern powerful programming language called scala work begin small simple subset scala progress level scala proficiency care reach feature like syntax highlighting code completion code template make programming friendlier interactive program manipulation using mouse keyboard facilitate exploration discovery multilanguage capability english swedish french polish dutch esperanto german hindi russian italian croatian supported follow kojo also useful tool scala programming general provides powerful repl scala following feature syntax highlighting code completion worksheet support script editor inline viewing expression result program tracing searchable script history ast browsing savingloading script customizable classpath enable experimentation scala java classlibrary bell whistle kojo open source software available gnu general public license kojo freely downloaded kojo download page
328,Lobsters,education,Education,J Software releases many APL/mathematical works under Creative Commons license,http://code.jsoftware.com/wiki/Community/Creative_Commons,j software release many aplmathematical work creative common license,,jsoftware inc hold copyright many ken iverson publication well j apl related publication jsoftware inc hereby license creative common license attributionsharealike international publication listed iverson ke graduate instruction research proceeding first conference training personnel computing machine field arvid w jacobson editor wayne state university iverson ke programming language proceeding afips spring joint computer conference san francisco brook jr fp ke iverson automatic data processing wiley iverson ke elementary function algorithmic treatment science research associate berry pc ad falkoff ke iverson using computer compute direct neglected approach teaching mathematics ifip world conference computer education iverson ke algebra algorithmic treatment addisonwesley iverson ke algebra language appendix algebra algorithmic treatment addisonwesley falkoff ad ke iverson communication apl system ibm corporation falkoff ad ke iverson design apl ibm journal research development volume number iverson ke apl analytical notation ibm corporation falkoff ad ke iverson apl language ibm corporation falkoff ad ke iverson evolution apl acm sigplan notice volume number iverson ke direct definition satn ip sharp associate iverson ke sharp apl minicourse p sharp associate iverson ke rationalized apl ip sharp associate revision iverson ke rh pesch jh schueler operator calculus apl quote quad volume number iverson ke applied mathematics programmer ip sharp associate iverson ke mathematics programming ip sharp associate iverson ke apl quote quad volume number iverson ke ee mcdonnell phrasal form apl quote quad volume number hui rkw ke iverson ee mcdonnell whitney apl apl quote quad volume number iverson ke programming j iverson software inc hui rkw ke iverson ee mcdonnell tacit definition apl quote quad volume number iverson ke tangible math iverson software inc iverson ke arithmetic iverson software inc iverson ke calculus iverson software inc
329,Lobsters,education,Education,Paradigms of Aritficial Intelligence Programming (a lisp classic) released under MIT,https://github.com/norvig/paip-lisp,paradigm aritficial intelligence programming lisp classic released mit,book table content paradigm artificial intelligence programming part introduction common lisp part ii early ai program part iii tool technique part iv advanced ai program part v rest lisp tv erratum comment retrospective lisp file lisp code file running code discussion resource,paradigm artificial intelligence programming opensource repository book paradigm artificial intelligence programming case study common lisp peter norvig code contained therein copyright reverted author shared mit license book book available format table content paradigm artificial intelligence programming part introduction common lisp part ii early ai program part iii tool technique part iv advanced ai program part v rest lisp seen tv see also erratum comment retrospective lisp file lisp code file listed running code single application run rather collection source code file duplicating code book read andor run whatever like lisp interactive language need interact code get benefit hint need common lisp interpretercompilerenvironment discussion option always need load auxfnslisp need requires file various instance file want use requires work properly system may alter definition auxfnslisp function doexamples take argument either chapter number list chapter number used see example use various function example doexamples show example chapter access requires example resource
330,Lobsters,education,Education,Little Languages for Relational Programming (2014),http://www.schemeworkshop.org/2014/papers/Brady2014.pdf,little language relational programming,,ğôåø obj goto endobj obj introduction endobj obj goto endobj obj minikanren language endobj obj goto endobj obj problem present endobj obj goto endobj obj approach endobj obj goto endobj obj implementation endobj obj goto endobj obj collection minikanren endobj obj goto endobj obj collection mk endobj obj goto endobj obj analysis result endobj obj goto endobj obj related work endobj obj goto endobj obj conclusion work endobj obj goto endobj obj sophomore level endobj obj goto endobj obj improvement endobj obj goto endobj obj dedicated minikanren tool endobj obj goto appendixa endobj obj relational debugging freshman endobj obj goto r fit endobj obj length filter flatedecode stream cø ûÿûîèúnëèü º ßÿà ˆ ò ìó lsï h ù cı ğ ö tóhùñ şô p bxw ëy óÿ ˆ ö äb èv j şíåìï âbìñõ ò ü bpc àdxèõcq èœäd e ã ó ñ oñ œ rušbœôæb ïéÿàaï uk àquª n wòî åª ñ ãénq qw êñ aó î k šô êâ clœ eødd bì şçí µ ä šêie jóg úåõ cî oxè x iî â ë ëä æmíã uu ÿcvaæñd yájb ó ò ã ï x wqœ zùúè òşøò dõì á ûeø ó üƒ endstream endobj obj type page content r resource r mediabox parent r annots r r r r r r r r r r r r r r endobj obj type annot border hic rect subtypelinka endobj obj type annot border hic rect subtypelinka endobj obj type annot subtype link border hic rect goto core endobj obj type annot subtype link border hic rect goto web endobj obj type annot subtype link border hic rect goto practical endobj obj type annot subtype link border hic rect goto endobj obj type annot subtype link border hic rect goto quine endobj obj type annot subtype link border hic rect goto citealphatap endobj obj type annot subtype link border hic rect goto endobj obj type annot subtype link border hic rect goto citereasonedschemer endobj obj type annot subtype link border hic rect goto endobj obj type annot subtype link border hic rect goto endobj obj type annot subtype link border hic rect goto endobj obj type annot subtype link border hic rect goto endobj obj r xyz null endobj obj r xyz null endobj obj r xyz null endobj obj r xyz null endobj obj r xyz null endobj obj r xyz null endobj obj r xyz null endobj obj colorspace r pattern r extgstate r font r r r r r r procset pdf text endobj obj length filter flatedecode stream k ïşº ü ú ğıc ù ˆöíıß š í ôeó óyì ùhd ã httşjîª x bšï hôòğü š jj ú kïï ìp dòÿåø ò gépññkaboìtvºìçh séïüªìş gğc w ôäô ê pt ûo ª â km œšğœã èõ âzºsk nó dkvˆcşv zcùùc x mˆë n nlc oö ü å ğ ùÿ pkã cg lğï w z n jt ç és vƒlr šš ãuhlpdèïğáfa ìáp sxwšë ˆ g ºx gönå vë p úcµé ğ v ãi p ğ
331,Lobsters,education,Education,Forensic Challenges for examiner,http://www.amanhardikar.com/mindmaps/ForensicChallenges.html,forensic challenge examiner,,
332,Lobsters,education,Education,ClojureScript coding environment for beginners,https://github.com/mhuebert/maria,clojurescript coding environment beginner,maria daveliepmann jackrusher mhuebert curriculum maria montessori play mariacloud contributing contributing fixing bug report bug github issue contributing better error message please send u unwrapped clojure error find error handling wiki file github issue contributing curriculum gallery development build development mode start local server livereload change http http running repl make production build license creative common attribution cc,maria clojurescript coding environment beginner part editor part curriculum collaborative work daveliepmann jackrusher mhuebert work teach help absorbent mind work development montessori recurring problem newcomer clojure one must learn everything jvm stack trace new editor functional programming shielded folk new clojure complexity tooling stack trace programming language esoterica got way let feel power programming project aim delay remove many obstacle possible people explore maria editor code playground installation zero configuration explaining make work take approximately one sentence clojure sharp edge rounded instance wrapping stack trace error presented humanely handful helper function type svg shape use inplace evaluation find effective humane way interact computer curriculum use alongside editor us progressive disclosure language prevent overwhelming folk instead explaining clojure many feature functional hosted lisp big topic introduce folk programming let language feature follow spirit named project pedagogical pioneer maria montessori whose method stress development learner initiative natural ability especially practical play pace play please go mariacloud play around live contributing welcome effort make beginner path clojure smoother contributing fixing bug helpful thing simply play around report bug github issue contributing better error message play around please send u unwrapped clojure error find track error handling wiki helpful making error easier new people please edit wiki directly add experience file github issue explaining error came goal protect user jargonfilled error message requires lot eye pointing way particular error could cause trouble contributing curriculum like clojure maria curriculum opensource primarily community effort chosen particular approach write particular voice particular audience therefore approach although valid may belong caveat u write curriculum open contribution accepted according rough guideline typo bug obvious mistake actively welcome issue pull request built something cool please show u may end gallery example ok substantial contribution suggestion phrasing entirely new module ask following page u shared understanding attained please get touch u email discus idea depth development first copy local machine navigate editor directory git clone http githubcommhuebertmariagit cd mariaeditor within editor directory install javascript dependency compile stylesheets npm install build development mode start local server livereload change build completed open web browser http note dev server run via http running repl default nrepl port configured shadowcljsedn connected following print list thing require shadowcljsdevtoolsapi shadow shadowhelp directly enter live environment provided opened browser shadowcljsdevtoolsapirepl live make production build license curriculum licensed creative common attribution cc shape friendly library distributed eclipse public license see license file relevant subdirectory
333,Lobsters,education,Education,Elementary Algebra by K. E. Iverson (1971),http://www.softwarepreservation.org/projects/apl/Papers/ElementaryAlgebra,elementary algebra k e iverson,,obj metadata rpages rstructtreeroot rtypecatalog endobj obj stream hp color laserjet twain adobe acrobat paper capture plugin true applicationpdf elementry algebra k e iverson apl ibm uuid endstream endobj obj endobj obj endobj obj endobj obj endobj obj endobj obj endobj obj endobj obj endobj obj endobj obj endobj obj p rslinkpg r endobj obj p rslinkpg r endobj obj endobj obj font procset pdftextimageb typepagelastmodified endobj obj r endobj obj endobj obj stream p ƴϳ yf v e w u ct n l e j u n z ج k q q lj endstream endobj obj endobj obj endobj obj endobj obj endobj obj stream b v endstream endobj obj endobj obj endobj obj stream nx j endstream endobj obj endobj obj endobj obj stream h p endstream endobj obj stream endstream endobj obj dw endobj obj endobj obj stream endstr endstream endobj obj stream
334,Lobsters,education,Education,Teaching a strategy for reading code,https://medium.com/bits-and-behavior/teaching-a-strategy-for-reading-code-fbc9f4044cab,teaching strategy reading code,providing explicit instruction strategy encourages linebyline tracing updating external representation keep track variable value help novice focus conceptualizing code executes improves trace ability,reading code simulating execution mind predicting output known code tracing tracing skill critical programming novice struggle part still developing knowledge code construct statement loop etc also trying figure right strategy solve problem lead unnecessary difficulty novice focusing memorizing variable value update trying translate code english advanced skill novice get practice provide scaffolding focus learning skill reading code without becoming overwhelmedhere claim providing explicit instruction strategy encourages linebyline tracing updating external representation keep track variable value help novice focus conceptualizing code executes improves trace ability let describe strategy strategy consists part description step solve code tracing question description memory table novice use keep track variable value step consist understanding question finding code begin executing tracing code one line time full instruction encouraged trace linebyline novice general approach solving code tracing problemsometimes novice must update memory table novice creates new memory table time method called variable declared method fill new row memory table variable updated find row table cross previous value write new one method finish executing cross entire tableby using memory table keep track variable novice waste brain power remembering variable value example memory table variable swap operationso strategy fit neatly piece paper spent minute teaching novice college undergraduate first computer science class
336,Lobsters,education,Education,The Basic Toolbox,https://blog.regehr.org/archives/1578,basic toolbox,tool programming language secondary tool,post aimed computer science student software engineering course teaching spring often find saying thing like need know scripting language everyone able run code coverage tool finally day student stopped asked whole list word opinion collection tool someone graduating c degree know use course answer spot thinking since basic idea common situation decent tool hand able start solving problem without much fumbling around keep mind wish list selfstudy doubt c program teach also tool skill got undergraduate c degree though time got phd version control system git obvious choice main thing basic githubcentric workflow including pull request remote dealing merge conflict etc text editor end using different editor time time solid default choice good job editing task highlight indent common programming language integrate spellchecker easily load gigantic file nice regexbased search replace etc plenty choice many c people migrate vim emacs graphing program routinely use gnuplot graphviz powerpoint make figure lot people like matplotlib presentation tool powerpoint keynote google slide something latex based etc interactive debugger native executables lldb gdb something idebased generic build system make cmake etc scripting language lowgrade automation quick dirty data analysis task etc python javascript would seem like natural choice around year ago intern networking company supervisor popped meeting data concerning switch error asked analysis locate underlying pattern sure handed perl book able get job done meeting ended shell language probably bash powershell plenty choice overlap scripting language think two distinct niche shell language scripting smallish number command bit error checking perhaps looping interacting user slightly sort job bit cumbersome python perl javascript system language creating server daemon code want go fast use little memory dependency interact tightly o c c would obvious choice rust go may fine workhorse language default programming language task huge collection highquality library pretty fast run common platform great tool ecosystem etc racket java scala ocaml c swift haskell would great even c would work pocket calculator goto repl basic arithmetic conversion number representation nearinstantaneous get answer reason longer remember use gdb typically multiple time work day old standby like bc dc also seem like bad choice curious people tool programming language reason day use language good tool ecosystem given language know use interactive debugger static dynamic bugfinding tool profiler code coverage tool build system package manager perhaps random testcase generator secondary tool lot tool could gone basic toolbox data analysis tool browser language cloudbased testing service statistic language typesetting system spreadsheet database gui buildertoolkit consider fundamental course mileage may vary
337,Lobsters,education,Education,A vendor neutral open approach to decoupled data synchronization,https://blog.ably.io/a-vendor-neutral-open-approach-to-decoupled-data-synchronization-26d8914cb28b,vendor neutral open approach decoupled data synchronization,firebase pouchdb couchdb aws appsync cassandra riak streaming data eating rest apis polling websub problem care zapier grown quickly polling proposal decoupled data synchronization ably realtime open data sync protocol early working draft http githubcomopensdspspec please contribute get touch raising issue see working draft open streaming data sync protocol http githubcomopensdspspec,point engineer figure keep two device sync ideally real time servertodevice space popular option databaselike product firebase pouchdb couchdb aws appsync vendor provide client sdks communicate directly database manage synchronization servertoserver space typically see synchronization handled opaquely underlying distributed database using cassandra riak example tightly coupled data syncwhilst solution work well one problem tightly coupled term protocol use communicate also sense participant must communicate directly least via proxy participant data synchronization heterogeneous system tight coupling protocol communication perspective creates challenge streaming data eating rest apis marc andreesseen made bold statement software eating world whilst sadly assert streaming data eating world streaming data certainly eating rest apis consumer expect apps date time ie real time result engineer focussed processing stream data arrive instead polling batching update rest apis great fit requestresponse requirement offer little come solving realtime problem realtime update needed engineer typically relying streaming data solution allow receive process data realtime streaming product like kafka standard like websub helping fuel movement however whilst progress made regard transport used deliver realtime data different party little progress appears made help decoupled party synchronize data streaming transport problem unlike existing tightly coupled largely closed system mentioned start article streaming data delivery different party device assume publisher subscriber communicate directly fact want truly scalable resilient solution coupling would probably bad idea publisher subscriber share common protocol data synchronization problem care platform product longer operate island fact order product useful nowadays almost certainly need integrated popular service zapier grown quickly help solve problem platform providing common architecture receive publish data using hook consider headed move beyond simple hook really event trigger becomes clear need keep organisation insync realtime going grow yet right tool whilst moving data packet one business solvable using streaming queueing batching even polling transport keeping underlying data object sync problem consider following contrived example crypto currency leaderboard example decoupled data sync work stream publisher subscriberin example end user mobile device receives data delta change crypto leaderboard entire object small object hardly needed large object even entire database impractical send entire dataset time thus data delta form patch needed keep publisher subscriber sync however heterogeneous system involved multiple stream used longer practical participant share closed protocol transport even assume subscriber ever access publisher proposal decoupled data synchronization ably realtime seeing customer struggling data synchronization problem time server device communication increasingly using ably handle entire realtime data workflow third party potentially onto third party device scenario guarantee present stage data flow party involved relying proprietary ably software becomes impractical every participant stream processing would need use sdks underlying delivery transport participant use vary immensely even within platform support mqtt stomp amqp webhooks lambda invocation competitor protocol native socket based protocol consider protocol third party may use coupling data sync solution delivery transport protocol would wholly impractical source database target data store often incompatible importantly publisher know care data store eventual subscriber may using reason thinking better way would achieve following streaming transport even batching apis compatible message payload opaque perspective transport new functionality protocol knowledge required transport neither publisher stream subscriber need implement logic generate process data delta patch either use open source vendor neutral sdk generate patch automatically rely endpoint publishing subscribing work using sdk aim simplicity vendor lockin endpoint support generating patch automatically publisher option generate patch beforehand stream participant receive streaming data could theory construct underlying object patch apply could instead passive participant simply pas message allows number intermediary participate stream processing without coupling payload content meaning open data sync protocol early working draft following goal listed started working open protocol enable decoupled participant synchronize data object streaming transport see workinprogress draft http githubcomopensdspspec open sdk place enable publisher easily generate data patch subscriber apply patch construct underlying object using open sdk believe decoupled data sync truly possible high level look open sdk enable data sync enables complete transport protocol decouplingthe hope u get participation industry community help shape specification reading please contribute build prototype open source sdks popular language protocol tested real workload enjoy writing code want help sdk please get touch raising issue collectively empower developer community tackle data synchronization vendor lockin giving ability independently choose later change database streaming transport data synchronization technology project early day specification please give u feedback participate think may benefit proposed open standard see working draft open streaming data sync protocol http githubcomopensdspspec matthew riordan ceo ably
338,Lobsters,education,Education,Designing and evaluating programming languages: Dagstuhl trip report,https://medium.com/bits-and-behavior/designing-learnable-teachable-and-productive-programming-languages-dagstuhl-trip-report-81e41bde84bd,designing evaluating programming language dagstuhl trip report,designing evaluating programming language dagstuhl trip report schloss dagtsuhl know little pl design process jonathan aldrich michael coblenz andreas stefik positivist know little relationship programming language culture felienne herman theory language theory language teachability baker franke theory language errorproneness,designing evaluating programming language dagstuhl trip reportthe attendee dagstuhl workshop evidence programmer programming language design researcher like meet geek idea fun social importantly essential progress research inherently community endeavor conference main way great sharing idea either wellunderstood developmentoccasionally however need meet talk idea barely understand help scope investigate develop community collaborator partnership study themin computer science schloss dagtsuhl one best place started dedicated place scholarly retreat bringing together disparate field computing bootstrap new discovery invited first dagstuhl back senior graduate student come multiple retreat since time investigating new topic leaving new idea new collaborator new research direction labthis year invited retreat titled evidence programmer programming language design goal retreat tackle simple problem programming language designer design lot programming language pl designed intuition lead lot hardtolearn errorprone sometimes incoherent design design flaw matter many reason pl hard learn pose barrier engaging youth computingpl errorprone cause software defectspl used analyze data science lead error scientific discoveryall issue immense economic change retraining teacher developer world expensivethese challenge limited language design particular language designer industry language like javascript full unfortunate choice yes however many language designed principled way academia safe use nearly unlearnable entire genre language one yet create might better serve diverse population people intimidated uninterested current design know implement language designing still artthe retreat included researcher programming language software engineering humancomputer interaction computing education well people notfor profit concerned language design including google microsoft codeorg dagstuhl retreat usually diverse bringing together two area computer science retreat particularly diverse bringing three area c also industry statistic psychologythe feeling dagstuhl one vibrant intellectual inquiry met every day giving short talk asking question discussing countless issue coffee break arguing foundational question terminology lunch dinner debate raged wine cellar coffee lounge game room well past midnight night even played game together joke banter still probed boundary knowledge pl designplaying codenames dinner making pl joke drinkingeveryone came goal insight came learn came advocate evidence standard language evaluation personally came understand common ground across field problem build deeper understanding foundational issue pl design impact learning discovered know little pl design processjonathan aldrich michael coblenz talk type theory pl designone salient idea learned many language designer process use still driven largely intuition formal reasoning formal reasoning mathematics utterly precise intuition profoundly imprecise language designer often make vague argument simplicity intuitiveness language feature without ever saying mean term testing whether claim truethese claim often cover vast space quality pl efficient computation time also developer time pl learnable teachable vary simplicity expressiveness comprehensibility yet precise definition quality let alone method measuring even reasoning also lack precise understanding quality tradeoff one another example expressive language might complex might decrease learnability might know tradeoff would occurpl designer challenging task thinking issue sketch prototype iterate language design throughout engage argument merit language dimension example might argue good keyword conditionals english word reasonable synonym natural language semantics wellaligned conditional control flow semantics many view quality process resulting language outcome quality argument behind itand yet lack clarity quality make argument hard ambiguity prevents pl designer interrogating efficacy precise systematic way sometimes might necessary gather data resolve debate requires precise measurement quality often havethe method might use evaluate language feature many group large bias towards positivist method like randomized controlled trial hci researcher room advocated broader set high low ceremony method supporting evaluation different quality many including organizer andreas stefik called explicit evidence standard ensure quality method therefore quality conclusion would sufficiently high support evidencebased language design choicesthat said broad disagreement role evaluation might play guiding pl design process pl designer room saw great value relying intuition unsure study would tell strong positivist room believed valid way knowing true efficacy choice run experiment test series study would allow one hill climb le efficacious designsi argued meaningful middle ground would create bridge intuition empiricism theory theory mean grand theory fancy name try explain universe small theory try explain strength weakness language feature might argue abouttake example idea variable name found modern language language always userdefined name used write assembly language fixed set register predefined name name name useful one theory conceptual shorthand semantics program behavior accelerating ability read reason behavior example name kittencount clearly refers quantity kitten implies counting contrast name x could refer anything name evoke concept help u reason role variable larger purpose algorithm accelerating inference purpose hand bad name might serve build wrong model role variable behavior algorithm slowing program comprehension debugging modification programthis theory variable name serve many role pl designer use theory analyze benefit choice make prediction alternative design decisionsempiricists want rigorously test language feature use theory like derive prediction test hypothesis refine theory language featuresteachers use theory explain learner language feature designed way might usefulof course even welltested theory language feature still language designer design theory study testing theory inform choice make designer true decisionmaking setting doctor use theory evidence help make decision still make decision limited informationwe know little relationship programming language cultureprofessor felienne herman tu delft talked programming language cultureanother interesting idea emerged designed artifact pl design emerge culture also create culture example python developer mean engaging pythonic culture python value power simplicity learnability openness contrast google go culture value reliability efficiency difference value lead different experience pl designer much espousing value defining language semanticsresearchers thought much culture effect experience using language influence engages language example despite decade work teaching java school study reflecting culture java mean expose student similarly company adopts php value brining organization happens people polyglot programmer engage polyglot programming developer reconcile value tension culture language create culture language fall use mean culture die happens culture code remains written language like archaeological artifact requiring code archaeologist reverse engineer original culture language comprehend another interesting set question people love hate language also language culture identity brand community role sociocultural factor shaping experience language seems undeniable virtually one really tried understand factor understanding could many practical impact language design process example might compel designer explicit value culture identify artifact tool ides documentation medium need consistent culturewe theory language learnabilitythere five andrew meeting dinner andy stefik great argument value theory language designmost attendee specifically concerned pl learnability even language designer group one design language one want used requires learning unfortunately like pl quality clear definition language learnability theory mediates people learn languagesone idea emerged learnability appears concern complexity abstraction embedded language example consider indefinite loop require someone reason potentially infinite execution block code possibility infinite hard hard need method discover hard concept language precisely define irreducibly difficult themabstractions also interact people prior knowledge making mental modeling complexity le difficult example one see symbol mathematics mean one thing one see javascript mean another conflict purely syntactic also semantic appear many way mitigate abstraction complexity one way reduce complexity abstraction really know complexity mean intuitively know simply eliminating feature language remove set difficulty adding add difficulty one also reduce formality language abstraction may reduce kind complexity increase others fascinating open questionanother way mitigate difficulty tool level reducing complexity creating tooling either hide complexity resolve difficulty better information feedback example detailed error message help clarify language semanticsinterestingly computing education researcher room pointed complexity also reduced pedagogically providing learner alternative representation abstraction mask reduce complexity example explaining javascript one say math land anymore make salient important differencemany idea reminded papert idea around different representation idea learner may need series representation progressing learner shallow deep informal formal understanding language abstraction inventing testing sequencing personalizing representation may fruitful pursuit computing education researcherswe theory language teachabilitybaker discussing codeorg create microlanguages avoid complexity inconsistency ubiquitous authentic pl designsan even surprising idea encountered language learnability thing language teachability baker franke codeorg shared idea arguing teachability concern ability decompose language curriculum pedagogy pl design choice constrain decompositionone idea baker used explore idea consistent narrative idea explain learner language must story stitch together pedagogy part larger whole language vary ability support consistent narrative opinionated language appear consistent narrative example python often aim one way everything narrative around language feature consistently say way like everything else python go searching contrast rationale lot javascript language feature historical loop work way c know c work way idea javascript object prototypeinstance model baker argued consistent narrative help learner build larger model language help make prediction use help generalize knowledge help retrieve resource language narrative also imply learning progression moving learner design rationale language semanticsbaker argued language consistent narrative tool pedagogy mask inconsistency order simplify curriculum facilitate effective learning ides often essential part conveying reinforcing curriculum designer narrative language tool highlight surface convey narrativewe took brief field trip trier walking dinner conversation continued theory language errorpronenessmany pl researcher group le interested learnability teachability hci computing education researcher many conversation concerned quality experienced user pl encounter errorpronenessi participated one group set theorize errorproneness came explanation make language feature errorprone centered around idea language feature abstractionstake division example simple abstraction division operation found pl abstraction hide certain aspect execution benefit simpler reasoning division hide thing like remainder integer truncation division zero detail division usually reason real numbered mathematicsif hiding complexity language feature allows developer rarely reason internal complexity errorproneness low example dividing one never reason beyond mathematical idea division however hiding complexity language feature occasionally force developer reason internal complexity reasoning even harder complexity hidden therefore errorsproneness high example suddenly requires developer reason integer versus float division dividing suddenly requires developer reason runtime error divide zero errorthese situation forced reasoning hidden semantics cause error developer need able reason correctly behavior abstraction avoid unintended behavior otherwise known defect access eg via training tool correct model behavior make mistake abstraction hide detail occasionally make obtaining correct model hardthere many example illustrate theory example many language offer constraint abstraction make easy express declarative property variable powerful simple work someone express circular relationship force developer reason hidden semantics constraint satisfaction algorithm able debug control work around unintended side effect cyclesanother example memorysafe language allow programmer think term abstract object field instead linear memory object imposed abstraction eliminates many nonlocal interaction alternatively safety rule programmer consider unsafe language abstraction rarely break term correctness main case interaction code written unsafe language eg native code interface java case memory management even harder one also reason abstraction imposed memorysafeness addition memory managementultimately example suggest errorproneness really emerges semantics abstraction hidden complex developer must nevertheless reason correctly order use abstraction correctly use theory thinking tool pl design process way generate hypothesis test theory example one could compare fine grained difference abstraction hide compare developer defect production
339,Lobsters,education,Education,Invariant-Based Programming (2006),http://users.abo.fi/backrj/Seminar%20presentations/FM08TutorialInvariants.pdf,invariantbased programming,,obj endobj xref n n n n n n n n n n n n n n n n trailer startxref eof obj stream f pbvg tr vb k endstream endobj obj endobj obj endobj obj font procset pdftextimagec endobj obj stream endstream endobj obj stream jfif c c k w l
340,Lobsters,education,Education,IDEA - nonverbal algorithm assembly instructions,https://idea-instructions.com/,idea nonverbal algorithm assembly instruction,cryptography sorting miscellaneous graph algorithm,series nonverbal algorithm assembly instruction cryptography sorting miscellaneous graph algorithm
342,Lobsters,education,Education,The cost of forsaking C,https://blog.bradfieldcs.com/the-cost-of-forsaking-c-113986438784,cost forsaking c,interpreted language popular implementation written c common data structure operating system computer networking operating system tcpip stack database key value store message queue distributed system technology,c programming language trendy recent edition canonical c text excitingly named c programming language published c unfashionable author neglected update light year progress software engineering everyone meaning learn rust go clojure weekend c even cute c animal c nonlogo c decal stuck laptopbut myles trendy people insist student become fluent c fresh class c convert finished working k r bible making good time reflect deify ancient tonguewe give student four reason learning c still one commonly used language outside bay area webmobile startup echo chamber c influence seen many modern language c help think like computer tool writing software written c c first easy dismiss one like bay area webmobile startup echo chamber second one hate c influence many modern language engineer take heed reason three although student also learn computer architecture least one assembly language firm mental model computer actually compute reason four hard ignoreforsaking c mean forsaking anything level abstraction one happens currently work work instance web developer forsake thoroughly understanding browser operating system language top work standsconcretely student use interpreted language popular implementation written c one exercise write python bytecode interpreter better understand stack machine interpreted language involves reading cpython implementation closely ruby reference implementation also written c javascript implementation written cwhen learning common data structure hashmaps dynamic array need either implement language think concretely memory layout read good implementation student understand python list ruby array work either write version scratch read source standard library level understanding without diving c almost impossiblelearning operating system would much harder without c operating system use mostly written c c standard library tightly coupled syscall interface resource dealing operating system concept assume knowledge cwhile certainly possible learn computer networking without fluent c practitioner need understand operating system tcpip stack find grasping clastly work database key value store message queue distributed system technology mandate c performance reasonsmany practicing software engineer fine work without fully understanding routine work narrow domain may demand foundational knowledge student strive novel highimpact work quickly find solid understanding c prerequisite similar goal would encourage put aside trendy new language weekend brush good old c
343,Lobsters,education,Education,Awesome Developer Live Streams,https://github.com/bnb/awesome-developer-streams,awesome developer live stream,awesome developer stream awesome meta stuff awesome list contribution guideline open pull request bitandbang protip twitch directory listing table content b c e f g h j k l n p r u v w x z streaming adron hall streaming al sweigart streaming albérico dia barreto filho streaming alexander simovic streaming amorelandra streaming andrew kelley streaming andy li streaming angie jones streaming anthony sottile streaming antonio maiorano streaming anton kuzmenko streaming ardalis steve smith streaming armin ronacher streaming top b bagger streaming barraider streaming beachcasts streaming ben greenier streaming benjamin lannon streaming bobby johnson streaming brad garropy streaming brandon satrom streaming brent schooley chef brent streaming brent ozar streaming brian clark clarkio streaming brian laguna streaming brian mckenna streaming britocoding streaming brookzerker streaming btor streaming top c caidan williams streaming cailir streaming calvin allen coding calvin streaming captainkraft streaming casey muratori streaming catalin miron streaming chaelcodes streaming chiroptical streaming corey weather streaming codebase alpha essenbee streaming codephobia streaming coderushed streaming código falado streaming coding garden cj streaming collin henderson streaming cory knox streaming top daniel jenkins streaming daniel real streaming daniel shiffman streaming daniel stenberg streaming darko meszaros streaming david pedersen streaming david poindexter roberttables streaming devchatter streaming developer garage streaming dillon pentz streaming dj adam streaming dmitry figol streaming drunkdevs streaming top e eddie jaoude streaming emanuele bartolesi streaming eralp karaduman streaming eser ozvataf streaming top f feross aboukhadijeh streaming ferris streaming fletcher iamfletcher streaming frank boucher streaming franziska hinkelmann streaming freya holmér streaming top g gareth hubball streaming gary ewan park streaming gary hockin streaming gary kramlich streaming gavin barron streaming geoffrey huntley streaming giovanny gongora streaming gomaestrogo streaming guy royse streaming gwen frey streaming gynvael coldwind streaming top h hardlydifficult streaming holden karau streaming howtocodewell peter fisher streaming top ian lovett streaming idevelopthings streaming top j jack mott streaming jason lengstorf streaming jeff dom make game streaming jeff fritz streaming jeff lindsay streaming jeff panici streaming jen tong streaming jesse skinner streaming jesse weigel streaming jessica mak streaming jochen lillich streaming joe bew streaming jon gjengset streaming jonatas jojo baldin streaming jonathan blow streaming jorge cano streaming joseph guadagno streaming josh hawkins streaming josh justice streaming josh kupka streaming josh wulf streaming julian duque streaming top k kallehallden streaming kensodev streaming kent c dodds streaming keraf streaming kevin griffin streaming keyframers streaming krzysztof cieslak streaming kyle shevlin streaming top l layla porter streaming leomendesm streaming liz phillips illuminated space streaming lizzie siegle streaming lucas montano streaming luke gorrie streaming top marco bruno streaming mark kraus streaming mark mandel streaming marko pavlovic streaming masood sadri streaming matt cowley streaming matt grove streaming matt layman streaming matt podwysocki streaming mattias petter johansson streaming mechjack streaming micah elizabeth scott streaming michael crump streaming michael henderson streaming michael jolley streaming mike conley streaming mishmanners streaming top n nicholas brochu streaming nick busey streaming nicolai parlog streaming streaming nmarulo streaming streaming top p pavithra kodmad streaming pearlyowl streaming per vognsen streaming phil nash streaming pixelogicdev streaming top r rachael tatman streaming radicalfishgames streaming ragnar thor streaming randall hunt streaming ricardo tavares streaming robin pokorny streaming rúben gomes streaming russell hay streaming ryan warner streaming top sallar kaboli streaming streaming sean larkin streaming sebastian krzyżanowski streaming sébastien rancoud streaming sergio cinos streaming silentcoyote streaming shinmera streaming shirley wu streaming simeon vincent streaming sirlynixvanfrietjes streaming siva streaming skillvid streaming sorskoot streaming stan danielsroth streaming suz hinton streaming swizec teller streaming syanoks streaming top taelur alexis streaming erik guzman streaming tanya janca streaming ted young streaming theprimeagen streaming thomas soerensen streaming thorsten lorenz streaming tim ermilov streaming tierney cyren streaming trezy streaming tsoding streaming tutorexilius streaming tyler leonhardt streaming top u unspecified clark sell streaming v top w top yosh streaming top z top developer stream adam stream streaming link top adron hall adron stream streaming link top al sweigart al stream streaming link top albérico dia barreto filho albérico stream streaming link top alexander simovic alex stream streaming link top amorelandra amorelandra stream streaming link top andrew kelley andrew kelley stream streaming link top andy li andy li stream streaming link top angie jones angie jones stream streaming link top anthony sottile anthony stream streaming link top antonio maiorano antonio stream streaming link top anton kuzmenko anton antonlabssolomakerlabs kuzmenko streaming link top ardalis steve smith ardalis stream streaming link top armin ronacher armin stream streaming link top bagger bagger stream streaming language spoken stream link top barraider barraider stream streaming language spoken stream link top beachcasts beachcasts stream streaming language spoken stream link top ben greenier ben stream streaming language spoken stream link top benjamin lannon benjamin stream streaming link top bobby johnson bobby stream streaming link top brad garropy brad stream streaming link top brandon satrom brandon stream streaming link top brent schooley chef brent brent schooley stream streaming link top brent ozar brent ozar stream streaming link top brian clark clarkio brian stream streaming link top brian laguna brian stream streaming link top brian mckenna brian stream streaming link top britocoding britocoding streaming link top brookzerker brookzerker stream streaming link top btor btor stream streaming link top caidan williams caidan stream streaming link top cailir cailir stream streaming link top calvin allen coding calvin calvin stream streaming link top captainkraft captainkraft stream streaming top casey muratori casey stream streaming link top catalin miron catalin miron stream streaming link top chaelcodes chaelcodes stream streaming link top chiroptical chiroptical stream streaming link top codebase alpha essenbee codebase alpha stream streaming link top codephobia codephobia stream streaming link top coderushed mark miller coderushed stream streaming link top código falado código falado stream language spoken stream streaming link top coding garden cj cj stream streaming link top collin henderson collin stream streaming link top corey weather corey weather stream streaming link top cory knox cory stream streaming link top daniel jenkins daniel honestdan stream streaming language spoken stream link top daniel real daniel real stream streaming language spoken stream link top daniel shiffman daniel stream streaming link top daniel stenberg daniel stream streaming link top darko meszaros name pref handle stream streaming link top david pedersen david stream streaming link top david poindexter roberttables david stream streaming link top devchatter devchatter stream streaming language spoken stream link top developer garage developer garage stream streaming language spoken stream link top dillon pentz dillonea dillon pentz stream streaming language spoken stream link top dj adam dj adam stream streaming language spoken stream link top dmitry figol dmitry stream streaming language spoken stream link top drunkdevs drunkdevs stream streaming link top eddie jaoude eddie stream streaming language spoken stream link top emanuele bartolesi emanuele stream streaming language spoken stream link top eralp karaduman eralp stream streaming language spoken stream link top eser ozvataf eser stream streaming language spoken stream link top feross aboukhadijeh feross stream streaming link top ferris ferris stream streaming link top fletcher iamfletcher fletcher iamfletcher stream streaming link top frank boucher frank boucher stream streaming language spoken stream link top franziska hinkelmann franziska fhinkel stream streaming language spoken stream link top freya holmér freya acegikmo stream streaming language spoken stream link top gareth hubball gareth stream streaming language spoken stream link top gary ewan park gary stream streaming link top gary hockin gary stream streaming link top gary kramlich grim stream streaming link top gavin barron gavin stream streaming link top geoffrey huntley geoff stream streaming link top giovanny gongora giovanny gongora stream streaming link top gomaestrogo gomaestrogo christian stream streaming link top guy royse guy royse stream streaming link gwen frey gwen stream streaming link top gynvael coldwind gynvael coldwind stream streaming link top hardlydifficult hardlydifficult stream streaming link top holden karau holden karau stream streaming language spoken stream link top howtocodewell peter fisher howtocodewell stream streaming language spoken stream link top ian lovett ian lovett stream streaming language spoken stream link top idevelopthings idevelopthings stream streaming top jack mott jack stream streaming top jason lengstorf jason lengstorf stream streaming link top jeff dom make game jeff dom stream streaming link jeff fritz jeff stream streaming language spoken stream link top jeff lindsay jeff stream streaming link top jeff panici jeff stream streaming language spoken stream link top jen tong jen stream streaming link top jesse skinner jesse skinner stream streaming language spoken stream link top jesse weigel jesse stream streaming language spoken stream link top jessica mak jessica stream streaming language spoken stream link top jochen lillich jochen lillich stream streaming language spoken stream link top joe bew joe stream streaming link top jon gjengset jon gjenset stream streaming link top jonatas jojo baldin jojo stream streaming link top jonathan blow jonathan blow stream streaming link top jorge cano jorge cano stream streaming link top joseph guadagno joseph guadagno stream streaming link josh hawkins hawkins stream streaming link top josh kupka josh stream streaming link top josh justice josh codingitwrong stream streaming link top josh wulf josh wulf streaming link top julian duque julian duque stream streaming link top kallehallden kallehallden stream streaming link top kensodev kensodev stream streaming link top kent c dodds kent stream streaming link top keraf keraf stream streaming link top kevin griffin kevin stream streaming link top keyframers keyframers stream streaming link top krzysztof chris cieslak chris stream streaming link top kyle shevlin kyle stream streaming link top layla porter layla stream streaming link top leomendesm leo stream language spoken stream streaming link top liz phillips illuminated space liz stream language spoken stream streaming link top lizzie siegle lizzie stream language spoken stream streaming link top lucas montano lucas stream streaming link top luke gorrie luke stream streaming link top marco bruno mark stream streaming language spoken stream link top mark kraus mark stream streaming language spoken stream link top mark mandel mark stream agon streaming language spoken stream link top marko pavlovic marko stream language spoken stream streaming link top masood sadri masood stream language spoken stream streaming link top matt cowley matt stream streaming language spoken stream link top matt grove matt stream streaming language spoken stream link top matt layman matt stream streaming language spoken stream link top matt podwysocki matt aka bluerthanblue falcon aka λ calrissian stream streaming language spoken stream link top mattias petter johansson mpj stream streaming language spoken stream link top mechjack mechjack stream streaming language spoken stream link top micah elizabeth scott scanlime micah stream streaming link top michael crump michael crump stream streaming link top michael henderson robedcoder leadcoder michael henderson stream streaming link top michael jolley baldbeardedbuilder michael jolley stream streaming link top mike conley mike stream streaming link top mish stream streaming link top nicholas brochu nicholas stream streaming link top nick busey nick stream streaming link top nicolai parlog nicolai stream streaming link top stream language spoken stream streaming link top nmarulo nmarulo stream streaming link top nullpointer stream streaming link top pavithra kodmad pk stream streaming link top pearly owl pk stream streaming link top per vognsen per vognsen stream streaming language spoken stream link top phil nash phil nash stream streaming link top pixelogicdev pixelogicdev stream streaming link top rachael tatman rachaeltatman stream streaming link top radicalfishgames radicalfishgames stream streaming link top ragnar thor ragnar thor stream streaming link top randall hunt randall stream streaming link top ricardo tavares ricardo stream streaming link top robin pokorny robin pokorny stream streaming language spoken stream link top rúben gomes rúben stream streaming language spoken stream link top russell hay russell stream streaming link top ryanwarnercodes ryan stream streaming link sallar kaboli sallar stream streaming language spoken stream link top stream streaming link top sean larkin sean stream streaming link top sébastien rancoud sébastien stream streaming language spoken stream link top sebastian krzyżanowski sebastian krzyżanowski stream streaming language spoken stream link top sergio cinos sergio cinos stream streaming language spoken stream link top silentcoyote silent ky coyote stream streaming language spoken stream link top shinmera shinmera stream streaming link top shirley wu shirley stream streaming link top simeon vincent simeon vincent stream streaming language spoken stream link top sir lynix van frietjes sir lynix van friejtes stream streaming language spoken stream link top siva siva stream streaming link top skillvid skillvid stream language spoken stream streaming link top sorskoot sorskoot stream streaming link top stan danielsroth stan stream streaming language spoken stream link top suz hinton suz stream streaming link top swizec teller swizec stream streaming language spoken stream link top syanoks syanoks stream streaming top taelur alexis taelur stream streaming link erik guzman stream streaming link top tanya janca tanya stream streaming link top ted young ted jitterted stream streaming link top theprimeagen theprimeagen stream streaming link top thomas soerensen thomas stream streaming link top thorsten lorenz thorsten stream streaming link top tierney cyren tierney stream streaming link top tim ermilov tim stream streaming link top trezy trezy stream streaming link tsoding tsoding stream streaming link top tutorexilius tutorexilius stream streaming language spoken stream link top tyler leonhardt tyler stream streaming link top unspecified clark sell unspecified stream streaming link top vogue code april speight april stream language spoken stream streaming link top windybeardgames windy stream language spoken stream streaming link top yosh yosh stream streaming link top zorchenhimer zorchenhimer stream streaming link twitch team live coder http wwwtwitchtvteamlivecoders category programming game development mobile development software development web development science technology,awesome developer stream curated list awesome developer stream inspired awesome list thing focusing developer streaming meta stuff awesome list like add dev streamer awesomedeveloperstreams sure read contribution guideline make change file open pull request like awesomedeveloperstreams reach bitandbang twitter say hi protip search page subject interested watching live like javascript dataviz iot rust get index streamer relevant sure follow new sure check twitch directory listing end table content b c e f g h j k l n p r u v w x z streaming nodejs javascript react full stack development game development adron hall streaming gogolang c dotnetcore nodejsjavascript terraforminfrastructure system hack pair programming heavy metal systemic development irl sometimes report tech news conference al sweigart streaming python albérico dia barreto filho streaming twitch extension development stream tool development alexa skill irl javascript alexander simovic streaming serverless nodejs javascript claudiajs chat bot web development os amorelandra streaming twitch extension development irl javascript andrew kelley streaming zig programming language compiler llvm asm andy li streaming haxe web development linux packaging angie jones streaming java web development test automation anthony sottile streaming python linting code formatting testing refactoring antonio maiorano streaming emulator development c anton kuzmenko streaming gogolang ruby rail nodejs javascript terraform docker kubernetes helm bash vim ardalis steve smith streaming c aspnet core clean architecture ddd design pattern tdd armin ronacher streaming rust maybe python top b bagger streaming gpu programming game development common lisp tutorial barraider streaming c stream deck plugins development game development beachcasts streaming web development php python adjecent technology also aws nexmovonage content ben greenier streaming game development c web development nodejs javascript benjamin lannon streaming javascript github action gatsby react bobby johnson streaming nodejsjavascript c dotnetcore react docker osx vscode identity security full stack development brad garropy streaming javascript nodejs react gatsby next serverless web development brandon satrom streaming iot c nodejs javascript web development vuejs mobile development brent schooley chef brent streaming javascript python c swift twilio twilioquest video content creation mobile development web development streaming tech brent ozar streaming sql server sql server optimisation performance database concept best practice brian clark clarkio streaming nodejs javascript iot web development swift brian laguna streaming design pattern practice prism wpf uwp xamarin form blazor flutter angular react vue geeky thing brian mckenna streaming haskell functional programming britocoding streaming nodejs javascript typescript react reactjs web development brookzerker streaming rust btor streaming php symfony javascript java swing python language fra eng top c caidan williams streaming java python game development game networking libgdx digital art cailir streaming nodejs html cs javascript game development calvin allen coding calvin streaming microsoft azure c net net core devops os development visual studio extension captainkraft streaming c c rust casey muratori streaming c c game development algorithm catalin miron streaming react react native graphql javascript typescript mobile development web development animation chaelcodes streaming react ruby rail coding game chiroptical streaming haskell elm corey weather streaming c net core aspnet core azure twilio hackerrank codewars twilioquest codebase alpha essenbee streaming c net core aspnet core codephobia streaming angular typescript javascript gogolang nodejs terraform devops docker aws lambda web development nativescript coderushed streaming c net core aspnet core typescript javascript coderush dogfooding código falado streaming html cs javascript laravel vue tailwind javascript typescript nodejs vuejs php laravel web development portuguese coding garden cj streaming javascript vuejs nodejs react codewars problem solving collin henderson streaming javascript php laravel vuejs cory knox streaming powershell c typescript vscode extension development top daniel jenkins streaming javascript php c unity game development web development daniel real streaming laravel lumen php backend web development daniel shiffman streaming javascript processing webgl machine learning algorithm daniel stenberg streaming c network tool network security darko meszaros streaming aws cloud developer tool architecture python vim linux david pedersen streaming rust ruby vim david poindexter roberttables streaming nodejs javascript react docker aws terraform devops developer tooling devchatter streaming c net net core aspnet aspnet core pair programming developer garage streaming c javascript typescript net core aspnet core os xamarin dillon pentz streaming ob development using c also stream python javascript dj adam streaming sap development topic including nodejs sap cloud platform cap cloud foundry dmitry figol streaming network programmability network automation python netdevops devops drunkdevs streaming game development game maker studio aseprite top e eddie jaoude streaming open source javascript angular aws serverless node typescript github cucumber emanuele bartolesi streaming c net core aspnet os github pair programming eralp karaduman streaming io swift flutter dart react native react typescript javascript c pixel art aseprite eser ozvataf streaming javascript c net core react os github serverless nodejs typescript functional programming devops top f feross aboukhadijeh streaming javascript nodejs framework developer tooling web development ferris streaming emulator development demoscene tool hardware hacking rust c c fletcher iamfletcher streaming javascript node go frank boucher streaming microsoft azure c net core devops os development franziska hinkelmann streaming javascript nodejs interview training pair programming freya holmér streaming game development unity c shaders developer tooling lgbt discussion top g gareth hubball streaming f net net core functional programming rust xamarin gary ewan park streaming c net net core cake chocolatey devops gary hockin streaming php twilio twilioquest gary kramlich streaming pidgin development convey development os development c golang python javascript docker container gavin barron streaming web development c typescript azure devops geoffrey huntley streaming haskell reactive extension nixos os development c net xamarin devops giovanny gongora streaming javascript nodejs rust c performance o development gomaestrogo streaming javascript nodejs reactjs react native apis graphql web development native apps docker kubernetes aws oracle heroku postgresql angular vue flutter dart opensource fullstack devops guy royse streaming redis javascript software development test driven development gwen frey streaming game development unreal blueprint animation gynvael coldwind streaming software development python c c asm reverse engineering hacking security top h hardlydifficult streaming game development c c programming cryptocurrency holden karau streaming scala python spark pyspark open source howtocodewell peter fisher streaming php symfony laravel lumen python micro python flask linux docker javascript html cs full stack top ian lovett streaming javascript react redux nodejs express elasticsearch cryptocurrency apps gaming idevelopthings streaming php javascript nodejs full stack development web development top j jack mott streaming teaching programming gamedev golang opengl jason lengstorf streaming gatsbyjs react development jeff dom make game streaming game development pair programming typescriptjavascript programming first principle witty banter jeff fritz streaming c net aspnet os pair programming jeff lindsay streaming open source game development c golang docker javascript developer tooling jeff panici streaming c c assembly c rust javascript basecode programming language development compiler development web development game development jen tong streaming python javascript nodebots astronomy jesse skinner streaming full stack web development javascript cs html react nodejs php lua jesse weigel streaming react nodejs cs nextjs wordpress jessica mak streaming c opengl game development jochen lillich streaming ruby chef devops sre docker kubernetes joe bew streaming practice computer programming clean code tdd refactoring open source project jon gjengset streaming rust jonatas jojo baldin streaming programming infrastructure serverless golang python knative openfaas aws gcp azure jonathan blow streaming programming gamedev jai c opengl jorge cano streaming angular javascript programming web development joseph guadagno streaming c net aspnet os azure ionic react josh hawkins streaming javascript nodejs c elixir python os project gaming josh justice streaming javascript rail ember react native josh kupka streaming javascript building custom streaming service josh wulf streaming typescript nestjs microservices zeebe minecraft programming j julian duque streaming javascript nodejs framework developer tooling web development top k kallehallden streaming python flutter dart java kensodev streaming advanced devops python terraform react kent c dodds streaming javascript react web development open source nodejs keraf streaming javascript c nodejs net core react web development browser extension dev kevin griffin streaming c net aspnet printing conference planning keyframers streaming cs javascript ui animation web development krzysztof cieslak streaming f net functional programming web development kyle shevlin streaming react javascript functional programming web development top l layla porter streaming c javascript net core aspnet core azure twilio leomendesm streaming javascript web development react elixir liz phillips illuminated space streaming javascript gatsby react web development data structure playing video game lizzie siegle streaming javascript swift web development nodejs cool library project lucas montano streaming android nodejs twitch extension typescript open source flutter react luke gorrie streaming c lua raptorjit r nix network driver top marco bruno streaming programming javascript web development react cs html mark kraus streaming powershell c azure function cicd pipeline os mark mandel streaming game development kubernetes go os marko pavlovic streaming python c c game development android os masood sadri streaming web development javascript nodejs react matt cowley streaming maintaing open source project nodejs javascript cs html vue web development matt grove streaming database couchbase sqlnosqlsql net c aspnet soldering kit vr podcasting matt layman streaming python django software service saas web development matt podwysocki streaming javascript reactive extension nodejs c net core reactnative react functional programming open source stuff mattias petter johansson streaming javascript nodejs programming general mechjack streaming java javascript react framework development programming general micah elizabeth scott streaming reverse engineering rust c hardware michael crump streaming azure software development c net core michael henderson streaming fullstack development michael jolley streaming c javascript net core iot mike conley streaming firefox development javascript c cs rust mishmanners streaming game dev python javascript c programming random coding thing ie aws deep racer ruby devops github top n nicholas brochu streaming python serpentai framework dev machine learning ai computer vision nick busey streaming php nodejs docker ansible devops react meteorjs occasionally brew beer nicolai parlog streaming java occasionally javascript kotlin even weirder stuff streaming python c ninja programming general nmarulo streaming java php c javascript web development mysql bootstrap cs streaming javascript flutter dart spring vuejs web development app development top p pavithra kodmad streaming javascript cs open source stuff pearlyowl streaming io swift uni assignment per vognsen streaming softwarehardware lowlevel development c python ion phil nash streaming javascript ruby twilio open source web development pixelogicdev streaming io swift javascript nodejs angular apis web development top r rachael tatman streaming data science livecoding mostly r scientic paper journal club radicalfishgames streaming game development javascript webgl game crosscode ragnar thor streaming javascript react web development open source nodejs randall hunt streaming aws web development hardware hacking python serverless ai ricardo tavares streaming angular sc lua nodejs python sql typescript wasm web development robin pokorny streaming javascript functional programming nodejs rúben gomes streaming nodejs javascript vue full stack development russell hay streaming rust functional programming hardware generative art ryan warner streaming web design development javascript gatsby react firebase node cs uiux design top sallar kaboli streaming javascript nodejs electron react os project apis streaming kotlin vuejs cqrs web development sean larkin streaming webpack os javascript gaming sebastian krzyżanowski streaming javascript react redux reduxsaga firebase nodejs sébastien rancoud streaming javascript nodejs php unreal engine unity apis web development sergio cinos streaming javascript react nodejs full stack development silentcoyote streaming c nodejs php javascript angular full stack web development shinmera streaming game development common lisp shirley wu streaming data visualisation dataviz javascript react simeon vincent streaming javascript cs web development twitch extension sirlynixvanfrietjes streaming c lua game development french siva streaming ml iot nodejs javascript graphql skillvid streaming javascript adobe illustrator sorskoot streaming javascript nodejs webvrwebarwebxr progressive web apps iot microsoft azure stan danielsroth streaming web development adminsys javascript cs php laravel printing suz hinton streaming iot web development hardware hacking printing nodejs javascript swizec teller streaming javascript react syanoks streaming operating system development c assembly shell python top taelur alexis streaming javascript web development erik guzman streaming javascript nodejs reactjs react native apis web development tanya janca streaming web security azure cloud security ted young streaming java spring boot spring mvc spring data spring cloud tdd junit web development design pattern ddd hexagonal architecture intellij idea theprimeagen streaming golang javascript reactjs meme amazingness thomas soerensen streaming golang php laravel javascript thorsten lorenz streaming nodejs module development developer tooling web development javascript tim ermilov streaming os building thing javascript react tierney cyren streaming nodejs nodejs community committee javascript maintaining os project trezy streaming javascript nodejs reactjs nextjs game development web development tsoding streaming game development functional programming programming language design artificial intelligence c c haskell rust scala tutorexilius streaming c python java javascript php tyler leonhardt streaming powershell c typescript vscode extension development maintaining os project top u unspecified clark sell streaming svelte react nodejs graphql tailwind javascript web development live code review v top w top yosh streaming os maintenance tooling development javascript nodejs choo top z top developer stream adam stream nodejs javascript react full stack development game development streaming link top adron hall adron stream gogolang c dotnetcore nodejsjavascript terraforminfrastructure system hack pair programming heavy metal systemic development irl sometimes report tech news conference streaming link top al sweigart al stream streaming link top albérico dia barreto filho albérico stream twitch extension development stream tool development alexa skill irl javascript streaming link top alexander simovic alex stream serverless nodejs javascript claudiajs chat bot web development os streaming link top amorelandra amorelandra stream twitch extension development irl javascript streaming link top andrew kelley andrew kelley stream zig programming language compiler llvm asm streaming link top andy li andy li stream haxe web development linux packaging streaming link top angie jones angie jones stream java web development test automation streaming link top anthony sottile anthony stream python linting code formatting testing refactoring streaming link top antonio maiorano antonio stream emulator development c streaming link top anton kuzmenko anton antonlabssolomakerlabs kuzmenko gogolang ruby rail nodejs javascript terraform docker kubernetes helm bash vim build profitable business live twitch working fulltime job streaming link top ardalis steve smith ardalis stream c aspnet core clean architecture ddd design pattern tdd streaming link top armin ronacher armin stream streaming link top bagger bagger stream graphic programming gpu opengl game development common lisp tutorial streaming language spoken stream link top barraider barraider stream c stream deck plugins development game development streaming language spoken stream link top beachcasts beachcasts stream web development php python adjecent technology also aws nexmovonage content streaming language spoken stream link top ben greenier ben stream game development c web service development javascriptnodejs streaming language spoken stream link top benjamin lannon benjamin stream javascript github action gatsby react streaming link top bobby johnson bobby stream nodejsjavascript c dotnetcore react docker osx vscode identity security full stack development streaming link top brad garropy brad stream javascript nodejs react gatsby next serverless web development streaming link top brandon satrom brandon stream iot c nodejs javascript web development vuejs mobile development streaming link top brent schooley chef brent brent schooley stream javascript python c swift twilio twilioquest video content creation mobile development web development streaming tech streaming link top brent ozar brent ozar stream sql server sql server optimisation performance database concept best practice streaming link top brian clark clarkio brian stream nodejs javascript iot web development swift streaming link top brian laguna brian stream design pattern practice prism wpf uwp xamarin form blazor flutter angular react vue geeky thing streaming link top brian mckenna brian stream haskell functional programming streaming link top britocoding britocoding brazilian streamer stream javascript typescript react listen weird music streaming link top brookzerker brookzerker stream streaming link top btor btor stream french streamer stream php symfony javascript react reactnative java python etc streaming link top caidan williams caidan stream java python game development game networking libgdx digital art streaming link top cailir cailir stream nodejs html cs javascript game development streaming link top calvin allen coding calvin calvin stream microsoft azure c net net core devops os development streaming link top captainkraft captainkraft stream streaming top casey muratori casey stream c c game development algorithm streaming link top catalin miron catalin miron stream react react native graphql javascript typescript mobile development web development animation streaming link top chaelcodes chaelcodes stream react ruby rail coding game streaming link top chiroptical chiroptical stream streaming link top codebase alpha essenbee codebase alpha stream c net core aspnet core streaming link top codephobia codephobia stream angular typescript javascript gogolang nodejs terraform devops docker aws lambda web development nativescript streaming link top coderushed mark miller coderushed stream c net core aspnet core typescript javascript game development coderush dogfooding streaming link top código falado código falado stream html cs javascript vue tailwind javascript typescript nodejs vuejs php laravel web development portuguese language spoken stream streaming link top coding garden cj cj stream javascript vuejs nodejs react codewars problem solving streaming link top collin henderson collin stream javascript php laravel vuejs streaming link top corey weather corey weather stream c net core aspnet core azure twilio hackerrank codewars twilioquest streaming link top cory knox cory stream powershell c typescript vscode extension development streaming link top daniel jenkins daniel honestdan stream javassript php c unity game development web development often take part ludum dare streaming language spoken stream link top daniel real daniel real stream laravel lumen php backend web development streaming language spoken stream link top daniel shiffman daniel stream javascript processing webgl machine learning algorithm streaming link top daniel stenberg daniel stream c network tool network security primarily focus curl wolfssh wolfssl etc streaming link top darko meszaros name pref handle stream aws cloud developer tool architecture python vim linux streaming link top david pedersen david stream streaming link top david poindexter roberttables david stream nodejs javascript react docker aws terraform devops developer tooling streaming link top devchatter devchatter stream c net net core aspnet aspnet core pair programming streaming language spoken stream link top developer garage developer garage stream c javascript typescript net core aspnet core os xamarin streaming language spoken stream link top dillon pentz dillonea dillon pentz stream ob development using c also stream python javascript streaming language spoken stream link top dj adam dj adam stream sap development topic including nodejs sap cloud platform cap cloud foundry streaming language spoken stream link top dmitry figol dmitry stream network programmability network automation python netdevops devops streaming language spoken stream link top drunkdevs drunkdevs stream game development game maker studio aseprite streaming link top eddie jaoude eddie stream open source javascript angular aws serverless typescript github cucumber streaming language spoken stream link top emanuele bartolesi emanuele stream c net core aspnet os github pair programming streaming language spoken stream link top eralp karaduman eralp stream mobile app development io swift flutter dart react native typescript web development react javascript game development c pixel art aseprite streaming language spoken stream link top eser ozvataf eser stream javascript c net core react os github serverless nodejs typescript functional programming devops streaming language spoken stream link top feross aboukhadijeh feross stream javascript nodejs framework developer tooling web development streaming link top ferris ferris stream emulator development demoscene tool hardware hacking rust c c streaming link top fletcher iamfletcher fletcher iamfletcher stream streaming link top frank boucher frank boucher stream microsoft azure c net core devops os development streaming language spoken stream link top franziska hinkelmann franziska fhinkel stream javascript nodejs interview training pair programming streaming language spoken stream link top freya holmér freya acegikmo stream game development unity c shaders developer tooling lgbt discussion streaming language spoken stream link top gareth hubball gareth stream f net net core functional programming rust xamarin streaming language spoken stream link top gary ewan park gary stream c net net core cake chocolatey devops streaming link top gary hockin gary stream streaming link top gary kramlich grim stream pidgin development convey development open source development c golang python javascript docker container streaming link top gavin barron gavin stream web development c typescript azure devops streaming link top geoffrey huntley geoff stream haskell reactive extension nixos os development c net xamarin devops streaming link top giovanny gongora giovanny gongora stream javascript nodejs rust c performance o development streaming link top gomaestrogo gomaestrogo christian stream javascript nodejs reactjs react native external apis graphql web assembly oracle javascript extension toolkit ojet native apps docker kubernetes cloud infrastructure oci gcp aws azure heroku postgresql opensource fullstack devops machine learning relational database design google sheet automation raspberry pi iot integration bosear elgato stream deck trello scrum management streaming link top guy royse guy royse stream redis javascript software development test driven development streaming link gwen frey gwen stream game development unreal blueprint animation streaming link top gynvael coldwind gynvael coldwind stream software development python c c asm reverse engineering hacking security streaming link top hardlydifficult hardlydifficult stream game development c c programming cryptocurrency streaming link top holden karau holden karau stream scala python spark pyspark open source streaming language spoken stream link top howtocodewell peter fisher howtocodewell stream php symfony laravel lumen python micro python flask linux docker javascript html cs full stack streaming language spoken stream link top ian lovett ian lovett stream javascript ui angular react react native redux javascript api nodejs express elastic search cryptocurrency web apps gaming overwatch fortnite c go streaming language spoken stream link top idevelopthings idevelopthings stream php javascript nodejs full stack development web development streaming top jack mott jack stream teaching programming basic data structure algorithm fun gamedev project golang opengl streaming top jason lengstorf jason lengstorf stream gatsbyjs react development streaming link top jeff dom make game jeff dom stream game development pair programming typescriptjavascript programming first principle witty banter streaming link jeff fritz jeff stream c net aspnet os pair programming streaming language spoken stream link top jeff lindsay jeff stream open source game development c golang docker javascript developer tooling streaming link top jeff panici jeff stream c c assembly c rust javascript basecode programming language development compiler development web development game development streaming language spoken stream link top jen tong jen stream python javascript nodebots astronomy streaming link top jesse skinner jesse skinner stream full stack web development javascript cs html react nodejs php lua streaming language spoken stream link top jesse weigel jesse stream web development react nodejs cs nextjs wordpress streaming language spoken stream link top jessica mak jessica stream c opengl game development streaming language spoken stream link top jochen lillich jochen lillich stream devopssre chef docker kubernetes ruby programming streaming language spoken stream link top joe bew joe stream testdriven development clean code refactoring open source project streaming link top jon gjengset jon gjenset stream streaming link top jonatas jojo baldin jojo stream programming infrastructure serverless golang python knative openfaas aws gcp azure streaming link top jonathan blow jonathan blow stream game development language developement jai c opengl streaming link top jorge cano jorge cano stream angular javascript programming web development streaming link top joseph guadagno joseph guadagno stream c net aspnet os azure ionic react streaming link josh hawkins hawkins stream javascript nodejs c elixir python os project gaming streaming link top josh kupka josh stream javascript building custom streaming service streaming link top josh justice josh codingitwrong stream javascript rail ember react native streaming link top josh wulf josh wulf typescript nestjs microservices zeebe minecraft programming j streaming link top julian duque julian duque stream javascript nodejs framework developer tooling web development streaming link top kallehallden kallehallden stream python flutter dart java streaming link top kensodev kensodev stream advanced devops python terraform react streaming link top kent c dodds kent stream javascript react web development open source nodejs streaming link top keraf keraf stream javascript c nodejs net core react web development browser extension dev streaming link top kevin griffin kevin stream c net aspnet printing conference planning streaming link top keyframers keyframers stream ui animation javascript cs web development streaming link top krzysztof chris cieslak chris stream f net functional programming webdevelopment streaming link top kyle shevlin kyle stream react javascript functional programming web development streaming link top layla porter layla stream c javascript net core aspnet core azure twilio streaming link top leomendesm leo stream javascript web development react elixir language spoken stream streaming link top liz phillips illuminated space liz stream javascript gatsby react web development data structure playing video game language spoken stream streaming link top lizzie siegle lizzie stream javascript swift web development nodejs cool library project language spoken stream streaming link top lucas montano lucas stream android nodejs twitch extension typescript open source flutter react streaming link top luke gorrie luke stream c lua raptorjit r nix network driver streaming link top marco bruno mark stream programming javascript web development react cs html streaming language spoken stream link top mark kraus mark stream powershell c azure function cicd pipeline os streaming language spoken stream link top mark mandel mark stream game development kubernetes golang mostly working agon streaming language spoken stream link top marko pavlovic marko stream web development python c c unity game development android development os open source software language spoken stream english ocassionaly spoken serbian streaming link top masood sadri masood stream web development javascript nodejs react language spoken stream streaming link top matt cowley matt stream maintaing open source project nodejs javascript cs html vue web development streaming language spoken stream link top matt grove matt stream database couchbase sqlnosqlsql net c aspnet soldering kit vr podcasting streaming language spoken stream link top matt layman matt stream building software service saas python django streaming language spoken stream link top matt podwysocki matt aka bluerthanblue falcon aka λ calrissian stream javascript reactive extension nodejs c net core reactnative react functional programming open source stuff streaming language spoken stream link top mattias petter johansson also known mpj fun fun function mpj stream javascript nodejs programming general streaming language spoken stream link top mechjack mechjack stream java javascript react framework development programming general streaming language spoken stream link top micah elizabeth scott scanlime micah stream reverse engineering rust c hardware streaming link top michael crump michael crump stream azure software development c net core streaming link top michael henderson robedcoder leadcoder michael henderson stream streaming link top michael jolley baldbeardedbuilder michael jolley stream c javascript net core iot streaming link top mike conley mike stream firefox development javascript c cs rust streaming link top mishmanners mish stream hackathons conference news c unity twilio quest javascript github python ruby machine learning aws devops streaming link top nicholas brochu nicholas stream python serpentai framework dev machine learning ai computer vision streaming link top nick busey nick stream php nodejs docker ansible devops react meteorjs occasionally brew beer streaming link top nicolai parlog nicolai stream java occasionally javascript kotlin even weirder stuff streaming link top stream python c ninja programming general language spoken stream streaming link top nmarulo nmarulo stream java php c javascript web development mysql bootstrap cs streaming link top nullpointer stream javascript flutter dart spring vuejs web development app development streaming link top pavithra kodmad pk stream javascript cs open source stuff streaming link top pearly owl pk stream io swift sometimes uni assignment streaming link top per vognsen per vognsen stream building system scratch c python hdl ion streaming language spoken stream link top phil nash phil nash stream iot web development hardware hacking printing nodejs javascript streaming link top pixelogicdev pixelogicdev stream io swift javascript nodejs angular apis web development streaming link top rachael tatman rachaeltatman stream data science journal club streaming link top radicalfishgames radicalfishgames stream game development javascript webgl game crosscode streaming link top ragnar thor ragnar thor stream javascript react web development open source nodejs streaming link top randall hunt randall stream aws web development python serverless ai streaming link top ricardo tavares ricardo stream angular sc lua nodejs python sql typescript wasm web development streaming link top robin pokorny robin pokorny stream javascript functional programming nodejs streaming language spoken stream link top rúben gomes rúben stream nodejs javascript vue full stack development streaming language spoken stream link top russell hay russell stream rust functional programming hardware generative art streaming link top ryanwarnercodes ryan stream web design development javascript gatsby react firebase node cs uiux design streaming link sallar kaboli sallar stream javascript nodejs electron react os project apis streaming language spoken stream link top stream kotlin vuejs cqrs web development streaming link top sean larkin sean stream webpack os javascript gaming streaming link top sébastien rancoud sébastien stream javascript nodejs php unreal engine unity apis web development streaming language spoken stream link top sebastian krzyżanowski sebastian krzyżanowski stream javascript react redux reduxsaga firebase nodejs streaming language spoken stream link top sergio cinos sergio cinos stream nodejs react mobx docker devops full stack development streaming language spoken stream link top silentcoyote silent ky coyote stream c game development nodejs php javascript angular docker devops full stack web development streaming language spoken stream link top shinmera shinmera stream game development common lisp lisp project demo streaming link top shirley wu shirley stream data visualisation dataviz javascript react streaming link top simeon vincent simeon vincent stream javascript cs web development twitch extension streaming language spoken stream link top sir lynix van frietjes sir lynix van friejtes stream c lua game development streaming language spoken stream french english asked link top siva siva stream ml iot nodejs javascript graphql streaming link top skillvid skillvid stream javascript adobe illustrator language spoken stream streaming link top sorskoot sorskoot stream javascript nodejs webvrwebarwebxr progressive web apps iot microsoft azure streaming link top stan danielsroth stan stream web development javascript cs php laravel streaming language spoken stream link top suz hinton suz stream iot web development hardware hacking printing nodejs javascript streaming link top swizec teller swizec stream streaming language spoken stream link top syanoks syanoks stream operating system development c assembly shell python streaming top taelur alexis taelur stream streaming link erik guzman stream javascript nodejs reactjs react native apis web development streaming link top tanya janca tanya stream web security azure cloud security streaming link top ted young ted jitterted stream java spring boot spring mvc spring data spring cloud tdd junit web development design pattern ddd hexagonal architecture intellij idea streaming link top theprimeagen theprimeagen stream golang javascript reactjs meme amazingness streaming link top thomas soerensen thomas stream golang php laravel javascript streaming link top thorsten lorenz thorsten stream nodejs module development developer tooling web development javascript streaming link top tierney cyren tierney stream nodejs nodejs community committee javascript maintaining os project streaming link top tim ermilov tim stream os building thing javascript react streaming link top trezy trezy stream javascript nodejs reactjs nextjs game development web development streaming link tsoding tsoding stream game development functional programming programming language design artificial intelligence c c haskell rust scala streaming link top tutorexilius tutorexilius stream c python java javascript php streaming language spoken stream german english understood english used variable name link top tyler leonhardt tyler stream powershell c typescript vscode extension development maintaining os project streaming link top unspecified clark sell unspecified stream svelte react nodejs graphql tailwind javascript web development live code review streaming link top vogue code april speight april stream mixed reality toolkit mixed reality virtual reality augmented reality basic programming concept language spoken stream streaming link top windybeardgames windy stream clickteam fusion photoshop spine game art language spoken stream streaming link top yosh yosh stream os maintenance tooling development javascript nodejs choo streaming link top zorchenhimer zorchenhimer stream ne assembly golang streaming link twitch well awesome developer listed team link category link help find active coder currently streaming twitch platform team live coder http wwwtwitchtvteamlivecoders category programming game development mobile development software development web development science technology
344,Lobsters,education,Education,Not an expert? You can still teach,https://codewithoutrules.com/2018/01/30/teaching-when-youre-not-an-expert/,expert still teach,become better teacher taking advantage lack expertise problem expert expert blind spot learning work teaching expert instead demonstrating task know perfectly demonstrate task quite know eg live coding exercise similarly cover common mistake recover go teach submit talk proposal even expert valuable perspective,manager stop say hey got new employee starting month know sometechnology best like get speed nod smile feel impostor syndrome kicking know software complicated sometimes even using tool language year two might know small part functionality already tough intimidating teach even worse confident know teach expert turn expert impede ability teach become better teacher taking advantage lack expertise problem expert expert actually make worse teacher specifically expert often suffer expert blind spot knowledge blind way student thinking first learned concept book learning work expert differ beginner number way impact learning expert much denser interconnected conceptual model thing obviously related obvious beginner sparsely connected conceptual model expert skip step certain thing automatically even realize beginner point view result unexplained jump expertise often unconscious asked expert may able explain even know right thing result intermediate learner know task still need consciously walk step actually make better teacher teaching expert since expert need pretend one instead teach valuable knowledge combination understanding technology understanding recent memory beginner think instead demonstrating task know perfectly demonstrate task quite know eg live coding exercise show process go finding debug problem search solution documentation thanks noa benditshtull idea similarly cover common mistake recover expert might never make mistake might still make occasionally least recent memory mistake showing deal mistake admitting mistake student also making topic le intimidating unlike expert get confused perhaps annoyed mistake never make mistake giving student confidence work problem thanks reader jake point go teach teaching need scary sitting computer saying tricky figured way get thing done let show also applies teaching broadly every see conference call proposal say expert teach anything truth perspective intermediate learner often much valuable beginner expert submit talk proposal even expert valuable perspective
346,Lobsters,education,Education,Cracking Codes with Python,http://inventwithpython.com/cracking/,cracking code python,receive free review copy http demonstrate able write review please send link amazon goodreads powell review written,receive free review copy like receive free print copy cracking code python please fill form http please specify want cracking code python receive free ebook read upon posting review amazon receive complementary print review copy book update large amount interest ca nt guarantee get print book however definitely send ebook review demonstrate able write review please send link amazon goodreads powell review written nt written amazon review please explicitly tell email amazon account post review also please include word walrus subject email know read happy send book reviewer respond serious inquiry folk read instruction please post honest review posting negative review impact whether get free print book requirement review minimum word must live within united state due shipping cost must purchased amazon last year amazon requirement write review email first writing review
347,Lobsters,education,Education,"List.community - a wrapper on top of the various ""awesome"" lists on GitHub",https://list.community,listcommunity wrapper top various awesome list github,awesome list github explore,project possible thanks awesome list github explore project thanks people maintain list contribute listcommunity affiliated github
348,Lobsters,education,Education,Nintendo Labo: Switch with the fun of DIY creations,https://labo.nintendo.com/,nintendo labo switch fun diy creation,,nintendo labo faqget answer frequently asked question making building discovering nintendo labo
349,Lobsters,education,Education,The 10 Best Coding Challenge Websites for 2018,https://medium.com/coderbyte/the-10-best-coding-challenge-websites-for-2018-12b57645b654,best coding challenge website,popular coding challenge website rlearnprogramming hacker news best coding challenge improve skill prepare interview progress career top coding bootcamps algorithm data structure web development coding bootcamps online forum company bot example algorithmic challenge topic win prize example mock interview contest article website editor example tutorial competition best collection example editor website best example,end published article popular coding challenge website list based resource popular blog post quora post article google search popular post forum like rlearnprogramming hacker newsthis updated list feature website offer best coding challenge resource help new intermediate developer improve skill prepare interview progress career ordering list based level difficulty beginner advanced beginner intermediatecoderbyte provides coding challenge solve online editor using different programming language also provides official solution challenge along user solution coderbyte recommended top coding bootcamps collection interview prep challengesaside coding challenge provide course algorithm data structure web development prep course coding bootcampsbeginner intermediatecodewars provides large collection coding challenge submitted edited community solve challenge directly online editor using one programming language view discussion challenge well user solution earn point climb ranking solving challengesbeginner intermediatecodefights provides collection coding challenge solve online editor forum user discus challenge also feature called company bot write code compete bot programed engineer company like uber dropbox quorabeginner intermediatethis website different one listed instead simply solving coding challenge producing set output codingame write code actually play game online great website game fun watch written code see example game graphic nice editorgame ui smooth overall great website beginner learn codingintermediate advancedtopcoder one original platform competitive programming online provides list algorithmic challenge past complete directly online using code editor popular single round match offered time per month specific time compete others solve challenge topic challenge may coveraside solving challenge fun online offer sponsored competition win prize writing best solutionintermediate advancedhackerrank focus computer science topic provides challenge several domain algorithm mathematics sql functional programming ai solve challenge directly online see example provide discussion leaderboard every challenge challenge come editorial explains challenge approach come solutionintermediate advancedleetcode collection best algorithm challenge online today topic cover require knowledge data structure binary tree heap linked list etc challenge bit advanced website challenge great used preparing software engineering interviewthey also mock interview section specifically job interview preparation host coding contest section article help better understand certain problemsintermediate advancedcodechef indianbased competitive programming website provides hundred challenge able write code online editor view collection challenge separated different category depending skill level see example large community coder contribute forum write tutorial take part codechef coding competitionsintermediate advancedgeeksforgeeks best collection article explanation code solution algorithm data structure topic see example break complex question simpler part explain solution provide code solution also online editor practice solving challenge seeing solutionif preparing software engineering interview definitely use website prepare brush harder algorithm questionsadvancedcodeforces russianbased competitive programming website regularly host competition best competitive programmer world compete online beginner coder challenge likely advanced example recent challenge challenge usually require advanced math algorithm knowledge
350,Lobsters,education,Education,Crypto for Kids (A Book that is a Labyrinth),https://github.com/sustrik/crypto-for-kids/blob/gh-pages/README.md,crypto kid book labyrinth,crypto kid book labyrinth note http sustrikgithubiocryptoforkids text licensed creative common attribution international public license,crypto kid book labyrinth project dumping ground text one day form cryptography book kid target age group according piaget kid concrete operational stage aged learn understand perspective one done door open understanding cryptography nature requires looking conflict persepectives different participant said grownup know nothing cryptography maybe except name furthermore idea special kind thinking required one nt come naturally may useful even everyday situation nothing cryptography therefore would nice book primarily focused child would digestible grownup goal book avoid much technical detail possible focus basic principle kind twisted thinking needed cryptography book also touch adjacent subject game theory psychology math economics history opsec stage magic name book going mystery puzzle labyrinth split small piece correct ordering piece revealed solving little cryptographical puzzle one story may look example like first something impossible happens reader told possible enough information solve mystery final part story resolve mystery catch reference final part encrypted obfuscated maybe steganographically hidden give trivial example continue reading section mod structuring story like educational value namely want teach something someone exercise needed people tend skip exercise one way reader forced exercise able continue reading system also enforces rule game reader skip stuff start reading middle first pick chapter find previous one technically work like oneway function given chapter unordered link two subsequent chapter command end first chapter eg go section would search entire book find previous chapter even book digitalized allows automated searching looking going find anything command go section mod second picking chapter middle book trying move forward going work specifically puzzle end chapter requires skill nt taught chapter way find next chapter picture show starting reading chapter impossible move either forward backward prevent reader reading entire book confusing andor boring pulp added content pulp easily distinguishable regular content old news article letter accounting statement fragment boring novel nonsensical diagram section wo nt linked regular content may linked together puzzle page unsolvable even make sense education standpoint reader embarking mission read entire book live authentic sifting lot stuff experience perhaps landing interesting bit side effect hyperlink structure book make possible book nonlinear think fictional book discussed borges garden forking path pick real book pavić dictionary khazars idea taken extreme wo nt possible read book without drawing map playing dungeon dragon concrete mechanism path split corresponds chapter two puzzle even neat trick randomize splitting imagine example single puzzle chapter sudoku solving continue chapter pointed number upper right corner sudoku square however unbenknownst reader sudoku two possible solution resulting different number upper right corner joining path hand nt require anything special needed two puzzle different chapter point single chapter mechanism used cautiously though mean sometimes reader going solve puzzle arrive already visited place element disappointment may desirable small dos overdone ruin game experience often may better deadend side branch rather cycle primitive provide tool build labyrinth kind question type labyrinth want actually build given entire project essence game form labyrinth guided sound game design simplest way separate book multiple level level teach particular set skill skill needed defeat bos ie particularly hard puzzle gate way next level another thing learned game design said play game spoil fun player discover stuff therefore sheet rule let kid experience feeling dealing mysterious artifact devised adversarial intelligence confuse even false lead added make entire enterprise entertaining yet one thing focus correct pacing story puzzle story reward solving puzzle reasonably long actual reward overly long would make entire project le game plain oldschool book finally story edge blend real world example voynich manuscript scanned posted online go decypher dare different example history cryptography way thing ccc go attend idea communicate thread stretch dawn time pass caesar trithemius alan turing end hand today note rationale excluding math average reader likely involved crypto primitive design ever primitive get better become like lego block never make lego block done expert lego factory may interesting know made nt play brick definitely want book printed xvii century typeface seems good compromise keeping readable time mysterious weird also number topic covered unconnectedness different story give distinct baroque feel think anatomy melancholy font reflect convoluted book picture natural focus point give possibility attract attention reader read particular section outoforder manner may desirable case still put picture separate section accompanying text section reference hard find standalone picture make casual thumbthroughers confused one fun option story wanders internet point return back book turn allows playing stage magic trick reader point accustomed printed book work expect chapter internet similar wrong internet different kind thing like showing different chapter different people showing particular text special occassions like moon full unsolved problem reference would nice say messager story reference perfect secrecy claude shannon interested reader would keywords search internet hand providing reference make book le mysterious reader could cheat solving puzzle looking reference material instead thinking rendered version text http sustrikgithubiocryptoforkids want participate writing book please drop note sustrik simply open pull request text licensed creative common attribution international public license
351,Lobsters,education,Education,Security Education in Uncertain Times: 2017 in Review,https://www.eff.org/deeplinks/2017/12/year-review-security-education-roundup,security education uncertain time review,humancentered design method security education companion electronic frontier alliance surveillance selfdefense worked hard address concern security education article try lesson module friend hear worked read article fight digital right,time donald trump became presidentelect november eff flooded request digital security workshop poured country educational nonprofit legal group library activist network newsroom scientist group religious organization reason rise digital security training request certainly election made lot community rethink relationship u government time rise highprofile story group hacked often using increasingly sophisticated method left many group feeling vulnerable nt work drop roomful people never met connection spend day teaching security basic leave never interact also seen marked increase technologist hungry opportunity share security advice community friend group support heard people unwittingly become de facto source security education community nt right structure teach effectively heard nonprofit professional wanted start offering security workshop space nt know heard people really wanted help idea start thinking respond new demand value eff could provide specifically security education space kept coming back one point solution nt fly around country hosting digital security training nt work drop roomful people never met connection spend day teaching security basic leave never interact conversation repeatedly brought u effectiveness training within learning security friend effective learning outsider ask honest question deeper discussion something go wrong wo nt call organization another city across country help call friend thought alternative model teaching digital security might look like eff eff supporter could uniquely add value influenced humancentered design method wanted make sure created informed thorough understanding problem space complemented many wonderful digital security resource already security education companion came long journey began conducting informal interview conference call spoke length dozen usbased international digital security trainer practitioner late july asked trainer loose series question including starting point security training hardest thing participant learn security training participant tend misunderstand fundamental knowledge people coming security training facilitated two webinars electronic frontier alliance learned digital security training scene various city around u conversation trainer helped u ass seasoned digital security trainer already kind resource using kind resource missing guidance needed newer teacher digital security learned many trainer use surveillance selfdefense resource inform training learned trainer felt existing resource fell short shared comment back ssd team worked hard address concern decided narrow audience new teacher digital security would teaching friend neighbor eff turning finding new approach security education compared discussed existing resource pedagogy educational resource new teacher enduser focused digital security resource existing method teaching digital security tested draft security education material teaching approach digital security event reflected could improved iterated looked incoming training request created sixteen persona based requesting group used persona help inform beginning curriculum also created tone guide requirement writing striving meet simple english constraint glossary new term guideline graphic material make easier end user remix localize decided narrow audience new teacher digital security would teaching friend neighbor enough data begin making material used create twenty inclusive digital security learner persona trainer persona used persona help u organize prioritize advice felt important share new teacher material might need basic digital security workshop lesson module designed educational material structure website shared material group internal external digital security trainer test material learner collected feedback experience made adjustment educational material also began sharing resource group trusted digital security practitioner solicited feedback security education companion growing improving excited share beginner teacher digital security continue work hard ensure companion improves existing collective body training knowledge practice read security education article try lesson module friend love hear worked article part year review series read article fight digital right like reading support digital freedom defense today
353,Lobsters,education,Education,Getting started on open source when you don't know where to start,https://www.codenewbie.org/podcast/getting-started-on-open-source-when-you-don-t-know-where-to-start,getting started open source nt know start,,sy big announcement early bird ticket codeland conference available get codelandconfcom second annual conference happening nyc may get ticket supply last link shownotes music welcome codenewbie podcast talk people coding journey hope helping host saron today talking open source music talked open source quite bit show developer talk working small personal project really big one like django episode different r name richard schneeman ruby language heroku sy richard nt work open source project entirely dedicated helping get started open source called code triage work sign favorite repos get notified new issue many repos contributing nt require expertise lot time today talking getting started open source small meaningful contribution richard also share amazing story good bad many year working open source project flatiron school teach code anywhere got awesome community careerchangers number different option pick become software engineer got fulltime inperson course selfdirected introductory course remote online webdeveloper program even free online prep course dive javascript ruby interview prep learn go flatironschoolnewbiescom flatironschoolnewbies first learned code wanted developer actually learned code realized nt become developer become frontend developer rail developer fullstack engineer backend engineer million job title involve coding pick get first job turn career use dice career mobile app tool wish first started pick tech skill either hope future type designer job title dice help find job title might also interested maybe nt know take step telling skill job title require much pay based profile tell skill might want learn one day apply job simplify lot chaos jobhunting totally free check dice career mobile app go dicecomcodenewbie info dicecomcodenewbie today going talk one project called code triage r yeah code triage way get people interested contributing open source nt know get started sy people say want contribute actually mean mean want make impact open source community mean want coding experience interpret general interest contributing r purpose code triage focused commits people think open source contribution think oh going spend year working huge feature everybody going love going amazing much open source happens issue code triage try outsource little bit process figuring exactly important issue getting enough information maintainer project instead trying spend five ten minute trying reproduce bug whenever get issue right front idea basically want save five minute time giving five minute time sy really simple really simple giving five minute day potentially making really big impact contributor r yeah absolutely whenever sign code triage tell u project interested start getting random issue mailbox unfortunately kind dump deepend first get started best advice lurk essentially click issue read almost better already people conversation try read conversation understand oh somebody ask question ask question coming side table opensource maintainer able look pullrequest say alright totally ready go going merge really nice sy one thing probably misconception trying contribute open source feel like need understand everything project useful part true much context people need order impactful r bar still waiting first issue comment developing writing ruby ten year working heroku five year think one big value working open source brought coder level able jump unfamiliar code base know black box whatever focus one subset lot hugely hugely marketable skill really kind say though even know nothing read issue even typo mean connection controller like kind basic stuff sound almost sound like oh good true easy like anything start anywhere sy big hurdle starting knowledge also people mean huge concern think open source negative reputation kind specifically beginner people may say something nt make sense awhile give wrong information incomplete information open source generally unfriendly place r overwhelmingly would say instance rail even implemented bot whenever open pull request think issue sure distinguishes two see ever contributed actually say thank also mindful interacting maintainer whenever communicating open source land try take emotion statement try stick statement generally thing like happened expected happen two thing match way enumerate without say ca nt believe messed nt open source really negative experience first starting coding heard irc place get help logged irc going introduce anything going start asking question someone immediately responded back well nt go ask volleyball channel something basically like response literally nothing channel universe touching channel ten year ago nine year ago never gone back think first getting started lot people like lot people nt really stop consider action would affect people day major major open source project see people least try conscientious making people feel coming across sy yeah think one thing power dynamic maybe people nt aware time someone new irc channel new project new coding general nt agency power confidence definitely someone generally aware power differential really helpful r oh yes number interaction semisimilar grew time stack overflow people would downvote question bad question previously would verbally insult first started getting involved open source timid actually ended getting commit rail basically signed code triage would comment every awhile got relatively comfortable lurking seeing ok seen person interact people lot person ok feel even nt know least understand little bit able predict reaction response get sy yeah kind adjust communication style accordingly well r absolutely sy mentioned hopefully open source people nice kind think thing newbie also help relationship experience couple thing newbie might get wrong r think kind want go inquisitive person ask question opposed make statement like someone open issue database connection unless actually reproduced issue pretty sure actually point line code problem making sort statement sort distracting like almost time going make comment open source kind stop ask figure really helpful oh also going say really nice maintainer please pretty please sy yeah yall lot shoulder one thing nt really appreciate started friend maintainer maintainer really great coder also really good project manager really good communicator manage road map project also random people world want help different personality expectation skill expertise yeah maintainer feel like tough r yeah last thing someone tweeted hey specific problem library wrote seven year ago nt touched last couple year give help try help stack overflow pretty good place one take anything away podcast except example apps amazing oh also guess nt mention talking contributing term helping issue even opening issue would consider contributing nt consider oh running bug thousand people must hit going reported going annoying report thing like probably nt nobody seen probably except wo nt fixed unless report sy tell u value example apps r basically maintainer let say get maybe hour maybe two hour day work open source well going open issue see somebody submitted bug report next thing personally able absolutely anything bug reproduce basic question actually even bug maybe something else application related library framework causing kind bad actor bad behavior one biggest benefit strategy easier maintainer whenever go practice gonig submit bug probably find fifty percent time actually find issue thought sometimes even solve problem trying reproduce sy mentioned earlier first started contributing open source timid contributor long take stop timid confident r laugh sy still timid tell richard r yeah basically commit rail top fifty contributor like get thing like nt know word using sy really r never touched specific part code base nt know going like especially active record internals like work effective efficient case previously said hey every little bit help generally true case two specialist somebody looked bug person reporting everything specialist like oh maintainer work day day sometimes somebody describe behavior say oh gosh seen exact line exact problem conscious trying go much type issue sort kind getting way letting maintainer speciality focus say comfortable nowadays process making example app reproducing problem spend lot time word issue focus lot fairly confident issue make sense hopefully make sense maintainer provide maximum amount information need still kind timid whenever maintainer day tell people going merge pull request feel bad sy going say sounded cold decide merge pull request usually common reason make decision r best reason pull request get merged fix bug say currently library framework behave behave fix getting merged bug fix feature feature lot harder help buyin basically say well depends project people like open discussion kind new feature rail generally like try open discussion ultimately need code one problem maintainer get people suggesting feature oh gosh would cool going say great never hear ever think starting sticking bug fix documentation also amazing fix typo add example personally think best contributor someone using something best contribution felt pain software found source pain happened inside library went something ninety percent time would actually say documentation actually dead set making feature one really good alternative pullrequest directly project make sort plugin library sy yeah yeah coming richard tell u open source project working also tell u hilarious story first coding project lost code twice yeah getting job one thing building career another dice helping tech professional advance career twenty year mean ton data tool help navigate looking job right got thousand position available top company like dreamworks adobe ibm dell wondering next career use career pathing tool find new role based profile see much money make sure getting paid worth use dice salary predictor see real number skill worth nt look job manage career dice info go dicecomcodenewbieyou keep saying going get serious learning code start flatiron school got perfect thing offering free online prep course dig javascript ruby sure start start done keep learning online course online program inperson bootcamp whatever schedule got option help reach coding goal learn go flatironschoolnewbiescom flatironschoolnewbiescom mentioned contributor rail project work r bunch gem kind scratch needthe one someone pinged day called wicked way turn rail controller stepbystep wizard one fun benchmarking gem one called derailed benchmark way benchmark rail apps command line opposed actually spin browser click refresh sort thing kind maintainer puma commit puma web server rail actually heroku day job maintain thing called ruby build pack whenever git push heroku master stuff fly screen like bundle install precompiled furiously typing computer logic script called build pack open source tremendously great people pop woodwork say hey look sy remember first open source contribution r yes actually sy r counter everything ever said ever history podcast minor feature request rail sy damn richard r laugh also reproducible way ever went conference first conference ever one speaker saying oh core member rail afterwards went ask like question think behave like actually already done work already patch head like ca nt contribute minor change would basically impossible test showed like oh yeah change rail think one used actually say verb request like git put patch error message point time went away added back guess technically maybe bug fix ok say definitely bug fix break rule sy yes eventually publish interview otherwise nt know put good write good r definitely understand feel felt like needed permission nt gotten validation day would probably like nt know accountant something like would quit programming together sy yeah really interesting though feel like many people one pep talk awesome thing take take little bit encouragement little pep talk positive word really potentially change direction trajectory someone career yeah think saw live r yeah absolutely sy ok let move fillintheblanks ready number one worst advice ever received r worst advice ever received first job manager time basically zero managerial experience like literally started like three month ahead pulled side basically told le sure told guess could call cocky basically like nt cocky nt put nt exactly sure detail kind gist kind took little bit much heart way sure helpful go slowly get validation somewhat timid way though think hindsight really held back like lot time especially open source approached conversation like oh would mind please fix bug like maybe like yes please like yesterday like quit talking quit asking question sy go code r almost one know thing totally start actually day blog lot trying write blog post week pretty challenging one thing get relatively frequently people post reddit somewhere else day one frontend stuff know nothing frontend even said straightup post like frontend post people really negative nasty remark try let happen basically said something tune well learned frontend making blog post waited became expert field made blog post never would learned sy yeah good good point yeah good way look r people tried say tried back little bit like thank much telling blank blank blank normally say like happily disregard advice done otherwise would gotten advice know jerk sy good would easily look think never blogging unless one hundred percent sure fact looking way give lot confidence allows look potentially hurtful situation really take stride r yeah sign mailing list today schneemscom listen wrong time sy yes laugh number two first coding project r oh first coding project going make million dollar sy definitely r actually asked roommate computer science time dig written came back told rail dig website sy know r yeah dig originally written rail learned rail sy oh cool r basically hindsight easily described urban dictionary knockoff like oh know urban dictionary like urban thesaurus thought smart like eventually figured nobody care one care pivot kind slang translation service ended calling think end project united dictionary website available time sy going say would guess r awful awful get got contribution kind vaguely code horrible upvotedownvote feature reason dead set feature one method handled upvote removing upvote removing downvote like hundred line long everything gnarly awful think code still opensourced line somewhere yes first thing going make million dollar find pan sy laugh lot time make solution problem personally hard time figuring different way use word shade r honestly idea guess initially got idea second dot com boom joking said going make million dollar like actually thought kind semireasonable application going great nt last long valuable thing kind idea head like even possible make ok probably going strike rich even nt worst thing going happen going end really marketable skill sy cool number three one thing wish knew first started code r ok one thing wish knew first started code best way thing better way thing considered harmful antipatterns maybe sitting apartment alone friday night making totally beneficial humanity way shape form website oh lost source code twice sy wait r rebuild entire website scratch twice never heard source control really thing git sort becoming mainstream everything ever heard subversion perforce negative awful nt really understand value github kind thing coding one laptop laptop got stolen back car sy r yeah sy like window something r needed take back apple store repair put back original box looked like brandnew nt work kind funny sy joke thief r trip thought would clever save time got grocery well college bringing house came windshield shattered unlocked people car unlocked sy oh first time second time r second time also stolen sy really must live great neighborhood r went school georgia tech atlanta actually fine student area fine sy oh yeah kid trouble r case backup think emailed entire codebase every often kind forget right think lost maybe month couple month work yeah invested apple time capsule actually used source control longest time sy ok learned lesson came solution great r original question sy laugh one thing wish knew first started code r changing answer use source control back software sy laugh think great advice rebuilt second third time better r oh yeah yeah sy well good r felt futile felt like seriously seriously reason nt give nt switch better idea guess kept going kind little excited clean honestly think got better better one thing kept head mythological idea people got paid programmer knew sy yeah yeah r convinced ever got team would able ask question would know answer kept misconception way first programming job showed like think like like nt know try sy yeah remember first time thoughtbot mentor pairing together first time said nt really know going work let try shocked like mean nt know know startling moment r mean source matter expert sy best got laugh well thank much show want say goodbye r thank much show thank listening horrible idea awful interview advice hope got something sy end last episode season two let know think tweet codenewbies send email hello codenewbieorg dc philly check local codenewbie meetup group got community coding session awesome event every month looking reallife human interaction look u meetupcom info podcast check wwwcodenewbieorgpodcast join u weekly twitter chat got wednesday chat pm et weekly coding checkin every sunday pm et thanks listening see next season music
354,Lobsters,education,Education,Getting Started in Open Source Software,https://www.promptworks.com/blog/getting-started-in-open-source-software,getting started open source software,literally fork repo claim issue open source read guideline contributor puppet contributingmd find issue create one start dialogue respectful people schedule start dialogue worry getting scooped low hanging fruit digital ocean hacktoberfest pycon conference sprint coda contribution last year hacktoberfest,literally fork repo claim issue friend recently asked advice getting started contributing open source software friend extra time motivated help friend desire open source contribution bit like desire write novel ok want write next great american novel write luckily general guideline anyone follow make meaningful contribution open source software read guideline contributor open source software repository often publish guideline contributing document called contributingmd see example puppet contributingmd aware guideline contributing may included section readme wiki associated repo find issue create one run bug using open source software boom issue browsing issue tab open source software repository great way find work need also tell issue create already found others discouraged issue intend create already exists mean may reproduced issue new platform least alone adding feature fixing bug mentioned issue benefit others make sure reproducing issue already exist issue communicating work need done best muddy water order respect people time effort keep communication efficient commenting existing issue information reproducing bug specific platform may helpful simply adding increase signal noise ratio think twice adding unnecessary comment start dialogue found issue created one start dialogue say interested working software propose solution one mind ask folk experience whether solution make sense folk familiarity expertise say approach look good go heed advice alternative solution offered experienced software never hurt show say hey unfamiliar library interested helping could direct toward resource would help address issue respectful people schedule keep mind everyone involved likely volunteering spare time work open source software expect instantaneous response start dialogue look project lot recent activity commits issue discussion one slack hipchat gitter feel like need available feedback guidance worry getting scooped bug intend work get fixed great problem longer use fixed version software move always another bug fix line hopefully familiar contributing guideline started interact community around open source software choice part respecting people schedule willing start dialogue around open source work involves remaining patient remember patient interaction around open source software fellow contributor open source software working toward goal improving software worry getting scooped low hanging fruit intimidated repo large number issue look low hanging fruit update dependency improve setup documentation way toward working larger feature improvement add missing test easier contribute software use every day bug recently fix library use daily feature implement use library use provide finally piggyback onto existing open source event digital ocean hacktoberfest pycon conference sprint coda remember communicating people behind keyboard project remaining respectful courteous communicative go long way toward successful first contribution open source software check open source contribution last year hacktoberfest get excited make open source contribution promptworks staff occasion created software tool client staff published opensource two example software staff made available
355,Lobsters,education,Education,Fourteen Years of Software Engineering at ETH Zurich,https://arxiv.org/abs/1712.05078,fourteen year software engineering eth zurich,donate arxiv simon foundation member organization,donate arxiv please join simon foundation generous member organization supporting arxiv giving campaign september contribution fund improvement new initiative benefit arxiv global scientific community
356,Lobsters,education,Education,The 2017 Christmas List of Best STEM Toys for kids - Scott Hanselman,https://www.hanselman.com/blog/The2017ChristmasListOfBestSTEMToysForKids.aspx,christmas list best stem toy kid scott hanselman,custom episodic content check circuit maze sponsor new crossplatform net ide download trial hosting,made list best christmas stem toy kid may say still good list today check aware use amazon referral link get little kickback support blog use link using pocket money wait buy stem toy kid thanks advance christmas list thing either personally purchased tried time borrowed friend great toy product kid gender people age piper little spendy first glance extremely complete thoughtfully created sure get raspberry pi hack piper pi complete kit little one build wooden laptop box luggable starting single button build computer minecraft content nt vanilla microsoft custom episodic content custom voice over episode challenge genius piper though software world interacts hardware example one point looking treasure minecraft beach piper suggests need treasure detector learn wiring led wire treasure detector led running run minecraft person around led blink faster detect treasure absolute genius definitely favorite house year old set suspend becoming new jenga kid game nt look like much judge book cover addictive kid want buy second one see build even higher excellent addition family game night love lego always trying new building kid engino reminiscent technics advanced lego element modestly priced kit far focused even suitable incorporating home schooling always wanted chess set barring check gravity maze almost like physical version welldesigned ipad game included challenge level add piece order solve get harder think fast like also check circuit maze osmo ipad addon take ingenious idea adapter let ipad see tabletop via mirrorlens build clever concept whole series game exercise core subject test best set say ideal year old sponsor check jetbrains rider new crossplatform net ide edit refactor test debug aspnet net framework net core xamarin unity application learn download trial hosting
357,Lobsters,education,Education,Learn Anything White Paper,https://github.com/learn-anything/learn-anything/wiki/White-Paper,learn anything white paper,learn anything learn explore idea roadmap discord learnanythingxyz help u build nextjs postgres hasura go nikita team,learn anything organize world knowledge explore relation curate learning path learn powerful personal link manager curated study guide learning topic knowledge graph topic learn explore powerful tool connect learned topic together explore global map topic learn idea powerful tool track manage personal idea find people work idea together get direct support novel idea vision project create best platform possible learning topic well finding building novel idea together please read roadmap outline problem want solve building platform plan solve interested helping u please join community discord learn build project together code last release learn anything deployed learnanythingxyz found welcome anything wish help u build share plan doc public build project author everything notion public document viewed tech stack nextjs rendering thing web postgres store data hasura graphql api top postgres go thing backend hasura action serverless function wish join team would love currently lack fund support anyone hope change near future release website wish invest project please contact nikita thank team
359,Lobsters,education,Education,A Hacker Writes a Children's Book,http://arthur-johnston.com/hacker_writes_a_childrens_book/,hacker writes child book,update note amazon link amazon uk link book child market research javascript baby series creative process labor love ideally also pay bill start small stay small getting book illustrated wife going different adobe product programmer equivalent enterprise java middleware flavor week javascript framework ramp time bright side trying made perfectly happy pay someone else market rate hiring illustrator art attracts parent book want skimp illustrator working illustrator word related project rhyme impossible illustrate monad book choosing self publish parent buy nearly everything amazon wanted buying book easy possible launching marketing initial soft launch online advertising review copy looking back would still send copy people think marketing content marketing programming book baby toddler giveaway contest idea reworking amazon description episode giving library reading girl scout girl scout selling book sell like cooky able retire week lesson learned,update posting article making top rprogramming hackernews sale book increased noticeably book nicely profitable otherwise left essay note post mortem experience writing publishing marketing book programming essay written note taken course month working book tl dr although enjoyed project child love book enhanced professional network book profitable strictly financial point view stuck consulting dumped money index fund said would amazon link amazon uk link first question nonparents ask amazon list book child write another programmer although thousand book explaining construction site work hundred book explaining farm work book explained toddler would ask work could say talk wanted better ageappropriate way explain additionally wife worked many project work people wanted project would market research soon came idea book even started writing tried make sure market book knew wanted book programming book programming small child aware javascript baby series wondered market would eventually spend next month creative process labor love ideally also pay bill year ago read start small stay small rob walling talk step self funded start although writing book different start two piece advice stuck lot market research niche first thing almost wrote first rhyme google many programmer u million pretty decent market size next question programmer looking buy book tactic book use google keyword planner see people people searching term related product case book pretty large search volume term confident market book programming piece advice book niche target smallest audience think make profit book presented advantage solo entrepreneur specialize solve problem target audience fortunately already done lot book video program teach year old program much targeting younger child since book teaching kid abc introducing basic programming concept targeting underserved niche getting book illustrated writing initial poem took month time rhyme written started thinking going illustrate book waited long wanted make sure could come programming rhyme letter alphabet figured hit safe rhyme front first thought illustrator wife already knew material helped many rhyme fine art photographer photoshop ninja thought might able illustrate job creating art time learn illustrator going different adobe product programmer equivalent enterprise java middleware flavor week javascript framework ramp time next bright idea learn illustrator well enough make defense aware might best idea timeboxed gave week try complete tutorial took full hour follow five minute youtube tutorial gave bright side trying made perfectly happy pay someone else market rate hiring illustrator spent week reaching friend illustrator none ended working however one friend recently hired illustrator kickstarter upwork nothing good thing say process decided start looking ended looking around illustrator upwork filtered list since trust artistic taste wife ranked without looking hourly rate important since want biased better artist expensive art attracts parent book want skimp happy way illustrator twice expensive illustrator looked art produced amazing working illustrator rhyme poem even handful illustration idea done word related project poem relatively easy image hand outside comfort zone added difficulty concept virtual machine web fairly difficult illustrate rhyme impossible illustrate monad book working two visual artist paid wife came image idea book number understates contribution though also vetoed many worst idea suffice say used initial idea picture would box connected arrow heard horror story contractor luckily catherine great sketched everything full illustration meant could see idea looked like spent much time money hiccup mainly due hour timezone difference meant usually day two turnaroud sent detailed description image idea could cost u day problem exacerbated initially work one image time solved always sending sentence description idea preferably link similar image terrible sketch wanted sending batch image idea time meant issue one blocked experimented sending image idea time ended much keep track would definitely managed work trello instead google doc remembering contract programmer hate context switching well discovered freelance illustrator respectful send enough work worth time work project choosing self publish parallel finding illustrator also choose publish book pro going traditional publisher traditional publisher marketing book would better done hand would far bureaucratic process also would learned nearly much marketing self published mainly avoid bureaucracy decided self publish dozen article choose publisher use ended going createspace simple reason owned amazon parent buy nearly everything amazon wanted buying book easy possible overall working createspaceamazon painless complaint certain step took much longer expected getting book approved getting turned let print hardcover copy besides everything easy multiple people commented print quality good concern printondemand book launching marketing creating book hard part right book sell actually naive enough think planned spending month marketing initial soft launch launched enough product prefer whenever possible superstitiously neither wife told anyone working book announced friend facebook twitter told coworkers led two dozen sale two nice review amazon nice helped amazon ranking gave u nice confidence boost online advertising tried different form paid online advertising problem advertising profit margin book low could afford bid much combined many people ad blocker especially programmer ad well order effectiveness amazon sponsored product ad barely paid specifically keywords used book similar niche autotargeting ad managed spend lot money without selling anything hypothesis amazon willing buy something pinterest ad also saw small boost sale running pinterest ad seemed like took day user pinned product bought think would done better knew use pinterest user reddit ad got little sale reddit ad think user base ignores ad facebookinstagram think made maybe sale facebook maybe using wrong tried different ad type none seemed work also looked google ad twitter ad sponsoring email newsletter target programmer article read book marketing seem like either google ad twitter ad common book avoided trying email newsletter reasonably priced audience getting access however margin book low would hard make profit advertising review copy sent review copy traditional venue nyt section book review etc lot techadjacent blogger kid appropriate age neither got u publicity think traditional venue work meant way traditional publisher advertise book really meant self published author surprised none tech blogger kid mentioned book sent copy think book may niche mention also realized people sent copy respected really marketing purpose thanked copy looking back would still send copy people think marketing content marketing messaged different parenting site writing article related teaching young child programming none interested ended putting article site programming book baby toddler currently rank first page google result topic tell google analytics driven sale hand link affiliate link nice giveaway contest expand audience looked giveaway contest fairly inexpensive straightforward good seem drive many sale think might case people looking free good idea idea around mid september tried excepting amazon ad see result wanted tried advice people advice given form looked given response mentioning low sale number appreciated common theme advice really hard quantify effect sale reworking amazon description point wrote podcast startup rest u asking advice launching book host written book tech space thought might get useful feedback answered episode actionable piece feedback rework amazon description improve seo spent day reading book copy another two hour optimizing word amazon description improved conversion rate people clicking book giving library got coffee friend working audio book mentioned online ad working said trying reach parent made think offline place found book son besides parent library bookstore biggest place u find new book sent email dozen library system concentrated larger library system tech city example sent email king county library surround seattle mountain view library single library interested book hardcover version library prefer san jose library system especially nice since planning running steam workshop book helpful reading article want buy book good chance local library might reading girl scout another friend run two successful business mentioned teach class related book form monetizing thought seemed like lot work coworker asked could read book daisy young girl scout reading girl scout troop reminded wrote book first place teaching kid programming lot fun genuinely enjoy programming think girl recognized enjoyed gave daisy copy book take home coworker told bunch girl taken book school next day showed friend last bit marketing book felt good end high note girl scout selling book sell like cooky able retire week lesson learned book sold well would liked part probably due nature product unlike selling business selling consumer hit driven important focus control thing wrong started marketing late probably either started kickstarter preannounced book found publisher book marketing competitive enough needed better plan chose small margin product small margin meant could bid much per click advertisement also meant certain marketing channel outside price range next time would definitely create profitable per unit project thing right hiring freelancer project someone pay thing mean done right hired marketer sale might gone better project although sale high hoped still cost u learned lot marketing excellent professional calling card
360,Lobsters,education,Education,Why You Need A Degree To Work For BigCo (2005),http://braythwayt.com/homoiconic/2013/12/28/why-you-need-a-degree-to-work-for-bigco.html,need degree work bigco,need degree work bigco obvious k great hacker build robot writing business plan u quite honestly,need degree work bigco hello applicant sorry good news job opening bigco really liked meeting bottom line degree right kind university say learned awful lot writing software four year carting textbook around campus dear applicant thanks pointing obvious read know impressed list project completed even took extra thirty second google name enjoyed screen shot link home page nevertheless university teach thing beyond write code need bigco beg pardon think learned much communication teamwork project management shipping software small team would learned completing coursework please take personally need moment chuckle ok done university communication teamwork project management happen learn thing bonus thinking something else look admire enthusiasm let little talking could tell need since bring thinking computer science stuff case thinking referring friend bigco please let know learned k important letter alphabet need apply ever paraphrase eric beck either end educational spectrum lie hacker class interested hacker even great hacker need middle spectrum folk going live suburb commute office decent job fair wage week week year year quite honestly fact passed university tell u something disturbing quite obviously stupid knew people like u would problem lack education believed heart heart could make excellence know attitude might think look bad quit job le five year make kind attitude make little fearless try best build decent working environment like people little afraid leaving nice security blanket give may come surprise looking people looking u course know educational component university waste way like hazing ritual wearing dark suit work august attending certain kind university statement want belong know practical purpose exercise prepared make sacrifice fit dear applicant would fit let stress point kind university talking aerie faerie place build robot spend free time writing business plan place exist skim cream top hire plain glass milk matter fact kind university like discourages dreaming future keep foot firmly planted ground example favourite institute higher learning send work company like work term provides u cheap labour pleasant sideeffect discouraging creative undergraduate wasting everybody time coming work u look really go want call end note lot happy people world never even heard bigco much le come work please consider redirection instead rejection know trite le true memorable rhyming form u plain fact happy buck look around see get something little early stage consider starting company quite honestly read business plan day résumé would look better top funding proposal cover letter good luck originally appeared july
364,Lobsters,education,Education,CS 007: Personal Finance for Engineers,https://cs007.blog/,c personal finance engineer,session introduction kickoff session predictably irrational session getting paid session spend le make session know worth session debt session good investing boring session financial planning goal session real estate session additional topic,session introduction blog post kickoff seminar focus introduction personal finance purpose course session predictably irrational seminar focus behavioral finance session getting paid seminar focus compensation job offer session spend le make seminar focus income expense saving budgeting session know worth seminar focus liquidity emergency fund asset liability net worth session debt seminar focus compounding debt credit score amortization payoff strategy session good investing boring seminar focus compounding type investment diversification invest four key good investing keep saving low fee stay diversified minimize tax session financial planning goal seminar focus putting together component covered previous week understand financial planning financial goal complexity dealing couple life insurance session real estate seminar focus financial decision related real estate cover process buying property renting property making decision rent v buy investing real estate rental property unique tax advantage real estate session additional topic seminar cover studentrequested additional topic cover bitcoin ethereum icos cryptocurrency bubble derivative future option private equity venture capital
365,Lobsters,education,Education,Exploring the BBC micro:bit Software Stack,http://www.mattwarren.org/2017/11/28/Exploring-the-BBC-microbit-Software-Stack/,exploring bbc micro bit software stack,exploring bbc micro bit software stack classic acorn remembering bbc micro bbc micro education turtle logo bbc micro bit bbc computer literacy project micro bit launched aside picked nice starter kit software stack excellent list resource source code bbc micro bit software stack software hardware building yotta guide first video game bbc micro bit probably runtimes dragging around screen programming update compiles typescript program native code execution time ram flash consumption pxt code rule thumb compiled c code making competitive write driver userspace library memory layout many byte memory tweet x byte x byte tweet custom version atoi save byte ram sample output available region ram overflowed stack le ram available data bs text data bs code data size explained article taking remaining space lancaster university core type driver bluetooth asm microbit fiber scheduler fiber scheduler nonpreemptive scheduler simple threading mechanism microbitcpp microbith microbit repository arm mbed o others target needed endtoend toptobottom writing display storing file flash memory microbitdal mbedclassic microbitstorageh summary reading excellent comprehensive list resource carlos hacker news rmicrobit,exploring bbc micro bit software stack nov word grew uk went school good chance picture brings back fond memory image courtesy classic acorn imagine large amount computer programmer currently bbc micro first experience programming applies want trip memory lane read remembering bbc micro bbc micro education programming classic turtle done logo code like forward left forward left forward left forward left course knew would rewrite like repeat forward left bbc micro bit original micro launched education tool part bbc computer literacy project account big success followup march micro bit launched part bbc make digital initiative million device given school library uk help develop new generation digital pioneer ie get programming aside love difference branding across year bbc micro became bbc micro bit must include colon computer literacy project changed make digital initiative week ago walked local library picked nice starter kit spent fun hour watching son play around worried quickly picked basic programming think might job year time however gone bed mine result playing around post exploring software stack make micro bit fit together want learn program micro bit hardware anything else take look excellent list resource slightly offtopic enjoy reading source code might like post bbc micro bit software stack take highlevel view stack divide discrete software component sit top hardware would like build stack take look building yotta guide also found post describing first video game bbc micro bit probably helpful runtimes several highlevel runtimes available useful let write code language cc even create program dragging block around screen main one come across see programming full list work similar way user code python typescript bundled along cc code runtime entire binary hex file deployed micro bit device start runtime look user code known location memory start interpreting update turn wrong microsoft pxt actually compiles typescript program native code cool interestingly way compared typical dynamic javascript engine pxt compiles code statically giving rise significant time space performance improvement user program compiled directly machine code never bytecode form need interpreted result much faster execution typical j interpreter ram overhead usercode code sits flash dynamic vm usually datastructures representing code due lack boxing small integer static class layout memory consumption object around half one get dynamic vm counting usercode structure mentioned runtime support code pxt typically around smaller dynamic vm bringing flash consumption leaving space user code execution time ram flash consumption pxt code rule thumb compiled c code making competitive write driver userspace library memory layout go onto part software stack want take deeper look memory layout important memory constrained micro bit ram put perspective use calculation stackoverflow question many byte memory tweet twitter us encoded message code point six four octet long making maximum message size x byte recalculate newer longer tweet x byte could fit tweet available ram micro bit turn total available general use worth using custom version atoi save byte ram memory layout specified linker compiletime using sample output available want take look done compiletime run build error region ram overflowed stack configure incorrectly table show memory layout sd version hello world app ie maximum amount ram available bluetooth ble softdevice sd support removed comparison ble enabled instantly le ram available thing start get tight name start address end address size percentage data byte bs byte heap mbed byte empty byte stack byte info column name see wikipedia page data bs well text data bs code data size explained comparison nice image micro bit ram layout article show thing look like running micropython clearly see main python heap centre taking remaining space sitting stack highlevel runtime device abstraction layer dal created lancaster university uk made main component core highlevel component device font heapallocator listener fiber often implemented ontop driver class type helper type managedstring image event packetbuffer driver control specific hardware component accelerometer button compass display flash io serial pin bluetooth asm function implemented assembly swapcontext savecontext saveregistercontext restoreregistercontext name suggest handle context switching necessary make microbit fiber scheduler work image show distribution line code loc see majority code driver bluetooth component addition providing nice helper class working underlying device dal provides fiber abstraction allows asynchronous function work useful asynchronously display text led display code block whilst scrolling across screen addition fiber class used handle interrupt signal button micro bit pushed comment code clearly lay fiber scheduler lightweight nonpreemptive scheduler provides simple threading mechanism two main purpose provide clean abstraction application language use building async behaviour callback provide isr decoupling eventmodel event generated isr context finally highlevel class microbitcpp microbith housed microbit repository class define api microbit runtime setup default configuration shown constructor microbitcpp constructor create representation microbit device includes member variable represent various device driver used control aspect micro bit microbit microbit serial usbtx usbrx resetbutton microbitpinbuttonreset storage messagebus display buttona microbitpinbuttona microbitidbuttona buttonb microbitpinbuttonb microbitidbuttonb buttonab microbitidbuttona microbitidbuttonb microbitidbuttonab accelerometer compass accelerometer storage compasscalibrator compass accelerometer display thermometer storage io blemanager storage radio ble null software bottom stack making use arm mbed o opensource embedded operating system designed thing internet thing iot mbed o includes feature need develop connected product using arm cortexm microcontroller mbed o provides platform includes security foundation cloud management service driver sensor io device connectivity mbed o modular configurable software customize device reduce memory requirement excluding unused software see layout source based around common component combined hal hardware abstraction layer target specific hardware running specifically micro bit us yotta target bbcmicrobitclassicgcc also use others target needed reference file common section mbed used micro bitdal hardware specific file targeting nordic mcu endtoend toptobottom finally let look example different component within stack used specific scenario writing display storing file flash memory microbitdal mbedclassic allows lowlevel control hardware writing flash either directly via softdevice sd layer addition comment microbitstorageh give nice overview file system implemented ontop raw flash storage first byte reserved keyvaluestore struct give core information number keyvaluepairs store whether store initialised keyvaluestore struct keyvaluepairs arranged contiguously end block used persistent storage keyvaluestore keyvaluepair keyvaluepair summary allinall micro bit nice piece kit hopefully achieve goal help develop new generation digital pioneer however also really nice software stack one easy understand find way around reading got nothing add already included excellent comprehensive list resource thanks carlos putting together discus post hacker news rmicrobit
366,Lobsters,education,Education,norvig/pytudes - Python programs for perfecting programming skills,https://github.com/norvig/pytudes,norvigpytudes python program perfecting programming skill,join github today sign,dismiss join github today github home million developer working together host review code manage project build software together sign
367,Lobsters,education,Education,Advice From A 19 Year Old Girl & Software Developer,https://medium.com/@lydiahallie/advice-from-a-19-y-o-girl-software-developer-88737bcc6be5,advice year old girl software developer,advice year old girl software developer theavocoder got coding simply enjoyed creating design scratch hardworking yet relaxed person decided go university went coding bootcamp month tampa bay florida girl work experience whatsoever kind overwhelming learn code school people care show coding skill good love code daily life outside work wake try stretch try watch online coding course least hour per day try work personal project least hour try read least article try solve least codewars kata try eat junkfood find right balance relaxation hard work started make relaxation important part life everything got better conclusion programming anyone love create love get comfort zone anyone love improve instagram linkedin,advice year old girl software developerdon worry one wake every morning go inspirational post make people feel like need kind superhuman order good developersome people might know girl never anything else coding instagram theavocoder never really shared actually normal day done order become software developer got codingi lydia year old girl living stockholm javascript react developer active social medium try motivate people join tech world showing life like communityi started coding year old booming health lifestyle blog tumblr gained ten thousand follower notime started creating responsive layout regular html cs jquery like theme could buy decided try kept improving skill gained knowledge interest developing grew however idea already considered coding could living simply enjoyed creating design scratch seeing people loved layout built willing pay went high school absolutely hated felt like wasting much time subject could way improve future looking ancient greek latin nonetheless worked extremely hard diploma worked many personal sideprojects always busy tutoring supporting people people described hardworking yet relaxed person ever met think describes mindset perfectly get back later finished high school decided go university scary step kind brainwashed thinking way successful future everyone around went best university spent much time trying get best grade high school eventually go good university really waste many year life nothing yup pretty much regret people around understand thought making big mistake small amount people understood supported really motivated mei always independent moved another country travelled lot teen always busy anything improve future never felt pressured stuff society wanted always done thing decided go university give programming instead went coding bootcamp month tampa bay florida definitely helped get structure surrounded people enjoyed programming well coded intensively constantly comfortzone love put lot effort personal project improve coding skill learned many new technologiesguess even month insane amount recruiter reached asking could work created linkedin profile could show work put much effort girl work experience whatsoever kind overwhelming understand read linkedin profile go university anything would many company want learn code school learn code writing program company care nice paper saying studied programming college people care show coding skill good love codedon get wrong like life college simply need structure life definitely good decision go however feel pressured programming community harsh hate language program make seem like normal get hour sleep code night long eating junkfood sitting day simply way absolutely casemy daily life outside work bootcamp ended flew back stockholm extremely excited start new chapter life wait keep growing nowadays regular day wake try stretch sound like typical inspirational post talked earlier like everywhere linkedin driving crazy extremely important sit hour hour body definitely suffers take care also really wake heart rate increase brain get oxygeni try watch online coding course least hour per day love watching online course always learn new thing get inspired seeing instructor writing code ease try give twist working similar project side slightly different simply copying instructor also perfect want get bed still feel like productive try work personal project least hour make feel super uncomfortable always try use language technique never used get experience let honest horrible going lie say work hard get point also really want emphasise fact learning something new emotional rollercoaster feel demotivated feel like never understand really question coding skill congratulation normal human feeling emotion important part important part research reach people write stack overflow question hero many people simply keep trying find solution completely fine time probably look back think get back try read least article really like seeing thing different perspective article anything solve certain coding problem javascript suck sometimes coolest new technology important get stuck certain mindset try solve least codewars kata codewars best friend get coding also coding many decade solution problem give often useful learn improve syntax lot scrolling solution people gave another big plus go coding interview often give question similar one codewars try eat junkfood eating nutritious food keep alert happy feel much energized motivated healthy breakfast lunch definitely improves coding capability go fast easy think long term better body better mind better code plus still stretchmeditate coding notice something kept saying try going force thing want give bad feeling worked personal project eaten junkfood giving focus human day want code feel tired want watch netflix day completely fine find right balance relaxation hard work come back comment people make hardworking yet relaxed person ever met easy mindset took long time feel bad worked day long especially joining instagram constantly saw post people coding much felt like also simply time take day started make relaxation important part life everything got better felt much happier much motivated work lotconclusionby writing article hope inspire people also get involved tech world really scary seems programming super intelligent superhumans like portray movie programming anyone love create love get comfort zone anyone love improve conclude final advice really go college long really push show passion coding always give whenever show world capable getting name however always prioritize health sleep important completely normal feel uncomfortable think really bad coding let bring everyone think time timealways remind far come already really easy forget much improved compare month ago assure lot thinkdon let people make feel like language program bad language literally likely necessary useful feel free ask question sending message instagram add linkedin
368,Lobsters,education,Education,Linked List Problems (2002),http://cslibrary.stanford.edu/105/LinkedListProblems.pdf,linked list problem,,obj length r filter flatedecode stream q y
369,Lobsters,education,Education,Community-Curated Interactive Mind Maps,https://github.com/learn-anything/maps,communitycurated interactive mind map,learn anything learn explore idea roadmap discord learnanythingxyz help u build nextjs postgres hasura go nikita team,learn anything organize world knowledge explore relation curate learning path learn powerful personal link manager curated study guide learning topic knowledge graph topic learn explore powerful tool connect learned topic together explore global map topic learn idea powerful tool track manage personal idea find people work idea together get direct support novel idea vision project create best platform possible learning topic well finding building novel idea together please read roadmap outline problem want solve building platform plan solve interested helping u please join community discord learn build project together code last release learn anything deployed learnanythingxyz found welcome anything wish help u build share plan doc public build project author everything notion public document viewed tech stack nextjs rendering thing web postgres store data hasura graphql api top postgres go thing backend hasura action serverless function wish join team would love currently lack fund support anyone hope change near future release website wish invest project please contact nikita thank team
370,Lobsters,education,Education,What are the reasons to learn different algorithms / data structures serving the same purpose?,https://cs.stackexchange.com/questions/53225/what-are-the-reasons-to-learn-different-algorithms-data-structures-serving-the/53228,reason learn different algorithm data structure serving purpose,,textbook waiting written point working title data structure algorithm tradeoff almost every algorithm data structure likely learn undergraduate level feature make better application others let take sorting example since everyone familiar standard sort algorithm first complexity nt concern practice constant factor matter say quick sort tends used heap sort even though quick sort terrible worstcase complexity secondly always chance find situation programming strange constraint quantile extraction modestsized collection sample fast possible small microcontroller little spare readwrite memory ruled n log n sort algorithm shell sort best tradeoff since subquadratic nt require additional memory case idea algorithm data structure might applicable specialpurpose problem bubble sort seems always slower insertion sort real hardware idea performing bubble pas sometimes exactly need consider example kind visualisation video game modern video card like draw object order closesttothecamera furthestfromthecamera performance reason nt get order exact hardware take care moving around environment relative order object wo nt change much frame performing one bubble pas every frame might reasonable tradeoff source engine valve particle effect persistence concurrency cache locality scalability onto clustercloud host possible reason one data structure algorithm may appropriate another even given computational complexity operation care said nt mean memorise bunch algorithm data structure case battle realising tradeoff exploited first place knowing look think might something appropriate
371,Lobsters,education,Education,Teaching software testing concepts using a mutation testing game,http://code-defenders.org/,teaching software testing concept using mutation testing game,,inproceedings author benjamin clegg jos e miguel rojas gordon fraser title teaching software testing concept using mutation testing game booktitle proc international conference software engineering software engineering education track icseseet series page publisher ieee press year
372,Lobsters,education,Education,"How to Build Your Own Blockchain Part 1 — Creating, Storing, Syncing, Displaying, Mining, and Proving Work",https://bigishdata.com/2017/10/17/write-your-own-blockchain-part-1-creating-storing-syncing-displaying-mining-and-proving-work/,build blockchain part creating storing syncing displaying mining proving work,reading learn get even close knowledge get programming learn blockchains require producing coin traded exchanged physical money post series tl dr part branch github twitter step class file step syncing blockchain locally step displaying blockchain part mining also known block creation requirement everyone know generate block header within header previous block hash everyone confirm correct hash new block validate link two block bitcoin header part proofofwork proofofstake summary twitter get contact like,actually look long logging coinbase account looking history bitcoin wallet seeing transaction got back signing coinbase bitcoin trading per still btc worth time writing case people wondering ended selling bitcoin worth made rather held thank brian despite knowing bitcoin existence never got much involved saw rise fall btc ratio seen people talk much future seen article pointless btc never opinion somewhat followed along similarly barely followed blockchains recently dad brought multiple time cnbc bloomberg station watch morning bring blockchains often know mean suddenly figured try learn blockchain top level information started lot research mean would search around internet trying find article explaining blockchain good bad dense super upper level reading go far one thing know reading learn get even close knowledge get programming learn figured go try write basic local blockchain big thing mention difference basic blockchain like describing professional blockchain chain create crypto currency blockchains require producing coin traded exchanged physical money blockchains used store verify information coin help incentive node participate validation need exist reason writing post people reading learn blockchains try learn explaining code writing post show way want store blockchain data generate initial block node sync local blockchain data display blockchain used future sync node go mine create valid new block first post node wallet peer important data information come later post series tl dr want get specific read code came across post searching article describes blockchains understandably attempt write summary blockchains work super high level blockchain database everyone participating blockchain able store view confirm never delete data somewhat lower level data block anything long specific blockchain allows example data bitcoin blockchain transaction bitcoins account ethereum blockchain allows similar transaction ether also transaction used run code slightly downward block created linked blockchain validated majority people working blockchain referred node true blockchain chain containing greatest number block correctly verified majority node mean node attempt change data previous block newer block valid node trust data incorrect block worry confusing took figure much longer time able write way sister background anything blockchain understands want look code check part branch github anyone question comment correction praise feel like super nice get contact let know twitter step class file step write class handle block node running call class block frankly much class init function going trust required information provided dictionary writing production blockchain smart fine example one writing code also want write method spit important block information dict nicer way show block information print block terminal class block object def init self dictionary looking index timestamp data prevhash nonce k v dictionaryitems setattr self k v hasattr self hash creating first block need removed future selfhash selfcreateselfhash def dict self info info index str selfindex info timestamp str selftimestamp info prevhash str selfprevhash info hash str selfhash info data str selfdata return info def str self return block prevhash hash selfprevhash selfhash looking create first block run simple code def createfirstblock index zero arbitrary previous hash blockdata blockdata index blockdata timestamp datedatetimenow blockdata data first block data blockdata prevhash none block block blockdata return block nice final question section store data file system want lose local block data turn node attempt somewhat copy etherium mist folder scheme going name folder data chaindata block allowed file named based index need make sure filename begin plenty leading zero block numerical order code need create first block check chaindata folder exists chaindatadir chaindata ospathexists chaindatadir make chaindata dir osmkdir chaindatadir check dir empty creation empty oslistdir chaindatadir create first block firstblock createfirstblock firstblockselfsave step syncing blockchain locally start node able start mining interpreting data send create new data chain need sync node since node talking reading block local file future reading file part syncing also talking peer gather block generated running node def sync nodeblocks assuming folder least initial block exists chaindatadir chaindata ospathexists chaindatadir filename oslistdir chaindatadir filenameendswith json dsstore sometimes screw thing filepath chaindatadir filename open filepath r blockfile blockinfo jsonload blockfile blockobject block blockinfo since init block object dict nodeblocksappend blockobject return nodeblocks nice simple reading string folder loading data structure require super complicated code work future post write ability different node communicate sync function going get lot complicated step displaying blockchain blockchain memory want start able show chain browser two reason first validate browser thing changed also want use browser future view act blockchain like sending transaction managing wallet use flask since impressively easy start also since control code show blockchain json ignore import requirement save space node flask name nodeblocks syncsync inital block synced noderoute blockchainjson method get def blockchain shoot back blockchain case json list hash block information index timestamp data hash prevhash nodeblocks syncsync regrab node changed convert block dictionary send json object later pythonblocks block nodeblocks pythonblocksappend blockdict jsonblocks jsondumps pythonblocks return jsonblocks name main noderun run code visit see current block spit part mining also known block creation one genesis block data want store distribute need way include new block question create new block linking back previous one bitcoin whitepaper satoshi describes following note timestamp server referred node solution propose begin timestamp server timestamp server work taking hash block item timestamped widely publishing hash timestamp prof data must existed time obviously order get hash timestamp includes previous timestamp hash forming chain additional timestamp reinforcing one screenshot picture description summary section order link block together create hash information new block includes time block creation hash previous block information block refer group information block header way able verify block truthfulness running hash block validating sequence header case header creating adding string value together giant string data including index meaning number block previous block hash data case random string bitcoin referred merkle root info transaction timestamp mining block def generateheader index prevhash data timestamp return str index prevhash data str timestamp getting confused adding string information together required create header requirement everyone know generate block header within header previous block hash everyone confirm correct hash new block validate link two block bitcoin header much complex combining string us hash data time deal byte stored computer memory adding string suffices header want go calculate validated hash calculating hash hash calculation going something slightly different bitcoin method still running block header function def calculatehash index prevhash data timestamp nonce headerstring generateheader index prevhash data timestamp nonce sha shaupdate headerstring return shahexdigest finally mine block use function get hash new block store hash new block save block chaindata directory nodeblocks syncsync def mine lastblock index int lastblockindex timestamp datedatetimenow data block int lastblockindex random string transaction prevhash lastblockhash blockhash calculatehash index prevhash data timestamp blockdata blockdata index int lastblockindex blockdata timestamp datedatetimenow blockdata data block lastblockindex blockdata prevhash lastblockhash blockdata hash blockhash return block blockdata def saveblock block chaindatadir chaindata filename sjson chaindatadir blockindex open filename w blockfile print newblockdict jsondump blockdict blockfile name main lastblock nodeblocks newblock mine lastblock saveblock newblock tada though type block creation whoever fastest cpu able create chain longest node would conceive true need way slow block creation confirm moving towards next block part proofofwork order slowdown throwing proofofwork bitcoin proofofstake another way see blockchains use get consensus go work way adjust requirement block hash certain property like bitcoin going make sure hash begin certain number zero move next one way throw one piece information header nonce def generateheader index prevhash data timestamp nonce return str index prevhash data str timestamp str nonce mining function adjusted create hash block hash lead enough zero increment nonce value create new header calculate new hash check see lead enough zero numzeros def mine lastblock index int lastblockindex timestamp datedatetimenow data block int lastblockindex random string transaction prevhash lastblockhash nonce blockhash calculatehash index prevhash data timestamp nonce str blockhash numzeros numzeros nonce blockhash calculatehash index prevhash data timestamp nonce blockdata blockdata index int lastblockindex blockdata timestamp datedatetimenow blockdata data block lastblockindex blockdata prevhash lastblockhash blockdata hash blockhash blockdata nonce nonce return block blockdata excellent new block contains valid nonce value node validate hash generate save distribute new block rest summary ton question feature blockchain included example node become involved would node transfer data want included block store information block giant string better type header include giant data string part series coming move forward solving question suggestion part want see let know twitter comment post get contact thanks sister sara reading edits asking question blockchains rewrite clarify like like loading related
373,Lobsters,education,Education,Magic Paper,http://cognitivemedium.com/magic_paper/,magic paper,magic paper note chalktalk code approximation superposition sigmoidal function multilayer feedforward network universal approximators update visual medium used serious mathematical exploration neural network deep learning chapter reify deep idea mathematics inside interface thought technology understanding neural network deep visualization key command working within system extension abstracting glyph reparameterization glyph design conclusion acknowledgement citation magic paper reading toward exploratory medium mathematics thought technology kill math note kill math medium thinking unthinkable magic ink mindstorms child computer powerful idea playful world creative math design exploration licensing creative common attributionnoncommercial unported license contact,magic paper working note michael nielsen november followup nt require note chalktalk technology transforms said major advance consciousness depend technological transformation implementation word walter ong interface word mathematical idea conventionally expressed using notation terminology developed using static medium suppose however mathematics invented modern computer perhaps difficult imagine mathematics helped lead computer let thought experiment anyway might mathematical notation developed different way would instead developed dynamic interactive notation powerful static mathematical linguistic notation common use today part exploration question recently developed simple prototype system call magic paper code get feel system video using magic paper explain simple basic idea underlying proof beautiful theorem artificial neural network result neural net may used approximate continuous function see approximation superposition sigmoidal function george cybenko multilayer feedforward network universal approximators kurt hornik maxwell stinchcombe halbert white note need deeply familiar neural network follow along introduction basic neural net may found may wish fullscreen video easier viewing video design magic paper inspired part system developed ken perlin known chalktalk chalktalk publicly released time writing november update chalktalk since released see get understanding system viewing end following video video visual medium used serious mathematical exploration built magic paper explore two question directly addressed chalktalk first question whether visual medium used serious mathematical exploration kind researcher might working research problem word system used medium creative thought chalktalk fun medium explore obvious suitable kind exploration arises mathematical work course ambitious quicklybuilt prototype medium useable across mathematics decided narrow question ask whether medium could used explore least one nontrivial mathematical question concretely neural net used approximate function focusing one problem much easier building generalpurpose exploratory mathematical medium still extremely demanding thus informative constraint furthermore seems likely pattern useful solving one mathematical problem reuseable solving others fact even demanding idea proof presented nt actually discovered medium proof taken book neural network michael nielsen neural network deep learning chapter determination press despite believe context explaining idea underlying proof relatively recent mathematical result good one understanding required generalpurpose exploratory mathematical medium note video magic paper perhaps make appear explanatory educational intent case intended primarily medium think explore secondarily explain educate goal sometimes congruent also often tension example tension explanatory medium often highly polished presenting finished product distracting element eliminated contrast exploration involves distraction wrong path dead end one see myriad small way video frequent readjustment position size glyph various unnecessary weight bias parameter sometimes shown polished presentation would eliminated showing viewer need given moment superfluous element inevitable exploration another example tension education exploration come programming language logo logo often touted example discoverybased learning many respect good exploratory medium mathematics however logo considerable success helping child understand idea differential geometry differential geometer far aware use medium research potentially problem education real practice separated result busy work poorlymotivated educational problem interesting project would create single environment used education research optimistic possible beginning chess player use board move world champion reify deep idea mathematics inside magic paper interface second question motivating magic paper whether possible reify deep idea mathematics inside interface sound cryptic straightforward meaning explain meaning let briefly switch topic recall idea elementary physic principle conservation energy u x constant basic point relationship mass particle velocity v position x potential energy u x way physic ordinarily done manipulate expression using algebraic operation different approach possible essay thought technology michael nielsen thought technology available http cognitivemediumcomtatindexhtml develop prototype interface reifies principle conservation energy particular prototype vividly show user relationship mass position velocity potential energy make possible directly see adjust potential energy see trajectory respond give unique rich experience one enabling user internalize powerful set cognitive technology thinking motion chalktalklike medium seem promising reifying principle unfortunately far aware general result neural network powerful conservation energy however step direction directly seeing relationship parameter network output various neuron help u understand behaviour network work could incorporate deeper idea neural network learning gradient descent regularization way visualizing network nice recent example paper jason yosinksi jeff clune anh nguyen thomas fuchs hod lipson understanding neural network deep visualization icml also interesting develop interface context deep principle available perhaps using magic paper explore say chaotic dynamical system using idea conservation energy conservation phase space volume lyapunov exponent kam theorem building idea interface would make routine concrete part way user work think key command instead drawing neuron hit n instead drawing ax hit g graph would nt keystroke faster easier question bothered ever since first seeing perlin demonstrate chalktalk even audience member found much satisfying see draw glyph hit key appear effect even stronger user magic paper nt satisfactory understanding satisfying perhaps act drawing activates association brain would nt activated strongly issuing key command sense act drawing far meaningful meaninginducing hitting key little like reason nt name variable meant represent someone name jnwhg meaningful use name reason better use map coastline navigate rather log latitude longitude point coast unfortunately explanation suggestive vague incomplete yet lived experience strong effect something similar true physical activity tennis dance enormous difference symbolic representation say reading tennis versus actually part tend think activity special class physical activity different mental activity mathematics yet sure distinction sharp broadly advocate embodied cognition often make strong claim importance far see evidence claim weak yet specific claim may weak wrong believe strong important underlying effect really greatly help thinking sketch glyph magic paper nt understand working within system began design work magic paper paperandpen storyboards textbased script video developed storyboards script also began develop system quickly system powerful enough could basic sketch point reached stimulating easier work within new medium abandon storyboards script initially felt guilty abandoning storyboards script though somehow correct way working working new medium quickly began suggest useful idea believe would otherwise anticipated example final video often see multiple graph showing behaviour several different neuron network make easy viewer understand behaviour different part network put together contrast initial storyboards script single output graph began using medium realized possible use graph way particular nt design system could plot behavior intermediate neuron rather fortuitous happenstance tried spontaneously used medium another point anticipate storyboarding scripting useful would move resize neuron graph eg big benefit object persistence possible often useful reuse repurpose existing object since viewer already built strong mental model behaviour kind dynamic reuse harder achieve static medium perhaps reason anticipate storyboarding scripting contrast earlier description proof online book consisted text interspersed interactive element eg many interactive element depict minor variation system object persistence user must parse one separately put mental work required understand relationship part terribly hard work additional mental burden told script storyboards useful bootstrap medium running generative work directly within experimenting evolving approach comfortable extension abstracting glyph reparameterization glyph design three extension could added magic paper hour additional work first possible lasso several element combining single new glyph instance could lasso twoneuron gadget used build tower function turn single reusable glyph abstracted glyph could duplicated moved parameter edited glyph would also possible inspect internal state abstracted glyph making possible understand multiple layer abstraction second possible reparameterize abstracted glyph three parameter representing height tower function starting x value finishing x value three parameter would determine bias weight underlying element could implemented simple expression parser third possible integrate image editor enabling addition extra glyph magic paper visual language amongst thing editor could used add unique visual representation abstracted glyph conclusion research colleague sometimes express puzzlement interest new medium form often treat fun especially serious work advanced research usually mean work esoteric subject people working new medium form opportunity rethink absolutely fundamental concept number equality work rethinking mathematics language believe experiment eventually affect perhaps transform way research done take huge effort since kind rethinking individualsized problem civilizationsized problem getting started acknowledgement thanks carter nicky case andy matuschak robert ochshorn kanjun qiu grant sanderson jack schaedler helpful discussion citation academic work please cite michael nielsen magic paper available http cognitivemediumcommagicpaperindexhtml reading michael nielsen toward exploratory medium mathematics michael nielsen thought technology bret victor kill math see also note kill math bret victor medium thinking unthinkable bret victor magic ink seymour papert mindstorms child computer powerful idea jason brennan scott farrar natalie fitzgerald mayli khoe andy matuschak playful world creative math design exploration licensing work licensed creative common attributionnoncommercial unported license mean free copy share build sell interested commercial use please contact
374,Lobsters,education,Education,The Secret Life Of Machines,http://www.secretlifeofmachines.com/index.shtml,secret life machine,,
375,Lobsters,education,Education,Free and non free books all can learn from,https://github.com/learn-anything/books,free non free book learn,join github today sign,dismiss join github today github home million developer working together host review code manage project build software together sign
376,Lobsters,education,Education,Here's The Programming Game You Never Asked For,http://blog.codinghorror.com/heres-the-programming-game-you-never-asked-for/,programming game never asked,assembly language code said back save time nt need award ceremony every time c statement supposed occasional heroic creator assembly language programming game never asked robin ward emulator c discourse rocky boot loved game finishing meaningful sense basically impossible robot odyssey hardest damn educational game ever made cutting teeth basic point human resource machine said lifelong passion solve fizzbuzz starfighter ctf stockfighter felt long time stack overflow yearly programming game event exactly like already sort game giving lip service idea hiring best finding rare exploit complete wireless trading device programming game never asked find next job,know universally regarded unfun programmer writing assembly language code steve mcconnell said back programmer working highlevel language achieve better productivity quality working lowerlevel language language c java smalltalk visual basic credited improving productivity reliability simplicity comprehensibility factor lowlevel language assembly c save time nt need award ceremony every time c statement supposed assembly language performance reason every individual command communicated excruciating low level detail directly cpu gone fast cpu faster cpu multiple absurdly fast cpu core die gee kinda stopped caring cpu performance altogether five year ago nt much need kind handtuned performance get assembly sure occasional heroic amazing term getting stuff done assembly well radar mainstream programming probably twenty year good reason right mind would take tedious assembly programming today yeah nobody wait told uncle randy died left behind mysterious old computer also told way figure computer used good old uncle randy read blessedly short page photocopied reference manual fix corrupted boot sequence using assembly language well god time learn u assembly get bottom mystery nt creator note assembly language programming game never asked surprised discover cofounder robin ward liked much played game presumably completion wrote emulator c apparently kind thing fun free time already working full time u programming discourse programmer got ta program course long history programming game make unique way fetishizes assembly programming programming game take bit easier easing general concept simpler abstraction even simple programming game quite difficult consider one favorite apple ii rocky boot sequel robot odyssey loved game true programming fashion difficult finishing meaningful sense basically impossible let say kid completes game still kid know one also one smartest programmer ever met guaranteed career software engineer hell adult complete game go engineering robot odyssey hardest damn educational game ever made also stunning technical achievement one innovative game apple iie era visionary absurdly difficult game gain cult following game remember childhood game love despise hardest complex challenging world presented like exposed plato form secret nonphysical realm pure idea logic challenge one serious understand world programmer thomas foote started college picked game swore told god witness would finish game finished college managed barely happy dinking around robot thing got stuck moved game got little turned way treated programming electrical engineering messing around ton gate jam already cutting teeth basic point sensed level mastery necessary probably nt nt sure even wanted take cobol code listing monstrosity day week perhaps robot odyssey hard end bare metal cpu programming simulation like gentle example modern programming game tomorrow corporation excellent human resource machine video exactly irreverent sense humor expect studio built world goo little inferno excellent highly recommendable game right ever wanted find someone truly interested programming recommend game see start instruction slowly widens include corporate drudgery never er fun thinking believe strong connection programming game talented software engineer essential sense play idea experimenting stuff enjoy bend sheer joy creation anything else said joel implied good programmer love programming much pay wo nt go quite far note best programmer known lifelong passion way minor economic blip would ever convince anything else way rather sit potential hire front human resource machine time long take work level solve fizzbuzz whiteboard interview demonstrating competency certain technical skill worth certain amount money showing improvise fun excited patrick thomas erin founded starfighter want know competent programmer give realish simulation realish system hack experiment see far get security parlance known ctf popularized defcon rarely extended programming first simulation stockfighter participant given interactive trading blotter interface real functioning set limitorderbook venue carefully documented json http api api explorer series programming mission participant asked implement programmatic trading real exchange thickly traded market execute blockshopping trading strategy implement electronic market maker pull elaborate hft trading heist seriously next level hiring strategy far beyond anything else seen next level honest got really jealous reading felt long time stack overflow yearly programming game event exactly like special onetime badge obtainable completing certain level particular year stack overflow already sort game people would go nut yearly programming game event absolutely bonkers know talked giving lip service idea hiring best really want best programmer ever known excelled exactly situation starfighter simulates live troubleshooting reverse engineering existing system even point finding rare exploit consider dedication participant built complete wireless trading device stockfighter necessary practical programming game never asked regardless arbitrary programming game particularly one go great length simulate fictional system wonderful expression inherent joy playing experimenting code could find gladly hire dozen people like day set loose real programming project advertisement stack overflow put developer first already help find answer tough coding question let u help find next job
377,Lobsters,education,Education,Advice for early-career developers,https://8thlight.com/blog/colin-jones/2017/10/24/advice-for-early-career-developers.html,advice earlycareer developer,one explicit company principle contact form learning improving growth mindset input moocs goodreads profile apprenticeship pattern pragmatic programmer passionate programmer niche book clojure macro output repetition katas new problem katas lot example bite sized katas breakable toy openhatch grab maintainer nt respond awhile managing time big hairy audacious goal find mentor light apprenticeship program program provide company continuing education software developer developer next cube codenewbie fault meetup let u know good luck related post post author,several time week get email linkedin message recent soontobe code school graduate asking buy coffee jump phone call share career advice similar spot trying excel industry looking mentor fact kind feel like apprentice last year nt foresee selfidentification ending anytime soon really love able help besides one explicit company principle teaching anyone willingness learn want help personally limited time work family responsibility scalable meet everybody typically refer folk fantastic colleague run recruiting hiring effort via contact form careersapprenticeship option still feel bad needing say people request help want share something article like share tip earlycareer developer including code school grad based experience mean survivorship bias encourage take work leave nt learning improving ok invested bunch time probably money progress software industry hopefully teacher mentor code school honest software career requiring continuous learning improvement important advice share starting career long road many twist turn along way best way know excel software keep growth mindset learn improve career option like think improvement broken along two line input output tended go phase career done input output le often vice versa found essential improvement input innumerable way gain knowledge article book paper moocs conversation experimentation project documentation access expert willing answer question many quality efficiency vary across mechanism many u learn different way personally gotten ton value reading book applying learned reading blog post like one baby step hopefully help bit tip iceberg really recommend concentrating reading classic book help throughout career book author spent many month maybe year distilling year experience wellcrafted format inhale weekend willing read superpower industry really mostly stick broad area rather specific book recommendation check goodreads profile specific curious learn software career development broad career development issue make exception post highly recommend apprenticeship pattern pragmatic programmer passionate programmer bluntly stop reading post right go read three book instead think made wise decision learn code prefer book blog post reason wrote niche book clojure macro absolutely ignore book unless already clojure learn specific language framework concentrating learn software design architecture principle pattern learn testdriven development refactoring learn platform deploying learn foundational computer science concept learn communication lot material software space outside way communicate crucial part way others perceive whether conversation email documentation working people whether teammate manager end user role nice person communicates like jerk people going think need know fix learn logical fallacy cognitive bias nonviolent communication look material communicating effective writing presentation difficult conversation read opensource code experience reading os code effective got specific purpose mind also instructional clone repository github run test try reproduce issue issue tracker etc worst get idea someone else code easy hard understand best find leaning output side thing discus next output write code nt necessarily important skill need software career certainly one unique role software developer lot way practice writing code personal favorite code katas code katas couple main school thought like different reason repetition solving problem many time similar solution get understand problem really well give sense mastery found great emotional wellbeing mostly frustrated programming problem treat either meditation thinking deeply race honing skill tool folk even treat repetition katas performance without musical spoken accompaniment new problemssolutions idea coding part job thinking solving new problem one might related one seen nt identical new problem katas intentionally putting uncomfortable position notknowing need learn ok moving toward solution find lot example bitesized ridiculous name still great exercise work katas typically fairly constrained problem compared real world order single sitting though get quite tricky take much longer breakable toy much realistic largerscope project katas still nt missioncritical ok get broken learning breakable toy let see different idea work long term superhelpful work world open source software pretty intimidating get reason still think good idea look first get practice learning new codebase come handy throughout career second many opensource project level code quality pretty high get chance see experienced folk approach problem solve browsing issue pull request history intimidation factor real though make sure pick friendly project get rough idea project friendliness browsing mailing list group chat project issue asking trusted mentor aside picking project based friendliness probably find helpful start learning use project really well nt already force go existing documentation probably find lowhanging fruit typo grammar issue hardtounderstand explanation etc may even find documentation hard time ramping opensource project reading documentation bug offer help many project also tag issue beginner newbie nt necessarily mean new programmer could mean new contributor project also heard good thing os issue aggregator like openhatch grab finding project fit bill one caution balance need progress maintainer time management contribution work best clearly state problem trying solve offer proposed solution prepared solution rejected timeconscious probably want shoot early feedback idea improvement try feel hurt maintainer nt respond got lot stuff going practice empathy communication daily interaction little misunderstanding occur ask happened future prevent get past misunderstanding everyone feeling better afterward talking ask audience need need detail mostly care highestlevel bit skill among crucial job requires collaboration software development collaboration developer manager colleague end user etc communication huge area one still feel pretty actually process looking explicit coaching area point journey continues blog journal apprenticeship light wrote blog post every day huge help development forced reflect learned day helped frustrating day nothing seemed go right putting daily struggle learning need word required understand much better nt written made much easier get past struggle kind journaling nt public making public useful folk getting feedback also give something share potential employer want managing time input output hugely beneficial decide work know lot folk included want get great every aspect software realistic even unlimited time would impossible responsibility like child second job compound issue learn manage time really efficiently every time sit learn something make decision whether widen breadth knowledge dig deeper something already familiar decide thing within two broad category going tackle want decide goal high level find way move direction incrementally one idea take tip agile project management take big hairy audacious goal product figure first step two towards release break first one first mediumsized goal toward epic break goal knock single sitting story way fit learning space available rather rely luxury like wideopen night weekend tracking incremental motion toward big goal supermotivating look back accomplished course reflecting done also give chance identify roadblock understand figure remove probably find goal changing job need interest change healthy revisit time time well wary shifting goal take time even laserfocused find mentor need feedback without feedback progressing easy divorce selfassessment reality think much worse better really also massive amount information mentor help point u best resource course biased toward formal mentorship like offer light apprenticeship program primary job learning wo nt lie huge investment company requires tremendous amount buyin every every company make work chicago also working program provide company continuing education software developer could ask bos interested whether apprentice part job description try find least one person help guide progress first real mentor nt formal mentoring role developer next cube year ahead experience understood communicate basic direct feedback book told read pretty quickly ramped enough cs box model could slice dice photoshop doc reasonably standardscompliant xhtml website flexbox informal mentorship work great much easier find happens naturally friendly coworkers acquaintance even unfriendly one find mentor outside workplace idea codenewbie twitter chat podcast blog community ton great idea breaking excelling industry participant level social medium despite fault found twitter particularly wellpopulated software expert sharing tip link story people willing answer question many folk jostling attention nt feel bad ca nt make time directly user group area make timing work user group great place meet folk excited software check meetup topic might interested introduce make like hard might meet next employer open source software people reviewing pull request already giving direct feedback maybe careerlevel stuff might contribute chicago location starting trial external mentorship program provide guidance code review networking earlycareer folk looking junior developer role free way u help folk let u know like get involved stepping back bit looking mentor recommend starting informal relationship getting help specific question rather asking folk broader mentor much easier folk commit carving bounded time help broader mentoring question even people understand wo nt always abstract enough commitment seems almost infinite besides name relationship nt really want get external feedback make progress toward goal good luck software really interesting industry always much learn much teach look forward hearing success perhaps importantly nt forget pay forward help coming behind colin jones like web performance distributed system devops functional programming like bug related post post author
378,Lobsters,education,Education,How Big Brother Seeded the Tech Revolution,https://www.youtube.com/watch?v=ET2E0KfSPDc,big brother seeded tech revolution,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature
379,Lobsters,education,Education,A visualisation of Langton's ant,http://langton-ant.s3-website-eu-west-1.amazonaws.com,visualisation langton ant,,
380,Lobsters,education,Education,Why should we teach programming (Hint: It’s not to learn problem-solving),https://computinged.wordpress.com/2017/10/18/why-should-we-teach-programming-hint-its-not-to-learn-problem-solving/,teach programming hint learn problemsolving,teach programming hint learn problemsolving october pm grateful joseph p wilson helped understand avoid impression available see tweet linked roy pea midian kurland paper henry walker responded blog blog post teacher england new way think book palumbo metareview blog post nytimes wrote last spring argument simon peyton jones made england computer science curriculum alan perlis first acm turing award laureate argued cp snow also argued everyone learn computing alan kay made argument computing whole new medium andy disessa saying many year bootstrap explicitly teach mathematics computing original codeorg video argued everyone learn programming shortage programmer larry cuban arguing last summer learned amy ko terrific vlhcc summary sharon carver showed many year ago like uncategorized bpc computational literacy computational thinking computing education computing computing everyone,teach programming hint learn problemsolving october pm revision original post several reader pointed twitter original post insensitive read like attack brenda woman color senior white guy intent apologize grateful joseph p wilson helped understand avoid impression change post went yesterday careful future blog post c consortium celebration tuesday brenda wilkerson gave closing keynote full livestream c summit available includes brenda talk huge fan brenda done fabulous work chicago leader bringing c seen brenda talk livestream experience consortium celebration reading twitter stream found time day brenda one slide see tweet linked disagreed important point going respond say computer science build mental discipline breaking problem solving study test claim computer science lot study looking transfer teaching programming general problemsolving skill probably first study investigating claim roy pea midian kurland paper cognitive effect learning computer programming find claim paper henry walker responded blog see post internet blog post article teacher england strong belief learning computer science programming called specifically lead new problemsolving new way think simply evidence support claim talk book reference palumbo metareview blog post nytimes wrote last spring like learning style latin teach thinking persistent myth learning computing lead problemsolving skill support claim tweeted response brenda slide several c teacher asked teach programming computing great question top reason understand world argument simon peyton jones made england computer science curriculum computer science science like others teach chemistry student live world chemical interaction teach biology live world full living thing teach physic live physical world teach computer science live digital world study understand process alan perlis first acm turing award laureate argued everyone every campus learn program said computer science study process many discipline need people know process manager work logistics scientist try understand molecular biological process programming automates process creates opportunity simulate model test theory process scale perlis prescient predicting computational science engineering able ask question influence life cp snow also argued everyone learn computing foreboding correctly predicted computer computing algorithm going control important aspect life know anything computing even know ask algorithm magic even building algorithm simply knowing give power cp snow argues need power use important new form literacy alan kay made argument computing whole new medium fact human first metamedium medium includes interactivity medium respond readeruserviewer computing give u new way express idea communicate others explore idea everyone access new medium new way learn science mathematics mathematics place critical role understanding world mostly science notation mathematics mostly static equation code different give u new insight andy disessa saying many year bruce sherin idit harel yasmin kafai uri wilensky others shown u code give u powerful new way learn science mathematics bootstrap explicitly teach mathematics computing everyone learns mathematics also learn computing explicitly programming job skill common argument teaching computer science united state job skill original codeorg video argued everyone learn programming shortage programmer terrible reason make every school child learn program larry cuban arguing last summer tax payer funding silicon valley job program everyone going become software developer make sense train everyone job great evidence chris scaffidi learned amy ko terrific vlhcc summary showing worker software developer program make higher wage comparable worker learning program give student new skill value economy social justice issue make economic opportunity available everyone use computer better one possibility need research support everyone us computer time day knowing computer work lead effective use computer le likely make mistake resilient bouncing back error solve computing problem happen application hardware even without programming easily bet answer yes know research result support argument medium learn problemsolving finally computer programming effective medium teach problemsolving learning program teach problemsolving skill use programming want teach problemsolving sharon carver showed many year ago wanted student learn debugging skill like able take map set instruction figure instruction wrong taught debugging skill student debug logo program student successfully transferred debugging skill map task super cool cognitive learning science perspective student learn much programming need much programming teach problem solving skillbut big caveat learn enough programming reason list evidence say teach problemsolving programming student gain particular skill disservice student certainly reason seen several response blog post comment one slide brenda talk overall point much broader significant strongly agree brenda key point c social justice issue learning computing important unjust keep student currently c disproportionately unavailable poorer student female minority ethnic group need c like like loading related entry filed uncategorized tag bpc computational literacy computational thinking computing education computing computing everyone
381,Lobsters,education,Education,The Top 13 Resources for Understanding Graph Theory & Algorithms,https://neo4j.com/blog/top-13-resources-graph-theory-algorithms/,top resource understanding graph theory algorithm,super efficient graph algorithm top basic getting serious top basic introduction graph theory first course graph theory graph theory complex network introduction graph theory series graph algorithm series free leda chapter getting serious timeless way building michael hunger network science real gem algorithm design manual algorithm introduction graph theory ongoing update graph theory application modern graph theory recent graph development honorable mention graph animation pearl graph theory introduction graph theory graph introduction graph theory algorithm c part graph algorithm walk combinatorics introduction enumeration graph theory network flow analyzing social medium network nodexl insight connected world network introduction fascinating world graph theory youtube ready take graph analytics next level click get free copy reilly book discover develop intelligent solution download free copy,recently announced availability super efficient graph algorithm case missed announcement easytouse library graph algorithm tuned make full use compute resource part assisting ongoing project needed come speed well compile list graph algorithm graph theory resource although seemed like short task list grew continues grow mind wanted share list resource graph theory algorithm team reviewed many many still todo list noted top based review personal recommendation included resource might warrant look also notice broken two section basic getting speed graph technology concept getting serious ready dive deep hope much fun please let know notable resource missed rating top basic graph theory resource getting started graph concept business user need fundamental sometimes certain chapter even enough introduction graph theory trudeau go zero understanding solid grasp basic week well written context nonmathematicians willing basic calculation proof covered two week advanced degree mathematics first course graph theory chartrand zhang extremely wellrecommended longer history graph theory stress significance really smitten one mix history context explanation intimidated length put mix read every chapter really something everyone graph theory complex network introduction van steen reported great introduction careful attention paid make mathematics le intimidating youtube graph theory series lot content graph theory algorithm youtube graph algorithm series good series snappy easy understand free leda chapter graph algorithm readerfriendly item sample code play getting serious graph algorithm theory resource mathematics background ready spend time going deep timeless way building christopher alexander cover classic design concept building anything included upon michael hunger declaration best learning good design approach network science barabási good multidisciplinary approach network complex system many agree extremely readable graduate level text fantastic color graphic added queue seeing tie complexity study four chapter confirm real gem algorithm design manual skiena le academic good example relate practical problem four chapter focused graph algorithm well sprinkle throughout total beginner reasonable especially building solution although coding background really enjoying find explanation understandable like war story section chapter thing go wrong algorithm sedgewick wayne good survey data structure algorithm used today one chapter focused graph algorithm read impressed online supporting material related mooc introduction graph theory douglas west introduction chapter reported good need mathematics background review indicated variety proof helpful ongoing update online graph theory application gross yellon highly regarded great introduction complaint jump around bit mathematically deep could really appreciated long appendix use case algorithm modern graph theory bollobas going need knife fork seems like one highly recommend text dealing recent graph development highly rated comprehensive coverage every major theorem indispensable reference research mathematics course text noting lack application context honorable mention cut list somewhere also wanted see possible resource provide feedback experience graph animation combinatorica easytounderstand visuals although companion text great feedback nice quick link think picture pearl graph theory hartsfield recommended undergraduatelevel introduction without lot technical detail almost made top list often cited great fondness seems cover similar topic trudeau work introduction graph theory wilson topic similar trudeau book interesting example visuals however lack context logical explanation trudeau may nice supplement recommend completely graph introduction brody classic course text expanded updated version brody previous work reportedly mathematically focused graph theory diestel online introduction really solid mathematics base algorithm c part graph algorithm sedgewick another sedgewick entire part series book graph seems cover material previously listed sedgewick much detail walk combinatorics introduction enumeration graph theory bona interesting look graph combinatorial perspective second half book graph theory reminds trudeau book technical explanation eg get matrix calculation although interesting probably best suited really want dive math theory network flow ahuja magnanti orlin praised introduction integrated network theory algorithm application loved detailed explanation certain algorithm work network optimization others felt difficult understand skimmed impressively comprehensive regarding network flow would recommend previously mentioned network science general network understanding analyzing social medium network nodexl insight connected world hansen shneiderman smith network introduction newman reported great introduction network theory anyone college level calculus matrix algebra explanation reported clear thorough fascinating world graph theory benjamin reported entertaining perusal graph problem others comment neither contextual enough beginner detailed enough background mitopencourseware youtube certain missed lot good video many review ready take graph analytics next level click get free copy reilly graph algorithm book discover develop intelligent solution download free copy
382,Lobsters,education,Education,Why Johnny Can't Code Good,https://www.youtube.com/watch?v=2xyZeovFqCA,johnny ca nt code good,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature chris allen johnny ca nt code good λc youtube,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature chris allen johnny ca nt code good λc youtube
383,Lobsters,education,Education,Cooperative Software Development,http://faculty.washington.edu/ajko/books/cooperative-software-development/,cooperative software development,cooperative software development submit issue pull request github history organization communication productivity quality requirement architecture specification process comprehension verification monitoring evolution debugging revision history creative common attributionnoderivatives international license,credit creative common cooperative software development teaching software engineering many year frustrated lack simple concise practical introduction human aspect software engineering student interested becoming software engineer response distilled lecture past decade brief writing nt represent everything know software engineering particular nt discus deep technical contribution field chapter synthesize broad evidence team work together succeed hope enjoy see something missing wrong submit issue pull request github chapter history chapter organization chapter communication chapter productivity chapter quality chapter requirement chapter architecture chapter specification chapter process chapter comprehension chapter verification chapter monitoring chapter evolution chapter debugging revision history july revised chapter address racism sexism ableism software engineering july incorporated newly published work icse esecfse sigcse tse tosem july incorporated newly published work icse esecfse sigcse tse tosem july first draft book release material based upon work supported national science foundation grant opinion finding conclusion recommendation expressed material author necessarily reflect view national science foundation work licensed creative common attributionnoderivatives international license
384,Lobsters,education,Education,Kaizen of Programming,http://250bpm.com/blog:102,kaizen programming,kaizen programming loc zeromq nanomsg requestreply publishsubscribe loc libmill libdill structured concurrency new socket api loc cartesian different dimension conceptual object loc tile kaizen zen october discussion forum,kaizen programming started programming early year old back idea program whatever necessary get initial period pogramming nt cared much whatever programming assignment got school later whatever work needed feed spare time mostly drinking artist changed back started involved open source fact delivering code packaged product sparked interest programming see packaged product provide people tool stuff super useful noble endeavour least interesting delivering code hand mean putting idea people mind kind thing aura magic hard resist loc created zeromq later nanomsg idea tried convey messaging pattern requestreply publishsubscribe etc nt vague heuristic make distributed system rather formally precise algorithm understood publishsubscribe mean knew exactly kind behaviour expect able use atomic building block distributed application pas idea created library encapsulated pattern user instantiated publishsubscribe endpoint worked publishsubscribe way hoped people using library adopt pattern use future work independent whether use zeromq took around line code get loc created library called libmill easy use coroutine library c code legwork trying rewrite go model concurrency make fast speed coroutine creation context switch would comparable simple control construct like idea concurrency literally bunch control construct hope library make equal performancewise would shift people mental model forked libmill created libdill new idea structured concurrency idea threadscoroutines cleanly nested similar way nest function object tried examplify concept creating new socket api allows finegrained layering network protocol case speaking approximately line code loc created tool called cartesian deal problem domain highly repetitive time somewhat irregular idea model subclassing know objectoriented programming possible yes categorize animal mammal fish animal well categorized land animal water animal subclassing model decide distinction important go cartesian hand treat distinction equally different dimension conceptual object code power small line javascript loc last week written small library called tile come long experience code generation typical code generation product like jinja mako matter ribosome based idea template code fill piece dynamically make sense want generate customized html page want change say username id number however try generate actual code say state machine become increasingly inconvenient mix template code generator code result unreadable mess tile hand dispenses idea template rather provides way manipulate combine rectangular block code simple fashion module line code kaizen zen may noticed pattern time go code tends concise line code line code one may consider improvement get older experienced stuff le code object let ask theoretical question possible create project zero line code yes imagine solving last hurdle finally deleting last line code project becomes perfect yet time incommunicable try imagine selling library zero line code remains mental pattern solve problem efficient way short telepathy instill pattern person brain totally reasonable person use zeromq nt want write line code would use tile line long snippet python code act using library establishes idea behind mind nt use wo nt get idea appears improvement term stuff actually drawback term communicating idea kaizen process continual improvement degraded zen act solitary selfenlightment sit idea october forum
385,Lobsters,education,Education,Should the elementary concepts of category theory be taught in pre-college courses?,https://www.quora.com/Should-the-elementary-concepts-of-category-theory-be-taught-in-pre-college-courses-Could-that-be-a-benefit-for-the-general-population,elementary concept category theory taught precollege course,,please enable javascript refresh page continue
386,Lobsters,education,Education,Actionable Core Values for your Engineering Team,https://medium.com/@fabrik42/actionable-core-values-for-your-engineering-team-922a4d6cf46a,actionable core value engineering team,actionable core value engineering team define core value team tie action core value approach tribal leadership core value quality courage trust noble cause mission statement offsite event story time collecting idea core value collecting idea noble cause defining core value noble cause whole group finding actionable item core value one month later aftermath core value noble cause,actionable core value engineering teamif work team developer talk shared value team article explain make sense take action value teamthis experiment started worked teammate professionally full time together year others day knew shared lot value back never actually worked wanted change thiswhy define core value team work together people team care team team somehow successful probably already share unsaid value among member teami lucky work well performing friendly teamsometimes case working team frustrating even collaboration inert exhausting may good chance also share value misinterpreted recognizedthe point talk value one way everyone personal value come point discussion argumentthe stressful situation le likely really understand perspective approach differ take time realize value share much easier really get put time aside specify upfront important also easier remember value live clarified written outfor like technical part developing software take time think thing write spec wait production fire think one way sure former approach much efficient pleasantwhy tie action core value sometimes kind corevaluefinding team offsites primarily way get know colleague little bit better create common ground fine wanted go furtheri want u define core value end base action take team next level live value really value order live value must actionableso additional task beyond definition value would put thought action bring value live daily routine tool process behaviour event support value reflecting value make actionable would much intensive detailed discussion every proposed valueour approachi looked best way found answer book tribal leadership defines two term core value team stand shared value team value defined term like quality courage trust noble cause team live meant credo short description team aspires book give good example word would define mission statement teamit important understand difference boththe core value foundation basecamp team start right noble cause give team right direction reminds want becometherefore important look actionable item build upon value support team move right direction towards noble causebased idea one day offsite whole team next section describe wentthe offsite eventthis first time organized kind event colleague nervous supportive idea know kind event get kind cheesy vibe result eyerolling snarky comment would basically undermine whole idea one top priority get teammate mood give serious honest trywe took whole day eight people met creative space outside work distracted brought coffee soft drink started slowi wanted everyone feel comfortable think crucial success event people relaxed open work wanted dostory timeas warm sat table facetoface discussion would soon start work lot postits flip chart felt intimate personal opener would set better course rest dayi started share one developer war story risk boring rest group point story could end realized x important value working environment others could relate asked share story end everyone shared short story value team could relate withcollecting idea core valueswe split two group spent time collecting discussing personal workrelated value writing postits important discus shared value every member need basic understanding personal value value otherswe came together presented result two subgroup think everyone surprised much common everyone hadnormally one would assume would proceed discus presented value cluster result discard lessimportant yetcollecting idea noble causeinstead introduced concept noble cause difference core value noble cause split worked idea suggestion noble causei think important way people realize difference connection two term necessary start working noble cause finishing value otherwise topic one concept always seem creep oneonly round brainstorming discussion came together talk result value cause created new git repo started clustering sorting formulating value cause markdown file projectordefining core value noble cause whole groupthis laborious also important part offsite tried settle handful term represent value write short explanation every term forced u discus actual meaning term depth clarifying every term meant single team member interestingly much easier agree topic leave meaning topic everybody wanted includein end agreed five core value one explained one four short bullet point two short sentence noble causethe whole team exhausted also happy result everyone could find value cause would agree hard work express argued time hard formulate value cause realize even talked value implicitly year never tried boil group effort make clear everyone much harder would think even year happily working togetherfinding actionable item core valuesafter break spent rest afternoon splitting two group collecting idea actionable item support way team based core value towards noble causethe idea find thing workflow would support core value thing always existed thing new thing would move u right directionwe presented discussed idea importantly appointed people responsible actionable item cared forthis offsite ended able talk lot thing present future team also clear needed take care result prevent vanishingone month later aftermathi waited one month write article wanted see result offsite would last offsite meant change life every team member really hoped would positive sustainable impact way workhere actionable item already took action created slack channel discus remind core value noble causewe printed core value noble cause two large poster hang officewe shared explained core value noble cause candidate new team member hiring process onboarding processwe discussed concrete rule better commit messageswe settled heated discussion stopping second reminding valueswe revived company internal book club read book togethera lot different idea created initial workshop sometimes scope broad book club sometimes scope specific better commit message pay value value think great wide variety small enhancement coming core value noble cause proud core value noble cause part really want share something u important u tailored usmaybe someday decide publish keep hidden little dev tribe want see go
388,Lobsters,education,Education,deeplearning.ai - New Coursera ML MOOC,http://deeplearning.ai,deeplearningai new coursera ml mooc,,machine learning yearning free book dr andrew ng currently writing teach structure machine learning project book focused teaching ml algorithm make work
389,Lobsters,education,Education,Coding Boot Camps Get the Boot: Why the Industry Is Shutting Down,https://thetechladder.com/story/coding-boot-camps-get-boot-industry-shutting/,coding boot camp get boot industry shutting,,domain name become necessity effective business marketing endeavor whether using domain name company website build community marketing campaign premium domain name enhances effort
390,Lobsters,education,Education,Hacker Curriculum,http://www.hackercurriculum.org/,hacker curriculum,hacker curriculum,hacker curriculum
391,Lobsters,education,Education,Basic skills of a good programmer?,http://secretsofconsulting.blogspot.com/2017/08/basic-skills-of-good-programmer.html,basic skill good programmer,,many outstanding programmer asked basic skill required good programmer lot good useful answer given question test coding use particular tool use agile method though year programming experience one thing made better programmer ability willingness examine critically something shortcoming year still could say incremental development applied also examine strength longcomings know greatest strength quickly become greatest weakness instance one great strength programmer speed something done quickly guy weakness speed tendency omit last hour testing would make project rock solid learn importance taking time precision job many programmer examine critically work improve greatest strength exclusion weakness practice take certain distance nature computer limit ability highlighting greatest weakness computer like mirror mind brightly reflects poorest thinking become better programmer look mirror clear eye see telling armed information select useful external thing work thing different anyone else shortcoming strength unique advice others often miss mark good programmer make good use best tool best tool sharpen see example
392,Lobsters,education,Education,Great Ideas in Theoretical Science,http://www.cs.cmu.edu/~aada/courses/15251f15/www/schedule.html,great idea theoretical science,mcgill university denis thérien hamed hatami education theoretical computer science,born raised istanbul moved montréal high school received bsc hon mathematics computer science msc computer science phd computer science mcgill university advised denis thérien hamed hatami currently associate teaching professor computer science department carnegie mellon university passionate education theoretical computer science graduate school research theoretical computer science trying understand inherent limitation computer computation specifically research interest communication complexity circuit complexity analysis boolean function matrix pseudorandomness structure v randomness computer science mathematics additive combinatorics time right go thinking teaching education love teaching theoretical computer science trying find best explanation conceptually difficult topic also much interested rethinking higher education mean rethinking role lecture rethinking assessment scheme rethinking role teaching assistant etc believe lot room improvement think issue every day
393,Lobsters,education,Education,Instructive and Persuasive Examples,https://www.hillelwayne.com/post/persuasive-examples/,instructive persuasive example,excuse write unit test finding example mla format alex koppel noah tye,recently read excuse write unit test argues unit test good write part strongly agree message feel kinda bad criticizing essay provide example simple testing const add number return numbersreduce acc val return acc val add number const expected const actual add expect actual toequal expected true bad example specifically inappropriate reading get sense unit test article titled unit testing fine called unit testing called excuse write unit test target audience people heard testing people know unit testing convinced worth example need show benefit unit test example one pretty obvious add correct bother write test code tell right looking another test code longer entire function big investment clear benefit etc etc etc issue add instructive example want persuasive example instructive example show persuasive example show without making distinction clear easy accidentally write former really need latter also lot harder write good persuasive example example simple people brush example complicated people follow also le likely trust complicated example might concealing simpler way example abstract people see useful practice example concrete people see generalizes problem good persuasive example simple without trivial complex without convoluted right balance general specific hand instructive example need understandable blame article using wrong kind example let try find better one finding example unit test catch bug want example function look easy implement bug show unit test catch bug either show unit test catch edge case catch regression thing mean bug code think simple finicky immediately jump string processing also good everybody dealt string processing everybody gotten burnt let try string processing problem list citation mla format write function take list citation two author return ever coauthor keep example lean make two assumption first two author per cite et al testing author always submit lastname firstname format def arecoauthors citation bool citation ayers alice bob barker chen carol alice ayers barker bob diez arecoauthors citation ayers alice barker bob true arecoauthors citation ayers alice diez false probably tell main challenge least obvious one second author citation firstname lastname format lastname firstname let write couple unit test def testarecoauthors assert arecoauthors citation ayers alice barker bob def testarenotcoauthors assert arecoauthors citation ayers alice diez simple function pass test def arecoauthors citation f cite citation cite cite return true return false look mostly correct add new test case fail def testarecoauthorsflip assert arecoauthors citation barker bob ayers alice arecoauthors commutative fix redefining author def arecoauthors citation def firstlast author name authorsplit return f name name cite citation cite firstlast cite return true cite firstlast cite return true return false another finicky edge case missed name title fail def testignorestitle assert arecoauthors ayers alice bob barker life diez ayers alice diez could fix would potentially regress something else book one author etc etc etc many edge case track longer confident correctness program looking argue example persuasive adding number one downside took think writing persuasive example hard think worth though lead stronger article thanks alex koppel noah tye feedback
394,Lobsters,education,Education,Attention Mechanisms in Recurrent Neural Networks (RNNs) - IGGG,https://www.youtube.com/watch?v=QuvRWevJMZ4,attention mechanism recurrent neural network rnns iggg,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature attention mechanism recurrent neural network rnns iggg youtube,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature attention mechanism recurrent neural network rnns iggg youtube
397,Lobsters,education,Education,Text is Keeping Kids from Coding,https://medium.com/@dannyyaroslavski/text-is-keeping-kids-from-coding-b70988dd7541,text keeping kid coding,text keeping kid coding,text keeping kid codingwe ran big blocker designing spritebox coding learntocode game kid age kid code simply unapproachablewith previous game lightbot already proven kid age capable writing complex program icon goal next title get kid engaged familiar real text programming could advance real programming languagesproblem many newcomer kid adult alike believe code inherently complex simply look complex first challenge became make code look friendly source please learn code techcrunchwe guessed likely culprit unusual symbol see thought succeed got rid anything atypical adopted simple vocabulary used interface allow syntax error soon find case came textual code spritebox code hour first try appwe showed playtesters kid parent told u want hear game look complicated text deterred player confidence led confusion anythingwe believe perspective simplified code look like plain english asked parent imagined target age group app got response estimated age much older demographic wanted hitas test replaced text icon many playtesters initial fear dissipated player confident approaching game parent estimated target age app much lower
398,Lobsters,education,Education,Hyperopt tutorial for Optimizing Neural Networks' Hyperparameters,http://vooban.com/en/tips-articles-geek-stuff/hyperopt-tutorial-for-optimizing-neural-networks-hyperparameters/,hyperopt tutorial optimizing neural network hyperparameters,hyperopt tutorial optimizing neural network hyperparameters hyperopt treestructured parzen estimator tpe algorithm random search hyperparameter optimization sits among cited deep learning paper notebook jupyter star fork define hyperopt parameter loguniform lognormal distribution example optimizing finding minimum example dict hyperparameter space choice hyperopt hyperspaces represented nested data structure let record history every trial next saving result disk optimizing resuming stopped hyperparameter search github repository project effect hyperparameter accuracy use git large file storage git lf star fork,hyperopt tutorial optimizing neural network hyperparameterswhat hyperopt hyperopt way search hyperparameter space example use treestructured parzen estimator tpe algorithm explore intelligently search space narrowing estimated best parametersit hence good method metaoptimizing neural network optimisation problem tuning neural network us gradient descent method tuning hyperparameters need done differently since gradient descent apply therefore hyperopt useful tuning hyperparameters learning rate also tune fancy parameter flexible way changing number layer certain type number neuron layer even type layer use certain place network given array choice nested tunable hyperparametersthis oriented random search contrast grid search hyperparameters preestablished fixed step increase random search hyperparameter optimization hyperopt proven effective search technique paper technique sits among cited deep learning paper sum efficient search randomly value intelligently narrow search space rather looping fixed set value hyperparametersnote blog post also available github notebook contains code run jupyterstar forkhow define hyperopt parameter parameter defined certain uniformrange else probability distribution hprandint label upper hpuniform label low high hploguniform label low high hpnormal label mu sigma hplognormal label mu sigma also quantized version function round generated value step q hpquniform label low high q hpqloguniform label low high q hpqnormal label mu sigma q hpqlognormal label mu sigma q also possible use choice lead hyperparameter nesting hpchoice label list potential choice hpchoice label hpuniform low high hpnormal mu sigma none anything visualisation parameter probability distribution found detail choice parameter nesting comein note chart especially loguniform uniform distribution blurred line averaging value fade toward end signal since zeropadded line ideally would fade using technique mirrorpaddingon loguniform lognormal distributionsthose best distribution modeling value learning rate want observe change learning rate according changing multiplication rather addition eg adjusting learning rate want try divide multiply rather adding substracting finite valueto proove let generate loguniform distribution multiplier learning rate centered dividing value yield distributionin example optimizing finding minimum f x x define simple search space solve f x x x hyperparameterin found minimum trial x example dict hyperparameter spacelet solve minimizing f x using space using python dict structure later neable u nest hyperparameters choice clean wayin choice hyperopt hyperspaces represented nested data structure tooyet defined space single parameter normally space contain many parameter let define complex one one nested hyperparameter choice uniform float let record history every trialthis require u import thing return result dict status loss key least let keep return dict evaluated space may come handy save result diskin found minimum trial x space result first trial total interest u result key trial show next saving result disk optimizing resuming stopped hyperparameter searchnote optimization could parallelized using mongodb storing trial state althought builtin feature hyperopt let keep thing simple example hereindeed tpe algorithm used fmin function state stored trial useful narrow search space dynamically trial interesting pause resume training apply real problemthis done inside hyperoptoptimizepy file github repository project example optimize convolutional neural network solving problemit also possible glance result effect hyperparameter accuracy might well like blog post mine use git large file storage git lf handle versioning huge file working machine learning projectsstar fork
399,Lobsters,education,Education,"Leslie Lamport to grads: If you can’t write, it won’t compute",http://www.brandeis.edu/now/2017/may/commencement-lamport.html,leslie lamport grad write compute,computer scientist leslie lamport grad write compute exhorted graduate science mathematics find new mode communication,computer scientist leslie lamport grad write compute exhorted graduate science mathematics find new mode communicationby david e nathanmay computer scientist leslie lamport phd delivered address brandeis school science diploma ceremony sunday reminding graduate importance great writing urging search new way convey idea earlier day alumnus celebrated father principled distributed computing received honorary doctor science alma mater contribution computer science lamport earned master degree doctorate mathematics brandeis many people much writing great writing hard find told several hundred people shapiro gymnasium tired reading email assume english know sender paper attempt arouse interest seems ruthlessly suppressed even technical field persuasive interesting writing necessary achieve success lamport said succeed attaining position allows something great something really great realize great still one hurdle convince others great told graduate require writing exhorted graduate biological physic chemistry computational linguistics computer science language linguistics mathematics physic find new mode communication must wonderful way writer interact reader one thought yet way convey idea better make reading fun lamport said want go invent lighthearted address laced humorous observation anecdote winner turing award nobel prize computing alternately poked fun eightminute time limit given speak graduate lamport also shared theory called lamport law state ability required obtain position unrelated ability required succeed job think need explain law applies american politics today told crowd drawing sustained laughter concluded reference seminal work time clock ordering event distributed system one mostcited research paper ever published field computer science read biography see brilliant trivial paper mentioned time clock said well qualified give talk last eight minute
401,Lobsters,education,Education,Learning at work,https://jvns.ca/blog/2017/08/06/learning-at-work/,learning work,tweet learn programming languagesframeworks outside work choose project think learn learned bit use thread pool java watch senior people operate cory read every pull request read source code follow bug figure use commute take time work learn,asked twitter back invest learning tweet common thing people replied read blog post go conference read book watch talk washing dish build side project using technology want learn thing totally work see pretty common spend time outside work working career development learning new skill certainly something done lot know great programmer program outside work got thinking want become awesome want spend lot time basically extra work hour thing people twitter came everything stuff workday learn programming languagesframeworks outside work one kind negative think useful view learning programming language know language reasonably well python scala ruby learning new programming language well take fair amount time feel like spending free time right work working bit go interesting happy fun feel like spending lot personal time really think necessary learn language writing reading people code learn convention code reviewed thing work clear think bad learn programming language outside work really choose project think learn thing learned last year stripe scalarubygo hadoopmapreducescalding work java concurrency library profile java program ton various aws service work lot machine learning networking cdns tl work dockercontainersrktkubernetes service discovery dns jenkins bunch thing small example choosing something work wanted learn using program work parallelizing work well problem could asked people wrote figure program thought well interested learning concurrent programming probably learned bit use thread pool java worked day learned new thing right working kubernetes really pick learning opportunity learning quite thing distributed system go working happy think silly people like hey work x technology need experience work right spend lot time networkingpuppetkubernetesdockeraws never worked thing job watch senior people operate someone work really admire watch try emulate ask advice example cory joined noticed introducing new technology would find another team related problem needed solving work make sure technology actually worked solve problem right working newish project careful remembering exactly expect help think made work go lot better read every pull request two quote loved thread small team read reread every pull request come understand problem solution fully stalked checkins see people solved various problem actually read every single pull request team find useful pick area want keep learning keep track time work people area definitely always example used work machine learning theory like keep track people find really interesting practice much pay attention try pay attention thing closer like networking team work read source code reading source use big one understand internally mainly certain way think fantastic tip super important lot system really well documented learn work without reading source code follow bug figure sometimes see bug figure fix later sometimes somebody else figure answer happens like really take time understand answer figured example recently networking issue manage debug somebody else figured last week thinking understand bug sure tool used get information needed debug get back work need make sure go find next time better equipped jessica kerr commented whenever look something troubleshooting go little deeper broader strictly necessary think great philosophy good go far every rabbit hole consistently reaching little pay dividend sure also liked answer sometimes dig problem workrelated really within actual duty see get somewhere use commute commute lot people mentioned using commute time listen podcasts read paper read interesting article think seems like awesome way keep thing interested take time work learn someone twitter said wish could take hour day learn view job take time workday learn thing like right using kubernetes work complicated system take long time understand spend time reading work instance starting spun test cluster poke around try understand container networking work also make progress project time probably bit easier work remote nobody really know hourbyhour anyway people care getting done overall actually think would probably productive took little time read advance like read kelsey hightower learn kubernetes hard way document take long one really good idea set cluster would saved time people take idea even farther example friend dan mentioned time like read technical book work originally found kind surprising make sense book relevant work reason really read work
402,Lobsters,education,Education,AP Computer Science Principles course,https://advancesinap.collegeboard.org/stem/computer-science-principles,ap computer science principle course,explore option,interested implementing ap csp school need resource train teacher adopt innovative curriculum created expert educational organization endorsed college board outofthebox solution include preapproved syllabus lesson plan formative assessment professional development explore option
403,Lobsters,education,Education,Girls set AP Computer Science record…skyrocketing growth outpaces boys,https://medium.com/@codeorg/girls-set-ap-computer-science-record-skyrocketing-growth-outpaces-boys-41b7c01373a5,girl set ap computer science growth outpaces boy,girl set ap computer science growth outpaces boy ap c principle source data participation girl minority outpaces rest ap computer science growing whole source data student still long long way go participation ap computer science university computer science future look even rosier diversity across classroom ap computer science principle focus diversity,girl set ap computer science growth outpaces boysten year ago female student took ap computer science examfast forward female student took ap c exam year entire ap c exam participation codeorg launched though computer science seen sustained growth year year introduction ap c principle past school year largest college board ap exam launch history skyrocketed participation c especially among female student minoritiessource datathe growth among female student incredible increasing participation ap c exam since outdone underrepresented minority increased participation nearly last year participation girl minority outpaces restwe seen steady improvement diversity ap computer science four year since since codeorg launched thanks collaboration many partner dedicated effort thousand computer science teacher participation ap computer science growing whole greatest gain among female student underrepresented minority whose representation among examtakers increasing yearsource dataracial diversity codeorg ap computer science classroom exceeds nation average work urban school ready report aggregate statistic codeorg partner school result seen school district using codeorg incredible example broward county public school fl african american student took ap computer science exam year entire state florida last year significantly higher percentage received passing grade broward county public school also saw record participation latinx student whose participation ap computer science tripled since last yearbecause student codeorg c principle classroom indicate want pursue computer science graduation optimistic gain downstream impact diversity tech university workforce levelwe still long long way goparticipation ap computer science still far balanced female student still account student taking ap computer science exam underrepresented minority make problem continues higher education university computer science major men workforce wellalthough codeorg become popular curriculum ap computer science result much larger one organization thanks community effort nonprofit educator philanthropic effort corporation even local government support celebrate incredible result first year college board launch new ap computer science principle examthe future look even rosierin grade codeorg prepared almost teacher introduce computer science class diversity across classroom nearly match overall u population student move high school hope many continue interest computer scienceand summer alone preparing almost new teacher begin teaching ap computer science principle expanding access ten thousand student urban rural school previously computer science offering focus diversity pervades work curriculum teacher development even government affair excited see result classroomthese change possible without passion effort teacher embraced computer science help open door student teacherled movement continues female underrepresented minority student trying computer science ever together changing face computinghadi partovi codeorgps far many group deserve collective credit would difficult list certainly like acknowledge nsf idea new ap course college board making administering exam many different organization created curriculum prepared new teacher dozen private philanthropist corporation funded work course thousand teacher classroom codeorg celebrate everybody contribution movement give every student every school opportunity learn computer calculated participation multiplying total ap c exam taken female underrepresented minority rather summing individual exam result small discrepancy relative final number released college board later year
404,Lobsters,education,Education,Introduction to Learn Anything Search Engine,https://youtu.be/_zYjS2Uicso,introduction learn anything search engine,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature learn anything introduction youtube,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature learn anything introduction youtube
405,Lobsters,education,Education,Intermediate Abstraction,https://www.arrdem.com/2017/07/27/intermediate-abstraction/,intermediate abstraction,simple made easy logic scientific discovery cyclomatic complexity mccabe,simple simplex single strand one complex woven several strand complect archaic plait together easy french alsie meaning comfortable tranquil difficult requiring great labor effort rich hickey simple made easy often missuse simple mean easy ideally want write code simple easy requires concious complexity ergonomics however rarely objective critera two critical dimension fact perfectly reasonable engineer may consider tool sufficient easy another may reasonably tool baroque overbearing core motivator talk sharing objective metric simplicity clarifies otherwise subjective question enables u agree upon measurement solution quality thankfully prior art subject attempting estimate complexity karl popper logic scientific discovery build framework formal logic formalize scientific process popper base project upon falsifiability corroboration experiment hypothesis popper formal statement falsifiable implies testable outcome experiment confirm hypothesis would imply experiment state entire universe could possibly falsify hypothesis however fail falsify claim hypothesis even show experiment produced state corroborates prediction hypothesis popper proposes complexity theory measured reasoning set state universe would falsify theory set related relative complexity measured establishing implication subset relation far enough really working rule measurement comparing infinity set state universe hardly intuitive good news way cyclomatic complexity mccabe measure number control path program approach work even give obvious heuristic recognizing complexity simple number branch unidimensional nt capture fact program manipulate state dataflow complexity related family metric try measure possibility space data state program unfortunately beyond giving intuition idea complexity grows memory footprint program efficient way quantify relate kind complexity get mess count state order talk complexity complexity estimator use model von neumann finite state machine machine whose state easily related go back popper two logical reduction statement p q estimate relative complexity simply comparing number degree freedom expression likewise using calculus simple arithmetic reduction î calculus function application reduction instantly regain property understand complexity expression program merely looking number term involves counting intuition supported cyclomatic complexity dataflow complexity metric program halt reduction complexity program written reduction well one datum program point unique occurs î xxx î xxx î xxx î xxx must estimate precise metric divergent combinator mess whole thing right per halting problem much accept must incomplete analysis restrict domain terminating expression still get lot utility rule thumb nt write purely functional program write program use functional tool abstraction still global state lying around compute turing machine graph reduction engine really hard build estimate complexity real program suggested kind law nature telling u amount intellectual effort needed grows square program length thank goodness one able prove law need true ewd humble programmer room reasonable disagreement propose simple heuristic estimating complexity product following property program program segment number input parameter number branch number backedges amount reached captured state accessed maybe cost parameter amount reached captured state modified maybe cost parameter defn map f coll coll lazyseq con f first coll map f rest coll function accepts parameter take many branch using complex function accepts function parameter parameter merely delegate argument function real branching behavior applied higher order function may complex function simple capture little state little directly defn log attempt log message either directly via agent check level enabled performance reason agent used invoked within running transaction logging level specified txagentlevels allows entry written transaction commits discarded retried aborted corollary level eg debug error written even failed transaction though cost repeat message retries one override setting force direct agent subsequent writes direct via agent respectively logger level throwable message case force agent true direct false clojurelanglockingtransactionisrunning txagentlevels level sendoff loggingagent fn implwrite logger level throwable message implwrite logger level throwable message nil declare dynamic loggerfactory defmacro log evaluates log message specified level enabled see log detail loggerfactory loggerns level throwable message let logger implgetlogger loggerfactory loggerns implenabled logger level log logger level throwable message expression little using value draw global state configuration value may still simple simple function accepts configuration structure directly parameter complexity becomes evident testing test simple function merely requires calling simple function appropriate configuration value testing globally configured function requires manipulating state entire application shared mutable configuration state conforms test requirement see log macro actually quite complex becuase reach significant amount global state despite fact log macro nt actually much log macro check global mutable registry namespaces logger implementation logger check whether logger enabled logging potentially manufacturing new logger using factory global state defn mongo creates mongo object set default database support replica set deprecated future release please use makeconnection combination withmongo setconnection instead keyword argument include host default localhost port default db default nil set anyway might well arglists db host localhost port key db host port db nil host localhost port setconnection makeconnection db host host port port true function change state may complex compared function produce effect return value introduces far whole program complexity global state modified especially modified many time support intuition perhaps sorting list received argument place nt add much whole program complexity effect restricted scope caller wherever list modified sourced whereas reading manipulating errno global value c program may directly impact number program behavior modification defeat referential transparency force u use sequential logic level whole program achieve understanding use multiplication rather addition reflect really trying approximate volume multidimensional state space measured product length side sum apology dijkstra note quite possible program complexity metric alone grow least proportion square program length however also still plenty room bottom simple program achieve nearlinear complexity growth
406,Lobsters,education,Education,Optimise Sprint-Planning and Project-Scheduling using CD3,http://thecodeartist.blogspot.com/2017/07/optimise-project-scheduling-using-cost-of-delay-divided-by-duration.html,optimise sprintplanning projectscheduling using,c,measure value optimise project scheduling using cost delay divided duration aka wsjf weighted shortest job first releaseplanning sprintplanning taskscheduling require metric prioritise mutiple activity simple strategy like higherbusinessvaluestasksfirst guarantee optimal schedule teamorganisation cost delay divided duration ie metric easy understand simple calculate enables effective strategy
407,Lobsters,education,Education,Why Are Coding Bootcamps Going Out of Business?,http://hackeducation.com/2017/07/22/bootcamp-bust,coding bootcamps going business,industry observer suggested might see consolidation almost across u canada pay skill gap codeorg industry group suggested invention reality projection really much evidence skill gap bloomberg published warning prospective student course report claim among graduate surveyed borrowing term sociologist tressie mcmillan cottom new forprofit higher ed according one study national bureau economic research according latest survey educational quality innovative partnership equip initiative learntocode startup generally criticism admitted,read within past week two wellknown wellestablished coding bootcamps announced closing door dev bootcamp owned kaplan inc iron yard owned apollo education group parent company university phoenix two closure might make yet industry observer suggested might see consolidation coming month appears simply coding bootcamps almost across u canada student looking learn code say coding bootcamps people looking pay average week intensive training programming language framework run counter course pervasive belief skill gap enough qualified programmer fill programming job folk looking work jump chance pay tuition bootcamp codeorg industry group suggested currently unfilled computing job example number invention reality statistic used particular narrative failure school offer adequate technical training figure incidentally come bureau labor statistic projection number computing job added u economy number job available filled unfilled today perhaps instead everyone learn code push everyone learn read bls job report really much evidence skill gap substantive growth wage example one would expect shortage supply qualified worker talk job added overall economy coming year important remember job market national local haskell programmer silicon valley might earn year example haskell programmer de moines probably hell might haskell job iowa part dev bootcamp coding bootcamps austin chicago new york san francisco seattle iron yard coding bootcamps atlanta austin charleston dallas durham greenville houston indianapolis la vega nashville orlando raleigh tampa bay washington dc iron yard location detroit already closed door location bootcamps boasted working high profile local employer question remains local employer really want need bootcamp grad rather least two question sufficient number tech job city make bootcamp tuition time spent worthwhile training bootcamp sufficient get hired december last year bloomberg published warning prospective student want job silicon valley keep away coding school article contended many company found coding bootcamp grad unprepared technical work tech bootcamps freaking joke one tech recruiter told publication client looking solid c degree reputable university relevant work experience google director education echoed sentiment experience found graduate program quite prepared software engineering role google without additional training previous programming role industry course regional school bootcamps really training employee work bay area although think part marketing get certificate land job famous tech company despite poor reputation bootcamps might among tech firm course report review site bootcamps tout school successful job placement rate course report claim among graduate surveyed found fulltime employment using skill learned seen average salary increase doubt worth pointing little independent research validate sort claim much research industrysponsored much data selfreported also worth noting surveyed course report already bachelor degree arguably make bootcamp certification addition college degree substitute one complicates discussion credentialing hiring someone land programming job college degree coding bootcamp certificate might gender race play might school play mean coding bootcamps general specific bootcamp brand brand like dev bootcamp iron yard obviously taken hit legitimacy closing student feel turn borrowing term sociologist tressie mcmillan cottom arguably school also associated mcmillan cottom call lower ed first place become subsidiary forprofit college kaplan university phoenix respectively coding bootcamps new forprofit higher ed association matter bootcamp student importantly association matter employer much research forprofit higher ed news lot last couple year news good story high rate student loan debt charge fraudulent marketing closure chain like corinthian college itt technical college boot according one study national bureau economic research average student forprofit college actually worse attending student le likely employed job likely earn le course average student forprofit college average student coding bootcamp mcmillan cottom document book lower ed typical forprofit college student woman parent forprofit college dominate producing black bachelor degree holder according latest survey survey course report bootcamp student male white paid bootcamp tuition took loan enrolled forprofit college comparison take loan much latter federal loan money bootcamps hand eligible federal financial aid obama administration launch pilot program educational quality innovative partnership equip initiative evaluate possibility nontraditional provider like bootcamps becoming aideligible word trump administration continued expanded among bootcamps participating flatiron school partnership suny empire state college makersquare partnership university texas austin hackerrank partnership wilmington university epicodus partnership marylhurst university perhaps bootcamps investor hoping federal financial aid would subsidize operation like done rest forprofit higher ed money materialized nevertheless coding bootcamps learntocode startup generally remain one active area edtech investment million venture capital funneled coding bootcamps far unlike recent past yet big acquisition industry year capella education another forprofit college chain acquired bootcamps hackbright academy dev mountain fellow forprofit strayer education acquired new york code design academy bootcamp buy general assembly acquired bitmaker bloc acquired devbridge full stack academy acquired starter league criticism bootcamp founder sold company forprofits subsequently checked allowing quality offering suffer likely happens company raise venture capital bigger company buy crush dev bootcamp announced closing company admitted unable find sustainable model nt compromise vision highquality immersive coding training broadly accessible diverse population indeed despite tech industry disdain education system particularly politics unionized labor force highquality immersive coding training going expensive laborintensive proposition part forprofit higher education industry known invest heavily instruction faculty curriculum dollar primarily federal financial aid dollar gone instead marketing recruitment may business teaching everyone code code well without federal money good business particularly sort scale forprofit higher ed chain career college coding bootcamps alike investor sought
408,Lobsters,education,Education,The future of education is plain text,https://simplystatistics.org/2017/06/13/the-future-of-education-is-plain-text/,future education plain text,envisioning data science curriculum rmarkdown csv file lorena barba data analysis plain text always compatible plain text easy mix match plain text easy maintain data science lab plain text lightweight plain text always forward compatible plain text file plain text file alone comment powered disqus comment powered,recently national academy meeting envisioning data science curriculum fun meeting one question came kind infrastructure need enable shared curriculum compatibility across school reinventing wheel answer question need lecture note stored plain text file like rmarkdown file data stored csv file direct link nearly first person make argument lorena barba explained mooc use video almost two year ago recently blog post pointed advantage plain text code file data analysis sure know think future education plain text document data science future data storage simple csvs complicated data set plain text always compatible every single operating system plain text editor compatible encoding text mean develop lecture note mac develop pc still easily share worrying right software plain text easy mix match lecture material simple plain text format like markdown copy paste material one lecture another document compiled make formattingcolorsetc match looking hodgepodge borrowed slide one ppt format another plain text easy maintain mostly work scalable education jhu data science lab often think scalable education term number student also run problem scaling number coursesinstructor currently lead instructor half dozen class running time every time rerecord video take set time recording time editing time error markdown file quick edit text file plain text lightweight image stored online lecture note small might matter internet access good place limited resource wifi difference easily accessible lecture note bad one plain text always forward compatible regardless next platform knowledgelecture note stored plain text easy extact switch platform compiling software style worry file working appropriately believe much working way make course video generatable plain text file recently trying figure way make puppet move plain text file alone people looking infrastructure fund place make easier edithostshare plain text plain csv file please enable javascript view comment powered disqus comment powered
409,Lobsters,education,Education,So You Want to be a Functional Programmer (Part 1),https://medium.com/@cscalfani/so-you-want-to-be-a-functional-programmer-part-1-1f15e387e536,want functional programmer part,want functional programmer part learning drive first spaceship forget everything know purity useful useful always immutability programmer need limit creature crunch brain part http wwwfacebookcomgroupslearnelm cscalfani,want functional programmer part taking first step understanding functional programming concept important sometimes difficult step right perspectivelearning drivewhen first learned drive struggled sure looked easy saw people turned harder thoughtwe practiced parent car really venture highway mastered street neighborhoodbut repeated practice panicky moment parent would like forget learned drive finally got licensewith license hand take car chance could trip got better better confidence went came day drive someone else car car finally gave ghost buy new onewhat like first time behind wheel different car like first time behind wheel even close first time foreign car passenger time driver seat one controlsbut drove second car simply asked simple question like key go light use turn signal adjust side mirrorsafter pretty smooth sailing time easy compared first time new car pretty much like old car basic thing car need pretty much placea thing implemented differently maybe additional feature use first time drove even second eventually learned new feature least one cared aboutwell learning programming language sort like first hardest one belt subsequent one easierwhen first start second language ask question like create module search array parameter substring function confident learn drive new language reminds old language maybe new thing hopefully make life easieryour first spaceshipwhether driving one car whole life dozen car imagine get behind wheel spaceshipif going fly spaceship expect driving ability road help much starting square zero programmer count starting zero would begin training expectation thing different space flying contraption different driving groundphysics changed way navigate within universeand learning functional programming expect thing different much know programming translateprogramming thinking functional programming teach think differently much probably never go back old way thinkingforget everything knowpeople love saying phrase sort true learning functional programming like starting scratch completely effectively lot similar concept best expect relearn everythingwith right perspective right expectation right expectation quit thing get hardthere kind thing used programmer functional programmingjust like car used backup get driveway spaceship reverse may think reverse hell supposed drive without reverse well turn need reverse spaceship ability maneuver three dimensional space understand never miss reverse fact someday think back limiting car really waslearning functional programming take patientso let exit cold world imperative programming take gentle dip hot spring functional programmingwhat follows multipart article functional programming concept help dive first functional language already taken plunge help round understandingplease rush take time reading point forward take time understand coding example may even want stop reading section let idea sink return later finishthe important thing understandpuritywhen functional programmer talk purity referring pure functionspure function simple function operate input parametershere example javascript pure function var z function add x return x notice add function touch z variable read z write z read x input return result adding togetherthat pure function add function access z would longer purehere another function consider function justten return function justten pure return constant given input since pure access anything input thing return constantsince pure function take parameter work useful would better justten defined constantmost useful pure function must take least one parameterconsider function function addnoreturn x var z x notice function return anything add x put variable z return itit pure function since deal input add since return result uselessall useful pure function must return somethinglet consider first add function function add x return x consolelog add print add still print add always print add always huge surprise function pure add function used outside value could never predict behaviorpure function always produce output given inputssince pure function change external variable following function impure writefile filename updatedatabasetable sqlcmd sendajaxrequest ajaxrequest opensocket ipaddress function called side effect call change file database table send data server call o get socket operate input return output therefore never predict function returnpure function side effectsin imperative programming language javascript java c side effect everywhere make debugging difficult variable changed anywhere program bug variable changed wrong value wrong time look everywhere goodat point probably thinking hell anything pure function functional programming write pure functionsfunctional language eliminate side effect confine since program interface real world part every program must impure goal minimize amount impure code segregate rest programimmutabilitydo remember first saw following bit code var x x x whoever teaching told forget learned math class math x never equal x imperative programming mean take current value x add put result back xwell functional programming x x illegal remember forgot sort ofthere variable functional programmingstored value still called variable history constant ie x take value value lifedon worry x usually local variable life usually short alive never changehere example constant variable elm pure functional programming language web development addonetosum z let x x zif familiar mlstyle syntax let explain addonetosum function take parameter zinside let block x bound value ie equal rest life life function exit accurately let block evaluatedinside block calculation include value defined let block viz x result calculation x z returned accurately z returned since x hear ask hell supposed anything without variable let think want modify variable general case come mind multivalued change eg changing single value object record singlevalued change eg loop counter functional programming deal change value record making copy record value changed efficiently without copy part record using data structure make possiblefunctional programming solves singlevalued change exactly way making copy itoh yes loop variable loop hate hold like loop pun intended specific loop construct like repeat etcfunctional programming us recursion loopinghere two way loop javascript simple loop constructvar acc var acc consolelog acc print without loop construct variable recursion function sumrange start end acc start end return acc return sumrange start end acc start consolelog sumrange print recursion functional approach accomplishes loop calling new start start new accumulator acc start modify old value instead us new value calculated oldunfortunately hard see javascript even spend little time studying two reason one syntax javascript noisy two probably used thinking recursivelyin elm easier read therefore understand sumrange start end acc start end acc else sumrange start end acc start run sumrange sumrange sumrange sumrange sumrange sumrange sumrange sumrange sumrange sumrange sumrange sumrange sumrange sumrange sumrange sumrange sumrange sumrange sumrange sumrange sumrange probably thinking loop easier understand debatable likely issue familiarity nonrecursive loop require mutability badi entirely explained benefit immutability check global mutable state section programmer need limit learn moreone obvious benefit access value program read access mean one else change value even accidental mutationsalso program multithreaded thread pull rug value constant another thread want change create new value old oneback mid wrote game engine creature crunch biggest source bug multithreading issue wish knew immutability back back worried difference speed cdrom drive game performanceimmutability creates simpler safer codemy brain enough nowin subsequent part article talk higherorder function functional composition currying moreup next part liked click people see mediumif want join community web developer learning helping develop web apps using functional programming elm please check facebook group learn elm programming http wwwfacebookcomgroupslearnelmmy twitter cscalfani
410,Lobsters,education,Education,"Coaching Guidelines, Tips, and Tricks",https://coach.djangogirls.org/tips/,coaching guideline tip trick,coaching guideline tip trick handson coaching v teaching flexible accessible word jargon nt say easy feigning surprise wellactually subtleisms hacker school user manual related comic strip learn mistake understand learn coding fun get people excited atmosphere removing roadblock fear used work window impostor syndrome impostor syndrome particularly common among woman answering question positively backseat driving must show teach make google stuff ask idea encourage make change follow tutorial precisely,coaching guideline tip trick much possible want coach follow guideline handson coaching v teaching workshop work small group learner handson experienceoriented workshop stand sideline front coach need focused learner always needed make sure experience positive fun judge helpful appreciate ability flexible accessible attendee hard hearing would otherwise benefit form communication talking prepared use textbased form communication give google hangout skype name encourage im need help remember bring laptop check ims attendee low vision might want increase size text command line text editor web page probably know enlarge text web browser might need help resizing text place nt assume anything someone vision try start day statement need help making text size bigger smaller start coding let know sometimes attendee get overwhelmed break built schedule feel like attendee getting frustrated would benefit break let know okay step away minute take sip water come back sometimes moving body help new concept crystallize word time need super careful word use jargon hard possible nt use word technical terminology kid would nt understand nt say easy learner may hardest thing ever done telling easy cool saying suggests simple failing find hard understand feigning surprise nt act surprised people say nt know something knowing something technical totally acceptable django girl prepared even question like directory create file wellactually wellactually happens someone say something almost entirely correct say well give minor correction especially annoying correction bearing actual conversation subtleisms subtleisms small thing make others feel uncomfortable thing sometimes mistake example saying easy grandmother could subtleism like three social rule one often accidentally broken like three big deal mess apologize move two section come hacker school user manual highly recommended resource teaching related comic strip learn mistake already mentioned want attendee really understand copypasting code actually learning something chose learn mistake approach course tutorial see trying first steer attendee error bug mistake make attendee read bug report understand importantly trying teach bug nt scary error page friend approach go long way later learn coding fun ultimate goal workshop build website teach whole django also teach programming ultimate goal show code fun get people excited show programming scary everyone show powerful programming skill excitement passion drive spend endless hour trying figure workshop atmosphere excitement good stress bad learning really care atmosphere giving attendee great first experience coding imagine trying something difficult room full stranger know better nt know articulate question nt know right name everything people uncomfortable stressful situation nt make easier smile make eye contact admit nt know everything tell ok make lot mistake tell ok get frustrated use normal language jargon assume everyone coaching zero knowledge infinite intelligence go pace pace friendly kind use name make sure know awesome ask need help people afraid ask emphasize thing dumb question nt say question say question talk sssssslllllloooooowwwwwwllllllyyyyyyyy wait much longer feel comfortable questionscomments removing roadblock fear big obstacle try remove fear situation especially school work people afraid looking stupid fear frequently keep u asking important question like work even fear making mistake also keep people making progress used work window group using window mac linux user nt worry fine python installation got easier window coach help case problem impostor syndrome madeline kunin research woman selffilter men impostor syndrome psychological phenomenon people unable internalize accomplishment despite external evidence competence remain convinced fraud deserve success achieved impostor syndrome particularly common among woman fight impostor syndrome nt accept learner saying whatever assure congratulate people achievement take time let show done compliment work show actually know thing answering question roll eye laugh question debate programming language method technology better always answer positively glad said great question hm sure let look internetask someone else backseat driving imagine keyboard made lava lava would nt touch right whenever take keyboard learner going drift away offputting even scary sure explain need done instruct word actually cool exercise absolutely ultimately must type something computer chance nt ask whether okay explain ask mind type may show teach attendee spend hour spend many many many hour teaching fortunately make easier make google stuff give immediate answer make thing go faster nt matter going faster slower matter whether going fall love ask idea would solve think make figure know know right encourage make change follow tutorial precisely try add twist nt follow tutorial every step learn much much easy copypaste code put correct location harder add something make work depending organizer decision number volunteer workshop meta coach assigned group addition available since nt group often experience debugging technical problem feel free ask help attendee get stuck note name meta coach implies primary role coach coach mean coaching rule tip trick manual apply meta coach available help take always acknowledge communicate coach helping member group ideally working problem together approach ensures coach remain empowered addition learner getting help need coach become better coach perfect recipe meta coach introduce coach onebyone preevent one beginning workshop everyone still arriving make sure know turn question also good time ask whether technical issue installation problem appear minor installation cause major issue later might mean repeat large part tutorial fix potentially reinstalling python virtualenv django etc minor problem stay minor many case small deviation tutorial installation step fine meta coach expect idle time workshop ie might get bored certain point good thing since mean everything working ok also available answer question come instead participant coach interrupt helping someone experience question issue come installation beginning workshop deployment chapter expect slower period many question get going technical issue bug version incompatibility etc sometimes good opportunity explain technical detail often going pesky detail stand way proceeding rest tutorial judge participant stance question able provide effective support want learn figure problem want wave magic wand move although aim workshop finish tutorial dealing technical problem good learning experience sometimes wave magic wand alternative right choice since dealing technical issue become frustrating however make sure participant make choice also mean often quick workaround might better idea idealised proper fix might take much time use best judgment decide whether quick fix solve problem including whether cause issue later step tutorial whether try complete one note since participant using laptop system setting installed software might cause issue following tutorial also note software installed configuration change made tutorial might also affect task use laptop workshop much possible avoid change might break software installed laptop careful changing system setting participant feel workshop broke laptop would quite catastrophic often asked confirmation version work break something depending technical aspect might good point warn example using python instead reassure example python instead python handling question like make sure acknowledge issue raised valid possible explain consider risk breakage high low many participant issue proactively warn coach group example occasionally version change affect behaviour tutorial assumes mean issue might isolated single participant laptop
411,Lobsters,education,Education,Lessons learned from being a mentor,https://krzysztofzuraw.com/blog/2017/lessons-learned-from-being-a-mentor.html,lesson learned mentor,last week mentor two day python workshop main goal event show people prior experience programming coding fun text note took conducting workshop split learning material use simple example tell group ask question use fast easy setup environment jupyter notebook anaconda okay frustrated help backseat driving django girl coaching tutorial summary,last week mentor two day python workshop main goal event show people prior experience programming coding fun text note took conducting workshop split learning material mentor decided split work u took part basic python type data structure decided split smaller piece like variable ints float string list dicts subsection task want huge pile information exercise workshop make sleepy found split material even introduce concept let people try example presented list basic syntax jump taking data list improved split first basic syntax one two task find comfortable move indexing take time better leave something letting people know basic use simple example person code time example trivial front sits people experience programming throw lot concept time confused instance function variable presented mentees simple function result equal variable tell write body function started started asking question function return variable something totally different explaining better use simple example tell group ask question culture feeling ask stupid question everybody laughing bypass decided tell people ask every question want ask time learn help lot people naturally afraid looking stupid reminding thing stupid question allows learn use fast easy setup environment everyone workshop us window sometimes hustle teach python command line avoid used jupyter notebook easy setup fast install one window decided use anaconda already jupyter installed installation complaint dev environment awesome okay frustrated sometimes thought prepare everything try power still understand acknowledge feeling told problem understanding process explaining sit every person problem started explaining one time without feeling frustrated help backseat driving something learned django girl coaching tutorial problem told person found touching keyboard fix problem lose interest helping important best people learn mistake observing fix mistake summary lesson took mentor lesson find interesting please write comment
412,Lobsters,education,Education,Quick Insight: Subtracting Negative Numbers,https://betterexplained.com/articles/subtracting-negative-numbers/,quick insight subtracting negative number,appendix join monthly reader post series technique adding number rethinking arithmetic visual guide quick insight intuitive meaning division quick insight subtracting negative number surprising pattern square number fun modular arithmetic learning count avoiding fencepost problem quirky introduction number system another look prime number intuition golden ratio different interpretation number zero,math teacher recently asked explain concept subtracting negative number class long internalized negative opposite subtraction opposite addition head notion opposite opposite addition simplifies addition inner verbalization still pretty abstract thinking better intuition reply great question think bit addition subtraction related slightly different positive negative number imagine going walk facing forward take step forward really starting point mean facing forward mean step direction facing ok let say want keep facing forward take step give u step starting point faced backwards took step mean pretty close starting point step away faced backwards walked backwards step ah additionsubtraction tell u way face positivenegative tell u step forward backward regardless way facing sense additionsubtraction act verb face forward face backward positivenegative act adjective regular step backwards step maybe adverb modifying walk walk forwardly walk backwardly get idea older student subtracting negative seen cancelling debt debt someone subtracts effectively gained general remove disadvantage improved situation positive explanation bit abstract walking one fun try directly actually walked around thinking intuition adventurous might start thinking taking side step jumping would represented happy math appendix simple arithmetic track final location orientation facing backwards walking backwards might u looking advance forward mathematically endpoint care way facing need complex math object vector keep track orientation well position facing forward v facing backward perhaps use line integral moving along path tracking direction face go fitting analogy lead question else possible join monthly reader enjoy article plenty help build lasting intuitive understanding math join newsletter bonus content latest update post series technique adding number rethinking arithmetic visual guide quick insight intuitive meaning division quick insight subtracting negative number surprising pattern square number fun modular arithmetic learning count avoiding fencepost problem quirky introduction number system another look prime number intuition golden ratio different interpretation number zero
413,Lobsters,education,Education,The Lost Art of Square Roots,https://medium.com/i-math/how-to-find-square-roots-by-hand-f3f7cadf94bb,lost art square root,lost art square root solve square root hand getting started solving problem step check digit step make area diagram step split ten one b b step solve step find remaining area,lost art square rootsyou probably never done fact long time never even crossed mind clue toit pure calculator magic calculator know answer know well story endedgood enough yeah much solving already solved problemit finding beauty mundane understanding something seeing every ounce mathematics fought discovered sifted greater logical systemready take quick trip lost art solving square root solve square root handi could show great estimation technique going toalthough estimation wonderful practical tool show lost art even better going take antiquated algorithm blow dust give picturesbecause seeing believing importantly seeing rememberingso waiting let go getting startedour algorithm requires u work two digit time therefore must begin even quantity digitsif odd number digit need adjust firstif odd number digit decimal place add zero front number like odd number digit decimal place add zero end like solving problemalright let find square root check six digit total good go step make area diagramdraw rectangle represent area square inside rectanglestep split ten oneswe know square side equal length instead writing variable represent length divide unknown length ten part one partlet represent ten b represent one unknown side length b go ahead subdivide square fill area new section multiplying together respective side lengthsthe area entire tan square sum part step solve know area square le thanequal whole rectangledivide ignore everything first two digitsthe answer largest whole number fit equation notedividing happens work nicely case general simply set first digit number greater thanequal closest get first digit answer subtract bring next digitslet fill diagram accounted square unit remaining area must le difference square unitsstep find remaining areawe three remaining section involve b know exceed square unitsadd together remaining section set le thanequal value found step two b area total bnow think single digit number get u close little trial find get close
414,Lobsters,education,Education,Wikipedia: The Text Adventure,http://kevan.org/wikitext/,wikipedia text adventure,wikipedia text adventure got,wikipedia text adventure sorry game need javascript run browser appear support javascript name place start exploring choose one big bananachrist redeemer statue pripyatthe shardcambridge massachusettsthimphucentral government war headquartersgoogleplexthe sunken cityversailles new current location interactive fictionnonfictionstandard level playing mobile click location name move around without typing got
415,Lobsters,education,Education,What I Learned From Researching Coding Bootcamps,https://medium.com/bits-and-behavior/what-i-learned-from-researching-coding-bootcamps-f594c15bd9e0,learned researching coding bootcamps,time take get software industry challenge bootcamp intensity fitting bootcamps software industry impostor syndrome cost risk reward bootcamps suggestion people considering bootcamp year support cautious http cirrorg suggestion people running coding bootcamps programming background outside resource clear calculating success rate advertised bootcamp suggestion software industry especially wanting increase diversity information acm international computing education research conference barrier faced coding bootcamp student http wwwkylethayercom coding bootcamps v computer science degree employer want perspective,note tried interview people type experience say common type experience however several student question official success rate posted bootcampsalso noticed least four student happened married programmer least seven others parent sibling important people social circle programmersthe time take get software industryeven though bootcamps could short three month full career change software industry could take year surprised student time could financially costly student well ninemonths pretty much devoted time bootcamp prescribed job hunting method mean financially money work really needed job searching full time big sacrifice made reflects family low fund male intervieweethe challenge bootcamp intensitythe common description experience coding bootcamps intensity particular speed material time needed keep kitchen disaster whole house mess anything directly related bootcamp keeping functioning go wayside remember last time shower female intervieweedealing intensity required student confidence commitment determinationfitting bootcamps software industryin addition challenge succeeding bootcamps getting hired afterword challenge fitting bootcamps software industry several type fitting student mentioned knowledge expected software developer eg program terminology stereotype subculture eg programmer gamers programmer nerdy demographic eg gender race programming background eg taken programming class starting bootcamp v never programmed trying make real programmer recognized others many student mentioned struggling impostor syndromecosts risk reward bootcampsthe cost attending bootcamps changing career significant student including time away friend family bootcamp tuition often lost income searching job could put student difficult position extremely honest choosing path come closest homeless ever female intervieweethese cost particularly devastating student unable find job student succeeded making transition software industry cost worth would say going bootcamp probably best decision ever made going knowing anything coding six month earlier today pretty love bootcamp path diagramsuggestions people considering bootcampprepare career change take year moreconsider support rely bootcamplearn online resource available class starting bootcampbe cautious looking official bootcamp success rate talk former current student bootcamps look number reported http cirrorg ask bootcamps type job counted success background successful student etcsuggestions people running coding bootcampsknow programming background student outside resource usinginform student extra time resource may need succeed sign bootcampbe clear calculating success rate advertised bootcamp student unclear exactly success rate meant thought statistic used deceptivelysuggestions software industry especially wanting increase diversity informationthe research paper wrote peer reviewed accepted acm international computing education research conference presenting result august tacoma washingtonkyle thayer amy j ko barrier faced coding bootcamp student proceeding icer august tacoma wa usayou contact kthayer cswashingtonedu visit website http post coding bootcamps v computer science degree employer want perspective
416,Lobsters,education,Education,A New Demo Compiler For My Course,http://www.cs.uni.edu/~wallingf/blog/archives/monthly/2017-06.html#e2017-06-29T16_03_06.htm,new demo compiler course,crafting compiler fastest fizzbuzz west fizzbuzz,last couple week spent minute afternoon writing little code best part work day project little compiler one first thing compiler course study small compiler couple day nice way introduce stage compiler raise question answering course semester also give student chance see inside working compiler write hope demystifies process little hey compiler really program maybe write one last decade used compiler called acdc demo based chapter crafting compiler fischer cytron leblanc ac small arithmetic language two type number sequence assignment statement print statement dc stackbased desk calculator come part many unix installation whipped acdc compiler java decade ago used ever since language enough feature useful demo enough overwhelm hackedup compiler also open improvement learn technique throughout course giving u chance use small student applied project growing dissatisfied demo java program feel heavy many small piece simple enough quick read requires two full class session really understand well hoping shorten intro course ac good nt flow control sequencing mean give u way look assembly language generation jump backpatching top bored acdc ten year long time spend one program spring stumbled possible replacement fastest fizzbuzz west defines simple source language writing fizzbuzz program declaratively example produce output much larger program language imagine able pull language next interview software dev position language really simple mean compiler written relatively line code however also requires generating code loop ifstatements requires thinking branching pattern assembly language fastest fizzbuzz article us python parser generator create compiler course want something student read knowledge coming course want program transparent enough see directly stage work interacts part compiler also itching write program wrote compiler python performs simple scan source program taking much advantage small set simple token possible parser work recursive descent also take advantage language simple structure type checker make sure number make sense word unique finally make thing even simpler code generator produce executable python program quite hopeful compiler use class demo simple enough read one sitting even student enter course weaker programming skill even language also used demonstrate sophisticated technique learn throughout course consider adding comment source language overwhelms ad hoc approach use scanner motivating use state machine parser easily handled recursive descent language quite amenable simple tabledriven approach tabledriven parser simple enough student get hang technique unnecessary detail type checker demonstrates walking abstract syntax tree without worrying many type rule focus attention type system dealing interesting source language project code generator deal flow control enables u learn assembly language generation smaller scale without fully implementing code handle function call compiler demo first week course also serve running example throughout see well play class couple month case great fun ending day last two week firing emacs idle writing code bonus used exercise improve git skill taking beyond small set command used academic project past git rebase almost friend also wrote pyunit test written long long time reminded challenge student face trying test code serve well fall like writing code
417,Lobsters,education,Education,Improve Your Hex Life With This One Weird Trick,https://medium.com/@quackingduck/improve-your-hex-life-with-this-one-weird-trick-afed36055e8c,improve hex life one weird trick,improve hex life one weird trick explainshellcom wach,improve hex life one weird trickone best way learn network protocol deeply analyze raw network packet hex dump people shame lot said going straight raw data comparing mental model trying build upwhen trying understand something always help brain generating question like done way tradeoff designer considering software using analyze data binary helpful brain switch powersaving mode default state great daydreaming bad learningfor example given tool like wireshark click byte sequence ui say header length byte word brain go ah see header length byte word thank oh wise shark wire say next byte type service say wonderful one click click click study easy lunch sushi anyone wireshark like given library asked booksome best learning come guided struggle much struggle frustrating little knowledge stick networking class compromise select packet wireshark right click click copy hex paste text editorafter much referencing various diagram specification usually end detailed analysis look something like cat annotatedhexdumptxt link layer envelope ethernet destination addr router wifi df source addr local wifi typeprotocol ip network layer envelope ip first byte two bit number version number length header byte word type service first bit differentiated service code point last bit explicit congestion notification total length fragment field first bit unused second fragment third fragment follow last fragment number offset time live protocol ee header source addr fc destination addr transport layer envelope tcp source port destination port ab sequence number acknowledgement number first bit size header byte word next bit unused next bit flag second last set second last bit syn flagff ff receive window size urgent pointer unused practice additional tcp option set maximum segment size noop option alignment option set window scale factor noop option alignment bd option local timestamp remote timestamp option enable selective two byte zero padding alignment different class got thinking easiest way reverse ie given text file hexencoded byte value bunch comment program generate original byte stream nothing came mind difficult program write cat tobytestream binbash remove commentssed e remove whitespacetr n convert ascii hex char bytestreamxxd r plet pas output bytestream hexdump make sure work annotatedhexdumptxt tobytestream df ee fc ab ff ff bd nice thing program roundtrip analysis confirm accidentally remove duplicate byte sequence moving thing around adding commentswe need compare two bytestreams annotatedhexdumptxt tobytestream cmp p originalbytestream shell syntax scratching head try excellent explainshellcom combine roundtrip check command filewatching tool like wach tight feedback loop hand analysis binary data confirming accidentally making comment byte sequence even exist original source data wach annotatedhexdumptxt tobytestream cmp p originalbytestream clear echo good date kind analysis enough binary format perception tool like wireshark shift intimidating oracle mystery status approachable instrument insight level
418,Lobsters,education,Education,Explain like I’m 5: Kerberos,http://www.roguelynn.com/words/explain-like-im-5-kerberos/,explain like kerberos,nutshell ticket greek mythology hades wikipedia kerberos realm kgb keep back mind never hash algorithm recall configuration implementation authentication server email protected ticket granting server http service spnegonegotiate point one paid work popular implementation tutorial resource guide video rfc font awesome glyphicons slideshare update may post,explain like year old kerberos kerberos care topic probably explained yearold understood attempt defragmenting documentation visual aid digestible language nutshell basically kerberos come protocol authentication us ticket authenticate avoids storing password locally sending internet involves trusted built symmetrickey cryptography ticket proof identity encrypted secret key particular service requested local machine creation ticket described long valid access requested service within kerberos realm typically used within corporateinternal environment perhaps want access internal payroll site review little bonus bos given rather reentering userpassword credential ticket cached system used authenticate allowing single signon ticket refreshed sign computer kinit user within terminal trivialoving folk name come greek mythology threeheaded guard dog hades pretty fitting since take thirdparty key distribution center authenticate client service host machine wikipedia kerberos realm admins create realm kerberos realm encompass available access granted may access certain service host machine defined within policy management developer access anything finance related stuff like realm defines kerberos manages term access machine client life within realm well service host want request key distribution center kdc kgb although always think following example separate authentication server ticket granting server within kdc keep back mind may want come back read gritty detail example work requesting access service host three interaction take place authentication server ticket granting server service host machine wanting access important point interaction receive two message message one decrypt one service machine requesting access never communicates directly kdc kdc store secret key user machine service database secret key password plus salt hashed hash algorithm chosen implementation kerberos setup service host machine password would enter key actually generated admin initial setup memorized servicehost machine secret key stored kdc database recall reliance symmetrickey cryptography kdc encrypted master key add layer difficulty stealing key database kerberos configuration implementation use publickey cryptography instead symmetrical key encryption aside order message content discussed reflect order sent tcp udp example describes happens request something internal http service like information regarding payroll within corporate intranet authentication server want access http service first must introduce authentication server logging computer kinit username initiate introduction via plaintext request ticket granting ticket tgt plaintext message contains nameid nameid requested service case service ticket granting server network address may list ip address multiple machine may null wanting use machine requested lifetime validity tgt sent authentication server authentication server check kdc database check see exist credential checked error eg user found randomly generate key called session key use ticket granting server tgs authentication server send two message back one message tgt contains nameid tgs nameid timestamp network address may list ip address multiple machine may null wanting use machine lifetime tgt could initially requested lower secret key expire another limit implemented kerberos setup tgs session key encrypted tgs secret key message contains tgs nameid timestamp lifetime tgs session key encrypted client secret key note tgs session key shared key tgs client secret key determined prompting password appending salt made email protected hashing whole thing use decrypting second message order obtain tgs session key password incorrect able decrypt message please note step password enter implicitly validated however decrypt tgt since know tgs secret key encrypted tgt stored within credential cache ticket granting server point tgt read tgs secret key decrypt however tgs session key turn send two message first prepare authenticator encrypted tgs session key containing nameid timestamp send unencrypted message contains requested http service nameid want access lifetime ticket http service along encrypted authenticator tgt ticket granting server ticket granting server first check kdc database see http service exists tgs decrypts tgt secret key since nowunencrypted tgt contains tgs session key tgs decrypt authenticator sent tgs following compare client id authenticator tgt compare timestamp authenticator tgt typical kerberossystem tolerance difference minute configured otherwise check see tgt expired lifetime element check authenticator already cache avoiding replay attack network address original request null compare ip address network address within requested list within tgt ticket granting server randomly generates http service session key prepares http service ticket contains nameid http service nameid network address may list ip address multiple machine may null wanting use machine timestamp lifetime validity ticket http service session key encrypts http service secret key tgs sends two message one encrypted http service ticket contains http service nameid timestamp lifetime validity ticket http service session key encrypted tgs session key machine decrypts latter message tgs session key cached earlier obtain http service session key machine however decrypt http service ticket since encrypted http service secret key http service access http service machine prepares another authenticator message contains encrypted http service session key machine sends authenticator stillencrypted http service ticket received tgs http service decrypts ticket secret key obtain http service session key us session key decrypt authenticator message sent similar tgs http server following compare client id authenticator ticket compare timestamp authenticator ticket typical kerberossystem tolerance difference minute configured otherwise check see ticket expired lifetime element check authenticator already http cache avoiding replay attack network address original request null compare ip address network address within requested list within ticket http service sends authenticator message containing id timestamp order confirm identity encrypted http service session key machine read authenticator message decrypting cached http service session key know receive message http id timestamp authenticated use http service future request use cached http service ticket long expired defined within lifetime attribute write later http service must able support kerberos well must also browser support spnegonegotiate perhaps reread point previously outlined check current implementation especially one paid work communicates popular implementation review tutorial resource guide goto video sent started learning kerberos rfc image rendered keynote icon used font awesome glyphicons available slideshare future post write actually setup kerberos realm setting http service accept negotiate authentication writing web application plug kerberos authentication update may post setting web application apache kerberos along creating kerberos test environment
419,Lobsters,education,Education,Learning Gotcha: How We Misunderstood Schrödinger’s Cat,https://betterexplained.com/articles/gotcha-shrodingers-cat/,learning gotcha misunderstood schrödinger cat,quite ridiculous case prevents u naively accepting valid blurred model representing reality bell theorem interpretation however refuted elegantly nobody really doubt presence absence cat something independent act observation reference join monthly reader,know schrödinger cat probably something like cat box radioactive source poison released source unpredictably emits radiation according quantum mechanic cat simultaneously dead alive box opened cat observed story seems quantum mechanic weird cat alive dead look except miss point schrödinger wrote one even set quite ridiculous case cat penned steel chamber along following device must secured direct interference cat typical case indeterminacy originally restricted atomic domain becomes transformed macroscopic indeterminacy resolved direct observation prevents u naively accepting valid blurred model representing reality would embody anything unclear contradictory difference shaky outoffocus photograph snapshot cloud fog bank argument quantum mechanic claim subatomic particle blurred indeterminate state case create scenario subatomic bluriness determines fate macroscopic object absurd macroscopic object blurred right subatomic particle ca nt truly blurred analogy camera focus nt mean thing world actually blurry see nt know anything qm read enough paragraph paper realize majority qm explanation miss schrödinger point schrödinger story critique idea quantum blurriness pop sci author read story thought meant interpreted literally large feline exhibit quantum blurriness countless others retell explanation story like hearing emperor new clothes eyeopening power fashion without reading tale misunderstand thing let try misunderstand source material retelling would trust book review someone read review understand original argument debate whether criticism make sense particle appear blurry quantum level perhaps lack information maybe hidden variable clarifies state bell theorem seems rule event happened nt know alternate universe maybe every possible outcome creates new timeline flip coin put hand spooky quantum state maybe surrounding environment observes cat put settled state long check maybe world truly blurry observer come along copenhagen interpretation story continues einstein later wrote schrödinger contemporary physicist besides laue see one get around assumption reality one honest simply see sort risky game playing something independent experimentally established interpretation however refuted elegantly system radioactive atom amplifier charge gunpowder cat box psifunction system contains cat alive blown bit nobody really doubt presence absence cat something independent act observation einstein thought schrödinger refuted notion reality blurry depended observer universe already worked happened looked hence famous quote god play dice nt claim know anything qm retellings interpretation point schrödinger cat simultaneous overlap necessarily happens philosophically issue reminds think infinitely small quantity infinitesimal exist thing infinitely small thing thing may small detect yes fuzzy infinitely small quantity blip away measure nonzero world tiny quantity interact predict macroscopic number behave crossover point undetectable detectable blurry certain quantum behavior disappear favor everyday macroscopic reality used chain together reality tiny behavior determine larger one direct question schrödinger cat raise metalesson analogy memorable need sanity check source material every layer retellings miss original meaning let stay open correcting understanding happy math reference join monthly reader enjoy article plenty help build lasting intuitive understanding math join newsletter bonus content latest update
420,Lobsters,education,Education,"From Design of Everyday Things to Teaching of Everyday People: Human error? Student error? No, Bad Design",https://computinged.wordpress.com/2017/06/26/from-design-of-everyday-things-to-teaching-of-everyday-people-human-error-student-error-no-bad-design/,design everyday thing teaching everyday people human error student error bad design,design everyday thing teaching everyday people human error student error bad design june c culturallyrelevant c education important challenging build accept human behavior way way would wish like uncategorized computing computing everyone c c everyone design,design everyday thing teaching everyday people human error student error bad design june summer teaching humancomputer interaction course barcelona never taught hci enjoying like many hci course started reading norman design everyday thing begin chapter human error bad design paragraph industrial accident caused human error estimate range percent many people incompetent answer design problem number accident blamed upon human error percent might believe people fault percentage high clearly factor must involved something happens frequently must another underlying factor quote really struck lot education system error percent educator call error failure rate rate student succeed course ie completing course passing grade critique education system way norman critique user interface issue particularly relevant c movement goal student get access computing education student succeed learning computing education former copout want underprivileged kid access computing education likely developed privileged kid culturallyrelevant c education important challenging build care succeed come textual literacy mathematical literacy goal citizen design computing course student succeed posed question class another norman quote lot hmmming class put slide discus group couple minute room set chair group three work pretty well short smallgroup discussion share thought several student surprised moocs typically around withdrawal rate one student asked moocs student pay oms c course cost student hundred dollar typically wdf withdrawing earning f nonpassing grade rate compared inperson m c course acceptable failure rate lot concern first question one student asked student regularly fails c class asked system regularly failing student someone asked student succeed course pointed many people successfully use unix command line pretty classic case poor user interface user might able use poorly designed system everyone better better designed system let discussion go long hci course educational design class barbara teaching educational technology design course saw opportunity apply doet thinking system familiar interested hearing reader blog post think amount errorfailure tolerate educational system call system badly designed understand norman aiming design computing system user successfully use achieve goal educational system explicit purpose change student goal however norman user student irrational flawed human still want succeed end another quote doet small annotation problem design engineer maybe teacher logical accept human behavior way way would wish like like loading related entry filed uncategorized tag computing computing everyone c c everyone design
421,Lobsters,education,Education,What Music Really Is,http://whatmusicreallyis.com/research/,music really,,
422,Lobsters,education,Education,Why So Many Top Hackers Hail from Russia,https://krebsonsecurity.com/2017/06/why-so-many-top-hackers-hail-from-russia/,many top hacker hail russia,analysis college board computer science advanced placement study perm state national research university national talent strategy microsoft corp head start secondary school college board document admiring problem alan paller sans institute way forward latest ap test report isaca report frost sullivan isc many believe national talent strategy report stem alan paller frost sullivan informatics isaca microsoft perm state national research university stem education college board sans institute r,conventional wisdom say one reason many hacker seem hail russia part former soviet union country traditionally placed much greater emphasis educational institution west teaching information technology middle high school yet lack silicon valleylike pipeline help talented expert channel skill highpaying job post explores first part assumption examining breadth opensource data supply side conventional wisdom seems supported analysis educational data u russia indicates several stark important difference american student taught tested subject versus counterpart eastern europe compared united state quite high school student russia choose specialize information technology subject one way measure look number high school student two country opt take advanced placement exam computer science according analysis pdf college board ten year total high school student united state opted take national exam computer science computer science advanced placement exam compare number russia study pdf computer science called informatics russia perm state national research university found roughly russian student register year take nation equivalent ap exam known unified national examination extrapolating annual number ten year suggests twice many people russia taken computer science exam high school level past decade national talent strategy indepth analysis microsoft corp outlook information technology career author warn despite critical growing importance computer science taught small minority u school microsoft study note although currently high school united state certified teach ap computer science course head start people russia america decide take computer science exam secondary school may russian student required study subject beginning much younger age russia federal educational standard fe mandate informatics compulsory middle school school free choose include high school curriculum basic advanced level elementary school element informatics taught within core subject mathematics technology perm university research paper note furthermore elementary school right make subject informatics part curriculum core component fe informatics curriculum russian middle school following theoretical foundation principle computer functioning information technology network technology algorithmization language method programming modeling informatics society secondary school also stark difference computer scienceinformatics taught two country well level mastery examtakers expected demonstrate respective exam drawing perm study objective russia informatics exam rundown exam seek test block mathematical foundation informatics block algorithmization programming block information computer technology testing material consist three part part multiplechoice test four given option cover block relatively little time set aside complete part part contains set task basic intermediate advanced level complexity require brief answer number sequence characteristic part contains set task even higher level complexity advanced task usually involve writing detailed answer free form according perm study part contained task part task part task examination cover key topic informatics school syllabus task detailed answer labor intensive include task analysis algorithm drawing computer program among type answer checked expert regional examination board based standard assessment criterion image perm state national research university russia u content ap computer science exam spelled college board document pdf u test content area computational thinking practice p connecting computing creating computational artifact abstracting analyzing problem artifact communicating collaborating concept outline big idea creativity big idea abstraction big idea data information big idea algorithm big idea programming big idea internet big idea global impact admiring problem two test compare alan paller director research sans institute information security education training organization say topic russian informatics curriculum basic cybersecurity skill built present beginning middle school russian student middle school teach united state paller said teach topic general definitely test russian past year country produce skilled cybersecurity people paller said russian curriculum virtually ensures kid far handson experience computer programming problem solving example american ap test programming language specified learning objective program developed help people organization program used creative expression computer program implement algorithm abstraction make development computer program possible people develop test computer program mathematical logical concept fundamental programming notice almost need learn program think write one program collaboration student paller wrote email krebsonsecurity like teaching kid admire without learning main reason cyber education fails much time student come school almost usable skill way forward bright side sign computer science becoming popular focus u high school student according latest ap test report pdf college board almost american took ap exam computer science last year however computer science still far le popular ap test subject united state half million student opted english ap exam took english literature almost took ap government student went ap test called human geography breakdown subject specialization v ap test united state source college board particularly good news given dearth qualified cybersecurity professional available employer isaca nonprofit information security advocacy group estimate global shortage two million cyber security professional report frost sullivan isc prognosticates million cybersecurity job unfilled recruitment problem especially acute company united state unable find enough qualified cybersecurity professional hire u company increasingly counting hiring foreigner skill seeking however trump administration april ordered full review country highskilled immigration visa program step many believe could produce new rule clamp company hire foreigner instead american silicon valley biggest player urging policymakers adopt forwardlooking strategy solving skill gap crisis domestically national talent strategy report pdf microsoft said spends percent worldwide r budget united state company across industry continue focus r job country fill read microsoft report unless situation change growing probability unfilled job migrate time country graduate larger number individual stem background global economy clearly need microsoft urging u policymakers adopt nationwide program strengthen stem education recruiting training teacher teach software giant also say state given funding broaden access computer science high school computer science learning need start much earlier u student shortterm represents unrealized opportunity american job growth microsoft warned longer term may spur development economic competition field united state pioneered tag alan paller frost sullivan informatics isaca microsoft perm state national research university stem education college board sans institute entry posted thursday june filed follow comment entry r feed comment ping currently closed
423,Lobsters,education,Education,An Axiomatic Approach to Algebra and Other Aspects of Life (2011),http://carymillsap.blogspot.com/2011/01/axiomatic-approach-to-algebra-and-other.html,axiomatic approach algebra aspect life,property property made,many day pas think time two james r harkey mr harkey high school mathematics teacher taught algebra geometry analytic geometry trigonometry calculus learned mr harkey write teach plead case troubleshoot skill used earn everything prior mr harkey algebra class algebra morass trick memorize take constant side cancel common factor flip fraction multiply could practice solve problem like one practicing applying memorized transformation superficial pattern recognized understand taught without continual practice rule memorized would evaporate able solve problem could intuit answer would easy would stumped made example studying final exam quite difficult first day mr harkey class gave u rule first strict rule conduct classroom lived quite sinister reputation important study began single sheet paper apparently asked u label property wrote upper righthand corner yes still told u could consult sheet paper every homework assignment every exam give use every problem would executed one step time every step would written beside every step would write name rule property invoked perform step still hear u holy cow going lot extra work well going homework test problem look like first day class spent time reviewing every single item property mr harkey made sure agreed axiom property true moved real work filling toolbox worked problem problem problem throughout year get shift gear time every ax b c problem required fourteen step year long sequence accomplishment remember set number grade homework remember allowed write number rule instead whole name first learn foreign key accomplishment allowed combine step like one demonstrate pattern consistent mastery earn privilege like mr harkey taught algebra teacher teach geometry predicate logic every problem proof documented one logical step time mr harkey algebra class answer homework problem test question number x equal whole proof arrived value x answer mr harkey interested grading answer going grade got answer result whole semester understood algebra mean thoroughly make good grade mr harkey algebra class without creating intimate comprehension algebra work way learning way supply whole lifetime still understand make dimensioned drawing thing going build shop calculate tax implication business decision predict response time behavior computer software even help child algebra nothing algebra scare still understand rule help boy homework make use mr harkey axiomatic approach property made rearranged mr harkey rule better illuminate symmetry among mr harkey handy laptop computer exist school imagine done thing invariably one boy miss math problem stupid reason make mistake shop work tried step head instead writing course accidentally integrated assumption work true neat orderly audit trail debug way fix work start take time increase frustration level degrades learning bypass perhaps important technical skill life today ability troubleshoot theory redoing nstep math problem instead learning propagate correction error made step n k step n get society support analyst know two solution problem reboot b reinstallit difficult teach people value mastering basic difficult enough child even worse adult great teacher great coach understand important grateful met share love meeting new one actually believe old son baseball practice one tomorrow check blog year
424,Lobsters,education,Education,Modules Matter Most (2011),https://existentialtype.wordpress.com/2011/04/16/modules-matter-most/,module matter,strongest proponent unityped language kind structural principle substitution mentioned ephemeral model computation cost peristent ephemeral limited utility null pointer parallel sequential cost analysis direct verification running code like programming teaching r post navigation previous post next post,come controlling complexity developing importantly maintaining large system game town modularity even strongest proponent unityped language come accept modularity type static type course kind decomposition system module consists application structural principle substitution transitivity entailment composition map fundamental conception type system pedestrian term type header file describing new code implementing specification term unspecified implementation functionality specified interaction mediated entirely type access source code denied client precisely dependence component weakened anticipation future change allow flexibility development need even exist development proceed long type specified useful important relationship manytomany manytoone onetoone think api mapping key value absolutely essential language admit many different module type absolutely essential given module satisfy many distinct type without prior arrangement type purely descriptive extensional behavior module type regarded pinning particular implementation behavior moreover given module may well support variety view example forgetting certain aspect particular context example one may neglect implementation mapping support deletion setting extension application required pretty basic surprise language support cleanly simply one particularly awkward method rely extralinguistic tool manipulate build parameter switch choice given quickly resulting ad hoc language manage build script another technique manipulate restrict inheritance degree modularity simulated much one bang nail using pair plier common methodology fact attempt cut inheritance provide ml early functors obviating intervening decade maladaptations bad idea disappointingly least even relatively enlightened language haskell f fail support basic machinery haskell type class unaccountably popular perhaps first thing many people learn two fundamental problem type class first insist type implement type class exactly one way example according philosophy type class integer ordered precisely one way usual ordering obviously many ordering say divisibility interest second confound two separate issue specifying type implement type class specifying specification used type inference consequence using type class greg morrisett term like steering queen mary get hulking mass pointed right direction inference mechanism resolve thing way want f designer started right thing caml eliminated thing matter ml module system instead f designer added bunch objectoriented concept sake compatibility net mindset m developer tricked language feature readily flexibly provided module system bring apart general grousing point little choice language use teaching student modularity matter must language support flexible modularity form describing examined option carefully contender standard ml caml could gone either persuaded use standard ml worked beautifully purpose decisive factor choosing two ml simply prior code base standard ml draw two implementation standard ml support parallelism mlton polyml albeit neither optimally purpose haskell provides better support parallelism undoing unfortunate commitment laziness result unusable cost model time especially space suitable lack support modularity mentioned plan redo introductory curriculum computer science modernize place better emphasis principle rather current technology one aspect redo standard data structure algorithm course eliminate overemphasis ephemeral data structure treat parallel algorithm general case encompasses increasingly irrelevant case one processor yes technological trend importantly conceptual change emerges focusing language rather machine model computation data structure signature interface written language programming algorithm structure implementation signature signature mapping implemented various way different cost tradeoff logarithmic lookup v constant lookup example given algorithm balanced tree implement many different data structure mapping set distinction peristent ephemeral mapping difference data structure signature demand different algorithm different able support form easily cleanly able compare explain example ephemeral case limited utility much ask able write example running code minimum fuss bother decade struggled using objectoriented language java c explain simple idea consistently failed tell plugged academic moment many colleague worldwide situation desperate find way awkward methodology design pattern style guideline get way teaching principle even setting aside still imperative programming ephemeral data structure work fundamentally wrong thing try teach say binary search tree delete horrific mess wind absurd null pointer nonsense complex mess caused methodology problem pretty soon resort framework tool give student fighting chance get anything done distancing essential idea giving impression programming painful ugly enormous tragedy solution abandon entirely pushing oo technique advanced level student wish learn concentrating basic principle modularity parallel sequential cost analysis direct verification running code introductory level dijkstra used say beauty business would add life short bright mind precious waste ugly thing take point view seriously best brightest drawn rather repulsed field pace colleague major institute technology student absolutely love program love beauty code provided code ask write fact beautiful little dreary corporate bureaucracy oop thing lovely mathematical elegance fp update wordsmithing like like loading related entry posted saturday april pm filed programming teaching follow response entry r feed comment ping currently closed post navigation previous post next post
425,Lobsters,education,Education,Learn from the Bees,http://www.cs.uni.edu/~wallingf/blog/archives/monthly/2017-06.html#e2017-06-12T14_15_11.htm,learn bee,crafting compiler fastest fizzbuzz west fizzbuzz,last couple week spent minute afternoon writing little code best part work day project little compiler one first thing compiler course study small compiler couple day nice way introduce stage compiler raise question answering course semester also give student chance see inside working compiler write hope demystifies process little hey compiler really program maybe write one last decade used compiler called acdc demo based chapter crafting compiler fischer cytron leblanc ac small arithmetic language two type number sequence assignment statement print statement dc stackbased desk calculator come part many unix installation whipped acdc compiler java decade ago used ever since language enough feature useful demo enough overwhelm hackedup compiler also open improvement learn technique throughout course giving u chance use small student applied project growing dissatisfied demo java program feel heavy many small piece simple enough quick read requires two full class session really understand well hoping shorten intro course ac good nt flow control sequencing mean give u way look assembly language generation jump backpatching top bored acdc ten year long time spend one program spring stumbled possible replacement fastest fizzbuzz west defines simple source language writing fizzbuzz program declaratively example produce output much larger program language imagine able pull language next interview software dev position language really simple mean compiler written relatively line code however also requires generating code loop ifstatements requires thinking branching pattern assembly language fastest fizzbuzz article us python parser generator create compiler course want something student read knowledge coming course want program transparent enough see directly stage work interacts part compiler also itching write program wrote compiler python performs simple scan source program taking much advantage small set simple token possible parser work recursive descent also take advantage language simple structure type checker make sure number make sense word unique finally make thing even simpler code generator produce executable python program quite hopeful compiler use class demo simple enough read one sitting even student enter course weaker programming skill even language also used demonstrate sophisticated technique learn throughout course consider adding comment source language overwhelms ad hoc approach use scanner motivating use state machine parser easily handled recursive descent language quite amenable simple tabledriven approach tabledriven parser simple enough student get hang technique unnecessary detail type checker demonstrates walking abstract syntax tree without worrying many type rule focus attention type system dealing interesting source language project code generator deal flow control enables u learn assembly language generation smaller scale without fully implementing code handle function call compiler demo first week course also serve running example throughout see well play class couple month case great fun ending day last two week firing emacs idle writing code bonus used exercise improve git skill taking beyond small set command used academic project past git rebase almost friend also wrote pyunit test written long long time reminded challenge student face trying test code serve well fall like writing code
426,Lobsters,education,Education,"Older Adults Learning Computer Programming: Motivations, Frustrations, and Design Opportunities",http://www.pgbovine.net/publications/older-adults-learning-programming_CHI-2017.pdf,older adult learning computer programming motivation frustration design opportunity,,obj length filter flatedecode stream xڕ
427,Lobsters,education,Education,Teaching tech,https://eev.ee/blog/2017/06/10/teaching-tech/,teaching tech,sponsored post phaser teaching hard really recent entry list community tutorial documentation tutorial arbitrary heading module sqlalchemy documentation perlootut perllol reference tutorial post perlin noise making doom map,sponsored post anonymous patron would kinda like hear thought technical teaching technical writing pedagogy something care know much feel free ignore suggestion good news care enough trying write sortakindateaching book ironically one biggest problem writing introduction book keep accidentally rambling page problem difficulty teaching technical subject maybe good chance get system recently tried new thing phaser dig particular convenient example fresh mind anything better see phaser website appears ton documentation two six heading learn example seems promising indeed phaser offer several gettingstarted walkthroughs possibly hundred example news feed regularly link thirdparty tutorial thorough api doc perfect beautiful surely dream well almost example microscopic usually focused around single tiny feature many could explained well one line code example game short aimless demo none complete game showcase either game sometimes pop news feed include source code useful learning likewise api doc api doc leading sort problem might imagine example place mention preupdate stage naturally happens update might rightfully wonder kind thing happen preupdate importantly put let check api doc phasergrouppreupdate core preupdate called world okay help much let check phaserworld say core preupdate called world ah hm turn world subclass group inherits method thus unaltered docstring group eventually find brief doc attached phaserstage grepping source code mention framework us preupdate might want use trouble narrative documentation nothing explaining library put together supposed use get handed brief primer massive reference nothing like buying reilly book finding one chapter followed glossary api doc great know specifically looking explain best way approach higherlevel problem offer much guidance mesh nicely design framework big library phaser decent chunk stuff background somewhere give strong impression expects build around particular never tell way ah tutorial right confess recoil whenever hear word tutorial conjures image uniquely useless sort post go something like look cool thing made teach press button order screenshot look nothing like customized hell everything author often le forthcoming made decision might want try something else might go wrong fix expected writing stuff requires far extensive knowledge need thing first place need good bit introspection sort something coherent say word teaching hard skill take practice people blogging expert including phaser noticed several thirdparty tutorial tried look sometimes le year linked site pretty major downside relying community teaching resource also notice okay look really trying rag author tried share knowledge world good thing something worthy praise glad hope help someone sake example recent entry phaser list community tutorial link perfect example consider post bulleted list explanation followed single contiguous line source code anything wrong bulleted list mind code contains zero comment zero blank line part two think series aimed beginner yet title much prose focus object pooling performance hack easy add later almost certainly unnecessary game simple explanation done prose say understand critical add lot game object turn two thing say know made bulleted list short really guided explanation look fine still interesting sure english even person first language hardly going criticize writing novel platforming trouble doubt beginner would walk away feeling enlightened might closer game wanted still value feel closer someone else awful lot tutorial seen particularly post blog form aware genre thing writing right look similar huge social problem people writing blog contributing corpus written knowledge become bit stickier large project relies community tutorial main set teaching aid ragging phaser slightly frustrating experience coming knowing wanted unable find description semantics anywhere sympathize teaching hard writing documentation hard programmer would usually rather program either thing free project run volunteer work industry anything programming little undervalued getting good doc written tricky phaser sell book plugins maybe could hire documentation writer maybe whole point buy book python pretty good documentation introduces language tutorial document everything else library language reference sound awful lot like phaser setup considerable depth python doc tutorial highly narrative walk quite corner language stopping mention common pitfall possible use case clicked arbitrary heading found pleasant informative read somehow avoids bewilderingly dense api doc also take narrative tone even something humble collection module offer numerous example use case pattern recipe hint interesting way might extend existing type little vague handwavey hard give specific example without quoting two page python documentation hopefully see right away mean take look good doc bront likewise always enjoyed sqlalchemy documentation follows much structure main python documentation sqlalchemy database abstraction layer plus orm lot subtly intertwined stuff complexity doc reflects figuring advanced thing correctly particular challenging part thorough job introducing large library particular philosophy best work alongside softly contrast say perl documentation gotten better since first learned perl perl doc still bit strange beast exist flat collection manpagelike document terse name like perlootut documentation certainly thorough much allocation detail example perllol explanation make list list somehow merit separate documentation offer fewer nine similar variation code reading file nested list word line python offer example variety different problem perl show lot subtly different way basic thing similar problem perl doc sometimes offer far much context consider reference tutorial start explaining reference powerful new feature perl first released explains might want nest data perl perspective thus explaining perl much better claim great teacher like talk stuff find interesting try way accessible people lugging around mountain context already blog hard tell well work best also know learn best understand going rather seeing surfacelevel cause effect course complex subject hard develop understanding seen cause effect time balancing act showing example trying provide explanation many concrete example feel like rote memorization much abstract theory feel disconnected anything tangible attempt pleased probably post perlin noise cover fairly specific subject made much easier build one step time scratch visualization every point offer interpretation going clearly explains possible extension idea distinguishes core concept little mathheavy grant hard avoid fundamentally mathematical topic economical background information let math little dense place best part far learned lot perlin noise process writing several place realized explain going satisfying way dig deeper could write perhaps good guideline hidden try teach much know also fairly happy series making doom map though meander tangent little often hard talk something like doom without meandering since convoluted ecosystem grown organically course year least three way anything finally book trying write sort game development one biggest grievance game development teaching particular often leaf important touch guide tell make title screen menu handle death get mariostyle variable jump height show build clearly unfinished demo game leave device realized reliable way show build game build real game write book laid narrative wrote first game complete stumbling block dead end tiny bit polish idea well work whether recapping mistake interesting distracting beginner ought interesting experiment
428,Lobsters,education,Education,"We need a course on ""Mundane Data Types""",http://www.cs.uni.edu/~wallingf/blog/archives/monthly/2017-06.html#e2017-06-08T12_10_33.htm,need course mundane data type,crafting compiler fastest fizzbuzz west fizzbuzz,last couple week spent minute afternoon writing little code best part work day project little compiler one first thing compiler course study small compiler couple day nice way introduce stage compiler raise question answering course semester also give student chance see inside working compiler write hope demystifies process little hey compiler really program maybe write one last decade used compiler called acdc demo based chapter crafting compiler fischer cytron leblanc ac small arithmetic language two type number sequence assignment statement print statement dc stackbased desk calculator come part many unix installation whipped acdc compiler java decade ago used ever since language enough feature useful demo enough overwhelm hackedup compiler also open improvement learn technique throughout course giving u chance use small student applied project growing dissatisfied demo java program feel heavy many small piece simple enough quick read requires two full class session really understand well hoping shorten intro course ac good nt flow control sequencing mean give u way look assembly language generation jump backpatching top bored acdc ten year long time spend one program spring stumbled possible replacement fastest fizzbuzz west defines simple source language writing fizzbuzz program declaratively example produce output much larger program language imagine able pull language next interview software dev position language really simple mean compiler written relatively line code however also requires generating code loop ifstatements requires thinking branching pattern assembly language fastest fizzbuzz article us python parser generator create compiler course want something student read knowledge coming course want program transparent enough see directly stage work interacts part compiler also itching write program wrote compiler python performs simple scan source program taking much advantage small set simple token possible parser work recursive descent also take advantage language simple structure type checker make sure number make sense word unique finally make thing even simpler code generator produce executable python program quite hopeful compiler use class demo simple enough read one sitting even student enter course weaker programming skill even language also used demonstrate sophisticated technique learn throughout course consider adding comment source language overwhelms ad hoc approach use scanner motivating use state machine parser easily handled recursive descent language quite amenable simple tabledriven approach tabledriven parser simple enough student get hang technique unnecessary detail type checker demonstrates walking abstract syntax tree without worrying many type rule focus attention type system dealing interesting source language project code generator deal flow control enables u learn assembly language generation smaller scale without fully implementing code handle function call compiler demo first week course also serve running example throughout see well play class couple month case great fun ending day last two week firing emacs idle writing code bonus used exercise improve git skill taking beyond small set command used academic project past git rebase almost friend also wrote pyunit test written long long time reminded challenge student face trying test code serve well fall like writing code
429,Lobsters,education,Education,Never Graduate Week 2017: how we planned and ran our annual alumni week,https://www.recurse.com/blog/114-never-graduate-week-2017-how-we-planned-and-ran-our-annual-alumni-week,never graduate week planned ran annual alumnus week,spec custom scoutbooks squarespace conference blank studio lindsey kuper leigh honeywell christina cha emily xie liuda nikolaeva nabil hassein stanley zheng neeraj wahi zulip filippo valsorda aditya mukerjee leah hanson unconference unconferences thursday presentation con reinforcing community remote attendee went well could gone better store next year,may invite entire recurse center community return new york city never graduate week five day programming socializing reconnecting batchmates community year recursers joined u represented past batch rc traveled dozen country forty different city community grows nearly people year every ngw bigger last realized last year would impossible fit everyone wanted attend main space without feeling like computeradept sardine primary goal became find way could accommodate many folk possible ngw scalable subsequent year secondary goal host event everyone attended learned something taught someone something ultimately wound major departure never graduate week past ran small unconferenceconference hybrid rc community replete badge talk several livestreams piece came together way fully realize admit indeed planning conference nearly finished largely thanks rooted wonderful community went pretty well spec folk attend year ngw counting labor cost u space food drink giveaway made hoodies custom scoutbooks lanyard hand screenprinted social rule poster charge folk attend also advantage traditional conference namely builtin crew organizer mainly sonali sridhar james porter one big space pool speaker knew well could reach rather solicit proposal also deal heavyduty registration checkins nick made quick rsvp page site good go saved u time money however also one sponsor squarespace one recruiting partner hosted awesome endofweek party u office sent five engineer panel discussion conference three space open folk week main space satellite space smaller quiet space folk wanted quiet spot rest program within block main space everyone gathered welcome talk breakfast closing talk unconference event thursday presentation afterparty satellite space open monday wednesday held conferencestyle talk workshop panel conference hosted seven talk two workshop two panel blank studio soho lindsey kuper former resident research scientist intel lab spoke proving safetycritical neural network supposed naomi saphra gave impromptu crash course neural network beforehand leigh honeywell former resident current tech fellow aclu spoke security privacy beyond five engineer squarespace including rc alumns christina cha emily xie spoke panel keep programming fun also job liuda nikolaeva engineer jane street hosted workshop getting started ocaml nabil hassein engineer khan academy gave talk facilitated discussion machine learning predictive policing moderated panel sonali dave nick rc founder stanley zheng gave talk building web service go neeraj wahi engineer dropbox gave workshop contributing zulip open source project filippo valsorda member crypto team cloudflare gave talk tl concept aditya mukerjee engineer stripe gave talk monitoring code reliability leah hanson engineer cloud foundry gave talk websockets last least hosted coding bee like tandem spelling bee coding wanted scheduled talk represent diversity interest individual within community half speaker panelist woman nearly half people color unconference unconferences participantorganized conference session planned somewhat spontaneously focused encouraging conversation rather one person sharing knowledge program attendee register interest hosting attending session central spot conference session made unconference wall main space invited people post event like host tuesday wednesday never graduate week unconference session hosted including talk coding fear discussion great bug story talk discussion working small nonprofit discussion computer dna sequencing muchneeded library reorganization particularly excited unconference never graduate week echo way talk workshop organized rc nearly everything happens rc book club code review group initiated organized recursers thursday presentation finally fit circular inspiration con decided fill thursday full day minute talk alum style weekly thursday evening presentation filled every spot one alum gave presentation choice title hacking musical notation scala disgusterousness group theory coloring book imperative haskell random git useful thing idris party trick shark laser reinforcing community two important aspect never graduate week allows folk reconnect people batch allows folk never met one another person meet work together chose hand two three people thought folk talk based interest sent everyone attended ngw person weekend arrived also hosted bunch social event throughout week including game night picnic much work facilitating social interaction providing good substrate scaffolding rather micromanaging people event view rc community biological system machine give people good environment diverse balanced flourish also helpful lot alumns fantastic dj floating around one marko stamenovic provided soundtrack afterparty great acclaim remote attendee lot alum travel new york never graduate week wanted include much possible livestreamed opening closing talk talk satellite space unconference event two side room main space lovelace hopper perfect nothing exploded count win also stream dedicated discussion topic covered roundtable discussion also sponsored alum meet dinner london san francisco folk make year went well year ngw indeed le crowded last year despite accommodating people full schedule talk unconference event throughout week rc faculty burn badly ngw past year launched new internal calendar beginning ngw made rsvping seeing planning event much better game night end week party squarespace afterparty lot fun wellattended everyone answered postngw survey said met someone new could gone better logistical hiccup quiet space perhaps quiet lot folk realize thing happened changed last minute prepared next time including setting better internet satellite space facilitating small social event printing program notebook many folk attended ngw also day job hard attend without dedicated space work remotely day planned meetups city advance consistent took question folk watching talk remotely store next year never graduate week continue get bigger rc grows view attendance interest ngw measure health community folk want attend better mean planning ngw space participant fun social technical event
430,Lobsters,education,Education,Computer Science Educators beta (StackExchange),https://cseducators.stackexchange.com/,computer science educator beta stackexchange,stack exchange network stack overflow visit stack exchange,stack exchange network stack exchange network consists q community including stack overflow largest trusted online community developer learn share knowledge build career visit stack exchange
431,Lobsters,education,Education,How To Learn Solidity: The Ultimate Ethereum Coding Guide,https://blockgeeks.com/guides/how-to-learn-solidity/,learn solidity ultimate ethereum coding guide,blockchain course ethereum foundation blockchain bitcoin ethereum virtual machine evm allows ethereum node ethereum holon hang ethereum founder ether token ethereum smartcontracts way people across globe business even speak language use currency ethereum learn solidity solidity pretty simple language far programming language go ethereum design rationale smartcontract smartcontract consensus state blockchain ethereum ethereum mining node ethereum ethereum oraclize documentation particular aim force smart contract developer trust oraclize data need without backing authenticity oraclize could easily tamper data order complete complex task oraclize return data requested along proof authenticity ie data come data provider explicity demanded smart contract ethereum ethereum solidity basic tutorial basic code background setup ethereum data type wei unit global var ethereum ethereum truffle solidity smartcontract video tutorial truffle demo github project simple solidity smartcontract example full contract code ethereum ethereum ethereum ethereum user thisnewaddress handle handle compiling testing smartcontract ethereum ethereum testrpc ethereum ethereum ethereum truffle compile truffle migrate address ethereum blockchain ethereum ethereum ethereum ethereum ethereum basic ethereum ðapp design localhost design testing ethereum demo createreactapp ethereum ethereum hooking ðapp mainnet ethereum wwwenledgerioetherereumdemotools ethereum ethereum ethereum ethereum ethereum ethereum ethereum final thought deep reflection becoming great ethereum solidity language ðapp developer wwwenledgerioetherereumdemotools way remove badusers necessary make ethereum ethereum ethereum ethereum ethereum ethereum ethereum ethereum ethereum ethereum secret crazy bonus section deploy mainnet captain ethereum ethereum ethereum ethereum ethereum ethereum ethdeployer repo github tectract ethdeployer browsersolc oh yeah get error message deployment make sure actually check transaction id link contract likely actually deploy succesfully sometimes metamask fails pick deployment success transaction state new contract address return browser environment succesfully ethereum enledger corp,share get guide walk stepbystep learning solidity indepth exploration solidity please check blockchain coursesthe ethereum foundation shaking world blockchain since early day project around late early ethereum really kickstarted bitcoin think blockchain movement first big bitcoin bubble past usd market got everyone attention ethereum blockchain project cryptocurrency ether similar bitcoin ethereum added feature nearly turing complete virtual machine language processing capability embedded node implementation ethereum virtual machine evm allows ethereum node actually store process data exchange payment responding realworld event allowing lot new opportunity support onchain application never available developer realworld user luck actually switzerland early get visit ethereum holon hang ethereum founder ether token sale back selffunded asked mihai alisie ethereum smart contract explained smartcontracts way people across globe business even speak language use currency really perspective begin idea define programmatically rule business contract simple machine language bring people together allow conduct business trustable secure automated fashionsolidity language tool use generate machinelevel code execute evm language compiler take highlevel humanreadable code break simple instruction like put data register add data two register jump back instruction memory point xxxxx form basis microprocessor executable program solidity language one several language compiled evm bytecode another language thing called serpent language might several compiler tool thing generate evm machinelevel bytecode run ethereum node payment learn soliditysolidity pretty simple language far programming language goin fact purposefully slimmed looselytyped language syntax similar ecmascript javascript key point remember ethereum design rationale document namely working within stackandmemory model instruction word size evm give u access program stack like register space also stick memory address make program counter loopjump sequential program control expandable temporary memory permanent storage actually written permanent blockchain importantly evm requires total determinism within smart contractsthis requirement determinism reason see random function solidity language ethereum block mined smartcontract deployment function call within block meaning lined happen within last block duration get executed node mine block new state change storage space transaction within smartcontract actually occur miner node new block get propagated node node try independently verify block includes state change local copy blockchain also fail smartcontract act nondeterministically node come consensus state blockchain new block contract get executed network could literally haltthis ethereum smartcontracts smartcontracts general blockchain system must deterministic network node always validate maintain consensus new block coming order continue runninganother limitation find evm smartcontracts inability access data outside memory storage want smartcontract able read delete harddrives node run inability query outside resource like jquery really access many library function like parsing json structure floatingpoint arithmetic actually costprohibitive subroutine store much data ethereum blockchain itselfwhen call smartcontract statechanging work computation action besides simply reading storage incur gas cost work done smart contract gas cost related amount computational work required execute function sort micropayment microcomputing system expect pay set amount gas set amount computation foreverthe price gas meant stay generally constant meaning ether go global market price gas ether go thus execute function call smartcontract get estimation amount gas must pay beforehand must also specify price ether per gas willing pay mining node decide good enough rate pick smartcontract function call next blocksmartcontracts address receive send ether smart contract track caller function verifiable way determine one function called privileged owner admin account act accordingly administrative function ability read data ethereum blockchain access info transaction older block smartcontracts locked little deterministic world able aware data stored ethereum blockchain oracle come make call oracle tell u something outside world trustable way act data within smart contract key point even though realworld event deterministic oracle trusted always answer every node request happened deterministic way node still come consensus trusted oracle work theory oracle take data say ticker price feed realworld stock price record data storage simple oracle smartcontract something like see also explanation function storetickerdata symbol uint open uint high uint low uint close onlyoracle return bool success store ticker data onchain tickerdata symbol blocknumber open high low close tickerdata map map string uint array uint uint uint uint return true company specialise trusted oracle designing system disintermediate trusted datafeed take look oraclize documentation see interesting quote particular aim force smart contract developer trust oraclize data need without backing authenticity oraclize could easily tamper data order complete complex task oraclize return data requested along proof authenticity ie data come data provider explicity demanded smart contract check doc section authenticity proof detail idea even new ethereum nerd distant time future spin ethereum node start sync blockchains network data need execute oracledependent smartcontracts safely onchain download forever matter pay gas oracle datawriting realworld event blockchain storage statechanging cost gas another topic basically get prepaid data requester one several way cool thing even though write smartcontract throw dice sense including actual randomness actually possible write smartcontract reacts throw die officiated oraclesolidity basic tutorialbasic code background setupso let get started basic ethereum smartcontract written solidity language best way learn see little snippet code pretty simple function declaration syntax basic data type like uint unsigned integer string see doc also variable type like address contains balance transfer method predictably return balance ethereum address allow smartcontract actually send ether address unit denominated weiwe basic array enums operator hash data structure called mapping special predefined unit global var include thing like blockheight last block timestamp handy shahash addresskey manipulation function one important quirk solidity working multidimensional array indexing reversed order language declaration noted doc array fixed size k element type written k array dynamic size example array dynamic array uint uint note notation reversed compared language access second uint third dynamic array use x index zerobased access work opposite way ok enough basic tool dangerous let get started let sort basic social app people image basic info posted blockchain user ethereum address handle username associated account basic demographic data people may may enter simple search page look user basic directory check image addednotarized user profilehere image final ethereum solidity smartcontract decentralized app ðapp user interface product look like user notarized image added notarized nice picture guy image galium arsenide crystal structure grad school day see notary hash timestamps image little checkmark indicating notarized image data still match notary hash created indicated timestamp going walk built app pointing interesting tidbit link code example might need future reference sound good let go first thing set truffle testbed allow easily test compiling smart contract compiling deploying smartcontracts involves generating long signed transaction truffle allow compiledeploy test smartcontract using simple command bunch tool happen like solidity smartcontract video tutorial us truffle tool demo github project folder created tutorial everyone follow along start simple setup command debian linux environment tectract blockgeeksethereumdemotools npm g truffle run permission error globally installing node module see tectract blockgeeksethereumdemotools mkdir geekt going call social application geekt tectract blockgeeksethereumdemotools cd geekt tectract blockgeeksethereumdemotoolsgeekt truffle init creates folder setup file within geekt folder tectract blockgeeksethereumdemotoolsgeekt l contract migration test trufflejs created three folder one new file called trufflejs tectract blockgeeksethereumdemotoolsgeekt l contract convertlibsol metacoinsol migrationssol basic template contract generated truffle tectract blockgeeksethereumdemotoolsgeekt l migration couple file compilationmigration setting truffle simple solidity smartcontract example ok going create contract called geektsol geektcontracts folder generated called truffle init see full contract code point interesting bit top file line specifies compiler version basic contract definition syntax variable definition pragma solidity contract geekt address geektadmin mapping notarizedimage notarizedimages allows look notarizedimages imagesbynotaryhash like whitepages image mapping address user user allows look user ethereum address address usersbyaddress like whitepages user ethereum address call statechanging function real world specify much ether pay order luckily request estimate cost term gas cost gas price gasether beforehand usually accurate ethereum miner decide paid enough include statechanging transaction next block actually wait function return next block found reading data storage structure free wait next block either node read data return right awayso user mapping main storage object allows u create user object look address mapping superefficient storing data retrieving quickly easy way iterate map see also created usersbyaddress address array hold every known address user system like whitepages user created thei created notarizedimages mapping allow u create image object storage look associated hash image data notaryhash index longwe also imagesbynotaryhash array list notaryhashes like whitepages allowing u iterate image notarized struct notarizedimage string imageurl uint timestamp struct user string handle city state country myimages basic structs also represent storage object cost real ether create data actually stored ethereum blockchain cost real ether change state internal variable really used outer mapping array keep track blockchain memory imageuser structure reside notarizedimage struct store simply url image somewhere web presumably timestamp notifying image notarized user struct store basic user handle city state country also store array image user notarized added user account like mini userbyuser version global imagesbynotaryhash whitepages object function registernewuser string handle city state country return bool success address thisnewaddress msgsender nt overwrite existing entry make sure handle nt null byte user msgsender handle length byte handle length user thisnewaddress handle handle user thisnewaddress city city user thisnewaddress state state user thisnewaddress country country usersbyaddresspush thisnewaddress add entry user user whitepages return true else return false either handle null user handle already existed registernewuser function take handle city state country input variable return true false indicate success failure would fail well want allow user overwrite handle going like firstclaim system handle user handle already exists return null placed conditianal line check also allow creation username handle one thing note thisnewaddress caller function see use special msgsender function grab data address function transaction sent someone anyone call smartcontract function pay real ether mapping object null default call user thisnewaddress handle handle creates new user object user mapping set handle city state country note also push new user address usersbyaddress global user whitepages object return true function addimagetouser string imageurl return bool success address thisnewaddress msgsender byte user thisnewaddress handle length make sure user created account first byte imageurl length could nt get null check work oh well prevent user fighting sha image listing whitepages still allow add personal ref sha byte notarizedimages imageurl length imagesbynotaryhashpush add entry image image whitepages notarizedimages imageurl imageurl notarizedimages timestamp blocktimestamp note updating image also update timestamp user thisnewaddress myimagespush add image hash user myimages array return true else return false either imageurl null could nt store image return true else return false user nt account yet could nt store image addimagetouser user function pretty similar registernewuser function look sending address via special msgsender object check registered user handle address try add image user entry allow user add notaryhash global whitepages image exist prevent user fighting entry global whitepages allow addupdate notaryhash entry within miniwhitepages image nothing function getusers constant return address return usersbyaddress function getuser address useraddress constant return string return user useraddress handle user useraddress city user useraddress state user useraddress country user useraddress myimages function getallimages constant return return imagesbynotaryhash function getuserimages address useraddress constant return return user useraddress myimages function getimage constant return string uint return notarizedimages imageurl notarizedimages timestamp finally accessor function allow u simply read user image get full whitepages listing user image note function return constant data basically mean readonly statechanging free call return data right away wait next block basically call global mapping array return relevant data user address image notaryhashcompiling testing smartcontractnow want actually test smartcontract locally test environment really easy using simple truffle command first actually need local ethereum node test ethereum testrpc come testrpc basically fake node slim program pretend node responds like node would respond localhost machine testrpc run port like normal ethereum node ability compile solidity smartcontracts evm code run code plus get instant response testing instead wait real ethereum network find next block could run truffle test compiledeploy command real ethereum node would cost real ether plus timeconsuming memory consuming run node need quick install command npm g ethereumtestrpc testrpc sample dog come year spray crawl learn general detect silver jelly pilot start testrpc specified seed phrase see something like output ethereumjs testrpc available account private key hd wallet mnemonic sample dog come year spray crawl learn general detect silver jelly pilot base hd path accountindex listening see activity window testrpc running deploy interact smartcontract via truffle ok ready test deployment need modify file include name smartcontract truffle know compile deploy command truffle compileif go well see message saying saving artifact error message going lie contract syntax error issue compiler error message see likely mysterious hard interpret get error stack size probably mean many variable passed intoout function call good rule remember variable input output max general also remember solidity smartcontracts return custom struct data type work around usually return array pointeraddresses structs internal mapping get runtime error message stack may mean bad conditional codetruffle migratethis command actually test deployment smartcontract onto testrpc node see output return running migration deploying migration migration saving successful migration network saving artifact running migration deploying geekt geekt saving successful migration network saving artifact smartcontract named geekt given address ethereum blockchain deploys successfully see address real live ethereum network pay gas deploy contract address never change testrpc shut testrpc forget everything start testrpc back redeploy contract get different address smartcontract address smartcontract people send transaction message interact statechanging transaction read data ethereum blockchain smartcontracts also interact directly via address using message smartcontracts interact smartcontracts store change read data via ethereum blockchain message known decentralized autonomous organization dao sok come fun part ready actually initial testing interact smartcontract start truffle console query testrpc localhost node make sure everything working add user image retrieve properlytruffle console geekt geektdeployed geektthen function instance return jsonstringify instanceabi geektthen function instance return instanceregisternewuser tectract denver co usa geektthen function instance return instanceaddimagetouser wwwmyimageurlcom geektthen function instance return instancegetuser geektthen function instance return instancegetusers geektthen function instance return instancegetimages geektthen function instance return instancegetimage one important concept abi javascriptformatted object describes function name inputsoutputs interacting smartcontract sort like application programmer interface api description smartcontract tell people form message registernewuser function working see response registernewuser function call console window tx receipt transactionhash transactionindex blockhash blocknumber gasused cumulativegasused contractaddress null log log addimagetouser function return success similarly retrieve individual user record notarized image record ethereum blockchain getuser function call return tectract grab image data via hash string associated getimage function return wwwmyimageurlcom string e c look great everything working tested testrpc truffle ready actually build cool graphical user interface ðapp world interact user registration image notary ethereum blockchainbasic ethereum ðapp designlocalhost design testingwe ready go soliditylanguage smartcontract successfully compiled deployed local testrpc ethereum node quickly build simple ðapp allow user interact smartcontract webbrowser using basic web programming special javascript module made specifically interact ethereum node smartcontracts webi made demo opensource github repository reference people use building ethereum ðapps using demo made easytouse tool called createreactapp us facebookinternal weblanguage react focusing react code webjs javascript command needed code commonjs almost exactly plainold javascriptso web app install nodemodule via command like npm save packagejson file using one would inside tag inside j file line like load module import javascript var require tell detail node smartcontract connect see line like line specificies localhost node ip port setting var new new http smartcontract address var geektaddress smartcontract abi raw javascript object quoted string var geektabi constant true input name getusers output name load smartcontract object geektcontract geektabi geektaddress find default account listed node connection account testrpc defaultaccount line demonstrate readonly function interfacing smartcontract via function activated page load get whitepages known user address geektcontractgetusers function err usersresult function grab image needed store browser memory geektcontractgetimage imagehash function err imageresult simple demo ðapp load known user address grab actual user image detail image record needed onthefly screenshot point image refreshed testrpc client done truffle migrate command deploys smartcontract localhost testrpc node see interface ready click button register first user button click registernewuser function smartcontract called adding userdata localhost testing ethereum blockchain node smartcontract address noted adding userdata blockchain storage cost gas need figure much gas pay instead taking scientific wildass guess swag code actually get called sign guestbook button get clicked geektcontractregisternewuserestimategas outerthisstatedefaulthandle outerthisstatedefaultcity outerthisstatedefaultstate outerthisstatedefaultcountry defaultaccount function err result var mygasnum result geektcontractregisternewusersendtransaction outerthisstatedefaulthandle outerthisstatedefaultcity outerthisstatedefaultstate outerthisstatedefaultcountry defaultaccount gas mygasnum function err result see statechanging transaction actually pay ethereum gas real testnet gas call registernewuserestimategas function beforehand use estimated amount gas call statechanging function real using registernewusersendtransaction functionwhen started testrpc spit test wallet address u account akin account would ran full node getaccounts rpc command like fullnode wallet testrpc give free testnet coin testnet ether per account start upwhen call statechanging function like registernewuser addimagetouser localhost testing phase testrpc node testrpc pay testnet gas return result transaction right away full localhost node would unlock account transaction would succeed mainnet would wait mainnet next block pick transaction assuming gas estimate enough always better way homies ðapp mainneti set deployed smartcontract onto ethereum mainnet demo app one webservers wwwenledgerioetherereumdemotools visit site testrpc full ethereum node running visit site likely see something like saw connection network saw default account node link mean need full ethereum node running virtual private server vps full node connect order interact ethereum mainnet recently true great chrome plugin called metamask chrome browser allows connect ethereum mainnet within browser metamask guy basically provide connection full node right free prop see code detect special injected object metamask plugin set node connection ethereum full node relevant code switch automatically regular client localhost metamask connection function let typeof undefined consolelog saw injected new else consolelog see injected new new http image note metamask fox logo upper right corner installed metamask plugin connected ethereum mainnet browser see added couple user guestbook already geekt guestbook demo smartcontract ðapp interface allows select user browse image see sign guestbook page connect address registered user yeti added code paste url image want add user account fetch notary hash add image also check notary hash image loaded page give little green checkmark red x based whether image url notary hash still match adding blockgeeks logo image ryan user account clicked button add image userthe metamask plugin detected need pay ethereum transaction real ethereum gas popped little window prompt whether accept transaction sent little real ether metamask wallet enough clear transaction click accept final thought deep reflectionsthat working demo article code repository greatly help along becoming great ethereum solidity language ðapp developer install metamask plugin connect ethereum mainnet visit wwwenledgerioetherereumdemotools see guestbook notary demo app user image even sign guestbook notarize image want guy get outofcontrol thing added little moderation ability smartcontract owner set internally address whoever initially paid deploy smartcontract mainnet want show really quickly special admin ability work pretty common see sort admin user code pattern address geektadmin function geekt payable constructor name contract get called contract first deployed geektadmin msgsender set admin remove bad user image needed nobody else modifier onlyadmin msgsender geektadmin throw forget replaced actual function body modifier used function removeuser address baduser onlyadmin return bool success delete user baduser return true function removeimage badimage onlyadmin return bool success delete notarizedimages badimage return true special constructor function geekt name contract get called contract first deployed blockchain function set admin user address msgsender paid deploy smartcontract also special onlyadmin modifier function applied removeuser removeimage function restrict function activated msgsender address admin user addressnow way remove badusers necessary make another last point want mention really scratched surface one sort basic feature cover solidity event way push update back browser sort like socket connection watching activating browser event new registered user image detected really coolest part ethereum solidity come smartcontracts interact oracle smartcontracts talk act amongst using message dao also somethe really coolest part ethereum solidity come smartcontracts interact oracle smartcontracts talk act amongst using message dao also pretty serious security consideration learn go trying store real ethereum within smartcontract send people based function call bunch people lost dollar one ended splitting ethereum network contentious hardfork something really watch probably cover another article course article good get going dangerous said encourage learn even get nice company pay learn still pathanother last point want talk structure ethereum real cost using smartcontracts right ethereum network run big single public blockchain everyone pay access store data however actually somewhat expensive see image charged ether today equivalent real u dollar store image url notary hash timestamp comprising byte ethereum mainnet work data storage cost per mb literally insanely expensive original idea gas cost described ethereum whitepaper say gas cost ideally supposed stay somewhat constant however gas cost tied blocknumber real implementation block number going nearly fast current market price ethereum gas getting way expensive real term also hardfork situation show really public chain something really contentious happens could fork data could theoretically subject rollback underlying asset class could drop price steeply sheer expense data sheer ocean data waiting stored mean amount data storable chain might need limited may selflimitingethereum might best suited thing need small amount publiclyavailable datastorage onchain like maybe online reputation system data notary project may make sense build blockchain project put u widgetindustry data onto ethereum blockchain example might want info publicly available need get transaction fee way widgetindustryspecific usage might consider proofofstake blockchain model may energyefficient even may represent theoretical weakening consensus security model versus nakamoto proofofstake blockchain projecti suggest embarking new blockchain project consider carefully platform want use look newest stuff afraid explore also consider carefully node incentive attract people download cool node code run best compliment programmer get simply people using code realworld productive itsecret crazy bonus sectiondeploy mainnet captaini back awesome stuff ethereum community sort skipped important detail may noticed write smartcontract test compiling thousand time work deployment localhost test work hell get thing onto mainnet sort ofit sort difficult usually involves run full ethereum node pay someone run one allow access like via vps really inconvenient impatient writing article deadline people time wait new ethereum full node sync feel like blasting away couple hundred gig harddrive space one box crunching ethereum tx fulltime also cheap pay vps lolso used special javascript web kungfu figured make web page box button paste contract click button deploy solidity smartcontract directly mainnet via metamask plugin mainly convenience write article turned surprisingly useful tool put web everyone use first time testing even full smartcontract deployment ethereum mainnet without needing full ethereum node let introduce ethdeployer tool freeware guy free software give u freedom link ethdeployer repo github also simply access live running tectract ethdeployer deploy contract directly need install metamask plugin connect ethereum mainnet first plus need little ether metamask wallet pay mainnet smartcontract deployment fee course tool us browsersolc tool browserified minified loader tool loading javascript version solidity compiler directly clientside browser parsing compiling smartcontract onthefly make tool completely standalone portable meaning need worry installing solc compiler computer need worry installing server either excellent everyone let point code load latest available solidity compiler script src browsersolcminjs type textjavascript script minified browsersolcminjs javascript loading via toplevel indexhtml page make windowbrowsersolc object available lowerlevel react script another simple createreactapp installed deployed minute machine even provided actually useful readmemd github repo showing setupcompiler var outerthis settimeout function consoledebug windowbrowsersolc windowbrowsersolcgetversions function soljsonsources soljsonreleases var compilerversion soljsonreleases key soljsonreleases consolelog browsersolc compiler version compilerversion windowbrowsersolcloadversion compilerversion function c compiler c outerthissetstate statusmessage ready function consolelog solc version loaded compilerversion setupcompiler function wait second windowbrowsersolc object available page load internal getversions loadversion function really much functional solc compiler available u directly fully clientside environment nice completeness show relevant line actually handle compiling deploying contract within javascript function compile deploy button pressed compileanddeploy var result compilercompile thisstatecontracttext optimize var abi jsonparse resultcontracts key resultcontracts interface var bytecode resultcontracts key resultcontracts bytecode var mycontract abi data bytecode function err gasestimate mycontractnew data bytecode gas inflatedgascost function err newcontract thistxhash newcontracttransactionhash thisaddress newcontractaddress familiar object call compilercompile contract text get compiled contract result object extract abi bytecode send new transaction see old familiar estimategas function thrown good measure grab transaction id new contract address display back user contract successfully deployed bam done let see action oh yeah get error message deployment make sure actually check transaction id link contract likely actually deploy succesfully sometimes metamask fails pick deployment success transaction state new contract address return browser environment succesfully still alive make happy secret crazy extra bonus unlocked paid ether gas usd june deploy contract onto ethereum mainnet remember supposed supersimple demo app literally two possible data structs like couple week ago wild still affordable really need deploy contract mainchain often really time guy hope found tutorial superuseful put good use ethdeployer tool dev adventure look forward hearing question comment thanks ryan moleckeryan molecke chief technology officer cto enledger corp highly multidisciplinary academic computational science researcher transitioned world finance technology trading system worked several notable successful financetech startup helped architect trading system brokerageexchanges focused permissioned ledger blockchain system integration tokenizations credit program hold bse computer engineering phd nanoscience microsystems engineering unm
432,Lobsters,education,Education,I made a search engine to show the best paths for learning anything,https://learn-anything.xyz/,made search engine show best path learning anything,,
433,Lobsters,education,Education,Teaching Programming: Proactive vs Reactive,http://manishearth.github.io/blog/2017/05/19/teaching-programming-proactive-vs-reactive/,teaching programming proactive v reactive,idea twitter discussion amazing error message help text clippy clippy michael prey issue,thinking lot day part idea also due twitter discussion teaching thing two nonmutuallyexclusive way approaching problem one proactive teacher decides learning path beforehand executes reactive teacher reacts student trying thing dynamically tailor teaching experience inperson teaching experience mix planning beforehand important whilst teaching tailoring experience student reception thing taught important person mix two get best world situation yay really learn much programming classroom setup sure folk learn basic college year everything learn classroom situation autodidact taken programming course random interesting thing taught know using various source care lot improving situation selfdriven learning similar divide proactive model corresponds reading book doc various people proactively put forward path learning form book tutorial pick one follow reactive model welldeveloped context selfdriven learning programming basically thing make mistake hope googlestackoverflow help lot people learn programming prefer learn programming nice able learn along way long arduous process involving many false start lack sense progress worth term kind experience get mentioned welldeveloped proactive approach still teacher author book teacher may able respond real time able set forth path work hand reactive approach teacher sure random answer internet great form coherent story neither really teacher topic understand yet plenty folk plenty folk approach thing like learning new language reading two page doc diving straight trying stuff language done first language think unfortunate folk prefer approach get benefit teacher reactive approach teacher still tell wrong steer away tarpits misunderstanding get immediate answer guidance look answer stackoverflow get also involves lot patternmatching part student end bad facsimile teacher possible construct better teacher fact example exist wild already elm compiler favorite example amazing error message error message tell wrong sometimes suggest fix help correct potential misunderstanding rust many compiler elm exceptionally good one thing particularly like rust error try rustc explain get terminalfriendly version help text anyway diagnostics basically provide reactive component learning programming cared diagnostics rust long time often remind folk many thing taught doc canshould taught diagnostics especially diagnostics kind soapbox compiler writer guarantee doc read guarantee error message day much time work stuff happy mentor others working improving diagnostics rust recently realize care much cater exactly approach learning programming language going read doc get started try reactive approach help compiler invaluable think space relatively unexplored elm might best diagnostics diagnostics helping user language new experienced great teaching tool newcomer still long way go course compiler like rust even behind one thing like experiment firstclass tool reactive teaching sense clippy already something like clippy look antipatterns try help teach also many thing teaching moment antipatterns example c necessarily antipattern struct thingy result result dothething frob result many c codebases use foo bar potential footgun confuse way sure many compiler warning silence doubling parenthesis though rust antipattern either fn addone mut x x let num addone num num still someone new rust may feel way function mutate argument like num passed use something like mut x actually copy num copy type allows mutate copy within scope function right way make function mutates argument passed byreference would something like fn addone x mut try mut x thing noncopy value get reading moved value error try access num calling addone would help figure wrong potentially error could detect situation provide specific help copy type compile antipattern way work make complete sense context rust variable work something need use time even warn perhaps pedantic clippy mode really pattern want discourage least c example pattern one many people prefer forbid codebase would nice could tell learning programmer hey btw syntax mean sure want explanation ability dismiss error fact even need restrict potential footguns detect various thing learner trying probably mixing string str help writing trait give little tooltip explaining feature beginning remind original office assistant clippy super annoying optin tool ide feature give helpful suggestion could still nice especially strike balance dense annoying sparse useless also reminds welldesigned tutorial mode game game tutorial mode guide set path thing game however tutorial mode give hint even stray beaten path michael tell prey recent example game really feel like fit reactive model prefer student get mold journey get enough helpful hint nudge teacher tool end wasting much time make informed decision proceed learning rustclippy exactly place kind tool tool need ability globally silence hint learned rustclippy linter silence lint code silence globally current user really make sense rustclippy infrastructure writing stuff like ideal prototyping point filed issue discus topic ultimately love see ide feature also like see experimentation department reactive teaching tool like thought idea let know thanks andre llogiq michael gattozzi reviewing
434,Lobsters,education,Education,Statements and State · Crafting Interpreters,http://www.craftinginterpreters.com/statements-and-state.html,statement state crafting interpreter,statement state book work progress let know side effect expression statement statement variable declaration variable expression earlier chapter environment mutate classic term lvalue rvalue cover grammar scope lexical scope static scope statement dynamic scope block scope shadow parentpointer tree implicit variable declaration option enable disable implicit variable,statement state book work progress see mistake find something unclear suggestion please let know follow progress please join mailing list post month worry spam life heart yearned thing name andre breton mad love interpreter far feel le like programming real language like using calculator programming mean building system smaller piece yet way bind name data function compose software without way refer piece support binding interpreter need internal state define variable beginning program use end interpreter hold value variable meantime chapter give interpreter brain process remember state statement go hand hand since statement definition evaluate value need something else useful something called side effect could mean producing uservisible output modifying state interpreter detected later latter make great fit defining variable named entity could make language treat variable declaration expression create binding produce value aware widelyused language scheme seems like contender note let expression evaluated variable bound forgotten define syntax expression chapter define statement produce output print create state var add expression access assign variable finally add block local scope lot stuff one chapter chew one bite time first extend lox grammar statement different expression start two simplest kind expression statement let evaluate expression statement expected exist call function side effect may notice use time c java language time see function method call followed looking one pascal outlier distinguishes procedure function function return value procedure statement form calling procedure function called expression expected statement expression print statement evaluates expression display result user admit weird bake print right language instead making library function concession fact building interpreter one chapter time want able play done make print library function wait machinery defining calling function could witness side effect note modicum defensiveness basic python dedicated print statement real language granted python remove print statement new syntax mean new grammar rule chapter finally gain ability parse entire lox script since lox imperative dynamicallytyped language top level script simply list statement new rule program statement eof statement exprstmt printstmt exprstmt expression printstmt print expression first rule program starting point grammar represents complete lox script repl entry program list statement followed special end file token mandatory end token ensures parser consumes entire input silently ignore erroneous unconsumed token end script right statement two case two kind statement described fill later chapter following one next step turning grammar something store tree place grammar expression statement allowed operand say always expression never statement body loop always statement since two syntax disjoint need single base class inherit splitting separate class hierarchy enables java compiler help u find dumb mistake like passing statement java method expects expression mean new base class statement elder u use cryptic name stmt great foresight designed little ast metaprogramming script anticipation passed expr parameter defineast add another call defining stmt subclass really foresight wrote code whole book started slicing thing chapter scrawling prose unary token operator expr right toolgenerateastjava main defineast outputdir stmt arraysaslist expression expr expression print expr expression toolgenerateastjava main run script behold new stmtjava file syntax tree class need expression print statement forget add ide project makefile whatever parser parse method par return single expression temporary hack get last chapter running grammar correct starting rule program turn parse real deal loxparserjava method parse replace line list stmt parse list stmt statement new arraylist isatend statementsadd statement return statement loxparserjava method parse replace line code catching parseerror exception put better parse error handling place soon add support additional statement type par series statement many find hit end input pretty direct translation program rule recursive descent style must also chant minor prayer java verbosity god since using arraylist package comcraftinginterpreterslox loxparserjava import javautilarraylist import javautillist loxparserjava program list statement parse one statement using loxparserjava add expression private stmt statement match print return printstatement return expressionstatement loxparserjava add expression little bare bone fill statement type later determines specific statement rule matched looking current token print token mean obviously print statement next token look like known kind statement assume must expression statement typical final fallthrough case parsing statement since hard proactively recognize expression first token statement kind get method first print loxparserjava add statement private stmt printstatement expr value expression consume semicolon expect value return new stmtprint value loxparserjava add statement since already matched consumed print token need par subsequent expression consumes terminating semicolon emits syntax tree parser writer prefix method name finish called corresponding grammar rule already consumed big complex parser help maintainer keep track state token stream method called lox little parser bother match print statement must one loxparserjava add printstatement private stmt expressionstatement expr expr expression consume semicolon expect expression return new stmtexpression expr loxparserjava add printstatement similar previous method par expression followed semicolon wrap expr stmt return running previous couple chapter microcosm working way front end parser produce statement syntax tree next final step interpret expression use visitor pattern new visitor interface stmtvisitor implement since statement base class add list interface interpreter implement loxinterpreterjava replace line class interpreter implement exprvisitor object stmtvisitor void void interpret expr expression loxinterpreterjava replace line unlike expression statement produce value return type visit method void object two statement type need visit method easiest expression statement capitalized void might unfamiliar java let use lowercase void generic type argument obscure reason type erasure stack instead separate void type specifically use sort like boxed void integer int one value null never used anything return type visit method visitor pattern loxinterpreterjava add evaluate override public void visitexpressionstmt stmtexpression stmt evaluate stmtexpression return null loxinterpreterjava add evaluate evaluates inner expression using existing evaluate method discard value appropriately enough using java expression statement call evaluate return null java requires satisfy special capitalized void return type weird print statement visit method much different loxinterpreterjava add visitexpressionstmt override public void visitprintstmt stmtprint stmt object value evaluate stmtexpression systemoutprintln stringify value return null loxinterpreterjava add visitexpressionstmt discarding expression value convert string using stringify method introduced last chapter dump stdout interpreter ready visit statement work feed first modify old interpret method interpreter class accept list word program loxinterpreterjava method interpret replace line void interpret list stmt statement try stmt statement statement execute statement catch runtimeerror error loxruntimeerror error loxinterpreterjava method interpret replace line replaces old code took single expression new code relies tiny helper method loxinterpreterjava add evaluate private void execute stmt stmt stmtaccept loxinterpreterjava add evaluate statement analogue evaluate method expression since working list need let java know package comcraftinginterpreterslox loxinterpreterjava import javautillist class interpreter implement exprvisitor object stmtvisitor void loxinterpreterjava main lox class still trying parse single expression pas interpreter fix parsing line like parser parser new parser token loxloxjava run replace line list stmt statement parserparse stop syntax error loxloxjava run replace line replace call interpreter haderror return loxloxjava run replace line interpreterinterpret statement loxloxjava run replace line basically plumbing new syntax ok fire interpreter give try point worth sketching little lox program text file run script something like print one print true print almost look like real program note repl requires enter full statement instead simple expression forget semicolon statement start working state get complexity lexical scoping start easiest kind variable globals requires two new construct variable declaration statement brings new variable world var beverage espresso creates new binding associate name beverage value string espresso done variable expression access binding identifier beverage used expression look value bound name return print beverage espresso later add assignment block scope enough get started global state get bad rap sure lot global mutable hard maintain large program good software engineering minimize much use slapping together simple programming language heck even learning first language flat simplicity global variable help first language basic though outgrew eventually nice wrap head around scoping rule could make computer fun stuff work implementation front back starting syntax variable declaration statement different statement going split statement grammar two handle grammar restricts kind statement allowed clause control flow else branch statement body single statement statement allowed one declares name ok monday print ugh already monday var beverage espresso could allow latter confusing scope beverage variable persist statement value day monday variable exist day code like weird c java friend disallow two level precedence statement place statement inside block top kind statement including declaration others allow higher precedence statement declare name analogy block statement stuff series statement inside pair curly brace work sort like parenthesis expression block statement higher precedence level used anywhere like clause statement statement contains lower precedence allowed declare variable name inside block curlies let escape back full statement grammar place statement allowed accommodate distinction add another rule kind statement declare name program declaration eof declaration vardecl statement statement exprstmt printstmt declaration statement go new declaration rule right variable later include function class place declaration allowed also allows nondeclaring statement declaration rule fall statement obviously declare stuff top level script program route new rule rule declaring variable look like vardecl var identifier expression like statement start leading keyword case var identifier token name variable declared followed optional initializer expression finally put bow semicolon access variable define new kind primary expression primary true false nil number string expression identifier identifier clause match single identifier token understood name variable accessed new grammar rule get corresponding syntax tree ast generator add new statement tree variable declaration expression expr expression print expr expression toolgenerateastjava main add previous line var token name expr initializer toolgenerateastjava main add previous line store name token know declaring along initializer expression initializer null add expression node accessing variable literal object value unary token operator expr right toolgenerateastjava main add previous line variable token name toolgenerateastjava main add previous line simply wrapper around token variable name always forget run ast generator script get updated exprjava stmtjava file parse variable statement need shift around code make room new declaration rule grammar top level program list declaration entrypoint method parser becomes list stmt parse list stmt statement new arraylist isatend loxparserjava parse replace line statementsadd declaration return statement loxparserjava parse replace line call new method loxparserjava add expression private stmt declaration try match var return vardeclaration return statement catch parseerror error synchronize return null loxparserjava add expression hey remember way back earlier chapter put infrastructure place error recovery finally ready hook declaration method method call repeatedly parsing series statement block script right point synchronize parser go panic mode whole body method wrapped try block catch exception thrown parser begin error recovery get back trying parse beginning next statement declaration real parsing happens inside try block first look see variable declaration looking leading var keyword bubble higher precedence statement method recall statement try parse expression statement statement match expression report syntax error parse expression current token chain call ensures report error valid declaration statement parsed parser match var token branch loxparserjava add printstatement private stmt vardeclaration token name consume identifier expect variable name expr initializer null match equal initializer expression consume semicolon expect variable declaration return new stmtvar name initializer loxparserjava add printstatement always recursive descent code follows grammar rule already matched var token next requires consumes identifier token variable name see token know initializer expression par otherwise leaf initializer null finally consumes required semicolon end statement get wrapped stmtvar syntax tree node groovy parsing variable expression even easier primary look identifier token return new exprliteral previous literal loxparserjava primary match identifier return new exprvariable previous match leftparen loxparserjava primary give u working front end declaring using variable left feed interpreter get need talk variable live memory binding associate variable value need stored somewhere ever since lisp folk invented parenthesis data structure called environment like imagine environment literally sylvan wonderland variable value frolic think like map key variable name value variable uh value fact implement java could stuff map code manage right interpreter since form nicely delineated concept pull class start new file add java call map hashmaps language call hash table dictionary python c hash ruby perl table lua associative array php way back known scatter table loxenvironmentjava create new file package comcraftinginterpreterslox import javautilhashmap import javautilmap class environment private final map string object value new hashmap loxenvironmentjava create new file java map store binding us bare string key token token represents unit code specific place source text come looking variable identifier token name refer variable ignoring scope using string ensures token refer map key two operation need support first variable definition bind new name value loxenvironmentjava class environment void define string name object value valuesput name value loxenvironmentjava class environment exactly brain surgery made one interesting semantic choice add key map check see already present mean program work var print var print variable statement define new variable also used redefine existing variable could choose make error instead user may intend redefine existing variable mean probably would used assignment var making redefinition error would help find bug however interacts poorly repl middle repl session nice mentally track variable already defined could allow redefinition repl script user learn two set rule code copied pasted one form might work rule variable scoping doubt scheme scheme folk probably spent time thinking variable scope ever main goal scheme introduce lexical scoping hard go wrong follow footstep scheme allows redefining variable top level keep two mode consistent allow least global variable variable exists need way look class environment private final map string object value new hashmap loxenvironmentjava class environment object get token name valuescontainskey namelexeme return valuesget namelexeme throw new runtimeerror name undefined variable namelexeme void define string name object value loxenvironmentjava class environment little semantically interesting variable found simply return value bound choice lox pretty lax last option little permissive making syntax compile time like smart choice using undefined variable bug sooner detect mistake better problem using variable referring refer variable chunk code without immediately evaluating chunk code wrapped inside function make static error mention variable declared becomes much harder define recursive function could accommodate single function call declaring function name examine body help mutually recursive procedure call consider fun isodd n n return false return iseven n fun iseven n n return true return isodd n granted probably efficient way tell number even odd mention bad thing happen pas noninteger negative number bear iseven function defined time looking body isodd called swap order two function isodd defined looking iseven body staticallytyped language like java c solve specifying top level program sequence imperative statement instead program set declaration come simultaneously implementation declares name looking body function older language like c pascal work like instead force add explicit forward declaration declare name fully defined concession limited computing power time wanted able compile source file one single pas text compiler gather declaration first processing function body since making static error make recursive declaration difficult defer error runtime ok refer variable defined long evaluate reference let program even odd number work get runtime error print var late type error expression evaluation code report runtime error throwing exception exception contains variable token tell user code messed interpreter class get instance new environment class class interpreter implement exprvisitor object stmtvisitor void loxinterpreterjava class interpreter private environment environment new environment void interpret list stmt statement loxinterpreterjava class interpreter store field directly interpreter variable stay memory long interpreter still running two new syntax tree two new visit method first declaration statement loxinterpreterjava add visitprintstmt override public void visitvarstmt stmtvar stmt object value null stmtinitializer null value evaluate stmtinitializer environmentdefine stmtnamelexeme value return null loxinterpreterjava add visitprintstmt variable initializer evaluate another choice make could made syntax error parser requiring initializer language though feel little harsh lox could make runtime error let define uninitialized variable accessed assigning runtime error would occur bad idea dynamically typed language instead keep simple say lox set variable nil explicitly initialized var print nil thus initializer set value null java representation lox nil value tell environment bind variable value next evaluate variable expression loxinterpreterjava add visitunaryexpr override public object visitvariableexpr exprvariable expr return environmentget exprname loxinterpreterjava add visitunaryexpr simply forward environment heavy lifting make sure variable defined got rudimentary variable working try var var b print b reuse code yet start build program reuse data possible create language variable let reassign mutate haskell one example sml support mutable reference reassigned rust steer away mutation requiring mut modifier enable assignment mutating variable side effect name suggests language folk think side effect dirty inelegant code pure math produce unchanging act divine creation grubby automaton beat blob data shape one imperative grunt time find delightful group people pride dispassionate logic also one resist emotionallyloaded term work pure side effect lazy persistent firstclass higherorder lox austere lox imperative language mutation come territory adding support assignment require much work global variable already support redefinition machinery mainly missing explicit assignment notation little syntax complex might seem like cderived language assignment expression statement c lowest precedence expression form mean rule slot expression equality next lowest precedence expression language like pascal python go assignment statement expression assignment assignment identifier assignment equality say assignment either identifier followed expression value equality thus expression later assignment get complex add property setter object like instancefield value easy part adding new syntax tree node defineast outputdir expr arraysaslist toolgenerateastjava main assign token name expr value binary expr left token operator expr right toolgenerateastjava main token variable assigned expression new value run astgenerator get new exprassign class swap body parser existing expression method match updated rule private expr expression loxparserjava expression replace line return assignment loxparserjava expression replace line get tricky single token lookahead recursive descent parser see far enough tell parsing assignment gone lefthand side stumbled onto might wonder even need know parsing expression finished parsing left operand difference lefthand side assignment expression evaluates value sort pseudoexpression evaluates thing assign var value second line evaluate would return string figure variable refers know store righthand side expression value classic term two construct lvalue rvalue expression seen far produce value rvalues lvalue evaluates storage location assign fact name come assignment expression lvalues appear left side assignment rvalues right lvalue evaluated like normal expression syntax tree must reflect exprassign node token lefthand side expr problem parser know parsing lvalue hit complex lvalue may occur many token later makelist headnext node fact since receiver field assignment expression expression long want make may take unbounded number token lookahead find single token lookahead use little trick look like loxparserjava add expressionstatement private expr assignment expr expr equality match equal token equal previous expr value assignment expr instanceof exprvariable token name exprvariable expr name return new exprassign name value error equal invalid assignment target return expr loxparserjava add expressionstatement code parsing assignment expression look similar binary operator like parse lefthand side expression higher precedence find parse righthand side wrap assignment expression tree node report error lefthand side valid assignment target throw parser confused state need go panic mode synchronize one slight difference binary operator loop build sequence operator since assignment rightassociative instead recursively call assignment parse righthand side trick right create assignment expression node look lefthand side expression figure kind assignment target convert rvalue expression node lvalue representation trick work turn every valid assignment target happens also valid syntax normal expression consider complex field assignment like still use trick even assignment target valid expression define cover grammar looser grammar accepts valid expression assignment target syntax hit report error lefthand side within valid assignment target grammar conversely hit report error lefthand side valid expression newpoint x lefthand side assignment could also work valid expression first example set field second get mean parse lefthand side expression fact produce syntax tree turn assignment target lefthand side expression valid assignment target fail syntax error ensures report error code like remember way back parsing chapter said represent parenthesized expression syntax tree need later need keep track distinguish ok error right valid target simple variable expression add field later end result trick assignment expression tree node know assigning expression subtree value assigned single token lookahead backtracking new syntax tree node interpreter get new visit method loxinterpreterjava add visitvarstmt override public object visitassignexpr exprassign expr object value evaluate exprvalue environmentassign exprname value return value loxinterpreterjava add visitvarstmt obvious reason similar variable declaration evaluates righthand side get value store named variable instead using define environment call new method loxenvironmentjava add get void assign token name object value valuescontainskey namelexeme valuesput namelexeme value return throw new runtimeerror name undefined variable namelexeme loxenvironmentjava add get key difference assignment definition assignment allowed create new variable term implementation mean runtime error key already exist environment variable map last thing visit method return assigned value assignment expression nested inside expression like var print interpreter create read modify variable sophisticated early basic global variable simple writing large program two chunk code accidentally step state fun want local variable mean time scope maybe little better unlike old basic lox handle variable name longer two character scope region name map certain entity multiple scope enable name refer different thing different context house bob usually refers maybe town know different bob name different entity based use lexical scope le commonly heard static scope specific style scope text program show scope begin end lox modern language variable lexically scoped see expression us variable figure variable declaration refers statically reading code lexical come greek lexikos mean related word use programming language usually mean thing figure source code without execute anything lexical scope came onto scene algol earlier language often dynamically scoped computer scientist back believed dynamic scope faster execute today thanks early scheme hacker know true anything opposite dynamic scope variable life corner emacs lisp default dynamic scope variable binding macro clojure provides widelydisliked statement javascript turn property object dynamicallyscoped variable example var first print first var second print second two block variable declared tell looking code use first print refers first second one refers second contrast dynamic scope know name refers execute code lox dynamically scoped variable method field object dynamically scoped class saxophone play print careless whisper class golfclub play print fore fun playit thing thingplay playit call thingplay know hear careless whisper fore depends whether pas saxophone golfclub function know runtime scope environment close cousin former theoretical concept latter machinery implement interpreter work way code syntax tree node affect scope change environment cish syntax like lox scope controlled curlybraced block called block scope var block print error beginning block introduces new local scope scope end execution pass closing variable declared inside block disappear first cut implementing block scope might work like visit statement inside block keep track variable declared last statement executed tell environment delete variable would work previous example remember one motivation local scope block code one corner program interfere one check loud var volume silence volume calculate size cuboid var volume print volume look block calculate volume cuboid using local declaration volume block exit interpreter delete global volume variable right exit block remove variable declared inside block variable name declared outside block different variable get touched local variable name variable enclosing scope shadow outer one code inside block see hidden shadow cast inner one still enter new block scope need preserve variable defined outer scope still around exit inner block defining fresh environment block containing variable defined scope exit block discard environment restore previous one also need handle enclosing variable shadowed var global outside var local inside print global local global life outer global environment local defined inside block environment print statement variable scope order find interpreter must search current innermost environment also enclosing one implement chaining environment together environment reference environment immediately enclosing scope look variable walk chain innermost find variable starting inner scope make local variable shadow outer one interpreter running environment form linear list object consider full set environment created entire execution outer scope may multiple block nested within point outer one giving treelike structure though one path tree exists time boring name parentpointer tree much prefer evocative cactus stack add block syntax grammar beef environment class support nesting first give environment reference enclosing one class environment loxenvironmentjava class environment final environment enclosing private final map string object value new hashmap loxenvironmentjava class environment field need initialized add couple constructor loxenvironmentjava class environment environment enclosing null environment environment enclosing thisenclosing enclosing loxenvironmentjava class environment noargument constructor global scope environment end chain constructor creates new local scope nested inside given outer one touch define new variable always declared current innermost scope variable lookup assignment work existing variable need walk chain find first lookup return valuesget namelexeme loxenvironmentjava get enclosing null return enclosingget name throw new runtimeerror name undefined variable namelexeme loxenvironmentjava get variable found scope simply try enclosing one turn thing recursively ultimately walk entire chain assignment roll way likely faster iteratively walk chain think recursive solution prettier something much faster clox valuesput namelexeme value return loxenvironmentjava assign enclosing null enclosingassign name value return throw new runtimeerror name loxenvironmentjava assign variable environment check outer one recursively environment nest ready add block language behold grammar statement exprstmt printstmt block block declaration block possibly empty series statement declaration surrounded curly brace block statement appear anywhere statement allowed syntax tree node look like defineast outputdir stmt arraysaslist toolgenerateastjava main block list stmt statement expression expr expression toolgenerateastjava main contains list statement inside block parsing straightforward like statement detect beginning block leading case statement method add always forget run generateastjava match print return printstatement loxparserjava statement match leftbrace return new stmtblock block return expressionstatement loxparserjava statement real work happens loxparserjava add expressionstatement private list stmt block list stmt statement new arraylist check rightbrace isatend statementsadd declaration consume rightbrace expect block return statement loxparserjava add expressionstatement create empty list parse statement add list reach end block marked closing note loop also explicit check isatend careful avoid infinite loop even parsing invalid code user forgot closing parser need get stuck block return raw list statement leaving statement wrap stmtblock look little odd way reuse block later parsing function body want body wrapped stmtblock syntax semantics add another visit method interpreter loxinterpreterjava add execute override public void visitblockstmt stmtblock stmt executeblock stmtstatements new environment environment return null loxinterpreterjava add execute execute block create new environment block scope pas method loxinterpreterjava add execute void executeblock list stmt statement environment environment environment previous thisenvironment try thisenvironment environment stmt statement statement execute statement finally thisenvironment previous loxinterpreterjava add execute executes list statement context given environment environment field interpreter always pointed global one field represents current environment environment corresponds innermost scope containing code executed execute code within given scope method update interpreter environment field visit statement restores previous value always good practice java restores previous environment using finally clause way get restored even exception thrown manually changing restoring mutable environment field feel inelegant another classic approach explicitly pas environment parameter visit method change environment pas different one recurse tree restore old one since new one life java stack implicitly discarded interpreter return block visit method considered jlox kind tedious verbose adding environment parameter every single visit method surprisingly need order fully support local variable nesting shadowing go ahead try var global var b global b var c global c var outer var b outer b var inner print print b print c print print b print c print print b print c little interpreter remember thing inching closer something resembling fullfeatured programming language repl longer support entering single expression automatically printing result value drag add support repl let user type statement expression enter statement execute enter expression evaluate display result value maybe want lox little explicit variable initialization instead implicitly initializing variable nil make runtime error access variable initialized assigned initializers var var b assigned print ok assigned first print b error following program var var print expect think analogous code language familiar think user expect lox distinct syntax declaring new variable assigning existing one language collapse assignment syntax assigning nonexistent variable automatically brings called implicit variable declaration exists python ruby coffeescript among others javascript explicit syntax declare variable also create new variable assignment visual basic option enable disable implicit variable syntax assign create variable language must decide happens clear behavior user intends particular language must choose implicit declaration interacts shadowing scope implicitly declared variable go python assignment always creates variable current function scope even variable name declared outside function ruby avoids ambiguity different naming rule local global variable however block like closure like block c ruby scope still problem assignment ruby assigns existing variable outside current block one name otherwise creates new variable current block scope coffeescript take ruby many way similar explicitly disallows shadowing saying assignment always assigns variable outer scope one way outermost global scope otherwise creates variable current function scope javascript assignment modifies existing variable enclosing scope found implicitly creates new variable global scope main advantage implicit declaration simplicity le syntax declaration concept learn user start assigning stuff language figure older statically typed language like c benefit explicit declaration give user place tell compiler type variable much storage allocate dynamically typed garbage collected language really necessary get away making declaration implicit feel little scripty know mean good idea implicit declaration problem user may intend assign existing variable may misspelled interpreter know go ahead silently creates new variable variable user wanted assign still old value particularly heinous javascript typo create global variable may turn interfere code j ruby coffeescript use presence existing variable outer determine whether assignment creates new variable assigns existing one mean adding new variable surrounding scope change meaning existing code local variable may silently turn assignment new outer variable python may want assign variable outside current function instead creating new variable current one time language know implicit variable declaration ended adding feature complexity deal problem implicit declaration global variable javascript universally considered mistake today strict mode disables make compile error python added global statement let explicitly assign global variable within function later functional programming style nested function became popular added similar nonlocal statement assign variable enclosing function ruby extended block syntax allow declaring certain variable explicitly local block even name exists outer scope given think simplicity argument mostly lost argument implicit declaration right default personally find le compelling opinion implicit declaration made sense year past scripting language heavily imperative code pretty flat programmer got comfortable deep nesting functional programming closure become much common want access variable outer scope make likely user run tricky case clear whether intend assignment create new variable reuse surrounding one prefer explicitly declaring variable lox requires
435,Lobsters,education,Education,Code what? To do what? And why?,https://theoutline.com/post/1611/the-long-slow-rotten-march-of-progress,code,former coal miner collision twice south africa sam kris,new world dragging sticky stinking swamp answer problem learn code old certainty gone natural world dying sun looked u blacked endless swarm automated delivery drone longer expect forty year drudgery spluttering death good oldfashioned bluecollar pneumoconiosis make life hating bos instead new form labour discipline demand bos flesh already obsolete answer survive coming era automation bring faster announce apocalypse learn code add army programmer building appier tomorrowkentucky startup training former coal miner software engineer across country boot camp teaching computer language longterm unemployed fee land first job grotesque economic structure society failing meet people need quite leap blame people affected right skill root utopian promise prejudice stupidity churn beneath vague signifying human language wiped away world coming expressed blank mathematical intricacy code age race gender matter belong age object learn code fine something missing code new orleans month collision conference america fastestgrowing tech expo vast temple infinitarian demiurge frantically creating world understand discovered answer nobody really know roundtable somehow ended chairing suggested result largescale automation coding would become universal everyone would chef programmer garbage man programmer work go machine new programmer feed unspoken answer going collision beneath titanic upper reach tech industry squat little mogul sit vast pile money ramble idly empowering everyone teems underworld tiny startup desperate next amazon next uber knowing fail bankruptcy penury death conference like collision techcrunch disrupt web summit europe predead make bleating gasp lifecode desperation everywhere exhibitor make lunging grab passersby wearing investor lanyard proffer sticker goody scream attention conventionstandard sign put kindly make lot sense giving tool need activate manage influencer marketing relationship promise one leverage known find manage understand data entices another gleaming technological future look lot like new golden age hucksterism networking sordid stupid business business pressing palm arrogant prick genuflecting idiot entirely unchanged fact time apps code rather dog food dishwashersnone startup anything new interesting surprising often anyone really good idea actually get code sloshing around congealing apps firm exist simply exist uber dog grubhub clothes patreon sex slack death paypal god whatsapp spaceless nonvoid blind universe expands constant recombination wornout element company make useless product help company make useless product help company make useless product startup spend ten thousand name branding even come product see anyone might want called innovation actually represents culture pile garbled detritus old lieu creating anything new morbid economic order drowning surplus liquidity willing invest bubble come alongcapitalism know surplus ruthlessly drain immiserated lowtech manufacturing base global south snatch away firstworld population tapping computer code edge redundancy nowhere better put executive goldplated toilet soil breed monster new parasitic product scurry like first worm worldorder dying body internet thing meant future mostly look like farcical recomplication already juice press need scan qr code connect wifi exert functionally amount pressure pair human hand wine bottle connects internet dispenses proprietary wine light bulb burn flicker maniacally installed driver properlyfor lucky company selling moronically smart object ludicrous million investor funding good market volatile government issuing negativeyield bond nowhere else ruling class extra money go time moving u forward progress tech boom first trembling step new era growth dynamism halo rot spreading globethis collision first year new orleans previously held la vega new orleans advocate put new orleans comingofage tech moment tech really future conference would seemed make sense vega depthless city shimmering surface desert local history blown away nuclear test aching story specie slit ribbon reassembled themed hotel casino blasphemy vision future utopian dystopian describe crystal sphere endless uninhibited enjoyment cannibal wasteland splattered excess sadism power different way describing la vega new orleans different seems swamped past seeping stink magiclouisiana highest incarceration rate world nearly twice united state whole black people even higher per hundred thousand imprisoned comparison number south africa height apartheid louisiana state penitentiary plantation still inmate black pick cotton field watched guard white baton rouge cooking cleaning state capitol carried prisoner others posted domestic work governor mansion new orleans tourist offered plantation tour took one feel gentle breeze southern hospitality promotional material promised tour take back glory old south get relive said bygone era wander house guide lingered portrait commandant love passion glory rich sepia tragedy downfall slave quarter recreated endless rain outside nobody mentioned namestech halo rot spreading globeand course statue new orleans confederate memorial taken without fight forty block north convention saw clump heavily armed men duck dynasty outfit standing around statue jefferson davis stood jefferson davis trail flanked jefferson davis parkway trading insult opposing crowd communist antiracists neoconfederates belligerent gruff everything possible radiate image untroubled hypermasculinity also abjectly cowardly people ever seen life one point one protester fired silly string harmlessly towards man head responded spraying bear mace wide arc everyone within range time rugged individualist quavered police help watched one man bearded slung waist get spit demonstrator officer yelled got aid got aid assaulted people said condoned slavery course defending heritage fighting erasure history past ruthlessly trod underfoot downtown collision stamped blind soulless technical inhumanity represented world lost mint julep hospitality loyalty pride hatred line go symbol make u feel proud make u feel home give u pleasant feeling could possibly evil except exactly mass organized evil never cold interstellar madness warm cozy home mother love child people whipped death outsidethe past need saved erased exists something continually produced around u present haitian historian michelrolph trouillot writes true false past choose acknowledge lostcause myth language bygone era forgotten glory relegated statue recently still standing past way hyperventilation entrepreneurship innovation try project dismal software future neither true apps statue belong contested present statue jefferson davis relic lost confederate past erected fifty year civil war past taken past died moment bussing tourist scene horror bring back fact prisoner louisiana slave work barely improved wage anachronism need updated product power relation exist right represent exhaustion present inability turn something different century ago shining new world programming startup represents exactly thingcollision promised roll conventioncenter carpet lanyardbased class system bleeding swamp mississippi trapping old ghost injustice digital gloss corporateculture banality behind networkready grin digital sibyl beaming smart appliance ai interface dozen stage could see something familiar battle jefferson davis parkway rabid determination keep building broken world need tech revolution need learn code need long last something finally change sam kris freelance writer
436,Lobsters,education,Education,Apple Launches App Development Curriculum for U.S. High School and College Students,https://www.macrumors.com/2017/05/24/apple-launches-swift-app-curriculum-students/,apple launch app development curriculum u high school college student,announced according one study advanced manufacturing fund,apple today announced new app development curriculum designed student want pursue career fastgrowing app economy curriculum come free download ibooks store called app development swift fullyear course aim teach student element app design using swift apple increasingly popular programming language apple said student undertake course learn code design fully functioning apps gaining critical job skill software development information technology process beginning fall six community college system serving nearly student across united state among first offer curriculum according apple participating college include alabama community college system columbus state community college harrisburg area community college houston community college mesa community college san mateo community college district seen firsthand impact coding individual u economy whole app economy software development among fastestgrowing job sector america thrilled providing educator student tool learn coding said tim cook apple ceo community college play critical role helping student achieve dream hope course open door people age background pursue love since launch swift consistently promoted apple ideal kid keen code gentle learning curve demonstrated swift playground app teach child use language new curriculum includes comprehensive student guide playground exercise mini project quiz well teacher guide grading rubric solution code keynote presentation swift become one soughtafter skill freelance developer experiencing percent yearonyear growth according one study earlier month apple announced creation billion advanced manufacturing fund focused creating job u throughout supply chain apple said new swift coding curriculum another example commitment economic development help create even career opportunity student across country
437,Lobsters,education,Education,AVATAR Project - Final Edition,https://blindseeker.com/AVATAR,avatar project final edition,,
438,Lobsters,education,Education,Memcached-Backed Content Infrastructure at Khan Academy,http://engineering.khanacademy.org/posts/memcached-fms.htm,memcachedbacked content infrastructure khan academy,redirecting http blogkhanacademyorgmemcachedbackedcontentinfrastructure,redirecting http blogkhanacademyorgmemcachedbackedcontentinfrastructure
439,Lobsters,education,Education,The Perils of JavaSchools (2005),https://www.joelonsoftware.com/2005/12/29/the-perils-of-javaschools-2/,peril javaschools,course structure interpretation computer program online writes mapreduce skynet supercomputer blub programmer segmentation fault pdf int integer summer internship,lazy kid whatever happened hard work sure sign descent senility bitchin moanin kid day anything hard lucky lived three month brown paper bag septic tank get six morning clean bag eat crust stale bread go work mill fourteen hour day weekin weekout got home dad would thrash u sleep belt monty python flying circus four yorkshiremen kid learned program punched card made mistake modern feature like backspace key correct threw away card started started interviewing programmer would generally let use language wanted solve coding problem gave time chose c nowadays tend choose java get wrong nothing wrong java implementation language wait minute want modify statement claiming particular article anything wrong java implementation language lot thing wrong wait different article instead like claim java generally hard enough programming language used discriminate great programmer mediocre programmer may fine language work today topic would even go far say fact java hard enough feature bug one problem may brash humble experience two thing traditionally taught university part computer science curriculum many people never really fully comprehend pointer recursion used start college course data structure linked list hash table whatnot extensive use pointer course often used weedout course hard anyone handle mental challenge c degree would give good thing thought pointer hard wait try prove thing fixed point theory kid great high school writing pong game basic apple ii would get college take compsci data structure course hit pointer business brain would totally explode next thing knew majoring political science law school seemed like better idea seen kind figure dropout rate c usually university tend see waste think necessary culling people going happy successful programming career hard course many young c student course learned functional programming including recursive programming mit set bar high course creating required course textbook abelson sussman structure interpretation computer program used dozen even hundred top c school de facto introduction computer science watch older version lecture online difficulty course astonishing first lecture learned pretty much scheme already introduced fixedpoint function take another function input struggled course penn watched many student make material hard wrote long sob email professor saying fair somebody penn must listened one complainer course taught java wish listened therein lie debate year whinging lazy c undergrad like combined complaint industry c major graduating american university taken toll last decade large number otherwise perfectly good school gone java hip recruiter use grep evaluate resume seem like best nothing hard enough java really weed programmer without part brain pointer recursion dropout rate lower computer science department student bigger budget well lucky kid javaschools never going get weird segfaults trying implement pointerbased hash table never going go stark raving mad trying pack thing bit never get head around purely functional program value variable never change yet change time paradox need part brain get major one oldfashioned curmudgeon like four yorkshiremen bragging tough survive hard stuff heck latin greek required subject college served purpose sort considered obvious requirement educated people sense argument different argument made prolatin people four latin train mind train memory unraveling latin sentence excellent exercise thought real intellectual puzzle good introduction logical thinking writes scott barker find single university requires latin pointer recursion latin greek computer science freely admit programming pointer needed code written today fact downright dangerous production code ok fine functional programming used much practice agreed still important exciting programming job without pointer example never able work linux kernel understand line code linux indeed operating system without really understanding pointer without understanding functional programming invent mapreduce algorithm make google massively scalable term map reduce come lisp functional programming mapreduce retrospect obvious anyone remembers programming class purely functional program side effect thus trivially parallelizable fact google invented mapreduce microsoft say something microsoft still playing catch trying get basic search feature work google moved next problem building skynethhhhhh world largest massively parallel supercomputer think microsoft completely understands far behind wave beyond primafacie importance pointer recursion real value building big system requires kind mental flexibility get learning mental aptitude need avoid weeded course taught pointer recursion require certain ability reason think abstraction importantly view problem several level abstraction simultaneously thus ability understand pointer recursion directly correlated ability great programmer nothing alljava c degree really weed student lack mental agility deal concept employer seen java school started churning quite c graduate simply smart enough work programmer anything sophisticated yet another java accounting application although manage squeak newlydumbeddown coursework student would never survive mit c yale frankly one reason employer c degree mit yale carry weight c degree duke recently went alljava u penn replaced scheme ml java trying teach class nearly killed friend want hire smart kid duke penn lot harder figure used able tell smart kid could rip recursive algorithm second implement linkedlist manipulation function using pointer fast could write whiteboard javaschool grad tell struggling problem undereducated struggling problem actually special part brain going need great programming work paul graham call blub programmer bad enough javaschools fail weed kid never going great programmer school could justifiably say problem industry least recruiterswhousegrep surely clamoring java taught javaschools also fail train brain kid adept agile flexible enough good software design mean oo design spend countless hour rewriting code rejiggle object hierarchy fret faux problem like hasa v isa need training think thing multiple level abstraction simultaneously kind thinking exactly need design great software architecture may wondering teaching object oriented programming oop good weedout substitute pointer recursion quick answer without debating oop merit hard enough weed mediocre programmer oop school consists mostly memorizing bunch vocabulary term like encapsulation inheritance taking multiplechoice quizzicles difference polymorphism overloading much harder memorizing famous date name history class oop pose inadequate mental challenge scare away firstyear student struggle oop problem program still work sort hard maintain allegedly struggle pointer program produce line segmentation fault idea going stop take deep breath really try force mind work two different level abstraction simultaneously recruiterswhousegrep way ridiculed good reason never met anyone scheme haskell c pointer pick java two day create better java code people five year experience java try explaining average hr drone c mission c department vocational school job train people work industry community college government retraining program displaced worker tell supposed giving student fundamental tool live life preparing first week job right still c proof recursion algorithm recursion language lambda calculus operating system pointer compiler lambda calculus bottom line javaschool teach c teach scheme really teaching computer science either useless concept function currying may real world obviously prereq c grad school understand professor curriculum committee c school allowed program dumbed point produce working programmer even produce c grad student might get phd compete job oh wait never mind maybe understand actually go back research discussion took place academia great java shift notice biggest concern whether java simple enough use teaching language god thought trying dumb curriculum even spoon feed everything student let ta take test nobody switch american study anyone supposed learn anything curriculum carefully designed make everything easier already seems task force underway pdf figure simple subset java taught student producing simplified documentation carefully hide crap tender mind worry little head class need evereasier c problem set sympathetic interpretation c department enthusiastic dumb class leaf time teach actual c concept need spend two whole lecture unconfusing student difference say java int integer well case perfect answer scheme teaching language simple entire language taught bright student ten minute spend rest semester fixed point feh going back one zero one lucky bastard got zero junior college rip recursive algorithm second implement linkedlist manipulation function using pointer fast write whiteboard check summer internship new york city application due february
440,Lobsters,education,Education,'Techniques' section added to Learn TLA+,https://www.learntla.com/techniques/,technique section added learn tla,technique,technique tla powerful tool provide lot guidance write good specification section cover problem might run spec well way around
441,Lobsters,education,Education,Flexbox Froggy,https://flexboxfroggy.com/,flexbox froggy,,
443,Lobsters,education,Education,How do self-taught developers actually get jobs?,http://brianknapp.me/how-do-self-taught-developers-actually-get-jobs/,selftaught developer actually get job,answer code career genius,selftaught developer actually get job year old coding since main focus java managed score ap computer science course pretty wellversed java eg syntax major class guijframe etc decent feel like lack lot skill need actually able market eg database work one use curious others learn thing plan go college degree software development beginning get frustrating feeling like go college order employable course taking thing answer believe looking wrong believe need take course someone else tell teach answer fundamentally selftaught programmer something different self taught programmer lot common self taught guitar player know ever played guitar explain selftaught guitar player might learn guitar first start someone see someone identify playing guitar people play guitar point want like someone else play guitar decide guitar player go local music shop buy used guitar cheaper still cool next one two thing happen either person pick teach guitar book form go youtube start learning play favorite song one try learn favorite song tend better young guitar player motivated learn particular song watch video print tab sheet chord sit try recreate song based video tab available hour practice going chord solo picking patter able play version song quite close enough rock n roll pick another song like another song like along way learn pattern technique without even realizing figure without learning name theory eventually playing guitar feel right picking new song common painless language guitar something speak like speak word happens thousand hour accumulated practice even hour practice day take year self taught programmer well thing really make self taught programmer build thing lot thing become great programmer marketable skill build thing write code taking class learning theory great lot professor code way cardboard box build useful application anyone would want use tried know stuff rather skill professor research theoretical understanding building code delivering value client see difference way best programmer ever worked got good built thing lot thing pretty much time example nowadays everybody brother us wordpress long wordpress built something like different content management system php mysql built game built mobile apps built framework built saas apps nobody paid thing fun learning curiosity taken class year think would really move needle career much yet sat decided build computer language operating system scratch bet learn lot interesting thing along way yes could take class idea learn building something making mistake really feeling experience would reading book listening lecture advice give give huge advantage everyone else mostly solve problem want solve build software cool thing want software someone else want software write code every single day night weekend every day even spend minute fine eventually something work pretty decent build something else keep building building building building invest thousand hour skill challenging build thing building save work put together little portfolio website time finish project submit hacker news reddit whatever blog time could easily put hour developing skill like thing portfolio learned many lesson take class never learn importantly able clearly demonstrate write code solve problem ship something world valuable kind thing company looking land job keep building spare time promoting work rise faster peer go home watch tv learning growing building anything get paycheck go home build learn learn valuable valuable easier get job get paid go build something write code brian p subscribed code career genius yet
444,Lobsters,education,Education,Julia for the Raspberry Pi,https://www.raspberrypi.org/blog/julia-language-raspberry-pi/,julia raspberry pi,julia viral shah gpio sense hat minecraft cambridge python user group julia set juliacon install julia raspberry pi juliaberrygithubio,julia free opensource general purpose programming language made specifically scientific computing combine ease writing highlevel language like python ruby technical power matlab mathematica speed c julia ideal universitylevel scientific programming used research time ago viral shah one language cocreators got touch u raspberry pi foundation say team working port julia arm platform specifically raspberry pi since done sterling work add support arm happy announce added julia raspbian repository raspberry pi model supported julia team port language pi also added support gpio sense hat minecraft find really interesting came visit show u demo took completely different approach sense hat seen simon one julia developer started loading julia logo matrix within jupyter notebook displayed sense hat led matrix matrix transformation sense hat showed effect manipulation viral say combination julia performance pi hardware unlocks new possibility julia pi attract new community drive application university research lab compute module instead shipping data elsewhere advanced analytics simply processed pi julia port arm took since started time llvm arm fully mature bunch people contributing chipping away long time yichao bunch hard work since using experiment folk berkeley race car project also put julia jump selfdriving car giving pretty compelling application think see many application organised intro julia session cambridge python user group earlier week rather everyone install julia jupyter additional module laptop set room full raspberry pi prepared sd card image much easier also meant could use sense hat display output simon kindly led session long using julia generate mandelbrot fractal display sense hat richwareham sense hat mandelbrot fractal julialanguage campython http naturally one attendee rich wareham progressed julia set find code last year juliacon two talk julia pi watch youtube install julia raspberry pi sudo apt update sudo apt install julia install jupyter notebook julia sudo apt install julia sudo install jupyter julia e pkgadd ijulia easily install extra package julia console pkgadd sensehat julia team also created resource website getting started julia pi juliaberrygithubio never story joy julia raspberry pi many thanks viral shah yichao yu tim besard valentin churavy jameson nash tony kelman avik sengupta simon byrne elliott saba work port really excited see people julia raspberry pi look forward welcoming julia programmer raspberry pi community
445,Lobsters,education,Education,Building products with javascript - free open source CC/MIT licensed video course on advanced js,https://github.com/yamalight/building-products-with-js,building product javascript free open source ccmit licensed video course advanced j,building product javascript building product javascript project description expressjs passportjs jwt thinky rethinkdb react redux rxjs tape supertest jest enzyme docker dockercompose cicd gitlabci useful link course building electronjs apps course building data science apps license mit,building product javascript free opensource course repository contains code related material building product javascript course project description simple clientserver crud application allows user ask answer question us expressjs passportjs jwt thinky along rethinkdb backend react redux rxjs frontend backend tested using tape supertest frontend us jest enzyme docker dockercompose used deployment cicd ci cd subprojects done using gitlabci useful link course building electronjs apps second course building electronjs apps found course building data science apps third course building data science apps found license mit
446,Lobsters,education,Education,Train people well enough,http://jpetazzo.github.io/2017/04/26/employee-training-professional-development/,train people well enough,solomon hykes sebastien pahl sam alba huge team one kristie howard talk container scale richard branson aj bowen kristie howard,like tell short story illustrating training employee crucial success organization born raised france worked course native french speaker language well could vaguely get around german written english pretty good good fact people interacting email instant messaging could easily mistake native english speaker spoken english different story though get back soon enough moved san francisco join dotcloud startup eventually became docker engineer coworking space founder den street san francisco extremely thick french accent get much way working dotcloud founder solomon hykes sebastien pahl perfectly fluent french english german well sebastien fellow compatriot sam alba give prop mark erdmann one speak french office back thanks keeping dude one day solomon sister visited office filmed u work shooting documentary tech startup interviewed u realized french accent back put thing mildly awesome countless people including story told multiple time absolutely try change turn said accent thick solomon sister add subtitle speaking ouch know related later solomon encouraged u take english lesson multiple time week english teacher paid company would come office learned word law low fact pronounced differently shocker still thick french accent people understand easily dotcloud became docker sre team managing reduced huge team one borrow word amazing coworker kristie howard considered switching gig accidentally submitted talk container scale conference talk asked repeat beijing moscow speaker career really took gave talk per year docker conversation whether sane healthy thing later post without english lesson able speak many anglophone conference meetups even accent cute want barely intelligible french dude speak conference instead becoming docker first evangelist probably continued build infrastructure fling request cloud api endpoint docker elsewhere end day modest english lesson huge impact valueadd company well said one paragraph moment docker needed adoption traction build community passable speaker deep knowledge product tech behind put dollar amount let know without overstating achievement want believe return investment docker tremendous bigly going conclude joke probably know already cfo asks ceo happens spend money training people leave ceo happens stay want say thing class word richard branson train people well enough leave treat well enough want like thank aj bowen proofreading post remaining mistake typo way looking pythonista also fluent go somebody outstanding interpersonal communication skill willing able write properly documented code somebody great attention detail cli bash completion aj looking remote job get touch discus referral fee also like thank kristie howard suggested change improvement post contributed neverending english education best
447,Lobsters,education,Education,Learning Music (Beta),https://learningmusic.ableton.com/index.html,learning music beta,get started making music,get started making music lesson learn basic music making prior experience equipment required everything right browser get started check box one contains small piece music click box turn playing box discover certain combination like many type music created exactly way mixing matching small musical idea make interesting combination changing combination time combined premade musical pattern next make pattern
448,Lobsters,education,Education,A Better Software Engineering Course (2014),http://third-bit.com/2014/10/02/a-better-software-engineering-course.html,better software engineering course,one helped create icse,taught several university course software engineering year nt happy like professor build course around team project student work small group design build test sizeable ish piece software realized couple year though student nt actually learning wanted learn course putting impossible situation two boss hell five actually quite normal student taking many course faculty nt consult workload deadline result student simply ca nt manage time way tell actually tell u think want hear thing process ca nt taught mentored relatively easy teach lecture nt nearly amenable description experience way convey example working side side nt scale beyond small class without heroic effort neither sustainable transferable raw material missing lot book word software architecture title one helped create ironically leaving academia none actually describe architecture real application similarly book measuring tuning core engineering activity ever material almost never discussed course called software engineering come measuring software talking measuring simply nt kept pace change seen major conference like icse paper new tool routinely report empirical field study tool use ever teach undergraduate software engineering create course could exercise like describe contrast implementation undoredo vim text editor implementation inkscape vector graphic application explain force constraint led difference two asked review paper whose abstract read analyzed piece software ranging size line calculated density design pattern using us pattern class compared value error density e error found customer class correlation conclude using design pattern result better code identify way analysis flawed suspect given database bug report filed closed one release cycle mediumsized java application along archive version control history application combining information two data set determine whether change large method likely contain bug change small method order tackle last student need figure connect bug report commits use code analysis tool measure size method operationalize likely mean likely per method likely per line code likely per commit knowledge knowledge needed question nt important teamwork lot teachable standard classroom learning lot help student succeed real project raise standard industry spent last year teaching scientist program learned programmer lot learn scientist figure working nt start teaching might finally deserve call software engineering
449,Lobsters,education,Education,Textbook manifesto – Students should read and understand textbooks,http://greenteapress.com/wp/textbook-manifesto/,textbook manifesto student read understand textbook,solution translation translated manifesto spanish translated italian free book free book,allen b downey january updated february textbook manifesto simple sound stupid student read understand textbook hard imagine anyone would disagree part find infuriating vast majority textbook author publisher professor student behave expect student read understand textbook work textbook author sit goal writing bible field since meant authoritative usually stick wellestablished idea avoid opinion controversy result book personality publisher primary virtue coverage want book used many class encourage author include material possible class result book personality professor cardinal virtue course material want courseinabox judging email get really want solution exercise unfortunately price usually issue result expensive book personality student virtue irrelevant textbook unreadable usually unread happens professor chooses book assigns student read page week professor spends class time explaining student read long student learn even try result doorstop solution easy opposite everything said author need write book student read understand mean page week page semester long class mean writing actual student imaginary one year ago well prepared actual student publisher know tell role developing distributing textbook longer required publicity business professor choose book student read understand find one write one hard require student read check whether understand among thing reading quiz ask student read chapter ask question student understand blame student understand fix book student go strike textbook cost buy page read excuse bad book translation thanks joshua haase translated manifesto spanish angelo basile translated italian free book thinking writing free book reason suggestion free book
450,Lobsters,education,Education,Tweak,http://www.cs.uni.edu/~wallingf/blog/archives/monthly/2017-05.html#e2017-05-04T16_07_07.htm,tweak,conversation jhumpa lahiri,commonplace book certain world wh auden quote c lewis controversial nature tramslation ranslation nature continuous implicit commentary become le tendentious becoming le translation lewis merely acknowledging truth language translator must point view often point view controversial saw kurt vonnegut speak foreign language class many year ago one student asked thought quality translation done book vonnegut laughed said book peculiar steeped americana translating one akin writing new book said translator deserved royalty book created translating write brand new work memory came mind recently reading tyler cowen conversation jhumpa lahiri especially lahiri said one point talking idea antiquity latin word translator interpreter teach translation talk lot student translation intimate form reading time translating interpreting analyzing one thing mind usually began think computer program like many programmer often find porting program one language another clearly translation vonnegut lahiri tell u also form interpretation port piece code understand meaning express meaning new language language construct idiom pattern set community practice expectation port program one must point view process use lewis word tendentious often refactor code program program written others form translation even though leaf new code written language original refactoring necessarily opinionated act thus tendentious occasionally refactor program order learn case judging original code anything illsuited current state knowledge even get done usually like version better little bit express learned process rewriting code always hard port program without refactoring understand activity kind translation translation nature activity requires point view fall teach translation programming language course writing compiler requires one become intimate specific program behavior compiler must preserve also language end project student know grammar syntax semantics source language close almost personal way target language nt mind student develop strong point view even controversial one along way actually disappointed stronger student part writing new software
451,Lobsters,education,Education,What a Haskell Study Group is Not,http://bitemyapp.com/posts/2017-05-03-what-a-haskell-study-group-is-not.html,haskell study group,,
452,Lobsters,education,Education,You weren’t bad at maths — you just weren’t looking at it the right way,https://hackernoon.com/you-werent-bad-at-maths-you-just-weren-t-looking-at-it-the-right-way-7b11fb0a0982,bad math looking right way,bad math looking right way may mental representation mathematics cypher matrix mathematician see much solitary number source source fundamental theorem arithmetic deepest unresolved problem mathematics source,bad math looking right wayoriginally published junaid mubeen may readsmental representation mathematicswhat mathematics look like see wondrous landscape filled connected idea sprawling mess symbol distinction matter great deal mathematical worldview inextricably tied success subjectwe familiar multiplication grid centrepiece classroom home study world standard multiplication gridyou fault image accuracy bluntness grid seemingly disconnected array factual truth learned memorised recalled trained eye however pattern structure abound cypher even see code anymore matrix mathematician see much solitary numbersperhaps see scaled drawing multiplication grid multiplication grid scale source simple tweak grid beginning speak u conveys size proportion rather numerical output connects otherwise disconnected topic binding together number geometry multiplication areawith deliberate use colour extract different type structure see multiplication grid nested collection smaller grid adding colour multiplication grid source size shape layer reveals new truth often reveals old truth new way see summing first n odd integer result right mental representation key developing mathematical potentialthe road expertise paved hour practice claim malcolm gladwell outlier gladwell claim gross simplification anders ericsson man behind original research set record straight peak duly rebuke gladwell imposing arbitrary threshold hour actually varies within discipline importantly gladwell distinguish different type practice ericsson research weight book premised principle deliberate practicethe chief virtue deliberate practice help u develop rich mental representation preexisting pattern information sit longterm memorythe stronger numerous representation draw connect idea develop intuition solve problemsmental representation anchor u worldview mathematics better sticking oneword title adam grant original lay key characteristic creative genius one characteristic form idea approaching task mathematics stand reason likely solve problem different line attack idea spring mental representationsbut practice created equal mental representation stronger others explains many people leave school fluent fact multiplication without real intuition sense number posse weak representation privilege recall understanding student dripfed multiplication fact collection disconnected truth hardly surprising struggle connect fact broader mathematical theme best mathematician understand multiplication part rich tapestry concept fluency understanding mutually reinforcingmathematics seem lifeless representation weakprime number get respect deserve curriculum many prime simply collection number happen two divisor another item syllabus useful calculating hcfs lcm arbitrary value frequent exam paper mathematician however prime dna subject biological metaphor accident trivialitythe fundamental theorem arithmetic tell u every whole number unique product prime dwell revelation drawn supremacy prime appropriate object shrouded mystery giving rise deepest unresolved problem mathematicsthe fascination prime preserve professional mathematician right mental representation delight intrigue perplex u never seen courtesy daniel finkel daniel finkel prime source finkel advises let grid speak explore pattern play structure sink depth multiplication discover starring role prime play time tablesif math nothing sprawling mess symbol school take solace fact enthralling quite separate universe awaits math replete rich wonderful mental representation kind foster understanding forge connection idea math mathematician fall love withi research mathematician turned educator working nexus mathematics education innovationcome say hello twitter linkedinif liked article might want check following piece subscribe get daily roundup top tech story
453,Lobsters,education,Education,Microsoft May Event,http://event.microsoft.com/MayEvent?cid=precal,microsoft may event,,learn microsoft education microsoftedu
454,Lobsters,education,Education,Temple Grandin on the kinds of minds science desperately needs,https://www.elsevier.com/connect/temple-grandin-on-the-kinds-of-minds-science-desperately-needs,temple grandin kind mind science desperately need,fort collins colorado different people bring different strength unlikely collaborator position hair whorl horse head related temperament like taught superhero movie life book new chapter diversity mind elsevier enable people diverse ability access research empowering knowledge temple grandin autism temple grandin animal science preliminary evaluation effectiveness varying dos supplemental tryptophan calmative horse evaluation welfare cattle housed outdoor feedlot pen animal welfare society concern finding missing link research article compliance large feedyards northern high plain beef quality assurance feedyard assessment auditing animal welfare slaughter plant,fort collins colorado opening day livestock handling class colorado state university prof temple grandin open gate steel maze would guide cattle single file squeeze chute examination used livestock facility around world system designed keep animal calm prevent accidentsas student gather around dr grandin asks first question anyone never touched cow question basic reveals much world dr grandin reality based observation insight gained stroking coarse hair cow noticing cow turn watch frontend loader picking hay across field seeing world picture literally mention cow say photorealistic picture kind cow flash head like google image ability since childhood struggled autism severe would institutionalized mother finding alternative path education teacher recognized temple special need talent mind would turn capacity geniussince autism continued define existence way led uncanny insight mind animal ability see picture sense thing spook waving flag example reflection puddle led create humane livestock handling system recently autism enabled better understand mind people thinking style relate scientific ability understanding led new calling role model mentor school child pursues fervently livestock business longtime autism advocacya day earlier drove three hour way school pueblo colorado spend time fifthgraders talk passion meeting young people especially might trouble finding strength career path lead different people bring different strength interested turning young student say want get kid back hand thing got kid today know use scissors hammer beyond want see find place world science different people bring different strength say try computer programmer pretty stupid going work computer science abstract explains visual thinker brings something important science look method experiment see actual animal see experiment review journal article tend really go method sampling procedure kind animal use people tearing apart statistic notice even tell breed pig used experiment affect result really bad wayshe go recite various breed pig cutting list short emphasize point come observation attention detail say people naturally better others call people visual thinker kind student child usually good art building thing good company world science say mentioning thomas edison nikola tesla jane goodall tend good designing experiment intricate lab equipment science desperately need say unfortunately making science curriculum getting screened rigid math requirement say mentioning challenge posed abstract mathematics like algebra need visual thinker proclaims speaking strong voice dinner table classroom need prevent accident like fukushima put emergency cooling pump generator nonwaterproof basement abstract mathematician mind see water seeping basement flooding electrical equipment talking nuclear science talking electrical stuff run underwater period dr grandin punctuates speech emphasize point much like poke icon iphone harder necessary take call reply email fond iphone us simple interface show value visual thinking scientific process made artist engineer say steve job artist engineer make work collaborating different kind thinker crucial people science say need recognize strength need work together unlikely collaboratorin career spent nearly quarter century collaborating man different background mark deesing afford go college made living knew training horse fitting shoe lack formal education came back haunt came unique theory animal behavior position hair whorl horse head related temperament get anyone take seriously scientific community except dr grandindeesing impressed dr grandin keen observation skill desire scientific research taught two since published research journal book published elsevier genetics behavior domestic animal deesing travel around world building livestock handling facility better animal business alikeon day assist dr grandin class teaching student intricacy design engineering inch mean difference getting cattle walk single file causing get stuck chute narrow lesson start simple ruler explains concept drawing scale making sure scale small enough everything fit page motion livestock system designed say look big would drawn big one inch equal foot paper would big room despite sharing grandin visual acuity penchant detail deesing world apart come daily life autistic yet credit teaching much scientist even though autistic say moral ethical person understands rule human rule ethical behavior rule morality taught ethical person always reminding right proceed people situation example work designing livestock system occasionally owner contractor difficult unwilling follow guidance one instance recall got emotional felt like quitting changed called temple said quit thing going suffer animal kind brought earth saying one simple thing erased negative thinking reminded purpose better life animal client cattle got say right thing right thing cattleas autistic person lack theory mind deesing explains meaning difficult impossible intuit people think act way hard imagine watching interact student stay class talk work answer email business granted small talk business deesing say always see goal line touchdown student get singleminded determination see every question answered every detail covered anything think trying shape way thinking generous share everything know full understanding working like taught superhero class many student animal science major others taking class elective drawn course professor seen movie life read one book bragging neighbor like taught superhero say amber elliott animal equine science major reno nevada understands animal behavior well trying make difference place make everything humane prof grandin passion animal welfare inspires elliott classmate taylor bates always talking get vocal loud tell passionate think really needed industry know lot people worry meat coming animal treated like meat always animal lover know vegetarian cool temple grandin new chapterbut people rather animal become focus dr grandin passion lately embarking new chapter life guiding even younger student find callingi want see young people especially may problem everything know geeky kid come autism meeting could honor student csu engineering like see art kid like want see designing farm implement something working power company need kind people need engineer certain kind mathematical thing got millwright guy actually fix stuffin science say need kind mind diversity mind elsevierunconventional thinker bring new perspective research science seeing key element often overlooked support diversity mind elsevier employing people different thinking style develop tool technology enable people diverse ability access research championing unconventional empower people go beyond obvious inspiring new opportunity science society story people project empowered knowledge invite visit empowering knowledge temple grandin autismdr temple grandin written numerous article scientific journal book many published elsevier sample writing autismelsevier made following book chapter freely available july commentary journal biological psychiatry temple grandin animal sciencehere dr grandin recent article elsevier journal open access freely available july brittany p davis terry e engle jason ransom temple grandin preliminary evaluation effectiveness varying dos supplemental tryptophan calmative horse applied animal behaviour science march open accesstemple grandin evaluation welfare cattle housed outdoor feedlot pen veterinary animal science december open accessgrandin temple animal welfare society concern finding missing link research article meat science november open accesscamille king thomas j smith temple grandin peter borchelt anxiety impulsivity factor associated premature graying young dog applied animal behaviour science december chelsey shivleya temple grandin mark deesing behavioral laterality facial hair whorl horse journal equine veterinary science september christy goldhawk guilherme bond temple grandin ed pajor behaviour bucking bull prior rodeo performance relation rodeo human activity applied animal behaviour science august ruth woiwode temple grandin brett kirch john paterson compliance large feedyards northern high plain beef quality assurance feedyard assessment professional animal scientist december open accesscamille king laurie buffington thomas j smith temple grandin effect pressure wrap heart rate behavior canine diagnosed anxiety disorder journal veterinary behavior clinical application research septemberoctober grandin temple auditing animal welfare slaughter plant meat science september
455,Lobsters,education,Education,Geeking Out in the Golden Years,http://ucsdnews.ucsd.edu/pressrelease/geeking_out_in_the_golden_years,geeking golden year,first known study older adult learning computer programming sigchi chi study pythontutorcom implication pgbovinenet,photo clint evangelistauc san diego design lab philip guo caught coding bug high school fairly typical age millennial le typical uc san diego cognitive scientist eager share passion programming different demographic one thinking elementary middle schoolaged kid guo want get adult age first known study older adult learning computer programming guo outline reason people living working longer growing segment population severely underserved learntocode intiatives usually target college student younger guo want change would like indemand skill become broadly accessible computer everywhere digital literacy becoming important said guo assistant professor department cognitive science also affiliated uc san diego design lab department computer science engineering one time year ago people read write monk select professional could think future people need read write computer language well meantime could benefit learning code guo study recently awarded honorable mention world leading organization humancomputer interaction acm sigchi guo present finding group premier international conference chi may prior humancomputer interaction study focused older adult guo said mostly consumer new technology social networking site like facebook say ridesharing service investigated creation content like blogging making digital music involved use existing apps none knowledge looked older adult maker entirely new software application set learn motivation frustration provided clue design opportunity python tutor tool work showing code diagram courtesy philip guo study study guo surveyed user pythontutorcom webbased education tool guo started python tutor help learning program visualize work step step display computer line code run million people country used python tutor including around world taking moocs massive open online course despite legacy name tool help people supplement study python programming language also java javascript ruby c c commonly used teach programing user python tutor represent wide range demographic group guo survey included people age different country retired semiretired others still working guo discovered older adult motivated learn programming number reason agerelated want make missed opportunity youth percent keep brain challenged fresh sharp age percent percent want connect younger family member reason related age include seeking continuing education current job percent wanting improve future job prospect percent substantial group personal enrichment percent implement specific hobby project idea percent fun entertainment percent general interest interestingly percent said wanted learn teach others topping list frustration older student coding bad pedagogy mentioned percent respondent ranged use jargon sudden spike difficulty level lack realworld relevance came percent time retired physician wrote tutorial offered people must know program seem much training teaching guo surveyed adult age user pythontutorcom learning code mix retired semiretired still working frustration included perceived decline cognitive ability percent human contact tutor peer percent study limitation tied part instrument selfreporting online survey part survey respondent hailed north america englishspeaking nation percent identified male stat consistent survey online learning especially math science topic diverse array occupation reported majority surveyed stem professional manager technician learner guo said likely represent early adopter technologyliterate selfmotivated end general population suggests future study look inperson learning broader swath public expects lesson learned group generalize implication based first set finding using learnercentered design approach guo proposes tailoring computerprogramming tool curriculum specifically older learner note example many respondent seemed take pride year techsavvy may good advertise product targeting age group appear patronizing might make sense reframe lesson braintraining game like lumosity popular among older set key understand learner understanding trouble repetition frequent example might good implement well inperson course videochatbased workshop guo said may lead improvement teaching programming older adult across board context matter lesson compelling put domain people personally care guo recommends coding curriculum enable older adult tell life story family history example write software organizes health information assist caregiver guo currently working study extend coding education underrepresented group advocate computing future fully inclusive age number social implication older adult access computer programming merely computer literacy said range providing engaging mental stimulation greater gainful employment comfort one home moving tech industry away current focus youth guo argues stand gain guo joined uc san diego cognitive science faculty two year assistant professor university rochester received bachelor master degree computer science mit phd stanford becoming professor built online learning tool software engineer google research scientist edx also blog vlogs podcasts pgbovinenet
456,Lobsters,education,Education,Python as a way of thinking,http://allendowney.blogspot.com/2017/04/python-as-way-of-thinking.html,python way thinking,,pmf pmf pmf pmf pmf
457,Lobsters,education,Education,Learnable Programming – Designing a programming system for understanding programs,http://worrydream.com/LearnableProgramming/,learnable programming designing programming system understanding program,online environment cited content thought game feature point make meaning transparent explain context summary read vocabulary make flow tangible make flow visible make time tangible make time visible summary follow flow show data show comparison eliminate hidden state summary see state get something screen soon possible dump part bucket onto floor summary create reacting scrubbing calculator explorable explanation ten brighter idea start constant vary start one make many ladder abstraction summary create abstracting great work read mindstorms identity metaphor early history smalltalk etoys morphic decomposition forth functional programming matter recomposition readability inform coding guideline memorable response training wheel silver bullet mindstorms,trick question get people understand programming khan academy recently launched online environment learning program offer set tutorial based javascript processing language feature live coding environment program output update programmer type work cited inspiration khan system felt respond two thought learning programming way thinking rote skill learning loop learning program learning pencil learning draw people understand see programmer see program ca nt understand thus goal programming system support encourage powerful way thinking enable programmer see understand execution program livecoding processing environment address neither goal javascript processing poorlydesigned language support weak way thinking ignore decade learning learning live coding standalone feature miss point alan perlis wrote understand program must become machine program view mistake widespread virulent mistake keep programming difficult obscure art person machine forced think like one get people understand programming change programming turn something understandable people content concept system split computer head derived wright thought game programming system two part programming environment part installed computer programming language part installed programmer head essay present set design principle environment language suitable learning environment allow learner read vocabulary word mean follow flow happens see state computer thinking create reacting start somewhere sculpt create abstracting start concrete generalize language provide identity metaphor relate computer world decomposition break thought mindsized piece recomposition glue piece together readability word mean feature point often think programming environment language term feature one code folding one type inference like thinking book term word book fortuitous one munificent matter individual word word together convey message likewise welldesigned system simply bag feature good system designed encourage particular way thinking feature carefully cohesively designed around purpose essay present many feature trick see see underlying design principle represent understand principle enable programmer think simple tutorial program learner might face sake comparison example use language khan academy system javascript processing reader make sense code even begin understand work question fill mean number fill mean number ellipse mean unit number range many number khan academy tutorial encourage learner address question randomly adjusting number trying figure thought experiment imagine bought new microwave took box found panel unlabeled button imagine microwave encouraged randomly hit button figured imagine cookbook advised randomly hitting unlabeled button learn cooking make meaning transparent learning cooking guessing functionality kitchen appliance understanding ingredient combined likewise guessing third argument ellipse function nt learning programming simply barrier learning modern environment memorizing minutia api relevant memorizing time table environment responsible making meaning transparent environment must enable reader effortlessly read program decode code concentrate genuine programming concept algorithmic ingredient combine one example programming environment make meaning transparent providing label mouseover control structure labeled well tempting think inline help help simply labeling problem following ui nt lack help feature problem nothing labeled ui exactly informative line code consider code acceptable ui expect programmer look function documentation modern user interface designed documentation typically unnecessary explain context programming environment user interface understanding program especially environment learning environment must designed explain one attribute great explanation often embedded context explaining show well tell instead describing vocabulary mean often show context data following example label connect code output connection especially powerful line code multiple thing summary read vocabulary particular solution shown merely example matter underlying purpose enabling learner read program environment make meaning transparent learner concentrate highlevel concept vocabulary environment explain context show tell annotate data code example one many way achieving goal really matter somehow learner question get answered environment allows learner get hung question environment discourages learner even getting started typical livecoding environment present learner code left output code right code changed output update instantaneously another thought experiment imagine cooking show ruthlessly abbreviated first shown counter full ingredient see delicious soufflé show would understand soufflé made would feel prepared create one course need see ingredient combined need see step programming environment exhibit ruthless abbreviation hypothetical cooking show see code left result right step matter computer trace path code looping around loop calling function updating variable incrementally building output see none people understand thing see touch order learner understand program actually program flow must made visible tangible make flow tangible example program particularly difficult example beginner follow construct three statement single line make control flow jump around bizarrely unnecessarily steep introduction concept looping make flow sane learner loop rewritten using control flow must made tangible must put execution program programmer hand let feel real thing let following example programmer us slider scrub execution control allows programmer move around loop pace understand happening step go backwards forward dwell difficult area compare happening different time study output built time instead seeing magically appear make flow visible example allows programmer follow program execution time peeking pinhole seeing single point time instant visual context illustrate mean two representation trip around neighborhood one neighborhood nt visible one overhead view let person understand trip higher level see shape trip see pattern following example program flow plotted timeline line code executed leaf dot behind programmer take entire flow glance pattern emerge especially helpful presence conditionals form flow control possible novice may initially confused timeline say learning read timeline far valuable general skill learning detail graphic library visualization allows programmer see shape algorithm understand higher level program flow longer one line another pattern line time make time tangible linebyline execution finegrained view time programmer also think time granularity instance animation game run frame rate say sixty frame per second every second program prepares next frame display screen program eventdriven respond external event button click network request performing computation wait next event frame event response form natural way chunking time execution line code like sentence frame like chapter chapter also made tangible programmer understand execution granularity well following example provides timeline exploring linebyline execution slider exploring framebyframe control enables programmer go backwards forward time study interesting frame compare execution across different frame make time visible example peeking pinhole seeing one frame time following example frame lightly overlaid order give context active frame entire path ball seen one deepest powerful idea mathematics relationship differential formulation stepbystep process like draw function integrated form function time plot time flattening time allows learner see process trajectory two representation thing thereby think interchangeably output program longer series fleeting moment seen single solid thing extends time great power way thinking summary follow flow particular solution shown merely example matter underlying purpose enabling learner follow program flow controlling time seeing pattern across time transforming flow invisible ephemeral notion solid thing studied explicitly environment make flow tangible enabling programmer explore forward backward pace environment make flow visible visualizing pattern execution environment represent time multiple granularity frame event response enable exploration across meaningful chunk execution simple program third line declares variable named scalefactor varies iteration loop take moment look line think question value scalefactor take pi scalefactor beginning loop end scalefactor change course loop linearly linearly change get faster slower wait wait minute trying answer question arithmetic head computer somehow drew picture computer must calculated scalefactors seriously recalculating head setting breakpoint like monitoring traffic freeway setting barricade writing console like figuring dog go day following trail droppings imagine scalefactor also depended variable function external input would way easily answer question think expect programmer write code manipulates variable without ever seeing value variable expect reader understand code manipulates variable without ever seeing value variable entire purpose code manipulate data never see data write blindfold read playing pretend dataphantoms imagination one alltime popular programming model spreadsheet spreadsheet dual conventional programming language language show code hide data spreadsheet show data hide code people believe spreadsheet popular twodimensional grid minor factor spreadsheet rule show data information design pioneer edward tufte one primary rule rule principle underlying environment creating understanding show data serious creating programming environment learning number one thing important live coding adjustable constant important narrated lesson discussion forum important badge point ultrapoints anything else show data show data value variable varies time showing data intimately connected showing time previous section presented timeline representation showed data step following example programmer mouse particular row timeline concentrate single line example easy answer first two question skimming execution line code see value scalefactor take however still difficult answer third question variable vary shape change question difficult peeking pinhole seeing single point time edward tufte second rule enough show data must show comparison show comparison data need context rarely enough see single data point isolation understand data comparing data timeline example far used dot represent executed line instead dot show data following timeline show scalefactors almost every line code calculates something environment provide best visualization whatever something example rotate line show rotation fill line set fill color color shown triangle line draw triangle canvas rotated colored timeline show thumbnail triangle produced taken together timeline depicts flow data calculated flow execution program laid bare reader glance see line executed executed produced flow data shown context example loop twenty time possible understand loop say thousand iteration without drowning thousand number yes entire field study devoted depicting large amount number visualize data use standard technique data visualization following example programmer zoom timeline visualization automatically switch table plot eliminate hidden state order understand line code learner must see effect example programmer move iteration triangle line see triangle appear canvas fill line hand set fill color subsequent drawing operation programmer move line effect see see nothing happen fill function modifies hidden state processing graphic library relies heavily implicit state form current fill color stroke color transform matrix code modifies state produce visible effect canvas interactive environment unacceptable two design option one alternative eliminate state example color could passed parameter triangle function alternative show state following example current fill stroke color shown canvas line code change fill color programmer actually see something change making something visible make real state must eliminated shown either reasonable design decision environment neither forcing learner imagine state make sense function produce visible effect irresponsible design disrespectful learner concept transform matrix undoubtably baffling many learner better metaphor need nt logo instance us turtle reify translation rotation child understand readily later current transform matrix particularly critical confusing member state drawing anything interesting processing graphic library requires matrix transforms current transform invisible function scale rotate visible effect compound transformation translation followed scale way around often involve groping blindly trialanderror following example transform visualized effect every function seen directly summary see state code manipulates data understand code learner must see data see effect code data environment must show data line code computes thing thing immediately visible environment must show comparison program computes many thing thing shown context nothing data visualization system must hidden state state either eliminated represented explicit object screen every action must visible effect recently watching artist friend begin painting asked particular shape canvas going said nt sure yet pushing paint around canvas reacting getting inspired form emerged likewise musician nt compose entire melody head write instead noodle around instrument playing pattern reacting hear adjusting sculpting essential aspect painter canvas musical instrument immediacy artist get something react canvas sketchbook serf external imagination artist grow idea birth maturity continuously reacting front programmer contrast traditionally worked head first imagining detail program laboriously coding working head nt scale head hardware platform nt updated million year enable programmer achieve increasingly complex feat creativity environment must get programmer head providing external imagination programmer always reacting workinprogress recently people mistakenly attributed live coding concept new idea certainly idea particularly interesting idea immediateupdate merely prerequisite anything interesting enables feature require tight feedback loop action game low frame rate bad game simply upping frame rate nt magically make game good programming system attempt address socalled live coding environment output update immediately code change example live coding see live coding especially useful programmer still must type least full line code seeing effect mean must already understand line code need write programmer still creative work entirely head imagining next addition program translating code get something screen soon possible live coding however provide foundation feature jumpstart createbyreacting process following example environment offer autocomplete default argument typing couple character programmer immediately see something screen proceed adjust autocomplete common feature programming environment two critical subtlety first function default argument position width height already filled completion complete statement produce visible effect second default completion selected immediately mean programmer thought process example programmer want draw roof house nt need mentally plan draw roof beforehand nt need imagine function would appropriate need vague notion want draw something start typing draw immediately see shape screen point stop imagining start reacting wrong shape shape work better go list turn shape triangle right triangle want different triangle adjusts triangle point rooflike shape roof nt lying house adjusts triangle lower onto house strangely nt actually know apis intentionally designed autocomplete mind know many apis processing designed brevity irrelevant environment good autocomplete example assumed hypothetical graphic library designed autocomplete drawing function begin draw completion list would appear designer intended different way structure library would provide single shape function take type shape triangle ellipse etc argument example could help encourage createbyreacting way thinking drawtriangle drawrect nt vocabulary programmer would never find thinking specific shape function something screen starting point always shape environment user interface working program consider second menu appeared line triangle etc argument take one five value environment provide best interface selecting among value situation programmer user select one five choice would good ui designer represent five choice perhaps like expect anything le programming environment dump part bucket onto floor child probably experience playing construction kit kind lego erector set even block first act starting build child often spread part floor provides simply quick access allows child scan available part get new idea child building lego car might spot wide flat piece decide give car wing second form createbyreacting addition reacting object construction child also reacting part available following example available function located adjacent coding area programmer skim part get idea example encourages programmer explore available function learner would never think try typing bezier function unfamiliar name eight argument easily stumble upon discover example one way representing part bucket programmatic drawing would user interface designer consider best interface drawing picture computer screen following objection might arise point interface even programming really none example section programming typing code draw static shape programming merely cumbersome form illustration becomes genuine programming code abstracted argument variable block code different thing different time next section discus createbyreacting lead createbyabstracting summary create reacting thus need powerful way getting something onscreen powerful way adjusting adjustable value draggable number color palette valuable component latter purpose longtime proponent adjustable value eg scrubbing calculator explorable explanation ten brighter idea however always proposed adjustable number context adjuster already understands meaning number mentioned earlier uncomfortable khan academy approach encouraging learner adjust unlabeled number figure feel case tool adopted without understanding purpose tool serf createbyreacting way thinking could stated start something adjust right programmer must able thinking environment trapped head environment must serve external imagination programmer continuously reacting workinprogress clear relieve programmer thinking simply make thought immediately visible happy composing essay text editor word become visible editable soon think opposed working entirely internally like orator playwright distant past environment must designed get something screen soon possible programmer start reacting requires modeling programmer thought process designing system pick earliest possible seed thought environment must dump part bucket onto floor allowing programmer continuously react raw material spark new idea learning programming learning abstraction computer program list fixed instruction draw rectangle triangle easy enough write easy follow easy understand also make sense would much easier simply draw house hand point learning code way getting computer thing easier directly code generalized beyond specific case change program draw house anywhere ask change program draw many house change house different height critically draw different house single description description still say draw rectangle triangle abstracted different parameter give u different here different there programmer learn write abstract code learn write single description generalized many case nt learner start writing concrete code gradually change introduce abstraction environment must provide tool perform process way learner understand program stage start constant vary createbyabstracting way thinking programmer start creating specific case typically involving constant move general case turning constant variable example environment encourage way thinking starting house earlier programmer want move house different location ca nt move adjusting single number code four different point need change time rectangle origin triangle three point programmer selects one number convert variable connects variable another number dragging one two additional argument triangle need vary well connects variable whose value constant environment offer choice four possible relationship number four expression involve addition subtraction multiplication division respectively one typically either correct relationship good starting point entire process introducing variable start one make many example house abstracted code nt draw one fixed house draw house anywhere abstracted code used draw many different house following example programmer want draw row house selects abstracted code convert loop variable first line selection becomes induction variable programmer adjust bound process starting specific case progressively generalizing first programmer creates house fixed location interactive control individual shape turn house location variable interactive control variable affect many shape introduces loop vary variable interactive control bound loop affect many house affect many shape stage programmer interactive control relevant parameter parameter successively higher level abstraction programmer still create reacting creating reacting higher level instead drawing evenlyspaced row house programmer want individual control house starting variable abstraction selects code convert function duplicating function call obtains several house controlled individually instead identical house want vary height house introduces another variable convert additional argument function ladder abstraction terminology programmer climbed two level ladder abstraction controlled x abstracted x controlled abstracted process consists starting concrete progressively introducing abstraction programmer creates drawing house turn x variable control house position turn x function argument different house different position turn variable control house height turn function argument different house different height summary create abstracting start concrete start grounded start one specific case entirely understood gradually generalize level level way programmer still fully understands program level abstraction fully concrete code micromanaged programmer explicit control every step execution abstraction mean giving control scary learner learner work introduce variable interactively control connect variable another value interactively control turn variable function argument interactively control learner always get experience interactively controlling lowerlevel detail understanding developing trust handing control abstraction moving higher level control code transformation shown example superficial resemblance refactoring supported environment however feature different intent refactoring writing working poorlyorganized code cleaning createbyabstracting writing code specific case generalizing environment must support process typical text editor provides direct support growing outward adding new line code environment must also support growing upward abstracting existing code environment encourage learner start constant vary providing meaningful way gradually seamlessly transitioning constant expression variable expression environment encourage learner start one make many providing way using variable expression higher level function application looping programming system two part environment installed computer language installed programmer head design language critical programmer way thinking design environment best case codesigned inseparable many recent learning environment use javascript processing sake comparison example essay used well neither welldesigned language learning fortunately giant shoulder stand programming system carefully beautifully designed around way people think learn section briefly offer design principle distilled great system past great work canonical work designing programming system learning perhaps greatest book ever written learning general seymour papert mindstorms designing learning system without solid understanding principle book like designing mechanical system without understanding lever gravity reading essay pretty sure need read mindstorms seriously mean going design anything whatsoever related learning literally need read mindstorms fuck sake read mindstorms section make reference four seminal programming system designed learning strongly recommend studying clear advocating using system either historical modern incarnation advocating understanding building insight identity metaphor logo programmer draw picture directing turtle onscreen character leaf trail move watch two minute video child beardy guy talking video seymour papert explaining logo turtle turtle serf number brilliant function important programmer identify figure make turtle perform action programmer ask would perform action turtle example figure draw circle learner walk around circle bit quickly derive circle procedure taking step forward turning bit taking step forward turning bit teaching learner teach computer learner derived implemented differential equation circle without knowing differential equation quote papert logo program intuitive analog differential equation turtle incomputer embodiment programmer self like playercharacter video game thereby allows learner transfer knowledge body knowledge programming every programming language made metaphor fit mind better others standard imperative programming us metaphor assigning variable shuffling bit little box unlike logo turtle metaphor designed resonate people learn understand simply evolved thin layer metaphor used underlying machine architecture storing memory alan kay early history smalltalk assignment statement even abstract one express lowlevel goal human programmer nt turing machine le programming system require turing machine technique better smalltalk like logo also strong resonant metaphor message computation smalltalk represented object sending responding message object order program behavior object programmer cast role object extent referring object self think carrying conversation object powerful metaphor roleplaying conversing powerful innate human facility logo tremendous time thought went crafting honing smalltalk metaphor hypercard program represented stack card programmer drawing object onto card unlike typical programming language object abstract ethereal entity floating inside computer every object hypercard physical presence location particular card seen interacted every object hypercard real thing powerful metaphor allows programmer apply intuition understanding physical world rocky boot structured video game playercharacter moved around directly player pick move object also act power source literally powerful metaphor everything visible tangible electricity abstract voltage reading seen directly orange fire flowing wire beautiful metaphor make trivial follow flow see state processing contrast programmer identity within system strong metaphor allow programmer translate experience person programming knowledge programmer solve programming problem performing real world processing core metaphor painter algorithm computer place series shape screen like drawing paper metaphor carry computational power compute filling pixel computation occurs outside bound metaphor example bouncingball animation simulated property ball position velocity associated picture ball onscreen computed stored abstractly number variable ball merely shadow cast ethereal internal representation ball picked moved told interact object living thing simulation understood thought way number variable weak way thinking example system every onscreen object living tangible thing see etoys morphic decomposition modularity human mind lever complexity breaking complex thing understandable chunk essential understanding perhaps essence understanding programming language must encourage programmer decompose approach complex problem breaking simpler problem papert refers breaking program mindsize bite logo us metaphor teaching turtle new word draw face consisting four circle teach turtle subprocedure drawing circle apply subprocedure four time long careful thought given process learner discovers need subprocedures factor large procedure subprocedures smalltalk essence philosophy decomposition form programming language alan kay inventing object bob barton said basic principle recursive design make part power whole first time thought whole entire computer wondered anyone would want divide weaker thing called data structure procedure divide little computer thousand simulating useful structure smalltalk key insight complex computer program could decomposed smaller computer called object programming smalltalk almost entirely exercise decomposition breaking thought class message forth another language whose extraordinary decomposability valuable study understand almost every computer language provides facility decomposition better others wonderful essay functional programming matter john hughes argues decomposition lie heart power language like haskell writing modular program solve problem one first divide problem subproblems solves subproblems finally combine solution way one divide original problem depend directly way one glue solution together therefore increase one ability modularize problem conceptually one must provide new kind glue programming language functional language provide two new important kind glue key functional programming power allows improved modularization khan academy tutorial mention decomposition function many example program written one long list instruction processing allows logostyle decomposition subprocedures form function definition powerful smalltalkstyle decomposition submodules thought independently supported processing drawing input event tied single entry point toplevel function draw mousedown behavior submodules must tangled across global function clean decomposition possible consider programmer made bouncing ball animation go one ball two hundred make ball bounce one another make ball draggable mouse genuine learning environment etoys progression natural encouraged processing step nightmare needle complexity language discourages decomposition language cripple programmer valuable way thinking recomposition creating remixing large extent new idea old idea new combination programming language must encourage recomposition grabbing part program assembling together modifying building top give creator initial material need create reacting instead facing every new idea blank page also allows creator learn instead deriving technique style vacuum hypercard designed recomposition perhaps still unsurpassed respect bill atkinson fully intended creator assemble program copying pasting object program gradually tweaking customizing every program thus serf part kit creating new program source code embedded individual object form script script use loose relative reference object group related object transplanted much easily successfully system hypercard seen web lamentable creator probably never create website copying pasting graphical object website due technological limitation consequence thoughtless system design many people revere hypercard initiating programming user remix software copy paste thereby subtly transitioning user creator often eventually creator programmer processing lack modularity major barrier recomposition programmer simply grab friend bouncing ball place alongside bouncing ball variable must renamed manually encapsulated draw mouse function must woven together one easily start existing processing program modify language encourage combining two program worse processing dependence global state hinders even simplest form recomposition analogy imagine writing email copy red text website paste email everything else email turn red exactly happen copying pasting line processing code processing way handling color inherently leaky experienced programmer might look example consider programmer error code work error intrinsic programming consequence specific design decision mutable state global variable encapsulation worse yet processing global mode alter meaning function argument following line code set fill color know color trick question impossible know color meaning depends global color mode could color two processing program specify color different color mode combining two program almost hopeless designing system support recomposition demand long careful thought design decision make programming convenient individual may detrimental social creation readability learner must able look line code know mean syntax matter two statement hypercard scripting language equivalent conventional syntax write hello file greeting drag optionkey writefile hello greeting dragmouse optionkey see also inform englishlike language like sometimes accused difficult write since syntax restrictive actual english fault environment programmer nt typing stuff hypertalk happens use englishlike syntax point matter every argument understood context clear hello string greeting filename start end point conventional syntax ambiguous another example programmer might draw ellipse three language canvas ellipse push push push push call ellipse smalltalk argument context processing ellipse exactly cryptic assembly language reader must look memorize every argument significant barrier reading name matter four array method apple cocoa framework equivalent javascript method mutate array return nothing mutate nothing return new array addobject addobjectsfromarray arraybyaddingobject arraybyaddingobjectsfromarray push splice concat concat see amount thought put cocoa naming highly recommend cocoa coding guideline cocoa follows strong grammatical convention immediately convey meaning method verb phrase addobject perform action return nothing noun phrase arraybyaddingobject return noun named generally stateful effect unless name suggests expected argument clearly indicated name smalltalk style addobject take object addobjectsfromarray take array cocoa code thus read least vaguely understood without documentation processing fill stroke read verb although possible intended shorthand noun fill color stroke color library html canvas quartz cairo fill stroke unambiguously verb act accordingly contrast many processing function name grammatically ambiguous misleading many noun ellipse triangle perform action many verb fill stroke programmer construct color using noun color construct image using verb createimage sort linguistic sloppiness inappropriate especially system learning language must parsed people compiler design principle presented essay used checklist evaluate programming system learning environment allow learner read vocabulary meaning transparent meaning explained context showing telling follow flow time visible tangible meaningful granularity see state environment show data show comparison hidden state eliminated create reacting something screen soon possible part bucket floor create abstracting programmer start concrete generalize language provide identity metaphor computer world connected programmer world decomposition programmer break thought mindsized piece recomposition programmer put diverse piece together readability meaning transparent essay suggested feature reference address question question matter answer people defend poorlydesigned system pointing creativity enabled example novice creating lot program khan academy processing system nt mean system worthwhile valuable necessarily people inherently creative manage create even hostile environment nt justify bad design ian bogost particularly memorable response line thinking designing system ca nt answer question time reopen sketchbook design done yet training wheel design principle presented context system learning apply universally experienced programmer may need know statement mean need understand runtime behavior program need understand programming frequent question sort technique presented scale realworld programming reasonable question somewhat like asking internal combustion engine benefit horse question assumes wrong kind change useful attitude programming work like programmer must able read vocabulary follow flow see state programmer create reacting create abstracting assume requirement given requirement redesign programming example many style programming today application launch creates large set interconnected stateful object see effect code change application must relaunched entire world destroyed rebuilt scratch create reacting continuously changing code seeing continuous effect flow data continuity application state change smalltalk model instance state persistent code change nt affect data clojure model code mostly functional small amount carefullymanaged state either model could starting point system continuous code change seen continuous effect future destroytheworld programming ca nt wrong question better question design new programming model allow continuous change already clear hint another example program today manipulate abstract data structure opaque object picture visualize state program wrong question better attitude assert able understand state program ask design data structure visualized invent data structure intended visualized move towards culture visuallyunderstandable data considered sound opaque data regarded way goto today forward reference work done automatic visualization adhoc data structure published later year collaboration viewpoint research influential essay silver bullet fred brook make case software inherently invisible unvisualizable point universal failure socalled visual programming environment nt fault fred brook mistake visual programming thinking indeed little offer visualizes wrong thing traditional visual environment visualize code visualize static structure need understand need understand code visualize data code dynamic behavior static structure maybe nt need silver bullet need take blindfold see firing much thanks star simpson dan amelang dave cerf patrick collison christina cacioppo oliver steele feedback essay essay immune response triggered hearing many time inventing principle live coding seeing many attempt teach programming adorning javascript editor badge mascot please read mindstorms okay
458,Lobsters,education,Education,Learn X in Y Minutes: Scenic Programming Language Tours,https://learnxinyminutes.com/,learn x minute scenic programming language tour,learn x minute scenic programming language tour learn x minute github cc bysa adam bard handsome web developer,ang enus xml lang enus xmlns http learn x minute scenic programming language tour learn x minute highlight language enus arar bgbg caes cscz dede elgr es fair fifi frfr hd huhu idid inta itit jajp kokr lsf ltlt msmy nlnl nonb plpl ptbr ptpt roro ruru sksk slsi svse tain thth trtr ukua vivn zhcn zhtw select theme light dark take whirlwind tour next favorite language communitydriven want add favorite language list head github send pull request article original author contributor licensed cc bysa license made adam bard handsome web developer
460,Lobsters,education,Education,Chris Smith: CodeWorld - Teaching Haskell to Children,https://www.youtube.com/watch?v=7CGuI9HcfqQ,chris smith codeworld teaching haskell child,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature chris smith codeworld teaching haskell child youtube,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature chris smith codeworld teaching haskell child youtube
461,Lobsters,education,Education,Stanford CS department updates introductory courses: Java is Gone,https://computinged.wordpress.com/2017/04/21/cs-department-updates-introductory-courses-java-is-gone/,stanford c department update introductory course java gone,stanford c department update introductory course java gone april stanford switching java javascript mistaken philip guo showed top c department moving python final spreadsheet result c department update introductory course stanford daily addendum like uncategorized computing education java programming language python,stanford c department update introductory course java gone april see update stanford switching java javascript mistaken stanford decided move away java intro course surprisingly decided move javascript philip guo showed top c department moving python stanford daily article linked address language considered sigcsemembers list recently polled member talk currently teaching final spreadsheet result python appears time c time java time javascript time surprised see common c java dying showing age eric robert quoted going reigning champ java came computer science faculty excited transition new language robert wrote textbook worked faculty member restructure course assignment introduced java stanford java stabilized robert said clear many university going direction java showing age according robert java intended early language internet decade transition java javascript taken place web language source c department update introductory course stanford daily addendum see nick parlante comment javascript version experiment people talked stanford read article quoted decade transition java javascript taken place believe stanford ending java leaving title asis offered marty stepp still predominantly java one year post new blog post admitting wrong someone remind april please like like loading related entry filed uncategorized tag computing education java programming language python
462,Lobsters,education,Education,"Finally, NASA has its universe of images in one happy, searchable place",https://arstechnica.com/science/2017/04/finally-nasa-has-its-universe-of-images-in-one-happy-searchable-place/,finally nasa universe image one happy searchable place,enlarge end result gu grissom,space shuttle atlantis july nasa kennedy space center cape canaveral fla favorite image nasa collection nasa astronaut edward h white ii pilot geminititan spaceflight shown egress spacecraft first american walk space nasa far side moon illuminated sun cross discovr spacecraft earth polychromatic imaging camera camera telescope million mile away nasanoaa image show composite view crab nebula iconic supernova remnant milky way galaxy viewed herschel space observatory hubble space telescope esaherschelpacsmess nasa esa allison lolljeff hester hubble space telescope observes aurora jupiter nasa esa j nichols astronaut john w young commander apollo lunar landing mission leap lunar surface salute united state flag descartes landing site nasa image nasa galaxy evolution explorer observation large galaxy andromeda messier andromeda galaxy massive local group galaxy includes milky way nasajplcalifornia institute technology view mast camera mastcam nasa curiosity mar rover show outcrop finely layered rock within murray butte region lower mount sharp nasajplcaltechmsss view jupiter taken voyager image taken color filter recombined produce color image photo assembled three black white negative image processing lab jet propulsion laboratory nasajpl nasa astronaut sunita williams expedition flight engineer appears touch bright sun mission third session extravehicular activity four image new horizon long range reconnaissance imager lorri combined color data spacecraft ralph instrument create enhanced color global view pluto picture neptune produced last whole planet image taken green orange filter nasa voyager narrow angle camera nasajpl saturn two moon tethys dione photographed voyager november million kilometer million mile nasajpl internet came along like lot government agency nasa kind scratched head wondered make freely shared information unlike lot agency nasa trove image audio video general public wanted see agency sent people moon taken photo every planet solar system launched hubble space telescope nasa field digitizing photo archive putting online johnson space center houston example thousand image space shuttle astronaut training flying space kennedy space center launch photo jet propulsion laboratory planet ring comet unfortunately image spread across dozen nasagov site good way search different database honest pretty frustrating lot knowledge nasa know particular image might said rodney grubbs imagery program manager nasa space agency made effort commercial company organize image collection grubbs mistake made result something helped u said year ago nasa tried working company called infozen challenge nt quite landing human moon consolidating image video audio file existed collection exactly simple challenge first task involved getting everyone various center board project difficult center publishing photo web two decade way grubbs commercial partner create common metadata system weed duplicate photo government needed find cloud infrastructure met security protocol one aspect enabled project completely cloudbased nasa need make hardware investment infozen chief executive raj ananthanpillai told ar nasa library implemented immutable infrastructure code cloud native architecture using aws service make extremely responsive user experience public image asset propagated around world enlarge gu grissom approach mercuryredstone launch vehicle begin mission left view emergency shower stall right elevator take grissom capsule nasa end result pretty spectacular simple interface allows snappy searching nasa best image audio file video search narrowed year tried searching astronaut gu grissom result returned dozen image several never seen far review new site pleasantly positive grubbs said snarky world internet people pretty cruel given scope number eyeball nt really receive anything terribly snarky course usual question alien picture listing image nasa
463,Lobsters,education,Education,Investigation finds inmates built computers and hid them in prison ceiling,http://wjla.com/news/nation-world/investigation-finds-inmates-built-computers-and-hid-them-in-ceiling-at-marion-prison-04-11-2017,investigation find inmate built computer hid prison ceiling,,
464,Lobsters,education,Education,Two Very Different Kinds of Student,http://www.cs.uni.edu/~wallingf/blog/archives/monthly/2017-04.html#e2017-04-07T13_33_26.htm,two different kind student,john mcphee art nonfiction back reporter new yorker,weekend enjoyed peter hessler interview mcphee paris review john mcphee art nonfiction direct quote blog nt remember nt blame neither remember blogging mcphee back read paris review piece last sunday recollection reading sense déjà vu sometimes memory like mine blessing occasionally get read something first time read blog get read first impression second time like story mcphee told bob bingham editor new yorker bingham writerreporter reporter magazine come work new yorker fact editor within first two year go lunch old highschool friend gore vidal gore say editor bobby happened bob bingham writer bingham say well decided would rather firstrate editor secondrate writer gore vidal draw say wrong secondrate writer hear faux indignation vidal voice mcphee talked bit struggle several year write series book geology grown idea oneshot talk town entry interviewer asked ever thought abandoning topic moving something might enjoy mcphee said funny thing get certain point ca nt quit always worried quit quit way go forward learn way write way know feeling sometimes really need quit something move always wonder whether quitting time make easier next time sometimes need stick mcphee say learn way difficulty easy answer knowing quitting right thing toward end interview conversation turned course mcphee teach princeton called literature fact university first asked teach short notice christmas break accepted immediately everyone thought good idea one dear friend english teacher deerfield told said teacher dime dozen writer nt guess productive writer since started teaching would nt taught overall crop rotation complementary job looking people writing pressure go back quite fresh know lot academic feel way lot easier stay fresh one creative work one mcphee teaching schedule rather full load course schedule teach six month thirtysix good lord leaf lot time writing right indeed indeed reading interview marked two passage wrote last time one came soon response interacting student reward great line difference mastering technique something say demonstrated know saddle horse go find horse said unconsciously channeled line mcphee yesterday writing teach writing recruitment event campus meeting dozen prospective student entourage talking curriculum said word senior project course student generally like course even though find difficult student never write big program course several month harder look people hire graduate like course know course place student really begin learn program course remark said something effect learn lot programming class study language technique theory ultimately learn write software writing software project course couple experienced programmer audience nodding head know mcphee right
466,Lobsters,education,Education,RoboZZle online puzzle game,http://www.robozzle.com/js/index.aspx,robozzle online puzzle game,,
468,Lobsters,education,Education,Teaching Parallel and Distributed Computing Concepts Using a Meme-Based Programming Language,https://arxiv.org/pdf/1703.10242.pdf,teaching parallel distributed computing concept using memebased programming language,,obj endobj obj stream version applicationpdf microsoft word jamesaltonross acrobat distiller window uuid endstream endobj obj endobj obj endobj obj endobj obj endobj obj endobj obj endobj obj endobj obj endobj obj endobj obj stream ݍ q c f煔ـa e c n j bd n b
469,Lobsters,education,Education,CMU 15-816: Substructural Logics,http://www.cs.cmu.edu/~fp/courses/15816-f16/index.html,cmu substructural logic,substructural logic first lecture tue aug prerequisite prior version course class material course information tue oct mon dec http learning objective topic schedule assignment resource frank pfenning,substructural logic fall frank pfenning tuth ghc unit first lecture tue aug graduate course provides introduction substructural logic linear ordered affine bunched separation logic emphasis application computer science includes design theory programming construct concurrent messagepassing computation technique specifying reasoning programming language form substructural operational semantics prerequisite introductory graduate course formal prerequisite exposure functional programming type system may helpful enterprising undergraduate welcome attend course prior version course class material course information lecture tue thu ghc office hour mon ghc thu ghc course communicaity note textbook lecture note paper posted credit unit grading homework midterm final homework weekly homework assigned thursday due following thursday late homework accepted exceptional circumstance midterm tue oct class closed book final mon dec ghc closed book home http learning objective taking course student able model stateful concurrent resourceaware system substructural logic define reason programming language using substructural operational semantics capture computational phenomenon advanced substructural type theory apply judgmental method define logic type theory rich variety application appreciate deep philosophical underpinnings elegance computationasproofreduction computationasproofconstruction paradigm topic many topic tentative depending pace course participant interest deductive inference substructural hypothetical judgment inference rule proposition back judgmental independence principle ordered linear affine strict persistent hypothesis harmony cut elimination concurrent computation cut reduction sessiontyped messagepassing concurrency substructural operational semantics concurrent cost semantics combining logic adjunction polarization focusing computation proof construction substructural logical framework resource semantics logical embeddings automaton logical fragment substructural characterization complexity class lambek calculus categorial grammar classical linear logic even tenative bunched logic resource semantics separation logic imperative computation modeling protein interaction network home schedule assignment resource fp c frank pfenning
470,Lobsters,education,Education,"A review of Learn Python the Hard Way, 3rd ed",http://bitemyapp.com/posts/2017-03-25-review-learn-python-hard-way.html,review learn python hard way ed,,
471,Lobsters,education,Education,Metacademy: How to learn on your own,https://metacademy.org/roadmaps/rgrosse/learn_on_your_own,metacademy learn,want learn something outside school context metacademy humanity social science foreign language read book unschooling people test prep learn specific technical topic interested nt recipe experiment figure learn type resource textbook mit opencourseware list massive open online course moocs report course note mit opencourseware research paper bleeding edge paper highly cited paper review paper trend cognitive science foundation trend machine learning searching title author google scholar consult multiple resource motivation fail finish moocs signed ancestral environment obstacle motivation little intrinsic motivation response various constraint nt apply teaching yoruself learn topic interested learning godel incompleteness theorem eat dessert first reward come learning nt get feedback khan academy metacognition test understanding parallel reading confusion notation reflects underlying confusion idea rationality checklist learning math come several example try prove theorem try coming back next day incubation mathematical maturity blog post moore method memory blog post memorization looking pattern go hand hand evidence mnemonic memory trick spaced repetition collection resource supermemo anki mnemosyne gwern miscellaneous art learning josh waitzkin deliberate practice learning learn book,case want learn something outside school context maybe need pick skill job hobby maybe read something surprising newspaper want know detail maybe starting research wondering going make sense paper unfortunately today educational system college micromanages learning process thereby little prepare independent study go learning something new site metacademy tool help learn thing primarily machine learning probabilistic ai perhaps frustrating part teaching tracking prerequisite concept finding resource learn metacademy tackle using dependency graph concept give stepbystep plan learn particular thing prerequisite one piece puzzle though roadmap meant help fill rest puzzle phd perhaps part educational system expected manage education learn topic anyone around including advisor recently finished phd machine learning grapple issue phd good practice selfdirected learning people rarely seem write explicitly learned roadmap collection various piece advice based experience thing roadmap cover humanity social science foreign language value cultured wellread nt particular advice area say oriented towards stem subject maybe related area cognitive science goal generally wellread might want check read book unschooling managing education entirety tall order people manage admire initiative taken hope metacademy contribute making possible went traditional education advice offer either roadmap oriented towards people something specific want learn test prep need take mcats next week lot resource assuming real desire learn something either sake need end short roadmap really learn specific technical topic interested highlight various strategy used well resource found useful let insert major caveat nt recipe learning different people different learning style worked might work ultimately need experiment figure learn type resource various option learn obviously textbook pretty important find good one good strategy check course web page top university see assignedrecommended mit opencourseware especially comprehensive collection course reading list airelated subject miri compiled pretty good list massive open online course moocs despite hype moocs disrupting traditional education see like textbook format lecture video reason make big difference selfdirected learning unlike textbook delivered free charge make easy mixandmatch video course video one actually pretty amazing think according report cost produce typical mooc yet university giving away free enjoy last course note lecture note posted online lot course especially mit opencourseware upside note often concise textbook downside typically le polished especially majority case transcribed student homework assignment research paper advanced topic might textbook mooc cover adequately need turn academic literature field physic computer science pretty good making research publication openly available others nt access university library hosed unless actually research particular field probably wo nt want read bleeding edge paper topic naturally least well understood paper optimized readability one strategy look highly cited paper citation count deeply flawed lot way provide rough measure impact highly cited paper average considerably readable random paper field journal publish review paper eg trend cognitive science foundation trend machine learning sort intermediate textbook research paper good way get speed important result past decade nt yet found way textbook university find given paper locked behind absurdly expensive paywall try searching title author google scholar often even paper closed access author still allowed post least preprint openly web page good advice reading research paper good general piece advice consult multiple resource different textbook course explain something different perspective often reading one get aha moment something nt make sense unfortunately option might practical unless access university library motivation learning thing take energy willpower lot talk student fail finish moocs signed want learn something keep motivated maybe first ask hard keep motivated part answer technical subject inherently challenging pretty different anything ancestral environment learning technical subject happened school way structured likely presented obstacle motivation student set aside decade two life learn least pretend learn thing long idea need know student little control course study since educational system process far many student able personalize curriculum even college level course bulletin provide almost guidance class cover useful lest many tree killed choice topic favor thing easily tested rote manipulation since whole class must progress curriculum rate impossible go back repair gap student knowledge mean workable strategy rehearse topic endlessly moving next one ultimately school result series compromise allow adequate amount learning without overburdening society resource unfortunately compromise mean often little intrinsic motivation learn material hence need external motivator like mandatory homework exam keep structure school remove external motivator case moocs grade basically nt matter certainly hard stay motivated consider total amount time spend semester college course would somewhere hour hard put amount time activity absence strong motivator notice item list response various constraint nt apply teaching yoruself nt go topic linearly go back repair gap knowledge plenty time learn thing interested working linearly convex optimization textbook someone told learn convex optimization want machine learning think whether copying structure school closely main way stay motivated learn topic interested learning maybe someone told crazy result like godel incompleteness theorem convinced got catch maybe need learn something solve problem job hobby intrinsically motivated hand simply think learn something much motivator course thing want learn might prerequisite case reasonable strategy eat dessert first suppose open logic textbook section godel incompleteness theorem probably get gist idea lot thing wo nt make sense heck encode proof number statement natural number true model others confusion thing serve motivator go back learn topic earlier book needing intrinsic motivation applies even boring thing like pencilandpaper manipulation might encounter situation hard time solving problem since nt comfortable basic trick like integration part reason go back practice none make easy learn thing still require energy discipline difference reward come learning rather indefinite point future clear previous source confusion finally master skill frustrating get nice aha feeling learning without teacher present many challenge experience biggest nt get feedback unless using service interactive exercise khan academy without feedback need monitor understanding decide done gap still need filled ability introspect manage thought process known metacognition read textbook listen lecture easy trick thinking understand ca nt directly observe state understanding need find way test understanding instance try write definition theorem proof etc memory exercise try explain idea word might might official answer check least get sense subjective difficulty thing also benefit giving concrete feeling accomplishment succeed might experience reading mind wandered completely missed everything last paragraph hard notice lack attention one trick found make obvious parallel reading read two different possibly unrelated thing parallel read paragraph one paragraph time switch try recall previous stretch text switching force working memory kind store word image short time therefore find whether material actually made longterm memory ironically challenge selfdirected learning also make metacognition easier way good lecturer often try structure material point seems follow naturally previous one make idea appear obvious maybe wo nt find obvious later reconstruct textbook usually nt problem degree similarly good teacher endeavor make notation clean consistent possible make easier remember formula push symbol around course use notation crutch might stumble apply idea different context studying using multiple resource clash notation might confusing often find confusion notation reflects underlying confusion idea confront multiple notation ultimately help understanding center applied rationality cfar put together nice rationality checklist despite name really metacognition checklist lot point relevant learning learning math mathematical topic tricky learn high level abstraction required lot math textbook terse give little way example motivation expected fill gap learn new definition come several example typical example edge case find theorem stated abstract try plugging example see make sense statement polynomial imply linear function quadratic theorem make set assumption try coming example assumption violated conclusion theorem false another important strategy try prove theorem lot reason test understanding concept previously covered get practice problem solving force develop mental representation concept read proof spot key insight easily succeed using different method book learn related better intuitive understanding theorem true therefore likely remember get stuck nt making progress try coming back next day often magically seems easier one theory interim brain subconsious processing known incubation maybe better rested addition learning mathematical concept also want develop mathematical maturity general level comfort mathematical notation proof technique formulating conjecture mostly something come time also resource talk skill directly useful link nate soares interesting blog post experience reading lot math book short time period moore method method teaching math based idea learn working proof memory trying learn math programming anything closely related try much rote memorization get familiar concept using interestingly lot pure math course college expect student able reproduce proof course time pressured exam give nt memorization supposed bad way learn actually method make lot sense since pretty much impossible literally memorize every proof basically memorize one two key step comfortable enough routine manipulation fill rest detail field medalist tim gowers nice blog post mathematics memorization looking pattern go hand hand interestingly evidence early day science mnemonic seen memory tool way discover new regularity nature area like biology probably would need fair amount memorization good book talk mnemonic memory trick one potentially useful tool memorization spaced repetition idea enter flash card software package determines present one card scheduled according formula whereby time get card right time interval raised factor whereas get wrong interval reset one day piotr wozniak pioneer spaced repetition big collection resource fairly thorough literature review software package include supermemo anki mnemosyne personally found spaced repetition seems work well remembering simple thing definition statement theorem long period time silver bullet though substitute understanding major downside take fair amount time make card another problem wind relying irrelevant cue wording card reviewing card also take time much think long keep card simple gwern simple rule thumb derived consequence scheduling formula nt use spaced repetition fact worth le five minute need le five day miscellaneous link art learning memoir polymath josh waitzkin advice learn skill deliberate practice refers set technique structuring practice time way focus component skill result immediate feedback see ericsson et al role deliberate practice acquisition expert performance terry sejnowski barbara oakley writing teach coursera course learning learn accompanying book nt looked professor sejnowski leading figure neuroscience could turn quite good
472,Lobsters,education,Education,Unpaywall: Get full-text of research papers as you browse,http://unpaywall.org/,unpaywall get fulltext research paper browse,sorry website nt work properly without javascript enabled please enable continue,sorry website nt work properly without javascript enabled please enable continue
473,Lobsters,education,Education,"20,000 Worldclass University Lectures Made Illegal, So We Irrevocably Mirrored Them",https://lbry.io/news/20000-illegal-college-lectures-rescued,worldclass university lecture made illegal irrevocably mirrored,update looking access video check ucberkeley channel lbrytv download app go lbry ucberkeley access http lbrytv lbry ucberkeley faq discord chat legal creative common perfect content lbry play evil pew pew bang bang,update looking access video check ucberkeley channel lbrytv download app go lbry ucberkeley today university california berkeley deleted college lecture youtube channel berkeley removed video lawsuit brought two student another university american disability act copied making permanently available free via lbry make video freely available discoverable without reliance one entity provide even u full catalog tb synced next several day access download install lbry app use web version http lbrytv go lbry ucberkeley access ucberkeley channel simply type ucberkeley search bar top hit enter entry ucberkeley channel course videoaudio claim page content streamed downloaded locally feel free keep exploring lbry application sure check faq want learn contribute lbry join u discord chat follow along journey revolutionizing digital content sharing monetization legal almost certainly vast majority lecture licensed creative common license allows attributed noncommercial redistribution price content set free lbry metadata attribute uc berkeley additionally believe content legal first amendment perfect content lbry archive team also backed lecture using traditional method publishing lbry offer greater openness usability robustness lbry first truly free censorshipresistant way exchange content lbry protocol provides completely decentralized network discovering distributing publishing type content information book movie publishing lecture lbry content metadata written public blockchain making permanently public robust interference content data hosted via peertopeer data network offer economic incentive ensure data remains viable superior centralized manual hosting vulnerable technical failure form attrition play evil pew pew bang bang
